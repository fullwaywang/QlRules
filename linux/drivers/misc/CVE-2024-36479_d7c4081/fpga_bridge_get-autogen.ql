/**
 * @name linux-d7c4081c54a1d4068de9440957303a76f9e5c95b-fpga_bridge_get
 * @id cpp/linux/d7c4081c54a1d4068de9440957303a76f9e5c95b/fpga-bridge-get
 * @description linux-d7c4081c54a1d4068de9440957303a76f9e5c95b-drivers/fpga/fpga-bridge.c-fpga_bridge_get CVE-2024-36479
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		obj_0.getLValue().(VariableAccess).getType().hasName("fpga_bridge *")
		and obj_0.getRValue() instanceof FunctionCall
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_1(Variable vbridge_dev_128, NotExpr target_4, FunctionCall target_3, Function func) {
exists(IfStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getCondition() |
		obj_0.getTarget().hasName("IS_ERR")
		and obj_0.getArgument(0).(VariableAccess).getType().hasName("fpga_bridge *")
	)
	and exists(ExprStmt obj_1 | obj_1=target_1.getThen() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getTarget().hasName("put_device")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vbridge_dev_128
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_3(Parameter vinfo_126, Variable vbridge_dev_128, FunctionCall target_3) {
	target_3.getTarget().hasName("__fpga_bridge_get")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vbridge_dev_128
	and target_3.getArgument(1).(VariableAccess).getTarget()=vinfo_126
}

predicate func_4(Variable vbridge_dev_128, NotExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vbridge_dev_128
}

from Function func, Parameter vinfo_126, Variable vbridge_dev_128, FunctionCall target_3, NotExpr target_4
where
not func_0(func)
and not func_1(vbridge_dev_128, target_4, target_3, func)
and func_3(vinfo_126, vbridge_dev_128, target_3)
and func_4(vbridge_dev_128, target_4)
and vinfo_126.getType().hasName("fpga_image_info *")
and vbridge_dev_128.getType().hasName("device *")
and vinfo_126.getFunction() = func
and vbridge_dev_128.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
