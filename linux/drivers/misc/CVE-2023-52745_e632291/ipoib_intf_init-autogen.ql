/**
 * @name linux-e632291a2dbce45a24cddeb5fe28fe71d724ba43-ipoib_intf_init
 * @id cpp/linux/e632291a2dbce45a24cddeb5fe28fe71d724ba43/ipoib-intf-init
 * @description linux-e632291a2dbce45a24cddeb5fe28fe71d724ba43-drivers/infiniband/ulp/ipoib/ipoib_main.c-ipoib_intf_init CVE-2023-52745
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrc_2184, Parameter vdev_2180, VariableAccess target_4, EqualityOperation target_5, ExprStmt target_6) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_2184
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("netif_set_real_num_tx_queues")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_2180
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_5.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vrc_2184, VariableAccess target_4) {
exists(IfStmt target_1 |
	target_1.getCondition().(VariableAccess).getTarget()=vrc_2184
	and target_1.getThen().(GotoStmt).getName() ="out"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4)
}

predicate func_2(Variable vrc_2184, Parameter vdev_2180, VariableAccess target_4, ExprStmt target_7) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_2184
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("netif_set_real_num_rx_queues")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_2180
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(7)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vrc_2184, VariableAccess target_4, ReturnStmt target_8) {
exists(IfStmt target_3 |
	target_3.getCondition().(VariableAccess).getTarget()=vrc_2184
	and target_3.getThen().(GotoStmt).getName() ="out"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(8)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_3.getCondition().(VariableAccess).getLocation().isBefore(target_8.getExpr().(VariableAccess).getLocation()))
}

predicate func_4(Variable vrc_2184, BlockStmt target_9, VariableAccess target_4) {
	target_4.getTarget()=vrc_2184
	and target_4.getParent().(IfStmt).getThen()=target_9
}

predicate func_5(Variable vrc_2184, EqualityOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vrc_2184
	and target_5.getRightOperand().(UnaryMinusExpr).getValue()="-95"
}

predicate func_6(Variable vrc_2184, Parameter vdev_2180, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_2184
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("rdma_init_netdev")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ib_device *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("const char *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(Literal).getValue()="0"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(VariableAccess).getTarget()=vdev_2180
}

predicate func_7(Parameter vdev_2180, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="rn_ops"
	and target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ipoib_dev_priv *")
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="netdev_ops"
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_2180
}

predicate func_8(Variable vrc_2184, ReturnStmt target_8) {
	target_8.getExpr().(VariableAccess).getTarget()=vrc_2184
}

predicate func_9(Variable vrc_2184, BlockStmt target_9) {
	target_9.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vrc_2184
	and target_9.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-95"
	and target_9.getStmt(0).(IfStmt).getThen().(GotoStmt).getName() ="out"
	and target_9.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="send"
	and target_9.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("rdma_netdev *")
}

from Function func, Variable vrc_2184, Parameter vdev_2180, VariableAccess target_4, EqualityOperation target_5, ExprStmt target_6, ExprStmt target_7, ReturnStmt target_8, BlockStmt target_9
where
not func_0(vrc_2184, vdev_2180, target_4, target_5, target_6)
and not func_1(vrc_2184, target_4)
and not func_2(vrc_2184, vdev_2180, target_4, target_7)
and not func_3(vrc_2184, target_4, target_8)
and func_4(vrc_2184, target_9, target_4)
and func_5(vrc_2184, target_5)
and func_6(vrc_2184, vdev_2180, target_6)
and func_7(vdev_2180, target_7)
and func_8(vrc_2184, target_8)
and func_9(vrc_2184, target_9)
and vrc_2184.getType().hasName("int")
and vdev_2180.getType().hasName("net_device *")
and vrc_2184.(LocalVariable).getFunction() = func
and vdev_2180.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
