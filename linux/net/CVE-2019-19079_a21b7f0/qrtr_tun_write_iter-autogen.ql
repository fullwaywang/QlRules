/**
 * @name linux-a21b7f0cff1906a93a0130b74713b15a0b36481d-qrtr_tun_write_iter
 * @id cpp/linux/a21b7f0cff1906a93a0130b74713b15a0b36481d/qrtr-tun-write-iter
 * @description linux-a21b7f0cff1906a93a0130b74713b15a0b36481d-net/qrtr/tun.c-qrtr_tun_write_iter CVE-2019-19079
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vkbuf_81, NotExpr target_3, ExprStmt target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkbuf_81
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vkbuf_81, ExprStmt target_4, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkbuf_81
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(NotExpr target_3, Function func, ReturnStmt target_2) {
		target_2.getExpr().(UnaryMinusExpr).getValue()="-14"
		and target_2.getParent().(IfStmt).getCondition()=target_3
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vkbuf_81, NotExpr target_3) {
		target_3.getOperand().(FunctionCall).getTarget().hasName("copy_from_iter_full")
		and target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkbuf_81
		and target_3.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("size_t")
		and target_3.getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("iov_iter *")
}

predicate func_4(Variable vkbuf_81, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ssize_t")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("qrtr_endpoint_post")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ep"
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("qrtr_tun *")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vkbuf_81
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("size_t")
}

from Function func, Variable vkbuf_81, ReturnStmt target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(vkbuf_81, target_3, target_4)
and not func_1(vkbuf_81, target_4, func)
and func_2(target_3, func, target_2)
and func_3(vkbuf_81, target_3)
and func_4(vkbuf_81, target_4)
and vkbuf_81.getType().hasName("void *")
and vkbuf_81.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
