/**
 * @name linux-458bb83119dfee5d14c677f7846dd9363817006f-preempt_fence_work_func
 * @id cpp/linux/458bb83119dfee5d14c677f7846dd9363817006f/preempt-fence-work-func
 * @description linux-458bb83119dfee5d14c677f7846dd9363817006f-drivers/gpu/drm/xe/xe_preempt_fence.c-preempt_fence_work_func CVE-2024-44956
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcookie_15, ExprStmt target_1, ExprStmt target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("dma_fence_end_signalling")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcookie_15
	)
	and target_0.getLocation().isBefore(target_1.getLocation())
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="vm"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("xe_exec_queue *")
		)
		and obj_0.getTarget().hasName("xe_vm_queue_rebind_worker")
	)
	and target_1.getEnclosingFunction() = func
}

from Function func, Variable vcookie_15, ExprStmt target_0, ExprStmt target_1
where
func_0(vcookie_15, target_1, target_0)
and func_1(func, target_1)
and vcookie_15.getType().hasName("bool")
and vcookie_15.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
