/**
 * @name linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-mvneta_ethtool_pp_stats
 * @id cpp/linux/ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed/mvneta-ethtool-pp-stats
 * @description linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-drivers/net/ethernet/marvell/mvneta.c-mvneta_ethtool_pp_stats CVE-2023-52780
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpp_4913, Variable vi_4916, ValueFieldAccess target_2, PostfixIncrExpr target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(ValueFieldAccess).getTarget().getName()="page_pool"
	and target_0.getCondition().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rxqs"
	and target_0.getCondition().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpp_4913
	and target_0.getCondition().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_4916
	and target_0.getThen() instanceof ExprStmt
	and target_0.getCondition().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpp_4913, Variable vstats_4915, Variable vi_4916, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("page_pool_get_stats")
	and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="page_pool"
	and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rxqs"
	and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpp_4913
	and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_4916
	and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vstats_4915
}

predicate func_2(Parameter vpp_4913, Variable vi_4916, ValueFieldAccess target_2) {
	target_2.getTarget().getName()="page_pool"
	and target_2.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rxqs"
	and target_2.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpp_4913
	and target_2.getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_4916
}

predicate func_3(Variable vi_4916, PostfixIncrExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vi_4916
}

from Function func, Parameter vpp_4913, Variable vstats_4915, Variable vi_4916, ExprStmt target_1, ValueFieldAccess target_2, PostfixIncrExpr target_3
where
not func_0(vpp_4913, vi_4916, target_2, target_3)
and func_1(vpp_4913, vstats_4915, vi_4916, target_1)
and func_2(vpp_4913, vi_4916, target_2)
and func_3(vi_4916, target_3)
and vpp_4913.getType().hasName("mvneta_port *")
and vstats_4915.getType().hasName("page_pool_stats")
and vi_4916.getType().hasName("int")
and vpp_4913.getFunction() = func
and vstats_4915.(LocalVariable).getFunction() = func
and vi_4916.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
