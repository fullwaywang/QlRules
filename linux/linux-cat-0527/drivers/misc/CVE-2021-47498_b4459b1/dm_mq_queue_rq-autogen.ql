/**
 * @name linux-b4459b11e84092658fa195a2587aff3b9637f0e7-dm_mq_queue_rq
 * @id cpp/linux/b4459b11e84092658fa195a2587aff3b9637f0e7/dm-mq-queue-rq
 * @description linux-b4459b11e84092658fa195a2587aff3b9637f0e7-drivers/md/dm-rq.c-dm_mq_queue_rq CVE-2021-47498
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("test_bit")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(Literal).getValue()="0"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="9"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("dm_target *")
	and target_1.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("dm_target *")
	and target_1.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dm_table_find_target")
	and target_1.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("dm_table *")
	and target_1.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dm_put_live_table")
	and target_1.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("mapped_device *")
	and target_1.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getEnclosingFunction() = func
}

from Function func, IfStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
