commit d48afaac427e37792229c5b86b07e3bebdf7f9f9	d48afaac427e37792229c5b86b07e3bebdf7f9f9
Author: Tommy Steimel <steimel@chromium.org>
Date:   Mon Mar 13 23:03:16 2023 +0000

    pip2: Don't allow PiP windows to be opened from an extension popup
    
    This CL blocks picture-in-picture windows from opening without a source
    contents. This prevents a spoofing bug where the currently active tab
    is set as the parent to the PiP window when the PiP window is actually
    owned by an extension popup.
    
    Bug: 1418549
    Change-Id: I1c3eb6dc62b63df04860ca7248c0bfa4b3d2ceaa
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4336356
    Reviewed-by: Peter Bostr√∂m <pbos@chromium.org>
    Commit-Queue: Tommy Steimel <steimel@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1116663}

diff --git a/chrome/browser/ui/browser_navigator.cc b/chrome/browser/ui/browser_navigator.cc
index c80ca778c6f3d..c4a4bb8af94b0 100644
--- a/chrome/browser/ui/browser_navigator.cc
+++ b/chrome/browser/ui/browser_navigator.cc
@@ -635,6 +635,15 @@ base::WeakPtr<content::NavigationHandle> Navigate(NavigateParams* params) {
     params->disposition = WindowOpenDisposition::NEW_FOREGROUND_TAB;
   }
 
+  // Picture-in-picture browser windows must have a source contents in order for
+  // the window to function correctly. If we have no source contents to work
+  // with (e.g. if an extension popup attempts to open a PiP window), we should
+  // cancel the navigation.
+  if (!params->source_contents &&
+      params->disposition == WindowOpenDisposition::NEW_PICTURE_IN_PICTURE) {
+    return nullptr;
+  }
+
   // If no source WebContents was specified, we use the selected one from
   // the target browser. This must happen first, before
   // GetBrowserForDisposition() has a chance to replace |params->browser| with
diff --git a/chrome/browser/ui/browser_navigator_browsertest.cc b/chrome/browser/ui/browser_navigator_browsertest.cc
index d5b59e5f157ce..7be0410e1f9bb 100644
--- a/chrome/browser/ui/browser_navigator_browsertest.cc
+++ b/chrome/browser/ui/browser_navigator_browsertest.cc
@@ -1876,6 +1876,7 @@ IN_PROC_BROWSER_TEST_F(BrowserNavigatorTest,
   // Opening a picture in picture window should create a new browser.
   NavigateParams params(MakeNavigateParams(browser()));
   params.disposition = WindowOpenDisposition::NEW_PICTURE_IN_PICTURE;
+  params.source_contents = browser()->tab_strip_model()->GetActiveWebContents();
   params.contents_to_insert = WebContents::Create(web_contents_params);
   Navigate(&params);
 
@@ -1904,6 +1905,7 @@ IN_PROC_BROWSER_TEST_F(BrowserNavigatorTest,
   // Opening a picture in picture window should create a new browser.
   NavigateParams params(MakeNavigateParams(browser()));
   params.disposition = WindowOpenDisposition::NEW_PICTURE_IN_PICTURE;
+  params.source_contents = browser()->tab_strip_model()->GetActiveWebContents();
   params.contents_to_insert = WebContents::Create(web_contents_params);
   Navigate(&params);
 
@@ -1921,11 +1923,25 @@ IN_PROC_BROWSER_TEST_F(BrowserNavigatorTest,
                                            browser()->profile());
   NavigateParams params(MakeNavigateParams(pip));
   params.disposition = WindowOpenDisposition::NEW_PICTURE_IN_PICTURE;
+  params.source_contents = browser()->tab_strip_model()->GetActiveWebContents();
   Navigate(&params);
 
   EXPECT_EQ(params.browser, nullptr);
 }
 
+IN_PROC_BROWSER_TEST_F(
+    BrowserNavigatorTest,
+    Disposition_PictureInPicture_CantWithoutASourceContents) {
+  // Opening a picture-in-picture window without a source contents should fail.
+  Browser* pip = CreateEmptyBrowserForType(Browser::TYPE_PICTURE_IN_PICTURE,
+                                           browser()->profile());
+  NavigateParams params(MakeNavigateParams(pip));
+  params.disposition = WindowOpenDisposition::NEW_PICTURE_IN_PICTURE;
+  params.source_contents = nullptr;
+
+  EXPECT_EQ(nullptr, Navigate(&params));
+}
+
 #if !BUILDFLAG(IS_CHROMEOS_ASH)
 // This class extends the basic logic in display::ScreenBase to allow us to mock
 // the call to `GetDisplayNearestWindow`. This provides a way to ensure that the
@@ -2034,6 +2050,8 @@ IN_PROC_BROWSER_TEST_F(MAYBE_BrowserNavigatorTestWithMockScreen,
     // Open the PiP window.
     NavigateParams params(MakeNavigateParams(browser()));
     params.disposition = WindowOpenDisposition::NEW_PICTURE_IN_PICTURE;
+    params.source_contents =
+        browser()->tab_strip_model()->GetActiveWebContents();
     params.contents_to_insert = WebContents::Create(web_contents_params);
     Navigate(&params);
 
@@ -2060,6 +2078,8 @@ IN_PROC_BROWSER_TEST_F(MAYBE_BrowserNavigatorTestWithMockScreen,
     // Open the PiP window.
     NavigateParams params(MakeNavigateParams(browser()));
     params.disposition = WindowOpenDisposition::NEW_PICTURE_IN_PICTURE;
+    params.source_contents =
+        browser()->tab_strip_model()->GetActiveWebContents();
     params.contents_to_insert = WebContents::Create(web_contents_params);
     Navigate(&params);
 
