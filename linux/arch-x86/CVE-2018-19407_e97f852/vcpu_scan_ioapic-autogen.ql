/**
 * @name linux-e97f852fd4561e77721bb9a4e0ea9d98305b1e93-vcpu_scan_ioapic
 * @id cpp/linux/e97f852fd4561e77721bb9a4e0ea9d98305b1e93/vcpu-scan-ioapic
 * @description linux-e97f852fd4561e77721bb9a4e0ea9d98305b1e93-arch/x86/kvm/x86.c-vcpu_scan_ioapic CVE-2018-19407
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

/*predicate func_0(Function func, FunctionDeclarationEntry target_0) {
		target_0.getType() instanceof VoidType
		and target_0.getEnclosingFunction() = func
}

*/
predicate func_1(Function func, FunctionCall target_1) {
		target_1.getTarget().hasName("__compiletime_assert_7464")
		and not target_1.getTarget().hasName("__compiletime_assert_7465")
		and target_1.getParent().(ExprStmt).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_make_request")
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vvcpu_7446, FunctionCall target_4, ExprStmt target_5, ExprStmt target_3) {
	exists(IfStmt target_2 |
		target_2.getCondition().(FunctionCall).getTarget().hasName("ioapic_in_kernel")
		and target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="kvm"
		and target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_7446
		and target_2.getThen() instanceof ExprStmt
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_5.getExpr().(VariableCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vvcpu_7446, FunctionCall target_4, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("kvm_ioapic_scan_entry")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7446
		and target_3.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="ioapic_handled_vectors"
		and target_3.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_3.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_7446
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_4(Parameter vvcpu_7446, FunctionCall target_4) {
		target_4.getTarget().hasName("irqchip_split")
		and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="kvm"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_7446
}

predicate func_5(Parameter vvcpu_7446, ExprStmt target_5) {
		target_5.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="sync_pir_to_irr"
		and target_5.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("kvm_x86_ops *")
		and target_5.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7446
}

from Function func, Parameter vvcpu_7446, FunctionCall target_1, ExprStmt target_3, FunctionCall target_4, ExprStmt target_5
where
func_1(func, target_1)
and not func_2(vvcpu_7446, target_4, target_5, target_3)
and func_3(vvcpu_7446, target_4, target_3)
and func_4(vvcpu_7446, target_4)
and func_5(vvcpu_7446, target_5)
and vvcpu_7446.getType().hasName("kvm_vcpu *")
and vvcpu_7446.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
