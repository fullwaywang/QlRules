/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-fanout_set_data_ebpf
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/fanout-set-data-ebpf
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/packet/af_packet.c-fanout_set_data_ebpf CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdata_1561, Parameter vlen_1562, ReturnStmt target_4, FunctionCall target_3) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("copy_from_sockptr")
	and target_0.getArgument(0) instanceof AddressOfExpr
	and target_0.getArgument(1).(VariableAccess).getTarget()=vdata_1561
	and target_0.getArgument(2).(VariableAccess).getTarget()=vlen_1562
	and target_0.getParent().(IfStmt).getThen()=target_4
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdata_1561, Parameter vlen_1562, Variable vfd_1565, ReturnStmt target_4, AddressOfExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vfd_1565
	and target_1.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdata_1561
	and target_1.getParent().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vlen_1562
	and target_1.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_4
}

/*predicate func_2(Parameter vdata_1561, Parameter vlen_1562, Variable vfd_1565, ReturnStmt target_4, VariableAccess target_2) {
	target_2.getTarget()=vlen_1562
	and target_2.getParent().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vfd_1565
	and target_2.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdata_1561
	and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_4
}

*/
predicate func_3(Parameter vdata_1561, Parameter vlen_1562, ReturnStmt target_4, FunctionCall target_3) {
	target_3.getTarget().hasName("copy_from_user")
	and target_3.getArgument(0) instanceof AddressOfExpr
	and target_3.getArgument(1).(VariableAccess).getTarget()=vdata_1561
	and target_3.getArgument(2).(VariableAccess).getTarget()=vlen_1562
	and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Function func, ReturnStmt target_4) {
	target_4.getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_4.getEnclosingFunction() = func
}

from Function func, Parameter vdata_1561, Parameter vlen_1562, Variable vfd_1565, AddressOfExpr target_1, FunctionCall target_3, ReturnStmt target_4
where
not func_0(vdata_1561, vlen_1562, target_4, target_3)
and func_1(vdata_1561, vlen_1562, vfd_1565, target_4, target_1)
and func_3(vdata_1561, vlen_1562, target_4, target_3)
and func_4(func, target_4)
and vdata_1561.getType().hasName("char *")
and vlen_1562.getType().hasName("unsigned int")
and vfd_1565.getType().hasName("u32")
and vdata_1561.getFunction() = func
and vlen_1562.getFunction() = func
and vfd_1565.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
