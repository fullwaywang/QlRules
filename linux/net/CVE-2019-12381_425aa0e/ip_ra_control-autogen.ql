/**
 * @name linux-425aa0e1d01513437668fa3d4a971168bbaa8515-ip_ra_control
 * @id cpp/linux/425aa0e1d01513437668fa3d4a971168bbaa8515/ip-ra-control
 * @description linux-425aa0e1d01513437668fa3d4a971168bbaa8515-net/ipv4/ip_sockglue.c-ip_ra_control CVE-2019-12381
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter von_335, Variable vnew_ra_338, ExprStmt target_1, ExprStmt target_2, IfStmt target_3, ExprStmt target_5, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=von_335
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vnew_ra_338
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_3.getCondition().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="ra_mutex"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ipv4"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net *")
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter von_335, Variable vnew_ra_338, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnew_ra_338
	and target_2.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getTarget()=von_335
	and target_2.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("kmalloc")
	and target_2.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(SizeofExprOperator).getValue()="40"
	and target_2.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
	and target_2.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
}

predicate func_3(Parameter von_335, Variable vnew_ra_338, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget()=von_335
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="ra_mutex"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ipv4"
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_ra_338
}

predicate func_5(Variable vnew_ra_338, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_ra_338
}

from Function func, Parameter von_335, Variable vnew_ra_338, ExprStmt target_1, ExprStmt target_2, IfStmt target_3, ExprStmt target_5
where
not func_0(von_335, vnew_ra_338, target_1, target_2, target_3, target_5, func)
and func_1(func, target_1)
and func_2(von_335, vnew_ra_338, target_2)
and func_3(von_335, vnew_ra_338, target_3)
and func_5(vnew_ra_338, target_5)
and von_335.getType().hasName("unsigned char")
and vnew_ra_338.getType().hasName("ip_ra_chain *")
and von_335.getFunction() = func
and vnew_ra_338.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
