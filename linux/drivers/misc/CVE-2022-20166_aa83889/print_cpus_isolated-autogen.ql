/**
 * @name linux-aa838896d87af561a33ecefea1caa4c15a68bc47-print_cpus_isolated
 * @id cpp/linux/aa838896d87af561a33ecefea1caa4c15a68bc47/print-cpus-isolated
 * @description linux-aa838896d87af561a33ecefea1caa4c15a68bc47-print_cpus_isolated CVE-2022-20166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_272, Variable visolated_275, Variable vnr_cpu_ids, FunctionCall target_0) {
		target_0.getTarget().hasName("sprintf")
		and not target_0.getTarget().hasName("sysfs_emit")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_272
		and target_0.getArgument(1).(StringLiteral).getValue()="%*pbl\n"
		and target_0.getArgument(2).(VariableAccess).getTarget()=vnr_cpu_ids
		and target_0.getArgument(3).(PointerFieldAccess).getTarget().getName()="bits"
		and target_0.getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=visolated_275
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vbuf_272, Variable visolated_275, Variable vnr_cpu_ids, FunctionCall target_0
where
func_0(vbuf_272, visolated_275, vnr_cpu_ids, target_0)
and vbuf_272.getType().hasName("char *")
and visolated_275.getType().hasName("cpumask_var_t")
and vnr_cpu_ids.getType().hasName("unsigned int")
and vbuf_272.getFunction() = func
and visolated_275.(LocalVariable).getFunction() = func
and not vnr_cpu_ids.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
