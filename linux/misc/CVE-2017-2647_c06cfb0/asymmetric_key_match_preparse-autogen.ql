/**
 * @name linux-c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81-asymmetric_key_match_preparse
 * @id cpp/linux/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81/asymmetric-key-match-preparse
 * @description linux-c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81-crypto/asymmetric_keys/asymmetric_type.c-asymmetric_key_match_preparse CVE-2017-2647
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmatch_data_110, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cmp"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmatch_data_110
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vmatch_data_110, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="lookup_type"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmatch_data_110
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

from Function func, Parameter vmatch_data_110, ExprStmt target_1
where
not func_0(vmatch_data_110, target_1, func)
and func_1(vmatch_data_110, target_1)
and vmatch_data_110.getType().hasName("key_match_data *")
and vmatch_data_110.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
