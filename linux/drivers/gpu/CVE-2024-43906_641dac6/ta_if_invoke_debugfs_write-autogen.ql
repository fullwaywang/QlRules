/**
 * @name linux-641dac64178ccdb9e45c92b67120316896294d05-ta_if_invoke_debugfs_write
 * @id cpp/linux/641dac64178ccdb9e45c92b67120316896294d05/ta-if-invoke-debugfs-write
 * @description linux-641dac64178ccdb9e45c92b67120316896294d05-drivers/gpu/drm/amd/amdgpu/amdgpu_psp_ta.c-ta_if_invoke_debugfs_write CVE-2024-43906
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcontext_302, BlockStmt target_2, AddressOfExpr target_3, NotExpr target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vcontext_302
	and target_0.getRightOperand() instanceof NotExpr
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vcontext_302, BlockStmt target_2, NotExpr target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getOperand() |
		obj_0.getTarget().getName()="initialized"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcontext_302
	)
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(StmtExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(1) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("_dev_err")
						and obj_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
						and obj_4.getArgument(1).(StringLiteral).getValue()="amdgpu: TA is not initialized\n"
					)
				)
				and obj_2.getStmt(0).(DoStmt).getCondition() instanceof Literal
			)
		)
	)
	and exists(ExprStmt obj_5 | obj_5=target_2.getStmt(1) |
		exists(AssignExpr obj_6 | obj_6=obj_5.getExpr() |
			obj_6.getLValue().(VariableAccess).getTarget().getType().hasName("int")
			and obj_6.getRValue().(UnaryMinusExpr).getValue()="-22"
		)
	)
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vcontext_302, AddressOfExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vcontext_302
}

from Function func, Variable vcontext_302, NotExpr target_1, BlockStmt target_2, AddressOfExpr target_3
where
not func_0(vcontext_302, target_2, target_3, target_1)
and func_1(vcontext_302, target_2, target_1)
and func_2(func, target_2)
and func_3(vcontext_302, target_3)
and vcontext_302.getType().hasName("ta_context *")
and vcontext_302.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
