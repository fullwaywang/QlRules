/**
 * @name linux-1b73ea3d97cc23f9b16d10021782b48397d2b517-amdgpu_device_gpu_recover
 * @id cpp/linux/1b73ea3d97cc23f9b16d10021782b48397d2b517/amdgpu-device-gpu-recover
 * @description linux-1b73ea3d97cc23f9b16d10021782b48397d2b517-drivers/gpu/drm/amd/amdgpu/amdgpu_device.c-amdgpu_device_gpu_recover CVE-2024-46720
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhive_5349, BlockStmt target_2, ExprStmt target_3, PointerFieldAccess target_4) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof LogicalAndExpr
	and target_0.getRightOperand().(VariableAccess).getTarget()=vhive_5349
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vadev_5343, BlockStmt target_2, LogicalAndExpr target_1) {
	exists(NotExpr obj_0 | obj_0=target_1.getLeftOperand() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="virt"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vadev_5343
				)
				and obj_2.getTarget().getName()="caps"
			)
			and obj_1.getRightOperand().(BinaryBitwiseOperation).getValue()="4"
		)
	)
	and exists(RelationalOperation obj_4 | obj_4=target_1.getRightOperand() |
		exists(ValueFieldAccess obj_5 | obj_5=obj_4.getGreaterOperand() |
			exists(ValueFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
				exists(PointerFieldAccess obj_7 | obj_7=obj_6.getQualifier() |
					obj_7.getTarget().getName()="gmc"
					and obj_7.getQualifier().(VariableAccess).getTarget()=vadev_5343
				)
				and obj_6.getTarget().getName()="xgmi"
			)
			and obj_5.getTarget().getName()="num_physical_nodes"
		)
		and obj_4.getLesserOperand().(Literal).getValue()="1"
	)
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vhive_5349, Parameter vadev_5343, BlockStmt target_2) {
	exists(ForStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(NotExpr obj_1 | obj_1=obj_0.getCondition() |
			exists(EqualityOperation obj_2 | obj_2=obj_1.getOperand() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					exists(ValueFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="head"
						and obj_4.getQualifier().(ValueFieldAccess).getTarget().getName()="xgmi"
					)
				)
				and exists(AddressOfExpr obj_5 | obj_5=obj_2.getRightOperand() |
					exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
						obj_6.getTarget().getName()="device_list"
						and obj_6.getQualifier().(VariableAccess).getTarget()=vhive_5349
					)
				)
			)
		)
		and exists(BlockStmt obj_7 | obj_7=obj_0.getStmt() |
			exists(ExprStmt obj_8 | obj_8=obj_7.getStmt(0) |
				exists(FunctionCall obj_9 | obj_9=obj_8.getExpr() |
					obj_9.getTarget().hasName("list_add_tail")
					and obj_9.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="reset_list"
					and obj_9.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("list_head")
				)
			)
			and exists(IfStmt obj_10 | obj_10=obj_7.getStmt(1) |
				exists(LogicalAndExpr obj_11 | obj_11=obj_10.getCondition() |
					exists(PointerFieldAccess obj_12 | obj_12=obj_11.getRightOperand() |
						obj_12.getTarget().getName()="shutdown"
						and obj_12.getQualifier().(VariableAccess).getTarget()=vadev_5343
					)
					and obj_11.getLeftOperand().(VariableAccess).getTarget().getType().hasName("bool")
				)
				and obj_10.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="shutdown"
			)
		)
		and obj_0.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("amdgpu_device *")
		and obj_0.getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("amdgpu_device *")
	)
}

predicate func_3(Variable vhive_5349, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="hive"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("amdgpu_reset_context *")
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vhive_5349
	)
}

predicate func_4(Variable vhive_5349, PointerFieldAccess target_4) {
	exists(AddressOfExpr obj_0 | obj_0=target_4.getQualifier() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="device_list"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vhive_5349
		)
	)
	and target_4.getTarget().getName()="next"
}

from Function func, Variable vhive_5349, Parameter vadev_5343, LogicalAndExpr target_1, BlockStmt target_2, ExprStmt target_3, PointerFieldAccess target_4
where
not func_0(vhive_5349, target_2, target_3, target_4)
and func_1(vadev_5343, target_2, target_1)
and func_2(vhive_5349, vadev_5343, target_2)
and func_3(vhive_5349, target_3)
and func_4(vhive_5349, target_4)
and vhive_5349.getType().hasName("amdgpu_hive_info *")
and vadev_5343.getType().hasName("amdgpu_device *")
and vhive_5349.(LocalVariable).getFunction() = func
and vadev_5343.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
