/**
 * @name linux-99d825822eade8d827a1817357cbf3f889a552d6-get_rock_ridge_filename
 * @id cpp/linux/99d825822eade8d827a1817357cbf3f889a552d6/get-rock-ridge-filename
 * @description linux-99d825822eade8d827a1817357cbf3f889a552d6-fs/isofs/rock.c-get_rock_ridge_filename CVE-2016-4913
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="5"
	and not target_0.getValue()="0"
	and target_0.getParent().(SubExpr).getParent().(GEExpr).getGreaterOperand() instanceof SubExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(IfStmt target_21, Function func, ExprStmt target_1) {
	target_1.getExpr() instanceof FunctionCall
	and target_21.getLocation().isBefore(target_1.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getType().hasName("int")
	and target_2.getRValue() instanceof SubExpr
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vretnamlen_203, BlockStmt target_22, ExprStmt target_24) {
exists(AddExpr target_3 |
	target_3.getLeftOperand().(VariableAccess).getTarget()=vretnamlen_203
	and target_3.getRightOperand().(VariableAccess).getType().hasName("int")
	and target_3.getParent().(GEExpr).getGreaterOperand() instanceof SubExpr
	and target_3.getParent().(GEExpr).getLesserOperand().(Literal).getValue()="254"
	and target_3.getParent().(GEExpr).getParent().(IfStmt).getThen()=target_22
	and target_3.getLeftOperand().(VariableAccess).getLocation().isBefore(target_24.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_4(Function func) {
exists(AssignExpr target_4 |
	target_4.getLValue().(VariableAccess).getType().hasName("char *")
	and target_4.getRValue().(FunctionCall).getTarget().hasName("memchr")
	and target_4.getRValue().(FunctionCall).getArgument(0) instanceof ValueFieldAccess
	and target_4.getRValue().(FunctionCall).getArgument(1).(CharLiteral).getValue()="0"
	and target_4.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("int")
	and target_4.getEnclosingFunction() = func)
}

predicate func_6(VariableAccess target_26, Function func) {
exists(IfStmt target_6 |
	target_6.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_6.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("char *")
	and target_6.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getType().hasName("char *")
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="name"
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="NM"
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="u"
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_26
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Parameter vretname_198, Variable vretnamlen_203, VariableAccess target_26, ExprStmt target_1, ExprStmt target_24) {
exists(ExprStmt target_7 |
	target_7.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_7.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vretname_198
	and target_7.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vretnamlen_203
	and target_7.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="name"
	and target_7.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier() instanceof ValueFieldAccess
	and target_7.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("int")
	and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_26
	and target_24.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation().isBefore(target_7.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation()))
}

predicate func_8(Variable vretnamlen_203, VariableAccess target_26) {
exists(ExprStmt target_8 |
	target_8.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vretnamlen_203
	and target_8.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getType().hasName("int")
	and target_8.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_26)
}

predicate func_10(Parameter vretname_198, Variable vretnamlen_203, VariableAccess target_26, ReturnStmt target_27) {
exists(ExprStmt target_10 |
	target_10.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vretname_198
	and target_10.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vretnamlen_203
	and target_10.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
	and target_10.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_26
	and target_10.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_27.getExpr().(VariableAccess).getLocation()))
}

/*predicate func_11(Variable vrr_201, ValueFieldAccess target_11) {
	target_11.getTarget().getName()="NM"
	and target_11.getQualifier().(PointerFieldAccess).getTarget().getName()="u"
	and target_11.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
}

*/
predicate func_12(Variable vrr_201, ValueFieldAccess target_12) {
	target_12.getTarget().getName()="name"
	and target_12.getQualifier().(ValueFieldAccess).getTarget().getName()="NM"
	and target_12.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="u"
	and target_12.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
}

predicate func_13(Variable vrr_201, SubExpr target_13) {
	target_13.getLeftOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
	and target_13.getRightOperand().(Literal).getValue()="5"
	and target_13.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_14(Variable vrr_201, VariableAccess target_14) {
	target_14.getTarget()=vrr_201
}

predicate func_15(Variable vrr_201, VariableAccess target_15) {
	target_15.getTarget()=vrr_201
}

predicate func_16(Parameter vretname_198, VariableAccess target_16) {
	target_16.getTarget()=vretname_198
	and target_16.getParent().(FunctionCall).getParent().(AddExpr).getLeftOperand() instanceof FunctionCall
}

predicate func_17(Parameter vretname_198, VariableAccess target_17) {
	target_17.getTarget()=vretname_198
	and target_17.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_18(Parameter vretname_198, Variable vrr_201, BlockStmt target_22, SubExpr target_18) {
	target_18.getLeftOperand().(AddExpr).getLeftOperand().(FunctionCall).getTarget().hasName("strlen")
	and target_18.getLeftOperand().(AddExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vretname_198
	and target_18.getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_18.getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
	and target_18.getRightOperand() instanceof Literal
	and target_18.getParent().(GEExpr).getLesserOperand().(Literal).getValue()="254"
	and target_18.getParent().(GEExpr).getParent().(IfStmt).getThen()=target_22
}

predicate func_19(Parameter vretname_198, FunctionCall target_19) {
	target_19.getTarget().hasName("strncat")
	and target_19.getArgument(0).(VariableAccess).getTarget()=vretname_198
	and target_19.getArgument(1) instanceof ValueFieldAccess
	and target_19.getArgument(2) instanceof SubExpr
}

predicate func_20(Variable vrr_201, Variable vretnamlen_203, SubExpr target_20) {
	target_20.getLeftOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_20.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
	and target_20.getRightOperand().(Literal).getValue()="5"
	and target_20.getParent().(AssignAddExpr).getRValue() = target_20
	and target_20.getParent().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vretnamlen_203
}

predicate func_21(Function func, IfStmt target_21) {
	target_21.getCondition().(RelationalOperation).getGreaterOperand() instanceof SubExpr
	and target_21.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="254"
	and target_21.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_21.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_21.getEnclosingFunction() = func
}

predicate func_22(Function func, BlockStmt target_22) {
	target_22.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_22.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_22.getEnclosingFunction() = func
}

predicate func_24(Variable vretnamlen_203, ExprStmt target_24) {
	target_24.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vretnamlen_203
	and target_24.getExpr().(AssignAddExpr).getRValue() instanceof SubExpr
}

predicate func_26(Variable vsig_202, VariableAccess target_26) {
	target_26.getTarget()=vsig_202
}

predicate func_27(Variable vretnamlen_203, ReturnStmt target_27) {
	target_27.getExpr().(VariableAccess).getTarget()=vretnamlen_203
}

from Function func, Parameter vretname_198, Variable vrr_201, Variable vsig_202, Variable vretnamlen_203, Literal target_0, ExprStmt target_1, ValueFieldAccess target_12, SubExpr target_13, VariableAccess target_14, VariableAccess target_15, VariableAccess target_16, VariableAccess target_17, SubExpr target_18, FunctionCall target_19, SubExpr target_20, IfStmt target_21, BlockStmt target_22, ExprStmt target_24, VariableAccess target_26, ReturnStmt target_27
where
func_0(func, target_0)
and func_1(target_21, func, target_1)
and not func_2(func)
and not func_3(vretnamlen_203, target_22, target_24)
and not func_4(func)
and not func_6(target_26, func)
and not func_7(vretname_198, vretnamlen_203, target_26, target_1, target_24)
and not func_8(vretnamlen_203, target_26)
and not func_10(vretname_198, vretnamlen_203, target_26, target_27)
and func_12(vrr_201, target_12)
and func_13(vrr_201, target_13)
and func_14(vrr_201, target_14)
and func_15(vrr_201, target_15)
and func_16(vretname_198, target_16)
and func_17(vretname_198, target_17)
and func_18(vretname_198, vrr_201, target_22, target_18)
and func_19(vretname_198, target_19)
and func_20(vrr_201, vretnamlen_203, target_20)
and func_21(func, target_21)
and func_22(func, target_22)
and func_24(vretnamlen_203, target_24)
and func_26(vsig_202, target_26)
and func_27(vretnamlen_203, target_27)
and vretname_198.getType().hasName("char *")
and vrr_201.getType().hasName("rock_ridge *")
and vsig_202.getType().hasName("int")
and vretnamlen_203.getType().hasName("int")
and vretname_198.getFunction() = func
and vrr_201.(LocalVariable).getFunction() = func
and vsig_202.(LocalVariable).getFunction() = func
and vretnamlen_203.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
