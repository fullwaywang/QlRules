/**
 * @name linux-ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32-ip_cmsg_recv_checksum
 * @id cpp/linux/ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32/ip-cmsg-recv-checksum
 * @description linux-ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32-net/ipv4/ip_sockglue.c-ip_cmsg_recv_checksum CVE-2017-6347
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtlen_112, Parameter voffset_112, FunctionCall target_0) {
	target_0.getTarget().hasName("csum_partial")
	and not target_0.getTarget().hasName("skb_checksum")
	and target_0.getArgument(0).(PointerArithmeticOperation).getLeftOperand() instanceof FunctionCall
	and target_0.getArgument(0).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vtlen_112
	and target_0.getArgument(1).(VariableAccess).getTarget()=voffset_112
	and target_0.getArgument(2).(Literal).getValue()="0"
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("csum_sub")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("__wsum")
}

predicate func_3(Parameter vskb_111, VariableAccess target_3) {
	target_3.getTarget()=vskb_111
	and target_3.getParent().(FunctionCall).getParent().(PointerAddExpr).getLeftOperand() instanceof FunctionCall
}

predicate func_4(Parameter vtlen_112, VariableAccess target_4) {
	target_4.getTarget()=vtlen_112
	and target_4.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1) instanceof FunctionCall
}

predicate func_5(Parameter vskb_111, FunctionCall target_5) {
	target_5.getTarget().hasName("skb_transport_header")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vskb_111
	and target_5.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1) instanceof FunctionCall
}

from Function func, Parameter vskb_111, Parameter vtlen_112, Parameter voffset_112, FunctionCall target_0, VariableAccess target_3, VariableAccess target_4, FunctionCall target_5
where
func_0(vtlen_112, voffset_112, target_0)
and func_3(vskb_111, target_3)
and func_4(vtlen_112, target_4)
and func_5(vskb_111, target_5)
and vskb_111.getType().hasName("sk_buff *")
and vtlen_112.getType().hasName("int")
and voffset_112.getType().hasName("int")
and vskb_111.getFunction() = func
and vtlen_112.getFunction() = func
and voffset_112.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
