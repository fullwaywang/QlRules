/**
 * @name linux-6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0-__sock_diag_rcv_msg
 * @id cpp/linux/6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0/--sock-diag-rcv-msg
 * @description linux-6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0-net/core/sock_diag.c-__sock_diag_rcv_msg CVE-2013-1763
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreq_118, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="sdiag_family"
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_118
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="41"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vreq_118, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("const sock_diag_handler *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sock_diag_lock_handler")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="sdiag_family"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_118
}

from Function func, Variable vreq_118, ExprStmt target_1
where
not func_0(vreq_118, target_1, func)
and func_1(vreq_118, target_1)
and vreq_118.getType().hasName("sock_diag_req *")
and vreq_118.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
