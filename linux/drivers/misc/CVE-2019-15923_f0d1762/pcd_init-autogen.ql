/**
 * @name linux-f0d1762554014ce0ae347b9f0d088f2c157c8c72-pcd_init
 * @id cpp/linux/f0d1762554014ce0ae347b9f0d088f2c157c8c72/pcd-init
 * @description linux-f0d1762554014ce0ae347b9f0d088f2c157c8c72-drivers/block/paride/pcd.c-pcd_init CVE-2019-15923
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcd_998, CommaExpr target_4) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="disk"
		and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_998
		and target_4.getRightOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vcd_998) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("blk_cleanup_queue")
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="queue"
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="disk"
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_998)
}

predicate func_2(Variable vcd_998, ExprStmt target_3) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("blk_mq_free_tag_set")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tag_set"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_998
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vcd_998, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("put_disk")
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="disk"
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_998
}

predicate func_4(Variable vcd_998, CommaExpr target_4) {
		target_4.getLeftOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_4.getRightOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vcd_998
}

from Function func, Variable vcd_998, ExprStmt target_3, CommaExpr target_4
where
not func_0(vcd_998, target_4)
and not func_1(vcd_998)
and not func_2(vcd_998, target_3)
and func_3(vcd_998, target_3)
and func_4(vcd_998, target_4)
and vcd_998.getType().hasName("pcd_unit *")
and vcd_998.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
