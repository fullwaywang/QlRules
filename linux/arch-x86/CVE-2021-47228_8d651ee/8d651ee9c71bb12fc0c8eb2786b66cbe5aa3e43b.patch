commit 8d651ee9c71bb12fc0c8eb2786b66cbe5aa3e43b
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Tue Jun 8 11:54:33 2021 +0200

    x86/ioremap: Map EFI-reserved memory as encrypted for SEV
    
    Some drivers require memory that is marked as EFI boot services
    data. In order for this memory to not be re-used by the kernel
    after ExitBootServices(), efi_mem_reserve() is used to preserve it
    by inserting a new EFI memory descriptor and marking it with the
    EFI_MEMORY_RUNTIME attribute.
    
    Under SEV, memory marked with the EFI_MEMORY_RUNTIME attribute needs to
    be mapped encrypted by Linux, otherwise the kernel might crash at boot
    like below:
    
      EFI Variables Facility v0.08 2004-May-17
      general protection fault, probably for non-canonical address 0x3597688770a868b2: 0000 [#1] SMP NOPTI
      CPU: 13 PID: 1 Comm: swapper/0 Not tainted 5.12.4-2-default #1 openSUSE Tumbleweed
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
      RIP: 0010:efi_mokvar_entry_next
      [...]
      Call Trace:
       efi_mokvar_sysfs_init
       ? efi_mokvar_table_init
       do_one_initcall
       ? __kmalloc
       kernel_init_freeable
       ? rest_init
       kernel_init
       ret_from_fork
    
    Expand the __ioremap_check_other() function to additionally check for
    this other type of boot data reserved at runtime and indicate that it
    should be mapped encrypted for an SEV guest.
    
     [ bp: Massage commit message. ]
    
    Fixes: 58c909022a5a ("efi: Support for MOK variable config table")
    Reported-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Tested-by: Joerg Roedel <jroedel@suse.de>
    Cc: <stable@vger.kernel.org> # 5.10+
    Link: https://lkml.kernel.org/r/20210608095439.12668-2-joro@8bytes.org

diff --git a/arch/x86/mm/ioremap.c b/arch/x86/mm/ioremap.c
index 12c686c65ea9..60ade7dd71bd 100644
--- a/arch/x86/mm/ioremap.c
+++ b/arch/x86/mm/ioremap.c
@@ -118,7 +118,9 @@ static void __ioremap_check_other(resource_size_t addr, struct ioremap_desc *des
 	if (!IS_ENABLED(CONFIG_EFI))
 		return;
 
-	if (efi_mem_type(addr) == EFI_RUNTIME_SERVICES_DATA)
+	if (efi_mem_type(addr) == EFI_RUNTIME_SERVICES_DATA ||
+	    (efi_mem_type(addr) == EFI_BOOT_SERVICES_DATA &&
+	     efi_mem_attributes(addr) & EFI_MEMORY_RUNTIME))
 		desc->flags |= IORES_MAP_ENCRYPTED;
 }
 
