commit b65235f6e102354ccafda601eaa1c5bef5284d21
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Thu Sep 28 20:33:51 2023 +0300

    x86: KVM: SVM: always update the x2avic msr interception
    
    The following problem exists since x2avic was enabled in the KVM:
    
    svm_set_x2apic_msr_interception is called to enable the interception of
    the x2apic msrs.
    
    In particular it is called at the moment the guest resets its apic.
    
    Assuming that the guest's apic was in x2apic mode, the reset will bring
    it back to the xapic mode.
    
    The svm_set_x2apic_msr_interception however has an erroneous check for
    '!apic_x2apic_mode()' which prevents it from doing anything in this case.
    
    As a result of this, all x2apic msrs are left unintercepted, and that
    exposes the bare metal x2apic (if enabled) to the guest.
    Oops.
    
    Remove the erroneous '!apic_x2apic_mode()' check to fix that.
    
    This fixes CVE-2023-5090
    
    Fixes: 4d1d7942e36a ("KVM: SVM: Introduce logic to (de)activate x2AVIC mode")
    Cc: stable@vger.kernel.org
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Reviewed-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Tested-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20230928173354.217464-2-mlevitsk@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 9507df9..acdd0b8 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -913,8 +913,7 @@ void svm_set_x2apic_msr_interception(struct vcpu_svm *svm, bool intercept)
 	if (intercept == svm->x2avic_msrs_intercepted)
 		return;
 
-	if (!x2avic_enabled ||
-	    !apic_x2apic_mode(svm->vcpu.arch.apic))
+	if (!x2avic_enabled)
 		return;
 
 	for (i = 0; i < MAX_DIRECT_ACCESS_MSRS; i++) {
