/**
 * @name linux-3ead19aa341de89a8c3d88a091d8093ebea622e8-an30259a_probe
 * @id cpp/linux/3ead19aa341de89a8c3d88a091d8093ebea622e8/an30259a-probe
 * @description linux-3ead19aa341de89a8c3d88a091d8093ebea622e8-drivers/leds/leds-an30259a.c-an30259a_probe CVE-2024-42128
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
	target_0.getValue()="&chip->mutex"
	and not target_0.getValue()="mutex_"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(LabelStmt target_9, Function func, ExprStmt target_1) {
	target_1.getExpr() instanceof FunctionCall
	and target_9.getLocation().isBefore(target_1.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable verr_276, ReturnStmt target_7) {
exists(AssignExpr target_2 |
	exists(StmtExpr obj_0 | obj_0=target_2.getRValue() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(DoStmt obj_2 | obj_2=obj_1.getStmt(1) |
				obj_2.getCondition().(Literal).getValue()="0"
				and obj_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__mutex_init")
			)
			and exists(ExprStmt obj_3 | obj_3=obj_1.getStmt(2) |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().hasName("__devm_mutex_init")
					and obj_4.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
					and obj_4.getArgument(1).(VariableAccess).getType().hasName("mutex *")
				)
			)
		)
	)
	and target_2.getLValue().(VariableAccess).getTarget()=verr_276
	and target_2.getLValue().(VariableAccess).getLocation().isBefore(target_7.getExpr().(VariableAccess).getLocation())
)
}

predicate func_4(Variable verr_276, ExprStmt target_10, ReturnStmt target_11, Function func) {
exists(IfStmt target_4 |
	target_4.getCondition().(VariableAccess).getTarget()=verr_276
	and target_4.getThen() instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_10.getLocation())
	and target_11.getExpr().(VariableAccess).getLocation().isBefore(target_4.getCondition().(VariableAccess).getLocation())
)
}

predicate func_5(Variable verr_276, RelationalOperation target_12, Function func) {
exists(ReturnStmt target_5 |
	target_5.getExpr().(VariableAccess).getTarget()=verr_276
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getFollowingStmt() instanceof ReturnStmt
	and target_12.getLesserOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(VariableAccess).getLocation())
)
}

predicate func_6(Variable vchip_275, AddressOfExpr target_6) {
	exists(PointerFieldAccess obj_0 | obj_0=target_6.getOperand() |
		obj_0.getTarget().getName()="mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vchip_275
	)
	and exists(FunctionCall obj_1 | obj_1=target_6.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("__mutex_init")
				and obj_3.getArgument(1) instanceof StringLiteral
				and obj_3.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("lock_class_key")
			)
		)
	)
}

predicate func_7(Variable verr_276, Function func, ReturnStmt target_7) {
	target_7.getExpr().(VariableAccess).getTarget()=verr_276
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vchip_275, FunctionCall target_8) {
	exists(AddressOfExpr obj_0 | obj_0=target_8.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="mutex"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vchip_275
		)
	)
	and target_8.getTarget().hasName("mutex_destroy")
}

predicate func_9(Function func, LabelStmt target_9) {
	target_9.getName() ="exit"
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vchip_275, ExprStmt target_10) {
	exists(AssignExpr obj_0 | obj_0=target_10.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="client"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vchip_275
		)
		and obj_0.getRValue().(VariableAccess).getTarget().getType().hasName("i2c_client *")
	)
}

predicate func_11(Variable verr_276, ReturnStmt target_11) {
	target_11.getExpr().(VariableAccess).getTarget()=verr_276
}

predicate func_12(Variable verr_276, RelationalOperation target_12) {
	 (target_12 instanceof GTExpr or target_12 instanceof LTExpr)
	and target_12.getLesserOperand().(VariableAccess).getTarget()=verr_276
	and target_12.getGreaterOperand().(Literal).getValue()="0"
	and target_12.getParent().(IfStmt).getThen() instanceof GotoStmt
}

from Function func, Variable verr_276, Variable vchip_275, StringLiteral target_0, ExprStmt target_1, AddressOfExpr target_6, ReturnStmt target_7, FunctionCall target_8, LabelStmt target_9, ExprStmt target_10, ReturnStmt target_11, RelationalOperation target_12
where
func_0(func, target_0)
and func_1(target_9, func, target_1)
and not func_2(verr_276, target_7)
and not func_4(verr_276, target_10, target_11, func)
and not func_5(verr_276, target_12, func)
and func_6(vchip_275, target_6)
and func_7(verr_276, func, target_7)
and func_8(vchip_275, target_8)
and func_9(func, target_9)
and func_10(vchip_275, target_10)
and func_11(verr_276, target_11)
and func_12(verr_276, target_12)
and verr_276.getType().hasName("int")
and vchip_275.getType().hasName("an30259a *")
and verr_276.(LocalVariable).getFunction() = func
and vchip_275.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
