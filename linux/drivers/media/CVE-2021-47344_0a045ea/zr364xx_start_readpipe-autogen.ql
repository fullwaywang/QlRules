/**
 * @name linux-0a045eac8d0427b64577a24d74bb8347c905ac65-zr364xx_start_readpipe
 * @id cpp/linux/0a045eac8d0427b64577a24d74bb8347c905ac65/zr364xx-start-readpipe
 * @description linux-0a045eac8d0427b64577a24d74bb8347c905ac65-drivers/media/usb/zr364xx/zr364xx.c-zr364xx_start_readpipe CVE-2021-47344
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpipe_info_1016, VariableAccess target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("usb_free_urb")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="stream_urb"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_info_1016
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vretval_1015, BlockStmt target_3, VariableAccess target_1) {
	target_1.getTarget()=vretval_1015
	and target_1.getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Variable vretval_1015, Variable vpipe_info_1016, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vretval_1015
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("usb_submit_urb")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="stream_urb"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_info_1016
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
}

predicate func_3(Variable vretval_1015, BlockStmt target_3) {
	target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3zr364xx: start read pipe failed\n"
	and target_3.getStmt(1).(ReturnStmt).getExpr().(VariableAccess).getTarget()=vretval_1015
}

from Function func, Variable vretval_1015, Variable vpipe_info_1016, VariableAccess target_1, ExprStmt target_2, BlockStmt target_3
where
not func_0(vpipe_info_1016, target_1, target_2)
and func_1(vretval_1015, target_3, target_1)
and func_2(vretval_1015, vpipe_info_1016, target_2)
and func_3(vretval_1015, target_3)
and vretval_1015.getType().hasName("int")
and vpipe_info_1016.getType().hasName("zr364xx_pipeinfo *")
and vretval_1015.(LocalVariable).getFunction() = func
and vpipe_info_1016.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
