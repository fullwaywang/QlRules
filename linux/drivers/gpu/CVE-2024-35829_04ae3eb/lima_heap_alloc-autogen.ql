/**
 * @name linux-04ae3eb470e52a3c41babe85ff8cee195e4dcbea-lima_heap_alloc
 * @id cpp/linux/04ae3eb470e52a3c41babe85ff8cee195e4dcbea/lima-heap-alloc
 * @description linux-04ae3eb470e52a3c41babe85ff8cee195e4dcbea-drivers/gpu/drm/lima/lima_gem.c-lima_heap_alloc CVE-2024-35829
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsgt_29, FunctionCall target_0) {
	target_0.getTarget().hasName("sg_free_table")
	and not target_0.getTarget().hasName("dma_unmap_sgtable")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsgt_29
}

predicate func_1(Variable vret_30, IfStmt target_16, ReturnStmt target_13) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getTarget()=vret_30
	and target_1.getRValue() instanceof UnaryMinusExpr
	and target_16.getCondition().(VariableAccess).getLocation().isBefore(target_1.getLValue().(VariableAccess).getLocation())
	and target_1.getLValue().(VariableAccess).getLocation().isBefore(target_13.getExpr().(VariableAccess).getLocation()))
}

predicate func_2(NotExpr target_17, Function func) {
exists(GotoStmt target_2 |
	target_2.getName() ="err_out0"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(VariableAccess target_18, Function func) {
exists(GotoStmt target_3 |
	target_3.getName() ="err_out1"
	and target_3.getParent().(IfStmt).getCondition()=target_18
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(VariableAccess target_19, Function func) {
exists(GotoStmt target_4 |
	target_4.getName() ="err_out2"
	and target_4.getParent().(IfStmt).getCondition()=target_19
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vdev_25, Variable vsgt_29, ExprStmt target_20, AddressOfExpr target_21, ExprStmt target_22, Function func) {
exists(ExprStmt target_5 |
	target_5.getExpr().(FunctionCall).getTarget().hasName("dma_unmap_sgtable")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_25
	and target_5.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsgt_29
	and target_5.getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_21.getOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
	and target_5.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_22.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_9(Parameter vbo_21, VariableAccess target_18, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_9.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="sgt"
	and target_9.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
	and target_9.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_21
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
}

predicate func_10(Parameter vbo_21, VariableAccess target_18, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="sgt"
	and target_10.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
	and target_10.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_21
	and target_10.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
}

predicate func_11(Variable vsgt_29, NotExpr target_17, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("sg_free_table")
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsgt_29
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_12(Function func, UnaryMinusExpr target_12) {
	target_12.getValue()="-12"
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable vret_30, VariableAccess target_18, ReturnStmt target_13) {
	target_13.getExpr().(VariableAccess).getTarget()=vret_30
	and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
}

predicate func_14(NotExpr target_17, Function func, ReturnStmt target_14) {
	target_14.getExpr() instanceof UnaryMinusExpr
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vret_30, VariableAccess target_19, IfStmt target_23, ReturnStmt target_15) {
	target_15.getExpr().(VariableAccess).getTarget()=vret_30
	and target_15.getParent().(IfStmt).getCondition()=target_19
	and target_23.getCondition().(VariableAccess).getLocation().isBefore(target_15.getExpr().(VariableAccess).getLocation())
}

predicate func_16(Variable vret_30, IfStmt target_16) {
	target_16.getCondition().(VariableAccess).getTarget()=vret_30
	and target_16.getThen() instanceof BlockStmt
}

predicate func_17(Parameter vbo_21, NotExpr target_17) {
	target_17.getOperand().(ValueFieldAccess).getTarget().getName()="sgt"
	and target_17.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
	and target_17.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_21
}

predicate func_18(Variable vret_30, BlockStmt target_24, VariableAccess target_18) {
	target_18.getTarget()=vret_30
	and target_18.getParent().(IfStmt).getThen()=target_24
}

predicate func_19(Variable vret_30, ReturnStmt target_15, VariableAccess target_19) {
	target_19.getTarget()=vret_30
	and target_19.getParent().(IfStmt).getThen()=target_15
}

predicate func_20(Variable vdev_25, Variable vsgt_29, Variable vret_30, ExprStmt target_20) {
	target_20.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_30
	and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dma_map_sgtable")
	and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_25
	and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsgt_29
	and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="0"
}

predicate func_21(Variable vdev_25, Variable vsgt_29, AddressOfExpr target_21) {
	target_21.getOperand().(VariableAccess).getTarget()=vsgt_29
	and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dma_map_sgtable")
	and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_25
	and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="0"
}

predicate func_22(Parameter vbo_21, Variable vsgt_29, ExprStmt target_22) {
	target_22.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(ValueFieldAccess).getTarget().getName()="sgt"
	and target_22.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
	and target_22.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_21
	and target_22.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vsgt_29
}

predicate func_23(Variable vret_30, IfStmt target_23) {
	target_23.getCondition().(VariableAccess).getTarget()=vret_30
	and target_23.getThen() instanceof ReturnStmt
}

predicate func_24(Function func, BlockStmt target_24) {
	target_24.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_24.getStmt(1) instanceof ExprStmt
	and target_24.getStmt(2) instanceof ExprStmt
	and target_24.getStmt(3) instanceof ReturnStmt
	and target_24.getEnclosingFunction() = func
}

from Function func, Parameter vbo_21, Variable vdev_25, Variable vsgt_29, Variable vret_30, FunctionCall target_0, ExprStmt target_9, ExprStmt target_10, ExprStmt target_11, UnaryMinusExpr target_12, ReturnStmt target_13, ReturnStmt target_14, ReturnStmt target_15, IfStmt target_16, NotExpr target_17, VariableAccess target_18, VariableAccess target_19, ExprStmt target_20, AddressOfExpr target_21, ExprStmt target_22, IfStmt target_23, BlockStmt target_24
where
func_0(vsgt_29, target_0)
and not func_1(vret_30, target_16, target_13)
and not func_2(target_17, func)
and not func_3(target_18, func)
and not func_4(target_19, func)
and not func_5(vdev_25, vsgt_29, target_20, target_21, target_22, func)
and func_9(vbo_21, target_18, target_9)
and func_10(vbo_21, target_18, target_10)
and func_11(vsgt_29, target_17, target_11)
and func_12(func, target_12)
and func_13(vret_30, target_18, target_13)
and func_14(target_17, func, target_14)
and func_15(vret_30, target_19, target_23, target_15)
and func_16(vret_30, target_16)
and func_17(vbo_21, target_17)
and func_18(vret_30, target_24, target_18)
and func_19(vret_30, target_15, target_19)
and func_20(vdev_25, vsgt_29, vret_30, target_20)
and func_21(vdev_25, vsgt_29, target_21)
and func_22(vbo_21, vsgt_29, target_22)
and func_23(vret_30, target_23)
and func_24(func, target_24)
and vbo_21.getType().hasName("lima_bo *")
and vdev_25.getType().hasName("device *")
and vsgt_29.getType().hasName("sg_table")
and vret_30.getType().hasName("int")
and vbo_21.getFunction() = func
and vdev_25.(LocalVariable).getFunction() = func
and vsgt_29.(LocalVariable).getFunction() = func
and vret_30.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
