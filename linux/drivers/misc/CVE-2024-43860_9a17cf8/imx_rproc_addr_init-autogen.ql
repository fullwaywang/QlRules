/**
 * @name linux-9a17cf8b2ce483fa75258bc2cdcf628f24bcf5f8-imx_rproc_addr_init
 * @id cpp/linux/9a17cf8b2ce483fa75258bc2cdcf628f24bcf5f8/imx-rproc-addr-init
 * @description linux-9a17cf8b2ce483fa75258bc2cdcf628f24bcf5f8-drivers/remoteproc/imx_rproc.c-imx_rproc_addr_init CVE-2024-43860
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnode_595, IfStmt target_1, ExprStmt target_2, NotExpr target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vnode_595
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vnode_595, IfStmt target_1) {
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="name"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vnode_595
			)
			and exists(FunctionCall obj_3 | obj_3=obj_1.getArgument(2) |
				obj_3.getTarget().hasName("strlen")
				and obj_3.getArgument(0).(StringLiteral).getValue()="vdev"
			)
			and obj_1.getTarget().hasName("strncmp")
			and obj_1.getArgument(1).(StringLiteral).getValue()="vdev"
		)
	)
	and exists(BlockStmt obj_4 | obj_4=target_1.getThen() |
		exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(0) |
			exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
				obj_6.getTarget().hasName("of_node_put")
				and obj_6.getArgument(0).(VariableAccess).getTarget()=vnode_595
			)
		)
	)
}

predicate func_2(Variable vnode_595, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("of_parse_phandle")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("device_node *")
			and obj_1.getArgument(1).(StringLiteral).getValue()="memory-region"
			and obj_1.getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vnode_595
	)
}

predicate func_3(Variable vnode_595, NotExpr target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="name"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vnode_595
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getArgument(2) |
			obj_2.getTarget().hasName("strlen")
			and obj_2.getArgument(0).(StringLiteral).getValue()="vdev"
		)
		and obj_0.getTarget().hasName("strncmp")
		and obj_0.getArgument(1).(StringLiteral).getValue()="vdev"
	)
}

from Function func, Variable vnode_595, IfStmt target_1, ExprStmt target_2, NotExpr target_3
where
not func_0(vnode_595, target_1, target_2, target_3)
and func_1(vnode_595, target_1)
and func_2(vnode_595, target_2)
and func_3(vnode_595, target_3)
and vnode_595.getType().hasName("device_node *")
and vnode_595.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
