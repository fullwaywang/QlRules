/**
 * @name linux-8fc134fee27f2263988ae38920bc03da416b03d8-qfq_dequeue
 * @id cpp/linux/8fc134fee27f2263988ae38920bc03da416b03d8/qfq-dequeue
 * @description linux-8fc134fee27f2263988ae38920bc03da416b03d8-net/sched/sch_qfq.c-qfq_dequeue CVE-2023-4921
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsch_1080, ExprStmt target_5, ExprStmt target_0) {
	target_0.getExpr().(PostfixDecrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="qlen"
	and target_0.getExpr().(PostfixDecrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="q"
	and target_0.getExpr().(PostfixDecrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsch_1080
	and target_5.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(ExprStmt target_6, Function func, ExprStmt target_1) {
	target_1.getExpr() instanceof FunctionCall
	and target_6.getLocation().isBefore(target_1.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vskb_1085, ExprStmt target_6, ReturnStmt target_7) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getTarget()=vskb_1085
	and target_2.getRValue() instanceof FunctionCall
	and target_6.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_2.getLValue().(VariableAccess).getLocation())
	and target_2.getLValue().(VariableAccess).getLocation().isBefore(target_7.getExpr().(VariableAccess).getLocation()))
}

predicate func_3(Variable vskb_1085, Parameter vsch_1080, ExprStmt target_6, ExprStmt target_5, ExprStmt target_0, Function func) {
exists(IfStmt target_3 |
	target_3.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vskb_1085
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="qlen"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="q"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsch_1080
	and target_3.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_6.getLocation())
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getExpr().(PostfixDecrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vin_serv_agg_1083, Variable vcl_1084, Variable vlen_1087, FunctionCall target_4) {
	target_4.getTarget().hasName("agg_dequeue")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vin_serv_agg_1083
	and target_4.getArgument(1).(VariableAccess).getTarget()=vcl_1084
	and target_4.getArgument(2).(VariableAccess).getTarget()=vlen_1087
}

predicate func_5(Variable vskb_1085, Parameter vsch_1080, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("qdisc_qstats_backlog_dec")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsch_1080
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_1085
}

predicate func_6(Variable vskb_1085, Parameter vsch_1080, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("qdisc_bstats_update")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsch_1080
	and target_6.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_1085
}

predicate func_7(Variable vskb_1085, ReturnStmt target_7) {
	target_7.getExpr().(VariableAccess).getTarget()=vskb_1085
}

from Function func, Variable vin_serv_agg_1083, Variable vcl_1084, Variable vskb_1085, Variable vlen_1087, Parameter vsch_1080, ExprStmt target_0, ExprStmt target_1, FunctionCall target_4, ExprStmt target_5, ExprStmt target_6, ReturnStmt target_7
where
func_0(vsch_1080, target_5, target_0)
and func_1(target_6, func, target_1)
and not func_2(vskb_1085, target_6, target_7)
and not func_3(vskb_1085, vsch_1080, target_6, target_5, target_0, func)
and func_4(vin_serv_agg_1083, vcl_1084, vlen_1087, target_4)
and func_5(vskb_1085, vsch_1080, target_5)
and func_6(vskb_1085, vsch_1080, target_6)
and func_7(vskb_1085, target_7)
and vin_serv_agg_1083.getType().hasName("qfq_aggregate *")
and vcl_1084.getType().hasName("qfq_class *")
and vskb_1085.getType().hasName("sk_buff *")
and vlen_1087.getType().hasName("unsigned int")
and vsch_1080.getType().hasName("Qdisc *")
and vin_serv_agg_1083.(LocalVariable).getFunction() = func
and vcl_1084.(LocalVariable).getFunction() = func
and vskb_1085.(LocalVariable).getFunction() = func
and vlen_1087.(LocalVariable).getFunction() = func
and vsch_1080.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
