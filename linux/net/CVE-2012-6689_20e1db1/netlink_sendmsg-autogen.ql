/**
 * @name linux-20e1db19db5d6b9e4e83021595eab0dc8f107bef-netlink_sendmsg
 * @id cpp/linux/20e1db19db5d6b9e4e83021595eab0dc8f107bef/netlink-sendmsg
 * @description linux-20e1db19db5d6b9e4e83021595eab0dc8f107bef-net/netlink/af_netlink.c-netlink_sendmsg CVE-2012-6689
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdst_pid_1353, Variable vdst_group_1354, ExprStmt target_2, ExprStmt target_3) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vdst_group_1354
		and target_0.getAnOperand().(VariableAccess).getTarget()=vdst_pid_1353
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget()=vdst_group_1354
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("netlink_capable")
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("socket *")
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="2"
		and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
		and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(VariableAccess).getLocation())
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vdst_group_1354, VariableAccess target_1) {
		target_1.getTarget()=vdst_group_1354
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("netlink_capable")
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("socket *")
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="2"
		and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_2(Variable vdst_pid_1353, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdst_pid_1353
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="nl_pid"
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sockaddr_nl *")
}

predicate func_3(Variable vdst_group_1354, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdst_group_1354
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ffs")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="nl_groups"
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sockaddr_nl *")
}

from Function func, Variable vdst_pid_1353, Variable vdst_group_1354, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vdst_pid_1353, vdst_group_1354, target_2, target_3)
and func_1(vdst_group_1354, target_1)
and func_2(vdst_pid_1353, target_2)
and func_3(vdst_group_1354, target_3)
and vdst_pid_1353.getType().hasName("u32")
and vdst_group_1354.getType().hasName("u32")
and vdst_pid_1353.(LocalVariable).getFunction() = func
and vdst_group_1354.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
