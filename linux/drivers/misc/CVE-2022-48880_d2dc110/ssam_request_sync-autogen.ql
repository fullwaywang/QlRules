/**
 * @name linux-d2dc110deabe7142b60ebeed689e67f92795ee24-ssam_request_sync
 * @id cpp/linux/d2dc110deabe7142b60ebeed689e67f92795ee24/ssam-request-sync
 * @description linux-d2dc110deabe7142b60ebeed689e67f92795ee24-drivers/platform/surface/aggregator/controller.c-ssam_request_sync CVE-2022-48880
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrqst_1693, ExprStmt target_1, ExprStmt target_4, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("ssam_request_sync_free")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vrqst_1693
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vrqst_1693, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("ssam_request_sync_free")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vrqst_1693
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vstatus_1696, Function func, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=vstatus_1696
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vstatus_1696, VariableAccess target_5, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vstatus_1696
	and target_3.getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vrqst_1693, Variable vstatus_1696, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("ssam_request_sync_wait")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vrqst_1693
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vstatus_1696
	)
}

predicate func_5(Variable vstatus_1696, ReturnStmt target_3, VariableAccess target_5) {
	target_5.getTarget()=vstatus_1696
	and target_5.getParent().(IfStmt).getThen()=target_3
}

from Function func, Variable vrqst_1693, Variable vstatus_1696, ExprStmt target_1, ReturnStmt target_2, ReturnStmt target_3, ExprStmt target_4, VariableAccess target_5
where
not func_0(vrqst_1693, target_1, target_4, func)
and func_1(vrqst_1693, func, target_1)
and func_2(vstatus_1696, func, target_2)
and func_3(vstatus_1696, target_5, target_3)
and func_4(vrqst_1693, vstatus_1696, target_4)
and func_5(vstatus_1696, target_3, target_5)
and vrqst_1693.getType().hasName("ssam_request_sync *")
and vstatus_1696.getType().hasName("int")
and vrqst_1693.(LocalVariable).getFunction() = func
and vstatus_1696.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
