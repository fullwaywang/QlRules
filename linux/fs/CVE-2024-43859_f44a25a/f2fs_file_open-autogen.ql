/**
 * @name linux-f44a25a8bfe0c15d33244539696cd9119cf44d18-f2fs_file_open
 * @id cpp/linux/f44a25a8bfe0c15d33244539696cd9119cf44d18/f2fs-file-open
 * @description linux-f44a25a8bfe0c15d33244539696cd9119cf44d18-fs/f2fs/file.c-f2fs_file_open CVE-2024-43859
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_539, ReturnStmt target_5, Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=verr_539
		and obj_0.getRValue() instanceof FunctionCall
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_5.getExpr().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_3(Parameter vinode_537, ExprStmt target_6, FunctionCall target_4, Function func) {
exists(ReturnStmt target_3 |
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("finish_preallocate_blocks")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_537
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_4(Parameter vinode_537, Parameter vfilp_537, FunctionCall target_4) {
	target_4.getTarget().hasName("dquot_file_open")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vinode_537
	and target_4.getArgument(1).(VariableAccess).getTarget()=vfilp_537
}

predicate func_5(Variable verr_539, VariableAccess target_7, ReturnStmt target_5) {
	target_5.getExpr().(VariableAccess).getTarget()=verr_539
	and target_5.getParent().(IfStmt).getCondition()=target_7
}

predicate func_6(Parameter vinode_537, Parameter vfilp_537, Variable verr_539, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("fsverity_file_open")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vinode_537
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vfilp_537
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_539
	)
}

predicate func_7(Variable verr_539, ReturnStmt target_5, VariableAccess target_7) {
	target_7.getTarget()=verr_539
	and target_7.getParent().(IfStmt).getThen()=target_5
}

from Function func, Parameter vinode_537, Parameter vfilp_537, Variable verr_539, FunctionCall target_4, ReturnStmt target_5, ExprStmt target_6, VariableAccess target_7
where
not func_0(verr_539, target_5, func)
and not func_3(vinode_537, target_6, target_4, func)
and func_4(vinode_537, vfilp_537, target_4)
and func_5(verr_539, target_7, target_5)
and func_6(vinode_537, vfilp_537, verr_539, target_6)
and func_7(verr_539, target_5, target_7)
and vinode_537.getType().hasName("inode *")
and vfilp_537.getType().hasName("file *")
and verr_539.getType().hasName("int")
and vinode_537.getFunction() = func
and vfilp_537.getFunction() = func
and verr_539.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
