/**
 * @name linux-09ba3bc9dd150457c506e4661380a6183af651c1-verify_one_dev_extent
 * @id cpp/linux/09ba3bc9dd150457c506e4661380a6183af651c1/verify-one-dev-extent
 * @description linux-09ba3bc9dd150457c506e4661380a6183af651c1-fs/btrfs/volumes.c-verify_one_dev_extent CVE-2019-18885
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdevid_7768, Parameter vfs_info_7767, FunctionCall target_0) {
	target_0.getTarget().hasName("find_device")
	and not target_0.getTarget().hasName("btrfs_find_device")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="seed"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="fs_devices"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfs_info_7767
	and target_0.getArgument(1).(VariableAccess).getTarget()=vdevid_7768
	and target_0.getArgument(2).(Literal).getValue()="0"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("btrfs_device *")
}

from Function func, Parameter vdevid_7768, Parameter vfs_info_7767, FunctionCall target_0
where
func_0(vdevid_7768, vfs_info_7767, target_0)
and vdevid_7768.getType().hasName("u64")
and vfs_info_7767.getType().hasName("btrfs_fs_info *")
and vdevid_7768.getFunction() = func
and vfs_info_7767.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
