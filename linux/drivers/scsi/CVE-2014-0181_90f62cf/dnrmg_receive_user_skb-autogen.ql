/**
 * @name linux-90f62cf30a78721641e08737bda787552428061e-dnrmg_receive_user_skb
 * @id cpp/linux/90f62cf30a78721641e08737bda787552428061e/dnrmg-receive-user-skb
 * @description linux-90f62cf30a78721641e08737bda787552428061e-net/decnet/netfilter/dn_rtmsg.c-dnrmg_receive_user_skb CVE-2014-0181
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(DoStmt target_2, Function func, FunctionCall target_0) {
		target_0.getTarget().hasName("capable")
		and not target_0.getTarget().hasName("netlink_capable")
		and target_0.getArgument(0).(Literal).getValue()="12"
		and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_2
		and target_0.getEnclosingFunction() = func
}

predicate func_2(Function func, DoStmt target_2) {
		target_2.getCondition().(Literal).getValue()="0"
		and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("netlink_ack")
		and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("nlmsghdr *")
		and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(UnaryMinusExpr).getValue()="-1"
		and target_2.getEnclosingFunction() = func
}

from Function func, FunctionCall target_0, DoStmt target_2
where
func_0(target_2, func, target_0)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
