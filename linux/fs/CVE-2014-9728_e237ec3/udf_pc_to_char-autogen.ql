/**
 * @name linux-e237ec37ec154564f8690c5bd1795339955eeef9-udf_pc_to_char
 * @id cpp/linux/e237ec37ec154564f8690c5bd1795339955eeef9/udf-pc-to-char
 * @description linux-e237ec37ec154564f8690c5bd1795339955eeef9-fs/udf/symlink.c-udf_pc_to_char CVE-2014-9728
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpc_36, Variable velen_37, RelationalOperation target_7, ExprStmt target_8, ExprStmt target_9) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=velen_37
		and target_0.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="lengthComponentIdent"
		and target_0.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpc_36
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_9.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vpc_36, Variable velen_37, PointerFieldAccess target_10, RelationalOperation target_7, ExprStmt target_8) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=velen_37
		and target_1.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="lengthComponentIdent"
		and target_1.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpc_36
		and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_10
		and target_7.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vfromlen_34, Variable velen_37, PointerFieldAccess target_10, RelationalOperation target_11, ExprStmt target_12) {
	exists(IfStmt target_2 |
		target_2.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=velen_37
		and target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vfromlen_34
		and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
		and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_10
		and target_11.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_2.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Variable vpc_36, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="lengthComponentIdent"
		and target_3.getQualifier().(VariableAccess).getTarget()=vpc_36
}

predicate func_4(RelationalOperation target_7, Function func, BreakStmt target_4) {
		target_4.getParent().(IfStmt).getCondition()=target_7
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, SizeofTypeOperator target_5) {
		target_5.getType() instanceof LongType
		and target_5.getValue()="4"
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vpc_36, Variable velen_37, AddExpr target_6) {
		target_6.getAnOperand() instanceof SizeofTypeOperator
		and target_6.getAnOperand().(PointerFieldAccess).getTarget().getName()="lengthComponentIdent"
		and target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpc_36
		and target_6.getParent().(AssignAddExpr).getRValue() = target_6
		and target_6.getParent().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=velen_37
}

predicate func_7(Variable vpc_36, RelationalOperation target_7) {
		 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
		and target_7.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="lengthComponentIdent"
		and target_7.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpc_36
		and target_7.getLesserOperand().(Literal).getValue()="0"
}

predicate func_8(Variable vpc_36, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("udf_get_filename")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("super_block *")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="componentIdent"
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpc_36
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="lengthComponentIdent"
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpc_36
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_9(Variable vpc_36, Variable velen_37, ExprStmt target_9) {
		target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpc_36
		and target_9.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_9.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=velen_37
}

predicate func_10(Variable vpc_36, PointerFieldAccess target_10) {
		target_10.getTarget().getName()="componentType"
		and target_10.getQualifier().(VariableAccess).getTarget()=vpc_36
}

predicate func_11(Parameter vfromlen_34, Variable velen_37, RelationalOperation target_11) {
		 (target_11 instanceof GTExpr or target_11 instanceof LTExpr)
		and target_11.getLesserOperand().(VariableAccess).getTarget()=velen_37
		and target_11.getGreaterOperand().(VariableAccess).getTarget()=vfromlen_34
}

predicate func_12(Variable velen_37, ExprStmt target_12) {
		target_12.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=velen_37
		and target_12.getExpr().(AssignAddExpr).getRValue() instanceof AddExpr
}

from Function func, Parameter vfromlen_34, Variable vpc_36, Variable velen_37, PointerFieldAccess target_3, BreakStmt target_4, SizeofTypeOperator target_5, AddExpr target_6, RelationalOperation target_7, ExprStmt target_8, ExprStmt target_9, PointerFieldAccess target_10, RelationalOperation target_11, ExprStmt target_12
where
not func_0(vpc_36, velen_37, target_7, target_8, target_9)
and not func_1(vpc_36, velen_37, target_10, target_7, target_8)
and not func_2(vfromlen_34, velen_37, target_10, target_11, target_12)
and func_3(vpc_36, target_3)
and func_4(target_7, func, target_4)
and func_5(func, target_5)
and func_6(vpc_36, velen_37, target_6)
and func_7(vpc_36, target_7)
and func_8(vpc_36, target_8)
and func_9(vpc_36, velen_37, target_9)
and func_10(vpc_36, target_10)
and func_11(vfromlen_34, velen_37, target_11)
and func_12(velen_37, target_12)
and vfromlen_34.getType().hasName("int")
and vpc_36.getType().hasName("pathComponent *")
and velen_37.getType().hasName("int")
and vfromlen_34.getFunction() = func
and vpc_36.(LocalVariable).getFunction() = func
and velen_37.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
