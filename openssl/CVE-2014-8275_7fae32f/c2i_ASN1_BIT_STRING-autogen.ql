/**
 * @name openssl-7fae32f6d69baf27ef69d92499c59c8a3277f3e3-c2i_ASN1_BIT_STRING
 * @id cpp/openssl/7fae32f6d69baf27ef69d92499c59c8a3277f3e3/c2i-asn1-bit-string
 * @description openssl-7fae32f6d69baf27ef69d92499c59c8a3277f3e3-crypto/asn1/a_bitstr.c-c2i_ASN1_BIT_STRING CVE-2014-8275
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vi_122, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vi_122
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="7"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_122
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="220"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0)
}

predicate func_2(Variable vi_122, VariableAccess target_2) {
		target_2.getTarget()=vi_122
}

predicate func_3(Variable vi_122, BitwiseAndExpr target_3) {
		target_3.getLeftOperand().(VariableAccess).getTarget()=vi_122
		and target_3.getRightOperand().(HexLiteral).getValue()="7"
}

from Function func, Variable vi_122, VariableAccess target_2, BitwiseAndExpr target_3
where
not func_0(vi_122, func)
and func_2(vi_122, target_2)
and func_3(vi_122, target_3)
and vi_122.getType().hasName("int")
and vi_122.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
