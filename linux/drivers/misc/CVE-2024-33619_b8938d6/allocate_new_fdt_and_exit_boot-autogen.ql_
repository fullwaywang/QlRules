/**
 * @name linux-b8938d6f570f010a1dcdbfed3e5b5d3258c2a908-allocate_new_fdt_and_exit_boot
 * @id cpp/linux/b8938d6f570f010a1dcdbfed3e5b5d3258c2a908/allocate-new-fdt-and-exit-boot
 * @description linux-b8938d6f570f010a1dcdbfed3e5b5d3258c2a908-drivers/firmware/efi/libstub/fdt.c-allocate_new_fdt_and_exit_boot CVE-2024-33619
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vefi_novamap, ExprStmt target_1, IfStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vefi_novamap
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getCondition().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vpriv_231, Variable v__pad_339, Function func, ExprStmt target_1) {
	exists(ConditionalExpr obj_0 | obj_0=target_1.getExpr() |
		exists(VariableCall obj_1 | obj_1=obj_0.getThen() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getExpr() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					exists(ValueFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="boottime"
						and obj_4.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
					)
					and obj_3.getTarget().getName()="(unknown field)"
				)
				and obj_2.getTarget().getName()="free_pool"
			)
			and exists(ValueFieldAccess obj_5 | obj_5=obj_1.getArgument(0) |
				obj_5.getTarget().getName()="runtime_map"
				and obj_5.getQualifier().(VariableAccess).getTarget()=vpriv_231
			)
		)
		and exists(StmtExpr obj_6 | obj_6=obj_0.getElse() |
			exists(BlockStmt obj_7 | obj_7=obj_6.getStmt() |
				exists(ExprStmt obj_8 | obj_8=obj_7.getStmt(2) |
					exists(FunctionCall obj_9 | obj_9=obj_8.getExpr() |
						obj_9.getTarget().hasName("__efi64_thunk")
						and obj_9.getArgument(0).(ValueFieldAccess).getTarget().getName()="free_pool"
						and obj_9.getArgument(1).(ValueFieldAccess).getTarget().getName()="runtime_map"
						and obj_9.getArgument(2).(VariableAccess).getTarget()=v__pad_339
					)
				)
			)
		)
		and obj_0.getCondition().(FunctionCall).getTarget().hasName("efi_is_native")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vefi_novamap, IfStmt target_2) {
	target_2.getCondition().(VariableAccess).getTarget()=vefi_novamap
	and target_2.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
}

from Function func, Variable vpriv_231, Variable vefi_novamap, Variable v__pad_339, ExprStmt target_1, IfStmt target_2
where
not func_0(vefi_novamap, target_1, target_2, func)
and func_1(vpriv_231, v__pad_339, func, target_1)
and func_2(vefi_novamap, target_2)
and vpriv_231.getType().hasName("exit_boot_struct")
and vefi_novamap.getType().hasName("bool")
and v__pad_339.getType().hasName("u64[3]")
and vpriv_231.(LocalVariable).getFunction() = func
and not vefi_novamap.getParentScope+() = func
and v__pad_339.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
