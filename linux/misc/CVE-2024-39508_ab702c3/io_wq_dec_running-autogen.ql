/**
 * @name linux-ab702c3483db9046bab9f40306f1a28b22dbbdc0-io_wq_dec_running
 * @id cpp/linux/ab702c3483db9046bab9f40306f1a28b22dbbdc0/io-wq-dec-running
 * @description linux-ab702c3483db9046bab9f40306f1a28b22dbbdc0-io_uring/io-wq.c-io_wq_dec_running CVE-2024-39508
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vworker_408) {
exists(ConditionalExpr target_1 |
	exists(LogicalAndExpr obj_0 | obj_0=target_1.getCondition() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRightOperand() |
					obj_3.getTarget().hasName("__builtin_constant_p")
					and obj_3.getArgument(0).(EqualityOperation).getRightOperand().(Literal).getValue()="0"
				)
				and obj_2.getLeftOperand().(Literal).getValue()="1"
			)
			and exists(EqualityOperation obj_4 | obj_4=obj_1.getRightOperand() |
				exists(AddressOfExpr obj_5 | obj_5=obj_4.getLeftOperand() |
					exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
						obj_6.getTarget().getName()="flags"
						and obj_6.getQualifier().(VariableAccess).getTarget()=vworker_408
					)
				)
				and obj_4.getRightOperand().(Literal).getValue()="0"
			)
		)
		and exists(FunctionCall obj_7 | obj_7=obj_0.getRightOperand() |
			exists(PointerDereferenceExpr obj_8 | obj_8=obj_7.getArgument(0) |
				exists(AddressOfExpr obj_9 | obj_9=obj_8.getOperand() |
					exists(PointerFieldAccess obj_10 | obj_10=obj_9.getOperand() |
						obj_10.getTarget().getName()="flags"
						and obj_10.getQualifier().(VariableAccess).getTarget()=vworker_408
					)
				)
			)
			and obj_7.getTarget().hasName("__builtin_constant_p")
		)
	)
	and exists(FunctionCall obj_11 | obj_11=target_1.getThen() |
		exists(AddressOfExpr obj_12 | obj_12=obj_11.getArgument(1) |
			exists(PointerFieldAccess obj_13 | obj_13=obj_12.getOperand() |
				obj_13.getTarget().getName()="flags"
				and obj_13.getQualifier().(VariableAccess).getTarget()=vworker_408
			)
		)
		and obj_11.getTarget().hasName("const_test_bit")
	)
	and exists(FunctionCall obj_14 | obj_14=target_1.getElse() |
		exists(AddressOfExpr obj_15 | obj_15=obj_14.getArgument(1) |
			exists(PointerFieldAccess obj_16 | obj_16=obj_15.getOperand() |
				obj_16.getTarget().getName()="flags"
				and obj_16.getQualifier().(VariableAccess).getTarget()=vworker_408
			)
		)
		and obj_14.getTarget().hasName("_test_bit")
	)
	and exists(NotExpr obj_17 | obj_17=target_1.getParent() |
		obj_17.getOperand() instanceof BitwiseAndExpr
		and obj_17.getParent().(IfStmt).getThen() instanceof ReturnStmt
	)
)
}

predicate func_2(Parameter vworker_408, VariableAccess target_2) {
	target_2.getTarget()=vworker_408
}

predicate func_3(Parameter vworker_408, BitwiseAndExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getLeftOperand() |
		obj_0.getTarget().getName()="flags"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vworker_408
	)
	and target_3.getRightOperand() instanceof EnumConstantAccess
	and target_3.getParent().(NotExpr).getParent().(IfStmt).getThen() instanceof ReturnStmt
}

from Function func, Parameter vworker_408, VariableAccess target_2, BitwiseAndExpr target_3
where
not func_1(vworker_408)
and func_2(vworker_408, target_2)
and func_3(vworker_408, target_3)
and vworker_408.getType().hasName("io_worker *")
and vworker_408.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
