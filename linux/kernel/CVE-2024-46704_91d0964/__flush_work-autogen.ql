/**
 * @name linux-91d09642127a32fde231face2ff489af70eef316-__flush_work
 * @id cpp/linux/91d09642127a32fde231face2ff489af70eef316/--flush-work
 * @description linux-91d09642127a32fde231face2ff489af70eef316-kernel/workqueue.c-__flush_work CVE-2024-46704
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(Initializer target_0 |
	target_0.getExpr() instanceof PointerDereferenceExpr
	and target_0.getExpr().getEnclosingFunction() = func
)
}

predicate func_1(Variable vdata_4193, LogicalAndExpr target_10, NotExpr target_11) {
exists(IfStmt target_1 |
	exists(LogicalAndExpr obj_0 | obj_0=target_1.getCondition() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getRightOperand() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vdata_4193
			and obj_1.getRightOperand().(BinaryBitwiseOperation).getValue()="32"
		)
		and obj_0.getLeftOperand() instanceof NotExpr
	)
	and exists(BlockStmt obj_2 | obj_2=target_1.getThen() |
		obj_2.getStmt(0) instanceof WhileStmt
		and obj_2.getStmt(1).(GotoStmt).getName() ="out_destroy"
	)
	and exists(BlockStmt obj_3 | obj_3=target_1.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(1)=target_1
			and obj_4.getCondition()=target_10
		)
	)
	and target_11.getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_1.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
)
}

/*predicate func_2(LogicalAndExpr target_10, Function func) {
exists(GotoStmt target_2 |
	exists(BlockStmt obj_0 | obj_0=target_2.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getElse().(BlockStmt).getStmt(1)=target_2
			and obj_1.getCondition()=target_10
		)
	)
	and target_2.getName() ="out_destroy"
	and target_2.getEnclosingFunction() = func
)
}

*/
predicate func_3(Parameter vwork_4190, Variable vdata_4193, PointerDereferenceExpr target_3) {
	exists(AddressOfExpr obj_0 | obj_0=target_3.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="data"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vwork_4190
		)
	)
	and exists(AssignExpr obj_2 | obj_2=target_3.getParent() |
		obj_2.getRValue() = target_3
		and obj_2.getLValue().(VariableAccess).getTarget()=vdata_4193
	)
}

predicate func_4(Function func, NotExpr target_4) {
	exists(StmtExpr obj_0 | obj_0=target_4.getOperand() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(IfStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getCondition() |
					obj_3.getTarget().hasName("__builtin_expect")
					and obj_3.getArgument(1) instanceof Literal
				)
				and obj_2.getThen().(DoStmt).getCondition() instanceof Literal
			)
			and exists(ExprStmt obj_4 | obj_4=obj_1.getStmt(2) |
				exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
					obj_5.getTarget().hasName("__builtin_expect")
					and obj_5.getArgument(1) instanceof Literal
				)
			)
		)
	)
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vbarr_4192, LogicalAndExpr target_10, WhileStmt target_5) {
	exists(NotExpr obj_0 | obj_0=target_5.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="done"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vbarr_4192
				)
			)
			and obj_1.getTarget().hasName("try_wait_for_completion")
		)
	)
	and exists(BlockStmt obj_4 | obj_4=target_5.getStmt() |
		exists(IfStmt obj_5 | obj_5=obj_4.getStmt(0) |
			exists(BlockStmt obj_6 | obj_6=obj_5.getThen() |
				obj_6.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("local_bh_disable")
				and obj_6.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("local_bh_enable")
			)
			and obj_5.getCondition().(Literal).getValue()="0"
			and obj_5.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("cpu_relax")
		)
	)
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_6(Variable vbarr_4192, LogicalAndExpr target_10, ExprStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="done"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vbarr_4192
			)
		)
		and obj_0.getTarget().hasName("wait_for_completion")
	)
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_7(Parameter vfrom_cancel_4190, VariableAccess target_7) {
	target_7.getTarget()=vfrom_cancel_4190
}

predicate func_8(Variable vdata_4193, Function func, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vdata_4193
		and obj_0.getRValue() instanceof PointerDereferenceExpr
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Parameter vfrom_cancel_4190, Variable vdata_4193, BlockStmt target_12, LogicalAndExpr target_9) {
	exists(LogicalAndExpr obj_0 | obj_0=target_9.getParent() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getRightOperand() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vdata_4193
			and obj_1.getRightOperand().(BinaryBitwiseOperation).getValue()="32"
		)
		and obj_0.getParent().(IfStmt).getThen()=target_12
	)
	and target_9.getLeftOperand().(VariableAccess).getTarget()=vfrom_cancel_4190
	and target_9.getRightOperand() instanceof NotExpr
}

predicate func_10(Variable vdata_4193, LogicalAndExpr target_10) {
	exists(BitwiseAndExpr obj_0 | obj_0=target_10.getRightOperand() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vdata_4193
		and obj_0.getRightOperand().(BinaryBitwiseOperation).getValue()="32"
	)
	and target_10.getLeftOperand() instanceof LogicalAndExpr
}

predicate func_11(Variable vdata_4193, NotExpr target_11) {
	target_11.getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdata_4193
}

predicate func_12(Function func, BlockStmt target_12) {
	target_12.getStmt(0) instanceof WhileStmt
	and target_12.getEnclosingFunction() = func
}

from Function func, Parameter vwork_4190, Parameter vfrom_cancel_4190, Variable vbarr_4192, Variable vdata_4193, PointerDereferenceExpr target_3, NotExpr target_4, WhileStmt target_5, ExprStmt target_6, VariableAccess target_7, ExprStmt target_8, LogicalAndExpr target_9, LogicalAndExpr target_10, NotExpr target_11, BlockStmt target_12
where
not func_0(func)
and not func_1(vdata_4193, target_10, target_11)
and func_3(vwork_4190, vdata_4193, target_3)
and func_4(func, target_4)
and func_5(vbarr_4192, target_10, target_5)
and func_6(vbarr_4192, target_10, target_6)
and func_7(vfrom_cancel_4190, target_7)
and func_8(vdata_4193, func, target_8)
and func_9(vfrom_cancel_4190, vdata_4193, target_12, target_9)
and func_10(vdata_4193, target_10)
and func_11(vdata_4193, target_11)
and func_12(func, target_12)
and vwork_4190.getType().hasName("work_struct *")
and vfrom_cancel_4190.getType().hasName("bool")
and vbarr_4192.getType().hasName("wq_barrier")
and vdata_4193.getType().hasName("unsigned long")
and vwork_4190.getFunction() = func
and vfrom_cancel_4190.getFunction() = func
and vbarr_4192.(LocalVariable).getFunction() = func
and vdata_4193.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
