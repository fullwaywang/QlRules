/**
 * @name linux-b15fa9224e6e1239414525d8d556d824701849fc-ocfs2_initialize_super
 * @id cpp/linux/b15fa9224e6e1239414525d8d556d824701849fc/ocfs2-initialize-super
 * @description linux-b15fa9224e6e1239414525d8d556d824701849fc-fs/ocfs2/super.c-ocfs2_initialize_super CVE-2021-47458
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vosb_2020, EqualityOperation target_10) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("__memcpy")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="osb_cluster_stack"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_0.getArgument(1) instanceof ValueFieldAccess
	and target_0.getArgument(2) instanceof Literal
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vosb_2020, ExprStmt target_11) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("__memcpy")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="osb_cluster_name"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_1.getArgument(1) instanceof ValueFieldAccess
	and target_1.getArgument(2) instanceof Literal
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_11.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vosb_2020, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="osb_cluster_stack"
	and target_2.getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Variable vdi_2017, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="ci_stack"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="s_cluster_info"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="i_super"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="id2"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdi_2017
}

predicate func_4(Variable vosb_2020, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="osb_cluster_name"
	and target_4.getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_5(Variable vdi_2017, ValueFieldAccess target_5) {
	target_5.getTarget().getName()="ci_cluster"
	and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="s_cluster_info"
	and target_5.getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="i_super"
	and target_5.getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="id2"
	and target_5.getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdi_2017
}

predicate func_8(Variable vosb_2020, FunctionCall target_8) {
	target_8.getTarget().hasName("strlcpy")
	and target_8.getArgument(0).(PointerFieldAccess).getTarget().getName()="osb_cluster_stack"
	and target_8.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_8.getArgument(1) instanceof ValueFieldAccess
	and target_8.getArgument(2).(AddExpr).getValue()="5"
}

predicate func_9(Variable vosb_2020, FunctionCall target_9) {
	target_9.getTarget().hasName("strlcpy")
	and target_9.getArgument(0).(PointerFieldAccess).getTarget().getName()="osb_cluster_name"
	and target_9.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_9.getArgument(1) instanceof ValueFieldAccess
	and target_9.getArgument(2).(AddExpr).getValue()="17"
}

predicate func_10(Variable vosb_2020, EqualityOperation target_10) {
	target_10.getLeftOperand().(FunctionCall).getTarget().hasName("strlen")
	and target_10.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="osb_cluster_stack"
	and target_10.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_10.getRightOperand().(Literal).getValue()="4"
}

predicate func_11(Variable vosb_2020, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="osb_cluster_stack"
	and target_11.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vosb_2020
	and target_11.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_11.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
}

from Function func, Variable vdi_2017, Variable vosb_2020, PointerFieldAccess target_2, ValueFieldAccess target_3, PointerFieldAccess target_4, ValueFieldAccess target_5, FunctionCall target_8, FunctionCall target_9, EqualityOperation target_10, ExprStmt target_11
where
not func_0(vosb_2020, target_10)
and not func_1(vosb_2020, target_11)
and func_2(vosb_2020, target_2)
and func_3(vdi_2017, target_3)
and func_4(vosb_2020, target_4)
and func_5(vdi_2017, target_5)
and func_8(vosb_2020, target_8)
and func_9(vosb_2020, target_9)
and func_10(vosb_2020, target_10)
and func_11(vosb_2020, target_11)
and vdi_2017.getType().hasName("ocfs2_dinode *")
and vosb_2020.getType().hasName("ocfs2_super *")
and vdi_2017.(LocalVariable).getFunction() = func
and vosb_2020.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
