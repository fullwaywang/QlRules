/**
 * @name linux-7bab09631c2a303f87a7eb7e3d69e888673b9b7e-xfrm_migrate
 * @id cpp/linux/7bab09631c2a303f87a7eb7e3d69e888673b9b7e/xfrm-migrate
 * @description linux-7bab09631c2a303f87a7eb7e3d69e888673b9b7e-net/xfrm/xfrm_policy.c-xfrm_migrate CVE-2017-11600
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdir_3299, Variable verr_3304, IfStmt target_1, EqualityOperation target_2, RelationalOperation target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vdir_3299
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_3304
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
	and target_0.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_3.getLesserOperand().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdir_3299, Variable verr_3304, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("xfrm_policy *")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("xfrm_migrate_policy_find")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const xfrm_selector *")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdir_3299
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u8")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("net *")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_3304
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-2"
	and target_1.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
}

predicate func_2(Parameter vdir_3299, EqualityOperation target_2) {
	target_2.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("xfrm_policy *")
	and target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("xfrm_migrate_policy_find")
	and target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const xfrm_selector *")
	and target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdir_3299
	and target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u8")
	and target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("net *")
	and target_2.getRightOperand().(Literal).getValue()="0"
}

predicate func_3(Variable verr_3304, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_3304
	and target_3.getLesserOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("xfrm_migrate_check")
	and target_3.getLesserOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("xfrm_migrate *")
	and target_3.getLesserOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getGreaterOperand().(Literal).getValue()="0"
}

from Function func, Parameter vdir_3299, Variable verr_3304, IfStmt target_1, EqualityOperation target_2, RelationalOperation target_3
where
not func_0(vdir_3299, verr_3304, target_1, target_2, target_3, func)
and func_1(vdir_3299, verr_3304, target_1)
and func_2(vdir_3299, target_2)
and func_3(verr_3304, target_3)
and vdir_3299.getType().hasName("u8")
and verr_3304.getType().hasName("int")
and vdir_3299.getFunction() = func
and verr_3304.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
