/**
 * @name linux-6e8ab72a812396996035a37e5ca4b3b99b5d214b-ext4_destroy_inline_data_nolock
 * @id cpp/linux/6e8ab72a812396996035a37e5ca4b3b99b5d214b/ext4-destroy-inline-data-nolock
 * @description linux-6e8ab72a812396996035a37e5ca4b3b99b5d214b-fs/ext4/inline.c-ext4_destroy_inline_data_nolock CVE-2018-10881
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vei_406, NotExpr target_1, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_data"
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vei_406
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getExpr().(FunctionCall).getArgument(2).(MulExpr).getValue()="60"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vei_406, NotExpr target_1) {
		target_1.getOperand().(PointerFieldAccess).getTarget().getName()="i_inline_off"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vei_406
}

from Function func, Variable vei_406, NotExpr target_1
where
not func_0(vei_406, target_1, func)
and func_1(vei_406, target_1)
and vei_406.getType().hasName("ext4_inode_info *")
and vei_406.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
