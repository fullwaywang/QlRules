/**
 * @name linux-4fa4302d6dc7de7e8e74dc7405611a2efb4bf54b-cxl_region_decode_reset
 * @id cpp/linux/4fa4302d6dc7de7e8e74dc7405611a2efb4bf54b/cxl-region-decode-reset
 * @description linux-4fa4302d6dc7de7e8e74dc7405611a2efb4bf54b-drivers/cxl/core/region.c-cxl_region_decode_reset CVE-2022-48707
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(Initializer target_0 |
	target_0.getExpr().(Literal).getValue()="0"
	and target_0.getExpr().getEnclosingFunction() = func)
}

predicate func_1(Variable vcxld_142, ExprStmt target_2, ExprStmt target_3) {
exists(IfStmt target_1 |
	target_1.getCondition().(PointerFieldAccess).getTarget().getName()="reset"
	and target_1.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcxld_142
	and target_1.getThen() instanceof ExprStmt
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vrc_134, Variable vcxld_142, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_134
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="reset"
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcxld_142
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vcxld_142
}

predicate func_3(Variable vcxld_142, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcxld_142
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="decoder"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("cxl_region_ref *")
}

from Function func, Variable vrc_134, Variable vcxld_142, ExprStmt target_2, ExprStmt target_3
where
not func_0(func)
and not func_1(vcxld_142, target_2, target_3)
and func_2(vrc_134, vcxld_142, target_2)
and func_3(vcxld_142, target_3)
and vrc_134.getType().hasName("int")
and vcxld_142.getType().hasName("cxl_decoder *")
and vrc_134.(LocalVariable).getFunction() = func
and vcxld_142.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
