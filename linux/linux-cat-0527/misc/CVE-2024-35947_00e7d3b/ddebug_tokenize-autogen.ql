/**
 * @name linux-00e7d3bea2ce7dac7bee1cf501fb071fd0ea8f6c-ddebug_tokenize
 * @id cpp/linux/00e7d3bea2ce7dac7bee1cf501fb071fd0ea8f6c/ddebug-tokenize
 * @description linux-00e7d3bea2ce7dac7bee1cf501fb071fd0ea8f6c-lib/dynamic_debug.c-ddebug_tokenize CVE-2024-35947
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="1734"
	and not target_0.getValue()="1"
	and target_0.getParent().(AsmStmt).getParent().(BlockStmt).getStmt(0) instanceof AsmStmt
	and target_0.getEnclosingFunction() = func
}

predicate func_1(LogicalOrExpr target_14, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition() instanceof EqualityOperation
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_printk")
	and target_1.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_1.getEnclosingFunction() = func)
}

/*predicate func_2(Parameter vwords_279, Variable vnwords_281, ExprStmt target_15) {
exists(StmtExpr target_2 |
	target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getValue()="1"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_printk")
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3dyndbg: parse err after word:%d=%s\n"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnwords_281
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(ConditionalExpr).getCondition().(VariableAccess).getTarget()=vnwords_281
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(ConditionalExpr).getThen().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vwords_279
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(ConditionalExpr).getElse().(StringLiteral).getValue()="<none>"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(ConditionalExpr).getThen().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_15.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getLocation()))
}

*/
/*predicate func_3(DoStmt target_8, Function func) {
exists(LogicalAndExpr target_3 |
	target_3.getValue()="1"
	and target_3.getParent().(IfStmt).getThen()=target_8
	and target_3.getEnclosingFunction() = func)
}

*/
/*predicate func_4(Parameter vwords_279, Variable vnwords_281, ExprStmt target_15, EqualityOperation target_18) {
exists(FunctionCall target_4 |
	target_4.getTarget().hasName("_printk")
	and target_4.getArgument(0).(StringLiteral).getValue()="3dyndbg: parse err after word:%d=%s\n"
	and target_4.getArgument(1).(VariableAccess).getTarget()=vnwords_281
	and target_4.getArgument(2).(ConditionalExpr).getCondition().(VariableAccess).getTarget()=vnwords_281
	and target_4.getArgument(2).(ConditionalExpr).getThen().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vwords_279
	and target_4.getArgument(2).(ConditionalExpr).getThen().(ArrayExpr).getArrayOffset().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vnwords_281
	and target_4.getArgument(2).(ConditionalExpr).getThen().(ArrayExpr).getArrayOffset().(SubExpr).getRightOperand() instanceof Literal
	and target_4.getArgument(2).(ConditionalExpr).getElse().(StringLiteral).getValue()="<none>"
	and target_4.getArgument(2).(ConditionalExpr).getThen().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_15.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getLocation())
	and target_4.getArgument(1).(VariableAccess).getLocation().isBefore(target_18.getLeftOperand().(VariableAccess).getLocation()))
}

*/
/*predicate func_5(DoStmt target_11, Function func) {
exists(ReturnStmt target_5 |
	target_5.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_5.getLocation().isBefore(target_11.getLocation())
	and target_5.getEnclosingFunction() = func)
}

*/
predicate func_6(Parameter vbuf_279, Variable vend_284, EqualityOperation target_6) {
	target_6.getLeftOperand().(VariableAccess).getTarget()=vend_284
	and target_6.getRightOperand().(VariableAccess).getTarget()=vbuf_279
	and target_6.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
}

predicate func_7(DoStmt target_8, Function func, FunctionCall target_7) {
	target_7.getTarget().hasName("__builtin_expect")
	and target_7.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand() instanceof EqualityOperation
	and target_7.getArgument(1) instanceof Literal
	and target_7.getParent().(IfStmt).getThen()=target_8
	and target_7.getEnclosingFunction() = func
}

predicate func_8(FunctionCall target_7, Function func, DoStmt target_8) {
	target_8.getCondition() instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
	and target_8.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2) instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_8.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getValue()="12"
	and target_8.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_unreachable")
	and target_8.getParent().(IfStmt).getCondition()=target_7
	and target_8.getEnclosingFunction() = func
}

/*predicate func_9(Function func, StmtExpr target_9) {
	target_9.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_9.getEnclosingFunction() = func
}

*/
/*predicate func_10(Function func, AsmStmt target_10) {
	target_10.getChild(0) instanceof Literal
	and target_10.getEnclosingFunction() = func
}

*/
/*predicate func_11(Function func, DoStmt target_11) {
	target_11.getCondition() instanceof Literal
	and target_11.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
	and target_11.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
	and target_11.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2) instanceof Literal
	and target_11.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_11.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getValue()="12"
	and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_12(Function func, AsmStmt target_12) {
	target_12.getChild(0) instanceof StringLiteral
	and target_12.getChild(1) instanceof Literal
	and target_12.getChild(2) instanceof Literal
	and target_12.getChild(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_12.getChild(3).(SizeofTypeOperator).getValue()="12"
	and target_12.getEnclosingFunction() = func
}

*/
/*predicate func_13(Function func, FunctionCall target_13) {
	target_13.getTarget().hasName("__builtin_unreachable")
	and target_13.getEnclosingFunction() = func
}

*/
predicate func_14(Parameter vbuf_279, LogicalOrExpr target_14) {
	target_14.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbuf_279
	and target_14.getLeftOperand().(EqualityOperation).getRightOperand().(CharLiteral).getValue()="34"
	and target_14.getRightOperand().(EqualityOperation).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbuf_279
	and target_14.getRightOperand().(EqualityOperation).getRightOperand().(CharLiteral).getValue()="39"
}

predicate func_15(Parameter vbuf_279, Parameter vwords_279, Variable vnwords_281, ExprStmt target_15) {
	target_15.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vwords_279
	and target_15.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vnwords_281
	and target_15.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vbuf_279
}

predicate func_18(Variable vnwords_281, EqualityOperation target_18) {
	target_18.getLeftOperand().(VariableAccess).getTarget()=vnwords_281
	and target_18.getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vbuf_279, Parameter vwords_279, Variable vnwords_281, Variable vend_284, Literal target_0, EqualityOperation target_6, FunctionCall target_7, DoStmt target_8, LogicalOrExpr target_14, ExprStmt target_15, EqualityOperation target_18
where
func_0(func, target_0)
and not func_1(target_14, func)
and func_6(vbuf_279, vend_284, target_6)
and func_7(target_8, func, target_7)
and func_8(target_7, func, target_8)
and func_14(vbuf_279, target_14)
and func_15(vbuf_279, vwords_279, vnwords_281, target_15)
and func_18(vnwords_281, target_18)
and vbuf_279.getType().hasName("char *")
and vwords_279.getType().hasName("char *[]")
and vnwords_281.getType().hasName("int")
and vend_284.getType().hasName("char *")
and vbuf_279.getFunction() = func
and vwords_279.getFunction() = func
and vnwords_281.(LocalVariable).getFunction() = func
and vend_284.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
