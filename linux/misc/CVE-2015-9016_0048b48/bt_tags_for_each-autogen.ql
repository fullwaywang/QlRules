/**
 * @name linux-0048b4837affd153897ed1222283492070027aa9-bt_tags_for_each
 * @id cpp/linux/0048b4837affd153897ed1222283492070027aa9/bt-tags-for-each
 * @description linux-0048b4837affd153897ed1222283492070027aa9-block/blk-mq-tag.c-bt_tags_for_each CVE-2015-9016
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtags_441) {
exists(ArrayExpr target_0 |
	target_0.getArrayBase().(PointerFieldAccess).getTarget().getName()="rqs"
	and target_0.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtags_441
	and target_0.getArrayOffset() instanceof AddExpr
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("request *"))
}

predicate func_1(Parameter voff_442, Variable vbit_446, AddExpr target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=voff_442
	and target_1.getRightOperand().(VariableAccess).getTarget()=vbit_446
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_2(Parameter vtags_441, VariableAccess target_2) {
	target_2.getTarget()=vtags_441
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Parameter vtags_441, FunctionCall target_3) {
	target_3.getTarget().hasName("blk_mq_tag_to_rq")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vtags_441
	and target_3.getArgument(1) instanceof AddExpr
	and target_3.getParent().(AssignExpr).getRValue() = target_3
	and target_3.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("request *")
}

from Function func, Parameter vtags_441, Parameter voff_442, Variable vbit_446, AddExpr target_1, VariableAccess target_2, FunctionCall target_3
where
not func_0(vtags_441)
and func_1(voff_442, vbit_446, target_1)
and func_2(vtags_441, target_2)
and func_3(vtags_441, target_3)
and vtags_441.getType().hasName("blk_mq_tags *")
and voff_442.getType().hasName("unsigned int")
and vbit_446.getType().hasName("int")
and vtags_441.getFunction() = func
and voff_442.getFunction() = func
and vbit_446.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
