/**
 * @name linux-5d78e1c2b7f4be00bbe62141603a631dc7812f35-snd_usb_pipe_sanity_check
 * @id cpp/linux/5d78e1c2b7f4be00bbe62141603a631dc7812f35/snd-usb-pipe-sanity-check
 * @description linux-5d78e1c2b7f4be00bbe62141603a631dc7812f35-sound/usb/helper.c-snd_usb_pipe_sanity_check CVE-2019-15222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vep_72, ReturnStmt target_2, ExprStmt target_3, AddressOfExpr target_4) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vep_72
	and target_0.getRightOperand() instanceof EqualityOperation
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpipe_67, Variable vpipetypes_69, Variable vep_72, ReturnStmt target_2, EqualityOperation target_1) {
	target_1.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=vpipe_67
	and target_1.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="30"
	and target_1.getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="3"
	and target_1.getRightOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vpipetypes_69
	and target_1.getRightOperand().(ArrayExpr).getArrayOffset().(FunctionCall).getTarget().hasName("usb_endpoint_type")
	and target_1.getRightOperand().(ArrayExpr).getArrayOffset().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="desc"
	and target_1.getRightOperand().(ArrayExpr).getArrayOffset().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vep_72
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vpipe_67, Variable vep_72, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vep_72
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("usb_pipe_endpoint")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("usb_device *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpipe_67
}

predicate func_4(Variable vep_72, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="desc"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vep_72
}

from Function func, Parameter vpipe_67, Variable vpipetypes_69, Variable vep_72, EqualityOperation target_1, ReturnStmt target_2, ExprStmt target_3, AddressOfExpr target_4
where
not func_0(vep_72, target_2, target_3, target_4)
and func_1(vpipe_67, vpipetypes_69, vep_72, target_2, target_1)
and func_2(func, target_2)
and func_3(vpipe_67, vep_72, target_3)
and func_4(vep_72, target_4)
and vpipe_67.getType().hasName("unsigned int")
and vpipetypes_69.getType().hasName("const int[4]")
and vep_72.getType().hasName("usb_host_endpoint *")
and vpipe_67.getFunction() = func
and vpipetypes_69.(LocalVariable).getFunction() = func
and vep_72.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
