/**
 * @name linux-c0afb6b88fbbc177fa322a835f874be217bffe45-rk_hash_run
 * @id cpp/linux/c0afb6b88fbbc177fa322a835f874be217bffe45/rk-hash-run
 * @description linux-c0afb6b88fbbc177fa322a835f874be217bffe45-drivers/crypto/rockchip/rk3288_crypto_ahash.c-rk_hash_run CVE-2024-35792
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbreq_258, Parameter vengine_258, ExprStmt target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("rk_hash_unprepare")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vengine_258
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vbreq_258
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("local_bh_enable")
	and target_1.getEnclosingFunction() = func
}

from Function func, Parameter vbreq_258, Parameter vengine_258, ExprStmt target_0, ExprStmt target_1
where
func_0(vbreq_258, vengine_258, target_1, target_0)
and func_1(func, target_1)
and vbreq_258.getType().hasName("void *")
and vengine_258.getType().hasName("crypto_engine *")
and vbreq_258.getFunction() = func
and vengine_258.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
