/**
 * @name linux-a295aef603e109a47af355477326bd41151765b6-ovl_rename
 * @id cpp/linux/a295aef603e109a47af355477326bd41151765b6/ovl-rename
 * @description linux-a295aef603e109a47af355477326bd41151765b6-fs/overlayfs/dir.c-ovl_rename CVE-2021-20321
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalAndExpr target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition() instanceof LogicalOrExpr
	and target_0.getThen().(GotoStmt).getName() ="out_dput"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vflags_1081, LogicalAndExpr target_4, ExprStmt target_5, ExprStmt target_6) {
exists(IfStmt target_1 |
	target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_1081
	and target_1.getCondition().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="2"
	and target_1.getThen().(GotoStmt).getName() ="out_dput"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_5.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getLocation()))
}

predicate func_2(Variable vnewdentry_1087, Variable vnew_opaque_1090, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("d_is_negative")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewdentry_1087
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vnew_opaque_1090
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ovl_is_whiteout")
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewdentry_1087
	and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

/*predicate func_3(Variable vnewdentry_1087, Variable vnew_opaque_1090, LogicalOrExpr target_3) {
	target_3.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vnew_opaque_1090
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ovl_is_whiteout")
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewdentry_1087
	and target_3.getParent().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("d_is_negative")
	and target_3.getParent().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewdentry_1087
	and target_3.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

*/
predicate func_4(Function func, LogicalAndExpr target_4) {
	target_4.getLeftOperand() instanceof NotExpr
	and target_4.getRightOperand() instanceof LogicalOrExpr
	and target_4.getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vflags_1081, LogicalAndExpr target_7, ExprStmt target_5) {
	target_5.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vflags_1081
	and target_5.getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="2"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_6(Parameter vflags_1081, Variable vnewdentry_1087, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ovl_do_rename")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="d_inode"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="d_inode"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vnewdentry_1087
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vflags_1081
}

predicate func_7(Function func, LogicalAndExpr target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget().getType().hasName("bool")
	and target_7.getRightOperand().(FunctionCall).getTarget().hasName("ovl_dentry_is_whiteout")
	and target_7.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_7.getEnclosingFunction() = func
}

from Function func, Parameter vflags_1081, Variable vnewdentry_1087, Variable vnew_opaque_1090, NotExpr target_2, LogicalAndExpr target_4, ExprStmt target_5, ExprStmt target_6, LogicalAndExpr target_7
where
not func_0(target_4, func)
and not func_1(vflags_1081, target_4, target_5, target_6)
and func_2(vnewdentry_1087, vnew_opaque_1090, target_2)
and func_4(func, target_4)
and func_5(vflags_1081, target_7, target_5)
and func_6(vflags_1081, vnewdentry_1087, target_6)
and func_7(func, target_7)
and vflags_1081.getType().hasName("unsigned int")
and vnewdentry_1087.getType().hasName("dentry *")
and vnew_opaque_1090.getType().hasName("bool")
and vflags_1081.getFunction() = func
and vnewdentry_1087.(LocalVariable).getFunction() = func
and vnew_opaque_1090.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
