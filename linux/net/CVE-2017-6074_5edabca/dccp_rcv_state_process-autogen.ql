/**
 * @name linux-5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4-dccp_rcv_state_process
 * @id cpp/linux/5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4/dccp-rcv-state-process
 * @description linux-5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4-net/dccp/input.c-dccp_rcv_state_process CVE-2017-6074
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_574, EqualityOperation target_4, RelationalOperation target_5, LogicalAndExpr target_6) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("consume_skb")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_574
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_5.getLesserOperand().(VariableCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Function func, ReturnStmt target_2) {
		target_2.getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(EqualityOperation target_4, Function func, GotoStmt target_3) {
		target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_3.getEnclosingFunction() = func
}

predicate func_4(BlockStmt target_7, Function func, EqualityOperation target_4) {
		target_4.getAnOperand().(PointerFieldAccess).getTarget().getName()="dccph_type"
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dccp_hdr *")
		and target_4.getParent().(IfStmt).getThen()=target_7
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vskb_574, RelationalOperation target_5) {
		 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
		and target_5.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="conn_request"
		and target_5.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="icsk_af_ops"
		and target_5.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("inet_csk")
		and target_5.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_5.getLesserOperand().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_5.getLesserOperand().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vskb_574
		and target_5.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_6(Parameter vskb_574, LogicalAndExpr target_6) {
		target_6.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_6.getAnOperand().(FunctionCall).getTarget().hasName("dccp_check_seqno")
		and target_6.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_6.getAnOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_574
}

predicate func_7(Parameter vskb_574, BlockStmt target_7) {
		target_7.getStmt(0).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="conn_request"
		and target_7.getStmt(0).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="icsk_af_ops"
		and target_7.getStmt(0).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("inet_csk")
		and target_7.getStmt(0).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_7.getStmt(0).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vskb_574
		and target_7.getStmt(0).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_7.getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(Literal).getValue()="1"
}

from Function func, Parameter vskb_574, ReturnStmt target_2, GotoStmt target_3, EqualityOperation target_4, RelationalOperation target_5, LogicalAndExpr target_6, BlockStmt target_7
where
not func_0(vskb_574, target_4, target_5, target_6)
and func_2(func, target_2)
and func_3(target_4, func, target_3)
and func_4(target_7, func, target_4)
and func_5(vskb_574, target_5)
and func_6(vskb_574, target_6)
and func_7(vskb_574, target_7)
and vskb_574.getType().hasName("sk_buff *")
and vskb_574.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
