/**
 * @name linux-f70865db5ff35f5ed0c7e9ef63e7cca3d4947f04-__io_uring_register
 * @id cpp/linux/f70865db5ff35f5ed0c7e9ef63e7cca3d4947f04/--io-uring-register
 * @description linux-f70865db5ff35f5ed0c7e9ef63e7cca3d4947f04-fs/io_uring.c-__io_uring_register CVE-2022-20153
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctx_9756, FunctionCall target_0) {
	target_0.getTarget().hasName("percpu_ref_resurrect")
	and not target_0.getTarget().hasName("io_refs_resurrect")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="refs"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_9756
}

predicate func_1(Parameter vctx_9756, AddressOfExpr target_5, ValueFieldAccess target_6) {
exists(AddressOfExpr target_1 |
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="ref_comp"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_9756
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_5.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vret_9761, ExprStmt target_7, ReturnStmt target_3, Function func) {
exists(ReturnStmt target_2 |
	target_2.getExpr().(VariableAccess).getTarget()=vret_9761
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableAccess).getLocation())
	and target_2.getExpr().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation()))
}

predicate func_3(Variable vret_9761, Function func, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vret_9761
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(VariableAccess target_8, Function func, GotoStmt target_4) {
	target_4.getName() ="out_quiesce"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vctx_9756, AddressOfExpr target_5) {
	target_5.getOperand().(ValueFieldAccess).getTarget().getName()="refs"
	and target_5.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_5.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_9756
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(Parameter vctx_9756, ValueFieldAccess target_6) {
	target_6.getTarget().getName()="restricted"
	and target_6.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_9756
}

predicate func_7(Variable vret_9761, VariableAccess target_9, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_9761
	and target_7.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
	and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
}

predicate func_8(Variable vret_9761, BlockStmt target_10, VariableAccess target_8) {
	target_8.getTarget()=vret_9761
	and target_8.getParent().(IfStmt).getThen()=target_10
}

predicate func_9(Parameter vopcode_9756, VariableAccess target_9) {
	target_9.getTarget()=vopcode_9756
}

predicate func_10(Function func, BlockStmt target_10) {
	target_10.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_10.getStmt(1) instanceof GotoStmt
	and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vopcode_9756, Variable vret_9761, Parameter vctx_9756, FunctionCall target_0, ReturnStmt target_3, GotoStmt target_4, AddressOfExpr target_5, ValueFieldAccess target_6, ExprStmt target_7, VariableAccess target_8, VariableAccess target_9, BlockStmt target_10
where
func_0(vctx_9756, target_0)
and not func_1(vctx_9756, target_5, target_6)
and not func_2(vret_9761, target_7, target_3, func)
and func_3(vret_9761, func, target_3)
and func_4(target_8, func, target_4)
and func_5(vctx_9756, target_5)
and func_6(vctx_9756, target_6)
and func_7(vret_9761, target_9, target_7)
and func_8(vret_9761, target_10, target_8)
and func_9(vopcode_9756, target_9)
and func_10(func, target_10)
and vopcode_9756.getType().hasName("unsigned int")
and vret_9761.getType().hasName("int")
and vctx_9756.getType().hasName("io_ring_ctx *")
and vopcode_9756.getFunction() = func
and vret_9761.(LocalVariable).getFunction() = func
and vctx_9756.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
