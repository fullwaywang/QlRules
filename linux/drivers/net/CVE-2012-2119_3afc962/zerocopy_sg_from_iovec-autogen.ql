/**
 * @name linux-3afc9621f15701c557e60f61eba9242bac2771dd-zerocopy_sg_from_iovec
 * @id cpp/linux/3afc9621f15701c557e60f61eba9242bac2771dd/zerocopy-sg-from-iovec
 * @description linux-3afc9621f15701c557e60f61eba9242bac2771dd-drivers/net/macvtap.c-zerocopy_sg_from_iovec CVE-2012-2119
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable voffset1_489, EqualityOperation target_6, VariableAccess target_0) {
	target_0.getTarget()=voffset1_489
	and target_6.getRightOperand().(VariableAccess).getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable voffset1_489, ExprStmt target_7, ExprStmt target_8, VariableAccess target_1) {
	target_1.getTarget()=voffset1_489
	and target_1.getParent().(AssignExpr).getLValue() = target_1
	and target_1.getParent().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_7.getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(VariableAccess).getLocation().isBefore(target_1.getLocation())
	and target_1.getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(AddExpr).getRightOperand().(VariableAccess).getLocation())
}

predicate func_2(Variable voffset1_489, ExprStmt target_9, VariableAccess target_2) {
	target_2.getTarget()=voffset1_489
	and target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getLocation())
}

predicate func_3(Variable voffset1_489, ExprStmt target_8, VariableAccess target_3) {
	target_3.getTarget()=voffset1_489
	and target_3.getParent().(AssignExpr).getLValue() = target_3
	and target_3.getParent().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_8.getExpr().(AssignExpr).getRValue().(AddExpr).getRightOperand().(VariableAccess).getLocation().isBefore(target_3.getLocation())
}

predicate func_4(Parameter voffset_485, Variable vsize_489, RelationalOperation target_10, PointerArithmeticOperation target_11, ExprStmt target_12) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=voffset_485
	and target_4.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getTarget()=vsize_489
	and target_4.getParent().(IfStmt).getCondition()=target_10
	and target_11.getRightOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation())
	and target_4.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignSubExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_5(Parameter voffset_485, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=voffset_485
	and target_5.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_6(Variable voffset1_489, EqualityOperation target_6) {
	target_6.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getRightOperand().(VariableAccess).getTarget()=voffset1_489
}

predicate func_7(Variable voffset1_489, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_7.getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="iov_len"
	and target_7.getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const iovec *")
	and target_7.getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(VariableAccess).getTarget()=voffset1_489
}

predicate func_8(Variable voffset1_489, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_8.getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="iov_base"
	and target_8.getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const iovec *")
	and target_8.getExpr().(AssignExpr).getRValue().(AddExpr).getRightOperand().(VariableAccess).getTarget()=voffset1_489
}

predicate func_9(Variable voffset1_489, NotExpr target_13, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=voffset1_489
	and target_9.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_13
}

predicate func_10(Variable vsize_489, RelationalOperation target_10) {
	 (target_10 instanceof GTExpr or target_10 instanceof LTExpr)
	and target_10.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getLesserOperand().(VariableAccess).getTarget()=vsize_489
}

predicate func_11(Parameter voffset_485, PointerArithmeticOperation target_11) {
	target_11.getLeftOperand().(PointerFieldAccess).getTarget().getName()="iov_base"
	and target_11.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const iovec *")
	and target_11.getRightOperand().(VariableAccess).getTarget()=voffset_485
}

predicate func_12(Variable vsize_489, ExprStmt target_12) {
	target_12.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getExpr().(AssignSubExpr).getRValue().(VariableAccess).getTarget()=vsize_489
}

predicate func_13(Function func, NotExpr target_13) {
	target_13.getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_13.getEnclosingFunction() = func
}

from Function func, Parameter voffset_485, Variable vsize_489, Variable voffset1_489, VariableAccess target_0, VariableAccess target_1, VariableAccess target_2, VariableAccess target_3, ExprStmt target_5, EqualityOperation target_6, ExprStmt target_7, ExprStmt target_8, ExprStmt target_9, RelationalOperation target_10, PointerArithmeticOperation target_11, ExprStmt target_12, NotExpr target_13
where
func_0(voffset1_489, target_6, target_0)
and func_1(voffset1_489, target_7, target_8, target_1)
and func_2(voffset1_489, target_9, target_2)
and func_3(voffset1_489, target_8, target_3)
and not func_4(voffset_485, vsize_489, target_10, target_11, target_12)
and func_5(voffset_485, target_5)
and func_6(voffset1_489, target_6)
and func_7(voffset1_489, target_7)
and func_8(voffset1_489, target_8)
and func_9(voffset1_489, target_13, target_9)
and func_10(vsize_489, target_10)
and func_11(voffset_485, target_11)
and func_12(vsize_489, target_12)
and func_13(func, target_13)
and voffset_485.getType().hasName("int")
and vsize_489.getType().hasName("int")
and voffset1_489.getType().hasName("int")
and voffset_485.getFunction() = func
and vsize_489.(LocalVariable).getFunction() = func
and voffset1_489.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
