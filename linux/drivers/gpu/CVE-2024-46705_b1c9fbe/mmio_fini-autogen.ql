/**
 * @name linux-b1c9fbed3884d3883021d699c7cdf5253a65543a-mmio_fini
 * @id cpp/linux/b1c9fbed3884d3883021d699c7cdf5253a65543a/mmio-fini
 * @description linux-b1c9fbed3884d3883021d699c7cdf5253a65543a-drivers/gpu/drm/xe/xe_mmio.c-mmio_fini CVE-2024-46705
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vxe_391, Function func, IfStmt target_0) {
	exists(ValueFieldAccess obj_0 | obj_0=target_0.getCondition() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="mem"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vxe_391
			)
			and obj_1.getTarget().getName()="vram"
		)
		and obj_0.getTarget().getName()="mapping"
	)
	and exists(ExprStmt obj_3 | obj_3=target_0.getThen() |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			exists(ValueFieldAccess obj_5 | obj_5=obj_4.getArgument(0) |
				exists(ValueFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
					exists(PointerFieldAccess obj_7 | obj_7=obj_6.getQualifier() |
						obj_7.getTarget().getName()="mem"
						and obj_7.getQualifier().(VariableAccess).getTarget()=vxe_391
					)
					and obj_6.getTarget().getName()="vram"
				)
				and obj_5.getTarget().getName()="mapping"
			)
			and obj_4.getTarget().hasName("iounmap")
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Variable vxe_391, Function func, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="mem"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vxe_391
				)
				and obj_2.getTarget().getName()="vram"
			)
			and obj_1.getTarget().getName()="mapping"
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

from Function func, Variable vxe_391, IfStmt target_0, ExprStmt target_1
where
func_0(vxe_391, func, target_0)
and func_1(vxe_391, func, target_1)
and vxe_391.getType().hasName("xe_device *")
and vxe_391.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
