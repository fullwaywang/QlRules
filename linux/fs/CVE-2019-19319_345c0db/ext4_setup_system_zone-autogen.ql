/**
 * @name linux-345c0dbf3a30872d9b204db96b5857cd00808cae-ext4_setup_system_zone
 * @id cpp/linux/345c0dbf3a30872d9b204db96b5857cd00808cae/ext4-setup-system-zone
 * @description linux-345c0dbf3a30872d9b204db96b5857cd00808cae-fs/ext4/block_validity.c-ext4_setup_system_zone CVE-2019-19319
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsbi_143, Variable vret_147, Parameter vsb_140, IfStmt target_1, ExprStmt target_2, ReturnStmt target_3, FunctionCall target_4, BitwiseAndExpr target_5, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ext4_has_feature_journal")
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_140
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="s_journal_inum"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="s_es"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_143
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_147
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_protect_reserved_inode")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_140
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="s_journal_inum"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="s_es"
	and target_0.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=vret_147
	and target_0.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=vret_147
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getExpr().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vsbi_143, Parameter vsb_140, IfStmt target_1) {
	target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="s_mount_opt"
	and target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
	and target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_140
	and target_1.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="8"
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("debug_print_tree")
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_143
}

predicate func_2(Variable vsbi_143, Variable vret_147, Parameter vsb_140, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_147
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("add_system_zone")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_143
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("ext4_inode_table")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_140
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("ext4_group_desc *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="s_itb_per_group"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_143
}

predicate func_3(Variable vret_147, VariableAccess target_6, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vret_147
	and target_3.getParent().(IfStmt).getCondition()=target_6
}

predicate func_4(Parameter vsb_140, FunctionCall target_4) {
	target_4.getTarget().hasName("ext4_inode_table")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vsb_140
	and target_4.getArgument(1).(VariableAccess).getTarget().getType().hasName("ext4_group_desc *")
}

predicate func_5(Parameter vsb_140, BitwiseAndExpr target_5) {
	target_5.getLeftOperand().(PointerFieldAccess).getTarget().getName()="s_mount_opt"
	and target_5.getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
	and target_5.getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_140
	and target_5.getRightOperand().(Literal).getValue()="8"
}

predicate func_6(Variable vret_147, ReturnStmt target_3, VariableAccess target_6) {
	target_6.getTarget()=vret_147
	and target_6.getParent().(IfStmt).getThen()=target_3
}

from Function func, Variable vsbi_143, Variable vret_147, Parameter vsb_140, IfStmt target_1, ExprStmt target_2, ReturnStmt target_3, FunctionCall target_4, BitwiseAndExpr target_5, VariableAccess target_6
where
not func_0(vsbi_143, vret_147, vsb_140, target_1, target_2, target_3, target_4, target_5, func)
and func_1(vsbi_143, vsb_140, target_1)
and func_2(vsbi_143, vret_147, vsb_140, target_2)
and func_3(vret_147, target_6, target_3)
and func_4(vsb_140, target_4)
and func_5(vsb_140, target_5)
and func_6(vret_147, target_3, target_6)
and vsbi_143.getType().hasName("ext4_sb_info *")
and vret_147.getType().hasName("int")
and vsb_140.getType().hasName("super_block *")
and vsbi_143.(LocalVariable).getFunction() = func
and vret_147.(LocalVariable).getFunction() = func
and vsb_140.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
