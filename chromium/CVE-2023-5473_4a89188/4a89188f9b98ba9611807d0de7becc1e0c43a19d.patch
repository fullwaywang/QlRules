commit 4a89188f9b98ba9611807d0de7becc1e0c43a19d	4a89188f9b98ba9611807d0de7becc1e0c43a19d
Author: mark a. foltz <mfoltz@chromium.org>
Date:   Wed Sep 20 19:05:41 2023 +0000

    [Cast Channel] Check for overflow in channel_id.
    
    In extreme circumstances it may be possible for the channel_id used for
    each Cast Channel connection to overflow; for example a browser running
    for 3 years connecting and disconnecting to a Cast device every 50 ms.
    
    CHECK-fail rather than trying to recover from this situation.
    
    Fixed: 1484000
    Change-Id: Ia423f3629b48a435fdf2e2e08d51817088383247
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4874182
    Reviewed-by: Muyao Xu <muyaoxu@google.com>
    Commit-Queue: Mark Foltz <mfoltz@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1199141}

diff --git a/components/media_router/common/providers/cast/channel/cast_socket_service.cc b/components/media_router/common/providers/cast/channel/cast_socket_service.cc
index 4d7f5730f1001..937c408c90146 100644
--- a/components/media_router/common/providers/cast/channel/cast_socket_service.cc
+++ b/components/media_router/common/providers/cast/channel/cast_socket_service.cc
@@ -5,6 +5,7 @@
 #include "components/media_router/common/providers/cast/channel/cast_socket_service.h"
 
 #include "base/memory/ptr_util.h"
+#include "base/numerics/checked_math.h"
 #include "base/observer_list.h"
 #include "base/ranges/algorithm.h"
 #include "components/media_router/common/providers/cast/channel/cast_socket.h"
@@ -43,11 +44,13 @@ CastSocket* CastSocketServiceImpl::AddSocket(
     std::unique_ptr<CastSocket> socket) {
   DCHECK(task_runner_->BelongsToCurrentThread());
   DCHECK(socket);
-  int id = ++last_channel_id_;
-  socket->set_id(id);
+  CHECK(base::CheckAdd(last_channel_id_, 1).AssignIfValid(&last_channel_id_))
+      << "Overflow in channel_id!";
+  socket->set_id(last_channel_id_);
 
   auto* socket_ptr = socket.get();
-  sockets_.insert(std::make_pair(id, std::move(socket)));
+  CHECK(sockets_.insert(std::make_pair(last_channel_id_, std::move(socket)))
+            .second);
   return socket_ptr;
 }
 
