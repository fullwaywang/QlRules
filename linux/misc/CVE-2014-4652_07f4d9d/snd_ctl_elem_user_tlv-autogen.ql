/**
 * @name linux-07f4d9d74a04aa7c72c5dae0ef97565f28f17b92-snd_ctl_elem_user_tlv
 * @id cpp/linux/07f4d9d74a04aa7c72c5dae0ef97565f28f17b92/snd-ctl-elem-user-tlv
 * @description linux-07f4d9d74a04aa7c72c5dae0ef97565f28f17b92-sound/core/control.c-snd_ctl_elem_user_tlv CVE-2014-4652
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(RelationalOperation target_20, Function func, IfStmt target_0) {
	target_0.getCondition() instanceof FunctionCall
	and target_0.getThen() instanceof ReturnStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vue_1058, RelationalOperation target_20, ExprStmt target_22) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_22.getExpr().(AssignExpr).getRValue().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vue_1058, RelationalOperation target_20, ExprStmt target_23) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(9)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
	and target_23.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vue_1058, RelationalOperation target_20, LogicalOrExpr target_12) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_3.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(FunctionCall target_16, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_4
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(FunctionCall target_16, Function func) {
exists(GotoStmt target_5 |
	target_5.getName() ="err_unlock"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_5
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(LogicalOrExpr target_12, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_6
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(LogicalOrExpr target_12, Function func) {
exists(GotoStmt target_7 |
	target_7.getName() ="err_unlock"
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_7
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(RelationalOperation target_14, Function func) {
exists(ExprStmt target_8 |
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_8.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_8.getParent().(IfStmt).getCondition()=target_14
	and target_8.getEnclosingFunction() = func)
}

predicate func_9(Variable vue_1058, RelationalOperation target_20, FunctionCall target_16) {
exists(ExprStmt target_9 |
	target_9.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(6)=target_9
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
	and target_16.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_10(RelationalOperation target_20, Function func) {
exists(IfStmt target_10 |
	target_10.getCondition().(VariableAccess).getType().hasName("int")
	and target_10.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(7)=target_10
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
	and target_10.getEnclosingFunction() = func)
}

predicate func_12(Variable vue_1058, ReturnStmt target_24, LogicalOrExpr target_12) {
	target_12.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
	and target_12.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_12.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tlv_data"
	and target_12.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_12.getParent().(IfStmt).getThen()=target_24
}

predicate func_13(Function func, UnaryMinusExpr target_13) {
	target_13.getValue()="-6"
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Parameter vsize_1055, Variable vue_1058, ReturnStmt target_18, RelationalOperation target_14) {
	 (target_14 instanceof GTExpr or target_14 instanceof LTExpr)
	and target_14.getLesserOperand().(VariableAccess).getTarget()=vsize_1055
	and target_14.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
	and target_14.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_14.getParent().(IfStmt).getThen()=target_18
}

predicate func_15(Function func, UnaryMinusExpr target_15) {
	target_15.getValue()="-28"
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Parameter vtlv_1056, Variable vue_1058, ReturnStmt target_19, FunctionCall target_16) {
	target_16.getTarget().hasName("copy_to_user")
	and target_16.getArgument(0).(VariableAccess).getTarget()=vtlv_1056
	and target_16.getArgument(1).(PointerFieldAccess).getTarget().getName()="tlv_data"
	and target_16.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_16.getArgument(2).(PointerFieldAccess).getTarget().getName()="tlv_data_size"
	and target_16.getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_16.getParent().(IfStmt).getThen()=target_19
}

predicate func_17(Function func, UnaryMinusExpr target_17) {
	target_17.getValue()="-14"
	and target_17.getEnclosingFunction() = func
}

predicate func_18(RelationalOperation target_14, Function func, ReturnStmt target_18) {
	target_18.getExpr() instanceof UnaryMinusExpr
	and target_18.getParent().(IfStmt).getCondition()=target_14
	and target_18.getEnclosingFunction() = func
}

predicate func_19(FunctionCall target_16, Function func, ReturnStmt target_19) {
	target_19.getExpr() instanceof UnaryMinusExpr
	and target_19.getParent().(IfStmt).getCondition()=target_16
	and target_19.getEnclosingFunction() = func
}

predicate func_20(Function func, RelationalOperation target_20) {
	 (target_20 instanceof GTExpr or target_20 instanceof LTExpr)
	and target_20.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_20.getLesserOperand().(Literal).getValue()="0"
	and target_20.getEnclosingFunction() = func
}

predicate func_22(Parameter vsize_1055, Variable vue_1058, ExprStmt target_22) {
	target_22.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_22.getExpr().(AssignExpr).getRValue().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
	and target_22.getExpr().(AssignExpr).getRValue().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_22.getExpr().(AssignExpr).getRValue().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vsize_1055
}

predicate func_23(Parameter vsize_1055, Variable vue_1058, ExprStmt target_23) {
	target_23.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
	and target_23.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
	and target_23.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vsize_1055
}

predicate func_24(Function func, ReturnStmt target_24) {
	target_24.getExpr() instanceof UnaryMinusExpr
	and target_24.getEnclosingFunction() = func
}

from Function func, Parameter vsize_1055, Parameter vtlv_1056, Variable vue_1058, IfStmt target_0, LogicalOrExpr target_12, UnaryMinusExpr target_13, RelationalOperation target_14, UnaryMinusExpr target_15, FunctionCall target_16, UnaryMinusExpr target_17, ReturnStmt target_18, ReturnStmt target_19, RelationalOperation target_20, ExprStmt target_22, ExprStmt target_23, ReturnStmt target_24
where
func_0(target_20, func, target_0)
and not func_1(vue_1058, target_20, target_22)
and not func_2(vue_1058, target_20, target_23)
and not func_3(vue_1058, target_20, target_12)
and not func_4(target_16, func)
and not func_5(target_16, func)
and not func_6(target_12, func)
and not func_7(target_12, func)
and not func_8(target_14, func)
and not func_9(vue_1058, target_20, target_16)
and not func_10(target_20, func)
and func_12(vue_1058, target_24, target_12)
and func_13(func, target_13)
and func_14(vsize_1055, vue_1058, target_18, target_14)
and func_15(func, target_15)
and func_16(vtlv_1056, vue_1058, target_19, target_16)
and func_17(func, target_17)
and func_18(target_14, func, target_18)
and func_19(target_16, func, target_19)
and func_20(func, target_20)
and func_22(vsize_1055, vue_1058, target_22)
and func_23(vsize_1055, vue_1058, target_23)
and func_24(func, target_24)
and vsize_1055.getType().hasName("unsigned int")
and vtlv_1056.getType().hasName("unsigned int *")
and vue_1058.getType().hasName("user_element *")
and vsize_1055.getFunction() = func
and vtlv_1056.getFunction() = func
and vue_1058.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
