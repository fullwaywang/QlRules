/**
 * @name linux-2ceb76f734e37833824b7fab6af17c999eb48d2b-mt7921_check_offload_capability
 * @id cpp/linux/2ceb76f734e37833824b7fab6af17c999eb48d2b/mt7921-check-offload-capability
 * @description linux-2ceb76f734e37833824b7fab6af17c999eb48d2b-drivers/net/wireless/mediatek/mt76/mt7921/init.c-mt7921_check_offload_capability CVE-2023-3317
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr().(Literal).getValue()="0"
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Variable vfeatures_174, EqualityOperation target_5) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("u8")
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="data"
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfeatures_174
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_3(Variable vfeatures_174, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="data"
	and target_3.getQualifier().(VariableAccess).getTarget()=vfeatures_174
}

predicate func_4(Variable vfeatures_174, ConditionalExpr target_4) {
	target_4.getCondition().(VariableAccess).getTarget()=vfeatures_174
	and target_4.getThen().(PointerFieldAccess).getTarget().getName()="data"
	and target_4.getThen().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfeatures_174
	and target_4.getElse().(Literal).getValue()="0"
}

predicate func_5(Function func, EqualityOperation target_5) {
	target_5.getLeftOperand().(PointerFieldAccess).getTarget().getName()="tag"
	and target_5.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mt7921_realease_info *")
	and target_5.getRightOperand().(Literal).getValue()="4"
	and target_5.getEnclosingFunction() = func
}

from Function func, Variable vfeatures_174, Initializer target_0, PointerFieldAccess target_3, ConditionalExpr target_4, EqualityOperation target_5
where
func_0(func, target_0)
and not func_1(vfeatures_174, target_5)
and func_3(vfeatures_174, target_3)
and func_4(vfeatures_174, target_4)
and func_5(func, target_5)
and vfeatures_174.getType().hasName("mt7921_fw_features *")
and vfeatures_174.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
