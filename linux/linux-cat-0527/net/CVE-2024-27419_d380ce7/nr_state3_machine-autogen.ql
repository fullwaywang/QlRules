/**
 * @name linux-d380ce70058a4ccddc3e5f5c2063165dc07672c6-nr_state3_machine
 * @id cpp/linux/d380ce70058a4ccddc3e5f5c2063165dc07672c6/nr-state3-machine
 * @description linux-d380ce70058a4ccddc3e5f5c2063165dc07672c6-net/netrom/nr_in.c-nr_state3_machine CVE-2024-27419
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(StmtExpr target_0 |
	target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("int")
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vsysctl_netrom_reset_circuit, ExprStmt target_2, VariableAccess target_1) {
	target_1.getTarget()=vsysctl_netrom_reset_circuit
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(VariableAccess target_1, Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("nr_disconnect")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="104"
	and target_2.getParent().(IfStmt).getCondition()=target_1
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vsysctl_netrom_reset_circuit, VariableAccess target_1, ExprStmt target_2
where
not func_0(target_2, func)
and func_1(vsysctl_netrom_reset_circuit, target_2, target_1)
and func_2(target_1, func, target_2)
and vsysctl_netrom_reset_circuit.getType().hasName("int")
and not vsysctl_netrom_reset_circuit.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
