commit 8246bbf818ed7b8d5afc92b951e6d562b45c2450
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Thu Jul 4 10:57:08 2024 +0200

    ASoC: SOF: Intel: hda: fix null deref on system suspend entry
    
    [ Upstream commit 9065693dcc13f287b9e4991f43aee70cf5538fdd ]
    
    When system enters suspend with an active stream, SOF core
    calls hw_params_upon_resume(). On Intel platforms with HDA DMA used
    to manage the link DMA, this leads to call chain of
    
       hda_dsp_set_hw_params_upon_resume()
     -> hda_dsp_dais_suspend()
     -> hda_dai_suspend()
     -> hda_ipc4_post_trigger()
    
    A bug is hit in hda_dai_suspend() as hda_link_dma_cleanup() is run first,
    which clears hext_stream->link_substream, and then hda_ipc4_post_trigger()
    is called with a NULL snd_pcm_substream pointer.
    
    Fixes: 2b009fa0823c ("ASoC: SOF: Intel: hda: Unify DAI drv ops for IPC3 and IPC4")
    Link: https://github.com/thesofproject/linux/issues/5080
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://patch.msgid.link/20240704085708.371414-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/sound/soc/sof/intel/hda-dai.c b/sound/soc/sof/intel/hda-dai.c
index f3cefd866081..19ec1a45737e 100644
--- a/sound/soc/sof/intel/hda-dai.c
+++ b/sound/soc/sof/intel/hda-dai.c
@@ -534,12 +534,6 @@ static int hda_dai_suspend(struct hdac_bus *bus)
 			sdai = swidget->private;
 			ops = sdai->platform_private;
 
-			ret = hda_link_dma_cleanup(hext_stream->link_substream,
-						   hext_stream,
-						   cpu_dai);
-			if (ret < 0)
-				return ret;
-
 			/* for consistency with TRIGGER_SUSPEND  */
 			if (ops->post_trigger) {
 				ret = ops->post_trigger(sdev, cpu_dai,
@@ -548,6 +542,12 @@ static int hda_dai_suspend(struct hdac_bus *bus)
 				if (ret < 0)
 					return ret;
 			}
+
+			ret = hda_link_dma_cleanup(hext_stream->link_substream,
+						   hext_stream,
+						   cpu_dai);
+			if (ret < 0)
+				return ret;
 		}
 	}
 
