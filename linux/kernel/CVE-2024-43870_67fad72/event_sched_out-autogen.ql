/**
 * @name linux-67fad724f1b568b356c1065d50df46e6b30eb2f7-event_sched_out
 * @id cpp/linux/67fad724f1b568b356c1065d50df46e6b30eb2f7/event-sched-out
 * @description linux-67fad724f1b568b356c1065d50df46e6b30eb2f7-kernel/events/core.c-event_sched_out CVE-2024-43870
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BlockStmt target_8, Function func) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof LogicalAndExpr
	and target_0.getRightOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_0.getParent().(IfStmt).getThen()=target_8
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Variable vstate_2371, Parameter vevent_2367, BlockStmt target_8, LogicalAndExpr target_1) {
	exists(NotExpr obj_0 | obj_0=target_1.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="pending_work"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vevent_2367
		)
	)
	and target_1.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vstate_2371
	and target_1.getParent().(IfStmt).getThen()=target_8
}

predicate func_2(Parameter vevent_2367, FunctionCall target_2) {
	exists(AddressOfExpr obj_0 | obj_0=target_2.getArgument(1) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="pending_task"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vevent_2367
		)
	)
	and target_2.getTarget().hasName("task_work_add")
	and target_2.getArgument(0).(FunctionCall).getTarget().hasName("get_current")
}

predicate func_3(Parameter vevent_2367, VariableAccess target_9, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="ctx"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vevent_2367
				)
				and obj_2.getTarget().getName()="nr_pending"
			)
		)
		and obj_0.getTarget().hasName("local_dec")
	)
	and target_3.getParent().(IfStmt).getCondition()=target_9
}

predicate func_4(PointerFieldAccess target_10, Function func, DeclStmt target_4) {
	target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vdec_2398, LogicalAndExpr target_1, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdec_2398
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_6(LogicalAndExpr target_1, Function func, ExprStmt target_6) {
	target_6.getExpr() instanceof FunctionCall
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vdec_2398, PointerFieldAccess target_10, IfStmt target_7) {
	target_7.getCondition().(VariableAccess).getTarget()=vdec_2398
	and target_7.getThen() instanceof ExprStmt
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_8(Parameter vevent_2367, BlockStmt target_8) {
	exists(ExprStmt obj_0 | obj_0=target_8.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="pending_work"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vevent_2367
			)
			and obj_1.getRValue().(Literal).getValue()="1"
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_8.getStmt(2) |
		exists(StmtExpr obj_4 | obj_4=obj_3.getExpr() |
			exists(BlockStmt obj_5 | obj_5=obj_4.getStmt() |
				exists(IfStmt obj_6 | obj_6=obj_5.getStmt(1) |
					exists(FunctionCall obj_7 | obj_7=obj_6.getCondition() |
						obj_7.getTarget().hasName("__builtin_expect")
						and obj_7.getArgument(1) instanceof Literal
					)
					and obj_6.getThen().(DoStmt).getCondition() instanceof Literal
				)
				and exists(ExprStmt obj_8 | obj_8=obj_5.getStmt(2) |
					exists(FunctionCall obj_9 | obj_9=obj_8.getExpr() |
						obj_9.getTarget().hasName("__builtin_expect")
						and obj_9.getArgument(1) instanceof Literal
					)
				)
			)
		)
	)
	and target_8.getStmt(1) instanceof ExprStmt
}

predicate func_9(Variable vdec_2398, VariableAccess target_9) {
	target_9.getTarget()=vdec_2398
}

predicate func_10(Parameter vevent_2367, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="pending_sigtrap"
	and target_10.getQualifier().(VariableAccess).getTarget()=vevent_2367
}

from Function func, Variable vstate_2371, Variable vdec_2398, Parameter vevent_2367, LogicalAndExpr target_1, FunctionCall target_2, ExprStmt target_3, DeclStmt target_4, ExprStmt target_5, ExprStmt target_6, IfStmt target_7, BlockStmt target_8, VariableAccess target_9, PointerFieldAccess target_10
where
not func_0(target_8, func)
and func_1(vstate_2371, vevent_2367, target_8, target_1)
and func_2(vevent_2367, target_2)
and func_3(vevent_2367, target_9, target_3)
and func_4(target_10, func, target_4)
and func_5(vdec_2398, target_1, target_5)
and func_6(target_1, func, target_6)
and func_7(vdec_2398, target_10, target_7)
and func_8(vevent_2367, target_8)
and func_9(vdec_2398, target_9)
and func_10(vevent_2367, target_10)
and vstate_2371.getType().hasName("perf_event_state")
and vdec_2398.getType().hasName("bool")
and vevent_2367.getType().hasName("perf_event *")
and vstate_2371.(LocalVariable).getFunction() = func
and vdec_2398.(LocalVariable).getFunction() = func
and vevent_2367.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
