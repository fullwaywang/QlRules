/**
 * @name linux-9e0f0430389be7696396c62f037be4bf72cf93e3-flow_offload_fill_route
 * @id cpp/linux/9e0f0430389be7696396c62f037be4bf72cf93e3/flow-offload-fill-route
 * @description linux-9e0f0430389be7696396c62f037be4bf72cf93e3-net/netfilter/nf_flow_table_core.c-flow_offload_fill_route CVE-2024-27403
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vroute_91, Parameter vdir_92, ValueFieldAccess target_2, AddressOfExpr target_3) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("nft_route_dst_fetch")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vroute_91
	and target_0.getArgument(1).(VariableAccess).getTarget()=vdir_92
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_0.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vroute_91, Parameter vdir_92, ArrayExpr target_1) {
	target_1.getArrayBase().(PointerFieldAccess).getTarget().getName()="tuple"
	and target_1.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vroute_91
	and target_1.getArrayOffset().(VariableAccess).getTarget()=vdir_92
}

predicate func_2(Function func, ValueFieldAccess target_2) {
	target_2.getTarget().getName()="dst"
	and target_2.getQualifier() instanceof ArrayExpr
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vdir_92, AddressOfExpr target_3) {
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="tuple"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="tuplehash"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("flow_offload *")
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vdir_92
}

from Function func, Parameter vroute_91, Parameter vdir_92, ArrayExpr target_1, ValueFieldAccess target_2, AddressOfExpr target_3
where
not func_0(vroute_91, vdir_92, target_2, target_3)
and func_1(vroute_91, vdir_92, target_1)
and func_2(func, target_2)
and func_3(vdir_92, target_3)
and vroute_91.getType().hasName("const nf_flow_route *")
and vdir_92.getType().hasName("flow_offload_tuple_dir")
and vroute_91.getFunction() = func
and vdir_92.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
