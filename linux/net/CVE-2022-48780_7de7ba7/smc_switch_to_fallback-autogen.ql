/**
 * @name linux-7de7ba7a8bd4fde0141de8674c13514d0072f0e6-smc_switch_to_fallback
 * @id cpp/linux/7de7ba7a8bd4fde0141de8674c13514d0072f0e6/smc-switch-to-fallback
 * @description linux-7de7ba7a8bd4fde0141de8674c13514d0072f0e6-net/smc/af_smc.c-smc_switch_to_fallback CVE-2022-48780
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getType().hasName("int")
	and target_0.getRValue() instanceof UnaryMinusExpr
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(NotExpr target_10, Function func) {
exists(GotoStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(1)=target_1
			and obj_1.getCondition()=target_10
		)
	)
	and target_1.getName() ="out"
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Parameter vsmc_649, ExprStmt target_11, Function func) {
exists(IfStmt target_2 |
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getCondition() |
		obj_0.getTarget().getName()="use_fallback"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vsmc_649
	)
	and target_2.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_11.getLocation())
)
}

predicate func_4(Parameter vsmc_649, NotExpr target_10, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="clcsock_release_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vsmc_649
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_5(Function func, UnaryMinusExpr target_5) {
	target_5.getValue()="-9"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Parameter vsmc_649, VariableAccess target_6) {
	target_6.getTarget()=vsmc_649
	and target_6.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Parameter vsmc_649, FunctionCall target_8) {
	exists(AddressOfExpr obj_0 | obj_0=target_8.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="clcsock_release_lock"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsmc_649
		)
	)
	and target_8.getTarget().hasName("mutex_unlock")
}

predicate func_9(Function func, ReturnStmt target_9) {
	target_9.getExpr() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Parameter vsmc_649, NotExpr target_10) {
	exists(PointerFieldAccess obj_0 | obj_0=target_10.getOperand() |
		obj_0.getTarget().getName()="clcsock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vsmc_649
	)
}

predicate func_11(Parameter vsmc_649, ExprStmt target_11) {
	exists(AssignExpr obj_0 | obj_0=target_11.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="use_fallback"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsmc_649
		)
	)
}

from Function func, Parameter vsmc_649, ExprStmt target_4, UnaryMinusExpr target_5, VariableAccess target_6, FunctionCall target_8, ReturnStmt target_9, NotExpr target_10, ExprStmt target_11
where
not func_0(func)
and not func_1(target_10, func)
and not func_2(vsmc_649, target_11, func)
and func_4(vsmc_649, target_10, target_4)
and func_5(func, target_5)
and func_6(vsmc_649, target_6)
and func_8(vsmc_649, target_8)
and func_9(func, target_9)
and func_10(vsmc_649, target_10)
and func_11(vsmc_649, target_11)
and vsmc_649.getType().hasName("smc_sock *")
and vsmc_649.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
