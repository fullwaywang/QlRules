/**
 * @name linux-aa838896d87af561a33ecefea1caa4c15a68bc47-allocation_policy_show
 * @id cpp/linux/aa838896d87af561a33ecefea1caa4c15a68bc47/allocation-policy-show
 * @description linux-aa838896d87af561a33ecefea1caa4c15a68bc47-drivers/base/cacheinfo.c-allocation_policy_show CVE-2022-20166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_421, FunctionCall target_0) {
	target_0.getTarget().hasName("sprintf")
	and not target_0.getTarget().hasName("sysfs_emit")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_421
	and target_0.getArgument(1).(StringLiteral).getValue()="ReadWriteAllocate\n"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_1(Parameter vbuf_421, FunctionCall target_1) {
	target_1.getTarget().hasName("sprintf")
	and not target_1.getTarget().hasName("sysfs_emit")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vbuf_421
	and target_1.getArgument(1).(StringLiteral).getValue()="ReadAllocate\n"
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_2(Parameter vbuf_421, FunctionCall target_2) {
	target_2.getTarget().hasName("sprintf")
	and not target_2.getTarget().hasName("sysfs_emit")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vbuf_421
	and target_2.getArgument(1).(StringLiteral).getValue()="WriteAllocate\n"
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vbuf_421, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2
where
func_0(vbuf_421, target_0)
and func_1(vbuf_421, target_1)
and func_2(vbuf_421, target_2)
and vbuf_421.getType().hasName("char *")
and vbuf_421.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
