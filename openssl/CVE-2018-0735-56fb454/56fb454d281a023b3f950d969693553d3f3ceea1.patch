commit 56fb454d281a023b3f950d969693553d3f3ceea1
Author: Pauli <paul.dale@oracle.com>
Date:   Fri Oct 26 10:54:58 2018 +1000

    Timing vulnerability in ECDSA signature generation (CVE-2018-0735)
    
    Preallocate an extra limb for some of the big numbers to avoid a reallocation
    that can potentially provide a side channel.
    
    Reviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
    (Merged from https://github.com/openssl/openssl/pull/7486)
    
    (cherry picked from commit 99540ec79491f59ed8b46b4edf130e17dc907f52)

diff --git a/crypto/ec/ec_mult.c b/crypto/ec/ec_mult.c
index 22bb30ffa1..ff882cce20 100644
--- a/crypto/ec/ec_mult.c
+++ b/crypto/ec/ec_mult.c
@@ -177,8 +177,8 @@ static int ec_mul_consttime(const EC_GROUP *group, EC_POINT *r,
      */
     cardinality_bits = BN_num_bits(cardinality);
     group_top = bn_get_top(cardinality);
-    if ((bn_wexpand(k, group_top + 1) == NULL)
-        || (bn_wexpand(lambda, group_top + 1) == NULL))
+    if ((bn_wexpand(k, group_top + 2) == NULL)
+        || (bn_wexpand(lambda, group_top + 2) == NULL)) {
         goto err;
 
     if (!BN_copy(k, scalar))
@@ -205,7 +205,7 @@ static int ec_mul_consttime(const EC_GROUP *group, EC_POINT *r,
      * k := scalar + 2*cardinality
      */
     kbit = BN_is_bit_set(lambda, cardinality_bits);
-    BN_consttime_swap(kbit, k, lambda, group_top + 1);
+    BN_consttime_swap(kbit, k, lambda, group_top + 2);
 
     group_top = bn_get_top(group->field);
     if ((bn_wexpand(s->X, group_top) == NULL)
