/**
 * @name linux-12ad3d2d6c5b0131a6052de91360849e3e154846-io_poll_check_events
 * @id cpp/linux/12ad3d2d6c5b0131a6052de91360849e3e154846/io-poll-check-events
 * @description linux-12ad3d2d6c5b0131a6052de91360849e3e154846-io_poll_check_events CVE-2023-0468
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(BitwiseAndExpr target_0 |
		target_0.getLeftOperand() instanceof FunctionCall
		and target_0.getRightOperand().(AddExpr).getValue()="1073741823"
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vreq_238, Variable vv_241, FunctionCall target_1) {
		target_1.getTarget().hasName("atomic_sub_return")
		and target_1.getArgument(0).(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vv_241
		and target_1.getArgument(0).(BitwiseAndExpr).getRightOperand().(AddExpr).getValue()="1073741823"
		and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="poll_refs"
		and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_238
}

from Function func, Parameter vreq_238, Variable vv_241, FunctionCall target_1
where
not func_0(func)
and func_1(vreq_238, vv_241, target_1)
and vreq_238.getType().hasName("io_kiocb *")
and vv_241.getType().hasName("int")
and vreq_238.getFunction() = func
and vv_241.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
