/**
 * @name v8-5516e06237c9f0013121f47319e8c253c896d52d-v8__internal__MapUpdater__ConstructNewMap
 * @id cpp/v8/5516e06237c9f0013121f47319e8c253c896d52d/v8internalmapupdaterconstructnewmap
 * @description v8-5516e06237c9f0013121f47319e8c253c896d52d-src/objects/map-updater.cc-v8__internal__MapUpdater__ConstructNewMap CVE-2023-4427
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnew_map_1034, BlockStmt target_2, ExprStmt target_4) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof RelationalOperation
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getTarget().hasName("NumberOfEnumerableProperties")
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vnew_map_1034
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(BlockStmt target_2, Function func, RelationalOperation target_1) {
	 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getGreaterOperand().(FunctionCall).getTarget().hasName("length")
	and target_1.getGreaterOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("keys")
	and target_1.getGreaterOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("enum_cache")
	and target_1.getLesserOperand().(Literal).getValue()="0"
	and target_1.getParent().(IfStmt).getThen()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vnew_map_1034, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("InitializeFastPropertyEnumCache")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="isolate_"
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnew_map_1034
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("NumberOfEnumerableProperties")
}

predicate func_4(Variable vnew_map_1034, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("InitializeFastPropertyEnumCache")
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="isolate_"
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnew_map_1034
	and target_4.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("NumberOfEnumerableProperties")
	and target_4.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vnew_map_1034
}

from Function func, Variable vnew_map_1034, RelationalOperation target_1, BlockStmt target_2, ExprStmt target_4
where
not func_0(vnew_map_1034, target_2, target_4)
and func_1(target_2, func, target_1)
and func_2(vnew_map_1034, target_2)
and func_4(vnew_map_1034, target_4)
and vnew_map_1034.getType().hasName("Handle<Map>")
and vnew_map_1034.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
