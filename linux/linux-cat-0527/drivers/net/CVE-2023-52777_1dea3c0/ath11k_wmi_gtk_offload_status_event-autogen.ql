/**
 * @name linux-1dea3c0720a146bd7193969f2847ccfed5be2221-ath11k_wmi_gtk_offload_status_event
 * @id cpp/linux/1dea3c0720a146bd7193969f2847ccfed5be2221/ath11k-wmi-gtk-offload-status-event
 * @description linux-1dea3c0720a146bd7193969f2847ccfed5be2221-drivers/net/wireless/ath/ath11k/wmi.c-ath11k_wmi_gtk_offload_status_event CVE-2023-52777
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtb_8600, FunctionCall target_0) {
	target_0.getTarget().hasName("kfree")
	and not target_0.getTarget().hasName("rcu_read_lock")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vtb_8600
}

predicate func_1(ExprStmt target_7, Function func, ExprStmt target_1) {
	target_1.getExpr() instanceof FunctionCall
	and target_7.getLocation().isBefore(target_1.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(NotExpr target_8, Function func) {
exists(GotoStmt target_2 |
	target_2.getName() ="exit"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_4(Variable vtb_8600, NotExpr target_8, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtb_8600
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_5(NotExpr target_8, Function func, ReturnStmt target_5) {
	target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, ReturnStmt target_6) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("ieee80211_gtk_rekey_notify")
	and target_7.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="vif"
	and target_7.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ath11k_vif *")
	and target_7.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="bssid"
	and target_7.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ath11k_vif *")
	and target_7.getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("__be64")
	and target_7.getExpr().(FunctionCall).getArgument(3).(BitwiseOrExpr).getValue()="2080"
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, NotExpr target_8) {
	target_8.getOperand().(VariableAccess).getTarget().getType().hasName("ath11k_vif *")
	and target_8.getEnclosingFunction() = func
}

from Function func, Variable vtb_8600, FunctionCall target_0, ExprStmt target_1, ExprStmt target_4, ReturnStmt target_5, ReturnStmt target_6, ExprStmt target_7, NotExpr target_8
where
func_0(vtb_8600, target_0)
and func_1(target_7, func, target_1)
and not func_2(target_8, func)
and not func_3(func)
and func_4(vtb_8600, target_8, target_4)
and func_5(target_8, func, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
and func_8(func, target_8)
and vtb_8600.getType().hasName("const void **")
and vtb_8600.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
