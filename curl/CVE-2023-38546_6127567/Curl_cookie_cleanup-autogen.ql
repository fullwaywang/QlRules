/**
 * @name curl-61275672b46d9abb32857404-Curl_cookie_cleanup
 * @id cpp/curl/61275672b46d9abb32857404/curl-cookie-cleanup
 * @description curl-61275672b46d9abb32857404-lib/cookie.c-Curl_cookie_cleanup CVE-2023-38546
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="256"
		and not target_0.getValue()="63"
		and target_0.getParent().(LTExpr).getParent().(ForStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vCurl_cfree, Parameter vc_1594, VariableAccess target_2, ExprStmt target_1) {
		target_1.getExpr().(VariableCall).getExpr().(VariableAccess).getTarget()=vCurl_cfree
		and target_1.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="filename"
		and target_1.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vc_1594
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Parameter vc_1594, VariableAccess target_2) {
		target_2.getTarget()=vc_1594
}

from Function func, Variable vCurl_cfree, Parameter vc_1594, Literal target_0, ExprStmt target_1, VariableAccess target_2
where
func_0(func, target_0)
and func_1(vCurl_cfree, vc_1594, target_2, target_1)
and func_2(vc_1594, target_2)
and vCurl_cfree.getType().hasName("curl_free_callback")
and vc_1594.getType().hasName("CookieInfo *")
and not vCurl_cfree.getParentScope+() = func
and vc_1594.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
