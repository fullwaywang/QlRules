/**
 * @name frr-c3793352a8d76d2eee1edc38a9a16c1c8a6573f4-babel_packet_examin
 * @id cpp/frr/c3793352a8d76d2eee1edc38a9a16c1c8a6573f4/babel-packet-examin
 * @description frr-c3793352a8d76d2eee1edc38a9a16c1c8a6573f4-babeld/message.c-babel_packet_examin CVE-2022-26128
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vi_291, ExprStmt target_3, Literal target_0) {
		target_0.getValue()="1"
		and not target_0.getValue()="2"
		and target_0.getParent().(AddExpr).getParent().(GTExpr).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vi_291
		and target_3.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getParent().(AddExpr).getParent().(GTExpr).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation())
}

predicate func_1(BlockStmt target_5, Function func) {
	exists(AddExpr target_1 |
		target_1.getAnOperand() instanceof AddExpr
		and target_1.getAnOperand().(Literal).getValue()="2"
		and target_1.getParent().(GTExpr).getGreaterOperand() instanceof AddExpr
		and target_1.getParent().(GTExpr).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_1.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_5
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vi_291, Variable vlen_293, BlockStmt target_5, AddExpr target_2) {
		target_2.getAnOperand().(VariableAccess).getTarget()=vi_291
		and target_2.getAnOperand().(VariableAccess).getTarget()=vlen_293
		and target_2.getParent().(GTExpr).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_2.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_3(Variable vi_291, ExprStmt target_3) {
		target_3.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vi_291
}

predicate func_5(Function func, BlockStmt target_5) {
		target_5.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_5.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_5.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_5.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getCondition().(Literal).getValue()="0"
		and target_5.getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="1"
		and target_5.getEnclosingFunction() = func
}

from Function func, Variable vi_291, Variable vlen_293, Literal target_0, AddExpr target_2, ExprStmt target_3, BlockStmt target_5
where
func_0(vi_291, target_3, target_0)
and not func_1(target_5, func)
and func_2(vi_291, vlen_293, target_5, target_2)
and func_3(vi_291, target_3)
and func_5(func, target_5)
and vi_291.getType().hasName("unsigned int")
and vlen_293.getType().hasName("unsigned char")
and vi_291.(LocalVariable).getFunction() = func
and vlen_293.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
