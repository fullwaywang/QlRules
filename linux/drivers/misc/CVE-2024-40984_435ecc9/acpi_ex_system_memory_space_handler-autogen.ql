/**
 * @name linux-435ecc978c3d5d0c4e172ec5b956dc1904061d98-acpi_ex_system_memory_space_handler
 * @id cpp/linux/435ecc978c3d5d0c4e172ec5b956dc1904061d98/acpi-ex-system-memory-space-handler
 * @description linux-435ecc978c3d5d0c4e172ec5b956dc1904061d98-drivers/acpi/acpica/exregion.c-acpi_ex_system_memory_space_handler CVE-2024-40984
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpage_boundary_map_length_46, EqualityOperation target_4, RelationalOperation target_8, VariableAccess target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getLValue() = target_0
		and obj_0.getRValue().(Literal).getValue()="4096"
	)
	and target_0.getTarget()=vpage_boundary_map_length_46
	and target_4.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getLocation())
	and target_0.getLocation().isBefore(target_8.getLesserOperand().(VariableAccess).getLocation())
}

predicate func_2(Function func, DeclStmt target_2) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Parameter vaddress_36, Variable vpage_boundary_map_length_46, LogicalOrExpr target_9, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(SubExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BitwiseAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(AddExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getLeftOperand().(VariableAccess).getTarget()=vaddress_36
					and obj_3.getRightOperand().(SubExpr).getValue()="4095"
				)
				and obj_2.getRightOperand().(ComplementExpr).getValue()="18446744073709547520"
			)
			and obj_1.getRightOperand().(VariableAccess).getTarget()=vaddress_36
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpage_boundary_map_length_46
	)
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_4(Variable vpage_boundary_map_length_46, BlockStmt target_10, EqualityOperation target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget()=vpage_boundary_map_length_46
	and target_4.getRightOperand().(Literal).getValue()="0"
	and target_4.getParent().(IfStmt).getThen()=target_10
}

predicate func_5(Variable vmap_length_45, Variable vpage_boundary_map_length_46, LogicalOrExpr target_9, IfStmt target_5) {
	exists(RelationalOperation obj_0 | obj_0=target_5.getCondition() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=vmap_length_45
		and obj_0.getLesserOperand().(VariableAccess).getTarget()=vpage_boundary_map_length_46
	)
	and exists(BlockStmt obj_1 | obj_1=target_5.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLValue().(VariableAccess).getTarget()=vmap_length_45
				and obj_3.getRValue().(VariableAccess).getTarget()=vpage_boundary_map_length_46
			)
		)
	)
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

/*predicate func_6(Variable vmap_length_45, Variable vpage_boundary_map_length_46, BlockStmt target_11, ExprStmt target_12, ExprStmt target_13, ExprStmt target_7, VariableAccess target_6) {
	exists(GTExpr obj_0 | obj_0=target_6.getParent() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=vmap_length_45
		and obj_0.getParent().(IfStmt).getThen()=target_11
	)
	and target_6.getTarget()=vpage_boundary_map_length_46
	and target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_6.getParent().(GTExpr).getGreaterOperand().(VariableAccess).getLocation())
	and target_13.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_6.getLocation())
	and target_6.getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
}

*/
predicate func_7(Variable vmap_length_45, Variable vpage_boundary_map_length_46, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vmap_length_45
		and obj_0.getRValue().(VariableAccess).getTarget()=vpage_boundary_map_length_46
	)
}

predicate func_8(Variable vmap_length_45, Variable vpage_boundary_map_length_46, RelationalOperation target_8) {
	 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
	and target_8.getGreaterOperand().(VariableAccess).getTarget()=vmap_length_45
	and target_8.getLesserOperand().(VariableAccess).getTarget()=vpage_boundary_map_length_46
}

predicate func_9(Parameter vaddress_36, LogicalOrExpr target_9) {
	exists(RelationalOperation obj_0 | obj_0=target_9.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getGreaterOperand() |
			obj_1.getTarget().getName()="mapped_physical_address"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("acpi_mem_space_context *")
		)
		and obj_0.getLesserOperand().(VariableAccess).getTarget()=vaddress_36
	)
	and exists(RelationalOperation obj_2 | obj_2=target_9.getRightOperand() |
		exists(AddExpr obj_3 | obj_3=obj_2.getGreaterOperand() |
			obj_3.getLeftOperand().(VariableAccess).getTarget()=vaddress_36
			and obj_3.getRightOperand().(VariableAccess).getTarget().getType().hasName("u32")
		)
		and exists(AddExpr obj_4 | obj_4=obj_2.getLesserOperand() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getLeftOperand() |
				obj_5.getTarget().getName()="mapped_physical_address"
				and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("acpi_mem_space_context *")
			)
			and exists(PointerFieldAccess obj_6 | obj_6=obj_4.getRightOperand() |
				obj_6.getTarget().getName()="mapped_length"
				and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("acpi_mem_space_context *")
			)
		)
	)
}

predicate func_10(Variable vpage_boundary_map_length_46, BlockStmt target_10) {
	exists(ExprStmt obj_0 | obj_0=target_10.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getLValue().(VariableAccess).getTarget()=vpage_boundary_map_length_46
			and obj_1.getRValue().(Literal).getValue()="4096"
		)
	)
}

predicate func_11(Function func, BlockStmt target_11) {
	target_11.getStmt(0) instanceof ExprStmt
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Parameter vaddress_36, Variable vmap_length_45, ExprStmt target_12) {
	exists(AssignExpr obj_0 | obj_0=target_12.getExpr() |
		exists(SubExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(AddExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getTarget().getName()="address"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("acpi_mem_space_context *")
				)
				and exists(PointerFieldAccess obj_4 | obj_4=obj_2.getRightOperand() |
					obj_4.getTarget().getName()="length"
					and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("acpi_mem_space_context *")
				)
			)
			and obj_1.getRightOperand().(VariableAccess).getTarget()=vaddress_36
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vmap_length_45
	)
}

predicate func_13(Variable vpage_boundary_map_length_46, ExprStmt target_13) {
	exists(AssignExpr obj_0 | obj_0=target_13.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vpage_boundary_map_length_46
		and obj_0.getRValue().(Literal).getValue()="4096"
	)
}

from Function func, Parameter vaddress_36, Variable vmap_length_45, Variable vpage_boundary_map_length_46, VariableAccess target_0, DeclStmt target_2, ExprStmt target_3, EqualityOperation target_4, IfStmt target_5, ExprStmt target_7, RelationalOperation target_8, LogicalOrExpr target_9, BlockStmt target_10, BlockStmt target_11, ExprStmt target_12, ExprStmt target_13
where
func_0(vpage_boundary_map_length_46, target_4, target_8, target_0)
and func_2(func, target_2)
and func_3(vaddress_36, vpage_boundary_map_length_46, target_9, target_3)
and func_4(vpage_boundary_map_length_46, target_10, target_4)
and func_5(vmap_length_45, vpage_boundary_map_length_46, target_9, target_5)
and func_7(vmap_length_45, vpage_boundary_map_length_46, target_7)
and func_8(vmap_length_45, vpage_boundary_map_length_46, target_8)
and func_9(vaddress_36, target_9)
and func_10(vpage_boundary_map_length_46, target_10)
and func_11(func, target_11)
and func_12(vaddress_36, vmap_length_45, target_12)
and func_13(vpage_boundary_map_length_46, target_13)
and vaddress_36.getType().hasName("acpi_physical_address")
and vmap_length_45.getType().hasName("acpi_size")
and vpage_boundary_map_length_46.getType().hasName("acpi_size")
and vaddress_36.getFunction() = func
and vmap_length_45.(LocalVariable).getFunction() = func
and vpage_boundary_map_length_46.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
