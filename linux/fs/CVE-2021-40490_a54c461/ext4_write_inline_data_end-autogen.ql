/**
 * @name linux-a54c4613dac1500b40e4ab55199f7c51f028e848-ext4_write_inline_data_end
 * @id cpp/linux/a54c4613dac1500b40e4ab55199f7c51f028e848/ext4-write-inline-data-end
 * @description linux-a54c4613dac1500b40e4ab55199f7c51f028e848-fs/ext4/inline.c-ext4_write_inline_data_end CVE-2021-40490
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_729, ExprStmt target_1, NotExpr target_2, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("ext4_find_inline_data_nolock")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_729
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("void *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kmap_atomic")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("page *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vinode_729, NotExpr target_2) {
	target_2.getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ext4_has_inline_data")
	and target_2.getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_729
}

predicate func_3(Parameter vinode_729, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("ext4_write_inline_data")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_729
	and target_3.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ext4_iloc")
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("void *")
	and target_3.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("loff_t")
	and target_3.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Parameter vinode_729, ExprStmt target_1, NotExpr target_2, ExprStmt target_3
where
not func_0(vinode_729, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vinode_729, target_2)
and func_3(vinode_729, target_3)
and vinode_729.getType().hasName("inode *")
and vinode_729.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
