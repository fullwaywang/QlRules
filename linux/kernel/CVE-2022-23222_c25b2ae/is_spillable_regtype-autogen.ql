/**
 * @name linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-is_spillable_regtype
 * @id cpp/linux/c25b2ae136039ffa820c26138ed4a5e5f3ab3841/is-spillable-regtype
 * @description linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-kernel/bpf/verifier.c-is_spillable_regtype CVE-2022-23222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_10(Function func, SwitchCase target_10) {
	target_10.getExpr() instanceof EnumConstantAccess
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Parameter vtype_2769) {
exists(FunctionCall target_11 |
	target_11.getTarget().hasName("base_type")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vtype_2769)
}

predicate func_12(Parameter vtype_2769, VariableAccess target_12) {
	target_12.getTarget()=vtype_2769
}

from Function func, Parameter vtype_2769, SwitchCase target_10, VariableAccess target_12
where
func_10(func, target_10)
and not func_11(vtype_2769)
and func_12(vtype_2769, target_12)
and vtype_2769.getType().hasName("bpf_reg_type")
and vtype_2769.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
