/**
 * @name linux-64b88afbd92fbf434759d1896a7cf705e1c00e79-virtio_gpu_object_shmem_init
 * @id cpp/linux/64b88afbd92fbf434759d1896a7cf705e1c00e79/virtio-gpu-object-shmem-init
 * @description linux-64b88afbd92fbf434759d1896a7cf705e1c00e79-virtio_gpu_object_shmem_init CVE-2023-22998
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vshmem_156, FunctionCall target_1, FunctionCall target_2) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="pages"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshmem_156
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vshmem_156, FunctionCall target_1) {
		target_1.getTarget().hasName("IS_ERR")
		and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="pages"
		and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshmem_156
}

predicate func_2(Variable vshmem_156, FunctionCall target_2) {
		target_2.getTarget().hasName("PTR_ERR")
		and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="pages"
		and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshmem_156
}

from Function func, Variable vshmem_156, FunctionCall target_1, FunctionCall target_2
where
not func_0(vshmem_156, target_1, target_2)
and func_1(vshmem_156, target_1)
and func_2(vshmem_156, target_2)
and vshmem_156.getType().hasName("virtio_gpu_object_shmem *")
and vshmem_156.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
