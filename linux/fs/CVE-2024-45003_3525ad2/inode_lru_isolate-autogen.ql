/**
 * @name linux-3525ad25240dfdd8c78f3470911ed10aa727aa72-inode_lru_isolate
 * @id cpp/linux/3525ad25240dfdd8c78f3470911ed10aa727aa72/inode-lru-isolate
 * @description linux-3525ad25240dfdd8c78f3470911ed10aa727aa72-fs/inode.c-inode_lru_isolate CVE-2024-45003
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinode_735, FunctionCall target_0) {
	target_0.getTarget().hasName("__iget")
	and not target_0.getTarget().hasName("inode_pin_lru_isolating")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vinode_735
}

predicate func_1(Variable vinode_735, FunctionCall target_1) {
	target_1.getTarget().hasName("iput")
	and not target_1.getTarget().hasName("inode_unpin_lru_isolating")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vinode_735
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="636"
	and not target_2.getValue()="640"
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vinode_735, FunctionCall target_0, FunctionCall target_1, Literal target_2
where
func_0(vinode_735, target_0)
and func_1(vinode_735, target_1)
and func_2(func, target_2)
and vinode_735.getType().hasName("inode *")
and vinode_735.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
