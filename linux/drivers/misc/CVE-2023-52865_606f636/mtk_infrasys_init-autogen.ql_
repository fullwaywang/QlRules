/**
 * @name linux-606f6366a35a3329545e38129804d65ef26ed7d2-mtk_infrasys_init
 * @id cpp/linux/606f6366a35a3329545e38129804d65ef26ed7d2/mtk-infrasys-init
 * @description linux-606f6366a35a3329545e38129804d65ef26ed7d2-drivers/clk/mediatek/clk-mt6797.c-mtk_infrasys_init CVE-2023-52865
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinfra_clk_data, NotExpr target_1, ExprStmt target_2, EqualityOperation target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vinfra_clk_data
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vinfra_clk_data, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vinfra_clk_data
}

predicate func_2(Variable vinfra_clk_data, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vinfra_clk_data
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mtk_alloc_clk_data")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(Literal).getValue()="85"
}

predicate func_3(Variable vinfra_clk_data, EqualityOperation target_3) {
	target_3.getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="hws"
	and target_3.getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfra_clk_data
	and target_3.getLeftOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getRightOperand().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-517"
}

from Function func, Variable vinfra_clk_data, NotExpr target_1, ExprStmt target_2, EqualityOperation target_3
where
not func_0(vinfra_clk_data, target_1, target_2, target_3)
and func_1(vinfra_clk_data, target_1)
and func_2(vinfra_clk_data, target_2)
and func_3(vinfra_clk_data, target_3)
and vinfra_clk_data.getType().hasName("clk_hw_onecell_data *")
and not vinfra_clk_data.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
