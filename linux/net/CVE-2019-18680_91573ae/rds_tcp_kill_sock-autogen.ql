/**
 * @name linux-91573ae4aed0a49660abdad4d42f2a0db995ee5e-rds_tcp_kill_sock
 * @id cpp/linux/91573ae4aed0a49660abdad4d42f2a0db995ee5e/rds-tcp-kill-sock
 * @description linux-91573ae4aed0a49660abdad4d42f2a0db995ee5e-net/rds/tcp.c-rds_tcp_kill_sock CVE-2019-18680
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtc_337, CommaExpr target_4, ExprStmt target_1) {
	exists(IfStmt target_0 |
		target_0.getCondition().(PointerFieldAccess).getTarget().getName()="t_sock"
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtc_337
		and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
		and target_0.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
		and target_0.getThen().(BlockStmt).getStmt(2) instanceof ExprStmt
		and target_4.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtc_337, Variable vsk_338, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsk_338
		and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="sk"
		and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="t_sock"
		and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtc_337
}

predicate func_2(Variable vsk_338, ExprStmt target_2) {
		target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="disconnect"
		and target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="skc_prot"
		and target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_338
		and target_2.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vsk_338
		and target_2.getExpr().(VariableCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_3(Variable vsk_338, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("tcp_done")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_338
}

predicate func_4(Variable vtc_337, CommaExpr target_4) {
		target_4.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtc_337
		and target_4.getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("rds_tcp_connection *")
		and target_4.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("rds_tcp_connection *")
		and target_4.getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("const list_head *")
}

from Function func, Variable vtc_337, Variable vsk_338, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, CommaExpr target_4
where
not func_0(vtc_337, target_4, target_1)
and func_1(vtc_337, vsk_338, target_1)
and func_2(vsk_338, target_2)
and func_3(vsk_338, target_3)
and func_4(vtc_337, target_4)
and vtc_337.getType().hasName("rds_tcp_connection *")
and vsk_338.getType().hasName("sock *")
and vtc_337.(LocalVariable).getFunction() = func
and vsk_338.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
