/**
 * @name linux-8f5624629105589bcc23d0e51cc01bd8103d09a5-asix_resume
 * @id cpp/linux/8f5624629105589bcc23d0e51cc01bd8103d09a5/asix-resume
 * @description linux-8f5624629105589bcc23d0e51cc01bd8103d09a5-drivers/net/usb/asix_devices.c-asix_resume CVE-2017-16647
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_679, ExprStmt target_2) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vpriv_679
	and target_0.getRightOperand().(PointerFieldAccess).getTarget().getName()="resume"
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_679
	and target_0.getParent().(IfStmt).getThen()=target_2)
}

predicate func_1(Variable vpriv_679, ExprStmt target_2, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="resume"
	and target_1.getQualifier().(VariableAccess).getTarget()=vpriv_679
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vpriv_679, ExprStmt target_2) {
	target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="resume"
	and target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_679
	and target_2.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("usbnet *")
}

from Function func, Variable vpriv_679, PointerFieldAccess target_1, ExprStmt target_2
where
not func_0(vpriv_679, target_2)
and func_1(vpriv_679, target_2, target_1)
and func_2(vpriv_679, target_2)
and vpriv_679.getType().hasName("asix_common_private *")
and vpriv_679.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
