/**
 * @name linux-3dd428039e06e1967ce294e2cd6342825aaaad77-ip_vs_add_service
 * @id cpp/linux/3dd428039e06e1967ce294e2cd6342825aaaad77/ip-vs-add-service
 * @description linux-3dd428039e06e1967ce294e2cd6342825aaaad77-net/netfilter/ipvs/ip_vs_ctl.c-ip_vs_add_service CVE-2024-42322
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsvc_1373, Parameter vipvs_1367, ExprStmt target_6, IfStmt target_0) {
	exists(EqualityOperation obj_0 | obj_0=target_0.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="port"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsvc_1373
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getTarget().hasName("__builtin_bswap16")
			and obj_2.getValue()="5376"
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_0.getThen() |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			exists(AddressOfExpr obj_5 | obj_5=obj_4.getArgument(0) |
				exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
					obj_6.getTarget().getName()="ftpsvc_counter"
					and obj_6.getQualifier().(VariableAccess).getTarget()=vipvs_1367
				)
			)
			and obj_4.getTarget().hasName("atomic_inc")
		)
	)
	and exists(IfStmt obj_7 | obj_7=target_0.getElse() |
		exists(EqualityOperation obj_8 | obj_8=obj_7.getCondition() |
			exists(PointerFieldAccess obj_9 | obj_9=obj_8.getLeftOperand() |
				obj_9.getTarget().getName()="port"
				and obj_9.getQualifier().(VariableAccess).getTarget()=vsvc_1373
			)
			and obj_8.getRightOperand().(Literal).getValue()="0"
		)
		and exists(ExprStmt obj_10 | obj_10=obj_7.getThen() |
			exists(FunctionCall obj_11 | obj_11=obj_10.getExpr() |
				exists(AddressOfExpr obj_12 | obj_12=obj_11.getArgument(0) |
					exists(PointerFieldAccess obj_13 | obj_13=obj_12.getOperand() |
						obj_13.getTarget().getName()="nullsvc_counter"
						and obj_13.getQualifier().(VariableAccess).getTarget()=vipvs_1367
					)
				)
				and obj_11.getTarget().hasName("atomic_inc")
			)
		)
	)
	and target_6.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vsvc_1373, Parameter vipvs_1367, ExprStmt target_6, IfStmt target_1) {
	exists(LogicalAndExpr obj_0 | obj_0=target_1.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="pe"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsvc_1373
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRightOperand() |
			exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
				obj_3.getTarget().getName()="pe"
				and obj_3.getQualifier().(VariableAccess).getTarget()=vsvc_1373
			)
			and obj_2.getTarget().getName()="conn_out"
		)
	)
	and exists(ExprStmt obj_4 | obj_4=target_1.getThen() |
		exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
			exists(AddressOfExpr obj_6 | obj_6=obj_5.getArgument(0) |
				exists(PointerFieldAccess obj_7 | obj_7=obj_6.getOperand() |
					obj_7.getTarget().getName()="conn_out_counter"
					and obj_7.getQualifier().(VariableAccess).getTarget()=vipvs_1367
				)
			)
			and obj_5.getTarget().hasName("atomic_inc")
		)
	)
	and target_6.getLocation().isBefore(target_1.getLocation())
}

predicate func_4(Variable vsvc_1373, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="pe"
	and target_4.getQualifier().(VariableAccess).getTarget()=vsvc_1373
}

predicate func_5(Variable vsvc_1373, PointerFieldAccess target_5) {
	target_5.getTarget().getName()="pe"
	and target_5.getQualifier().(VariableAccess).getTarget()=vsvc_1373
}

predicate func_6(Function func, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("ip_vs_pe *")
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and target_6.getEnclosingFunction() = func
}

from Function func, Variable vsvc_1373, Parameter vipvs_1367, IfStmt target_0, IfStmt target_1, PointerFieldAccess target_4, PointerFieldAccess target_5, ExprStmt target_6
where
func_0(vsvc_1373, vipvs_1367, target_6, target_0)
and func_1(vsvc_1373, vipvs_1367, target_6, target_1)
and func_4(vsvc_1373, target_4)
and func_5(vsvc_1373, target_5)
and func_6(func, target_6)
and vsvc_1373.getType().hasName("ip_vs_service *")
and vipvs_1367.getType().hasName("netns_ipvs *")
and vsvc_1373.(LocalVariable).getFunction() = func
and vipvs_1367.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
