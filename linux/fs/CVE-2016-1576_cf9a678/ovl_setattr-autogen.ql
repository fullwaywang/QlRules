/**
 * @name linux-cf9a6784f7c1b5ee2b9159a1246e327c331c5697-ovl_setattr
 * @id cpp/linux/cf9a6784f7c1b5ee2b9159a1246e327c331c5697/ovl-setattr
 * @description linux-cf9a6784f7c1b5ee2b9159a1246e327c331c5697-fs/overlayfs/inode.c-ovl_setattr CVE-2016-1576
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vattr_43, Variable verr_45, Parameter vdentry_43, ExprStmt target_4, ExprStmt target_5, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_45
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("inode_change_ok")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="d_inode"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdentry_43
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vattr_43
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_4.getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_45, ExprStmt target_4, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(VariableAccess).getTarget()=verr_45
	and target_1.getThen() instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation()))
}

predicate func_2(Variable verr_45, ExprStmt target_7, ReturnStmt target_3, Function func) {
exists(ReturnStmt target_2 |
	target_2.getExpr().(VariableAccess).getTarget()=verr_45
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableAccess).getLocation())
	and target_2.getExpr().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation()))
}

predicate func_3(Variable verr_45, Function func, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=verr_45
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable verr_45, Parameter vdentry_43, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_45
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ovl_want_write")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdentry_43
}

predicate func_5(Parameter vattr_43, Variable verr_45, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_45
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("notify_change")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vattr_43
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

predicate func_7(Parameter vattr_43, Variable verr_45, Parameter vdentry_43, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_45
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ovl_copy_up_last")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdentry_43
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vattr_43
}

from Function func, Parameter vattr_43, Variable verr_45, Parameter vdentry_43, ReturnStmt target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_7
where
not func_0(vattr_43, verr_45, vdentry_43, target_4, target_5, func)
and not func_1(verr_45, target_4, func)
and not func_2(verr_45, target_7, target_3, func)
and func_3(verr_45, func, target_3)
and func_4(verr_45, vdentry_43, target_4)
and func_5(vattr_43, verr_45, target_5)
and func_7(vattr_43, verr_45, vdentry_43, target_7)
and vattr_43.getType().hasName("iattr *")
and verr_45.getType().hasName("int")
and vdentry_43.getType().hasName("dentry *")
and vattr_43.getFunction() = func
and verr_45.(LocalVariable).getFunction() = func
and vdentry_43.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
