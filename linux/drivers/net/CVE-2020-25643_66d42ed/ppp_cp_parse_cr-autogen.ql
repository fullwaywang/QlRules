/**
 * @name linux-66d42ed8b25b64eb63111a2b8582c5afc8bf1105-ppp_cp_parse_cr
 * @id cpp/linux/66d42ed8b25b64eb63111a2b8582c5afc8bf1105/ppp-cp-parse-cr
 * @description linux-66d42ed8b25b64eb63111a2b8582c5afc8bf1105-drivers/net/wan/hdlc_ppp.c-ppp_cp_parse_cr CVE-2020-25643
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vopt_376, Variable vlen_378, BlockStmt target_8, CommaExpr target_9, LogicalOrExpr target_10) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof RelationalOperation
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="2"
	and target_0.getParent().(LogicalOrExpr).getLeftOperand() instanceof RelationalOperation
	and target_0.getParent().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_378
	and target_0.getParent().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_0.getParent().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_0.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_8
	and target_9.getLeftOperand().(AssignSubExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_10.getRightOperand().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation()))
}

predicate func_1(LogicalOrExpr target_10, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="err_out"
	and target_1.getParent().(IfStmt).getCondition()=target_10
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vopt_376, ArrayExpr target_11, NotExpr target_12) {
exists(IfStmt target_2 |
	target_2.getCondition().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(SizeofExprOperator).getValue()="6"
	and target_2.getThen().(GotoStmt).getName() ="err_out"
	and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_12.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vlen_378, ArrayExpr target_11, LogicalOrExpr target_10) {
exists(IfStmt target_3 |
	target_3.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_378
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="6"
	and target_3.getThen().(GotoStmt).getName() ="err_out"
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
	and target_10.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_3.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vdev_372, LogicalOrExpr target_10, ExprStmt target_4) {
	target_4.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="rx_errors"
	and target_4.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="stats"
	and target_4.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_372
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_5(Variable vout_377, LogicalOrExpr target_10, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vout_377
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_6(Variable vopt_376, Variable vlen_378, BlockStmt target_8, RelationalOperation target_6) {
	 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
	and target_6.getLesserOperand().(VariableAccess).getTarget()=vlen_378
	and target_6.getGreaterOperand().(Literal).getValue()="2"
	and target_6.getParent().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_378
	and target_6.getParent().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_6.getParent().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_6.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_8
}

predicate func_7(LogicalOrExpr target_10, Function func, ReturnStmt target_7) {
	target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, BlockStmt target_8) {
	target_8.getStmt(0) instanceof ExprStmt
	and target_8.getStmt(1) instanceof ExprStmt
	and target_8.getStmt(2) instanceof ReturnStmt
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vopt_376, Variable vlen_378, CommaExpr target_9) {
	target_9.getLeftOperand().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vlen_378
	and target_9.getLeftOperand().(AssignSubExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_9.getLeftOperand().(AssignSubExpr).getRValue().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_9.getRightOperand().(AssignPointerAddExpr).getLValue().(VariableAccess).getTarget()=vopt_376
	and target_9.getRightOperand().(AssignPointerAddExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_9.getRightOperand().(AssignPointerAddExpr).getRValue().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
}

predicate func_10(Variable vopt_376, Variable vlen_378, LogicalOrExpr target_10) {
	target_10.getLeftOperand() instanceof RelationalOperation
	and target_10.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_378
	and target_10.getRightOperand().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_10.getRightOperand().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
}

predicate func_11(Variable vopt_376, ArrayExpr target_11) {
	target_11.getArrayBase().(VariableAccess).getTarget()=vopt_376
	and target_11.getArrayOffset().(Literal).getValue()="0"
}

predicate func_12(Variable vopt_376, NotExpr target_12) {
	target_12.getOperand().(FunctionCall).getTarget().hasName("memcmp")
	and target_12.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vopt_376
	and target_12.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const u8[6]")
	and target_12.getOperand().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="6"
}

from Function func, Parameter vdev_372, Variable vopt_376, Variable vout_377, Variable vlen_378, ExprStmt target_4, ExprStmt target_5, RelationalOperation target_6, ReturnStmt target_7, BlockStmt target_8, CommaExpr target_9, LogicalOrExpr target_10, ArrayExpr target_11, NotExpr target_12
where
not func_0(vopt_376, vlen_378, target_8, target_9, target_10)
and not func_1(target_10, func)
and not func_2(vopt_376, target_11, target_12)
and not func_3(vlen_378, target_11, target_10)
and func_4(vdev_372, target_10, target_4)
and func_5(vout_377, target_10, target_5)
and func_6(vopt_376, vlen_378, target_8, target_6)
and func_7(target_10, func, target_7)
and func_8(func, target_8)
and func_9(vopt_376, vlen_378, target_9)
and func_10(vopt_376, vlen_378, target_10)
and func_11(vopt_376, target_11)
and func_12(vopt_376, target_12)
and vdev_372.getType().hasName("net_device *")
and vopt_376.getType().hasName("const u8 *")
and vout_377.getType().hasName("u8 *")
and vlen_378.getType().hasName("unsigned int")
and vdev_372.getFunction() = func
and vopt_376.(LocalVariable).getFunction() = func
and vout_377.(LocalVariable).getFunction() = func
and vlen_378.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
