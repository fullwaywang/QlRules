/**
 * @name chromium-8e7cd572e5a76e436577e5d26460497da8667eea-blink____CallMethodOnFrame
 * @id cpp/chromium/8e7cd572e5a76e436577e5d26460497da8667eea/blinkcallmethodonframe
 * @description chromium-8e7cd572e5a76e436577e5d26460497da8667eea-third_party/blink/renderer/core/frame/local_frame_mojo_handler.cc-blink____CallMethodOnFrame CVE-2023-1235
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmethod_214, BlockStmt target_3, AddressOfExpr target_5) {
exists(LogicalOrExpr target_0 |
	exists(NotExpr obj_0 | obj_0=target_0.getRightOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("IsFunction")
			and obj_1.getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vmethod_214
		)
	)
	and target_0.getLeftOperand() instanceof LogicalOrExpr
	and target_0.getParent().(IfStmt).getThen()=target_3
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Function func) {
exists(SwitchStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getTarget().hasName("__builtin_expect")
				and obj_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
				and obj_2.getArgument(1) instanceof Literal
			)
			and exists(ExprStmt obj_3 | obj_3=obj_1.getElse() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().hasName("Check")
					and obj_4.getArgument(0) instanceof StringLiteral
					and obj_4.getArgument(1) instanceof Literal
					and obj_4.getArgument(2) instanceof StringLiteral
				)
			)
		)
		and obj_0.getStmt(0).(SwitchCase).getExpr() instanceof Literal
		and obj_0.getStmt(1).(SwitchCase).toString() = "default: "
	)
	and target_1.getExpr() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_2(Variable vcontext_205, Variable vobject_213, Variable vmethod_214, Parameter vmethod_name_202, Parameter vobject_name_201, BlockStmt target_3, LogicalOrExpr target_2) {
	exists(NotExpr obj_0 | obj_0=target_2.getLeftOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().hasName("GetProperty")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vcontext_205
				and obj_2.getArgument(1).(ConstructorCall).getArgument(0).(FunctionCall).getTarget().hasName("Global")
				and obj_2.getArgument(2).(VariableAccess).getTarget()=vobject_name_201
			)
			and obj_1.getTarget().hasName("ToLocal")
			and obj_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vobject_213
		)
	)
	and exists(NotExpr obj_3 | obj_3=target_2.getRightOperand() |
		exists(FunctionCall obj_4 | obj_4=obj_3.getOperand() |
			exists(FunctionCall obj_5 | obj_5=obj_4.getQualifier() |
				obj_5.getTarget().hasName("GetProperty")
				and obj_5.getArgument(0).(VariableAccess).getTarget()=vcontext_205
				and obj_5.getArgument(1).(VariableAccess).getTarget()=vobject_213
				and obj_5.getArgument(2).(VariableAccess).getTarget()=vmethod_name_202
			)
			and obj_4.getTarget().hasName("ToLocal")
			and obj_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmethod_214
		)
	)
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Function func, BlockStmt target_3) {
	target_3.getStmt(0).(ReturnStmt).getExpr().(ConstructorCall).getType() instanceof VoidType
	and target_3.getEnclosingFunction() = func
}

predicate func_5(Variable vmethod_214, AddressOfExpr target_5) {
	target_5.getOperand().(VariableAccess).getTarget()=vmethod_214
}

from Function func, Variable vcontext_205, Variable vobject_213, Variable vmethod_214, Parameter vmethod_name_202, Parameter vobject_name_201, LogicalOrExpr target_2, BlockStmt target_3, AddressOfExpr target_5
where
not func_0(vmethod_214, target_3, target_5)
and not func_1(func)
and func_2(vcontext_205, vobject_213, vmethod_214, vmethod_name_202, vobject_name_201, target_3, target_2)
and func_3(func, target_3)
and func_5(vmethod_214, target_5)
and vcontext_205.getType().hasName("Local<Context>")
and vobject_213.getType().hasName("Local<Value>")
and vmethod_214.getType().hasName("Local<Value>")
and vmethod_name_202.getType().hasName("const String &")
and vobject_name_201.getType().hasName("const String &")
and vcontext_205.(LocalVariable).getFunction() = func
and vobject_213.(LocalVariable).getFunction() = func
and vmethod_214.(LocalVariable).getFunction() = func
and vmethod_name_202.getFunction() = func
and vobject_name_201.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
