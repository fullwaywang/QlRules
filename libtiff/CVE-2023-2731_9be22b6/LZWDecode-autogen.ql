/**
 * @name libtiff-9be22b639ea69e102d3847dca4c53ef025e9527b-LZWDecode
 * @id cpp/libtiff/9be22b639ea69e102d3847dca4c53ef025e9527b/lzwdecode
 * @description libtiff-9be22b639ea69e102d3847dca4c53ef025e9527b-libtiff/tif_lzw.c-LZWDecode CVE-2023-2731
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmodule_411, Parameter vtif_409, PointerFieldAccess target_2, ExprStmt target_4, ExprStmt target_5) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("TIFFErrorExtR")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtif_409
		and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmodule_411
		and target_0.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="LZWDecode: Scanline %u cannot be read due to previous error"
		and target_0.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="tif_row"
		and target_0.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtif_409
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsp_412, ExprStmt target_6, ExprStmt target_7, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="read_error"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsp_412
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vsp_412, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="read_error"
		and target_2.getQualifier().(VariableAccess).getTarget()=vsp_412
}

predicate func_4(Variable vmodule_411, Parameter vtif_409, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("TIFFErrorExtR")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtif_409
		and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmodule_411
		and target_4.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Not enough data at scanline %u (short %lu bytes)"
		and target_4.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="tif_row"
		and target_4.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtif_409
		and target_4.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("tmsize_t")
}

predicate func_5(Parameter vtif_409, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint8_t *")
		and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="tif_rawcp"
		and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtif_409
}

predicate func_6(Variable vsp_412, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dec_maxcodep"
		and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsp_412
		and target_6.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("code_t *")
}

predicate func_7(Variable vsp_412, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="read_error"
		and target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsp_412
		and target_7.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

from Function func, Variable vmodule_411, Variable vsp_412, Parameter vtif_409, PointerFieldAccess target_2, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7
where
not func_0(vmodule_411, vtif_409, target_2, target_4, target_5)
and not func_1(vsp_412, target_6, target_7, func)
and func_2(vsp_412, target_2)
and func_4(vmodule_411, vtif_409, target_4)
and func_5(vtif_409, target_5)
and func_6(vsp_412, target_6)
and func_7(vsp_412, target_7)
and vmodule_411.getType().hasName("const char[]")
and vsp_412.getType().hasName("LZWCodecState *")
and vtif_409.getType().hasName("TIFF *")
and vmodule_411.(LocalVariable).getFunction() = func
and vsp_412.(LocalVariable).getFunction() = func
and vtif_409.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
