/**
 * @name linux-21b27b2baa27423286e9b8d3f0b194d587083d95-__nf_queue
 * @id cpp/linux/21b27b2baa27423286e9b8d3f0b194d587083d95/--nf-queue
 * @description linux-21b27b2baa27423286e9b8d3f0b194d587083d95-net/netfilter/nf_queue.c-__nf_queue CVE-2022-48911
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable ventry_123, ExprStmt target_2, FunctionCall target_0) {
	exists(VariableAccess obj_0 | obj_0=target_0.getArgument(0) |
		obj_0.getTarget()=ventry_123
		and obj_0.getLocation().isBefore(target_2.getExpr().(VariableCall).getArgument(1).(VariableAccess).getLocation())
	)
	and target_0.getTarget().hasName("nf_queue_entry_get_refs")
	and not target_0.getTarget().hasName("kfree")
}

predicate func_1(Variable ventry_123, ExprStmt target_3, ExprStmt target_2, Function func) {
exists(IfStmt target_1 |
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("nf_queue_entry_get_refs")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=ventry_123
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_1.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("kfree")
				and obj_4.getArgument(0).(VariableAccess).getTarget()=ventry_123
			)
		)
		and obj_2.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-107"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableCall).getArgument(1).(VariableAccess).getLocation())
)
}

predicate func_2(Variable ventry_123, ExprStmt target_2) {
	exists(VariableCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().getName()="saveroute"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("const nf_afinfo *")
		)
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=ventry_123
	)
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr() instanceof FunctionCall
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable ventry_123, FunctionCall target_0, ExprStmt target_2, ExprStmt target_3
where
func_0(ventry_123, target_2, target_0)
and not func_1(ventry_123, target_3, target_2, func)
and func_2(ventry_123, target_2)
and func_3(func, target_3)
and ventry_123.getType().hasName("nf_queue_entry *")
and ventry_123.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
