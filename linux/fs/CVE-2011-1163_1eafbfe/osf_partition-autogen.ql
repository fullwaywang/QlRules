/**
 * @name linux-1eafbfeb7bdf59cfe173304c76188f3fd5f1fd05-osf_partition
 * @id cpp/linux/1eafbfeb7bdf59cfe173304c76188f3fd5f1fd05/osf-partition
 * @description linux-1eafbfeb7bdf59cfe173304c76188f3fd5f1fd05-fs/partitions/osf.c-osf_partition CVE-2011-1163
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlabel_49, EqualityOperation target_4, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("unsigned int")
		and target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="d_npartitions"
		and target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vlabel_49
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsect_17, ExprStmt target_5, ExprStmt target_6, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("unsigned int")
		and target_1.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="8"
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_dev_sector")
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsect_17
		and target_1.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vlabel_49, BlockStmt target_7, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="d_npartitions"
		and target_3.getQualifier().(VariableAccess).getTarget()=vlabel_49
		and target_3.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getParent().(LTExpr).getParent().(ForStmt).getStmt()=target_7
}

predicate func_4(Variable vlabel_49, EqualityOperation target_4) {
		target_4.getAnOperand().(PointerFieldAccess).getTarget().getName()="d_magic2"
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vlabel_49
		and target_4.getAnOperand().(Literal).getValue()="2186691927"
}

predicate func_5(Variable vsect_17, EqualityOperation target_4, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("put_dev_sector")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsect_17
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_6(Variable vsect_17, Function func, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("put_dev_sector")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsect_17
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Function func, BlockStmt target_7) {
		target_7.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_7.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="limit"
		and target_7.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("parsed_partitions *")
		and target_7.getStmt(1).(IfStmt).getCondition().(PointerFieldAccess).getTarget().getName()="p_size"
		and target_7.getStmt(1).(IfStmt).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("d_partition *")
		and target_7.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_partition")
		and target_7.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("parsed_partitions *")
		and target_7.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
		and target_7.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="p_offset"
		and target_7.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("d_partition *")
		and target_7.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="p_size"
		and target_7.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("d_partition *")
		and target_7.getEnclosingFunction() = func
}

from Function func, Variable vsect_17, Variable vlabel_49, PointerFieldAccess target_3, EqualityOperation target_4, ExprStmt target_5, ExprStmt target_6, BlockStmt target_7
where
not func_0(vlabel_49, target_4, func)
and not func_1(vsect_17, target_5, target_6, func)
and func_3(vlabel_49, target_7, target_3)
and func_4(vlabel_49, target_4)
and func_5(vsect_17, target_4, target_5)
and func_6(vsect_17, func, target_6)
and func_7(func, target_7)
and vsect_17.getType().hasName("Sector")
and vlabel_49.getType().hasName("disklabel *")
and vsect_17.(LocalVariable).getFunction() = func
and vlabel_49.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
