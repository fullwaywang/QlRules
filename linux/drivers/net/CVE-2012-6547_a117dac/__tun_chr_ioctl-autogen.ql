/**
 * @name linux-a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc-__tun_chr_ioctl
 * @id cpp/linux/a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc/--tun-chr-ioctl
 * @description linux-a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc-drivers/net/tun.c-__tun_chr_ioctl CVE-2012-6547
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vifr_1377, LogicalOrExpr target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vifr_1377
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="40"
	and target_0.getParent().(IfStmt).getCondition()=target_2)
}

predicate func_1(Parameter vifreq_len_1371, Variable vargp_1375, Variable vifr_1377, LogicalOrExpr target_2, IfStmt target_1) {
	target_1.getCondition().(FunctionCall).getTarget().hasName("copy_from_user")
	and target_1.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vifr_1377
	and target_1.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vargp_1375
	and target_1.getCondition().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vifreq_len_1371
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, LogicalOrExpr target_2) {
	target_2.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getLeftOperand().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getValue()="1073763530"
	and target_2.getLeftOperand().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="1"
	and target_2.getLeftOperand().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getThen().(SizeofTypeOperator).getType() instanceof LongType
	and target_2.getLeftOperand().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getThen().(SizeofTypeOperator).getValue()="4"
	and target_2.getLeftOperand().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getElse().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getLeftOperand().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(AddExpr).getValue()="16"
	and target_2.getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(AddExpr).getValue()="8"
	and target_2.getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(SubExpr).getValue()="255"
	and target_2.getRightOperand().(EqualityOperation).getRightOperand().(HexLiteral).getValue()="137"
	and target_2.getEnclosingFunction() = func
}

from Function func, Parameter vifreq_len_1371, Variable vargp_1375, Variable vifr_1377, IfStmt target_1, LogicalOrExpr target_2
where
not func_0(vifr_1377, target_2)
and func_1(vifreq_len_1371, vargp_1375, vifr_1377, target_2, target_1)
and func_2(func, target_2)
and vifreq_len_1371.getType().hasName("int")
and vargp_1375.getType().hasName("void *")
and vifr_1377.getType().hasName("ifreq")
and vifreq_len_1371.getFunction() = func
and vargp_1375.(LocalVariable).getFunction() = func
and vifr_1377.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
