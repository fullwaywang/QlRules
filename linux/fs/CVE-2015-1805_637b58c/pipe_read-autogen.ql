/**
 * @name linux-637b58c2887e5e57850865839cc75f59184b23d1-pipe_read
 * @id cpp/linux/637b58c2887e5e57850865839cc75f59184b23d1/pipe-read
 * @description linux-637b58c2887e5e57850865839cc75f59184b23d1-fs/pipe.c-pipe_read CVE-2015-1805
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
		target_0.getTarget().hasName("__compiletime_assert_369")
		and not target_0.getTarget().hasName("iov_iter_init")
		and target_0.getEnclosingFunction() = func
}

predicate func_2(Function func) {
	exists(AddressOfExpr target_2 |
		target_2.getOperand().(VariableAccess).getType().hasName("iov_iter")
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_2.getEnclosingFunction() = func)
}

predicate func_6(Variable vbuf_345, Variable vchars_348, ExprStmt target_37, ExprStmt target_40) {
	exists(AssignExpr target_6 |
		target_6.getLValue().(VariableAccess).getType().hasName("size_t")
		and target_6.getRValue().(FunctionCall).getTarget().hasName("copy_page_to_iter")
		and target_6.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="page"
		and target_6.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_345
		and target_6.getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="offset"
		and target_6.getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_345
		and target_6.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vchars_348
		and target_6.getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("iov_iter")
		and target_37.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_6.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_6.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_40.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_7(Variable vchars_348, Variable verror_349, ExprStmt target_41) {
	exists(RelationalOperation target_7 |
		 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
		and target_7.getLesserOperand().(VariableAccess).getType().hasName("size_t")
		and target_7.getGreaterOperand().(VariableAccess).getTarget()=vchars_348
		and target_7.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_7.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verror_349
		and target_7.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_41.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_7.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_8(Variable vret_329) {
	exists(UnaryMinusExpr target_8 |
		target_8.getValue()="-14"
		and target_8.getParent().(AssignExpr).getRValue() = target_8
		and target_8.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_329)
}

predicate func_9(Variable vret_329, ExprStmt target_43, NotExpr target_9) {
		target_9.getOperand().(VariableAccess).getTarget()=vret_329
		and target_9.getParent().(IfStmt).getThen()=target_43
}

predicate func_10(Variable vbuf_345, PointerFieldAccess target_10) {
		target_10.getTarget().getName()="page"
		and target_10.getQualifier().(VariableAccess).getTarget()=vbuf_345
		and target_10.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_11(Variable vbuf_345, PointerFieldAccess target_11) {
		target_11.getTarget().getName()="offset"
		and target_11.getQualifier().(VariableAccess).getTarget()=vbuf_345
		and target_11.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_12(Variable vchars_348, VariableAccess target_12) {
		target_12.getTarget()=vchars_348
		and target_12.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_13(Variable viov_330, VariableAccess target_13) {
		target_13.getTarget()=viov_330
		and target_13.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_14(Variable vchars_348, VariableAccess target_14) {
		target_14.getTarget()=vchars_348
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_15(FunctionCall target_44, Function func, BreakStmt target_15) {
		target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_44
		and target_15.getEnclosingFunction() = func
}

predicate func_18(Variable viov_330, Variable vchars_348, Variable vatomic_349, AssignExpr target_18) {
		target_18.getLValue().(VariableAccess).getTarget()=vatomic_349
		and target_18.getRValue().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("iov_fault_in_pages_write")
		and target_18.getRValue().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=viov_330
		and target_18.getRValue().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vchars_348
}

predicate func_19(Variable vatomic_349, ExprStmt target_45, VariableAccess target_19) {
		target_19.getTarget()=vatomic_349
		and target_19.getParent().(IfStmt).getThen()=target_45
}

predicate func_20(Variable vbuf_345, Variable vaddr_347, AssignExpr target_20) {
		target_20.getLValue().(VariableAccess).getTarget()=vaddr_347
		and target_20.getRValue().(FunctionCall).getTarget().hasName("kmap_atomic")
		and target_20.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="page"
		and target_20.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_345
}

predicate func_21(Variable vbuf_345, Variable vaddr_347, VariableAccess target_19, ExprStmt target_21) {
		target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vaddr_347
		and target_21.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kmap")
		and target_21.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="page"
		and target_21.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_345
		and target_21.getParent().(IfStmt).getCondition()=target_19
}

predicate func_22(Variable viov_330, Variable vbuf_345, Variable vaddr_347, Variable vchars_348, Variable verror_349, Variable vatomic_349, AssignExpr target_22) {
		target_22.getLValue().(VariableAccess).getTarget()=verror_349
		and target_22.getRValue().(FunctionCall).getTarget().hasName("pipe_iov_copy_to_user")
		and target_22.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=viov_330
		and target_22.getRValue().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vaddr_347
		and target_22.getRValue().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="offset"
		and target_22.getRValue().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_345
		and target_22.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vchars_348
		and target_22.getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vatomic_349
}

predicate func_23(Variable vbuf_345, Variable vaddr_347, Variable vatomic_349, Variable v__cond_369, VariableAccess target_48, IfStmt target_23) {
		target_23.getCondition().(VariableAccess).getTarget()=vatomic_349
		and target_23.getThen().(DoStmt).getCondition() instanceof Literal
		and target_23.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
		and target_23.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_369
		and target_23.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(DoStmt).getCondition() instanceof Literal
		and target_23.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__kunmap_atomic")
		and target_23.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vaddr_347
		and target_23.getElse().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kunmap")
		and target_23.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="page"
		and target_23.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_345
		and target_23.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_48
}

/*predicate func_24(Variable v__cond_369, DoStmt target_24) {
		target_24.getCondition() instanceof Literal
		and target_24.getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_369
		and target_24.getStmt().(BlockStmt).getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr() instanceof FunctionCall
		and target_24.getStmt().(BlockStmt).getStmt(3).(DoStmt).getCondition() instanceof Literal
}

*/
/*predicate func_27(Variable v__cond_369, IfStmt target_27) {
		target_27.getCondition().(VariableAccess).getTarget()=v__cond_369
		and target_27.getThen().(ExprStmt).getExpr() instanceof FunctionCall
}

*/
/*predicate func_28(Function func, DoStmt target_28) {
		target_28.getCondition() instanceof Literal
		and target_28.getEnclosingFunction() = func
}

*/
/*predicate func_29(Variable vaddr_347, ExprStmt target_29) {
		target_29.getExpr().(FunctionCall).getTarget().hasName("__kunmap_atomic")
		and target_29.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vaddr_347
}

*/
predicate func_30(Variable vret_329, Variable verror_349, Variable vatomic_349, VariableAccess target_48, IfStmt target_30) {
		target_30.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_30.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verror_349
		and target_30.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_30.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(VariableAccess).getTarget()=vatomic_349
		and target_30.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vatomic_349
		and target_30.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_30.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition() instanceof NotExpr
		and target_30.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_329
		and target_30.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=verror_349
		and target_30.getThen().(BlockStmt).getStmt(2) instanceof BreakStmt
		and target_30.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_48
}

/*predicate func_31(Variable verror_349, ExprStmt target_43, VariableAccess target_31) {
		target_31.getTarget()=verror_349
		and target_31.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_31.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_31.getLocation().isBefore(target_43.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
}

*/
/*predicate func_32(Variable vatomic_349, BlockStmt target_50, IfStmt target_23, VariableAccess target_32) {
		target_32.getTarget()=vatomic_349
		and target_32.getParent().(IfStmt).getThen()=target_50
		and target_23.getCondition().(VariableAccess).getLocation().isBefore(target_32.getLocation())
}

*/
/*predicate func_33(Variable vatomic_349, VariableAccess target_32, ExprStmt target_33) {
		target_33.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vatomic_349
		and target_33.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_33.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_32
}

*/
/*predicate func_34(VariableAccess target_32, Function func, GotoStmt target_34) {
		target_34.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_32
		and target_34.getEnclosingFunction() = func
}

*/
/*predicate func_35(Variable vret_329, Variable verror_349, FunctionCall target_44, IfStmt target_35) {
		target_35.getCondition() instanceof NotExpr
		and target_35.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_329
		and target_35.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=verror_349
		and target_35.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_44
}

*/
/*predicate func_36(Variable vret_329, Variable verror_349, NotExpr target_9, ExprStmt target_40, NotExpr target_51, VariableAccess target_36) {
		target_36.getTarget()=verror_349
		and target_36.getParent().(AssignExpr).getRValue() = target_36
		and target_36.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_329
		and target_9.getOperand().(VariableAccess).getLocation().isBefore(target_36.getParent().(AssignExpr).getLValue().(VariableAccess).getLocation())
		and target_36.getParent().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_40.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation())
		and target_51.getOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_36.getLocation())
}

*/
predicate func_37(Variable vbuf_345, Variable verror_349, ExprStmt target_37) {
		target_37.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_349
		and target_37.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="confirm"
		and target_37.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const pipe_buf_operations *")
		and target_37.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("pipe_inode_info *")
		and target_37.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vbuf_345
}

predicate func_40(Variable vret_329, Variable vchars_348, ExprStmt target_40) {
		target_40.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vret_329
		and target_40.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getTarget()=vchars_348
}

predicate func_41(Variable vchars_348, ExprStmt target_41) {
		target_41.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vchars_348
		and target_41.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("size_t")
}

predicate func_43(Variable vret_329, Variable verror_349, ExprStmt target_43) {
		target_43.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_329
		and target_43.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=verror_349
}

predicate func_44(Variable verror_349, FunctionCall target_44) {
		target_44.getTarget().hasName("__builtin_expect")
		and target_44.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verror_349
		and target_44.getArgument(1).(Literal).getValue()="0"
}

predicate func_45(Function func, ExprStmt target_45) {
		target_45.getExpr() instanceof AssignExpr
		and target_45.getEnclosingFunction() = func
}

predicate func_48(Variable vbufs_342, BlockStmt target_52, VariableAccess target_48) {
		target_48.getTarget()=vbufs_342
		and target_48.getParent().(IfStmt).getThen()=target_52
}

predicate func_50(Function func, BlockStmt target_50) {
		target_50.getStmt(0) instanceof ExprStmt
		and target_50.getStmt(1) instanceof GotoStmt
		and target_50.getEnclosingFunction() = func
}

predicate func_51(Variable verror_349, NotExpr target_51) {
		target_51.getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verror_349
}

predicate func_52(Variable vbuf_345, Variable vchars_348, Variable verror_349, BlockStmt target_52) {
		target_52.getStmt(6).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vchars_348
		and target_52.getStmt(6).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_52.getStmt(6).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vchars_348
		and target_52.getStmt(6).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_52.getStmt(7).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_349
		and target_52.getStmt(7).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="confirm"
		and target_52.getStmt(7).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const pipe_buf_operations *")
		and target_52.getStmt(7).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("pipe_inode_info *")
		and target_52.getStmt(7).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vbuf_345
}

from Function func, Variable vret_329, Variable viov_330, Variable vbufs_342, Variable vbuf_345, Variable vaddr_347, Variable vchars_348, Variable verror_349, Variable vatomic_349, Variable v__cond_369, FunctionCall target_0, NotExpr target_9, PointerFieldAccess target_10, PointerFieldAccess target_11, VariableAccess target_12, VariableAccess target_13, VariableAccess target_14, BreakStmt target_15, AssignExpr target_18, VariableAccess target_19, AssignExpr target_20, ExprStmt target_21, AssignExpr target_22, IfStmt target_23, IfStmt target_30, ExprStmt target_37, ExprStmt target_40, ExprStmt target_41, ExprStmt target_43, FunctionCall target_44, ExprStmt target_45, VariableAccess target_48, BlockStmt target_50, NotExpr target_51, BlockStmt target_52
where
func_0(func, target_0)
and not func_2(func)
and not func_6(vbuf_345, vchars_348, target_37, target_40)
and not func_7(vchars_348, verror_349, target_41)
and not func_8(vret_329)
and func_9(vret_329, target_43, target_9)
and func_10(vbuf_345, target_10)
and func_11(vbuf_345, target_11)
and func_12(vchars_348, target_12)
and func_13(viov_330, target_13)
and func_14(vchars_348, target_14)
and func_15(target_44, func, target_15)
and func_18(viov_330, vchars_348, vatomic_349, target_18)
and func_19(vatomic_349, target_45, target_19)
and func_20(vbuf_345, vaddr_347, target_20)
and func_21(vbuf_345, vaddr_347, target_19, target_21)
and func_22(viov_330, vbuf_345, vaddr_347, vchars_348, verror_349, vatomic_349, target_22)
and func_23(vbuf_345, vaddr_347, vatomic_349, v__cond_369, target_48, target_23)
and func_30(vret_329, verror_349, vatomic_349, target_48, target_30)
and func_37(vbuf_345, verror_349, target_37)
and func_40(vret_329, vchars_348, target_40)
and func_41(vchars_348, target_41)
and func_43(vret_329, verror_349, target_43)
and func_44(verror_349, target_44)
and func_45(func, target_45)
and func_48(vbufs_342, target_52, target_48)
and func_50(func, target_50)
and func_51(verror_349, target_51)
and func_52(vbuf_345, vchars_348, verror_349, target_52)
and vret_329.getType().hasName("ssize_t")
and viov_330.getType().hasName("iovec *")
and vbufs_342.getType().hasName("int")
and vbuf_345.getType().hasName("pipe_buffer *")
and vaddr_347.getType().hasName("void *")
and vchars_348.getType().hasName("size_t")
and verror_349.getType().hasName("int")
and vatomic_349.getType().hasName("int")
and v__cond_369.getType().hasName("bool")
and vret_329.(LocalVariable).getFunction() = func
and viov_330.(LocalVariable).getFunction() = func
and vbufs_342.(LocalVariable).getFunction() = func
and vbuf_345.(LocalVariable).getFunction() = func
and vaddr_347.(LocalVariable).getFunction() = func
and vchars_348.(LocalVariable).getFunction() = func
and verror_349.(LocalVariable).getFunction() = func
and vatomic_349.(LocalVariable).getFunction() = func
and v__cond_369.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
