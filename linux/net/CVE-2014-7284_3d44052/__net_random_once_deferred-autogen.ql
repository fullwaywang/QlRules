/**
 * @name linux-3d4405226d27b3a215e4d03cfa51f536244e5de7-__net_random_once_deferred
 * @id cpp/linux/3d4405226d27b3a215e4d03cfa51f536244e5de7/--net-random-once-deferred
 * @description linux-3d4405226d27b3a215e4d03cfa51f536244e5de7-net/core/utils.c-__net_random_once_deferred CVE-2014-7284
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vwork_349, FunctionCall target_0) {
		target_0.getTarget().hasName("static_key_slow_inc")
		and not target_0.getTarget().hasName("static_key_slow_dec")
		and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="key"
		and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_349
}

predicate func_1(Function func) {
	exists(DoStmt target_1 |
		target_1.getCondition() instanceof Literal
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand() instanceof NotExpr
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getCondition() instanceof Literal
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2).(SizeofTypeOperator).getType() instanceof LongType
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2).(SizeofTypeOperator).getValue()="12"
		and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_unreachable")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1)
}

/*predicate func_2(ExprStmt target_5, Function func) {
	exists(FunctionCall target_2 |
		target_2.getTarget().hasName("__builtin_expect")
		and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand() instanceof NotExpr
		and target_2.getArgument(1) instanceof Literal
		and target_2.getParent().(IfStmt).getThen()=target_5
		and target_2.getEnclosingFunction() = func)
}

*/
/*predicate func_3(NotExpr target_4, Function func) {
	exists(DoStmt target_3 |
		target_3.getCondition() instanceof Literal
		and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
		and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
		and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2).(SizeofTypeOperator).getType() instanceof LongType
		and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2).(SizeofTypeOperator).getValue()="12"
		and target_3.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_unreachable")
		and target_3.getParent().(IfStmt).getCondition()=target_4
		and target_3.getEnclosingFunction() = func)
}

*/
predicate func_4(Variable vwork_349, ExprStmt target_5, NotExpr target_4) {
		target_4.getOperand().(FunctionCall).getTarget().hasName("static_key_enabled")
		and target_4.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="key"
		and target_4.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_349
		and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Function func, ExprStmt target_5) {
		target_5.getExpr() instanceof FunctionCall
		and target_5.getEnclosingFunction() = func
}

from Function func, Variable vwork_349, FunctionCall target_0, NotExpr target_4, ExprStmt target_5
where
func_0(vwork_349, target_0)
and not func_1(func)
and func_4(vwork_349, target_5, target_4)
and func_5(func, target_5)
and vwork_349.getType().hasName("__net_random_once_work *")
and vwork_349.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
