/**
 * @name linux-5fdb55c1ac9585eb23bb2541d5819224429e103d-binder_transaction_buffer_release
 * @id cpp/linux/5fdb55c1ac9585eb23bb2541d5819224429e103d/binder-transaction-buffer-release
 * @description linux-5fdb55c1ac9585eb23bb2541d5819224429e103d-drivers/android/binder.c-binder_transaction_buffer_release CVE-2021-47360
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(VariableAccess).getType().hasName("binder_thread *")
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="looper_need_return"
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("binder_thread *")
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vfd_2005, NotExpr target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("binder_deferred_fd_close")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfd_2005
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(ExprStmt target_1, Function func, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getParent().(IfStmt).getThen()=target_1
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vfd_2005, ExprStmt target_1, NotExpr target_2
where
not func_0(target_2, func)
and func_1(vfd_2005, target_2, target_1)
and func_2(target_1, func, target_2)
and vfd_2005.getType().hasName("u32")
and vfd_2005.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
