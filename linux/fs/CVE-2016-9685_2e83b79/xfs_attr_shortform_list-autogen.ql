/**
 * @name linux-2e83b79b2d6c78bf1b4aa227938a214dcbddc83f-xfs_attr_shortform_list
 * @id cpp/linux/2e83b79b2d6c78bf1b4aa227938a214dcbddc83f/xfs-attr-shortform-list
 * @description linux-2e83b79b2d6c78bf1b4aa227938a214dcbddc83f-fs/xfs/xfs_attr_list.c-xfs_attr_shortform_list CVE-2016-9685
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsbuf_72, VariableAccess target_2, ExprStmt target_3, ExprStmt target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kmem_free")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbuf_72
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable verror_77, VariableAccess target_2, ReturnStmt target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=verror_77
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable verror_77, ReturnStmt target_1, VariableAccess target_2) {
	target_2.getTarget()=verror_77
	and target_2.getParent().(IfStmt).getThen()=target_1
}

predicate func_3(Variable vsbuf_72, EqualityOperation target_5, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("kmem_free")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbuf_72
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vsbuf_72, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("kmem_free")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbuf_72
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Function func, EqualityOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getEnclosingFunction() = func
}

from Function func, Variable vsbuf_72, Variable verror_77, ReturnStmt target_1, VariableAccess target_2, ExprStmt target_3, ExprStmt target_4, EqualityOperation target_5
where
not func_0(vsbuf_72, target_2, target_3, target_4)
and func_1(verror_77, target_2, target_1)
and func_2(verror_77, target_1, target_2)
and func_3(vsbuf_72, target_5, target_3)
and func_4(vsbuf_72, func, target_4)
and func_5(func, target_5)
and vsbuf_72.getType().hasName("xfs_attr_sf_sort_t *")
and verror_77.getType().hasName("int")
and vsbuf_72.(LocalVariable).getFunction() = func
and verror_77.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
