commit 16c8d2df7ec0eed31b7d3b61cb13206a7fb930cc
Author: Jens Axboe <axboe@kernel.dk>
Date:   Sun Sep 12 06:45:07 2021 -0600

    io_uring: ensure symmetry in handling iter types in loop_rw_iter()
    
    When setting up the next segment, we check what type the iter is and
    handle it accordingly. However, when incrementing and processed amount
    we do not, and both iter advance and addr/len are adjusted, regardless
    of type. Split the increment side just like we do on the setup side.
    
    Fixes: 4017eb91a9e7 ("io_uring: make loop_rw_iter() use original user supplied pointers")
    Cc: stable@vger.kernel.org
    Reported-by: Valentina Palmiotti <vpalmiotti@gmail.com>
    Reviewed-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

diff --git a/fs/io_uring.c b/fs/io_uring.c
index 16fb743..66a7414 100644
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@ -3263,12 +3263,15 @@ static ssize_t loop_rw_iter(int rw, struct io_kiocb *req, struct iov_iter *iter)
 				ret = nr;
 			break;
 		}
+		if (!iov_iter_is_bvec(iter)) {
+			iov_iter_advance(iter, nr);
+		} else {
+			req->rw.len -= nr;
+			req->rw.addr += nr;
+		}
 		ret += nr;
 		if (nr != iovec.iov_len)
 			break;
-		req->rw.len -= nr;
-		req->rw.addr += nr;
-		iov_iter_advance(iter, nr);
 	}
 
 	return ret;
