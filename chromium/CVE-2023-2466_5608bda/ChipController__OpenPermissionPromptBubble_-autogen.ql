/**
 * @name chromium-5608bda8ba25f912561e81cdc35bc7f3796682fb-ChipController__OpenPermissionPromptBubble_
 * @id cpp/chromium/5608bda8ba25f912561e81cdc35bc7f3796682fb/chipcontrolleropenpermissionpromptbubble
 * @description chromium-5608bda8ba25f912561e81cdc35bc7f3796682fb-chrome/browser/ui/views/permissions/permission_prompt_bubble.cc-ChipController__OpenPermissionPromptBubble_ CVE-2023-2466
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("DCheck")
				and obj_2.getArgument(0).(StringLiteral).getValue()="../../chrome/browser/ui/views/permissions/chip_controller.cc"
				and obj_2.getArgument(2).(StringLiteral).getValue()="!IsBubbleShowing()"
			)
		)
	)
	and target_0.getValue()="476"
	and not target_0.getValue()="478"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(ExprStmt target_2, Function func) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="disallowed_custom_cursors_scope_"
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getArgument(0) |
			exists(FunctionCall obj_3 | obj_3=obj_2.getQualifier() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getQualifier() |
					obj_4.getTarget().hasName("value")
					and obj_4.getQualifier().(FunctionCall).getTarget().hasName("GetDelegate")
				)
				and obj_3.getTarget().hasName("GetAssociatedWebContents")
			)
			and obj_2.getTarget().hasName("CreateDisallowCustomCursorScope")
		)
		and obj_0.getTarget().hasName("operator=")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
)
}

predicate func_2(Function func, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("ResetTimers")
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, Literal target_0, ExprStmt target_2
where
func_0(func, target_0)
and not func_1(target_2, func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
