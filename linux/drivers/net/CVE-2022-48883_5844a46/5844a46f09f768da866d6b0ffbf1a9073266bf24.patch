commit 5844a46f09f768da866d6b0ffbf1a9073266bf24
Author: Dragos Tatulea <dtatulea@nvidia.com>
Date:   Fri Nov 25 17:51:19 2022 +0200

    net/mlx5e: IPoIB, Block PKEY interfaces with less rx queues than parent
    
    [ Upstream commit 31c70bfe58ef09fe36327ddcced9143a16e9e83d ]
    
    A user is able to configure an arbitrary number of rx queues when
    creating an interface via netlink. This doesn't work for child PKEY
    interfaces because the child interface uses the parent receive channels.
    
    Although the child shares the parent's receive channels, the number of
    rx queues is important for the channel_stats array: the parent's rx
    channel index is used to access the child's channel_stats. So the array
    has to be at least as large as the parent's rx queue size for the
    counting to work correctly and to prevent out of bound accesses.
    
    This patch checks for the mentioned scenario and returns an error when
    trying to create the interface. The error is propagated to the user.
    
    Fixes: be98737a4faa ("net/mlx5e: Use dynamic per-channel allocations in stats")
    Signed-off-by: Dragos Tatulea <dtatulea@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c
index 3d31c59e69d4..0cf4eaf852d2 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c
@@ -168,6 +168,15 @@ static int mlx5i_pkey_dev_init(struct net_device *dev)
 		return -EINVAL;
 	}
 
+	if (dev->num_rx_queues < parent_dev->real_num_rx_queues) {
+		mlx5_core_warn(priv->mdev,
+			       "failed to create child device with rx queues [%d] less than parent's [%d]\n",
+			       dev->num_rx_queues,
+			       parent_dev->real_num_rx_queues);
+		mlx5i_parent_put(dev);
+		return -EINVAL;
+	}
+
 	/* Get QPN to netdevice hash table from parent */
 	parent_ipriv = netdev_priv(parent_dev);
 	ipriv->qpn_htbl = parent_ipriv->qpn_htbl;
