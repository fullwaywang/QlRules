/**
 * @name linux-60ff5b2f547af3828aebafd54daded44cfb0807a-key_create_or_update
 * @id cpp/linux/60ff5b2f547af3828aebafd54daded44cfb0807a/key-create-or-update
 * @description linux-60ff5b2f547af3828aebafd54daded44cfb0807a-security/keys/key.c-key_create_or_update CVE-2017-15299
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vkey_819, Variable vkey_ref_820, ExprStmt target_2, ExprStmt target_3, ReturnStmt target_4, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkey_819
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("key_ref_to_ptr")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_ref_820
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_4.getExpr().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vkey_819, Variable vkey_ref_820, Variable vret_821, ExprStmt target_2, ExprStmt target_5, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_1.getCondition().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_1.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(Literal).getValue()="3"
	and target_1.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_819
	and target_1.getCondition().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_1.getCondition().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(Literal).getValue()="3"
	and target_1.getCondition().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getCondition().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_819
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_821
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("wait_for_key_construction")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_819
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vret_821
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("key_ref_put")
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_ref_820
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkey_ref_820
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(2).(GotoStmt).getName() ="error_free_prep"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable vkey_ref_820, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkey_ref_820
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__key_update")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_ref_820
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("key_preparsed_payload")
}

predicate func_3(Variable vkey_819, Variable vkey_ref_820, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkey_ref_820
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("make_key_ref")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_819
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("is_key_possessed")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("key_ref_t")
}

predicate func_4(Variable vkey_ref_820, ReturnStmt target_4) {
	target_4.getExpr().(VariableAccess).getTarget()=vkey_ref_820
}

predicate func_5(Variable vkey_ref_820, Variable vret_821, RelationalOperation target_6, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkey_ref_820
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vret_821
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_6(Variable vret_821, BlockStmt target_7, RelationalOperation target_6) {
	 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
	and target_6.getLesserOperand().(VariableAccess).getTarget()=vret_821
	and target_6.getGreaterOperand().(Literal).getValue()="0"
	and target_6.getParent().(IfStmt).getThen()=target_7
}

predicate func_7(Variable vkey_819, Variable vkey_ref_820, Variable vret_821, BlockStmt target_7) {
	target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("key_put")
	and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_819
	and target_7.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkey_ref_820
	and target_7.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_7.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vret_821
}

from Function func, Variable vkey_819, Variable vkey_ref_820, Variable vret_821, ExprStmt target_2, ExprStmt target_3, ReturnStmt target_4, ExprStmt target_5, RelationalOperation target_6, BlockStmt target_7
where
not func_0(vkey_819, vkey_ref_820, target_2, target_3, target_4, func)
and not func_1(vkey_819, vkey_ref_820, vret_821, target_2, target_5, func)
and func_2(vkey_ref_820, target_2)
and func_3(vkey_819, vkey_ref_820, target_3)
and func_4(vkey_ref_820, target_4)
and func_5(vkey_ref_820, vret_821, target_6, target_5)
and func_6(vret_821, target_7, target_6)
and func_7(vkey_819, vkey_ref_820, vret_821, target_7)
and vkey_819.getType().hasName("key *")
and vkey_ref_820.getType().hasName("key_ref_t")
and vret_821.getType().hasName("int")
and vkey_819.(LocalVariable).getFunction() = func
and vkey_ref_820.(LocalVariable).getFunction() = func
and vret_821.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
