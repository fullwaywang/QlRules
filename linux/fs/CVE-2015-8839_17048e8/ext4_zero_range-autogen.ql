/**
 * @name linux-17048e8a083fec7ad841d88ef0812707fbc7e39f-ext4_zero_range
 * @id cpp/linux/17048e8a083fec7ad841d88ef0812707fbc7e39f/ext4-zero-range
 * @description linux-17048e8a083fec7ad841d88ef0812707fbc7e39f-fs/ext4/extents.c-ext4_zero_range CVE-2015-8839
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinode_4763, RelationalOperation target_2, ExprStmt target_0) {
		target_0.getExpr().(FunctionCall).getTarget().hasName("ext4_inode_block_unlocked_dio")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_4763
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_1(Variable vinode_4763, RelationalOperation target_2, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("inode_dio_wait")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_4763
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, RelationalOperation target_2) {
		 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
		and target_2.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_2.getLesserOperand().(Literal).getValue()="0"
		and target_2.getEnclosingFunction() = func
}

from Function func, Variable vinode_4763, ExprStmt target_0, ExprStmt target_1, RelationalOperation target_2
where
func_0(vinode_4763, target_2, target_0)
and func_1(vinode_4763, target_2, target_1)
and func_2(func, target_2)
and vinode_4763.getType().hasName("inode *")
and vinode_4763.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
