/**
 * @name linux-c802d759623acbd6e1ee9fbdabae89159a513913-nr_recvmsg
 * @id cpp/linux/c802d759623acbd6e1ee9fbdabae89159a513913/nr-recvmsg
 * @description linux-c802d759623acbd6e1ee9fbdabae89159a513913-net/netrom/af_netrom.c-nr_recvmsg CVE-2013-3232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="8"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vsax_1138, ExprStmt target_2, SizeofExprOperator target_0) {
	exists(PointerDereferenceExpr target_1 |
		target_1.getOperand().(VariableAccess).getTarget()=vsax_1138
		and target_1.getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("memset")
		and target_1.getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsax_1138
		and target_1.getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_1.getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof SizeofExprOperator
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable vsax_1138, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("memset")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsax_1138
		and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_2.getExpr().(FunctionCall).getArgument(2) instanceof SizeofExprOperator
}

from Function func, Variable vsax_1138, SizeofExprOperator target_0, ExprStmt target_2
where
func_0(func, target_0)
and not func_1(vsax_1138, target_2, target_0)
and func_2(vsax_1138, target_2)
and vsax_1138.getType().hasName("sockaddr_ax25 *")
and vsax_1138.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
