/**
 * @name linux-ed129ec9057f89d615ba0c81a4984a90345a1684-kvm_vcpu_reset
 * @id cpp/linux/ed129ec9057f89d615ba0c81a4984a90345a1684/kvm-vcpu-reset
 * @description linux-ed129ec9057f89d615ba0c81a4984a90345a1684-kvm_vcpu_reset CVE-2022-3344
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

/*predicate func_0(Function func, FunctionDeclarationEntry target_0) {
		target_0.getType() instanceof VoidType
		and target_0.getEnclosingFunction() = func
}

*/
predicate func_1(Function func, FunctionCall target_1) {
		target_1.getTarget().hasName("__compiletime_assert_3020")
		and not target_1.getTarget().hasName("__compiletime_assert_3022")
		and target_1.getParent().(ExprStmt).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_make_request")
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable v__SCK__kvm_x86_vcpu_reset, Initializer target_2) {
		target_2.getExpr().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__SCK__kvm_x86_vcpu_reset
}

predicate func_3(Variable v__SCK__kvm_x86_set_cr0, Initializer target_3) {
		target_3.getExpr().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__SCK__kvm_x86_set_cr0
}

predicate func_4(Variable v__SCK__kvm_x86_set_cr4, Initializer target_4) {
		target_4.getExpr().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__SCK__kvm_x86_set_cr4
}

predicate func_5(Variable v__SCK__kvm_x86_set_efer, Initializer target_5) {
		target_5.getExpr().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__SCK__kvm_x86_set_efer
}

predicate func_6(Variable v__SCK__kvm_x86_update_exception_bitmap, Initializer target_6) {
		target_6.getExpr().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__SCK__kvm_x86_update_exception_bitmap
}

/*predicate func_7(Function func, FunctionDeclarationEntry target_7) {
		target_7.getType() instanceof VoidType
		and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(Function func, FunctionCall target_8) {
		target_8.getTarget().hasName("__compiletime_assert_3026")
		and not target_8.getTarget().hasName("__compiletime_assert_3028")
		and target_8.getParent().(ExprStmt).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_make_request")
		and target_8.getEnclosingFunction() = func
}

/*predicate func_9(Function func, FunctionDeclarationEntry target_9) {
		target_9.getType() instanceof VoidType
		and target_9.getEnclosingFunction() = func
}

*/
predicate func_10(Function func, FunctionCall target_10) {
		target_10.getTarget().hasName("__compiletime_assert_3027")
		and not target_10.getTarget().hasName("__compiletime_assert_3029")
		and target_10.getParent().(ExprStmt).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_make_request")
		and target_10.getEnclosingFunction() = func
}

predicate func_11(Parameter vvcpu_11990, NotExpr target_13, ExprStmt target_14, Function func) {
	exists(IfStmt target_11 |
		target_11.getCondition().(FunctionCall).getTarget().hasName("is_guest_mode")
		and target_11.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_11990
		and target_11.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_leave_nested")
		and target_11.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_11990
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
		and target_13.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_11.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_11.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_13(Parameter vvcpu_11990, NotExpr target_13) {
		target_13.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bool")
		and target_13.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_13.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(FunctionCall).getTarget().hasName("kvm_read_cr3")
		and target_13.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_11990
		and target_13.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(FunctionCall).getTarget().hasName("kvm_read_cr4")
		and target_13.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_11990
}

predicate func_14(Parameter vvcpu_11990, ExprStmt target_14) {
		target_14.getExpr().(FunctionCall).getTarget().hasName("kvm_lapic_reset")
		and target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_11990
		and target_14.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("bool")
}

from Function func, Parameter vvcpu_11990, Variable v__SCK__kvm_x86_vcpu_reset, Variable v__SCK__kvm_x86_set_cr0, Variable v__SCK__kvm_x86_set_cr4, Variable v__SCK__kvm_x86_set_efer, Variable v__SCK__kvm_x86_update_exception_bitmap, FunctionCall target_1, Initializer target_2, Initializer target_3, Initializer target_4, Initializer target_5, Initializer target_6, FunctionCall target_8, FunctionCall target_10, NotExpr target_13, ExprStmt target_14
where
func_1(func, target_1)
and func_2(v__SCK__kvm_x86_vcpu_reset, target_2)
and func_3(v__SCK__kvm_x86_set_cr0, target_3)
and func_4(v__SCK__kvm_x86_set_cr4, target_4)
and func_5(v__SCK__kvm_x86_set_efer, target_5)
and func_6(v__SCK__kvm_x86_update_exception_bitmap, target_6)
and func_8(func, target_8)
and func_10(func, target_10)
and not func_11(vvcpu_11990, target_13, target_14, func)
and func_13(vvcpu_11990, target_13)
and func_14(vvcpu_11990, target_14)
and vvcpu_11990.getType().hasName("kvm_vcpu *")
and v__SCK__kvm_x86_vcpu_reset.getType().hasName("static_call_key")
and v__SCK__kvm_x86_set_cr0.getType().hasName("static_call_key")
and v__SCK__kvm_x86_set_cr4.getType().hasName("static_call_key")
and v__SCK__kvm_x86_set_efer.getType().hasName("static_call_key")
and v__SCK__kvm_x86_update_exception_bitmap.getType().hasName("static_call_key")
and vvcpu_11990.getFunction() = func
and not v__SCK__kvm_x86_vcpu_reset.getParentScope+() = func
and not v__SCK__kvm_x86_set_cr0.getParentScope+() = func
and not v__SCK__kvm_x86_set_cr4.getParentScope+() = func
and not v__SCK__kvm_x86_set_efer.getParentScope+() = func
and not v__SCK__kvm_x86_update_exception_bitmap.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
