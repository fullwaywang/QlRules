/**
 * @name linux-a1480dcc3c706e309a88884723446f2e84fedd5b-do_umount
 * @id cpp/linux/a1480dcc3c706e309a88884723446f2e84fedd5b/do-umount
 * @description linux-a1480dcc3c706e309a88884723446f2e84fedd5b-fs/namespace.c-do_umount CVE-2014-7975
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalAndExpr target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("capable")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(Literal).getValue()="21"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func, LogicalAndExpr target_1) {
	target_1.getLeftOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mnt"
	and target_1.getLeftOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mount *")
	and target_1.getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="mnt"
	and target_1.getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="root"
	and target_1.getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="fs"
	and target_1.getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_1.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
	and target_1.getEnclosingFunction() = func
}

from Function func, LogicalAndExpr target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
