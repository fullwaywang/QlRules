/**
 * @name linux-16380f52b72166d6a33b508cc2509716f436253f-try_get_folio
 * @id cpp/linux/16380f52b72166d6a33b508cc2509716f436253f/try-get-folio
 * @description linux-16380f52b72166d6a33b508cc2509716f436253f-mm/gup.c-try_get_folio CVE-2024-42251
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrefs_71, Variable vfolio_73, FunctionCall target_0) {
	exists(NotExpr obj_0 | obj_0=target_0.getParent() |
		exists(NotExpr obj_1 | obj_1=obj_0.getParent() |
			exists(NotExpr obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getParent() |
					exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
						exists(FunctionCall obj_5 | obj_5=obj_4.getCondition() |
							obj_5.getTarget().hasName("__builtin_expect")
							and obj_5.getArgument(1).(Literal).getValue()="0"
						)
					)
				)
			)
		)
	)
	and target_0.getTarget().hasName("folio_ref_try_add_rcu")
	and not target_0.getTarget().hasName("folio_ref_try_add")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vfolio_73
	and target_0.getArgument(1).(VariableAccess).getTarget()=vrefs_71
}

from Function func, Parameter vrefs_71, Variable vfolio_73, FunctionCall target_0
where
func_0(vrefs_71, vfolio_73, target_0)
and vrefs_71.getType().hasName("int")
and vfolio_73.getType().hasName("folio *")
and vrefs_71.getFunction() = func
and vfolio_73.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
