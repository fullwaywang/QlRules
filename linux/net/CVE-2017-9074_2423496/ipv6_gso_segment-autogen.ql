/**
 * @name linux-2423496af35d94a87156b063ea5cedffc10a70a1-ipv6_gso_segment
 * @id cpp/linux/2423496af35d94a87156b063ea5cedffc10a70a1/ipv6-gso-segment
 * @description linux-2423496af35d94a87156b063ea5cedffc10a70a1-net/ipv6/ip6_offload.c-ipv6_gso_segment CVE-2017-9074
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vunfrag_ip6hlen_66, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vunfrag_ip6hlen_66
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vunfrag_ip6hlen_66
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vudpfrag_70, VariableAccess target_1) {
	target_1.getTarget()=vudpfrag_70
}

predicate func_2(Variable vunfrag_ip6hlen_66, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vunfrag_ip6hlen_66
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ip6_find_1stfragopt")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("u8 *")
}

predicate func_3(Variable vunfrag_ip6hlen_66, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("frag_hdr *")
	and target_3.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("ipv6hdr *")
	and target_3.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vunfrag_ip6hlen_66
}

from Function func, Variable vunfrag_ip6hlen_66, Variable vudpfrag_70, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vunfrag_ip6hlen_66, target_1, target_2, target_3)
and func_1(vudpfrag_70, target_1)
and func_2(vunfrag_ip6hlen_66, target_2)
and func_3(vunfrag_ip6hlen_66, target_3)
and vunfrag_ip6hlen_66.getType().hasName("unsigned int")
and vudpfrag_70.getType().hasName("bool")
and vunfrag_ip6hlen_66.(LocalVariable).getFunction() = func
and vudpfrag_70.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
