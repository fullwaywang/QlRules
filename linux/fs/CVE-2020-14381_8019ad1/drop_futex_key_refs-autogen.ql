/**
 * @name linux-8019ad13ef7f64be44d4f892af9c840179009254-drop_futex_key_refs
 * @id cpp/linux/8019ad13ef7f64be44d4f892af9c840179009254/drop-futex-key-refs
 * @description linux-8019ad13ef7f64be44d4f892af9c840179009254-kernel/futex.c-drop_futex_key_refs CVE-2020-14381
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkey_453, ValueFieldAccess target_4) {
	exists(ValueFieldAccess target_0 |
		target_0.getTarget().getName()="(unknown field)"
		and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="private"
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_453
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vkey_453, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="private"
		and target_1.getQualifier().(VariableAccess).getTarget()=vkey_453
		and target_1.getParent().(ValueFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mmdrop")
		and target_1.getParent().(ValueFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="mm"
}

predicate func_2(Parameter vkey_453, FunctionCall target_2) {
		target_2.getTarget().hasName("iput")
		and target_2.getArgument(0).(ValueFieldAccess).getTarget().getName()="inode"
		and target_2.getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="shared"
		and target_2.getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_453
}

predicate func_3(Parameter vkey_453, BitwiseAndExpr target_5, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("mmdrop")
		and target_3.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="mm"
		and target_3.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="private"
		and target_3.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_453
		and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_5
}

predicate func_4(Parameter vkey_453, ValueFieldAccess target_4) {
		target_4.getTarget().getName()="inode"
		and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="shared"
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_453
}

predicate func_5(Parameter vkey_453, BitwiseAndExpr target_5) {
		target_5.getLeftOperand().(ValueFieldAccess).getTarget().getName()="offset"
		and target_5.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="both"
		and target_5.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_453
		and target_5.getRightOperand().(BitwiseOrExpr).getValue()="3"
}

from Function func, Parameter vkey_453, PointerFieldAccess target_1, FunctionCall target_2, ExprStmt target_3, ValueFieldAccess target_4, BitwiseAndExpr target_5
where
not func_0(vkey_453, target_4)
and func_1(vkey_453, target_1)
and func_2(vkey_453, target_2)
and func_3(vkey_453, target_5, target_3)
and func_4(vkey_453, target_4)
and func_5(vkey_453, target_5)
and vkey_453.getType().hasName("futex_key *")
and vkey_453.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
