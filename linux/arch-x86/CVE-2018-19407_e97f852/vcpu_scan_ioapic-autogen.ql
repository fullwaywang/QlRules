/**
 * @name linux-e97f852fd4561e77721bb9a4e0ea9d98305b1e93-vcpu_scan_ioapic
 * @id cpp/linux/e97f852fd4561e77721bb9a4e0ea9d98305b1e93/vcpu-scan-ioapic
 * @description linux-e97f852fd4561e77721bb9a4e0ea9d98305b1e93-arch/x86/kvm/x86.c-vcpu_scan_ioapic CVE-2018-19407
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvcpu_7446, FunctionCall target_2, ExprStmt target_3, ExprStmt target_1) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("ioapic_in_kernel")
	and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="kvm"
	and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_7446
	and target_0.getThen() instanceof ExprStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(VariableCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_7446, FunctionCall target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("kvm_ioapic_scan_entry")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7446
	and target_1.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="ioapic_handled_vectors"
	and target_1.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_1.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_7446
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Parameter vvcpu_7446, FunctionCall target_2) {
	target_2.getTarget().hasName("irqchip_split")
	and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="kvm"
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_7446
}

predicate func_3(Parameter vvcpu_7446, ExprStmt target_3) {
	target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="sync_pir_to_irr"
	and target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("kvm_x86_ops *")
	and target_3.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7446
}

from Function func, Parameter vvcpu_7446, ExprStmt target_1, FunctionCall target_2, ExprStmt target_3
where
not func_0(vvcpu_7446, target_2, target_3, target_1)
and func_1(vvcpu_7446, target_2, target_1)
and func_2(vvcpu_7446, target_2)
and func_3(vvcpu_7446, target_3)
and vvcpu_7446.getType().hasName("kvm_vcpu *")
and vvcpu_7446.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
