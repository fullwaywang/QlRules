/**
 * @name chromium-5608bda8ba25f912561e81cdc35bc7f3796682fb-ChipController__RemoveBubbleObserverAndResetTimersAndChipCallbacks
 * @id cpp/chromium/5608bda8ba25f912561e81cdc35bc7f3796682fb/chipcontrollerremovebubbleobserverandresettimersandchipcallbacks
 * @description chromium-5608bda8ba25f912561e81cdc35bc7f3796682fb-chrome/browser/ui/views/permissions/chip_controller.cc-ChipController__RemoveBubbleObserverAndResetTimersAndChipCallbacks CVE-2023-2466
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(VariableAccess target_1, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="disallowed_custom_cursors_scope_"
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and obj_0.getTarget().hasName("RunAndReset")
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_3.getCondition()=target_1
		)
	)
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Variable vbubble_widget_309, BlockStmt target_2, VariableAccess target_1) {
	target_1.getTarget()=vbubble_widget_309
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vbubble_widget_309, BlockStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("RemoveObserver")
			and obj_1.getQualifier().(VariableAccess).getTarget()=vbubble_widget_309
			and obj_1.getArgument(0).(ThisExpr).getType() instanceof PointerType
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_2.getStmt(1) |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			obj_3.getTarget().hasName("Close")
			and obj_3.getQualifier().(VariableAccess).getTarget()=vbubble_widget_309
		)
	)
}

from Function func, Variable vbubble_widget_309, VariableAccess target_1, BlockStmt target_2
where
not func_0(target_1, func)
and func_1(vbubble_widget_309, target_2, target_1)
and func_2(vbubble_widget_309, target_2)
and vbubble_widget_309.getType().hasName("Widget *const")
and vbubble_widget_309.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
