/**
 * @name linux-90f62cf30a78721641e08737bda787552428061e-audit_netlink_ok
 * @id cpp/linux/90f62cf30a78721641e08737bda787552428061e/audit-netlink-ok
 * @description linux-90f62cf30a78721641e08737bda787552428061e-kernel/audit.c-audit_netlink_ok CVE-2014-0181
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_4, Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("capable")
	and not target_0.getTarget().hasName("netlink_capable")
	and target_0.getArgument(0).(Literal).getValue()="30"
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_4
	and target_0.getEnclosingFunction() = func
}

predicate func_1(ExprStmt target_5, Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("capable")
	and not target_1.getTarget().hasName("netlink_capable")
	and target_1.getArgument(0).(Literal).getValue()="29"
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_5
	and target_1.getEnclosingFunction() = func
}

predicate func_4(NotExpr target_6, Function func, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_4.getParent().(IfStmt).getCondition()=target_6
	and target_4.getEnclosingFunction() = func
}

predicate func_5(NotExpr target_7, Function func, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_5.getParent().(IfStmt).getCondition()=target_7
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, NotExpr target_6) {
	target_6.getOperand() instanceof FunctionCall
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, NotExpr target_7) {
	target_7.getOperand() instanceof FunctionCall
	and target_7.getEnclosingFunction() = func
}

from Function func, FunctionCall target_0, FunctionCall target_1, ExprStmt target_4, ExprStmt target_5, NotExpr target_6, NotExpr target_7
where
func_0(target_4, func, target_0)
and func_1(target_5, func, target_1)
and func_4(target_6, func, target_4)
and func_5(target_7, func, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
