/**
 * @name openssl-445598b35e16090b676bb168807da06518658b34-dtls1_reassemble_fragment
 * @id cpp/openssl/445598b35e16090b676bb168807da06518658b34/dtls1-reassemble-fragment
 * @description openssl-445598b35e16090b676bb168807da06518658b34-ssl/d1_both.c-dtls1_reassemble_fragment CVE-2014-3507
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfrag_len_602, LogicalOrExpr target_6, WhileStmt target_7, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vfrag_len_602
		and target_0.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen() instanceof ReturnStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_7.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Variable vitem_599, EqualityOperation target_8) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(VariableAccess).getTarget()=vitem_599
		and target_1.getRValue() instanceof FunctionCall
		and target_8.getAnOperand().(VariableAccess).getLocation().isBefore(target_1.getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable vitem_599, EqualityOperation target_10, LogicalAndExpr target_12) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(ConditionalExpr).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vitem_599
		and target_2.getExpr().(ConditionalExpr).getCondition().(EqualityOperation).getAnOperand() instanceof Literal
		and target_2.getExpr().(ConditionalExpr).getThen() instanceof Literal
		and target_2.getExpr().(ConditionalExpr).getElse().(CommaExpr).getLeftOperand().(FunctionCall).getTarget().hasName("OpenSSLDie")
		and target_2.getExpr().(ConditionalExpr).getElse().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(0) instanceof StringLiteral
		and target_2.getExpr().(ConditionalExpr).getElse().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(1) instanceof Literal
		and target_2.getExpr().(ConditionalExpr).getElse().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(2).(StringLiteral).getValue()="item != NULL"
		and target_2.getExpr().(ConditionalExpr).getElse().(CommaExpr).getRightOperand() instanceof Literal
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
		and target_2.getExpr().(ConditionalExpr).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_12.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation()))
}

predicate func_4(Variable vitem_599, Parameter vs_596, FunctionCall target_4) {
		target_4.getTarget().hasName("pqueue_insert")
		and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="buffered_messages"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="d1"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_596
		and target_4.getArgument(1).(VariableAccess).getTarget()=vitem_599
}

predicate func_5(Function func, ReturnStmt target_5) {
		target_5.getExpr().(UnaryMinusExpr).getValue()="-3"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vfrag_len_602, Parameter vs_596, LogicalOrExpr target_6) {
		target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="frag_off"
		and target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hm_header_st *")
		and target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vfrag_len_602
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="msg_len"
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hm_header_st *")
		and target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="msg_len"
		and target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hm_header_st *")
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getTarget().hasName("dtls1_max_handshake_message_len")
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_596
}

predicate func_7(Variable vfrag_len_602, Parameter vs_596, WhileStmt target_7) {
		target_7.getCondition().(VariableAccess).getTarget()=vfrag_len_602
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ssl_read_bytes"
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="method"
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vs_596
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(Literal).getValue()="22"
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned char[256]")
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(3).(ConditionalExpr).getElse().(VariableAccess).getTarget()=vfrag_len_602
		and target_7.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(4).(Literal).getValue()="0"
}

predicate func_8(Variable vitem_599, BlockStmt target_13, EqualityOperation target_8) {
		target_8.getAnOperand().(VariableAccess).getTarget()=vitem_599
		and target_8.getAnOperand().(Literal).getValue()="0"
		and target_8.getParent().(IfStmt).getThen()=target_13
}

predicate func_10(Variable vitem_599, BlockStmt target_14, EqualityOperation target_10) {
		target_10.getAnOperand().(VariableAccess).getTarget()=vitem_599
		and target_10.getAnOperand().(Literal).getValue()="0"
		and target_10.getParent().(IfStmt).getThen()=target_14
}

predicate func_12(Variable vitem_599, LogicalAndExpr target_12) {
		target_12.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("hm_fragment *")
		and target_12.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_12.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vitem_599
		and target_12.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
}

predicate func_13(Function func, BlockStmt target_13) {
		target_13.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_13.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
		and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vitem_599, BlockStmt target_14) {
		target_14.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_14.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="seq"
		and target_14.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hm_header_st *")
		and target_14.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vitem_599
		and target_14.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pitem_new")
		and target_14.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_14.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("hm_fragment *")
}

from Function func, Variable vitem_599, Variable vfrag_len_602, Parameter vs_596, FunctionCall target_4, ReturnStmt target_5, LogicalOrExpr target_6, WhileStmt target_7, EqualityOperation target_8, EqualityOperation target_10, LogicalAndExpr target_12, BlockStmt target_13, BlockStmt target_14
where
not func_0(vfrag_len_602, target_6, target_7, func)
and not func_1(vitem_599, target_8)
and not func_2(vitem_599, target_10, target_12)
and func_4(vitem_599, vs_596, target_4)
and func_5(func, target_5)
and func_6(vfrag_len_602, vs_596, target_6)
and func_7(vfrag_len_602, vs_596, target_7)
and func_8(vitem_599, target_13, target_8)
and func_10(vitem_599, target_14, target_10)
and func_12(vitem_599, target_12)
and func_13(func, target_13)
and func_14(vitem_599, target_14)
and vitem_599.getType().hasName("pitem *")
and vfrag_len_602.getType().hasName("unsigned long")
and vs_596.getType().hasName("SSL *")
and vitem_599.(LocalVariable).getFunction() = func
and vfrag_len_602.(LocalVariable).getFunction() = func
and vs_596.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
