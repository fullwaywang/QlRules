/**
 * @name linux-21998a351512eba4ed5969006f0c55882d995ada-spectre_v2_user_select_mitigation
 * @id cpp/linux/21998a351512eba4ed5969006f0c55882d995ada/spectre-v2-user-select-mitigation
 * @description linux-21998a351512eba4ed5969006f0c55882d995ada-arch/x86/kernel/cpu/bugs.c-spectre_v2_user_select_mitigation CVE-2020-10767
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vspectre_v2_user, Variable vmode_612, VariableAccess target_0) {
	target_0.getTarget()=vspectre_v2_user
	and target_0.getParent().(AssignExpr).getLValue() = target_0
	and target_0.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmode_612
}

predicate func_1(Variable vcmd_614, Variable vcpu_caps_set, IfStmt target_9, IfStmt target_1) {
	target_1.getCondition() instanceof ConditionalExpr
	and target_1.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_1.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="x86_capability"
	and target_1.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_1.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcpu_caps_set
	and target_1.getThen().(BlockStmt).getStmt(1).(SwitchStmt).getExpr().(VariableAccess).getTarget()=vcmd_614
	and target_1.getThen().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("static_key_enable")
	and target_1.getThen().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(8).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("static_key_enable")
	and target_1.getThen().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(10).(SwitchCase).toString() = "default: "
	and target_1.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_1.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="6Spectre V2 : mitigation: Enabling %s Indirect Branch Prediction Barrier\n"
	and target_1.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getThen().(StringLiteral).getValue()="always-on"
	and target_1.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getElse().(StringLiteral).getValue()="conditional"
	and target_1.getLocation().isBefore(target_9.getLocation())
}

predicate func_2(IfStmt target_10, Function func, IfStmt target_2) {
	target_2.getCondition() instanceof EqualityOperation
	and target_10.getLocation().isBefore(target_2.getLocation())
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vmode_612, ExprStmt target_11, ExprStmt target_12, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("spectre_v2_user_mitigation")
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmode_612
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_11.getLocation())
	and target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_4(Variable vboot_cpu_data, BlockStmt target_13, ConditionalExpr target_4) {
	target_4.getCondition().(LogicalAndExpr).getValue()="0"
	and target_4.getThen().(Literal).getValue()="1"
	and target_4.getElse().(FunctionCall).getTarget().hasName("test_bit")
	and target_4.getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="250"
	and target_4.getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="x86_capability"
	and target_4.getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
	and target_4.getParent().(IfStmt).getThen()=target_13
}

predicate func_5(Variable vspectre_v2_enabled, EqualityOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vspectre_v2_enabled
	and target_5.getParent().(IfStmt).getThen() instanceof ReturnStmt
}

predicate func_6(Variable vsmt_possible_613, Variable vboot_cpu_data, ExprStmt target_12, NotExpr target_6) {
	target_6.getOperand().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="0"
	and target_6.getOperand().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_6.getOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("test_bit")
	and target_6.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="251"
	and target_6.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="x86_capability"
	and target_6.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_6.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
	and target_6.getParent().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vsmt_possible_613
	and target_6.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_12
}

predicate func_7(Variable vspectre_v2_user_strings, Variable vmode_612, VariableAccess target_14, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_7.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="6Spectre V2 : %s\n"
	and target_7.getExpr().(FunctionCall).getArgument(1).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vspectre_v2_user_strings
	and target_7.getExpr().(FunctionCall).getArgument(1).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vmode_612
	and target_7.getParent().(IfStmt).getCondition()=target_14
}

predicate func_8(Variable vsmt_possible_613, Function func, IfStmt target_8) {
	target_8.getCondition().(VariableAccess).getTarget()=vsmt_possible_613
	and target_8.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Variable vsmt_possible_613, Variable vmode_612, IfStmt target_9) {
	target_9.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vsmt_possible_613
	and target_9.getCondition().(LogicalOrExpr).getRightOperand() instanceof NotExpr
	and target_9.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmode_612
}

predicate func_10(Variable vmode_612, IfStmt target_10) {
	target_10.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vmode_612
	and target_10.getCondition().(LogicalAndExpr).getRightOperand().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="0"
	and target_10.getCondition().(LogicalAndExpr).getRightOperand().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_10.getCondition().(LogicalAndExpr).getRightOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("test_bit")
	and target_10.getCondition().(LogicalAndExpr).getRightOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="433"
	and target_10.getCondition().(LogicalAndExpr).getRightOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="x86_capability"
	and target_10.getCondition().(LogicalAndExpr).getRightOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_10.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmode_612
}

predicate func_11(Variable vspectre_v2_user, Variable vmode_612, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vspectre_v2_user
	and target_11.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmode_612
}

predicate func_12(Variable vmode_612, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmode_612
}

predicate func_13(Variable vcpu_caps_set, BlockStmt target_13) {
	target_13.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddExpr).getValue()="245"
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="x86_capability"
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddExpr).getValue()="245"
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcpu_caps_set
}

predicate func_14(Variable vsmt_possible_613, ExprStmt target_7, VariableAccess target_14) {
	target_14.getTarget()=vsmt_possible_613
	and target_14.getParent().(IfStmt).getThen()=target_7
}

from Function func, Variable vsmt_possible_613, Variable vcmd_614, Variable vboot_cpu_data, Variable vcpu_caps_set, Variable vspectre_v2_enabled, Variable vspectre_v2_user, Variable vspectre_v2_user_strings, Variable vmode_612, VariableAccess target_0, IfStmt target_1, IfStmt target_2, ConditionalExpr target_4, EqualityOperation target_5, NotExpr target_6, ExprStmt target_7, IfStmt target_8, IfStmt target_9, IfStmt target_10, ExprStmt target_11, ExprStmt target_12, BlockStmt target_13, VariableAccess target_14
where
func_0(vspectre_v2_user, vmode_612, target_0)
and func_1(vcmd_614, vcpu_caps_set, target_9, target_1)
and func_2(target_10, func, target_2)
and not func_3(vmode_612, target_11, target_12, func)
and func_4(vboot_cpu_data, target_13, target_4)
and func_5(vspectre_v2_enabled, target_5)
and func_6(vsmt_possible_613, vboot_cpu_data, target_12, target_6)
and func_7(vspectre_v2_user_strings, vmode_612, target_14, target_7)
and func_8(vsmt_possible_613, func, target_8)
and func_9(vsmt_possible_613, vmode_612, target_9)
and func_10(vmode_612, target_10)
and func_11(vspectre_v2_user, vmode_612, target_11)
and func_12(vmode_612, target_12)
and func_13(vcpu_caps_set, target_13)
and func_14(vsmt_possible_613, target_7, target_14)
and vsmt_possible_613.getType().hasName("bool")
and vcmd_614.getType().hasName("spectre_v2_user_cmd")
and vboot_cpu_data.getType().hasName("cpuinfo_x86")
and vcpu_caps_set.getType() instanceof ArrayType
and vspectre_v2_enabled.getType().hasName("spectre_v2_mitigation")
and vspectre_v2_user.getType().hasName("spectre_v2_user_mitigation")
and vspectre_v2_user_strings.getType() instanceof ArrayType
and vmode_612.getType().hasName("spectre_v2_user_mitigation")
and vsmt_possible_613.(LocalVariable).getFunction() = func
and vcmd_614.(LocalVariable).getFunction() = func
and not vboot_cpu_data.getParentScope+() = func
and not vcpu_caps_set.getParentScope+() = func
and not vspectre_v2_enabled.getParentScope+() = func
and not vspectre_v2_user.getParentScope+() = func
and not vspectre_v2_user_strings.getParentScope+() = func
and vmode_612.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
