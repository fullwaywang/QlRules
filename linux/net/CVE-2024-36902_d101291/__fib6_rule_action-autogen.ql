/**
 * @name linux-d101291b2681e5ab938554e3e323f7a7ee33e3aa-__fib6_rule_action
 * @id cpp/linux/d101291b2681e5ab938554e3e323f7a7ee33e3aa/--fib6-rule-action
 * @description linux-d101291b2681e5ab938554e3e323f7a7ee33e3aa-net/ipv6/fib6_rules.c-__fib6_rule_action CVE-2024-36902
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getType().hasName("inet6_dev *")
	and target_0.getThen().(GotoStmt).getName() ="again"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_0.getEnclosingFunction() = func)
}

predicate func_2(Variable vrt_201, FunctionCall target_2) {
	target_2.getTarget().hasName("ip6_dst_idev")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dst"
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrt_201
	and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fib6_rule_saddr")
	and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("fib_rule *")
	and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("flowi6 *")
	and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="dev"
}

predicate func_3(Variable vrt_201, EqualityOperation target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget()=vrt_201
	and target_3.getRightOperand().(ValueFieldAccess).getTarget().getName()="ip6_null_entry"
	and target_3.getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ipv6"
	and target_3.getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net *")
}

from Function func, Variable vrt_201, FunctionCall target_2, EqualityOperation target_3
where
not func_0(target_3, func)
and func_2(vrt_201, target_2)
and func_3(vrt_201, target_3)
and vrt_201.getType().hasName("rt6_info *")
and vrt_201.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
