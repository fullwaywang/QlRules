/**
 * @name linux-2f057db2fb29bc209c103050647562e60554d3d3-ice_vsi_alloc
 * @id cpp/linux/2f057db2fb29bc209c103050647562e60554d3d3/ice-vsi-alloc
 * @description linux-2f057db2fb29bc209c103050647562e60554d3d3-drivers/net/ethernet/intel/ice/ice_lib.c-ice_vsi_alloc CVE-2024-46765
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvsi_634, ExprStmt target_1, ExprStmt target_2, ReturnStmt target_3, Function func) {
exists(DoStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="xdp_state_lock"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vvsi_634
					)
				)
				and obj_2.getTarget().hasName("__mutex_init")
				and obj_2.getArgument(1).(StringLiteral).getValue()="&vsi->xdp_state_lock"
				and obj_2.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
			)
		)
	)
	and target_0.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="sw_mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("ice_pf *")
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vvsi_634, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getLValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				obj_2.getTarget().getName()="vsi"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("ice_pf *")
			)
			and exists(PointerFieldAccess obj_3 | obj_3=obj_1.getArrayOffset() |
				obj_3.getTarget().getName()="next_vsi"
				and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("ice_pf *")
			)
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vvsi_634
	)
}

predicate func_3(Variable vvsi_634, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vvsi_634
}

from Function func, Variable vvsi_634, ExprStmt target_1, ExprStmt target_2, ReturnStmt target_3
where
not func_0(vvsi_634, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vvsi_634, target_2)
and func_3(vvsi_634, target_3)
and vvsi_634.getType().hasName("ice_vsi *")
and vvsi_634.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
