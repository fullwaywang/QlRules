/**
 * @name linux-2030043e616cab40f510299f09b636285e0a3678-j1939_session_skb_drop_old
 * @id cpp/linux/2030043e616cab40f510299f09b636285e0a3678/j1939-session-skb-drop-old
 * @description linux-2030043e616cab40f510299f09b636285e0a3678-net/can/j1939/transport.c-j1939_session_skb_drop_old CVE-2021-47232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdo_skb_317, RelationalOperation target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("skb_unref")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdo_skb_317
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vdo_skb_317, RelationalOperation target_1) {
	 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getLesserOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="offset"
	and target_1.getLesserOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("j1939_sk_buff_cb *")
	and target_1.getLesserOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_1.getLesserOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdo_skb_317
	and target_1.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_2(Variable vdo_skb_317, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("__skb_unlink")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdo_skb_317
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="skb_queue"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("j1939_session *")
}

predicate func_3(Variable vdo_skb_317, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdo_skb_317
}

from Function func, Variable vdo_skb_317, RelationalOperation target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vdo_skb_317, target_1, target_2, target_3)
and func_1(vdo_skb_317, target_1)
and func_2(vdo_skb_317, target_2)
and func_3(vdo_skb_317, target_3)
and vdo_skb_317.getType().hasName("sk_buff *")
and vdo_skb_317.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
