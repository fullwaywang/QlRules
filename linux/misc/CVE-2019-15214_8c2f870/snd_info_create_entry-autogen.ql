/**
 * @name linux-8c2f870890fd28e023b0fcf49dcee333f2c8bad7-snd_info_create_entry
 * @id cpp/linux/8c2f870890fd28e023b0fcf49dcee333f2c8bad7/snd-info-create-entry
 * @description linux-8c2f870890fd28e023b0fcf49dcee333f2c8bad7-sound/core/info.c-snd_info_create_entry CVE-2019-15214
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vparent_697, VariableAccess target_3, IfStmt target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="access"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_697
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_4.getCondition().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vparent_697, VariableAccess target_3, AddressOfExpr target_5) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="access"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_697
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vparent_697, Variable ventry_700, VariableAccess target_3, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ventry_700
		and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="children"
		and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_697
		and target_2.getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Parameter vparent_697, ExprStmt target_2, VariableAccess target_3) {
		target_3.getTarget()=vparent_697
		and target_3.getParent().(IfStmt).getThen()=target_2
}

predicate func_4(Parameter vparent_697, IfStmt target_4) {
		target_4.getCondition().(VariableAccess).getTarget()=vparent_697
		and target_4.getThen() instanceof ExprStmt
}

predicate func_5(Parameter vparent_697, AddressOfExpr target_5) {
		target_5.getOperand().(PointerFieldAccess).getTarget().getName()="children"
		and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_697
}

from Function func, Parameter vparent_697, Variable ventry_700, ExprStmt target_2, VariableAccess target_3, IfStmt target_4, AddressOfExpr target_5
where
not func_0(vparent_697, target_3, target_4)
and not func_1(vparent_697, target_3, target_5)
and func_2(vparent_697, ventry_700, target_3, target_2)
and func_3(vparent_697, target_2, target_3)
and func_4(vparent_697, target_4)
and func_5(vparent_697, target_5)
and vparent_697.getType().hasName("snd_info_entry *")
and ventry_700.getType().hasName("snd_info_entry *")
and vparent_697.getFunction() = func
and ventry_700.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
