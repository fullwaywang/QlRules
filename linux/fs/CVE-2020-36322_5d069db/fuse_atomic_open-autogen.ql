/**
 * @name linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fuse_atomic_open
 * @id cpp/linux/5d069dbe8aaf2a197142558b6fb2978189ba3454/fuse-atomic-open
 * @description linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fs/fuse/dir.c-fuse_atomic_open CVE-2020-36322
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdir_606, IfStmt target_1, FunctionCall target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("fuse_is_bad")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_606
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdir_606, IfStmt target_1) {
	target_1.getCondition().(FunctionCall).getTarget().hasName("d_in_lookup")
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fuse_lookup")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_606
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

predicate func_2(Parameter vdir_606, FunctionCall target_2) {
	target_2.getTarget().hasName("get_fuse_conn")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vdir_606
}

predicate func_3(Parameter vdir_606, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fuse_lookup")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_606
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

from Function func, Parameter vdir_606, IfStmt target_1, FunctionCall target_2, ExprStmt target_3
where
not func_0(vdir_606, target_1, target_2, target_3, func)
and func_1(vdir_606, target_1)
and func_2(vdir_606, target_2)
and func_3(vdir_606, target_3)
and vdir_606.getType().hasName("inode *")
and vdir_606.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
