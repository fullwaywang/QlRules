/**
 * @name linux-9fd75b66b8f68498454d685dc4ba13192ae069b0-ax25_kill_by_device
 * @id cpp/linux/9fd75b66b8f68498454d685dc4ba13192ae069b0/ax25-kill-by-device
 * @description linux-9fd75b66b8f68498454d685dc4ba13192ae069b0-ax25_kill_by_device CVE-2022-1204
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_80, EqualityOperation target_3, ExprStmt target_4, ExprStmt target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(PointerFieldAccess).getTarget().getName()="sk_socket"
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_80
		and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
		and target_0.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vax25_dev_78, EqualityOperation target_3, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("dev_put_track")
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_78
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_tracker"
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_78
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Variable vax25_dev_78, EqualityOperation target_3, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("ax25_dev_put")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vax25_dev_78
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Variable vax25_dev_78, EqualityOperation target_3) {
		target_3.getAnOperand().(PointerFieldAccess).getTarget().getName()="ax25_dev"
		and target_3.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ax25_cb *")
		and target_3.getAnOperand().(VariableAccess).getTarget()=vax25_dev_78
}

predicate func_4(Variable vsk_80, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_80
}

predicate func_5(Variable vsk_80, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("release_sock")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_80
}

from Function func, Variable vax25_dev_78, Variable vsk_80, ExprStmt target_1, ExprStmt target_2, EqualityOperation target_3, ExprStmt target_4, ExprStmt target_5
where
not func_0(vsk_80, target_3, target_4, target_5)
and func_1(vax25_dev_78, target_3, target_1)
and func_2(vax25_dev_78, target_3, target_2)
and func_3(vax25_dev_78, target_3)
and func_4(vsk_80, target_4)
and func_5(vsk_80, target_5)
and vax25_dev_78.getType().hasName("ax25_dev *")
and vsk_80.getType().hasName("sock *")
and vax25_dev_78.(LocalVariable).getFunction() = func
and vsk_80.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
