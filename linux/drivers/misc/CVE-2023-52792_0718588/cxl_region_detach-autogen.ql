/**
 * @name linux-0718588c7aaa7a1510b4de972370535b61dddd0d-cxl_region_detach
 * @id cpp/linux/0718588c7aaa7a1510b4de972370535b61dddd0d/cxl-region-detach
 * @description linux-0718588c7aaa7a1510b4de972370535b61dddd0d-drivers/cxl/core/region.c-cxl_region_detach CVE-2023-52792
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="997"
	and not target_0.getValue()="999"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="998"
	and not target_1.getValue()="1000"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="999"
	and not target_2.getValue()="1001"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="1000"
	and not target_3.getValue()="1002"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, Literal target_4) {
	target_4.getValue()="1001"
	and not target_4.getValue()="1003"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, Literal target_5) {
	target_5.getValue()="1002"
	and not target_5.getValue()="1004"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func) {
exists(AsmStmt target_6 |
	target_6.getChild(0).(Literal).getValue()="1003"
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Function func) {
exists(ExprStmt target_7 |
	target_7.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1004"
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(Function func, ExprStmt target_8) {
	target_8.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Function func, ExprStmt target_9) {
	target_9.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, BlockStmt target_10) {
	target_10.getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, BlockStmt target_11) {
	target_11.getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_11.getEnclosingFunction() = func
}

from Function func, Literal target_0, Literal target_1, Literal target_2, Literal target_3, Literal target_4, Literal target_5, ExprStmt target_8, ExprStmt target_9, BlockStmt target_10, BlockStmt target_11
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and not func_6(func)
and not func_7(func)
and func_8(func, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
