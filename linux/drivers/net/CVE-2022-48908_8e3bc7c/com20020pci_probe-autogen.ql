/**
 * @name linux-8e3bc7c5bbf87e86e9cd652ca2a9166942d86206-com20020pci_probe
 * @id cpp/linux/8e3bc7c5bbf87e86e9cd652ca2a9166942d86206/com20020pci-probe
 * @description linux-8e3bc7c5bbf87e86e9cd652ca2a9166942d86206-drivers/net/arcnet/com20020-pci.c-com20020pci_probe CVE-2022-48908
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vci_101, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vci_101
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vci_101, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="ci"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("com20020_priv *")
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vci_101
	)
}

predicate func_2(Variable vci_101, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="driver_data"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("const pci_device_id *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vci_101
	)
}

from Function func, Variable vci_101, ExprStmt target_1, ExprStmt target_2
where
not func_0(vci_101, target_1, target_2, func)
and func_1(vci_101, target_1)
and func_2(vci_101, target_2)
and vci_101.getType().hasName("com20020_pci_card_info *")
and vci_101.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
