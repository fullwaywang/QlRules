/**
 * @name linux-a39d51ff1f52cd0b6fe7d379ac93bd8b4237d1b7-convert_chmap
 * @id cpp/linux/a39d51ff1f52cd0b6fe7d379ac93bd8b4237d1b7/convert-chmap
 * @description linux-a39d51ff1f52cd0b6fe7d379ac93bd8b4237d1b7-sound/usb/stream.c-convert_chmap CVE-2024-27436
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchmap_287, Variable vc_289, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vc_289
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="channels"
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchmap_287
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vbits_239, Variable vchmap_287, Variable vmaps_288, Variable vc_289, IfStmt target_1) {
	target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vbits_239
	and target_1.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="map"
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchmap_287
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vc_289
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vmaps_288
}

predicate func_2(Variable vchmap_287, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="channels"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchmap_287
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Variable vchmap_287, Variable vmaps_288, Variable vc_289, BitwiseAndExpr target_5, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="map"
	and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchmap_287
	and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vc_289
	and target_3.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vmaps_288
	and target_3.getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vc_289, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vc_289
	and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_5(Parameter vbits_239, BitwiseAndExpr target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vbits_239
	and target_5.getRightOperand().(Literal).getValue()="1"
}

from Function func, Parameter vbits_239, Variable vchmap_287, Variable vmaps_288, Variable vc_289, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, BitwiseAndExpr target_5
where
not func_0(vchmap_287, vc_289, target_2, target_3, target_4)
and func_1(vbits_239, vchmap_287, vmaps_288, vc_289, target_1)
and func_2(vchmap_287, target_2)
and func_3(vchmap_287, vmaps_288, vc_289, target_5, target_3)
and func_4(vc_289, target_4)
and func_5(vbits_239, target_5)
and vbits_239.getType().hasName("unsigned int")
and vchmap_287.getType().hasName("snd_pcm_chmap_elem *")
and vmaps_288.getType().hasName("const unsigned int *")
and vc_289.getType().hasName("int")
and vbits_239.getFunction() = func
and vchmap_287.(LocalVariable).getFunction() = func
and vmaps_288.(LocalVariable).getFunction() = func
and vc_289.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
