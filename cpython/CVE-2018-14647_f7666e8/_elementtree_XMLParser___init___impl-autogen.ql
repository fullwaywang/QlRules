/**
 * @name cpython-f7666e828cc3d5873136473ea36ba2013d624fa1-_elementtree_XMLParser___init___impl
 * @id cpp/cpython/f7666e828cc3d5873136473ea36ba2013d624fa1/-elementtree-xmlparser---init---impl
 * @description cpython-f7666e828cc3d5873136473ea36ba2013d624fa1-Modules/_elementtree.c-_elementtree_XMLParser___init___impl CVE-2018-14647
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vself_3243, Variable vexpat_capi, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="SetHashSalt"
		and target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpat_capi
		and target_0.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="SetHashSalt"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpat_capi
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="parser"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_3243
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="hashsalt"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="expat"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("_Py_HashSecret_t")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vself_3243, EqualityOperation target_4, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="names"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_3243
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_2(Parameter vself_3243, Variable vexpat_capi, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="parser"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_3243
		and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ParserCreate_MM"
		and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpat_capi
		and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const char *")
		and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("XML_Memory_Handling_Suite")
		and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(StringLiteral).getValue()="}"
}

predicate func_3(Parameter vself_3243, Variable vexpat_capi, ExprStmt target_3) {
		target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ParserFree"
		and target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpat_capi
		and target_3.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="parser"
		and target_3.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_3243
}

predicate func_4(BlockStmt target_5, Function func, EqualityOperation target_4) {
		target_4.getAnOperand().(VariableAccess).getTarget().getType().hasName("PyObject *")
		and target_4.getAnOperand().(Literal).getValue()="0"
		and target_4.getParent().(IfStmt).getThen()=target_5
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vself_3243, EqualityOperation target_4, BlockStmt target_5) {
		target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="names"
		and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_3243
		and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_5.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_5.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PrefixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ob_refcnt"
		and target_5.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_5.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getElse().(ExprStmt).getExpr().(ExprCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("PyObject *")
		and target_5.getParent().(IfStmt).getCondition()=target_4
}

from Function func, Parameter vself_3243, Variable vexpat_capi, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, EqualityOperation target_4, BlockStmt target_5
where
not func_0(vself_3243, vexpat_capi, target_1, target_2, target_3, func)
and func_1(vself_3243, target_4, target_1)
and func_2(vself_3243, vexpat_capi, target_2)
and func_3(vself_3243, vexpat_capi, target_3)
and func_4(target_5, func, target_4)
and func_5(vself_3243, target_4, target_5)
and vself_3243.getType().hasName("XMLParserObject *")
and vexpat_capi.getType().hasName("PyExpat_CAPI *")
and vself_3243.getFunction() = func
and not vexpat_capi.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
