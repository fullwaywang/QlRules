/**
 * @name linux-180a6a3ee60a7cb69ed1232388460644f6a21f00-nsim_fib_destroy
 * @id cpp/linux/180a6a3ee60a7cb69ed1232388460644f6a21f00/nsim-fib-destroy
 * @description linux-180a6a3ee60a7cb69ed1232388460644f6a21f00-drivers/net/netdevsim/fib.c-nsim_fib_destroy CVE-2023-2019
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdata_1605, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("cancel_work_sync")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="fib_flush_work"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1605
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdata_1605, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("flush_work")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="fib_event_work"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1605
}

predicate func_2(Parameter vdata_1605, AddressOfExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="nexthop_nb"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1605
}

predicate func_3(Parameter vdata_1605, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="fib_event_work"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1605
}

from Function func, Parameter vdata_1605, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3
where
not func_0(vdata_1605, target_1, target_2, target_3, func)
and func_1(vdata_1605, target_1)
and func_2(vdata_1605, target_2)
and func_3(vdata_1605, target_3)
and vdata_1605.getType().hasName("nsim_fib_data *")
and vdata_1605.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
