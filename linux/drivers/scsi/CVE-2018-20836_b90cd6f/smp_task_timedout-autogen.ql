/**
 * @name linux-b90cd6f2b905905fb42671009dc0e27c310a16ae-smp_task_timedout
 * @id cpp/linux/b90cd6f2b905905fb42671009dc0e27c310a16ae/smp-task-timedout
 * @description linux-b90cd6f2b905905fb42671009dc0e27c310a16ae-drivers/scsi/libsas/sas_expander.c-smp_task_timedout CVE-2018-20836
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtask_47, NotExpr target_2, ExprStmt target_0) {
		target_0.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="task_state_flags"
		and target_0.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_47
		and target_0.getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="4"
		and target_0.getParent().(IfStmt).getCondition()=target_2
}

predicate func_1(Variable vtask_47, Function func, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("complete")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="completion"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="slow_task"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_47
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vtask_47, NotExpr target_2) {
		target_2.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="task_state_flags"
		and target_2.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_47
		and target_2.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
}

from Function func, Variable vtask_47, ExprStmt target_0, ExprStmt target_1, NotExpr target_2
where
func_0(vtask_47, target_2, target_0)
and func_1(vtask_47, func, target_1)
and func_2(vtask_47, target_2)
and vtask_47.getType().hasName("sas_task *")
and vtask_47.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
