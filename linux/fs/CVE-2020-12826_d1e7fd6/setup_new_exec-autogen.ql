/**
 * @name linux-d1e7fd6462ca9fc76650fbe6ca800e35b24267da-setup_new_exec
 * @id cpp/linux/d1e7fd6462ca9fc76650fbe6ca800e35b24267da/setup-new-exec
 * @description linux-d1e7fd6462ca9fc76650fbe6ca800e35b24267da-fs/exec.c-setup_new_exec CVE-2020-12826
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(StmtExpr target_0 |
	target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__write_once_size")
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="self_exec_id"
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
	and target_0.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and target_0.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="self_exec_id"
	and target_1.getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, PostfixIncrExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="self_exec_id"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_2.getEnclosingFunction() = func
}

from Function func, PointerFieldAccess target_1, PostfixIncrExpr target_2
where
not func_0(func)
and func_1(func, target_1)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
