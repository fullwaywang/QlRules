/**
 * @name linux-da834d6c1147c7519a9e55b510a03b7055104749-cifs_do_mount
 * @id cpp/linux/da834d6c1147c7519a9e55b510a03b7055104749/cifs-do-mount
 * @description linux-da834d6c1147c7519a9e55b510a03b7055104749-fs/cifs/cifsfs.c-cifs_do_mount CVE-2022-48919
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vroot_678, ExprStmt target_1, ExprStmt target_2, ReturnStmt target_3, Function func) {
exists(ReturnStmt target_0 |
	target_0.getExpr().(VariableAccess).getTarget()=vroot_678
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_0.getExpr().(VariableAccess).getLocation())
	and target_0.getExpr().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("cifs_cleanup_volume_info")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("smb_vol *")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vroot_678, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("__dynamic_pr_debug")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
		and obj_0.getArgument(1).(StringLiteral).getValue()="dentry root is: %p\n"
		and obj_0.getArgument(2).(VariableAccess).getTarget()=vroot_678
	)
}

predicate func_3(Variable vroot_678, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vroot_678
}

from Function func, Variable vroot_678, ExprStmt target_1, ExprStmt target_2, ReturnStmt target_3
where
not func_0(vroot_678, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vroot_678, target_2)
and func_3(vroot_678, target_3)
and vroot_678.getType().hasName("dentry *")
and vroot_678.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
