/**
 * @name linux-e8688218e38111ace457509d8f0cad75f79c1a7a-seg6_input_core
 * @id cpp/linux/e8688218e38111ace457509d8f0cad75f79c1a7a/seg6-input-core
 * @description linux-e8688218e38111ace457509d8f0cad75f79c1a7a-net/ipv6/seg6_iptunnel.c-seg6_input_core CVE-2024-39490
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(FunctionCall target_5, Function func) {
exists(GotoStmt target_0 |
	target_0.getName() ="drop"
	and target_0.getParent().(IfStmt).getCondition()=target_5
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(FunctionCall target_6, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="drop"
	and target_1.getParent().(IfStmt).getCondition()=target_6
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Parameter vskb_322, FunctionCall target_5, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("kfree_skb")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vskb_322
	)
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_3(Variable verr_327, FunctionCall target_5, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=verr_327
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable verr_327, FunctionCall target_6, ReturnStmt target_4) {
	target_4.getExpr().(VariableAccess).getTarget()=verr_327
	and target_4.getParent().(IfStmt).getCondition()=target_6
}

predicate func_5(Variable verr_327, BlockStmt target_7, FunctionCall target_5) {
	target_5.getTarget().hasName("__builtin_expect")
	and target_5.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_327
	and target_5.getArgument(1).(Literal).getValue()="0"
	and target_5.getParent().(IfStmt).getThen()=target_7
}

predicate func_6(Variable verr_327, ReturnStmt target_4, FunctionCall target_6) {
	target_6.getTarget().hasName("__builtin_expect")
	and target_6.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_327
	and target_6.getArgument(1).(Literal).getValue()="0"
	and target_6.getParent().(IfStmt).getThen()=target_4
}

predicate func_7(Function func, BlockStmt target_7) {
	target_7.getStmt(0) instanceof ExprStmt
	and target_7.getStmt(1) instanceof ReturnStmt
	and target_7.getEnclosingFunction() = func
}

from Function func, Parameter vskb_322, Variable verr_327, ExprStmt target_2, ReturnStmt target_3, ReturnStmt target_4, FunctionCall target_5, FunctionCall target_6, BlockStmt target_7
where
not func_0(target_5, func)
and not func_1(target_6, func)
and func_2(vskb_322, target_5, target_2)
and func_3(verr_327, target_5, target_3)
and func_4(verr_327, target_6, target_4)
and func_5(verr_327, target_7, target_5)
and func_6(verr_327, target_4, target_6)
and func_7(func, target_7)
and vskb_322.getType().hasName("sk_buff *")
and verr_327.getType().hasName("int")
and vskb_322.getFunction() = func
and verr_327.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
