/**
 * @name linux-5c855bcc730656c4b7d30aaddcd0eafc7003e112-intel_engines_init
 * @id cpp/linux/5c855bcc730656c4b7d30aaddcd0eafc7003e112/intel-engines-init
 * @description linux-5c855bcc730656c4b7d30aaddcd0eafc7003e112-drivers/gpu/drm/i915/gt/intel_engine_cs.c-intel_engines_init CVE-2022-48893
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vengine_1325, Variable verr_1327, ExprStmt target_5, ExprStmt target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("engine_init_common")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vengine_1325
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_1327
	)
	and target_0.getLocation().isBefore(target_5.getLocation())
}

predicate func_1(Variable verr_1327, IfStmt target_6, IfStmt target_1) {
	target_1.getCondition().(VariableAccess).getTarget()=verr_1327
	and target_1.getThen() instanceof ReturnStmt
	and target_6.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vengine_1325, VariableAccess target_7, ExprStmt target_0, ExprStmt target_5) {
exists(ExprStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("intel_engine_cleanup_common")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vengine_1325
	)
	and exists(BlockStmt obj_1 | obj_1=target_2.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(0)=target_2
			and obj_2.getCondition()=target_7
		)
	)
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_3(NotExpr target_8, Function func) {
exists(ExprStmt target_3 |
	exists(BlockStmt obj_0 | obj_0=target_3.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getElse().(BlockStmt).getStmt(4)=target_3
			and obj_1.getCondition()=target_8
		)
	)
	and target_3.getExpr().(SizeofExprOperator).getValue()="8"
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(Variable verr_1327, VariableAccess target_7, ReturnStmt target_4) {
	target_4.getExpr().(VariableAccess).getTarget()=verr_1327
	and target_4.getParent().(IfStmt).getCondition()=target_7
}

predicate func_5(Variable vengine_1325, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("intel_engine_add_user")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vengine_1325
	)
}

predicate func_6(Variable verr_1327, NotExpr target_8, IfStmt target_6) {
	target_6.getCondition().(VariableAccess).getTarget()=verr_1327
	and target_6.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_1327
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_7(Variable verr_1327, ReturnStmt target_4, VariableAccess target_7) {
	target_7.getTarget()=verr_1327
	and target_7.getParent().(IfStmt).getThen()=target_4
}

predicate func_8(Variable vengine_1325, NotExpr target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getOperand() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				obj_2.getTarget().getName()="engine"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("intel_gt *")
			)
			and obj_1.getArrayOffset().(VariableAccess).getTarget().getType().hasName("intel_engine_id")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vengine_1325
	)
}

from Function func, Variable vengine_1325, Variable verr_1327, ExprStmt target_0, IfStmt target_1, ReturnStmt target_4, ExprStmt target_5, IfStmt target_6, VariableAccess target_7, NotExpr target_8
where
func_0(vengine_1325, verr_1327, target_5, target_0)
and func_1(verr_1327, target_6, target_1)
and not func_2(vengine_1325, target_7, target_0, target_5)
and not func_3(target_8, func)
and func_4(verr_1327, target_7, target_4)
and func_5(vengine_1325, target_5)
and func_6(verr_1327, target_8, target_6)
and func_7(verr_1327, target_4, target_7)
and func_8(vengine_1325, target_8)
and vengine_1325.getType().hasName("intel_engine_cs *")
and verr_1327.getType().hasName("int")
and vengine_1325.(LocalVariable).getFunction() = func
and verr_1327.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
