/**
 * @name linux-951b6a0717db97ce420547222647bcc40bf1eacd-rfcomm_sock_bind
 * @id cpp/linux/951b6a0717db97ce420547222647bcc40bf1eacd/rfcomm-sock-bind
 * @description linux-951b6a0717db97ce420547222647bcc40bf1eacd-net/bluetooth/rfcomm/sock.c-rfcomm_sock_bind CVE-2015-8956
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vaddr_335, Initializer target_0) {
		target_0.getExpr().(VariableAccess).getTarget()=vaddr_335
}

predicate func_1(Variable vsa_1_337, Initializer target_1) {
		target_1.getExpr().(PointerFieldAccess).getTarget().getName()="rc_channel"
		and target_1.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_2(Variable vsa_1_337, Variable vchan_339, BlockStmt target_24, VariableAccess target_2) {
		target_2.getTarget()=vchan_339
		and target_2.getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
		and target_2.getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_339
		and target_2.getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
		and target_2.getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_24
}

/*predicate func_3(Variable vsa_1_337, Variable vchan_339, VariableAccess target_3) {
		target_3.getTarget()=vchan_339
		and target_3.getParent().(FunctionCall).getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
		and target_3.getParent().(FunctionCall).getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
		and target_3.getParent().(FunctionCall).getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

*/
predicate func_5(Variable vsa_1_337, Function func) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(FunctionCall).getTarget().hasName("__memset")
		and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsa_1_337
		and target_5.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_5.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="10"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5)
}

predicate func_6(Function func) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_6.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getThen().(VariableAccess).getType().hasName("unsigned int")
		and target_6.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getElse().(VariableAccess).getType().hasName("unsigned int")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6)
}

predicate func_8(Function func) {
	exists(SizeofExprOperator target_8 |
		target_8.getValue()="10"
		and target_8.getEnclosingFunction() = func)
}

predicate func_9(Parameter vaddr_335, Variable vsa_1_337, LogicalOrExpr target_25, Function func) {
	exists(ExprStmt target_9 |
		target_9.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
		and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsa_1_337
		and target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vaddr_335
		and target_9.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("int")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
		and target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_25.getAnOperand().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_10(Variable vsa_1_337, AddressOfExpr target_26) {
	exists(ValueFieldAccess target_10 |
		target_10.getTarget().getName()="rc_bdaddr"
		and target_10.getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_10.getQualifier().(VariableAccess).getLocation().isBefore(target_26.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_11(Variable vsa_1_337, AddressOfExpr target_26) {
	exists(ValueFieldAccess target_11 |
		target_11.getTarget().getName()="rc_channel"
		and target_11.getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_26.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_11.getQualifier().(VariableAccess).getLocation()))
}

predicate func_12(Variable vsa_1_337) {
	exists(ValueFieldAccess target_12 |
		target_12.getTarget().getName()="rc_channel"
		and target_12.getQualifier().(VariableAccess).getTarget()=vsa_1_337)
}

predicate func_13(Variable vsa_1_337, AddressOfExpr target_27) {
	exists(ValueFieldAccess target_13 |
		target_13.getTarget().getName()="rc_bdaddr"
		and target_13.getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_13.getQualifier().(VariableAccess).getLocation().isBefore(target_27.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_14(Variable vsa_1_337, AddressOfExpr target_27, AddressOfExpr target_28) {
	exists(ValueFieldAccess target_14 |
		target_14.getTarget().getName()="rc_bdaddr"
		and target_14.getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_27.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getQualifier().(VariableAccess).getLocation())
		and target_14.getQualifier().(VariableAccess).getLocation().isBefore(target_28.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_15(Variable vsa_1_337, AddressOfExpr target_28) {
	exists(ValueFieldAccess target_15 |
		target_15.getTarget().getName()="rc_channel"
		and target_15.getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_28.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_15.getQualifier().(VariableAccess).getLocation()))
}

predicate func_17(Parameter vaddr_335, VariableAccess target_17) {
		target_17.getTarget()=vaddr_335
}

predicate func_19(Variable vsa_1_337, VariableAccess target_19) {
		target_19.getTarget()=vsa_1_337
}

predicate func_20(Variable vsa_1_337, PointerFieldAccess target_20) {
		target_20.getTarget().getName()="rc_bdaddr"
		and target_20.getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_21(Variable vsa_1_337, PointerFieldAccess target_21) {
		target_21.getTarget().getName()="rc_bdaddr"
		and target_21.getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_22(Variable vsa_1_337, PointerFieldAccess target_22) {
		target_22.getTarget().getName()="rc_bdaddr"
		and target_22.getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_23(Variable vchan_339, LogicalAndExpr target_29, VariableAccess target_23) {
		target_23.getTarget()=vchan_339
		and target_23.getParent().(AssignExpr).getRValue() = target_23
		and target_23.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="channel"
		and target_23.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_29.getAnOperand().(VariableAccess).getLocation().isBefore(target_23.getLocation())
}

predicate func_24(Function func, BlockStmt target_24) {
		target_24.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_24.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-98"
		and target_24.getEnclosingFunction() = func
}

predicate func_25(Parameter vaddr_335, LogicalOrExpr target_25) {
		target_25.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vaddr_335
		and target_25.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sa_family"
		and target_25.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_335
		and target_25.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="31"
}

predicate func_26(Variable vsa_1_337, AddressOfExpr target_26) {
		target_26.getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
		and target_26.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_26.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
		and target_26.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
		and target_26.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="sk %p %pMR\n"
		and target_26.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("sock *")
}

predicate func_27(Variable vsa_1_337, Variable vchan_339, AddressOfExpr target_27) {
		target_27.getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
		and target_27.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_27.getParent().(FunctionCall).getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
		and target_27.getParent().(FunctionCall).getParent().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_339
}

predicate func_28(Variable vsa_1_337, AddressOfExpr target_28) {
		target_28.getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
		and target_28.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
		and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bacpy")
		and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="src"
		and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
}

predicate func_29(Variable vsa_1_337, Variable vchan_339, LogicalAndExpr target_29) {
		target_29.getAnOperand().(VariableAccess).getTarget()=vchan_339
		and target_29.getAnOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
		and target_29.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_339
		and target_29.getAnOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
		and target_29.getAnOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

from Function func, Parameter vaddr_335, Variable vsa_1_337, Variable vchan_339, Initializer target_0, Initializer target_1, VariableAccess target_2, VariableAccess target_17, VariableAccess target_19, PointerFieldAccess target_20, PointerFieldAccess target_21, PointerFieldAccess target_22, VariableAccess target_23, BlockStmt target_24, LogicalOrExpr target_25, AddressOfExpr target_26, AddressOfExpr target_27, AddressOfExpr target_28, LogicalAndExpr target_29
where
func_0(vaddr_335, target_0)
and func_1(vsa_1_337, target_1)
and func_2(vsa_1_337, vchan_339, target_24, target_2)
and not func_5(vsa_1_337, func)
and not func_6(func)
and not func_8(func)
and not func_9(vaddr_335, vsa_1_337, target_25, func)
and not func_10(vsa_1_337, target_26)
and not func_11(vsa_1_337, target_26)
and not func_12(vsa_1_337)
and not func_13(vsa_1_337, target_27)
and not func_14(vsa_1_337, target_27, target_28)
and not func_15(vsa_1_337, target_28)
and func_17(vaddr_335, target_17)
and func_19(vsa_1_337, target_19)
and func_20(vsa_1_337, target_20)
and func_21(vsa_1_337, target_21)
and func_22(vsa_1_337, target_22)
and func_23(vchan_339, target_29, target_23)
and func_24(func, target_24)
and func_25(vaddr_335, target_25)
and func_26(vsa_1_337, target_26)
and func_27(vsa_1_337, vchan_339, target_27)
and func_28(vsa_1_337, target_28)
and func_29(vsa_1_337, vchan_339, target_29)
and vaddr_335.getType().hasName("sockaddr *")
and vsa_1_337.getType().hasName("sockaddr_rc *")
and vchan_339.getType().hasName("int")
and vaddr_335.getFunction() = func
and vsa_1_337.(LocalVariable).getFunction() = func
and vchan_339.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
