/**
 * @name linux-493c9e850677df8b4eda150c2364b1c1a72ed724-ufshcd_exec_dev_cmd
 * @id cpp/linux/493c9e850677df8b4eda150c2364b1c1a72ed724/ufshcd-exec-dev-cmd
 * @description linux-493c9e850677df8b4eda150c2364b1c1a72ed724-drivers/scsi/ufs/ufshcd.c-ufshcd_exec_dev_cmd CVE-2021-47622
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, BitwiseOrExpr target_0) {
	target_0.getValue()="2312"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="1661"
	and not target_1.getValue()="1659"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="1662"
	and not target_2.getValue()="1660"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="1663"
	and not target_3.getValue()="1661"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vhba_2910, Initializer target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getExpr() |
		obj_0.getTarget().getName()="cmd_queue"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vhba_2910
	)
}

predicate func_5(Variable vtag_1_2918, VariableAccess target_5) {
	target_5.getTarget()=vtag_1_2918
}

predicate func_7(Parameter vhba_2910, AddressOfExpr target_41) {
exists(PointerFieldAccess target_7 |
	exists(VariableAccess obj_0 | obj_0=target_7.getQualifier() |
		obj_0.getTarget()=vhba_2910
		and obj_0.getLocation().isBefore(target_41.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	)
	and target_7.getTarget().getName()="reserved_slot"
)
}

predicate func_8(Function func) {
exists(EqualityOperation target_8 |
	exists(FunctionCall obj_0 | obj_0=target_8.getLeftOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getQualifier() |
					exists(ValueFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="lock"
						and obj_4.getQualifier().(PointerFieldAccess).getTarget().getName()="dev_cmd"
					)
				)
				and obj_2.getTarget().getName()="dep_map"
			)
		)
		and obj_0.getTarget().hasName("lock_is_held")
	)
	and target_8.getRightOperand() instanceof Literal
	and target_8.getParent().(NotExpr).getParent().(LogicalAndExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
	and target_8.getEnclosingFunction() = func
)
}

predicate func_9(Function func, ExprStmt target_9) {
	target_9.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1656"
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1659"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, ExprStmt target_11) {
	target_11.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1660"
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Function func, BinaryBitwiseOperation target_12) {
	target_12.getValue()="1"
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable v__ret_warn_on_2933, ExprStmt target_13) {
	exists(FunctionCall obj_0 | obj_0=target_13.getExpr() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_2933
		and obj_0.getArgument(1) instanceof Literal
	)
}

predicate func_14(Parameter vhba_2910, VariableAccess target_14) {
	target_14.getTarget()=vhba_2910
}

predicate func_18(Function func, DeclStmt target_18) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_18
}

predicate func_19(Variable vq_2913, Variable vreq_2915, Function func, ExprStmt target_19) {
	exists(AssignExpr obj_0 | obj_0=target_19.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("blk_get_request")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vq_2913
			and obj_1.getArgument(2) instanceof Literal
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vreq_2915
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_19
}

predicate func_20(Variable vreq_2915, Variable verr_2917, Function func, IfStmt target_20) {
	exists(FunctionCall obj_0 | obj_0=target_20.getCondition() |
		obj_0.getTarget().hasName("IS_ERR")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreq_2915
	)
	and exists(BlockStmt obj_1 | obj_1=target_20.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getRValue() |
					obj_4.getTarget().hasName("PTR_ERR")
					and obj_4.getArgument(0).(VariableAccess).getTarget()=vreq_2915
				)
				and obj_3.getLValue().(VariableAccess).getTarget()=verr_2917
			)
		)
		and obj_1.getStmt(1).(GotoStmt).getName() ="out_unlock"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
}

/*predicate func_21(Variable vreq_2915, Variable verr_2917, AssignExpr target_21) {
	exists(FunctionCall obj_0 | obj_0=target_21.getRValue() |
		obj_0.getTarget().hasName("PTR_ERR")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreq_2915
	)
	and target_21.getLValue().(VariableAccess).getTarget()=verr_2917
}

*/
/*predicate func_22(FunctionCall target_42, Function func, GotoStmt target_22) {
	target_22.getName() ="out_unlock"
	and target_22.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_42
	and target_22.getEnclosingFunction() = func
}

*/
predicate func_23(Variable vreq_2915, Variable vtag_1_2918, Function func, ExprStmt target_23) {
	exists(AssignExpr obj_0 | obj_0=target_23.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="tag"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vreq_2915
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vtag_1_2918
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_23
}

predicate func_24(Function func, ExprStmt target_24) {
	exists(StmtExpr obj_0 | obj_0=target_24.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(IfStmt obj_2 | obj_2=obj_1.getStmt(2) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getCondition() |
					obj_3.getTarget().hasName("__builtin_expect")
					and obj_3.getArgument(1) instanceof Literal
				)
			)
			and exists(ExprStmt obj_4 | obj_4=obj_1.getStmt(3) |
				exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
					obj_5.getTarget().hasName("__builtin_expect")
					and obj_5.getArgument(1) instanceof Literal
				)
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_24
}

predicate func_27(Variable vtag_1_2918, RelationalOperation target_27) {
	 (target_27 instanceof GTExpr or target_27 instanceof LTExpr)
	and target_27.getLesserOperand().(VariableAccess).getTarget()=vtag_1_2918
	and target_27.getGreaterOperand() instanceof Literal
}

/*predicate func_28(Variable v__already_done_2933, Variable v__ret_do_once_2933, IfStmt target_28) {
	exists(FunctionCall obj_0 | obj_0=target_28.getCondition() |
		exists(NotExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(NotExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(LogicalAndExpr obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getLeftOperand().(VariableAccess).getTarget()=v__ret_do_once_2933
					and obj_3.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__already_done_2933
				)
			)
		)
		and obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(1) instanceof Literal
	)
	and exists(BlockStmt obj_4 | obj_4=target_28.getThen() |
		exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(1) |
			exists(StmtExpr obj_6 | obj_6=obj_5.getExpr() |
				exists(BlockStmt obj_7 | obj_7=obj_6.getStmt() |
					obj_7.getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
					and obj_7.getStmt(2) instanceof ExprStmt
				)
			)
		)
		and obj_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__already_done_2933
	)
}

*/
/*predicate func_29(Variable v__ret_do_once_2933, VariableAccess target_29) {
	exists(LogicalAndExpr obj_0 | obj_0=target_29.getParent() |
		exists(NotExpr obj_1 | obj_1=obj_0.getParent() |
			exists(NotExpr obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getParent() |
					exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
						exists(FunctionCall obj_5 | obj_5=obj_4.getCondition() |
							obj_5.getTarget().hasName("__builtin_expect")
							and obj_5.getArgument(1) instanceof Literal
						)
					)
				)
			)
		)
	)
	and target_29.getTarget()=v__ret_do_once_2933
}

*/
/*predicate func_30(Variable v__already_done_2933, VariableAccess target_30) {
	exists(NotExpr obj_0 | obj_0=target_30.getParent() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getParent() |
			exists(NotExpr obj_2 | obj_2=obj_1.getParent() |
				exists(NotExpr obj_3 | obj_3=obj_2.getParent() |
					exists(FunctionCall obj_4 | obj_4=obj_3.getParent() |
						exists(IfStmt obj_5 | obj_5=obj_4.getParent() |
							exists(FunctionCall obj_6 | obj_6=obj_5.getCondition() |
								obj_6.getTarget().hasName("__builtin_expect")
								and obj_6.getArgument(1) instanceof Literal
							)
						)
					)
				)
			)
		)
	)
	and target_30.getTarget()=v__already_done_2933
}

*/
/*predicate func_31(Variable v__already_done_2933, FunctionCall target_43, ExprStmt target_31) {
	target_31.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__already_done_2933
	and target_31.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_43
}

*/
/*predicate func_32(FunctionCall target_43, Function func, ExprStmt target_32) {
	exists(StmtExpr obj_0 | obj_0=target_32.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(IfStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getCondition() |
					obj_3.getTarget().hasName("__builtin_expect")
					and obj_3.getArgument(1) instanceof Literal
				)
				and exists(DoStmt obj_4 | obj_4=obj_2.getThen() |
					exists(BlockStmt obj_5 | obj_5=obj_4.getStmt() |
						obj_5.getStmt(0) instanceof ExprStmt
						and obj_5.getStmt(3) instanceof ExprStmt
					)
					and obj_4.getCondition() instanceof Literal
				)
			)
			and obj_1.getStmt(2) instanceof ExprStmt
		)
	)
	and target_32.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_43
	and target_32.getEnclosingFunction() = func
}

*/
/*predicate func_34(Function func, NotExpr target_34) {
	target_34.getValue()="1"
	and target_34.getEnclosingFunction() = func
}

*/
/*predicate func_36(Function func, BitwiseOrExpr target_36) {
	target_36.getValue()="2313"
	and target_36.getEnclosingFunction() = func
}

*/
/*predicate func_37(Variable v__ret_do_once_2933, ExprStmt target_37) {
	exists(FunctionCall obj_0 | obj_0=target_37.getExpr() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_do_once_2933
		and obj_0.getArgument(1) instanceof Literal
	)
}

*/
predicate func_38(Parameter vtimeout_2911, Variable vreq_2915, Function func, ExprStmt target_38) {
	exists(AssignExpr obj_0 | obj_0=target_38.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="timeout"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vreq_2915
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRValue() |
			exists(MulExpr obj_3 | obj_3=obj_2.getArgument(0) |
				obj_3.getLeftOperand().(Literal).getValue()="2"
				and obj_3.getRightOperand().(VariableAccess).getTarget()=vtimeout_2911
			)
			and obj_2.getTarget().hasName("msecs_to_jiffies")
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_38
}

predicate func_39(Variable vreq_2915, Function func, ExprStmt target_39) {
	exists(FunctionCall obj_0 | obj_0=target_39.getExpr() |
		obj_0.getTarget().hasName("blk_mq_start_request")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreq_2915
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_39
}

predicate func_40(Variable vreq_2915, Function func, ExprStmt target_40) {
	exists(FunctionCall obj_0 | obj_0=target_40.getExpr() |
		obj_0.getTarget().hasName("blk_put_request")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreq_2915
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_40
}

predicate func_41(Parameter vhba_2910, AddressOfExpr target_41) {
	exists(PointerFieldAccess obj_0 | obj_0=target_41.getOperand() |
		obj_0.getTarget().getName()="clk_scaling_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vhba_2910
	)
	and target_41.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("down_read")
}

predicate func_42(Variable vreq_2915, FunctionCall target_42) {
	target_42.getTarget().hasName("IS_ERR")
	and target_42.getArgument(0).(VariableAccess).getTarget()=vreq_2915
}

predicate func_43(Function func, FunctionCall target_43) {
	target_43.getTarget().hasName("__builtin_expect")
	and target_43.getArgument(0) instanceof NotExpr
	and target_43.getArgument(1) instanceof Literal
	and target_43.getEnclosingFunction() = func
}

from Function func, Parameter vhba_2910, Parameter vtimeout_2911, Variable vq_2913, Variable vreq_2915, Variable verr_2917, Variable vtag_1_2918, Variable v__already_done_2933, Variable v__ret_do_once_2933, Variable v__ret_warn_on_2933, BitwiseOrExpr target_0, Literal target_1, Literal target_2, Literal target_3, Initializer target_4, VariableAccess target_5, ExprStmt target_9, ExprStmt target_10, ExprStmt target_11, BinaryBitwiseOperation target_12, ExprStmt target_13, VariableAccess target_14, DeclStmt target_18, ExprStmt target_19, IfStmt target_20, ExprStmt target_23, ExprStmt target_24, RelationalOperation target_27, ExprStmt target_38, ExprStmt target_39, ExprStmt target_40, AddressOfExpr target_41, FunctionCall target_42, FunctionCall target_43
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vhba_2910, target_4)
and func_5(vtag_1_2918, target_5)
and not func_7(vhba_2910, target_41)
and not func_8(func)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and func_12(func, target_12)
and func_13(v__ret_warn_on_2933, target_13)
and func_14(vhba_2910, target_14)
and func_18(func, target_18)
and func_19(vq_2913, vreq_2915, func, target_19)
and func_20(vreq_2915, verr_2917, func, target_20)
and func_23(vreq_2915, vtag_1_2918, func, target_23)
and func_24(func, target_24)
and func_27(vtag_1_2918, target_27)
and func_38(vtimeout_2911, vreq_2915, func, target_38)
and func_39(vreq_2915, func, target_39)
and func_40(vreq_2915, func, target_40)
and func_41(vhba_2910, target_41)
and func_42(vreq_2915, target_42)
and func_43(func, target_43)
and vhba_2910.getType().hasName("ufs_hba *")
and vtimeout_2911.getType().hasName("int")
and vq_2913.getType().hasName("request_queue *")
and vreq_2915.getType().hasName("request *")
and verr_2917.getType().hasName("int")
and vtag_1_2918.getType().hasName("int")
and v__already_done_2933.getType().hasName("bool")
and v__ret_do_once_2933.getType().hasName("bool")
and v__ret_warn_on_2933.getType().hasName("int")
and vhba_2910.getFunction() = func
and vtimeout_2911.getFunction() = func
and vq_2913.(LocalVariable).getFunction() = func
and vreq_2915.(LocalVariable).getFunction() = func
and verr_2917.(LocalVariable).getFunction() = func
and vtag_1_2918.(LocalVariable).getFunction() = func
and v__already_done_2933.(LocalVariable).getFunction() = func
and v__ret_do_once_2933.(LocalVariable).getFunction() = func
and v__ret_warn_on_2933.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
