/**
 * @name linux-f991af3daabaecff34684fd51fac80319d1baad1-do_mq_notify
 * @id cpp/linux/f991af3daabaecff34684fd51fac80319d1baad1/do-mq-notify
 * @description linux-f991af3daabaecff34684fd51fac80319d1baad1-ipc/mqueue.c-do_mq_notify CVE-2017-11176
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsock_1220, EqualityOperation target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsock_1220
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(EqualityOperation target_2, Function func, GotoStmt target_1) {
	target_1.getName() ="retry"
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getRightOperand().(Literal).getValue()="1"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vsock_1220, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("netlink_attachskb")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsock_1220
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("long")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="0"
}

from Function func, Variable vsock_1220, GotoStmt target_1, EqualityOperation target_2, ExprStmt target_3
where
not func_0(vsock_1220, target_2, target_3)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and func_3(vsock_1220, target_3)
and vsock_1220.getType().hasName("sock *")
and vsock_1220.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
