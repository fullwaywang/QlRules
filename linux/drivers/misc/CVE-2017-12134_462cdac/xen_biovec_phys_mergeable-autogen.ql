/**
 * @name linux-462cdace790ac2ed6aad1b19c9c0af0143b6aab0-xen_biovec_phys_mergeable
 * @id cpp/linux/462cdace790ac2ed6aad1b19c9c0af0143b6aab0/xen-biovec-phys-mergeable
 * @description linux-462cdace790ac2ed6aad1b19c9c0af0143b6aab0-drivers/xen/biomerge.c-xen_biovec_phys_mergeable CVE-2017-12134
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvec1_6) {
exists(BinaryBitwiseOperation target_0 |
	target_0.getLeftOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bv_offset"
	and target_0.getLeftOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec1_6
	and target_0.getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="bv_len"
	and target_0.getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec1_6
	and target_0.getRightOperand() instanceof Literal)
}

predicate func_1(Parameter vvec1_6, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="bv_offset"
	and target_1.getQualifier().(VariableAccess).getTarget()=vvec1_6
}

predicate func_2(Parameter vvec1_6, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="bv_len"
	and target_2.getQualifier().(VariableAccess).getTarget()=vvec1_6
}

predicate func_4(Variable vbfn1_10, VariableAccess target_4) {
	target_4.getTarget()=vbfn1_10
}

predicate func_5(Variable vbfn2_11, VariableAccess target_5) {
	target_5.getTarget()=vbfn2_11
}

predicate func_6(Parameter vvec2_7, Variable vbfn1_10, Variable vvmemmap_base, Variable vbfn2_11, Parameter vvec1_6, LogicalAndExpr target_6) {
	target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(AddExpr).getLeftOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bv_page"
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(AddExpr).getLeftOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vvmemmap_base
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(AddExpr).getLeftOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand() instanceof Literal
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(AddExpr).getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="bv_offset"
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(AddExpr).getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec1_6
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="bv_len"
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec1_6
	and target_6.getLeftOperand().(EqualityOperation).getRightOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bv_page"
	and target_6.getLeftOperand().(EqualityOperation).getRightOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec2_7
	and target_6.getLeftOperand().(EqualityOperation).getRightOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vvmemmap_base
	and target_6.getLeftOperand().(EqualityOperation).getRightOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
	and target_6.getLeftOperand().(EqualityOperation).getRightOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="bv_offset"
	and target_6.getLeftOperand().(EqualityOperation).getRightOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec2_7
	and target_6.getRightOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vbfn1_10
	and target_6.getRightOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vbfn2_11
	and target_6.getRightOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vbfn1_10
	and target_6.getRightOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(AddExpr).getRightOperand().(Literal).getValue()="1"
	and target_6.getRightOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vbfn2_11
}

/*predicate func_7(Variable vvmemmap_base, Parameter vvec1_6, AddExpr target_7) {
	target_7.getLeftOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bv_page"
	and target_7.getLeftOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec1_6
	and target_7.getLeftOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vvmemmap_base
	and target_7.getLeftOperand().(AddExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand() instanceof Literal
	and target_7.getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="bv_offset"
	and target_7.getLeftOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec1_6
	and target_7.getRightOperand().(PointerFieldAccess).getTarget().getName()="bv_len"
	and target_7.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec1_6
}

*/
/*predicate func_8(Parameter vvec2_7, Variable vvmemmap_base, AddExpr target_8) {
	target_8.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bv_page"
	and target_8.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec2_7
	and target_8.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vvmemmap_base
	and target_8.getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
	and target_8.getRightOperand().(PointerFieldAccess).getTarget().getName()="bv_offset"
	and target_8.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvec2_7
}

*/
/*predicate func_9(Variable vbfn1_10, VariableAccess target_9) {
	target_9.getTarget()=vbfn1_10
}

*/
from Function func, Parameter vvec2_7, Variable vbfn1_10, Variable vvmemmap_base, Variable vbfn2_11, Parameter vvec1_6, PointerFieldAccess target_1, PointerFieldAccess target_2, VariableAccess target_4, VariableAccess target_5, LogicalAndExpr target_6
where
not func_0(vvec1_6)
and func_1(vvec1_6, target_1)
and func_2(vvec1_6, target_2)
and func_4(vbfn1_10, target_4)
and func_5(vbfn2_11, target_5)
and func_6(vvec2_7, vbfn1_10, vvmemmap_base, vbfn2_11, vvec1_6, target_6)
and vvec2_7.getType().hasName("const bio_vec *")
and vbfn1_10.getType().hasName("unsigned long")
and vvmemmap_base.getType().hasName("unsigned long")
and vbfn2_11.getType().hasName("unsigned long")
and vvec1_6.getType().hasName("const bio_vec *")
and vvec2_7.getFunction() = func
and vbfn1_10.(LocalVariable).getFunction() = func
and not vvmemmap_base.getParentScope+() = func
and vbfn2_11.(LocalVariable).getFunction() = func
and vvec1_6.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
