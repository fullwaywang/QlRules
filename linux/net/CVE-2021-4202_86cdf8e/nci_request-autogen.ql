/**
 * @name linux-86cdf8e38792545161dbe3350a7eced558ba4d15-nci_request
 * @id cpp/linux/86cdf8e38792545161dbe3350a7eced558ba4d15/nci-request
 * @description linux-86cdf8e38792545161dbe3350a7eced558ba4d15-net/nfc/nci/core.c-nci_request CVE-2021-4202
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vndev_140, IfStmt target_7, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="req_lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vndev_140
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_7.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vrc_145, NotExpr target_5) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_145
	and target_1.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_1.getParent().(IfStmt).getCondition()=target_5)
}

predicate func_2(Parameter vndev_140, ReturnStmt target_6, FunctionCall target_2) {
	target_2.getTarget().hasName("test_bit")
	and target_2.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_2.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vndev_140
	and target_2.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_3(Function func, UnaryMinusExpr target_3) {
	target_3.getValue()="-100"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vreq_141, Parameter vopt_143, Parameter vtimeout_143, Variable vrc_145, Parameter vndev_140, Function func, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_145
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__nci_request")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vndev_140
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vreq_141
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vopt_143
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vtimeout_143
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(ReturnStmt target_6, Function func, NotExpr target_5) {
	target_5.getOperand() instanceof FunctionCall
	and target_5.getParent().(IfStmt).getThen()=target_6
	and target_5.getEnclosingFunction() = func
}

predicate func_6(NotExpr target_5, Function func, ReturnStmt target_6) {
	target_6.getExpr() instanceof UnaryMinusExpr
	and target_6.getParent().(IfStmt).getCondition()=target_5
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, IfStmt target_7) {
	target_7.getCondition() instanceof NotExpr
	and target_7.getThen() instanceof ReturnStmt
	and target_7.getEnclosingFunction() = func
}

from Function func, Parameter vreq_141, Parameter vopt_143, Parameter vtimeout_143, Variable vrc_145, Parameter vndev_140, ExprStmt target_0, FunctionCall target_2, UnaryMinusExpr target_3, ExprStmt target_4, NotExpr target_5, ReturnStmt target_6, IfStmt target_7
where
func_0(vndev_140, target_7, target_0)
and not func_1(vrc_145, target_5)
and func_2(vndev_140, target_6, target_2)
and func_3(func, target_3)
and func_4(vreq_141, vopt_143, vtimeout_143, vrc_145, vndev_140, func, target_4)
and func_5(target_6, func, target_5)
and func_6(target_5, func, target_6)
and func_7(func, target_7)
and vreq_141.getType().hasName("..(*)(..)")
and vopt_143.getType().hasName("const void *")
and vtimeout_143.getType().hasName("__u32")
and vrc_145.getType().hasName("int")
and vndev_140.getType().hasName("nci_dev *")
and vreq_141.getFunction() = func
and vopt_143.getFunction() = func
and vtimeout_143.getFunction() = func
and vrc_145.(LocalVariable).getFunction() = func
and vndev_140.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
