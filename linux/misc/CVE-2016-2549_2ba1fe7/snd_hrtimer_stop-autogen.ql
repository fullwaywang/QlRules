/**
 * @name linux-2ba1fe7a06d3624f9a7586d672b55f08f7c670f3-snd_hrtimer_stop
 * @id cpp/linux/2ba1fe7a06d3624f9a7586d672b55f08f7c670f3/snd-hrtimer-stop
 * @description linux-2ba1fe7a06d3624f9a7586d672b55f08f7c670f3-sound/core/hrtimer.c-snd_hrtimer_stop CVE-2016-2549
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vstime_102, AddressOfExpr target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("hrtimer_try_to_cancel")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="hrt"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstime_102
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vstime_102, AddressOfExpr target_1) {
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="running"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstime_102
}

from Function func, Variable vstime_102, AddressOfExpr target_1
where
not func_0(vstime_102, target_1, func)
and func_1(vstime_102, target_1)
and vstime_102.getType().hasName("snd_hrtimer *")
and vstime_102.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
