/**
 * @name linux-8148a73c9901a8794a50f950083c00ccf97d43b3-environ_read
 * @id cpp/linux/8148a73c9901a8794a50f950083c00ccf97d43b3/environ-read
 * @description linux-8148a73c9901a8794a50f950083c00ccf97d43b3-fs/proc/base.c-environ_read CVE-2016-7916
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmm_955, ReturnStmt target_2, NotExpr target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="env_end"
	and target_0.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_955
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vmm_955, ReturnStmt target_2, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vmm_955
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vmm_955, NotExpr target_1, ReturnStmt target_2
where
not func_0(vmm_955, target_2, target_1)
and func_1(vmm_955, target_2, target_1)
and func_2(func, target_2)
and vmm_955.getType().hasName("mm_struct *")
and vmm_955.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
