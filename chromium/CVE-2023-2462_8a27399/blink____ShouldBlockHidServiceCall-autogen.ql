/**
 * @name chromium-8a27399d0dc11027826fabe2639a8ce64a0c3863-blink____ShouldBlockHidServiceCall
 * @id cpp/chromium/8a27399d0dc11027826fabe2639a8ce64a0c3863/blinkshouldblockhidservicecall
 * @description chromium-8a27399d0dc11027826fabe2639a8ce64a0c3863-third_party/blink/renderer/modules/hid/hid.cc-blink____ShouldBlockHidServiceCall CVE-2023-2462
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_4, Function func) {
exists(ReturnStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_1.getCondition()=target_4
		)
	)
	and target_0.getExpr().(Literal).getValue()="1"
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Function func) {
exists(SwitchStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getTarget().hasName("__builtin_expect")
				and obj_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
				and obj_2.getArgument(1) instanceof Literal
			)
			and exists(ExprStmt obj_3 | obj_3=obj_1.getElse() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().hasName("DCheck")
					and obj_4.getArgument(0) instanceof StringLiteral
					and obj_4.getArgument(1) instanceof Literal
					and obj_4.getArgument(2).(StringLiteral).getValue()="context->IsWindow() || context->IsServiceWorkerGlobalScope()"
				)
			)
		)
		and obj_0.getStmt(0).(SwitchCase).getExpr() instanceof Literal
		and obj_0.getStmt(1).(SwitchCase).toString() = "default: "
	)
	and target_1.getExpr() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_2(Parameter vexception_state_39, ExprStmt target_5, FunctionCall target_6, Function func) {
exists(IfStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getCondition() |
		obj_0.getTarget().hasName("IsOpaque")
		and obj_0.getQualifier().(VariableAccess).getType().hasName("const SecurityOrigin *")
	)
	and exists(BlockStmt obj_1 | obj_1=target_2.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("ThrowSecurityError")
				and obj_3.getQualifier().(VariableAccess).getTarget()=vexception_state_39
				and obj_3.getArgument(0).(StringLiteral).getValue()="Access to the WebHID API is denied from contexts where the top-level document has an opaque origin."
			)
		)
	)
	and target_2.getElse() instanceof IfStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt
	and target_5.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getQualifier().(VariableAccess).getLocation())
)
}

predicate func_3(Parameter vcontext_38, Parameter vexception_state_39, Variable vkFeaturePolicyBlocked, NotExpr target_4, IfStmt target_3) {
	exists(NotExpr obj_0 | obj_0=target_3.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("IsFeatureEnabled")
			and obj_1.getQualifier().(VariableAccess).getTarget()=vcontext_38
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_3.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("ThrowSecurityError")
				and obj_4.getQualifier().(VariableAccess).getTarget()=vexception_state_39
				and obj_4.getArgument(0).(VariableAccess).getTarget()=vkFeaturePolicyBlocked
			)
		)
	)
	and target_3.getParent().(IfStmt).getCondition()=target_4
}

predicate func_4(Parameter vcontext_38, NotExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vcontext_38
}

predicate func_5(Parameter vexception_state_39, Variable vkFeaturePolicyBlocked, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("ThrowSecurityError")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_39
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vkFeaturePolicyBlocked
	)
}

predicate func_6(Parameter vexception_state_39, FunctionCall target_6) {
	target_6.getTarget().hasName("HadException")
	and target_6.getQualifier().(VariableAccess).getTarget()=vexception_state_39
}

from Function func, Parameter vcontext_38, Parameter vexception_state_39, Variable vkFeaturePolicyBlocked, IfStmt target_3, NotExpr target_4, ExprStmt target_5, FunctionCall target_6
where
not func_0(target_4, func)
and not func_1(func)
and not func_2(vexception_state_39, target_5, target_6, func)
and func_3(vcontext_38, vexception_state_39, vkFeaturePolicyBlocked, target_4, target_3)
and func_4(vcontext_38, target_4)
and func_5(vexception_state_39, vkFeaturePolicyBlocked, target_5)
and func_6(vexception_state_39, target_6)
and vcontext_38.getType().hasName("ExecutionContext *")
and vexception_state_39.getType().hasName("ExceptionState &")
and vkFeaturePolicyBlocked.getType() instanceof ArrayType
and vcontext_38.getFunction() = func
and vexception_state_39.getFunction() = func
and not vkFeaturePolicyBlocked.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
