/**
 * @name linux-02f76c401d17e409ed45bf7887148fcc22c93c85-smb2_find_context_vals
 * @id cpp/linux/02f76c401d17e409ed45bf7887148fcc22c93c85/smb2-find-context-vals
 * @description linux-02f76c401d17e409ed45bf7887148fcc22c93c85-fs/ksmbd/oplock.c-smb2_find_context_vals CVE-2023-38426
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vname_len_1462, ReturnStmt target_5, LogicalOrExpr target_6) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vname_len_1462
	and target_0.getLeftOperand().(EqualityOperation).getRightOperand().(VariableAccess).getType().hasName("int")
	and target_0.getRightOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_0.getParent().(IfStmt).getThen()=target_5
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vtag_1456, Variable vname_1460, Variable vname_len_1462, ReturnStmt target_5, FunctionCall target_3) {
	target_3.getTarget().hasName("memcmp")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vname_1460
	and target_3.getArgument(1).(VariableAccess).getTarget()=vtag_1456
	and target_3.getArgument(2).(VariableAccess).getTarget()=vname_len_1462
	and target_3.getParent().(EQExpr).getRightOperand() instanceof Literal
	and target_3.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Function func, ReturnStmt target_5) {
	target_5.getExpr().(VariableAccess).getTarget().getType().hasName("create_context *")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vname_len_1462, LogicalOrExpr target_6) {
	target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vname_len_1462
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="4"
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vname_len_1462
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(HexLiteral).getValue()="7"
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_6.getLeftOperand().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getLeftOperand().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getLeftOperand().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getLeftOperand().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vname_len_1462
	and target_6.getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Parameter vtag_1456, Variable vname_1460, Variable vname_len_1462, FunctionCall target_3, ReturnStmt target_5, LogicalOrExpr target_6
where
not func_0(vname_len_1462, target_5, target_6)
and func_3(vtag_1456, vname_1460, vname_len_1462, target_5, target_3)
and func_5(func, target_5)
and func_6(vname_len_1462, target_6)
and vtag_1456.getType().hasName("const char *")
and vname_1460.getType().hasName("char *")
and vname_len_1462.getType().hasName("unsigned int")
and vtag_1456.getFunction() = func
and vname_1460.(LocalVariable).getFunction() = func
and vname_len_1462.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
