/**
 * @name linux-962b2a3188bfa5388756ffbc47dfa5ff59cb8011-hwmon_thermal_add_sensor
 * @id cpp/linux/962b2a3188bfa5388756ffbc47dfa5ff59cb8011/hwmon-thermal-add-sensor
 * @description linux-962b2a3188bfa5388756ffbc47dfa5ff59cb8011-drivers/hwmon/hwmon.c-hwmon_thermal_add_sensor CVE-2022-48942
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtzd_169, LogicalAndExpr target_6, ExprStmt target_7) {
exists(IfStmt target_0 |
	exists(ReturnStmt obj_0 | obj_0=target_0.getThen() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("PTR_ERR")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vtzd_169
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_3.getCondition()=target_6
		)
	)
	and target_0.getCondition() instanceof EqualityOperation
	and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vindex_165, Parameter vdev_165, LogicalAndExpr target_6, ExprStmt target_8) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddExpr obj_1 | obj_1=obj_0.getArgument(2) |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vindex_165
			and obj_1.getRightOperand().(Literal).getValue()="1"
		)
		and obj_0.getTarget().hasName("_dev_info")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdev_165
		and obj_0.getArgument(1).(StringLiteral).getValue()="temp%d_input not attached to any thermal zone\n"
	)
	and exists(BlockStmt obj_2 | obj_2=target_1.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(1)=target_1
			and obj_3.getCondition()=target_6
		)
	)
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(2).(AddExpr).getLeftOperand().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vtdata_168, Parameter vdev_165, LogicalAndExpr target_6, ExprStmt target_8, AddressOfExpr target_9, ExprStmt target_10) {
exists(ExprStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("devm_kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdev_165
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vtdata_168
	)
	and exists(BlockStmt obj_1 | obj_1=target_2.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(2)=target_2
			and obj_2.getCondition()=target_6
		)
	)
	and exists(FunctionCall obj_3 | obj_3=target_2.getExpr() |
		obj_3.getArgument(1).(VariableAccess).getLocation().isBefore(target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and obj_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	)
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
)
}

predicate func_3(LogicalAndExpr target_6, Function func) {
exists(ReturnStmt target_3 |
	exists(BlockStmt obj_0 | obj_0=target_3.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(3)=target_3
			and obj_1.getCondition()=target_6
		)
	)
	and target_3.getExpr().(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(Variable vtzd_169, ReturnStmt target_11, FunctionCall target_4) {
	exists(LogicalAndExpr obj_0 | obj_0=target_4.getParent() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getRightOperand() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("PTR_ERR")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vtzd_169
			)
			and obj_1.getRightOperand().(UnaryMinusExpr).getValue()="-19"
		)
		and obj_0.getParent().(IfStmt).getThen()=target_11
	)
	and target_4.getTarget().hasName("IS_ERR")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vtzd_169
}

/*predicate func_5(Variable vtzd_169, ReturnStmt target_11, EqualityOperation target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getLeftOperand() |
		obj_0.getTarget().hasName("PTR_ERR")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vtzd_169
	)
	and exists(LogicalAndExpr obj_1 | obj_1=target_5.getParent() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
			obj_2.getTarget().hasName("IS_ERR")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vtzd_169
		)
		and obj_1.getParent().(IfStmt).getThen()=target_11
	)
	and target_5.getRightOperand().(UnaryMinusExpr).getValue()="-19"
}

*/
predicate func_6(ReturnStmt target_11, Function func, LogicalAndExpr target_6) {
	target_6.getLeftOperand() instanceof FunctionCall
	and target_6.getRightOperand() instanceof EqualityOperation
	and target_6.getParent().(IfStmt).getThen()=target_11
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vtdata_168, Variable vtzd_169, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="tzd"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vtdata_168
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vtzd_169
	)
}

predicate func_8(Parameter vindex_165, Variable vtdata_168, Variable vtzd_169, Parameter vdev_165, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("devm_thermal_zone_of_sensor_register")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vdev_165
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vindex_165
			and obj_1.getArgument(2).(VariableAccess).getTarget()=vtdata_168
			and obj_1.getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const thermal_zone_of_device_ops")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vtzd_169
	)
}

predicate func_9(Variable vtdata_168, Parameter vdev_165, AddressOfExpr target_9) {
	exists(PointerFieldAccess obj_0 | obj_0=target_9.getOperand() |
		obj_0.getTarget().getName()="node"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vtdata_168
	)
	and exists(FunctionCall obj_1 | obj_1=target_9.getParent() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				obj_3.getTarget().hasName("devm_add_action")
				and obj_3.getArgument(0).(VariableAccess).getTarget()=vdev_165
			)
		)
	)
}

predicate func_10(Variable vtdata_168, Parameter vdev_165, ExprStmt target_10) {
	exists(AssignExpr obj_0 | obj_0=target_10.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(2) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="node"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vtdata_168
				)
			)
			and obj_1.getTarget().hasName("devm_add_action")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vdev_165
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_11(Variable vtzd_169, ReturnStmt target_11) {
	exists(FunctionCall obj_0 | obj_0=target_11.getExpr() |
		obj_0.getTarget().hasName("PTR_ERR")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vtzd_169
	)
}

from Function func, Parameter vindex_165, Variable vtdata_168, Variable vtzd_169, Parameter vdev_165, FunctionCall target_4, LogicalAndExpr target_6, ExprStmt target_7, ExprStmt target_8, AddressOfExpr target_9, ExprStmt target_10, ReturnStmt target_11
where
not func_0(vtzd_169, target_6, target_7)
and not func_1(vindex_165, vdev_165, target_6, target_8)
and not func_2(vtdata_168, vdev_165, target_6, target_8, target_9, target_10)
and not func_3(target_6, func)
and func_4(vtzd_169, target_11, target_4)
and func_6(target_11, func, target_6)
and func_7(vtdata_168, vtzd_169, target_7)
and func_8(vindex_165, vtdata_168, vtzd_169, vdev_165, target_8)
and func_9(vtdata_168, vdev_165, target_9)
and func_10(vtdata_168, vdev_165, target_10)
and func_11(vtzd_169, target_11)
and vindex_165.getType().hasName("int")
and vtdata_168.getType().hasName("hwmon_thermal_data *")
and vtzd_169.getType().hasName("thermal_zone_device *")
and vdev_165.getType().hasName("device *")
and vindex_165.getFunction() = func
and vtdata_168.(LocalVariable).getFunction() = func
and vtzd_169.(LocalVariable).getFunction() = func
and vdev_165.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
