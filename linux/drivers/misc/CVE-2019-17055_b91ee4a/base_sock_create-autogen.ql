/**
 * @name linux-b91ee4aa2a2199ba4d4650706c272985a5a32d80-base_sock_create
 * @id cpp/linux/b91ee4aa2a2199ba4d4650706c272985a5a32d80/base-sock-create
 * @description linux-b91ee4aa2a2199ba4d4650706c272985a5a32d80-drivers/isdn/mISDN/socket.c-base_sock_create CVE-2019-17055
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("capable")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(Literal).getValue()="13"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sock *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sk_alloc")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="34"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(BitwiseOrExpr).getValue()="3264"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("proto")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
