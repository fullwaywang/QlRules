/**
 * @name linux-33dccbb050bbe35b88ca8cf1228dcf3e4d4b3554-tun_chr_close
 * @id cpp/linux/33dccbb050bbe35b88ca8cf1228dcf3e4d4b3554/tun-chr-close
 * @description linux-33dccbb050bbe35b88ca8cf1228dcf3e4d4b3554-drivers/net/tun.c-tun_chr_close CVE-2009-1897
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtun_1211, ConditionalExpr target_2, ExprStmt target_1) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("sock_put")
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="sk"
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtun_1211
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtun_1211, ConditionalExpr target_2, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("unregister_netdevice")
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtun_1211
		and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vtun_1211, ConditionalExpr target_2) {
		target_2.getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtun_1211
		and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand() instanceof Literal
		and target_2.getThen().(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_2.getThen().(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtun_1211
		and target_2.getThen().(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand() instanceof Literal
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getThen().(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="hit"
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getElse().(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="miss"
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vtun_1211, ExprStmt target_1, ConditionalExpr target_2
where
not func_0(vtun_1211, target_2, target_1)
and func_1(vtun_1211, target_2, target_1)
and func_2(vtun_1211, target_2)
and vtun_1211.getType().hasName("tun_struct *")
and vtun_1211.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
