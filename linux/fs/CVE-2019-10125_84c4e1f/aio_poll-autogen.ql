/**
 * @name linux-84c4e1f89fefe70554da0ab33be72c9be7994379-aio_poll
 * @id cpp/linux/84c4e1f89fefe70554da0ab33be72c9be7994379/aio-poll
 * @description linux-84c4e1f89fefe70554da0ab33be72c9be7994379-fs/aio.c-aio_poll CVE-2019-10125
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vapt_1734, FunctionCall target_4, ReturnStmt target_0) {
	target_0.getExpr().(ValueFieldAccess).getTarget().getName()="error"
	and target_0.getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vapt_1734
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_1(Parameter viocb_1730, Variable vreq_1733, Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="file"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1733
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fget")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="aio_fildes"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=viocb_1730
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vreq_1733, Function func, IfStmt target_2) {
	target_2.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="file"
	and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1733
	and target_2.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-9"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vreq_1733, FunctionCall target_4, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("fput")
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="file"
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1733
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_4(Variable vapt_1734, FunctionCall target_4) {
	target_4.getTarget().hasName("__builtin_expect")
	and target_4.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(ValueFieldAccess).getTarget().getName()="error"
	and target_4.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vapt_1734
	and target_4.getArgument(1).(Literal).getValue()="0"
}

from Function func, Parameter viocb_1730, Variable vreq_1733, Variable vapt_1734, ReturnStmt target_0, ExprStmt target_1, IfStmt target_2, ExprStmt target_3, FunctionCall target_4
where
func_0(vapt_1734, target_4, target_0)
and func_1(viocb_1730, vreq_1733, func, target_1)
and func_2(vreq_1733, func, target_2)
and func_3(vreq_1733, target_4, target_3)
and func_4(vapt_1734, target_4)
and viocb_1730.getType().hasName("const iocb *")
and vreq_1733.getType().hasName("poll_iocb *")
and vapt_1734.getType().hasName("aio_poll_table")
and viocb_1730.getFunction() = func
and vreq_1733.(LocalVariable).getFunction() = func
and vapt_1734.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
