/**
 * @name linux-3d32aaa7e66d5c1479a3c31d6c2c5d45dd0d3b89-table_clear
 * @id cpp/linux/3d32aaa7e66d5c1479a3c31d6c2c5d45dd0d3b89/table-clear
 * @description linux-3d32aaa7e66d5c1479a3c31d6c2c5d45dd0d3b89-drivers/md/dm-ioctl.c-table_clear CVE-2023-2269
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhc_1539, Variable vmd_1540, ExprStmt target_4, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmd_1540
	and target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="md"
	and target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhc_1539
	and target_4.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable v_hash_lock, ExprStmt target_4, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("up_write")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v_hash_lock
	and target_4.getLocation().isBefore(target_1.getLocation())
}

predicate func_3(Variable vhc_1539, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="md"
	and target_3.getQualifier().(VariableAccess).getTarget()=vhc_1539
}

predicate func_4(Variable vhc_1539, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("__dev_status")
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="md"
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhc_1539
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("dm_ioctl *")
}

from Function func, Variable vhc_1539, Variable vmd_1540, Variable v_hash_lock, ExprStmt target_0, ExprStmt target_1, PointerFieldAccess target_3, ExprStmt target_4
where
func_0(vhc_1539, vmd_1540, target_4, target_0)
and func_1(v_hash_lock, target_4, target_1)
and func_3(vhc_1539, target_3)
and func_4(vhc_1539, target_4)
and vhc_1539.getType().hasName("hash_cell *")
and vmd_1540.getType().hasName("mapped_device *")
and v_hash_lock.getType().hasName("rw_semaphore")
and vhc_1539.(LocalVariable).getFunction() = func
and vmd_1540.(LocalVariable).getFunction() = func
and not v_hash_lock.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
