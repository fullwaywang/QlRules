/**
 * @name linux-33ab91103b3415e12457e3104f0e4517ce12d0f3-load_segment_descriptor
 * @id cpp/linux/33ab91103b3415e12457e3104f0e4517ce12d0f3/load-segment-descriptor
 * @description linux-33ab91103b3415e12457e3104f0e4517ce12d0f3-arch/x86/kvm/emulate.c-load_segment_descriptor CVE-2017-2583
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctxt_1750, Parameter vselector_1751, Parameter vseg_1751, VariableCall target_1, FunctionCall target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vseg_1751
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vselector_1751
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="3"
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="mode"
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_1750
		and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("emulate_exception")
		and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctxt_1750
		and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="13"
		and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vctxt_1750, VariableCall target_1) {
		target_1.getExpr().(PointerFieldAccess).getTarget().getName()="cpl"
		and target_1.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
		and target_1.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_1750
		and target_1.getArgument(0).(VariableAccess).getTarget()=vctxt_1750
}

predicate func_2(Parameter vctxt_1750, Parameter vselector_1751, Parameter vseg_1751, FunctionCall target_2) {
		target_2.getTarget().hasName("__load_segment_descriptor")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vctxt_1750
		and target_2.getArgument(1).(VariableAccess).getTarget()=vselector_1751
		and target_2.getArgument(2).(VariableAccess).getTarget()=vseg_1751
		and target_2.getArgument(3).(VariableAccess).getTarget().getType().hasName("u8")
		and target_2.getArgument(5).(Literal).getValue()="0"
}

from Function func, Parameter vctxt_1750, Parameter vselector_1751, Parameter vseg_1751, VariableCall target_1, FunctionCall target_2
where
not func_0(vctxt_1750, vselector_1751, vseg_1751, target_1, target_2, func)
and func_1(vctxt_1750, target_1)
and func_2(vctxt_1750, vselector_1751, vseg_1751, target_2)
and vctxt_1750.getType().hasName("x86_emulate_ctxt *")
and vselector_1751.getType().hasName("u16")
and vseg_1751.getType().hasName("int")
and vctxt_1750.getFunction() = func
and vselector_1751.getFunction() = func
and vseg_1751.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
