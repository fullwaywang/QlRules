/**
 * @name linux-f299ee709fb45036454ca11e90cb2810fe771878-rvu_dbg_qsize_write
 * @id cpp/linux/f299ee709fb45036454ca11e90cb2810fe771878/rvu-dbg-qsize-write
 * @description linux-f299ee709fb45036454ca11e90cb2810fe771878-drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c-rvu_dbg_qsize_write CVE-2024-36957
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcount_990, Variable vcmd_buf_995, Parameter vbuffer_990, FunctionCall target_0) {
	target_0.getTarget().hasName("memdup_user")
	and not target_0.getTarget().hasName("memdup_user_nul")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuffer_990
	and target_0.getArgument(1).(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vcount_990
	and target_0.getArgument(1).(AddExpr).getRightOperand() instanceof Literal
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcmd_buf_995
}

predicate func_1(Parameter vcount_990, VariableAccess target_1) {
	target_1.getTarget()=vcount_990
	and target_1.getParent().(AddExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Parameter vcount_990, Variable vcmd_buf_995, Function func, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcmd_buf_995
	and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vcount_990
	and target_3.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

from Function func, Parameter vcount_990, Variable vcmd_buf_995, Parameter vbuffer_990, FunctionCall target_0, VariableAccess target_1, ExprStmt target_3
where
func_0(vcount_990, vcmd_buf_995, vbuffer_990, target_0)
and func_1(vcount_990, target_1)
and func_3(vcount_990, vcmd_buf_995, func, target_3)
and vcount_990.getType().hasName("size_t")
and vcmd_buf_995.getType().hasName("char *")
and vbuffer_990.getType().hasName("const char *")
and vcount_990.getFunction() = func
and vcmd_buf_995.(LocalVariable).getFunction() = func
and vbuffer_990.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
