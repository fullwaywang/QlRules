/**
 * @name linux-cdd10c9627496ad25c87ce6394e29752253c69d3-pppol2tp_session_close
 * @id cpp/linux/cdd10c9627496ad25c87ce6394e29752253c69d3/pppol2tp-session-close
 * @description linux-cdd10c9627496ad25c87ce6394e29752253c69d3-net/l2tp/l2tp_ppp.c-pppol2tp_session_close CVE-2020-0429
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsock_436, VariableAccess target_2, ExprStmt target_0) {
		target_0.getExpr().(FunctionCall).getTarget().hasName("inet_shutdown")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsock_436
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="2"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_1(Parameter vsession_432, VariableAccess target_2, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("l2tp_session_inc_refcount_1")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsession_432
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vsock_436, BlockStmt target_3, VariableAccess target_2) {
		target_2.getTarget()=vsock_436
		and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Function func, BlockStmt target_3) {
		target_3.getStmt(0) instanceof ExprStmt
		and target_3.getStmt(1) instanceof ExprStmt
		and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vsession_432, Variable vsock_436, ExprStmt target_0, ExprStmt target_1, VariableAccess target_2, BlockStmt target_3
where
func_0(vsock_436, target_2, target_0)
and func_1(vsession_432, target_2, target_1)
and func_2(vsock_436, target_3, target_2)
and func_3(func, target_3)
and vsession_432.getType().hasName("l2tp_session *")
and vsock_436.getType().hasName("socket *")
and vsession_432.getFunction() = func
and vsock_436.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
