/**
 * @name linux-06e7e776ca4d36547e503279aeff996cbb292c16-l2cap_parse_conf_rsp
 * @id cpp/linux/06e7e776ca4d36547e503279aeff996cbb292c16/l2cap-parse-conf-rsp
 * @description linux-06e7e776ca4d36547e503279aeff996cbb292c16-net/bluetooth/l2cap_core.c-l2cap_parse_conf_rsp CVE-2017-1000410
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vefs_3543, Parameter vchan_3534, VariableAccess target_3, IfStmt target_0) {
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="local_stype"
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchan_3534
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="stype"
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vefs_3543
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="stype"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vefs_3543
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="local_stype"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchan_3534
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-111"
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_3
}

predicate func_1(Variable vptr_3538, Variable vendptr_3539, Variable vefs_3543, VariableAccess target_3, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("l2cap_add_conf_opt")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vptr_3538
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="6"
	and target_1.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="16"
	and target_1.getExpr().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vefs_3543
	and target_1.getExpr().(FunctionCall).getArgument(4).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vendptr_3539
	and target_1.getExpr().(FunctionCall).getArgument(4).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vptr_3538
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_3
}

predicate func_2(Variable volen_3540, Variable vval_3541, Variable vefs_3543, EqualityOperation target_4, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vefs_3543
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vval_3541
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=volen_3540
	and target_2.getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Variable vtype_3540, VariableAccess target_3) {
	target_3.getTarget()=vtype_3540
}

predicate func_4(Variable volen_3540, EqualityOperation target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget()=volen_3540
	and target_4.getRightOperand().(SizeofExprOperator).getValue()="16"
}

from Function func, Variable vptr_3538, Variable vendptr_3539, Variable vtype_3540, Variable volen_3540, Variable vval_3541, Variable vefs_3543, Parameter vchan_3534, IfStmt target_0, ExprStmt target_1, ExprStmt target_2, VariableAccess target_3, EqualityOperation target_4
where
func_0(vefs_3543, vchan_3534, target_3, target_0)
and func_1(vptr_3538, vendptr_3539, vefs_3543, target_3, target_1)
and func_2(volen_3540, vval_3541, vefs_3543, target_4, target_2)
and func_3(vtype_3540, target_3)
and func_4(volen_3540, target_4)
and vptr_3538.getType().hasName("void *")
and vendptr_3539.getType().hasName("void *")
and vtype_3540.getType().hasName("int")
and volen_3540.getType().hasName("int")
and vval_3541.getType().hasName("unsigned long")
and vefs_3543.getType().hasName("l2cap_conf_efs")
and vchan_3534.getType().hasName("l2cap_chan *")
and vptr_3538.(LocalVariable).getFunction() = func
and vendptr_3539.(LocalVariable).getFunction() = func
and vtype_3540.(LocalVariable).getFunction() = func
and volen_3540.(LocalVariable).getFunction() = func
and vval_3541.(LocalVariable).getFunction() = func
and vefs_3543.(LocalVariable).getFunction() = func
and vchan_3534.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
