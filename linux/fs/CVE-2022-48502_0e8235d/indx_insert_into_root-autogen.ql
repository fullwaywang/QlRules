/**
 * @name linux-0e8235d28f3a0e9eda9f02ff67ee566d5f42b66b-indx_insert_into_root
 * @id cpp/linux/0e8235d28f3a0e9eda9f02ff67ee566d5f42b66b/indx-insert-into-root
 * @description linux-0e8235d28f3a0e9eda9f02ff67ee566d5f42b66b-fs/ntfs3/index.c-indx_insert_into_root CVE-2022-48502
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vattr_1478, Variable vasize_1484, Variable va_root_1488, FunctionCall target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vattr_1478
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=va_root_1488
	and target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vasize_1484
	and target_0.getParent().(IfStmt).getCondition()=target_1
}

predicate func_1(Variable vattr_1478, FunctionCall target_1) {
	target_1.getTarget().hasName("mi_resize_attr")
	and target_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("mft_inode *")
	and target_1.getArgument(1).(VariableAccess).getTarget()=vattr_1478
	and target_1.getArgument(2).(UnaryMinusExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vattr_1478, Variable vasize_1484, Variable va_root_1488, ExprStmt target_0, FunctionCall target_1
where
func_0(vattr_1478, vasize_1484, va_root_1488, target_1, target_0)
and func_1(vattr_1478, target_1)
and vattr_1478.getType().hasName("ATTRIB *")
and vasize_1484.getType().hasName("u32")
and va_root_1488.getType().hasName("INDEX_ROOT *")
and vattr_1478.(LocalVariable).getFunction() = func
and vasize_1484.(LocalVariable).getFunction() = func
and va_root_1488.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
