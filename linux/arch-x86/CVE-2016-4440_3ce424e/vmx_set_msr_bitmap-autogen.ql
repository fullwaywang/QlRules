/**
 * @name linux-3ce424e45411cf5a13105e0386b6ecf6eeb4f66f-vmx_set_msr_bitmap
 * @id cpp/linux/3ce424e45411cf5a13105e0386b6ecf6eeb4f66f/vmx-set-msr-bitmap
 * @description linux-3ce424e45411cf5a13105e0386b6ecf6eeb4f66f-arch/x86/kvm/vmx.c-vmx_set_msr_bitmap CVE-2016-4440
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="10"
	and not target_0.getValue()="16"
	and target_0.getParent().(LShiftExpr).getParent().(BitwiseAndExpr).getRightOperand() instanceof BinaryBitwiseOperation
	and target_0.getEnclosingFunction() = func
}

predicate func_1(BlockStmt target_3, Function func) {
exists(LogicalAndExpr target_1 |
	target_1.getLeftOperand().(FunctionCall).getTarget().hasName("cpu_has_secondary_exec_ctrls")
	and target_1.getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("vmcs_read32")
	and target_1.getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="16"
	and target_1.getParent().(IfStmt).getThen()=target_3
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Parameter vvcpu_2415, BlockStmt target_3, BitwiseAndExpr target_2) {
	target_2.getLeftOperand().(ValueFieldAccess).getTarget().getName()="apic_base"
	and target_2.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_2.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_2415
	and target_2.getRightOperand().(BinaryBitwiseOperation).getValue()="1024"
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Parameter vvcpu_2415, BlockStmt target_3) {
	target_3.getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("is_long_mode")
	and target_3.getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_2415
	and target_3.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long *")
	and target_3.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("unsigned long *")
	and target_3.getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long *")
	and target_3.getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("unsigned long *")
}

from Function func, Parameter vvcpu_2415, Literal target_0, BitwiseAndExpr target_2, BlockStmt target_3
where
func_0(func, target_0)
and not func_1(target_3, func)
and func_2(vvcpu_2415, target_3, target_2)
and func_3(vvcpu_2415, target_3)
and vvcpu_2415.getType().hasName("kvm_vcpu *")
and vvcpu_2415.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
