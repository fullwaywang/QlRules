/**
 * @name linux-c9b3fc4f157867e858734e31022ebee8a24f0de7-__sctp_hash_endpoint
 * @id cpp/linux/c9b3fc4f157867e858734e31022ebee8a24f0de7/--sctp-hash-endpoint
 * @description linux-c9b3fc4f157867e858734e31022ebee8a24f0de7-net/sctp/input.c-__sctp_hash_endpoint CVE-2024-44935
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="1"
	and not target_0.getValue()="0"
	and target_0.getParent() instanceof Initializer
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="0"
	and not target_1.getValue()="1"
	and target_1.getParent().(ReturnStmt).getParent().(BlockStmt).getStmt(9) instanceof ReturnStmt
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable verr_733, ValueFieldAccess target_7) {
exists(ExprStmt target_2 |
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=verr_733
		and obj_0.getRValue().(Literal).getValue()="1"
	)
	and exists(BlockStmt obj_1 | obj_1=target_2.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(4)=target_2
			and obj_2.getCondition()=target_7
		)
	)
)
}

predicate func_3(VariableAccess target_13, Function func) {
exists(GotoStmt target_3 |
	target_3.getName() ="out"
	and target_3.getParent().(IfStmt).getCondition()=target_13
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(RelationalOperation target_14, Function func) {
exists(GotoStmt target_4 |
	exists(BlockStmt obj_0 | obj_0=target_4.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(0)=target_4
			and obj_1.getCondition()=target_14
		)
	)
	and target_4.getName() ="out"
	and target_4.getEnclosingFunction() = func
)
}

predicate func_5(VariableAccess target_15, Function func) {
exists(GotoStmt target_5 |
	target_5.getName() ="out"
	and target_5.getParent().(IfStmt).getCondition()=target_15
	and target_5.getEnclosingFunction() = func
)
}

predicate func_7(Variable vsk_722, ValueFieldAccess target_7) {
	exists(PointerFieldAccess obj_0 | obj_0=target_7.getQualifier() |
		obj_0.getTarget().getName()="__sk_common"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vsk_722
	)
	and target_7.getTarget().getName()="skc_reuseport"
}

predicate func_8(Variable verr_733, VariableAccess target_13, ReturnStmt target_8) {
	target_8.getExpr().(VariableAccess).getTarget()=verr_733
	and target_8.getParent().(IfStmt).getCondition()=target_13
}

predicate func_9(Variable verr_733, BlockStmt target_16, VariableAccess target_9) {
	target_9.getTarget()=verr_733
	and target_9.getParent().(IfStmt).getThen()=target_16
}

predicate func_10(Variable verr_733, RelationalOperation target_14, IfStmt target_17, ReturnStmt target_10) {
	target_10.getExpr().(VariableAccess).getTarget()=verr_733
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_10.getExpr().(VariableAccess).getLocation().isBefore(target_17.getCondition().(VariableAccess).getLocation())
}

predicate func_11(Variable verr_733, VariableAccess target_15, IfStmt target_18, ReturnStmt target_11) {
	target_11.getExpr().(VariableAccess).getTarget()=verr_733
	and target_11.getParent().(IfStmt).getCondition()=target_15
	and target_18.getCondition().(VariableAccess).getLocation().isBefore(target_11.getExpr().(VariableAccess).getLocation())
}

predicate func_12(Function func, ReturnStmt target_12) {
	target_12.getExpr() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Variable verr_733, ReturnStmt target_8, VariableAccess target_13) {
	target_13.getTarget()=verr_733
	and target_13.getParent().(IfStmt).getThen()=target_8
}

predicate func_14(Variable verr_733, RelationalOperation target_14) {
	 (target_14 instanceof GTExpr or target_14 instanceof LTExpr)
	and target_14.getLesserOperand().(VariableAccess).getTarget()=verr_733
	and target_14.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_15(Variable verr_733, ReturnStmt target_11, VariableAccess target_15) {
	target_15.getTarget()=verr_733
	and target_15.getParent().(IfStmt).getThen()=target_11
}

predicate func_16(Variable vsk_722, Variable verr_733, BlockStmt target_16) {
	exists(ExprStmt obj_0 | obj_0=target_16.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("reuseport_alloc")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vsk_722
				and obj_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("bool")
			)
			and obj_1.getLValue().(VariableAccess).getTarget()=verr_733
		)
	)
	and exists(IfStmt obj_3 | obj_3=target_16.getStmt(1) |
		obj_3.getCondition().(VariableAccess).getTarget()=verr_733
		and obj_3.getThen() instanceof ReturnStmt
	)
}

predicate func_17(Variable vsk_722, Variable verr_733, IfStmt target_17) {
	exists(BlockStmt obj_0 | obj_0=target_17.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
					obj_3.getTarget().hasName("reuseport_alloc")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=vsk_722
					and obj_3.getArgument(1).(VariableAccess).getTarget().getType().hasName("bool")
				)
				and obj_2.getLValue().(VariableAccess).getTarget()=verr_733
			)
		)
		and exists(IfStmt obj_4 | obj_4=obj_0.getStmt(1) |
			obj_4.getCondition().(VariableAccess).getTarget()=verr_733
			and obj_4.getThen() instanceof ReturnStmt
		)
	)
	and target_17.getCondition().(VariableAccess).getTarget()=verr_733
}

predicate func_18(Variable verr_733, IfStmt target_18) {
	target_18.getCondition().(VariableAccess).getTarget()=verr_733
	and target_18.getThen() instanceof ReturnStmt
}

from Function func, Variable vsk_722, Variable verr_733, Literal target_0, Literal target_1, ValueFieldAccess target_7, ReturnStmt target_8, VariableAccess target_9, ReturnStmt target_10, ReturnStmt target_11, ReturnStmt target_12, VariableAccess target_13, RelationalOperation target_14, VariableAccess target_15, BlockStmt target_16, IfStmt target_17, IfStmt target_18
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(verr_733, target_7)
and not func_3(target_13, func)
and not func_4(target_14, func)
and not func_5(target_15, func)
and func_7(vsk_722, target_7)
and func_8(verr_733, target_13, target_8)
and func_9(verr_733, target_16, target_9)
and func_10(verr_733, target_14, target_17, target_10)
and func_11(verr_733, target_15, target_18, target_11)
and func_12(func, target_12)
and func_13(verr_733, target_8, target_13)
and func_14(verr_733, target_14)
and func_15(verr_733, target_11, target_15)
and func_16(vsk_722, verr_733, target_16)
and func_17(vsk_722, verr_733, target_17)
and func_18(verr_733, target_18)
and vsk_722.getType().hasName("sock *")
and verr_733.getType().hasName("int")
and vsk_722.(LocalVariable).getFunction() = func
and verr_733.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
