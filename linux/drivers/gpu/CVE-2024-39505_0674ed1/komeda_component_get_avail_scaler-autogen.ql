/**
 * @name linux-0674ed1e58e2fdcc155e7d944f8aad007a94ac69-komeda_component_get_avail_scaler
 * @id cpp/linux/0674ed1e58e2fdcc155e7d944f8aad007a94ac69/komeda-component-get-avail-scaler
 * @description linux-0674ed1e58e2fdcc155e7d944f8aad007a94ac69-drivers/gpu/drm/arm/display/komeda/komeda_pipeline_state.c-komeda_component_get_avail_scaler CVE-2024-39505
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpipe_st_258, ReturnStmt target_3, ExprStmt target_4) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("IS_ERR_OR_NULL")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vpipe_st_258
	and target_0.getParent().(IfStmt).getThen()=target_3
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(BitwiseXorExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vpipe_st_258, ReturnStmt target_3, VariableAccess target_1) {
	target_1.getTarget()=vpipe_st_258
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Variable vpipe_st_258, ReturnStmt target_3, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vpipe_st_258
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Function func, ReturnStmt target_3) {
	target_3.getExpr().(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vpipe_st_258, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(BitwiseXorExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BitwiseAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getTarget().getName()="active_comps"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vpipe_st_258
				)
				and obj_2.getRightOperand().(BitwiseOrExpr).getValue()="768"
			)
			and obj_1.getRightOperand().(BitwiseOrExpr).getValue()="768"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("u32")
	)
}

from Function func, Variable vpipe_st_258, VariableAccess target_1, NotExpr target_2, ReturnStmt target_3, ExprStmt target_4
where
not func_0(vpipe_st_258, target_3, target_4)
and func_1(vpipe_st_258, target_3, target_1)
and func_2(vpipe_st_258, target_3, target_2)
and func_3(func, target_3)
and func_4(vpipe_st_258, target_4)
and vpipe_st_258.getType().hasName("komeda_pipeline_state *")
and vpipe_st_258.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
