/**
 * @name linux-29a8d4e02fd4840028c38ceb1536cc8f82a257d4-proc_cpuset_show
 * @id cpp/linux/29a8d4e02fd4840028c38ceb1536cc8f82a257d4/proc-cpuset-show
 * @description linux-29a8d4e02fd4840028c38ceb1536cc8f82a257d4-kernel/cgroup/cpuset.c-proc_cpuset_show CVE-2024-43853
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtsk_4205, Variable vcss_4208, FunctionCall target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget()=vcss_4208
	)
	and target_0.getTarget().hasName("task_get_css")
	and not target_0.getTarget().hasName("task_css")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vtsk_4205
}

predicate func_1(Variable vbuf_4207, Variable vcss_4208, FunctionCall target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getArgument(0) |
		obj_0.getTarget().getName()="cgroup"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcss_4208
	)
	and exists(PointerFieldAccess obj_1 | obj_1=target_1.getArgument(3) |
		exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
			obj_2.getTarget().getName()="nsproxy"
			and obj_2.getQualifier().(FunctionCall).getTarget().hasName("get_current")
		)
		and obj_1.getTarget().getName()="cgroup_ns"
	)
	and exists(AssignExpr obj_3 | obj_3=target_1.getParent() |
		obj_3.getRValue() = target_1
		and obj_3.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_1.getTarget().hasName("cgroup_path_ns")
	and not target_1.getTarget().hasName("cgroup_path_ns_locked")
	and target_1.getArgument(1).(VariableAccess).getTarget()=vbuf_4207
	and target_1.getArgument(2).(Literal).getValue()="4096"
}

predicate func_2(Variable vcss_4208, FunctionCall target_2) {
	target_2.getTarget().hasName("css_put")
	and not target_2.getTarget().hasName("rcu_read_lock")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vcss_4208
}

predicate func_3(ExprStmt target_7, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("rcu_read_lock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_7.getLocation())
)
}

predicate func_4(ExprStmt target_7, Function func) {
exists(ExprStmt target_4 |
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		obj_0.getTarget().hasName("spin_lock_irq")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("spinlock_t")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_7.getLocation())
)
}

predicate func_5(ExprStmt target_8, Function func) {
exists(ExprStmt target_5 |
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("spin_unlock_irq")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("spinlock_t")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getLocation().isBefore(target_8.getLocation())
)
}

predicate func_6(Function func) {
exists(FunctionCall target_6 |
	target_6.getTarget().hasName("rcu_read_unlock")
	and target_6.getEnclosingFunction() = func
)
}

predicate func_7(Variable vcss_4208, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vcss_4208
		and obj_0.getRValue() instanceof FunctionCall
	)
}

predicate func_8(Function func, ExprStmt target_8) {
	target_8.getExpr() instanceof FunctionCall
	and target_8.getEnclosingFunction() = func
}

from Function func, Parameter vtsk_4205, Variable vbuf_4207, Variable vcss_4208, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, ExprStmt target_7, ExprStmt target_8
where
func_0(vtsk_4205, vcss_4208, target_0)
and func_1(vbuf_4207, vcss_4208, target_1)
and func_2(vcss_4208, target_2)
and not func_3(target_7, func)
and not func_4(target_7, func)
and not func_5(target_8, func)
and not func_6(func)
and func_7(vcss_4208, target_7)
and func_8(func, target_8)
and vtsk_4205.getType().hasName("task_struct *")
and vbuf_4207.getType().hasName("char *")
and vcss_4208.getType().hasName("cgroup_subsys_state *")
and vtsk_4205.getFunction() = func
and vbuf_4207.(LocalVariable).getFunction() = func
and vcss_4208.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
