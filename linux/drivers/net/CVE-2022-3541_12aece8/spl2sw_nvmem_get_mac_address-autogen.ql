/**
 * @name linux-12aece8b01507a2d357a1861f470e83621fbb6f2-spl2sw_nvmem_get_mac_address
 * @id cpp/linux/12aece8b01507a2d357a1861f470e83621fbb6f2/spl2sw-nvmem-get-mac-address
 * @description linux-12aece8b01507a2d357a1861f470e83621fbb6f2-drivers/net/ethernet/sunplus/spl2sw_driver.c-spl2sw_nvmem_get_mac_address CVE-2022-3541
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmac_225, Parameter vdev_220, ExprStmt target_1, ExprStmt target_0) {
	target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_info")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_220
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Invalid mac address in nvmem (%pM)!\n"
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vmac_225
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vmac_225, NotExpr target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmac_225
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vmac_225, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("is_valid_ether_addr")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmac_225
}

from Function func, Variable vmac_225, Parameter vdev_220, ExprStmt target_0, ExprStmt target_1, NotExpr target_2
where
func_0(vmac_225, vdev_220, target_1, target_0)
and func_1(vmac_225, target_2, target_1)
and func_2(vmac_225, target_2)
and vmac_225.getType().hasName("u8 *")
and vdev_220.getType().hasName("device *")
and vmac_225.(LocalVariable).getFunction() = func
and vdev_220.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
