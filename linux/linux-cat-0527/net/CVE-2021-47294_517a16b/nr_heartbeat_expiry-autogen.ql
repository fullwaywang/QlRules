/**
 * @name linux-517a16b1a88bdb6b530f48d5d153478b2552d9a8-nr_heartbeat_expiry
 * @id cpp/linux/517a16b1a88bdb6b530f48d5d153478b2552d9a8/nr-heartbeat-expiry
 * @description linux-517a16b1a88bdb6b530f48d5d153478b2552d9a8-net/netrom/nr_timer.c-nr_heartbeat_expiry CVE-2021-47294
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalOrExpr target_5, Function func) {
exists(GotoStmt target_0 |
	target_0.getName() ="out"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vsk_114, LogicalOrExpr target_5, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("sock_put")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_114
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_2(LogicalOrExpr target_5, Function func, ReturnStmt target_2) {
	target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vsk_114, LogicalOrExpr target_5, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("sock_hold")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_114
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Function func, ReturnStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vsk_114, LogicalOrExpr target_5) {
	target_5.getLeftOperand().(FunctionCall).getTarget().hasName("sock_flag")
	and target_5.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_114
	and target_5.getRightOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
	and target_5.getRightOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_5.getRightOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_114
	and target_5.getRightOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("sock_flag")
	and target_5.getRightOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_114
}

from Function func, Variable vsk_114, ExprStmt target_1, ReturnStmt target_2, ExprStmt target_3, ReturnStmt target_4, LogicalOrExpr target_5
where
not func_0(target_5, func)
and func_1(vsk_114, target_5, target_1)
and func_2(target_5, func, target_2)
and func_3(vsk_114, target_5, target_3)
and func_4(func, target_4)
and func_5(vsk_114, target_5)
and vsk_114.getType().hasName("sock *")
and vsk_114.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
