/**
 * @name linux-dad48e73127ba10279ea33e6dbc8d3905c4d31c0-f2fs_init_extent_tree
 * @id cpp/linux/dad48e73127ba10279ea33e6dbc8d3905c4d31c0/f2fs-init-extent-tree
 * @description linux-dad48e73127ba10279ea33e6dbc8d3905c4d31c0-fs/f2fs/extent_cache.c-f2fs_init_extent_tree CVE-2017-18193
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_323, Initializer target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("F2FS_I_SB")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_323
}

predicate func_1(Parameter vinode_323, BlockStmt target_31, FunctionCall target_1) {
	target_1.getTarget().hasName("f2fs_may_extent_tree")
	and not target_1.getTarget().hasName("__f2fs_init_extent_tree")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vinode_323
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_31
}

predicate func_3(Variable vei_328, Parameter vi_ext_323, FunctionCall target_3) {
	target_3.getTarget().hasName("get_extent_info")
	and not target_3.getTarget().hasName("set_inode_flag")
	and target_3.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vei_328
	and target_3.getArgument(1).(VariableAccess).getTarget()=vi_ext_323
}

predicate func_5(Parameter vinode_323, ExprStmt target_18) {
exists(PointerFieldAccess target_5 |
	target_5.getTarget().getName()="extent_tree"
	and target_5.getQualifier().(FunctionCall).getTarget().hasName("F2FS_I")
	and target_5.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_323
	and target_5.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_7(Parameter vinode_323, VariableAccess target_7) {
	target_7.getTarget()=vinode_323
	and target_7.getParent().(FunctionCall).getParent().(Initializer).getExpr().(FunctionCall).getTarget().hasName("F2FS_I_SB")
}

predicate func_8(Parameter vinode_323, VariableAccess target_8) {
	target_8.getTarget()=vinode_323
	and target_8.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_9(Parameter vinode_323, VariableAccess target_9) {
	target_9.getTarget()=vinode_323
	and target_9.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_10(Parameter vi_ext_323, VariableAccess target_10) {
	target_10.getTarget()=vi_ext_323
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_12(Function func, DeclStmt target_12) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Function func, DeclStmt target_13) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_13
}

predicate func_14(Function func, DeclStmt target_14) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_15(Parameter vi_ext_323, NotExpr target_32, IfStmt target_15) {
	target_15.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vi_ext_323
	and target_15.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_15.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vi_ext_323
	and target_15.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="len"
	and target_15.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vi_ext_323
	and target_15.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_15.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr() instanceof EnumConstantAccess
	and target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_32
}

/*predicate func_16(Parameter vi_ext_323, AssignExpr target_16) {
	target_16.getLValue().(PointerFieldAccess).getTarget().getName()="len"
	and target_16.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vi_ext_323
	and target_16.getRValue().(Literal).getValue()="0"
}

*/
predicate func_17(NotExpr target_32, Function func, ReturnStmt target_17) {
	target_17.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_32
	and target_17.getEnclosingFunction() = func
}

predicate func_18(Variable vet_326, Parameter vinode_323, Function func, ExprStmt target_18) {
	target_18.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vet_326
	and target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__grab_extent_tree")
	and target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_323
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_18
}

predicate func_19(Parameter vi_ext_323, Function func, IfStmt target_19) {
	target_19.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vi_ext_323
	and target_19.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_19.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vi_ext_323
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_19
}

predicate func_20(Function func, ExprStmt target_20) {
	target_20.getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
}

predicate func_21(Variable vei_328, DeclStmt target_14, AddressOfExpr target_33, VariableAccess target_21) {
	target_21.getTarget()=vei_328
	and target_21.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_21.getLocation().isBefore(target_33.getOperand().(VariableAccess).getLocation())
}

predicate func_22(Variable vet_326, Function func, ExprStmt target_22) {
	target_22.getExpr().(FunctionCall).getTarget().hasName("_raw_write_lock")
	and target_22.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_22.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vet_326
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_22
}

predicate func_23(Variable vet_326, Function func, IfStmt target_23) {
	target_23.getCondition().(FunctionCall).getTarget().hasName("atomic_read")
	and target_23.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="node_cnt"
	and target_23.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vet_326
	and target_23.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_23
}

predicate func_24(Variable vsbi_325, Variable vet_326, Variable ven_327, Variable vei_328, Function func, ExprStmt target_24) {
	target_24.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=ven_327
	and target_24.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__init_extent_tree")
	and target_24.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_325
	and target_24.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vet_326
	and target_24.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vei_328
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_24
}

predicate func_25(Variable vsbi_325, Variable ven_327, Function func, IfStmt target_25) {
	target_25.getCondition().(VariableAccess).getTarget()=ven_327
	and target_25.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_25.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="extent_lock"
	and target_25.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_325
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ven_327
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="extent_list"
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_325
	and target_25.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_25.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="extent_lock"
	and target_25.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_325
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_25
}

/*predicate func_26(Variable vsbi_325, VariableAccess target_34, ExprStmt target_26) {
	target_26.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_26.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="extent_lock"
	and target_26.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_325
	and target_26.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_34
}

*/
/*predicate func_27(Variable vsbi_325, Variable ven_327, VariableAccess target_34, ExprStmt target_27) {
	target_27.getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
	and target_27.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_27.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ven_327
	and target_27.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="extent_list"
	and target_27.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_325
	and target_27.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_34
}

*/
/*predicate func_28(Variable vsbi_325, VariableAccess target_34, ExprStmt target_28) {
	target_28.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_28.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="extent_lock"
	and target_28.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_325
	and target_28.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_34
}

*/
predicate func_29(Variable vet_326, Function func, ExprStmt target_29) {
	target_29.getExpr().(FunctionCall).getTarget().hasName("_raw_write_unlock")
	and target_29.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_29.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vet_326
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_29
}

predicate func_30(Function func, ReturnStmt target_30) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_30
}

predicate func_31(Function func, BlockStmt target_31) {
	target_31.getStmt(0) instanceof IfStmt
	and target_31.getStmt(1) instanceof ReturnStmt
	and target_31.getEnclosingFunction() = func
}

predicate func_32(Function func, NotExpr target_32) {
	target_32.getOperand() instanceof FunctionCall
	and target_32.getEnclosingFunction() = func
}

predicate func_33(Variable vei_328, AddressOfExpr target_33) {
	target_33.getOperand().(VariableAccess).getTarget()=vei_328
	and target_33.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_34(Variable ven_327, BlockStmt target_35, VariableAccess target_34) {
	target_34.getTarget()=ven_327
	and target_34.getParent().(IfStmt).getThen()=target_35
}

predicate func_35(Function func, BlockStmt target_35) {
	target_35.getStmt(0) instanceof ExprStmt
	and target_35.getStmt(1) instanceof ExprStmt
	and target_35.getStmt(2) instanceof ExprStmt
	and target_35.getEnclosingFunction() = func
}

from Function func, Variable vsbi_325, Variable vet_326, Variable ven_327, Variable vei_328, Parameter vinode_323, Parameter vi_ext_323, Initializer target_0, FunctionCall target_1, FunctionCall target_3, VariableAccess target_7, VariableAccess target_8, VariableAccess target_9, VariableAccess target_10, DeclStmt target_12, DeclStmt target_13, DeclStmt target_14, IfStmt target_15, ReturnStmt target_17, ExprStmt target_18, IfStmt target_19, ExprStmt target_20, VariableAccess target_21, ExprStmt target_22, IfStmt target_23, ExprStmt target_24, IfStmt target_25, ExprStmt target_29, ReturnStmt target_30, BlockStmt target_31, NotExpr target_32, AddressOfExpr target_33, VariableAccess target_34, BlockStmt target_35
where
func_0(vinode_323, target_0)
and func_1(vinode_323, target_31, target_1)
and func_3(vei_328, vi_ext_323, target_3)
and not func_5(vinode_323, target_18)
and func_7(vinode_323, target_7)
and func_8(vinode_323, target_8)
and func_9(vinode_323, target_9)
and func_10(vi_ext_323, target_10)
and func_12(func, target_12)
and func_13(func, target_13)
and func_14(func, target_14)
and func_15(vi_ext_323, target_32, target_15)
and func_17(target_32, func, target_17)
and func_18(vet_326, vinode_323, func, target_18)
and func_19(vi_ext_323, func, target_19)
and func_20(func, target_20)
and func_21(vei_328, target_14, target_33, target_21)
and func_22(vet_326, func, target_22)
and func_23(vet_326, func, target_23)
and func_24(vsbi_325, vet_326, ven_327, vei_328, func, target_24)
and func_25(vsbi_325, ven_327, func, target_25)
and func_29(vet_326, func, target_29)
and func_30(func, target_30)
and func_31(func, target_31)
and func_32(func, target_32)
and func_33(vei_328, target_33)
and func_34(ven_327, target_35, target_34)
and func_35(func, target_35)
and vsbi_325.getType().hasName("f2fs_sb_info *")
and vet_326.getType().hasName("extent_tree *")
and ven_327.getType().hasName("extent_node *")
and vei_328.getType().hasName("extent_info")
and vinode_323.getType().hasName("inode *")
and vi_ext_323.getType().hasName("f2fs_extent *")
and vsbi_325.(LocalVariable).getFunction() = func
and vet_326.(LocalVariable).getFunction() = func
and ven_327.(LocalVariable).getFunction() = func
and vei_328.(LocalVariable).getFunction() = func
and vinode_323.getFunction() = func
and vi_ext_323.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
