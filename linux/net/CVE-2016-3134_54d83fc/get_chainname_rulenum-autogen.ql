/**
 * @name linux-54d83fc74aa9ec72794373cb47432c5f7fb1a309-get_chainname_rulenum
 * @id cpp/linux/54d83fc74aa9ec72794373cb47432c5f7fb1a309/get-chainname-rulenum
 * @description linux-54d83fc74aa9ec72794373cb47432c5f7fb1a309-net/ipv4/netfilter/ip_tables.c-get_chainname_rulenum CVE-2016-3134
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, EqualityOperation target_0) {
	target_0.getLeftOperand().(FunctionCall).getTarget().hasName("strcmp")
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="name"
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="target"
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="kernel"
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="u"
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="target"
	and target_0.getLeftOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()=""
	and target_0.getRightOperand().(Literal).getValue()="0"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vt_223, RelationalOperation target_1) {
	 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getLesserOperand().(PointerFieldAccess).getTarget().getName()="verdict"
	and target_1.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vt_223
	and target_1.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_2(Parameter vs_219, VariableAccess target_2) {
	target_2.getTarget()=vs_219
}

predicate func_3(Parameter vs_219, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="target_offset"
	and target_3.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_219
	and target_3.getLeftOperand().(EqualityOperation).getRightOperand().(SizeofTypeOperator).getType() instanceof LongType
	and target_3.getLeftOperand().(EqualityOperation).getRightOperand().(SizeofTypeOperator).getValue()="112"
	and target_3.getRightOperand() instanceof EqualityOperation
}

predicate func_4(Parameter vs_219, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="ip"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_219
	and target_4.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("unconditional")
}

from Function func, Variable vt_223, Parameter vs_219, EqualityOperation target_0, RelationalOperation target_1, VariableAccess target_2, LogicalAndExpr target_3, AddressOfExpr target_4
where
func_0(func, target_0)
and func_1(vt_223, target_1)
and func_2(vs_219, target_2)
and func_3(vs_219, target_3)
and func_4(vs_219, target_4)
and vt_223.getType().hasName("const xt_standard_target *")
and vs_219.getType().hasName("const ipt_entry *")
and vt_223.(LocalVariable).getFunction() = func
and vs_219.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
