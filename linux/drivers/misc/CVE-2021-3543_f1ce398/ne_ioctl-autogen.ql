/**
 * @name linux-f1ce3986baa62cffc3c5be156994de87524bab99-ne_ioctl
 * @id cpp/linux/f1ce3986baa62cffc3c5be156994de87524bab99/ne-ioctl
 * @description linux-f1ce3986baa62cffc3c5be156994de87524bab99-ne_ioctl CVE-2021-3543
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_2(Variable vne_pci_dev_1675, AddressOfExpr target_2) {
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="enclaves_list_mutex"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vne_pci_dev_1675
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Parameter varg_1669, BlockStmt target_19, VariableAccess target_3) {
		target_3.getTarget()=varg_1669
		and target_3.getParent().(FunctionCall).getArgument(1) instanceof AddressOfExpr
		and target_3.getParent().(FunctionCall).getArgument(2) instanceof SizeofExprOperator
		and target_3.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_19
}

predicate func_8(Variable vslot_uid_1_1677, Variable vne_pci_dev_1675, AddressOfExpr target_20, AddressOfExpr target_21, AddressOfExpr target_2, AddressOfExpr target_8) {
		target_8.getOperand().(VariableAccess).getTarget()=vslot_uid_1_1677
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ne_create_vm_ioctl")
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vne_pci_dev_1675
		and target_8.getOperand().(VariableAccess).getLocation().isBefore(target_20.getOperand().(VariableAccess).getLocation())
		and target_21.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_9(Variable vrc_1676, Variable venclave_fd_1673, IfStmt target_9) {
		target_9.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=venclave_fd_1673
		and target_9.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1676
		and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=venclave_fd_1673
		and target_9.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_9.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_9.getThen().(BlockStmt).getStmt(2).(ReturnStmt).getExpr().(VariableAccess).getTarget()=vrc_1676
}

/*predicate func_10(Variable vrc_1676, Variable venclave_fd_1673, RelationalOperation target_22, ExprStmt target_10) {
		target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1676
		and target_10.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=venclave_fd_1673
		and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
}

*/
/*predicate func_11(RelationalOperation target_22, Function func, ExprStmt target_11) {
		target_11.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_11.getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
		and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_12(Variable vrc_1676, RelationalOperation target_22, ReturnStmt target_12) {
		target_12.getExpr().(VariableAccess).getTarget()=vrc_1676
		and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
}

*/
predicate func_13(Variable vslot_uid_1_1677, Parameter varg_1669, Variable venclave_fd_1673, Variable venclave_file_1674, IfStmt target_13) {
		target_13.getCondition().(FunctionCall).getTarget().hasName("copy_to_user")
		and target_13.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=varg_1669
		and target_13.getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vslot_uid_1_1677
		and target_13.getCondition().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
		and target_13.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=venclave_file_1674
		and target_13.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fget")
		and target_13.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_fd_1673
		and target_13.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fput")
		and target_13.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_file_1674
		and target_13.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fput")
		and target_13.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_file_1674
		and target_13.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_unused_fd")
		and target_13.getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_fd_1673
		and target_13.getThen().(BlockStmt).getStmt(4).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
}

predicate func_14(Variable venclave_fd_1673, Variable venclave_file_1674, FunctionCall target_23, ExprStmt target_14) {
		target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=venclave_file_1674
		and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fget")
		and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_fd_1673
		and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
}

/*predicate func_15(Variable venclave_file_1674, FunctionCall target_23, ExprStmt target_14, ExprStmt target_16, ExprStmt target_15) {
		target_15.getExpr().(FunctionCall).getTarget().hasName("fput")
		and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_file_1674
		and target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
		and target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

*/
predicate func_16(Variable venclave_file_1674, FunctionCall target_23, ExprStmt target_16) {
		target_16.getExpr().(FunctionCall).getTarget().hasName("fput")
		and target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_file_1674
		and target_16.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
}

/*predicate func_17(Variable venclave_fd_1673, FunctionCall target_23, ExprStmt target_17) {
		target_17.getExpr().(FunctionCall).getTarget().hasName("put_unused_fd")
		and target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venclave_fd_1673
		and target_17.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
}

*/
/*predicate func_18(FunctionCall target_23, Function func, ReturnStmt target_18) {
		target_18.getExpr().(UnaryMinusExpr).getValue()="-14"
		and target_18.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
		and target_18.getEnclosingFunction() = func
}

*/
predicate func_19(Function func, BlockStmt target_19) {
		target_19.getStmt(0) instanceof ExprStmt
		and target_19.getStmt(1) instanceof ExprStmt
		and target_19.getStmt(2) instanceof ExprStmt
		and target_19.getStmt(3) instanceof ExprStmt
		and target_19.getStmt(4) instanceof ReturnStmt
		and target_19.getEnclosingFunction() = func
}

predicate func_20(Variable vslot_uid_1_1677, Parameter varg_1669, BlockStmt target_19, AddressOfExpr target_20) {
		target_20.getOperand().(VariableAccess).getTarget()=vslot_uid_1_1677
		and target_20.getParent().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=varg_1669
		and target_20.getParent().(FunctionCall).getArgument(2) instanceof SizeofExprOperator
		and target_20.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_19
}

predicate func_21(Variable vne_pci_dev_1675, AddressOfExpr target_21) {
		target_21.getOperand().(PointerFieldAccess).getTarget().getName()="enclaves_list_mutex"
		and target_21.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vne_pci_dev_1675
		and target_21.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
		and target_21.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_22(Variable venclave_fd_1673, RelationalOperation target_22) {
		 (target_22 instanceof GTExpr or target_22 instanceof LTExpr)
		and target_22.getLesserOperand().(VariableAccess).getTarget()=venclave_fd_1673
		and target_22.getGreaterOperand() instanceof Literal
}

predicate func_23(Parameter varg_1669, FunctionCall target_23) {
		target_23.getTarget().hasName("copy_to_user")
		and target_23.getArgument(0).(VariableAccess).getTarget()=varg_1669
		and target_23.getArgument(1) instanceof AddressOfExpr
		and target_23.getArgument(2) instanceof SizeofExprOperator
}

from Function func, Variable vrc_1676, Variable vslot_uid_1_1677, Parameter varg_1669, Variable venclave_fd_1673, Variable venclave_file_1674, Variable vne_pci_dev_1675, AddressOfExpr target_2, VariableAccess target_3, AddressOfExpr target_8, IfStmt target_9, IfStmt target_13, ExprStmt target_14, ExprStmt target_16, BlockStmt target_19, AddressOfExpr target_20, AddressOfExpr target_21, RelationalOperation target_22, FunctionCall target_23
where
func_2(vne_pci_dev_1675, target_2)
and func_3(varg_1669, target_19, target_3)
and func_8(vslot_uid_1_1677, vne_pci_dev_1675, target_20, target_21, target_2, target_8)
and func_9(vrc_1676, venclave_fd_1673, target_9)
and func_13(vslot_uid_1_1677, varg_1669, venclave_fd_1673, venclave_file_1674, target_13)
and func_14(venclave_fd_1673, venclave_file_1674, target_23, target_14)
and func_16(venclave_file_1674, target_23, target_16)
and func_19(func, target_19)
and func_20(vslot_uid_1_1677, varg_1669, target_19, target_20)
and func_21(vne_pci_dev_1675, target_21)
and func_22(venclave_fd_1673, target_22)
and func_23(varg_1669, target_23)
and vrc_1676.getType().hasName("int")
and vslot_uid_1_1677.getType().hasName("u64")
and varg_1669.getType().hasName("unsigned long")
and venclave_fd_1673.getType().hasName("int")
and venclave_file_1674.getType().hasName("file *")
and vne_pci_dev_1675.getType().hasName("ne_pci_dev *")
and vrc_1676.(LocalVariable).getFunction() = func
and vslot_uid_1_1677.(LocalVariable).getFunction() = func
and varg_1669.getFunction() = func
and venclave_fd_1673.(LocalVariable).getFunction() = func
and venclave_file_1674.(LocalVariable).getFunction() = func
and vne_pci_dev_1675.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
