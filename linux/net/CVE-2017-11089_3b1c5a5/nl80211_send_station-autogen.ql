/**
 * @name linux-3b1c5a5307fb5277f395efdcf330c064d79df07d-nl80211_send_station
 * @id cpp/linux/3b1c5a5307fb5277f395efdcf330c064d79df07d/nl80211-send-station
 * @description linux-3b1c5a5307fb5277f395efdcf330c064d79df07d-net/wireless/nl80211.c-nl80211_send_station CVE-2017-11089
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsinfo_2917, Parameter vmsg_2913, LogicalAndExpr target_3, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="filled"
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("nla_put_u32")
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_2913
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="local_pm"
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_3.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsinfo_2917, Parameter vmsg_2913, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="filled"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("nla_put_u32")
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_2913
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="peer_pm"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1)
}

predicate func_2(Parameter vsinfo_2917, Parameter vmsg_2913, BitwiseAndExpr target_4, ExprStmt target_5, Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="filled"
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("nla_put_u32")
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_2913
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="nonpeer_pm"
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vsinfo_2917, Parameter vmsg_2913, LogicalAndExpr target_3) {
		target_3.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="filled"
		and target_3.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
		and target_3.getAnOperand().(FunctionCall).getTarget().hasName("nla_put_u32")
		and target_3.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_2913
		and target_3.getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="beacon_loss_count"
		and target_3.getAnOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
}

predicate func_4(Parameter vsinfo_2917, BitwiseAndExpr target_4) {
		target_4.getLeftOperand().(PointerFieldAccess).getTarget().getName()="filled"
		and target_4.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsinfo_2917
}

predicate func_5(Parameter vmsg_2913, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("nlattr *")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nla_nest_start")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_2913
}

from Function func, Parameter vsinfo_2917, Parameter vmsg_2913, LogicalAndExpr target_3, BitwiseAndExpr target_4, ExprStmt target_5
where
not func_0(vsinfo_2917, vmsg_2913, target_3, func)
and not func_1(vsinfo_2917, vmsg_2913, func)
and not func_2(vsinfo_2917, vmsg_2913, target_4, target_5, func)
and func_3(vsinfo_2917, vmsg_2913, target_3)
and func_4(vsinfo_2917, target_4)
and func_5(vmsg_2913, target_5)
and vsinfo_2917.getType().hasName("station_info *")
and vmsg_2913.getType().hasName("sk_buff *")
and vsinfo_2917.getFunction() = func
and vmsg_2913.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
