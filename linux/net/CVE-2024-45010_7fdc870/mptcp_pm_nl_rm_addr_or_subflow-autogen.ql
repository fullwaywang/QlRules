/**
 * @name linux-7fdc870d08960961408a44c569f20f50940e7d4f-mptcp_pm_nl_rm_addr_or_subflow
 * @id cpp/linux/7fdc870d08960961408a44c569f20f50940e7d4f/mptcp-pm-nl-rm-addr-or-subflow
 * @description linux-7fdc870d08960961408a44c569f20f50940e7d4f-net/mptcp/pm_netlink.c-mptcp_pm_nl_rm_addr_or_subflow CVE-2024-45010
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_7, Function func, IfStmt target_0) {
	target_0.getCondition() instanceof EqualityOperation
	and target_0.getThen() instanceof ExprStmt
	and target_0.getElse() instanceof IfStmt
	and target_0.getLocation().isBefore(target_7.getLocation())
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vrm_type_807, Variable vrm_id_828, BlockStmt target_8, LogicalAndExpr target_1) {
	exists(LogicalAndExpr obj_0 | obj_0=target_1.getLeftOperand() |
		obj_0.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vrm_type_807
		and obj_0.getRightOperand().(VariableAccess).getTarget()=vrm_id_828
	)
	and exists(NotExpr obj_1 | obj_1=target_1.getRightOperand() |
		exists(StmtExpr obj_2 | obj_2=obj_1.getOperand() |
			exists(BlockStmt obj_3 | obj_3=obj_2.getStmt() |
				exists(IfStmt obj_4 | obj_4=obj_3.getStmt(1) |
					exists(FunctionCall obj_5 | obj_5=obj_4.getCondition() |
						obj_5.getTarget().hasName("__builtin_expect")
						and obj_5.getArgument(1) instanceof Literal
					)
					and obj_4.getThen().(DoStmt).getCondition() instanceof Literal
				)
				and exists(ExprStmt obj_6 | obj_6=obj_3.getStmt(2) |
					exists(FunctionCall obj_7 | obj_7=obj_6.getExpr() |
						obj_7.getTarget().hasName("__builtin_expect")
						and obj_7.getArgument(1) instanceof Literal
					)
				)
			)
		)
	)
	and target_1.getParent().(IfStmt).getThen()=target_8
}

predicate func_2(Parameter vrm_type_807, Variable vsk_810, EqualityOperation target_3, IfStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getThen() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().hasName("sock_net")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vsk_810
			)
			and obj_1.getTarget().hasName("__MPTCP_INC_STATS")
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vrm_type_807
		)
	)
	and target_2.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vrm_type_807
	and target_2.getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Parameter vrm_type_807, ExprStmt target_4, ExprStmt target_9, EqualityOperation target_10, EqualityOperation target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget()=vrm_type_807
	and target_3.getParent().(IfStmt).getThen()=target_4
	and target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getLeftOperand().(VariableAccess).getLocation())
	and target_3.getLeftOperand().(VariableAccess).getLocation().isBefore(target_10.getLeftOperand().(VariableAccess).getLocation())
}

predicate func_4(Variable vrm_id_828, Parameter vmsk_805, EqualityOperation target_3, ExprStmt target_4) {
	exists(ConditionalExpr obj_0 | obj_0=target_4.getExpr() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getCondition() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(LogicalAndExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getLeftOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
					and obj_3.getRightOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
				)
				and exists(EqualityOperation obj_4 | obj_4=obj_2.getRightOperand() |
					exists(ValueFieldAccess obj_5 | obj_5=obj_4.getLeftOperand() |
						obj_5.getTarget().getName()="id_avail_bitmap"
						and obj_5.getQualifier().(PointerFieldAccess).getTarget().getName()="pm"
					)
					and obj_4.getRightOperand().(Literal).getValue()="0"
				)
			)
			and exists(FunctionCall obj_6 | obj_6=obj_1.getRightOperand() |
				exists(PointerDereferenceExpr obj_7 | obj_7=obj_6.getArgument(0) |
					exists(ValueFieldAccess obj_8 | obj_8=obj_7.getOperand() |
						obj_8.getTarget().getName()="id_avail_bitmap"
						and obj_8.getQualifier().(PointerFieldAccess).getTarget().getName()="pm"
					)
				)
				and obj_6.getTarget().hasName("__builtin_constant_p")
			)
		)
		and exists(FunctionCall obj_9 | obj_9=obj_0.getThen() |
			exists(ConditionalExpr obj_10 | obj_10=obj_9.getArgument(0) |
				exists(PointerFieldAccess obj_11 | obj_11=obj_10.getElse() |
					obj_11.getTarget().getName()="mpc_endpoint_id"
					and obj_11.getQualifier().(VariableAccess).getTarget()=vmsk_805
				)
				and obj_10.getCondition().(VariableAccess).getTarget()=vrm_id_828
				and obj_10.getThen().(VariableAccess).getTarget()=vrm_id_828
			)
			and exists(ValueFieldAccess obj_12 | obj_12=obj_9.getArgument(1) |
				exists(PointerFieldAccess obj_13 | obj_13=obj_12.getQualifier() |
					obj_13.getTarget().getName()="pm"
					and obj_13.getQualifier().(VariableAccess).getTarget()=vmsk_805
				)
				and obj_12.getTarget().getName()="id_avail_bitmap"
			)
			and obj_9.getTarget().hasName("generic___set_bit")
		)
		and exists(FunctionCall obj_14 | obj_14=obj_0.getElse() |
			exists(ConditionalExpr obj_15 | obj_15=obj_14.getArgument(0) |
				exists(PointerFieldAccess obj_16 | obj_16=obj_15.getElse() |
					obj_16.getTarget().getName()="mpc_endpoint_id"
					and obj_16.getQualifier().(VariableAccess).getTarget()=vmsk_805
				)
				and obj_15.getCondition().(VariableAccess).getTarget()=vrm_id_828
				and obj_15.getThen().(VariableAccess).getTarget()=vrm_id_828
			)
			and exists(ValueFieldAccess obj_17 | obj_17=obj_14.getArgument(1) |
				exists(PointerFieldAccess obj_18 | obj_18=obj_17.getQualifier() |
					obj_18.getTarget().getName()="pm"
					and obj_18.getQualifier().(VariableAccess).getTarget()=vmsk_805
				)
				and obj_17.getTarget().getName()="id_avail_bitmap"
			)
			and obj_14.getTarget().hasName("___set_bit")
		)
	)
	and target_4.getParent().(IfStmt).getCondition()=target_3
}

predicate func_5(Parameter vrm_type_807, Parameter vmsk_805, IfStmt target_5) {
	exists(BlockStmt obj_0 | obj_0=target_5.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(PostfixDecrExpr obj_2 | obj_2=obj_1.getExpr() |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="pm"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vmsk_805
					)
					and obj_3.getTarget().getName()="add_addr_accepted"
				)
			)
		)
		and exists(DoStmt obj_5 | obj_5=obj_0.getStmt(1) |
			exists(BlockStmt obj_6 | obj_6=obj_5.getStmt() |
				obj_6.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
				and obj_6.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
			)
			and obj_5.getCondition().(Literal).getValue()="0"
		)
	)
	and exists(IfStmt obj_7 | obj_7=target_5.getElse() |
		exists(BlockStmt obj_8 | obj_8=obj_7.getThen() |
			exists(ExprStmt obj_9 | obj_9=obj_8.getStmt(0) |
				exists(PostfixDecrExpr obj_10 | obj_10=obj_9.getExpr() |
					exists(ValueFieldAccess obj_11 | obj_11=obj_10.getOperand() |
						obj_11.getTarget().getName()="local_addr_used"
						and obj_11.getQualifier().(PointerFieldAccess).getTarget().getName()="pm"
					)
				)
			)
		)
		and obj_7.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vrm_type_807
	)
	and target_5.getCondition() instanceof LogicalAndExpr
}

/*predicate func_6(Parameter vmsk_805, EqualityOperation target_11, ExprStmt target_6) {
	exists(PostfixDecrExpr obj_0 | obj_0=target_6.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="pm"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vmsk_805
			)
			and obj_1.getTarget().getName()="local_addr_used"
		)
	)
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

*/
predicate func_7(Function func, IfStmt target_7) {
	target_7.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bool")
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Parameter vmsk_805, BlockStmt target_8) {
	exists(ExprStmt obj_0 | obj_0=target_8.getStmt(0) |
		exists(PostfixDecrExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="pm"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vmsk_805
				)
				and obj_2.getTarget().getName()="add_addr_accepted"
			)
		)
	)
	and exists(DoStmt obj_4 | obj_4=target_8.getStmt(1) |
		exists(BlockStmt obj_5 | obj_5=obj_4.getStmt() |
			obj_5.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
			and obj_5.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
		)
		and obj_4.getCondition().(Literal).getValue()="0"
	)
}

predicate func_9(Parameter vrm_type_807, Variable vsk_810, ExprStmt target_9) {
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().hasName("sock_net")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vsk_810
		)
		and obj_0.getTarget().hasName("__MPTCP_INC_STATS")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vrm_type_807
	)
}

predicate func_10(Parameter vrm_type_807, ExprStmt target_12, EqualityOperation target_10) {
	target_10.getLeftOperand().(VariableAccess).getTarget()=vrm_type_807
	and target_10.getParent().(IfStmt).getThen()=target_12
}

predicate func_11(Parameter vrm_type_807, BlockStmt target_13, EqualityOperation target_11) {
	target_11.getLeftOperand().(VariableAccess).getTarget()=vrm_type_807
	and target_11.getRightOperand() instanceof EnumConstantAccess
	and target_11.getParent().(IfStmt).getThen()=target_13
}

predicate func_12(Parameter vrm_type_807, Variable vsk_810, EqualityOperation target_3, ExprStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().hasName("sock_net")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vsk_810
		)
		and obj_0.getTarget().hasName("__MPTCP_INC_STATS")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vrm_type_807
	)
	and target_12.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_13(Function func, BlockStmt target_13) {
	target_13.getStmt(0) instanceof ExprStmt
	and target_13.getEnclosingFunction() = func
}

from Function func, Parameter vrm_type_807, Variable vsk_810, Variable vrm_id_828, Parameter vmsk_805, IfStmt target_0, LogicalAndExpr target_1, IfStmt target_2, EqualityOperation target_3, ExprStmt target_4, IfStmt target_5, IfStmt target_7, BlockStmt target_8, ExprStmt target_9, EqualityOperation target_10, EqualityOperation target_11, ExprStmt target_12, BlockStmt target_13
where
func_0(target_7, func, target_0)
and func_1(vrm_type_807, vrm_id_828, target_8, target_1)
and func_2(vrm_type_807, vsk_810, target_3, target_2)
and func_3(vrm_type_807, target_4, target_9, target_10, target_3)
and func_4(vrm_id_828, vmsk_805, target_3, target_4)
and func_5(vrm_type_807, vmsk_805, target_5)
and func_7(func, target_7)
and func_8(vmsk_805, target_8)
and func_9(vrm_type_807, vsk_810, target_9)
and func_10(vrm_type_807, target_12, target_10)
and func_11(vrm_type_807, target_13, target_11)
and func_12(vrm_type_807, vsk_810, target_3, target_12)
and func_13(func, target_13)
and vrm_type_807.getType().hasName("linux_mptcp_mib_field")
and vsk_810.getType().hasName("sock *")
and vrm_id_828.getType().hasName("u8")
and vmsk_805.getType().hasName("mptcp_sock *")
and vrm_type_807.getFunction() = func
and vsk_810.(LocalVariable).getFunction() = func
and vrm_id_828.(LocalVariable).getFunction() = func
and vmsk_805.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
