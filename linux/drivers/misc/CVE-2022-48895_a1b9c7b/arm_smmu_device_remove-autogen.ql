/**
 * @name linux-a1b9c7b1978aacf4b2f33e34bde1e2bb80b8497a-arm_smmu_device_remove
 * @id cpp/linux/a1b9c7b1978aacf4b2f33e34bde1e2bb80b8497a/arm-smmu-device-remove
 * @description linux-a1b9c7b1978aacf4b2f33e34bde1e2bb80b8497a-drivers/iommu/arm/arm-smmu/arm-smmu.c-arm_smmu_device_remove CVE-2022-48895
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpdev_2191, FunctionCall target_0) {
	exists(AddressOfExpr obj_0 | obj_0=target_0.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="dev"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpdev_2191
		)
	)
	and target_0.getTarget().hasName("_dev_notice")
	and not target_0.getTarget().hasName("arm_smmu_device_shutdown")
	and target_0.getArgument(1).(StringLiteral).getValue()="disabling translation\n"
}

predicate func_1(Parameter vpdev_2191, VariableAccess target_1) {
	target_1.getTarget()=vpdev_2191
	and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vsmmu_2193, Function func, IfStmt target_2) {
	exists(NotExpr obj_0 | obj_0=target_2.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="context_map"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vsmmu_2193
			)
			and obj_1.getTarget().hasName("bitmap_empty")
			and obj_1.getArgument(1).(Literal).getValue()="128"
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_2.getThen() |
		exists(StmtExpr obj_4 | obj_4=obj_3.getExpr() |
			exists(BlockStmt obj_5 | obj_5=obj_4.getStmt() |
				obj_5.getStmt(0).(DoStmt).getCondition() instanceof Literal
				and obj_5.getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

/*predicate func_3(Function func, DoStmt target_3) {
	target_3.getCondition() instanceof Literal
	and target_3.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getValue()="1"
	and target_3.getEnclosingFunction() = func
}

*/
/*predicate func_4(Function func, IfStmt target_4) {
	target_4.getCondition().(LogicalAndExpr).getValue()="1"
	and target_4.getEnclosingFunction() = func
}

*/
/*predicate func_5(LogicalAndExpr target_14, Function func, DeclStmt target_5) {
	target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_5.getEnclosingFunction() = func
}

*/
/*predicate func_6(LogicalAndExpr target_14, Function func, DeclStmt target_6) {
	target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_6.getEnclosingFunction() = func
}

*/
/*predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr() instanceof FunctionCall
	and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(Parameter vpdev_2191, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="dev"
	and target_8.getQualifier().(VariableAccess).getTarget()=vpdev_2191
}

predicate func_9(Variable vsmmu_2193, FunctionCall target_9) {
	target_9.getTarget().hasName("arm_smmu_rpm_get")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vsmmu_2193
}

predicate func_10(Variable vsmmu_2193, Function func, ExprStmt target_10) {
	exists(FunctionCall obj_0 | obj_0=target_10.getExpr() |
		obj_0.getTarget().hasName("arm_smmu_writel")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vsmmu_2193
		and obj_0.getArgument(1).(Literal).getValue()="0"
		and obj_0.getArgument(2).(Literal).getValue()="0"
		and obj_0.getArgument(3).(BinaryBitwiseOperation).getValue()="1"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Variable vsmmu_2193, Function func, ExprStmt target_11) {
	exists(FunctionCall obj_0 | obj_0=target_11.getExpr() |
		obj_0.getTarget().hasName("arm_smmu_rpm_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vsmmu_2193
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Variable vsmmu_2193, Function func, IfStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="dev"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsmmu_2193
		)
		and obj_0.getTarget().hasName("pm_runtime_enabled")
	)
	and exists(ExprStmt obj_2 | obj_2=target_12.getThen() |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			exists(PointerFieldAccess obj_4 | obj_4=obj_3.getArgument(0) |
				obj_4.getTarget().getName()="dev"
				and obj_4.getQualifier().(VariableAccess).getTarget()=vsmmu_2193
			)
			and obj_3.getTarget().hasName("pm_runtime_force_suspend")
		)
	)
	and exists(ExprStmt obj_5 | obj_5=target_12.getElse() |
		exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
			exists(PointerFieldAccess obj_7 | obj_7=obj_6.getArgument(0) |
				obj_7.getTarget().getName()="num_clks"
				and obj_7.getQualifier().(VariableAccess).getTarget()=vsmmu_2193
			)
			and exists(PointerFieldAccess obj_8 | obj_8=obj_6.getArgument(1) |
				obj_8.getTarget().getName()="clks"
				and obj_8.getQualifier().(VariableAccess).getTarget()=vsmmu_2193
			)
			and obj_6.getTarget().hasName("clk_bulk_disable")
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Variable vsmmu_2193, Function func, ExprStmt target_13) {
	exists(FunctionCall obj_0 | obj_0=target_13.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="num_clks"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsmmu_2193
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getArgument(1) |
			obj_2.getTarget().getName()="clks"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vsmmu_2193
		)
		and obj_0.getTarget().hasName("clk_bulk_unprepare")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
}

predicate func_14(Function func, LogicalAndExpr target_14) {
	target_14.getValue()="1"
	and target_14.getEnclosingFunction() = func
}

from Function func, Variable vsmmu_2193, Parameter vpdev_2191, FunctionCall target_0, VariableAccess target_1, IfStmt target_2, PointerFieldAccess target_8, FunctionCall target_9, ExprStmt target_10, ExprStmt target_11, IfStmt target_12, ExprStmt target_13, LogicalAndExpr target_14
where
func_0(vpdev_2191, target_0)
and func_1(vpdev_2191, target_1)
and func_2(vsmmu_2193, func, target_2)
and func_8(vpdev_2191, target_8)
and func_9(vsmmu_2193, target_9)
and func_10(vsmmu_2193, func, target_10)
and func_11(vsmmu_2193, func, target_11)
and func_12(vsmmu_2193, func, target_12)
and func_13(vsmmu_2193, func, target_13)
and func_14(func, target_14)
and vsmmu_2193.getType().hasName("arm_smmu_device *")
and vpdev_2191.getType().hasName("platform_device *")
and vsmmu_2193.(LocalVariable).getFunction() = func
and vpdev_2191.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
