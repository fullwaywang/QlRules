/**
 * @name linux-10608161696c2768f53426642f78a42bcaaa53e8-lan8814_get_sig_rx
 * @id cpp/linux/10608161696c2768f53426642f78a42bcaaa53e8/lan8814-get-sig-rx
 * @description linux-10608161696c2768f53426642f78a42bcaaa53e8-drivers/net/phy/micrel.c-lan8814_get_sig_rx CVE-2024-35891
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vptp_header_2308, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vptp_header_2308
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable vptp_header_2308, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("u16 *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__builtin_bswap16")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="sequence_id"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vptp_header_2308
}

predicate func_3(Variable vptp_header_2308, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vptp_header_2308
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ptp_parse_header")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
}

from Function func, Variable vptp_header_2308, ExprStmt target_2, ExprStmt target_3
where
not func_0(vptp_header_2308, target_2, target_3, func)
and func_2(vptp_header_2308, target_2)
and func_3(vptp_header_2308, target_3)
and vptp_header_2308.getType().hasName("ptp_header *")
and vptp_header_2308.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
