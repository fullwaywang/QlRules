/**
 * @name linux-b2d057560b8107c633b39aabe517ff9d93f285e3-__inet_hash_connect
 * @id cpp/linux/b2d057560b8107c633b39aabe517ff9d93f285e3/--inet-hash-connect
 * @description linux-b2d057560b8107c633b39aabe517ff9d93f285e3-__inet_hash_connect CVE-2022-1012
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vremaining_747, Variable voffset_747, ExprStmt target_4, RelationalOperation target_5, ExprStmt target_6, ExprStmt target_7, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignRemExpr).getLValue().(VariableAccess).getTarget()=voffset_747
		and target_0.getExpr().(AssignRemExpr).getRValue().(VariableAccess).getTarget()=vremaining_747
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_4.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignRemExpr).getRValue().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignRemExpr).getRValue().(VariableAccess).getLocation().isBefore(target_5.getGreaterOperand().(VariableAccess).getLocation())
		and target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignRemExpr).getLValue().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignRemExpr).getLValue().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vport_offset_737, AddExpr target_1) {
		target_1.getAnOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_1.getAnOperand().(VariableAccess).getTarget()=vport_offset_737
}

predicate func_2(Variable vremaining_747, VariableAccess target_2) {
		target_2.getTarget()=vremaining_747
}

predicate func_3(Variable vremaining_747, Variable voffset_747, RemExpr target_3) {
		target_3.getLeftOperand() instanceof AddExpr
		and target_3.getRightOperand().(VariableAccess).getTarget()=vremaining_747
		and target_3.getParent().(AssignExpr).getRValue() = target_3
		and target_3.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=voffset_747
}

predicate func_4(Variable vremaining_747, ExprStmt target_4) {
		target_4.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vremaining_747
		and target_4.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="4294967294"
}

predicate func_5(Variable vremaining_747, RelationalOperation target_5) {
		 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
		and target_5.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getGreaterOperand().(VariableAccess).getTarget()=vremaining_747
}

predicate func_6(Variable voffset_747, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=voffset_747
		and target_6.getExpr().(AssignExpr).getRValue() instanceof RemExpr
}

predicate func_7(Variable voffset_747, ExprStmt target_7) {
		target_7.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=voffset_747
		and target_7.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="4294967294"
}

from Function func, Parameter vport_offset_737, Variable vremaining_747, Variable voffset_747, AddExpr target_1, VariableAccess target_2, RemExpr target_3, ExprStmt target_4, RelationalOperation target_5, ExprStmt target_6, ExprStmt target_7
where
not func_0(vremaining_747, voffset_747, target_4, target_5, target_6, target_7, func)
and func_1(vport_offset_737, target_1)
and func_2(vremaining_747, target_2)
and func_3(vremaining_747, voffset_747, target_3)
and func_4(vremaining_747, target_4)
and func_5(vremaining_747, target_5)
and func_6(voffset_747, target_6)
and func_7(voffset_747, target_7)
and vport_offset_737.getType().hasName("u32")
and vremaining_747.getType().hasName("u32")
and voffset_747.getType().hasName("u32")
and vport_offset_737.getFunction() = func
and vremaining_747.(LocalVariable).getFunction() = func
and voffset_747.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
