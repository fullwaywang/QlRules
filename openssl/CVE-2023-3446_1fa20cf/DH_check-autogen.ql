/**
 * @name openssl-1fa20cf2f506113c761777127a38bce5068740eb-DH_check
 * @id cpp/openssl/1fa20cf2f506113c761777127a38bce5068740eb/dh-check
 * @description openssl-1fa20cf2f506113c761777127a38bce5068740eb-crypto/dh/dh_check.c-DH_check CVE-2023-3446
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdh_141, FunctionCall target_1, NotExpr target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(FunctionCall).getTarget().hasName("BN_num_bits")
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="p"
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="params"
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdh_141
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="32768"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getExpr().(CommaExpr).getLeftOperand().(CommaExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ERR_new")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getExpr().(CommaExpr).getLeftOperand().(CommaExpr).getRightOperand().(FunctionCall).getTarget().hasName("ERR_set_debug")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getArgument(0).(Literal).getValue()="5"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getArgument(1).(Literal).getValue()="103"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getArgument(2).(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getAStmt().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdh_141, FunctionCall target_1) {
		target_1.getTarget().hasName("DH_get_nid")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vdh_141
}

predicate func_2(Parameter vdh_141, NotExpr target_2) {
		target_2.getOperand().(FunctionCall).getTarget().hasName("DH_check_params")
		and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdh_141
		and target_2.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int *")
}

from Function func, Parameter vdh_141, FunctionCall target_1, NotExpr target_2
where
not func_0(vdh_141, target_1, target_2, func)
and func_1(vdh_141, target_1)
and func_2(vdh_141, target_2)
and vdh_141.getType().hasName("const DH *")
and vdh_141.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
