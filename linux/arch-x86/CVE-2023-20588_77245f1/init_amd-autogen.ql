/**
 * @name linux-77245f1c3c6495521f6a3af082696ee2f8ce3921-init_amd
 * @id cpp/linux/77245f1c3c6495521f6a3af082696ee2f8ce3921/init-amd
 * @description linux-77245f1c3c6495521f6a3af082696ee2f8ce3921-arch/x86/kernel/cpu/amd.c-init_amd CVE-2023-20588
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vc_1027, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("cpu_has_amd_erratum")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_1027
	and target_0.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("const int[4]")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getThen().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_0.getThen().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="x86_capability"
	and target_0.getThen().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_0.getThen().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("__u32[23]")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vc_1027, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("zenbleed_check")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_1027
}

from Function func, Parameter vc_1027, ExprStmt target_1
where
not func_0(vc_1027, target_1, func)
and func_1(vc_1027, target_1)
and vc_1027.getType().hasName("cpuinfo_x86 *")
and vc_1027.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
