/**
 * @name linux-a57c981d9f24d2bd89eaa76dc477e8ca252e22e8-ieee80211_invoke_fast_rx
 * @id cpp/linux/a57c981d9f24d2bd89eaa76dc477e8ca252e22e8/ieee80211-invoke-fast-rx
 * @description linux-a57c981d9f24d2bd89eaa76dc477e8ca252e22e8-net/mac80211/rx.c-ieee80211_invoke_fast_rx CVE-2022-48876
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrx_4643, LogicalAndExpr target_31) {
exists(PointerFieldAccess target_0 |
	exists(VariableAccess obj_0 | obj_0=target_0.getQualifier() |
		obj_0.getTarget()=vrx_4643
		and obj_0.getLocation().isBefore(target_31.getLeftOperand().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	)
	and target_0.getTarget().getName()="link_sta"
)
}

predicate func_1(Parameter vrx_4643) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="link_sta"
	and target_1.getQualifier().(VariableAccess).getTarget()=vrx_4643
)
}

predicate func_2(Parameter vfast_rx_4644, ExprStmt target_33, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="uses_rss"
	and target_2.getQualifier().(VariableAccess).getTarget()=vfast_rx_4644
	and target_2.getParent().(IfStmt).getThen()=target_33
}

predicate func_3(Variable v__vpp_verify_4773, DoStmt target_3) {
	target_3.getCondition().(Literal).getValue()="0"
	and target_3.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__vpp_verify_4773
}

predicate func_5(Variable v__ptr_4773, Variable v__per_cpu_offset, ExprStmt target_5) {
	exists(AddExpr obj_0 | obj_0=target_5.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getRightOperand() |
			obj_1.getArrayBase().(VariableAccess).getTarget()=v__per_cpu_offset
			and obj_1.getArrayOffset().(FunctionCall).getTarget().hasName("debug_smp_processor_id")
		)
		and obj_0.getLeftOperand().(VariableAccess).getTarget()=v__ptr_4773
	)
}

predicate func_6(Parameter vrx_4643, VariableAccess target_6) {
	target_6.getTarget()=vrx_4643
}

predicate func_7(Parameter vrx_4643, VariableAccess target_7) {
	target_7.getTarget()=vrx_4643
}

predicate func_8(Function func, DeclStmt target_8) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Function func, DeclStmt target_9) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Parameter vrx_4643, BlockStmt target_34, RelationalOperation target_10) {
	exists(PointerFieldAccess obj_0 | obj_0=target_10.getGreaterOperand() |
		obj_0.getTarget().getName()="link_id"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vrx_4643
	)
	and  (target_10 instanceof GEExpr or target_10 instanceof LEExpr)
	and target_10.getLesserOperand().(Literal).getValue()="0"
	and target_10.getParent().(IfStmt).getThen()=target_34
}

predicate func_11(Variable vlink_sta_4661, Variable v__UNIQUE_ID_rcu3406_4765, RelationalOperation target_10, ExprStmt target_11) {
	exists(AssignExpr obj_0 | obj_0=target_11.getExpr() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				obj_2.getStmt(1).(DoStmt).getCondition() instanceof Literal
				and obj_2.getStmt(3).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__UNIQUE_ID_rcu3406_4765
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vlink_sta_4661
	)
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_13(Function func, DoStmt target_13) {
	target_13.getCondition() instanceof Literal
	and target_13.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_13.getEnclosingFunction() = func
}

/*predicate func_15(Function func, IfStmt target_15) {
	target_15.getCondition().(NotExpr).getValue()="0"
	and target_15.getEnclosingFunction() = func
}

*/
predicate func_17(Variable vsta_4649, Parameter vrx_4643, PointerDereferenceExpr target_17) {
	exists(AddressOfExpr obj_0 | obj_0=target_17.getOperand() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				obj_2.getTarget().getName()="link"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vsta_4649
			)
			and exists(PointerFieldAccess obj_3 | obj_3=obj_1.getArrayOffset() |
				obj_3.getTarget().getName()="link_id"
				and obj_3.getQualifier().(VariableAccess).getTarget()=vrx_4643
			)
		)
	)
}

/*predicate func_18(Variable v__warned_4765, DoStmt target_18) {
	exists(BlockStmt obj_0 | obj_0=target_18.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
				and obj_2.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__warned_4765
			)
			and exists(BlockStmt obj_3 | obj_3=obj_1.getThen() |
				exists(ExprStmt obj_4 | obj_4=obj_3.getStmt(1) |
					exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
						obj_5.getTarget().hasName("lockdep_rcu_suspicious")
						and obj_5.getArgument(0) instanceof StringLiteral
						and obj_5.getArgument(1) instanceof Literal
						and obj_5.getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
					)
				)
				and obj_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_4765
			)
		)
	)
	and target_18.getCondition() instanceof Literal
}

*/
/*predicate func_20(Variable v__warned_4765, IfStmt target_20) {
	exists(LogicalAndExpr obj_0 | obj_0=target_20.getCondition() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(NotExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(LogicalOrExpr obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getLeftOperand() instanceof Literal
					and obj_3.getRightOperand().(FunctionCall).getTarget().hasName("rcu_read_lock_held")
				)
			)
			and obj_1.getRightOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
		)
		and obj_0.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__warned_4765
	)
	and exists(BlockStmt obj_4 | obj_4=target_20.getThen() |
		exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(1) |
			exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
				obj_6.getTarget().hasName("lockdep_rcu_suspicious")
				and obj_6.getArgument(0) instanceof StringLiteral
				and obj_6.getArgument(1) instanceof Literal
				and obj_6.getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
			)
		)
		and obj_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_4765
	)
}

*/
/*predicate func_21(Variable v__warned_4765, LogicalAndExpr target_35, ExprStmt target_21) {
	target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_4765
	and target_21.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_35
}

*/
/*predicate func_22(LogicalAndExpr target_35, Function func, ExprStmt target_22) {
	exists(FunctionCall obj_0 | obj_0=target_22.getExpr() |
		obj_0.getTarget().hasName("lockdep_rcu_suspicious")
		and obj_0.getArgument(0) instanceof StringLiteral
		and obj_0.getArgument(1) instanceof Literal
		and obj_0.getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
	)
	and target_22.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_35
	and target_22.getEnclosingFunction() = func
}

*/
/*predicate func_24(Variable v__UNIQUE_ID_rcu3406_4765, ExprStmt target_24) {
	target_24.getExpr().(VariableAccess).getTarget()=v__UNIQUE_ID_rcu3406_4765
}

*/
predicate func_25(Variable vlink_sta_4661, RelationalOperation target_10, IfStmt target_25) {
	target_25.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vlink_sta_4661
	and target_25.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_26(Variable vsta_4649, Variable vlink_sta_4661, RelationalOperation target_10, ExprStmt target_26) {
	exists(AssignExpr obj_0 | obj_0=target_26.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="deflink"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vsta_4649
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vlink_sta_4661
	)
	and target_26.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_27(Variable vlink_sta_4661, Variable vstats_4662, Parameter vfast_rx_4644, Function func, IfStmt target_27) {
	exists(PointerFieldAccess obj_0 | obj_0=target_27.getCondition() |
		obj_0.getTarget().getName()="uses_rss"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfast_rx_4644
	)
	and exists(ExprStmt obj_1 | obj_1=target_27.getThen() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getLValue().(VariableAccess).getTarget()=vstats_4662
			and obj_2.getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(0) instanceof DoStmt
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_27.getElse() |
		exists(AssignExpr obj_4 | obj_4=obj_3.getExpr() |
			exists(AddressOfExpr obj_5 | obj_5=obj_4.getRValue() |
				exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
					obj_6.getTarget().getName()="rx_stats"
					and obj_6.getQualifier().(VariableAccess).getTarget()=vlink_sta_4661
				)
			)
			and obj_4.getLValue().(VariableAccess).getTarget()=vstats_4662
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_27
}

/*predicate func_28(Variable vlink_sta_4661, Variable v__ptr_4773, ExprStmt target_28) {
	exists(StmtExpr obj_0 | obj_0=target_28.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(AsmStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getChild(1) |
					obj_3.getTarget().getName()="pcpu_rx_stats"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vlink_sta_4661
				)
				and obj_2.getChild(0).(VariableAccess).getTarget()=v__ptr_4773
			)
			and obj_1.getStmt(2) instanceof ExprStmt
		)
	)
}

*/
/*predicate func_29(Variable vlink_sta_4661, ExprStmt target_26, ExprStmt target_36, VariableAccess target_29) {
	target_29.getTarget()=vlink_sta_4661
	and target_26.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_29.getLocation())
	and target_29.getLocation().isBefore(target_36.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

*/
/*predicate func_30(Variable vlink_sta_4661, AsmStmt target_37, VariableAccess target_30) {
	target_30.getTarget()=vlink_sta_4661
	and target_37.getChild(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_30.getLocation())
}

*/
predicate func_31(Parameter vrx_4643, Parameter vfast_rx_4644, LogicalAndExpr target_31) {
	exists(LogicalAndExpr obj_0 | obj_0=target_31.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="key"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vrx_4643
		)
		and exists(NotExpr obj_2 | obj_2=obj_0.getRightOperand() |
			exists(BitwiseAndExpr obj_3 | obj_3=obj_2.getOperand() |
				exists(PointerFieldAccess obj_4 | obj_4=obj_3.getLeftOperand() |
					obj_4.getTarget().getName()="flag"
					and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("ieee80211_rx_status *")
				)
			)
		)
	)
	and exists(FunctionCall obj_5 | obj_5=target_31.getRightOperand() |
		exists(SubExpr obj_6 | obj_6=obj_5.getArgument(1) |
			exists(PointerFieldAccess obj_7 | obj_7=obj_6.getLeftOperand() |
				obj_7.getTarget().getName()="len"
				and obj_7.getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
			)
			and exists(PointerFieldAccess obj_8 | obj_8=obj_6.getRightOperand() |
				obj_8.getTarget().getName()="icv_len"
				and obj_8.getQualifier().(VariableAccess).getTarget()=vfast_rx_4644
			)
		)
		and obj_5.getTarget().hasName("pskb_trim")
		and obj_5.getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	)
}

predicate func_33(Variable vstats_4662, ExprStmt target_33) {
	exists(AssignExpr obj_0 | obj_0=target_33.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vstats_4662
		and obj_0.getRValue().(StmtExpr).getStmt() instanceof BlockStmt
	)
}

predicate func_34(Function func, BlockStmt target_34) {
	target_34.getStmt(0) instanceof ExprStmt
	and target_34.getStmt(1) instanceof IfStmt
	and target_34.getEnclosingFunction() = func
}

predicate func_35(Function func, LogicalAndExpr target_35) {
	target_35.getLeftOperand() instanceof LogicalAndExpr
	and target_35.getRightOperand() instanceof NotExpr
	and target_35.getEnclosingFunction() = func
}

predicate func_36(Variable vlink_sta_4661, Variable vstats_4662, ExprStmt target_36) {
	exists(AssignExpr obj_0 | obj_0=target_36.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="rx_stats"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vlink_sta_4661
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vstats_4662
	)
}

predicate func_37(Variable vlink_sta_4661, Variable v__ptr_4773, AsmStmt target_37) {
	exists(PointerFieldAccess obj_0 | obj_0=target_37.getChild(1) |
		obj_0.getTarget().getName()="pcpu_rx_stats"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vlink_sta_4661
	)
	and target_37.getChild(0).(VariableAccess).getTarget()=v__ptr_4773
}

from Function func, Variable vsta_4649, Variable vlink_sta_4661, Variable vstats_4662, Variable v__UNIQUE_ID_rcu3406_4765, Variable v__warned_4765, Variable v__vpp_verify_4773, Variable v__ptr_4773, Variable v__per_cpu_offset, Parameter vrx_4643, Parameter vfast_rx_4644, PointerFieldAccess target_2, DoStmt target_3, ExprStmt target_5, VariableAccess target_6, VariableAccess target_7, DeclStmt target_8, DeclStmt target_9, RelationalOperation target_10, ExprStmt target_11, DoStmt target_13, PointerDereferenceExpr target_17, IfStmt target_25, ExprStmt target_26, IfStmt target_27, LogicalAndExpr target_31, ExprStmt target_33, BlockStmt target_34, LogicalAndExpr target_35, ExprStmt target_36, AsmStmt target_37
where
not func_0(vrx_4643, target_31)
and not func_1(vrx_4643)
and func_2(vfast_rx_4644, target_33, target_2)
and func_3(v__vpp_verify_4773, target_3)
and func_5(v__ptr_4773, v__per_cpu_offset, target_5)
and func_6(vrx_4643, target_6)
and func_7(vrx_4643, target_7)
and func_8(func, target_8)
and func_9(func, target_9)
and func_10(vrx_4643, target_34, target_10)
and func_11(vlink_sta_4661, v__UNIQUE_ID_rcu3406_4765, target_10, target_11)
and func_13(func, target_13)
and func_17(vsta_4649, vrx_4643, target_17)
and func_25(vlink_sta_4661, target_10, target_25)
and func_26(vsta_4649, vlink_sta_4661, target_10, target_26)
and func_27(vlink_sta_4661, vstats_4662, vfast_rx_4644, func, target_27)
and func_31(vrx_4643, vfast_rx_4644, target_31)
and func_33(vstats_4662, target_33)
and func_34(func, target_34)
and func_35(func, target_35)
and func_36(vlink_sta_4661, vstats_4662, target_36)
and func_37(vlink_sta_4661, v__ptr_4773, target_37)
and vsta_4649.getType().hasName("sta_info *")
and vlink_sta_4661.getType().hasName("link_sta_info *")
and vstats_4662.getType().hasName("ieee80211_sta_rx_stats *")
and v__UNIQUE_ID_rcu3406_4765.getType().hasName("link_sta_info *")
and v__warned_4765.getType().hasName("bool")
and v__vpp_verify_4773.getType().hasName("const void *")
and v__ptr_4773.getType().hasName("unsigned long")
and v__per_cpu_offset.getType() instanceof ArrayType
and vrx_4643.getType().hasName("ieee80211_rx_data *")
and vfast_rx_4644.getType().hasName("ieee80211_fast_rx *")
and vsta_4649.(LocalVariable).getFunction() = func
and vlink_sta_4661.(LocalVariable).getFunction() = func
and vstats_4662.(LocalVariable).getFunction() = func
and v__UNIQUE_ID_rcu3406_4765.(LocalVariable).getFunction() = func
and v__warned_4765.(LocalVariable).getFunction() = func
and v__vpp_verify_4773.(LocalVariable).getFunction() = func
and v__ptr_4773.(LocalVariable).getFunction() = func
and not v__per_cpu_offset.getParentScope+() = func
and vrx_4643.getFunction() = func
and vfast_rx_4644.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
