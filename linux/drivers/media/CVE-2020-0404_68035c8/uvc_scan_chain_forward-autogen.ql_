/**
 * @name linux-68035c80e129c4cfec659aac4180354530b26527-uvc_scan_chain_forward
 * @id cpp/linux/68035c80e129c4cfec659aac4180354530b26527/uvc-scan-chain-forward
 * @description linux-68035c80e129c4cfec659aac4180354530b26527-drivers/media/usb/uvc/uvc_driver.c-uvc_scan_chain_forward CVE-2020-0404
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vforward_1482, SwitchStmt target_1, EqualityOperation target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="next"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="chain"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vforward_1482
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(ValueFieldAccess).getTarget().getName()="prev"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="chain"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vforward_1482
	and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getType().hasName("unsigned int")
	and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vforward_1482, SwitchStmt target_1) {
	target_1.getExpr().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_1.getExpr().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vforward_1482
	and target_1.getExpr().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="32767"
	and target_1.getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="6"
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bNrInPins"
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vforward_1482
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
}

predicate func_2(Variable vforward_1482, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget()=vforward_1482
	and target_2.getRightOperand().(VariableAccess).getTarget().getType().hasName("uvc_entity *")
}

from Function func, Variable vforward_1482, SwitchStmt target_1, EqualityOperation target_2
where
not func_0(vforward_1482, target_1, target_2)
and func_1(vforward_1482, target_1)
and func_2(vforward_1482, target_2)
and vforward_1482.getType().hasName("uvc_entity *")
and vforward_1482.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
