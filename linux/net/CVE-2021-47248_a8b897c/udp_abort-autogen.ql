/**
 * @name linux-a8b897c7bcd47f4147d066e22cc01d1026d7640e-udp_abort
 * @id cpp/linux/a8b897c7bcd47f4147d066e22cc01d1026d7640e/udp-abort
 * @description linux-a8b897c7bcd47f4147d066e22cc01d1026d7640e-net/ipv4/udp.c-udp_abort CVE-2021-47248
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_2856, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("sock_flag")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_2856
	and target_0.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_2856, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sk_err"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_2856
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_2(Parameter vsk_2856, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_2856
}

from Function func, Parameter vsk_2856, ExprStmt target_1, ExprStmt target_2
where
not func_0(vsk_2856, target_1, target_2, func)
and func_1(vsk_2856, target_1)
and func_2(vsk_2856, target_2)
and vsk_2856.getType().hasName("sock *")
and vsk_2856.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
