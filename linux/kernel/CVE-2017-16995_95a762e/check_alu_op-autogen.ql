/**
 * @name linux-95a762e2c8c942780948091f8f2a4f32fce1ac6f-check_alu_op
 * @id cpp/linux/95a762e2c8c942780948091f8f2a4f32fce1ac6f/check-alu-op
 * @description linux-95a762e2c8c942780948091f8f2a4f32fce1ac6f-kernel/bpf/verifier.c-check_alu_op CVE-2017-16995
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinsn_2322, Variable vregs_2324, EqualityOperation target_2, ExprStmt target_3, PointerArithmeticOperation target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="code"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="7"
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="7"
	and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__mark_reg_known")
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vregs_2324
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="dst_reg"
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="imm"
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vinsn_2322, Variable vregs_2324, EqualityOperation target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("__mark_reg_known")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vregs_2324
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="dst_reg"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="imm"
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Parameter vinsn_2322, BlockStmt target_5, EqualityOperation target_2) {
	target_2.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="code"
	and target_2.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_2.getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="8"
	and target_2.getRightOperand().(Literal).getValue()="8"
	and target_2.getParent().(IfStmt).getThen()=target_5
}

predicate func_3(Parameter vinsn_2322, Variable vregs_2324, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="type"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vregs_2324
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="dst_reg"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
}

predicate func_4(Parameter vinsn_2322, Variable vregs_2324, PointerArithmeticOperation target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget()=vregs_2324
	and target_4.getRightOperand().(PointerFieldAccess).getTarget().getName()="dst_reg"
	and target_4.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
}

predicate func_5(Parameter vinsn_2322, Variable vregs_2324, BlockStmt target_5) {
	target_5.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="code"
	and target_5.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_5.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="7"
	and target_5.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="7"
	and target_5.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vregs_2324
	and target_5.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="dst_reg"
	and target_5.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vregs_2324
	and target_5.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="src_reg"
	and target_5.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getTarget().getName()="live"
	and target_5.getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("is_pointer_value")
	and target_5.getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
	and target_5.getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="src_reg"
	and target_5.getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2322
	and target_5.getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
}

from Function func, Parameter vinsn_2322, Variable vregs_2324, ExprStmt target_1, EqualityOperation target_2, ExprStmt target_3, PointerArithmeticOperation target_4, BlockStmt target_5
where
not func_0(vinsn_2322, vregs_2324, target_2, target_3, target_4)
and func_1(vinsn_2322, vregs_2324, target_2, target_1)
and func_2(vinsn_2322, target_5, target_2)
and func_3(vinsn_2322, vregs_2324, target_3)
and func_4(vinsn_2322, vregs_2324, target_4)
and func_5(vinsn_2322, vregs_2324, target_5)
and vinsn_2322.getType().hasName("bpf_insn *")
and vregs_2324.getType().hasName("bpf_reg_state *")
and vinsn_2322.getFunction() = func
and vregs_2324.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
