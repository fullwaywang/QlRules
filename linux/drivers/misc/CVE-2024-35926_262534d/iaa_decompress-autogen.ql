/**
 * @name linux-262534ddc88dfea7474ed18adfecf856e4fbe054-iaa_decompress
 * @id cpp/linux/262534ddc88dfea7474ed18adfecf856e4fbe054/iaa-decompress
 * @description linux-262534ddc88dfea7474ed18adfecf856e4fbe054-drivers/crypto/intel/iaa/iaa_crypto_main.c-iaa_decompress CVE-2024-35926
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdisable_async_1367, ExprStmt target_2, LogicalAndExpr target_3) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand().(VariableAccess).getTarget()=vdisable_async_1367
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getRightOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vctx_1370, ExprStmt target_2, NotExpr target_1) {
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="async_mode"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1370
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(NotExpr target_1, Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("idxd_free_desc")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("idxd_wq *")
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("idxd_desc *")
	and target_2.getParent().(IfStmt).getCondition()=target_1
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vdisable_async_1367, Variable vctx_1370, BlockStmt target_4, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(PointerFieldAccess).getTarget().getName()="async_mode"
	and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1370
	and target_3.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vdisable_async_1367
	and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Function func, BlockStmt target_4) {
	target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-115"
	and target_4.getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_4.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_4.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_dev_dbg")
	and target_4.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("device *")
	and target_4.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="%s: returning -EINPROGRESS\n"
	and target_4.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_4.getEnclosingFunction() = func
}

from Function func, Parameter vdisable_async_1367, Variable vctx_1370, NotExpr target_1, ExprStmt target_2, LogicalAndExpr target_3, BlockStmt target_4
where
not func_0(vdisable_async_1367, target_2, target_3)
and func_1(vctx_1370, target_2, target_1)
and func_2(target_1, func, target_2)
and func_3(vdisable_async_1367, vctx_1370, target_4, target_3)
and func_4(func, target_4)
and vdisable_async_1367.getType().hasName("bool")
and vctx_1370.getType().hasName("iaa_compression_ctx *")
and vdisable_async_1367.getFunction() = func
and vctx_1370.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
