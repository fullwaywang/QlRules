/**
 * @name linux-c4c07b4d6fa1f11880eab8e076d3d060ef3f55fc-snmp_version
 * @id cpp/linux/c4c07b4d6fa1f11880eab8e076d3d060ef3f55fc/snmp-version
 * @description linux-c4c07b4d6fa1f11880eab8e076d3d060ef3f55fc-net/ipv4/netfilter/nf_nat_snmp_basic_main.c-snmp_version CVE-2019-9162
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdatalen_106, IfStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vdatalen_106
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(RelationalOperation).getGreaterOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const void *")
	and target_1.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="1"
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-524"
	and target_1.getEnclosingFunction() = func
}

from Function func, Parameter vdatalen_106, IfStmt target_1
where
not func_0(vdatalen_106, target_1, func)
and func_1(func, target_1)
and vdatalen_106.getType().hasName("size_t")
and vdatalen_106.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
