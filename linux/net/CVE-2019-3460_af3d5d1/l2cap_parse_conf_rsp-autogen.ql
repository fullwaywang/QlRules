/**
 * @name linux-af3d5d1c87664a4f150fcf3534c6567cb19909b0-l2cap_parse_conf_rsp
 * @id cpp/linux/af3d5d1c87664a4f150fcf3534c6567cb19909b0/l2cap-parse-conf-rsp
 * @description linux-af3d5d1c87664a4f150fcf3534c6567cb19909b0-net/bluetooth/l2cap_core.c-l2cap_parse_conf_rsp CVE-2019-3460
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable volen_3542, ExprStmt target_13, AddressOfExpr target_18) {
	exists(EqualityOperation target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_0.getAnOperand().(Literal).getValue()="2"
		and target_0.getParent().(IfStmt).getThen()=target_13
		and target_18.getOperand().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(EqualityOperation target_16, Function func) {
	exists(BreakStmt target_1 |
		target_1.getParent().(IfStmt).getCondition()=target_16
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable volen_3542, BlockStmt target_19, ExprStmt target_10) {
	exists(EqualityOperation target_2 |
		target_2.getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_2.getAnOperand().(Literal).getValue()="2"
		and target_2.getParent().(IfStmt).getThen()=target_19
		and target_2.getAnOperand().(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_3(EqualityOperation target_17, Function func) {
	exists(BreakStmt target_3 |
		target_3.getParent().(IfStmt).getCondition()=target_17
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(Variable volen_3542, VariableAccess target_20, ExprStmt target_13) {
	exists(IfStmt target_4 |
		target_4.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_4.getCondition().(EqualityOperation).getAnOperand() instanceof SizeofExprOperator
		and target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_20
		and target_13.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_4.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation()))
}

predicate func_5(Variable volen_3542, VariableAccess target_20, EqualityOperation target_17) {
	exists(IfStmt target_5 |
		target_5.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_5.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="2"
		and target_5.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_20
		and target_5.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_17.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_6(Variable volen_3542, VariableAccess target_20, ExprStmt target_10) {
	exists(IfStmt target_6 |
		target_6.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_6.getCondition().(EqualityOperation).getAnOperand() instanceof SizeofExprOperator
		and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_20
		and target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_6.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation()))
}

predicate func_7(Variable volen_3542, VariableAccess target_20) {
	exists(IfStmt target_7 |
		target_7.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_7.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="1"
		and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_20)
}

/*predicate func_8(Function func, SizeofExprOperator target_8) {
		target_8.getValue()="9"
		and target_8.getEnclosingFunction() = func
}

*/
/*predicate func_9(Function func, SizeofExprOperator target_9) {
		target_9.getValue()="16"
		and target_9.getEnclosingFunction() = func
}

*/
predicate func_10(Variable volen_3542, Variable vval_3543, Variable vefs_3545, EqualityOperation target_17, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
		and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vefs_3545
		and target_10.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vval_3543
		and target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=volen_3542
		and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_11(Parameter vchan_3536, Variable vefs_3545, EqualityOperation target_17, IfStmt target_11) {
		target_11.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="local_stype"
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchan_3536
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="stype"
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vefs_3545
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="stype"
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vefs_3545
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="local_stype"
		and target_11.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchan_3536
		and target_11.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-111"
		and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_12(Variable vptr_3540, Variable vendptr_3541, Variable vefs_3545, EqualityOperation target_17, ExprStmt target_12) {
		target_12.getExpr().(FunctionCall).getTarget().hasName("l2cap_add_conf_opt")
		and target_12.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vptr_3540
		and target_12.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="6"
		and target_12.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="16"
		and target_12.getExpr().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vefs_3545
		and target_12.getExpr().(FunctionCall).getArgument(4).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vendptr_3541
		and target_12.getExpr().(FunctionCall).getArgument(4).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vptr_3540
		and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_13(Variable volen_3542, Variable vval_3543, Variable vrfc_3544, EqualityOperation target_16, ExprStmt target_13) {
		target_13.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
		and target_13.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vrfc_3544
		and target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vval_3543
		and target_13.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=volen_3542
		and target_13.getParent().(IfStmt).getCondition()=target_16
}

predicate func_14(Variable volen_3542, ExprStmt target_13, VariableAccess target_14) {
		target_14.getTarget()=volen_3542
		and target_14.getParent().(EQExpr).getAnOperand().(SizeofExprOperator).getValue()="9"
		and target_14.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_13
}

predicate func_15(Variable volen_3542, BlockStmt target_19, VariableAccess target_15) {
		target_15.getTarget()=volen_3542
		and target_15.getParent().(EQExpr).getAnOperand().(SizeofExprOperator).getValue()="16"
		and target_15.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_19
}

predicate func_16(Variable volen_3542, ExprStmt target_13, EqualityOperation target_16) {
		target_16.getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_16.getAnOperand() instanceof SizeofExprOperator
		and target_16.getParent().(IfStmt).getThen()=target_13
}

predicate func_17(Variable volen_3542, BlockStmt target_19, EqualityOperation target_17) {
		target_17.getAnOperand().(VariableAccess).getTarget()=volen_3542
		and target_17.getAnOperand() instanceof SizeofExprOperator
		and target_17.getParent().(IfStmt).getThen()=target_19
}

predicate func_18(Variable volen_3542, AddressOfExpr target_18) {
		target_18.getOperand().(VariableAccess).getTarget()=volen_3542
}

predicate func_19(Function func, BlockStmt target_19) {
		target_19.getStmt(0) instanceof ExprStmt
		and target_19.getStmt(1) instanceof IfStmt
		and target_19.getStmt(2) instanceof ExprStmt
		and target_19.getEnclosingFunction() = func
}

predicate func_20(Variable vtype_3542, VariableAccess target_20) {
		target_20.getTarget()=vtype_3542
}

from Function func, Parameter vchan_3536, Variable vptr_3540, Variable vendptr_3541, Variable vtype_3542, Variable volen_3542, Variable vval_3543, Variable vrfc_3544, Variable vefs_3545, ExprStmt target_10, IfStmt target_11, ExprStmt target_12, ExprStmt target_13, VariableAccess target_14, VariableAccess target_15, EqualityOperation target_16, EqualityOperation target_17, AddressOfExpr target_18, BlockStmt target_19, VariableAccess target_20
where
not func_0(volen_3542, target_13, target_18)
and not func_1(target_16, func)
and not func_2(volen_3542, target_19, target_10)
and not func_3(target_17, func)
and not func_4(volen_3542, target_20, target_13)
and not func_5(volen_3542, target_20, target_17)
and not func_6(volen_3542, target_20, target_10)
and not func_7(volen_3542, target_20)
and func_10(volen_3542, vval_3543, vefs_3545, target_17, target_10)
and func_11(vchan_3536, vefs_3545, target_17, target_11)
and func_12(vptr_3540, vendptr_3541, vefs_3545, target_17, target_12)
and func_13(volen_3542, vval_3543, vrfc_3544, target_16, target_13)
and func_14(volen_3542, target_13, target_14)
and func_15(volen_3542, target_19, target_15)
and func_16(volen_3542, target_13, target_16)
and func_17(volen_3542, target_19, target_17)
and func_18(volen_3542, target_18)
and func_19(func, target_19)
and func_20(vtype_3542, target_20)
and vchan_3536.getType().hasName("l2cap_chan *")
and vptr_3540.getType().hasName("void *")
and vendptr_3541.getType().hasName("void *")
and vtype_3542.getType().hasName("int")
and volen_3542.getType().hasName("int")
and vval_3543.getType().hasName("unsigned long")
and vrfc_3544.getType().hasName("l2cap_conf_rfc")
and vefs_3545.getType().hasName("l2cap_conf_efs")
and vchan_3536.getFunction() = func
and vptr_3540.(LocalVariable).getFunction() = func
and vendptr_3541.(LocalVariable).getFunction() = func
and vtype_3542.(LocalVariable).getFunction() = func
and volen_3542.(LocalVariable).getFunction() = func
and vval_3543.(LocalVariable).getFunction() = func
and vrfc_3544.(LocalVariable).getFunction() = func
and vefs_3545.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
