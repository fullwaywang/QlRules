/**
 * @name linux-9034c87d61be8cff989017740a91701ac8195a1d-event_enable_write
 * @id cpp/linux/9034c87d61be8cff989017740a91701ac8195a1d/event-enable-write
 * @description linux-9034c87d61be8cff989017740a91701ac8195a1d-kernel/trace/trace_events.c-event_enable_write CVE-2023-52879
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfile_1392, NotExpr target_2) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vfile_1392
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_1392
	and target_0.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vfile_1392
	and target_0.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_0.getLeftOperand().(VariableAccess).getLocation().isBefore(target_2.getOperand().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vfile_1392, VariableAccess target_1) {
	target_1.getTarget()=vfile_1392
	and target_1.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="1"
}

predicate func_2(Variable vfile_1392, NotExpr target_2) {
	target_2.getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vfile_1392
}

from Function func, Variable vfile_1392, VariableAccess target_1, NotExpr target_2
where
not func_0(vfile_1392, target_2)
and func_1(vfile_1392, target_1)
and func_2(vfile_1392, target_2)
and vfile_1392.getType().hasName("trace_event_file *")
and vfile_1392.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
