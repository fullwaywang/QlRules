/**
 * @name chromium-ec37e94452ab5895037151dd5088b4e47dba1e90-blink__DocumentPictureInPicture__requestWindow
 * @id cpp/chromium/ec37e94452ab5895037151dd5088b4e47dba1e90/blinkdocumentpictureinpicturerequestwindow
 * @description chromium-ec37e94452ab5895037151dd5088b4e47dba1e90-third_party/blink/renderer/modules/document_picture_in_picture/document_picture_in_picture.cc-blink__DocumentPictureInPicture__requestWindow CVE-2023-2937
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdom_window_50, FunctionCall target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getQualifier() |
		obj_0.getTarget().hasName("GetFrame")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vdom_window_50
	)
	and target_0.getTarget().hasName("IsMainFrame")
	and not target_0.getTarget().hasName("IsOutermostMainFrame")
}

predicate func_1(Function func, StringLiteral target_1) {
	target_1.getValue()="Opening a PiP window from iframe is not allowed"
	and not target_1.getValue()="Opening a PiP window is only allowed from a top-level browsing context"
	and target_1.getEnclosingFunction() = func
}

from Function func, Variable vdom_window_50, FunctionCall target_0, StringLiteral target_1
where
func_0(vdom_window_50, target_0)
and func_1(func, target_1)
and vdom_window_50.getType().hasName("LocalDOMWindow *")
and vdom_window_50.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
