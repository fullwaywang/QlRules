/**
 * @name linux-bc84dd2c33e0c10fd90d60f0cfc0bfb504d4692d-parse_options
 * @id cpp/linux/bc84dd2c33e0c10fd90d60f0cfc0bfb504d4692d/parse-options
 * @description linux-bc84dd2c33e0c10fd90d60f0cfc0bfb504d4692d-fs/f2fs/super.c-parse_options CVE-2024-42160
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(VariableAccess target_6, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition() instanceof FunctionCall
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(VariableAccess target_6, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition() instanceof FunctionCall
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Variable vsbi_688, Variable varg_696, FunctionCall target_2) {
	target_2.getTarget().hasName("f2fs_build_fault_attr")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vsbi_688
	and target_2.getArgument(1).(VariableAccess).getTarget()=varg_696
	and target_2.getArgument(2).(AddExpr).getValue()="262143"
}

predicate func_3(Variable vsbi_688, Variable varg_696, FunctionCall target_3) {
	target_3.getTarget().hasName("f2fs_build_fault_attr")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vsbi_688
	and target_3.getArgument(1).(Literal).getValue()="0"
	and target_3.getArgument(2).(VariableAccess).getTarget()=varg_696
}

predicate func_4(VariableAccess target_6, Function func, ExprStmt target_4) {
	target_4.getExpr() instanceof FunctionCall
	and target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
	and target_4.getEnclosingFunction() = func
}

predicate func_5(VariableAccess target_6, Function func, ExprStmt target_5) {
	target_5.getExpr() instanceof FunctionCall
	and target_5.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vtoken_705, VariableAccess target_6) {
	target_6.getTarget()=vtoken_705
}

from Function func, Variable vsbi_688, Variable varg_696, Variable vtoken_705, FunctionCall target_2, FunctionCall target_3, ExprStmt target_4, ExprStmt target_5, VariableAccess target_6
where
not func_0(target_6, func)
and not func_1(target_6, func)
and func_2(vsbi_688, varg_696, target_2)
and func_3(vsbi_688, varg_696, target_3)
and func_4(target_6, func, target_4)
and func_5(target_6, func, target_5)
and func_6(vtoken_705, target_6)
and vsbi_688.getType().hasName("f2fs_sb_info *")
and varg_696.getType().hasName("int")
and vtoken_705.getType().hasName("int")
and vsbi_688.(LocalVariable).getFunction() = func
and varg_696.(LocalVariable).getFunction() = func
and vtoken_705.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
