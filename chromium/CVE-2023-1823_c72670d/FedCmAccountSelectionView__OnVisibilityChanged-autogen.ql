/**
 * @name chromium-c72670da208ec24ad630490a2f183ee943a7e6d9-FedCmAccountSelectionView__OnVisibilityChanged
 * @id cpp/chromium/c72670da208ec24ad630490a2f183ee943a7e6d9/fedcmaccountselectionviewonvisibilitychanged
 * @description chromium-c72670da208ec24ad630490a2f183ee943a7e6d9-chrome/browser/ui/views/webid/fedcm_account_selection_view_desktop.cc-FedCmAccountSelectionView__OnVisibilityChanged CVE-2023-1823
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_2, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="input_protector_"
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
			)
		)
		and obj_0.getTarget().hasName("VisibilityChanged")
		and obj_0.getArgument(0).(Literal).getValue()="1"
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(2)=target_0
			and obj_4.getCondition()=target_2
		)
	)
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(EqualityOperation target_2, Function func) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="input_protector_"
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
			)
		)
		and obj_0.getTarget().hasName("VisibilityChanged")
		and obj_0.getArgument(0).(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_3 | obj_3=target_1.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getElse().(BlockStmt).getStmt(2)=target_1
			and obj_4.getCondition()=target_2
		)
	)
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Function func, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("Visibility")
	and target_2.getEnclosingFunction() = func
}

from Function func, EqualityOperation target_2
where
not func_0(target_2, func)
and not func_1(target_2, func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
