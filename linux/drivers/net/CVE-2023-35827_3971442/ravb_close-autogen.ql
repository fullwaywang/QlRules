/**
 * @name linux-3971442870713de527684398416970cf025b4f89-ravb_close
 * @id cpp/linux/3971442870713de527684398416970cf025b4f89/ravb-close
 * @description linux-3971442870713de527684398416970cf025b4f89-drivers/net/ethernet/renesas/ravb_main.c-ravb_close CVE-2023-35827
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_2133, IfStmt target_1, NotExpr target_2, ArrayExpr target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("cancel_work_sync")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="work"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_2133
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vpriv_2133, IfStmt target_1) {
	target_1.getCondition().(PointerFieldAccess).getTarget().getName()="multi_irqs"
	and target_1.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const ravb_hw_info *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("free_irq")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="tx_irqs"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_2133
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("net_device *")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("free_irq")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rx_irqs"
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_2133
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("net_device *")
}

predicate func_2(Variable vpriv_2133, NotExpr target_2) {
	target_2.getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_2.getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ravb_tstamp_skb *")
	and target_2.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ts_skb_list"
	and target_2.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_2133
}

predicate func_3(Variable vpriv_2133, ArrayExpr target_3) {
	target_3.getArrayBase().(PointerFieldAccess).getTarget().getName()="tx_irqs"
	and target_3.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_2133
}

from Function func, Variable vpriv_2133, IfStmt target_1, NotExpr target_2, ArrayExpr target_3
where
not func_0(vpriv_2133, target_1, target_2, target_3, func)
and func_1(vpriv_2133, target_1)
and func_2(vpriv_2133, target_2)
and func_3(vpriv_2133, target_3)
and vpriv_2133.getType().hasName("ravb_private *")
and vpriv_2133.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
