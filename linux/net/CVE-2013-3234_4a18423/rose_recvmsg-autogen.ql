/**
 * @name linux-4a184233f21645cf0b719366210ed445d1024d72-rose_recvmsg
 * @id cpp/linux/4a184233f21645cf0b719366210ed445d1024d72/rose-recvmsg
 * @description linux-4a184233f21645cf0b719366210ed445d1024d72-net/rose/af_rose.c-rose_recvmsg CVE-2013-3234
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsrose_1219, Parameter vmsg_1215, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsrose_1219
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="msg_namelen"
		and target_0.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_1215
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsrose_1219, EqualityOperation target_1) {
		target_1.getAnOperand().(VariableAccess).getTarget()=vsrose_1219
		and target_1.getAnOperand().(Literal).getValue()="0"
}

predicate func_2(Variable vsrose_1219, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="srose_family"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsrose_1219
		and target_2.getExpr().(AssignExpr).getRValue().(Literal).getValue()="11"
}

predicate func_3(Parameter vmsg_1215, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("skb_copy_datagram_iovec")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_3.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="msg_iov"
		and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_1215
		and target_3.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("size_t")
}

predicate func_4(Parameter vmsg_1215, RelationalOperation target_4) {
		 (target_4 instanceof GEExpr or target_4 instanceof LEExpr)
		and target_4.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="msg_namelen"
		and target_4.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_1215
		and target_4.getLesserOperand().(SizeofTypeOperator).getType() instanceof LongType
		and target_4.getLesserOperand().(SizeofTypeOperator).getValue()="64"
}

from Function func, Variable vsrose_1219, Parameter vmsg_1215, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4
where
not func_0(vsrose_1219, vmsg_1215, target_1, target_2, target_3, target_4)
and func_1(vsrose_1219, target_1)
and func_2(vsrose_1219, target_2)
and func_3(vmsg_1215, target_3)
and func_4(vmsg_1215, target_4)
and vsrose_1219.getType().hasName("sockaddr_rose *")
and vmsg_1215.getType().hasName("msghdr *")
and vsrose_1219.(LocalVariable).getFunction() = func
and vmsg_1215.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
