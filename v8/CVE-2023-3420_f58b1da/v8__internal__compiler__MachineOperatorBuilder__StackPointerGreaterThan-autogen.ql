/**
 * @name v8-f58b1da35ee8ce5c7a4aebe270c9e00c09330f96-v8__internal__compiler__MachineOperatorBuilder__StackPointerGreaterThan
 * @id cpp/v8/f58b1da35ee8ce5c7a4aebe270c9e00c09330f96/v8internalcompilermachineoperatorbuilderstackpointergreaterthan
 * @description v8-f58b1da35ee8ce5c7a4aebe270c9e00c09330f96-src/compiler/machine-operator.cc-v8__internal__compiler__MachineOperatorBuilder__StackPointerGreaterThan CVE-2023-3420
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(VariableAccess target_3, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("V8_Fatal")
	and target_1.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_1.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("const char *")
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_3
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(VariableAccess target_3, Function func, ReturnStmt target_2) {
	target_2.getExpr().(AddressOfExpr).getOperand().(ReferenceFieldAccess).getTarget().getName()="kStackPointerGreaterThanJSIterationBody"
	and target_2.getExpr().(AddressOfExpr).getOperand().(ReferenceFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cache_"
	and target_2.getExpr().(AddressOfExpr).getOperand().(ReferenceFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_3
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vkind_2040, VariableAccess target_3) {
	target_3.getTarget()=vkind_2040
}

from Function func, Parameter vkind_2040, ReturnStmt target_2, VariableAccess target_3
where
not func_1(target_3, func)
and func_2(target_3, func, target_2)
and func_3(vkind_2040, target_3)
and vkind_2040.getType().hasName("StackCheckKind")
and vkind_2040.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
