/**
 * @name linux-481221775d53d6215a6e5e9ce1cce6d2b4ab9a46-nsim_bpf_map_alloc
 * @id cpp/linux/481221775d53d6215a6e5e9ce1cce6d2b4ab9a46/nsim-bpf-map-alloc
 * @description linux-481221775d53d6215a6e5e9ce1cce6d2b4ab9a46-drivers/net/netdevsim/bpf.c-nsim_bpf_map_alloc CVE-2021-4135
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voffmap_486, Variable vnmap_488, Variable vi_489, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, AddressOfExpr target_4, ExprStmt target_5, RelationalOperation target_6) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="value"
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="entry"
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnmap_488
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_489
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(ValueFieldAccess).getTarget().getName()="value_size"
	and target_0.getExpr().(FunctionCall).getArgument(2).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="map"
	and target_0.getExpr().(FunctionCall).getArgument(2).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=voffmap_486
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(2).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(2).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_6.getGreaterOperand().(PrefixDecrExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter voffmap_486, Variable vi_489, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nsim_map_alloc_elem")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=voffmap_486
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vi_489
}

predicate func_2(Parameter voffmap_486, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dev_ops"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=voffmap_486
	and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const bpf_map_dev_ops")
}

predicate func_3(Variable vnmap_488, Variable vi_489, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u32 *")
	and target_3.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="key"
	and target_3.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="entry"
	and target_3.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnmap_488
	and target_3.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_489
}

predicate func_4(Variable vnmap_488, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="l"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnmap_488
}

predicate func_5(Variable vi_489, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("u32 *")
	and target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vi_489
}

predicate func_6(Variable vi_489, RelationalOperation target_6) {
	 (target_6 instanceof GEExpr or target_6 instanceof LEExpr)
	and target_6.getGreaterOperand().(PrefixDecrExpr).getOperand().(VariableAccess).getTarget()=vi_489
	and target_6.getLesserOperand().(Literal).getValue()="0"
}

from Function func, Parameter voffmap_486, Variable vnmap_488, Variable vi_489, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, AddressOfExpr target_4, ExprStmt target_5, RelationalOperation target_6
where
not func_0(voffmap_486, vnmap_488, vi_489, target_1, target_2, target_3, target_4, target_5, target_6)
and func_1(voffmap_486, vi_489, target_1)
and func_2(voffmap_486, target_2)
and func_3(vnmap_488, vi_489, target_3)
and func_4(vnmap_488, target_4)
and func_5(vi_489, target_5)
and func_6(vi_489, target_6)
and voffmap_486.getType().hasName("bpf_offloaded_map *")
and vnmap_488.getType().hasName("nsim_bpf_bound_map *")
and vi_489.getType().hasName("int")
and voffmap_486.getFunction() = func
and vnmap_488.(LocalVariable).getFunction() = func
and vi_489.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
