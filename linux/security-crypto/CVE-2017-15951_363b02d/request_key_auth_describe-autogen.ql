/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-request_key_auth_describe
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/request-key-auth-describe
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/request_key_auth.c-request_key_auth_describe CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkey_69, ExprStmt target_1, FunctionCall target_0) {
		target_0.getTarget().hasName("key_is_instantiated")
		and not target_0.getTarget().hasName("key_is_positive")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vkey_69
		and target_0.getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Function func, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("seq_printf")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
		and target_1.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()=" pid:%d ci:%zu"
		and target_1.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="pid"
		and target_1.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("request_key_auth *")
		and target_1.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="callout_len"
		and target_1.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("request_key_auth *")
		and target_1.getEnclosingFunction() = func
}

from Function func, Parameter vkey_69, FunctionCall target_0, ExprStmt target_1
where
func_0(vkey_69, target_1, target_0)
and func_1(func, target_1)
and vkey_69.getType().hasName("const key *")
and vkey_69.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
