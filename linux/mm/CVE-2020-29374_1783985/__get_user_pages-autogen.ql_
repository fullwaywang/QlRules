/**
 * @name linux-17839856fd588f4ab6b789f482ed3ffd7c403e1f-__get_user_pages
 * @id cpp/linux/17839856fd588f4ab6b789f482ed3ffd7c403e1f/--get-user-pages
 * @description linux-17839856fd588f4ab6b789f482ed3ffd7c403e1f-mm/gup.c-__get_user_pages CVE-2020-29374
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vgup_flags_1024, Variable vvma_1028, LogicalOrExpr target_3, NotExpr target_4, VariableAccess target_0) {
	target_0.getTarget()=vgup_flags_1024
	and vgup_flags_1024.getIndex() = 4
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("follow_hugetlb_page")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("mm_struct *")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvma_1028
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("page **")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("vm_area_struct **")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(VariableAccess).getTarget().getType().hasName("long")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(8).(VariableAccess).getTarget().getType().hasName("int *")
	and target_3.getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getLocation())
	and target_0.getLocation().isBefore(target_4.getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
}

predicate func_1(Variable vvma_1028, Variable vfoll_flags_1048, FunctionCall target_5, ExprStmt target_6) {
exists(IfStmt target_1 |
	target_1.getCondition().(FunctionCall).getTarget().hasName("should_force_cow_break")
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_1028
	and target_1.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfoll_flags_1048
	and target_1.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vfoll_flags_1048
	and target_1.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="1"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Variable vvma_1028, Variable vfoll_flags_1048, IfStmt target_8, ExprStmt target_6, ExprStmt target_9) {
exists(IfStmt target_2 |
	target_2.getCondition().(FunctionCall).getTarget().hasName("should_force_cow_break")
	and target_2.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_1028
	and target_2.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfoll_flags_1048
	and target_2.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vfoll_flags_1048
	and target_2.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="1"
	and target_2.getLocation().isBefore(target_8.getLocation())
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_2.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_2.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vgup_flags_1024, Variable vvma_1028, LogicalOrExpr target_3) {
	target_3.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vvma_1028
	and target_3.getRightOperand().(FunctionCall).getTarget().hasName("check_vma_flags")
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_1028
	and target_3.getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vgup_flags_1024
}

predicate func_4(Parameter vgup_flags_1024, NotExpr target_4) {
	target_4.getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vgup_flags_1024
	and target_4.getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="32"
}

predicate func_5(Variable vvma_1028, FunctionCall target_5) {
	target_5.getTarget().hasName("is_vm_hugetlb_page")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vvma_1028
}

predicate func_6(Parameter vgup_flags_1024, Variable vvma_1028, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("long")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("follow_hugetlb_page")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("mm_struct *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvma_1028
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("page **")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("vm_area_struct **")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(VariableAccess).getTarget().getType().hasName("long")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(7).(VariableAccess).getTarget()=vgup_flags_1024
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(8).(VariableAccess).getTarget().getType().hasName("int *")
}

predicate func_8(Function func, IfStmt target_8) {
	target_8.getCondition().(FunctionCall).getTarget().hasName("fatal_signal_pending")
	and target_8.getCondition().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("get_current")
	and target_8.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("long")
	and target_8.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-4"
	and target_8.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vvma_1028, Variable vfoll_flags_1048, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("page *")
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("follow_page_mask")
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_1028
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vfoll_flags_1048
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("follow_page_context")
}

from Function func, Parameter vgup_flags_1024, Variable vvma_1028, Variable vfoll_flags_1048, VariableAccess target_0, LogicalOrExpr target_3, NotExpr target_4, FunctionCall target_5, ExprStmt target_6, IfStmt target_8, ExprStmt target_9
where
func_0(vgup_flags_1024, vvma_1028, target_3, target_4, target_0)
and not func_1(vvma_1028, vfoll_flags_1048, target_5, target_6)
and not func_2(vvma_1028, vfoll_flags_1048, target_8, target_6, target_9)
and func_3(vgup_flags_1024, vvma_1028, target_3)
and func_4(vgup_flags_1024, target_4)
and func_5(vvma_1028, target_5)
and func_6(vgup_flags_1024, vvma_1028, target_6)
and func_8(func, target_8)
and func_9(vvma_1028, vfoll_flags_1048, target_9)
and vgup_flags_1024.getType().hasName("unsigned int")
and vvma_1028.getType().hasName("vm_area_struct *")
and vfoll_flags_1048.getType().hasName("unsigned int")
and vgup_flags_1024.getFunction() = func
and vvma_1028.(LocalVariable).getFunction() = func
and vfoll_flags_1048.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
