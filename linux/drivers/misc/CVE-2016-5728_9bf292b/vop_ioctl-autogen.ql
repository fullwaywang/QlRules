/**
 * @name linux-9bf292bfca94694a721449e3fd752493856710f6-vop_ioctl
 * @id cpp/linux/9bf292bfca94694a721449e3fd752493856710f6/vop-ioctl
 * @description linux-9bf292bfca94694a721449e3fd752493856710f6-drivers/misc/mic/vop/vop_vringh.c-vop_ioctl CVE-2016-5728
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_927, Variable vdd_932, Variable vdd_config_932, ExprStmt target_1, AddressOfExpr target_2, FunctionCall target_3, ExprStmt target_4) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("memcmp")
		and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdd_932
		and target_0.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdd_config_932
		and target_0.getCondition().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_927
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
		and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_0.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vret_927, FunctionCall target_3, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_927
		and target_1.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Variable vdd_932, AddressOfExpr target_2) {
		target_2.getOperand().(VariableAccess).getTarget()=vdd_932
		and target_2.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("mic_desc_size")
}

predicate func_3(Variable vdd_932, Variable vdd_config_932, FunctionCall target_3) {
		target_3.getTarget().hasName("copy_from_user")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vdd_config_932
		and target_3.getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
		and target_3.getArgument(2).(FunctionCall).getTarget().hasName("mic_desc_size")
		and target_3.getArgument(2).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdd_932
}

predicate func_4(Variable vret_927, Variable vdd_config_932, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_927
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vop_virtio_add_device")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vop_vdev *")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdd_config_932
}

from Function func, Variable vret_927, Variable vdd_932, Variable vdd_config_932, ExprStmt target_1, AddressOfExpr target_2, FunctionCall target_3, ExprStmt target_4
where
not func_0(vret_927, vdd_932, vdd_config_932, target_1, target_2, target_3, target_4)
and func_1(vret_927, target_3, target_1)
and func_2(vdd_932, target_2)
and func_3(vdd_932, vdd_config_932, target_3)
and func_4(vret_927, vdd_config_932, target_4)
and vret_927.getType().hasName("int")
and vdd_932.getType().hasName("mic_device_desc")
and vdd_config_932.getType().hasName("mic_device_desc *")
and vret_927.(LocalVariable).getFunction() = func
and vdd_932.(LocalVariable).getFunction() = func
and vdd_config_932.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
