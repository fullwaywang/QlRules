/**
 * @name linux-96c5c6e6a5b6db592acae039fed54b5c8844cd35-predicate_parse
 * @id cpp/linux/96c5c6e6a5b6db592acae039fed54b5c8844cd35/predicate-parse
 * @description linux-96c5c6e6a5b6db592acae039fed54b5c8844cd35-kernel/trace/trace_events_filter.c-predicate_parse CVE-2019-19072
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_421, RelationalOperation target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_421
	and target_0.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4)
}

predicate func_1(RelationalOperation target_4, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="out_free"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, UnaryMinusExpr target_2) {
	target_2.getValue()="-22"
	and target_2.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr() instanceof FunctionCall
	and target_2.getEnclosingFunction() = func
}

predicate func_3(RelationalOperation target_4, Function func, ReturnStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_3.getExpr().(FunctionCall).getArgument(0) instanceof UnaryMinusExpr
	and target_3.getParent().(IfStmt).getCondition()=target_4
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getGreaterOperand().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int *")
	and target_4.getGreaterOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("int *")
	and target_4.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getEnclosingFunction() = func
}

from Function func, Variable vret_421, UnaryMinusExpr target_2, ReturnStmt target_3, RelationalOperation target_4
where
not func_0(vret_421, target_4)
and not func_1(target_4, func)
and func_2(func, target_2)
and func_3(target_4, func, target_3)
and func_4(func, target_4)
and vret_421.getType().hasName("int")
and vret_421.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
