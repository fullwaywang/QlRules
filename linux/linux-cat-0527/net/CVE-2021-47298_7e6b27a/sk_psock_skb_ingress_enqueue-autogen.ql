/**
 * @name linux-7e6b27a69167f97c56b5437871d29e9722c3e470-sk_psock_skb_ingress_enqueue
 * @id cpp/linux/7e6b27a69167f97c56b5437871d29e9722c3e470/sk-psock-skb-ingress-enqueue
 * @description linux-7e6b27a69167f97c56b5437871d29e9722c3e470-net/core/skmsg.c-sk_psock_skb_ingress_enqueue CVE-2021-47298
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnum_sge_501, FunctionCall target_2, ReturnStmt target_0) {
	target_0.getExpr().(VariableAccess).getTarget()=vnum_sge_501
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_1(Parameter vmsg_499, FunctionCall target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_499
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vnum_sge_501, FunctionCall target_2) {
	target_2.getTarget().hasName("__builtin_expect")
	and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vnum_sge_501
	and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_2.getArgument(1).(Literal).getValue()="0"
}

from Function func, Parameter vmsg_499, Variable vnum_sge_501, ReturnStmt target_0, ExprStmt target_1, FunctionCall target_2
where
func_0(vnum_sge_501, target_2, target_0)
and func_1(vmsg_499, target_2, target_1)
and func_2(vnum_sge_501, target_2)
and vmsg_499.getType().hasName("sk_msg *")
and vnum_sge_501.getType().hasName("int")
and vmsg_499.getFunction() = func
and vnum_sge_501.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
