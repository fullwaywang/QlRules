/**
 * @name linux-8d8f9a477de0d7962342eedf2a599215b7c63d28-diRead
 * @id cpp/linux/8d8f9a477de0d7962342eedf2a599215b7c63d28/diread
 * @description linux-8d8f9a477de0d7962342eedf2a599215b7c63d28-fs/jfs/jfs_imap.c-diRead CVE-2024-43858
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vagstart_298, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5, Function func) {
exists(ExprStmt target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(BinaryBitwiseOperation obj_1 | obj_1=obj_0.getRValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getRightOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="bmap"
						and obj_4.getQualifier().(FunctionCall).getTarget().hasName("JFS_SBI")
					)
					and obj_3.getTarget().getName()="db_bmap"
				)
				and obj_2.getTarget().getName()="dn_agl2size"
			)
			and obj_1.getLeftOperand().(VariableAccess).getTarget()=vagstart_298
		)
		and obj_0.getLValue().(VariableAccess).getType().hasName("int")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_1.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
)
}

predicate func_2(ExprStmt target_6, Function func) {
exists(IfStmt target_2 |
	exists(LogicalOrExpr obj_0 | obj_0=target_2.getCondition() |
		exists(RelationalOperation obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getGreaterOperand().(VariableAccess).getType().hasName("int")
			and obj_1.getLesserOperand().(Literal).getValue()="128"
		)
		and exists(RelationalOperation obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getLesserOperand().(VariableAccess).getType().hasName("int")
			and obj_2.getGreaterOperand().(Literal).getValue()="0"
		)
	)
	and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_6.getLocation())
)
}

predicate func_3(Function func, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("release_metapage")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("metapage *")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vagstart_298, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="agstart"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("iag *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vagstart_298
	)
}

predicate func_5(Variable vagstart_298, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().hasName("JFS_IP")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
			)
			and obj_1.getTarget().getName()="agstart"
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vagstart_298
	)
}

predicate func_6(Function func, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
			and obj_1.getRightOperand().(SubExpr).getValue()="7"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_6.getEnclosingFunction() = func
}

from Function func, Variable vagstart_298, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6
where
not func_1(vagstart_298, target_3, target_4, target_5, func)
and not func_2(target_6, func)
and func_3(func, target_3)
and func_4(vagstart_298, target_4)
and func_5(vagstart_298, target_5)
and func_6(func, target_6)
and vagstart_298.getType().hasName("s64")
and vagstart_298.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
