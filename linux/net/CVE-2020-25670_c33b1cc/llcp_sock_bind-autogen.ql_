/**
 * @name linux-c33b1cc62ac05c1dbb1cdafe2eb66da01c76ca8d-llcp_sock_bind
 * @id cpp/linux/c33b1cc62ac05c1dbb1cdafe2eb66da01c76ca8d/llcp-sock-bind
 * @description linux-c33b1cc62ac05c1dbb1cdafe2eb66da01c76ca8d-net/nfc/llcp_sock.c-llcp_sock_bind CVE-2020-25670
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vllcp_sock_62, NotExpr target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("nfc_llcp_local_put")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="local"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_62
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vllcp_sock_62, EqualityOperation target_4, ExprStmt target_5) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("nfc_llcp_local_put")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="local"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_62
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vllcp_sock_62, NotExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="service_name"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_62
}

predicate func_3(Variable vllcp_sock_62, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ssap"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_62
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nfc_llcp_get_sdp_ssap")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("nfc_llcp_local *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vllcp_sock_62
}

predicate func_4(Variable vllcp_sock_62, EqualityOperation target_4) {
	target_4.getLeftOperand().(PointerFieldAccess).getTarget().getName()="ssap"
	and target_4.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_62
	and target_4.getRightOperand().(Literal).getValue()="255"
}

predicate func_5(Variable vllcp_sock_62, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="service_name"
	and target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_62
}

from Function func, Variable vllcp_sock_62, NotExpr target_2, ExprStmt target_3, EqualityOperation target_4, ExprStmt target_5
where
not func_0(vllcp_sock_62, target_2, target_3)
and not func_1(vllcp_sock_62, target_4, target_5)
and func_2(vllcp_sock_62, target_2)
and func_3(vllcp_sock_62, target_3)
and func_4(vllcp_sock_62, target_4)
and func_5(vllcp_sock_62, target_5)
and vllcp_sock_62.getType().hasName("nfc_llcp_sock *")
and vllcp_sock_62.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
