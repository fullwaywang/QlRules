/**
 * @name linux-24444af5ddf729376b90db0f135fa19973cb5dab-mlxbf_gige_open
 * @id cpp/linux/24444af5ddf729376b90db0f135fa19973cb5dab/mlxbf-gige-open
 * @description linux-24444af5ddf729376b90db0f135fa19973cb5dab-drivers/net/ethernet/mellanox/mlxbf_gige/mlxbf_gige_main.c-mlxbf_gige_open CVE-2024-35907
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_131, FunctionCall target_0) {
	target_0.getTarget().hasName("mlxbf_gige_free_irqs")
	and not target_0.getTarget().hasName("mlxbf_gige_rx_deinit")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vpriv_131
}

predicate func_1(Variable vpriv_131, Variable verr_135, ExprStmt target_8, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_135
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mlxbf_gige_request_irqs")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpriv_131
	and target_1.getLocation().isBefore(target_8.getLocation())
}

predicate func_2(Variable verr_135, ExprStmt target_8, IfStmt target_2) {
	target_2.getCondition().(VariableAccess).getTarget()=verr_135
	and target_2.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_135
	and target_2.getLocation().isBefore(target_8.getLocation())
}

predicate func_3(Variable verr_135, ExprStmt target_9, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget()=verr_135
	and target_3.getThen().(GotoStmt).getName() ="free_irqs"
	and target_3.getLocation().isBefore(target_9.getLocation())
}

predicate func_4(ExprStmt target_10, Function func, ExprStmt target_4) {
	target_4.getExpr() instanceof FunctionCall
	and target_10.getLocation().isBefore(target_4.getLocation())
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vnetdev_129, ExprStmt target_11, ExprStmt target_12, Function func) {
exists(ExprStmt target_5 |
	target_5.getExpr().(FunctionCall).getTarget().hasName("netif_stop_queue")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_129
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getLocation().isBefore(target_11.getLocation())
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_6(Variable vpriv_131, ExprStmt target_11, PointerArithmeticOperation target_13, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(FunctionCall).getTarget().hasName("napi_disable")
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="napi"
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_131
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getLocation().isBefore(target_11.getLocation())
	and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_7(Variable vpriv_131, ExprStmt target_11, Function func) {
exists(ExprStmt target_7 |
	target_7.getExpr().(FunctionCall).getTarget().hasName("netif_napi_del")
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="napi"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_131
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
	and target_7.getLocation().isBefore(target_11.getLocation()))
}

predicate func_8(Variable vpriv_131, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("mlxbf_gige_cache_stats")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpriv_131
}

predicate func_9(Variable vpriv_131, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="valid_polarity"
	and target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_131
	and target_9.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("phy_stop")
	and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("phy_device *")
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vpriv_131, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("mlxbf_gige_tx_deinit")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpriv_131
}

predicate func_12(Parameter vnetdev_129, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("netif_start_queue")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_129
}

predicate func_13(Variable vpriv_131, PointerArithmeticOperation target_13) {
	target_13.getLeftOperand().(PointerFieldAccess).getTarget().getName()="base"
	and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_131
	and target_13.getRightOperand().(Literal).getValue()="48"
}

from Function func, Variable vpriv_131, Variable verr_135, Parameter vnetdev_129, FunctionCall target_0, ExprStmt target_1, IfStmt target_2, IfStmt target_3, ExprStmt target_4, ExprStmt target_8, ExprStmt target_9, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12, PointerArithmeticOperation target_13
where
func_0(vpriv_131, target_0)
and func_1(vpriv_131, verr_135, target_8, target_1)
and func_2(verr_135, target_8, target_2)
and func_3(verr_135, target_9, target_3)
and func_4(target_10, func, target_4)
and not func_5(vnetdev_129, target_11, target_12, func)
and not func_6(vpriv_131, target_11, target_13, func)
and not func_7(vpriv_131, target_11, func)
and func_8(vpriv_131, target_8)
and func_9(vpriv_131, target_9)
and func_10(func, target_10)
and func_11(vpriv_131, target_11)
and func_12(vnetdev_129, target_12)
and func_13(vpriv_131, target_13)
and vpriv_131.getType().hasName("mlxbf_gige *")
and verr_135.getType().hasName("int")
and vnetdev_129.getType().hasName("net_device *")
and vpriv_131.(LocalVariable).getFunction() = func
and verr_135.(LocalVariable).getFunction() = func
and vnetdev_129.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
