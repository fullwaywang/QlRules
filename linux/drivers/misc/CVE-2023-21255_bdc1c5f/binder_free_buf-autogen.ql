/**
 * @name linux-bdc1c5fac982845a58d28690cdb56db8c88a530d-binder_free_buf
 * @id cpp/linux/bdc1c5fac982845a58d28690cdb56db8c88a530d/binder-free-buf
 * @description linux-bdc1c5fac982845a58d28690cdb56db8c88a530d-binder_free_buf CVE-2023-21255
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vthread_3749, Parameter vbuffer_3750, Parameter vis_failure_3750, Parameter vproc_3748, FunctionCall target_0) {
		target_0.getTarget().hasName("binder_transaction_buffer_release")
		and not target_0.getTarget().hasName("binder_release_entire_buffer")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vproc_3748
		and target_0.getArgument(1).(VariableAccess).getTarget()=vthread_3749
		and target_0.getArgument(2).(VariableAccess).getTarget()=vbuffer_3750
		and target_0.getArgument(3).(Literal).getValue()="0"
		and target_0.getArgument(4).(VariableAccess).getTarget()=vis_failure_3750
}

from Function func, Parameter vthread_3749, Parameter vbuffer_3750, Parameter vis_failure_3750, Parameter vproc_3748, FunctionCall target_0
where
func_0(vthread_3749, vbuffer_3750, vis_failure_3750, vproc_3748, target_0)
and vthread_3749.getType().hasName("binder_thread *")
and vbuffer_3750.getType().hasName("binder_buffer *")
and vis_failure_3750.getType().hasName("bool")
and vproc_3748.getType().hasName("binder_proc *")
and vthread_3749.getFunction() = func
and vbuffer_3750.getFunction() = func
and vis_failure_3750.getFunction() = func
and vproc_3748.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
