/**
 * @name linux-87797fad6cce28ec9be3c13f031776ff4f104cfc-xen_irq_init
 * @id cpp/linux/87797fad6cce28ec9be3c13f031776ff4f104cfc/xen-irq-init
 * @description linux-87797fad6cce28ec9be3c13f031776ff4f104cfc-drivers/xen/events/events_base.c-xen_irq_init CVE-2023-34324
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="152"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(ExprStmt target_2, Function func) {
exists(DoStmt target_1 |
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__init_work")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="work"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="data"
	and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="work"
	and target_1.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lockdep_init_map")
	and target_1.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lockdep_map"
	and target_1.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="(work_completion)(&(&info->rwork)->work)"
	and target_1.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
	and target_1.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
	and target_1.getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="entry"
	and target_1.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="func"
	and target_1.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="work"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation()))
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("set_info_for_irq")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("irq_info *")
	and target_2.getEnclosingFunction() = func
}

from Function func, SizeofExprOperator target_0, ExprStmt target_2
where
func_0(func, target_0)
and not func_1(target_2, func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
