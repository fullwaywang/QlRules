/**
 * @name linux-5f9562ebe710c307adc5f666bf1a2162ee7977c0-__rds_conn_create
 * @id cpp/linux/5f9562ebe710c307adc5f666bf1a2162ee7977c0/--rds-conn-create
 * @description linux-5f9562ebe710c307adc5f666bf1a2162ee7977c0-net/rds/connection.c-__rds_conn_create CVE-2021-45480
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vconn_168, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="c_path"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_168
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("__builtin_expect")
	and target_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getArgument(1).(Literal).getValue()="1"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vconn_168, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="c_loopback"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_168
	and target_2.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_3(Variable vconn_168, FunctionCall target_1, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("kmem_cache_free")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kmem_cache *")
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vconn_168
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

from Function func, Variable vconn_168, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vconn_168, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vconn_168, target_2)
and func_3(vconn_168, target_1, target_3)
and vconn_168.getType().hasName("rds_connection *")
and vconn_168.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
