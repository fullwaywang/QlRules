/**
 * @name chromium-7337133682ab0404b753c563dde2ae2b1dc13171-blink__WebPlatformMediaStreamSource__SetSourceMuted
 * @id cpp/chromium/7337133682ab0404b753c563dde2ae2b1dc13171/blinkwebplatformmediastreamsourcesetsourcemuted
 * @description chromium-7337133682ab0404b753c563dde2ae2b1dc13171-third_party/blink/renderer/platform/exported/mediastream/web_platform_media_stream_source.cc-blink__WebPlatformMediaStreamSource__SetSourceMuted CVE-2023-4572
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_1, Function func, ReturnStmt target_0) {
	target_0.getParent().(IfStmt).getCondition()=target_1
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, NotExpr target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().hasName("Owner")
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and obj_0.getTarget().hasName("operator blink::MediaStreamSource *")
	)
	and target_1.getEnclosingFunction() = func
}

from Function func, ReturnStmt target_0, NotExpr target_1
where
func_0(target_1, func, target_0)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
