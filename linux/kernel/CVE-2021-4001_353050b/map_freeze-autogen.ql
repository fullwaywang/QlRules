/**
 * @name linux-353050be4c19e102178ccc05988101887c25ae53-map_freeze
 * @id cpp/linux/353050be4c19e102178ccc05988101887c25ae53/map-freeze
 * @description linux-353050be4c19e102178ccc05988101887c25ae53-map_freeze CVE-2021-4001
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmap_1609, BlockStmt target_3, AddressOfExpr target_4) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("bpf_map_write_active")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vmap_1609
		and target_0.getParent().(IfStmt).getThen()=target_3
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vmap_1609, BlockStmt target_3, VariableAccess target_1) {
		target_1.getTarget()=vmap_1609
		and target_1.getParent().(PointerFieldAccess).getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Variable vmap_1609, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="writecnt"
		and target_2.getQualifier().(VariableAccess).getTarget()=vmap_1609
}

predicate func_3(Function func, BlockStmt target_3) {
		target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-16"
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vmap_1609, AddressOfExpr target_4) {
		target_4.getOperand().(PointerFieldAccess).getTarget().getName()="freeze_mutex"
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmap_1609
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Variable vmap_1609, VariableAccess target_1, PointerFieldAccess target_2, BlockStmt target_3, AddressOfExpr target_4
where
not func_0(vmap_1609, target_3, target_4)
and func_1(vmap_1609, target_3, target_1)
and func_2(vmap_1609, target_2)
and func_3(func, target_3)
and func_4(vmap_1609, target_4)
and vmap_1609.getType().hasName("bpf_map *")
and vmap_1609.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
