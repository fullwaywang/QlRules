/**
 * @name linux-77e70d351db7de07a46ac49b87a6c3c7a60fca7e-sunkbd_interrupt
 * @id cpp/linux/77e70d351db7de07a46ac49b87a6c3c7a60fca7e/sunkbd-interrupt
 * @description linux-77e70d351db7de07a46ac49b87a6c3c7a60fca7e-drivers/input/keyboard/sunkbd.c-sunkbd_interrupt CVE-2020-25669
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsunkbd_81, VariableAccess target_2, AddressOfExpr target_3, AddressOfExpr target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(PointerFieldAccess).getTarget().getName()="enabled"
	and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsunkbd_81
	and target_0.getThen() instanceof ExprStmt
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_2
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsunkbd_81, VariableAccess target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("schedule_work")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tq"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsunkbd_81
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_2
}

predicate func_2(Parameter vdata_79, VariableAccess target_2) {
	target_2.getTarget()=vdata_79
}

predicate func_3(Variable vsunkbd_81, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="wait"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsunkbd_81
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__wake_up")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="1"
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
}

predicate func_4(Variable vsunkbd_81, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="tq"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsunkbd_81
}

from Function func, Parameter vdata_79, Variable vsunkbd_81, ExprStmt target_1, VariableAccess target_2, AddressOfExpr target_3, AddressOfExpr target_4
where
not func_0(vsunkbd_81, target_2, target_3, target_4)
and func_1(vsunkbd_81, target_2, target_1)
and func_2(vdata_79, target_2)
and func_3(vsunkbd_81, target_3)
and func_4(vsunkbd_81, target_4)
and vdata_79.getType().hasName("unsigned char")
and vsunkbd_81.getType().hasName("sunkbd *")
and vdata_79.getFunction() = func
and vsunkbd_81.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
