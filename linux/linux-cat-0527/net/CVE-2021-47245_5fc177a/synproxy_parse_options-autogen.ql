/**
 * @name linux-5fc177ab759418c9537433e63301096e733fb915-synproxy_parse_options
 * @id cpp/linux/5fc177ab759418c9537433e63301096e733fb915/synproxy-parse-options
 * @description linux-5fc177ab759418c9537433e63301096e733fb915-net/netfilter/nf_synproxy_core.c-synproxy_parse_options CVE-2021-47245
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlength_31, ExprStmt target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlength_31
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_4.getLocation()))
}

predicate func_1(Variable vlength_31, VariableAccess target_6, ExprStmt target_7, RelationalOperation target_8) {
exists(IfStmt target_1 |
	target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlength_31
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="2"
	and target_1.getThen() instanceof ReturnStmt
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
	and target_7.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_8.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_3(Function func, ReturnStmt target_3) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vlength_31, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u8 *")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("skb_header_pointer")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const sk_buff *")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddExpr).getRightOperand().(SizeofExprOperator).getValue()="20"
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vlength_31
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("u8[40]")
}

predicate func_6(Variable vopcode_40, VariableAccess target_6) {
	target_6.getTarget()=vopcode_40
}

predicate func_7(Variable vlength_31, ExprStmt target_7) {
	target_7.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vlength_31
}

predicate func_8(Variable vlength_31, RelationalOperation target_8) {
	 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
	and target_8.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_8.getLesserOperand().(VariableAccess).getTarget()=vlength_31
}

from Function func, Variable vlength_31, Variable vopcode_40, ReturnStmt target_3, ExprStmt target_4, VariableAccess target_6, ExprStmt target_7, RelationalOperation target_8
where
not func_0(vlength_31, target_4, func)
and not func_1(vlength_31, target_6, target_7, target_8)
and func_3(func, target_3)
and func_4(vlength_31, target_4)
and func_6(vopcode_40, target_6)
and func_7(vlength_31, target_7)
and func_8(vlength_31, target_8)
and vlength_31.getType().hasName("int")
and vopcode_40.getType().hasName("int")
and vlength_31.(LocalVariable).getFunction() = func
and vopcode_40.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
