/**
 * @name linux-4c0c03ca54f72fdd5912516ad0a23ec5cf01bda7-exit_cifs
 * @id cpp/linux/4c0c03ca54f72fdd5912516ad0a23ec5cf01bda7/exit-cifs
 * @description linux-4c0c03ca54f72fdd5912516ad0a23ec5cf01bda7-fs/cifs/cifsfs.c-exit_cifs CVE-2010-2524
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vkey_type_dns_resolver, FunctionCall target_0) {
		target_0.getTarget().hasName("unregister_key_type")
		and not target_0.getTarget().hasName("cifs_exit_dns_resolver")
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vkey_type_dns_resolver
}

predicate func_1(Variable vkey_type_dns_resolver, VariableAccess target_1) {
		target_1.getTarget()=vkey_type_dns_resolver
		and target_1.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

from Function func, Variable vkey_type_dns_resolver, FunctionCall target_0, VariableAccess target_1
where
func_0(vkey_type_dns_resolver, target_0)
and func_1(vkey_type_dns_resolver, target_1)
and vkey_type_dns_resolver.getType().hasName("key_type")
and not vkey_type_dns_resolver.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
