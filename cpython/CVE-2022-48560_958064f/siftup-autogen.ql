/**
 * @name cpython-958064f8d2b84062b0582bbae911df8ccfc11fd6-siftup
 * @id cpp/cpython/958064f8d2b84062b0582bbae911df8ccfc11fd6/siftup
 * @description cpython-958064f8d2b84062b0582bbae911df8ccfc11fd6-Modules/_heapqmodule.c-siftup CVE-2022-48560
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(PostfixIncrExpr target_0 |
		target_0.getOperand().(PointerFieldAccess).getTarget().getName()="ob_refcnt"
		and target_0.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("PyObject *")
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(RelationalOperation target_9, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ob_refcnt"
		and target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("PyObject *")
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vcmp_57, RelationalOperation target_9, RelationalOperation target_11) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcmp_57
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PyObject_RichCompareBool")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("PyObject *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_11.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_5(RelationalOperation target_9, Function func) {
	exists(DoStmt target_5 |
		target_5.getCondition().(Literal).getValue()="0"
		and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PrefixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ob_refcnt"
		and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PrefixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("PyObject *")
		and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getElse().(ExprStmt).getExpr().(ExprCall).getExpr().(PointerDereferenceExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tp_dealloc"
		and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getElse().(ExprStmt).getExpr().(ExprCall).getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_5
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_5.getEnclosingFunction() = func)
}

predicate func_6(RelationalOperation target_9, Function func) {
	exists(DoStmt target_6 |
		target_6.getCondition().(Literal).getValue()="0"
		and target_6.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PrefixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ob_refcnt"
		and target_6.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PrefixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("PyObject *")
		and target_6.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_6.getStmt().(BlockStmt).getStmt(1).(IfStmt).getElse().(ExprStmt).getExpr().(ExprCall).getExpr().(PointerDereferenceExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tp_dealloc"
		and target_6.getStmt().(BlockStmt).getStmt(1).(IfStmt).getElse().(ExprStmt).getExpr().(ExprCall).getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_6
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_6.getEnclosingFunction() = func)
}

predicate func_7(Variable vchildpos_55, Variable varr_56, ArrayExpr target_7) {
		target_7.getArrayBase().(VariableAccess).getTarget()=varr_56
		and target_7.getArrayOffset().(VariableAccess).getTarget()=vchildpos_55
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PyObject_RichCompareBool")
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=varr_56
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ArrayExpr).getArrayOffset().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vchildpos_55
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ArrayExpr).getArrayOffset().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

/*predicate func_8(Variable vchildpos_55, Variable varr_56, ArrayExpr target_8) {
		target_8.getArrayBase().(VariableAccess).getTarget()=varr_56
		and target_8.getArrayOffset().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vchildpos_55
		and target_8.getArrayOffset().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PyObject_RichCompareBool")
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=varr_56
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vchildpos_55
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

*/
predicate func_9(Variable vchildpos_55, RelationalOperation target_9) {
		 (target_9 instanceof GTExpr or target_9 instanceof LTExpr)
		and target_9.getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vchildpos_55
		and target_9.getLesserOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_9.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("Py_ssize_t")
}

predicate func_11(Variable vcmp_57, RelationalOperation target_11) {
		 (target_11 instanceof GTExpr or target_11 instanceof LTExpr)
		and target_11.getLesserOperand().(VariableAccess).getTarget()=vcmp_57
		and target_11.getGreaterOperand().(Literal).getValue()="0"
}

from Function func, Variable vchildpos_55, Variable varr_56, Variable vcmp_57, ArrayExpr target_7, RelationalOperation target_9, RelationalOperation target_11
where
not func_0(func)
and not func_1(target_9, func)
and not func_2(vcmp_57, target_9, target_11)
and not func_5(target_9, func)
and not func_6(target_9, func)
and func_7(vchildpos_55, varr_56, target_7)
and func_9(vchildpos_55, target_9)
and func_11(vcmp_57, target_11)
and vchildpos_55.getType().hasName("Py_ssize_t")
and varr_56.getType().hasName("PyObject **")
and vcmp_57.getType().hasName("int")
and vchildpos_55.(LocalVariable).getFunction() = func
and varr_56.(LocalVariable).getFunction() = func
and vcmp_57.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
