/**
 * @name linux-742ab6df974ae8384a2dd213db1a3a06cf6d8936-vmx_disable_fb_clear
 * @id cpp/linux/742ab6df974ae8384a2dd213db1a3a06cf6d8936/vmx-disable-fb-clear
 * @description linux-742ab6df974ae8384a2dd213db1a3a06cf6d8936-arch/x86/kvm/vmx/vmx.c-vmx_disable_fb_clear CVE-2022-29901
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="0"
	and not target_0.getValue()="32"
	and target_0.getParent().(DoStmt).getParent().(BlockStmt).getStmt(2) instanceof DoStmt
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vmsr_381, FunctionCall target_1) {
	target_1.getTarget().hasName("wrmsrl")
	and not target_1.getTarget().hasName("__wrmsr")
	and target_1.getArgument(0).(Literal).getValue()="291"
	and target_1.getArgument(1).(VariableAccess).getTarget()=vmsr_381
}

predicate func_2(Variable vmsr_381) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("__rdmsr")
	and target_2.getArgument(0) instanceof Literal
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmsr_381)
}

predicate func_3(Variable vmsr_381, ExprStmt target_8) {
exists(BinaryBitwiseOperation target_3 |
	target_3.getLeftOperand().(VariableAccess).getTarget()=vmsr_381
	and target_3.getRightOperand().(Literal).getValue()="32"
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_3.getLeftOperand().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_5(Variable vmsr_381, Function func, DoStmt target_5) {
	target_5.getCondition() instanceof Literal
	and target_5.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmsr_381
	and target_5.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("paravirt_read_msr")
	and target_5.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0) instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

/*predicate func_6(Variable vmsr_381, FunctionCall target_6) {
	target_6.getTarget().hasName("paravirt_read_msr")
	and target_6.getArgument(0) instanceof Literal
	and target_6.getParent().(AssignExpr).getRValue() = target_6
	and target_6.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmsr_381
}

*/
predicate func_8(Variable vmsr_381, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="msr_ia32_mcu_opt_ctrl"
	and target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("vcpu_vmx *")
	and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmsr_381
}

from Function func, Variable vmsr_381, Literal target_0, FunctionCall target_1, DoStmt target_5, ExprStmt target_8
where
func_0(func, target_0)
and func_1(vmsr_381, target_1)
and not func_2(vmsr_381)
and not func_3(vmsr_381, target_8)
and func_5(vmsr_381, func, target_5)
and func_8(vmsr_381, target_8)
and vmsr_381.getType().hasName("u64")
and vmsr_381.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
