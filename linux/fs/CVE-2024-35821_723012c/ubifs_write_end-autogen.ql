/**
 * @name linux-723012cab779eee8228376754e22c6594229bf8f-ubifs_write_end
 * @id cpp/linux/723012cab779eee8228376754e22c6594229bf8f/ubifs-write-end
 * @description linux-723012cab779eee8228376754e22c6594229bf8f-fs/ubifs/file.c-ubifs_write_end CVE-2024-35821
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vlen_537, Parameter vpage_538, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, NotExpr target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vlen_537
	and target_0.getCondition().(EqualityOperation).getRightOperand().(BinaryBitwiseOperation).getValue()="4096"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("SetPageUptodate")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_538
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpage_538, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PagePrivate")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_538
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("attach_page_private")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_538
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_long_inc")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dirty_pg_cnt"
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ubifs_info *")
}

predicate func_2(Parameter vlen_537, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_2.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="UBIFS DBG gen (pid %d): copied %d instead of %d, read page and repeat\n"
	and target_2.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="pid"
	and target_2.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_2.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vlen_537
}

predicate func_3(Parameter vpage_538, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("do_readpage")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_538
}

predicate func_4(Parameter vpage_538, NotExpr target_4) {
	target_4.getOperand().(FunctionCall).getTarget().hasName("PagePrivate")
	and target_4.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_538
}

from Function func, Parameter vlen_537, Parameter vpage_538, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, NotExpr target_4
where
not func_0(vlen_537, vpage_538, target_1, target_2, target_3, target_4, func)
and func_1(vpage_538, target_1)
and func_2(vlen_537, target_2)
and func_3(vpage_538, target_3)
and func_4(vpage_538, target_4)
and vlen_537.getType().hasName("unsigned int")
and vpage_538.getType().hasName("page *")
and vlen_537.getFunction() = func
and vpage_538.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
