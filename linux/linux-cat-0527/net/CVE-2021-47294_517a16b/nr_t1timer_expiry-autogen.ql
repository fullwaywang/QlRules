/**
 * @name linux-517a16b1a88bdb6b530f48d5d153478b2552d9a8-nr_t1timer_expiry
 * @id cpp/linux/517a16b1a88bdb6b530f48d5d153478b2552d9a8/nr-t1timer-expiry
 * @description linux-517a16b1a88bdb6b530f48d5d153478b2552d9a8-net/netrom/nr_timer.c-nr_t1timer_expiry CVE-2021-47294
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_unlock")
	and not target_0.getTarget().hasName("sock_put")
	and target_0.getArgument(0).(AddressOfExpr).getOperand() instanceof ValueFieldAccess
	and target_0.getEnclosingFunction() = func
}

predicate func_1(EqualityOperation target_13, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="out"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_13
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(EqualityOperation target_14, Function func) {
exists(GotoStmt target_2 |
	target_2.getName() ="out"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(EqualityOperation target_15, Function func) {
exists(GotoStmt target_3 |
	target_3.getName() ="out"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Variable vsk_205, EqualityOperation target_13, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="slock"
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_205
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_13
}

predicate func_5(EqualityOperation target_13, Function func, ReturnStmt target_5) {
	target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_13
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vsk_205, VariableAccess target_6) {
	target_6.getTarget()=vsk_205
	and target_6.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_7(Variable vsk_205, ExprStmt target_16, ValueFieldAccess target_7) {
	target_7.getTarget().getName()="slock"
	and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
	and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_205
	and target_7.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_8(EqualityOperation target_14, Function func, ReturnStmt target_8) {
	target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vsk_205, EqualityOperation target_15, ExprStmt target_17, ExprStmt target_18, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="slock"
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_205
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
	and target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_10(EqualityOperation target_15, Function func, ReturnStmt target_10) {
	target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vsk_205, ExprStmt target_19, Function func, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="slock"
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_205
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
	and target_19.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_12(Function func, ReturnStmt target_12) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(BlockStmt target_20, Function func, EqualityOperation target_13) {
	target_13.getLeftOperand().(PointerFieldAccess).getTarget().getName()="n2count"
	and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nr_sock *")
	and target_13.getRightOperand().(PointerFieldAccess).getTarget().getName()="n2"
	and target_13.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nr_sock *")
	and target_13.getParent().(IfStmt).getThen()=target_20
	and target_13.getEnclosingFunction() = func
}

predicate func_14(BlockStmt target_21, Function func, EqualityOperation target_14) {
	target_14.getLeftOperand().(PointerFieldAccess).getTarget().getName()="n2count"
	and target_14.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nr_sock *")
	and target_14.getRightOperand().(PointerFieldAccess).getTarget().getName()="n2"
	and target_14.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nr_sock *")
	and target_14.getParent().(IfStmt).getThen()=target_21
	and target_14.getEnclosingFunction() = func
}

predicate func_15(BlockStmt target_22, Function func, EqualityOperation target_15) {
	target_15.getLeftOperand().(PointerFieldAccess).getTarget().getName()="n2count"
	and target_15.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nr_sock *")
	and target_15.getRightOperand().(PointerFieldAccess).getTarget().getName()="n2"
	and target_15.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nr_sock *")
	and target_15.getParent().(IfStmt).getThen()=target_22
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Variable vsk_205, ExprStmt target_16) {
	target_16.getExpr().(FunctionCall).getTarget().hasName("nr_write_internal")
	and target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_205
	and target_16.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="3"
}

predicate func_17(Variable vsk_205, EqualityOperation target_15, ExprStmt target_17) {
	target_17.getExpr().(FunctionCall).getTarget().hasName("nr_disconnect")
	and target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_205
	and target_17.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="110"
	and target_17.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
}

predicate func_18(Variable vsk_205, ExprStmt target_18) {
	target_18.getExpr().(FunctionCall).getTarget().hasName("nr_requeue_frames")
	and target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_205
}

predicate func_19(Variable vsk_205, ExprStmt target_19) {
	target_19.getExpr().(FunctionCall).getTarget().hasName("nr_start_t1timer")
	and target_19.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_205
}

predicate func_20(Variable vsk_205, BlockStmt target_20) {
	target_20.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("nr_disconnect")
	and target_20.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_205
	and target_20.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="110"
	and target_20.getStmt(1) instanceof ExprStmt
	and target_20.getStmt(2) instanceof ReturnStmt
}

predicate func_21(Variable vsk_205, BlockStmt target_21) {
	target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("nr_disconnect")
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_205
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="110"
	and target_21.getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
	and target_21.getStmt(2) instanceof ReturnStmt
}

predicate func_22(Variable vsk_205, BlockStmt target_22) {
	target_22.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("nr_disconnect")
	and target_22.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_205
	and target_22.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="110"
	and target_22.getStmt(1) instanceof ExprStmt
	and target_22.getStmt(2) instanceof ReturnStmt
}

from Function func, Variable vsk_205, FunctionCall target_0, ExprStmt target_4, ReturnStmt target_5, VariableAccess target_6, ValueFieldAccess target_7, ReturnStmt target_8, ExprStmt target_9, ReturnStmt target_10, ExprStmt target_11, ReturnStmt target_12, EqualityOperation target_13, EqualityOperation target_14, EqualityOperation target_15, ExprStmt target_16, ExprStmt target_17, ExprStmt target_18, ExprStmt target_19, BlockStmt target_20, BlockStmt target_21, BlockStmt target_22
where
func_0(func, target_0)
and not func_1(target_13, func)
and not func_2(target_14, func)
and not func_3(target_15, func)
and func_4(vsk_205, target_13, target_4)
and func_5(target_13, func, target_5)
and func_6(vsk_205, target_6)
and func_7(vsk_205, target_16, target_7)
and func_8(target_14, func, target_8)
and func_9(vsk_205, target_15, target_17, target_18, target_9)
and func_10(target_15, func, target_10)
and func_11(vsk_205, target_19, func, target_11)
and func_12(func, target_12)
and func_13(target_20, func, target_13)
and func_14(target_21, func, target_14)
and func_15(target_22, func, target_15)
and func_16(vsk_205, target_16)
and func_17(vsk_205, target_15, target_17)
and func_18(vsk_205, target_18)
and func_19(vsk_205, target_19)
and func_20(vsk_205, target_20)
and func_21(vsk_205, target_21)
and func_22(vsk_205, target_22)
and vsk_205.getType().hasName("sock *")
and vsk_205.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
