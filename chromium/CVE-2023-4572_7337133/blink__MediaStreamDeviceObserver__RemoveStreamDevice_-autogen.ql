/**
 * @name chromium-7337133682ab0404b753c563dde2ae2b1dc13171-blink__MediaStreamDeviceObserver__RemoveStreamDevice_
 * @id cpp/chromium/7337133682ab0404b753c563dde2ae2b1dc13171/blinkmediastreamdeviceobserverremovestreamdevice
 * @description chromium-7337133682ab0404b753c563dde2ae2b1dc13171-third_party/blink/renderer/platform/exported/mediastream/web_platform_media_stream_source.cc-blink__MediaStreamDeviceObserver__RemoveStreamDevice_ CVE-2023-4572
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	exists(ConstructorCall obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="thread_checker_"
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
	)
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Variable vscoped_validate_thread_checker_281_281, VariableAccess target_1) {
	target_1.getTarget()=vscoped_validate_thread_checker_281_281
}

predicate func_2(Variable vlabel_308, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="label_stream_map_"
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and obj_0.getTarget().hasName("erase")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vlabel_308
	)
}

predicate func_3(Variable vprobably_true_307, Function func, SwitchStmt target_3) {
	exists(BlockStmt obj_0 | obj_0=target_3.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getTarget().hasName("__builtin_expect")
				and obj_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vprobably_true_307
				and obj_2.getArgument(1).(Literal).getValue()="1"
			)
			and exists(ExprStmt obj_3 | obj_3=obj_1.getElse() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().hasName("DCheck")
					and obj_4.getArgument(0).(StringLiteral).getValue()="device_found"
				)
			)
		)
		and obj_0.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="0"
		and obj_0.getStmt(1).(SwitchCase).toString() = "default: "
	)
	and target_3.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(Function func, SwitchCase target_4) {
	target_4.getExpr().(Literal).getValue()="0"
	and target_4.getEnclosingFunction() = func
}

*/
/*predicate func_5(Function func, SwitchCase target_5) {
	target_5.toString() = "default: "
	and target_5.getEnclosingFunction() = func
}

*/
/*predicate func_6(Variable vprobably_true_307, Literal target_7, IfStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getCondition() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vprobably_true_307
		and obj_0.getArgument(1).(Literal).getValue()="1"
	)
	and exists(ExprStmt obj_1 | obj_1=target_6.getElse() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getTarget().hasName("DCheck")
			and obj_2.getArgument(0).(StringLiteral).getValue()="device_found"
		)
	)
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_7
}

*/
from Function func, Variable vscoped_validate_thread_checker_281_281, Variable vprobably_true_307, Variable vlabel_308, Initializer target_0, VariableAccess target_1, ExprStmt target_2, SwitchStmt target_3
where
func_0(func, target_0)
and func_1(vscoped_validate_thread_checker_281_281, target_1)
and func_2(vlabel_308, target_2)
and func_3(vprobably_true_307, func, target_3)
and vscoped_validate_thread_checker_281_281.getType().hasName("ScopedValidateThreadChecker")
and vprobably_true_307.getType().hasName("const bool")
and vlabel_308.getType().hasName("const String &")
and vscoped_validate_thread_checker_281_281.(LocalVariable).getFunction() = func
and vprobably_true_307.(LocalVariable).getFunction() = func
and vlabel_308.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
