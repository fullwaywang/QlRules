/**
 * @name linux-f45db2b909c7e76f35850e78f017221f30282b8e-cleanup_sunrpc
 * @id cpp/linux/f45db2b909c7e76f35850e78f017221f30282b8e/cleanup-sunrpc
 * @description linux-f45db2b909c7e76f35850e78f017221f30282b8e-net/sunrpc/sunrpc_syms.c-cleanup_sunrpc CVE-2020-12656
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("auth_domain_cleanup")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("rpc_unregister_sysctl")
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
