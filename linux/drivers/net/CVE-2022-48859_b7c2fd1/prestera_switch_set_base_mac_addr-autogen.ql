/**
 * @name linux-b7c2fd1d126329340639adfb8dd2938fe4b65df7-prestera_switch_set_base_mac_addr
 * @id cpp/linux/b7c2fd1d126329340639adfb8dd2938fe4b65df7/prestera-switch-set-base-mac-addr
 * @description linux-b7c2fd1d126329340639adfb8dd2938fe4b65df7-drivers/net/ethernet/marvell/prestera/prestera_main.c-prestera_switch_set_base_mac_addr CVE-2022-48859
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnp_483, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("of_node_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vnp_483
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vnp_483, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("of_parse_phandle")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vnp_483
			and obj_1.getArgument(1).(StringLiteral).getValue()="base-mac-provider"
			and obj_1.getArgument(2).(Literal).getValue()="0"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("device_node *")
	)
}

from Function func, Variable vnp_483, ExprStmt target_1
where
not func_0(vnp_483, target_1, func)
and func_1(vnp_483, target_1)
and vnp_483.getType().hasName("device_node *")
and vnp_483.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
