/**
 * @name v8-c4e66b89b4ecd0e90b31e9e4ed08d38085a84c49-v8__internal__JSObject__DefineOwnPropertyIgnoreAttributes
 * @id cpp/v8/c4e66b89b4ecd0e90b31e9e4ed08d38085a84c49/v8internaljsobjectdefineownpropertyignoreattributes
 * @description v8-c4e66b89b4ecd0e90b31e9e4ed08d38085a84c49-src/objects/js-objects.cc-v8__internal__JSObject__DefineOwnPropertyIgnoreAttributes CVE-2022-1232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvalue_3460, Parameter vattributes_3460, Parameter vshould_throw_3461, Parameter vhandling_3461, Parameter vsemantics_3462, Parameter vstore_origin_3462, FunctionCall target_4, FunctionCall target_5, EqualityOperation target_6, EqualityOperation target_7, EqualityOperation target_8, LogicalAndExpr target_9, EqualityOperation target_10, FunctionCall target_11) {
exists(ReturnStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("DefineOwnPropertyIgnoreAttributes")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("LookupIterator")
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvalue_3460
	and target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vattributes_3460
	and target_0.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vshould_throw_3461
	and target_0.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vhandling_3461
	and target_0.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vsemantics_3462
	and target_0.getExpr().(FunctionCall).getArgument(6).(VariableAccess).getTarget()=vstore_origin_3462
	and target_0.getFollowingStmt() instanceof BreakStmt
	and target_4.getArgument(2).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_5.getArgument(1).(VariableAccess).getLocation())
	and target_6.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_7.getRightOperand().(VariableAccess).getLocation())
	and target_8.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getLocation().isBefore(target_9.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_10.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getLocation().isBefore(target_11.getArgument(5).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vit_3460, VariableAccess target_1) {
	target_1.getTarget()=vit_3460
}

predicate func_2(Parameter vit_3460, EqualityOperation target_10, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("Restart")
	and target_2.getExpr().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vit_3460
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_4(Parameter vit_3460, Parameter vvalue_3460, Parameter vshould_throw_3461, FunctionCall target_4) {
	target_4.getTarget().hasName("CheckIfCanDefine")
	and target_4.getArgument(0).(FunctionCall).getTarget().hasName("isolate")
	and target_4.getArgument(0).(FunctionCall).getQualifier().(VariableAccess).getTarget()=vit_3460
	and target_4.getArgument(1).(VariableAccess).getTarget()=vit_3460
	and target_4.getArgument(2).(VariableAccess).getTarget()=vvalue_3460
	and target_4.getArgument(3).(VariableAccess).getTarget()=vshould_throw_3461
}

predicate func_5(Parameter vit_3460, Parameter vvalue_3460, Parameter vshould_throw_3461, FunctionCall target_5) {
	target_5.getTarget().hasName("SetPropertyWithAccessor")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vit_3460
	and target_5.getArgument(1).(VariableAccess).getTarget()=vvalue_3460
	and target_5.getArgument(2).(VariableAccess).getTarget()=vshould_throw_3461
}

predicate func_6(Parameter vattributes_3460, EqualityOperation target_6) {
	target_6.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vattributes_3460
	and target_6.getRightOperand().(Literal).getValue()="0"
}

predicate func_7(Parameter vattributes_3460, EqualityOperation target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget().getType().hasName("PropertyAttributes")
	and target_7.getRightOperand().(VariableAccess).getTarget()=vattributes_3460
}

predicate func_8(Parameter vhandling_3461, BlockStmt target_12, EqualityOperation target_8) {
	target_8.getLeftOperand().(VariableAccess).getTarget()=vhandling_3461
	and target_8.getParent().(IfStmt).getThen()=target_12
}

predicate func_9(Parameter vhandling_3461, LogicalAndExpr target_9) {
	target_9.getLeftOperand().(FunctionCall).getTarget().hasName("IsAccessorInfo")
	and target_9.getLeftOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("Handle<Object>")
	and target_9.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vhandling_3461
}

predicate func_10(Parameter vsemantics_3462, BlockStmt target_13, EqualityOperation target_10) {
	target_10.getLeftOperand().(VariableAccess).getTarget()=vsemantics_3462
	and target_10.getParent().(IfStmt).getThen()=target_13
}

predicate func_11(Parameter vit_3460, Parameter vvalue_3460, Parameter vattributes_3460, Parameter vshould_throw_3461, Parameter vsemantics_3462, Parameter vstore_origin_3462, FunctionCall target_11) {
	target_11.getTarget().hasName("AddDataProperty")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vit_3460
	and target_11.getArgument(1).(VariableAccess).getTarget()=vvalue_3460
	and target_11.getArgument(2).(VariableAccess).getTarget()=vattributes_3460
	and target_11.getArgument(3).(VariableAccess).getTarget()=vshould_throw_3461
	and target_11.getArgument(4).(VariableAccess).getTarget()=vstore_origin_3462
	and target_11.getArgument(5).(VariableAccess).getTarget()=vsemantics_3462
}

predicate func_12(Parameter vit_3460, Parameter vvalue_3460, Parameter vshould_throw_3461, BlockStmt target_12) {
	target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("Maybe<bool>")
	and target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("SetPropertyWithInterceptor")
	and target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vit_3460
	and target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vshould_throw_3461
	and target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vvalue_3460
}

predicate func_13(Parameter vit_3460, BlockStmt target_13) {
	target_13.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("Restart")
	and target_13.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vit_3460
	and target_13.getStmt(2).(IfStmt).getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("IsNothing")
	and target_13.getStmt(2).(IfStmt).getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("Maybe<bool>")
	and target_13.getStmt(2).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("FromJust")
	and target_13.getStmt(2).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("Maybe<bool>")
	and target_13.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(VariableAccess).getTarget().getType().hasName("Maybe<bool>")
}

from Function func, Parameter vit_3460, Parameter vvalue_3460, Parameter vattributes_3460, Parameter vshould_throw_3461, Parameter vhandling_3461, Parameter vsemantics_3462, Parameter vstore_origin_3462, VariableAccess target_1, ExprStmt target_2, FunctionCall target_4, FunctionCall target_5, EqualityOperation target_6, EqualityOperation target_7, EqualityOperation target_8, LogicalAndExpr target_9, EqualityOperation target_10, FunctionCall target_11, BlockStmt target_12, BlockStmt target_13
where
not func_0(vvalue_3460, vattributes_3460, vshould_throw_3461, vhandling_3461, vsemantics_3462, vstore_origin_3462, target_4, target_5, target_6, target_7, target_8, target_9, target_10, target_11)
and func_1(vit_3460, target_1)
and func_2(vit_3460, target_10, target_2)
and func_4(vit_3460, vvalue_3460, vshould_throw_3461, target_4)
and func_5(vit_3460, vvalue_3460, vshould_throw_3461, target_5)
and func_6(vattributes_3460, target_6)
and func_7(vattributes_3460, target_7)
and func_8(vhandling_3461, target_12, target_8)
and func_9(vhandling_3461, target_9)
and func_10(vsemantics_3462, target_13, target_10)
and func_11(vit_3460, vvalue_3460, vattributes_3460, vshould_throw_3461, vsemantics_3462, vstore_origin_3462, target_11)
and func_12(vit_3460, vvalue_3460, vshould_throw_3461, target_12)
and func_13(vit_3460, target_13)
and vit_3460.getType().hasName("LookupIterator *")
and vvalue_3460.getType().hasName("Handle<Object>")
and vattributes_3460.getType().hasName("PropertyAttributes")
and vshould_throw_3461.getType().hasName("Maybe<ShouldThrow>")
and vhandling_3461.getType().hasName("AccessorInfoHandling")
and vsemantics_3462.getType().hasName("EnforceDefineSemantics")
and vstore_origin_3462.getType().hasName("StoreOrigin")
and vit_3460.getFunction() = func
and vvalue_3460.getFunction() = func
and vattributes_3460.getFunction() = func
and vshould_throw_3461.getFunction() = func
and vhandling_3461.getFunction() = func
and vsemantics_3462.getFunction() = func
and vstore_origin_3462.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
