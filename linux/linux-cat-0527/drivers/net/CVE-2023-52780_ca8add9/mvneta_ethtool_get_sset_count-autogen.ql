/**
 * @name linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-mvneta_ethtool_get_sset_count
 * @id cpp/linux/ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed/mvneta-ethtool-get-sset-count
 * @description linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-drivers/net/ethernet/marvell/mvneta.c-mvneta_ethtool_get_sset_count CVE-2023-52780
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_5, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="bm_priv"
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("mvneta_port *")
	and target_0.getThen().(ExprStmt).getExpr().(AssignAddExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_0.getThen().(ExprStmt).getExpr().(AssignAddExpr).getRValue() instanceof FunctionCall
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_0.getEnclosingFunction() = func)
}

predicate func_2(Function func, AddExpr target_2) {
	target_2.getValue()="42"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("page_pool_ethtool_stats_get_count")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, AddExpr target_4) {
	target_4.getLeftOperand() instanceof AddExpr
	and target_4.getRightOperand() instanceof FunctionCall
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, EqualityOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getEnclosingFunction() = func
}

from Function func, AddExpr target_2, FunctionCall target_3, AddExpr target_4, EqualityOperation target_5
where
not func_0(target_5, func)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
