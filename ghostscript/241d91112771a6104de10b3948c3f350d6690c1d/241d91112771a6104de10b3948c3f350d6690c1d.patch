commit 241d91112771a6104de10b3948c3f350d6690c1d	241d91112771a6104de10b3948c3f350d6690c1d
Author: Chris Liddell <chris.liddell@artifex.com>
Date:   Thu Aug 23 15:41:18 2018 +0100

    Bug 699664: Ensure the correct is in place before cleanup
    
    If the PS job replaces the device and leaves that graphics state in place, we
    wouldn't cleanup the default device in the normal way, but rely on the garbage
    collector.
    
    This works (but isn't ideal), *except* when the job replaces the device with
    the null device (using the nulldevice operator) - this means that
    .uninstallpagedevice doesn't replace the existing device with the nulldevice
    (since it is already installed), the device from the graphics ends up being
    freed - and as it is the nulldevice, which we rely on, memory corruption
    and a segfault can happen.
    
    We avoid this by checking if the current device is the nulldevice, and if so,
    restoring it away, before continuing with the device cleanup.

diff --git a/psi/imain.c b/psi/imain.c
index 2fe15465e..138bfc82b 100644
--- a/psi/imain.c
+++ b/psi/imain.c
@@ -936,6 +936,16 @@ gs_main_finit(gs_main_instance * minst, int exit_status, int code)
             i_ctx_p = minst->i_ctx_p; /* interp_reclaim could change it. */
         }
 
+        if (i_ctx_p->pgs != NULL && i_ctx_p->pgs->device != NULL &&
+            gx_device_is_null(i_ctx_p->pgs->device)) {
+            /* if the job replaced the device with the nulldevice, we we need to grestore
+               away that device, so the block below can properly dispense
+               with the default device.
+             */
+            int code = gs_grestoreall(i_ctx_p->pgs);
+            if (code < 0) return_error(gs_error_Fatal);
+        }
+
         if (i_ctx_p->pgs != NULL && i_ctx_p->pgs->device != NULL) {
             gx_device *pdev = i_ctx_p->pgs->device;
             const char * dname = pdev->dname;
