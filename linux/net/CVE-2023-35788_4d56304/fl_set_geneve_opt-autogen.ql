/**
 * @name linux-4d56304e5827c8cc8cc18c75343d283af7c4825c-fl_set_geneve_opt
 * @id cpp/linux/4d56304e5827c8cc8cc18c75343d283af7c4825c/fl-set-geneve-opt
 * @description linux-4d56304e5827c8cc8cc18c75343d283af7c4825c-net/sched/cls_flower.c-fl_set_geneve_opt CVE-2023-35788
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
		target_0.getValue()="field \"opt->opt_data\" at net/sched/cls_flower.c:1213"
		and not target_0.getValue()="field \"opt->opt_data\" at net/sched/cls_flower.c:1216"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vkey_1144, ExprStmt target_2, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getTarget().getName()="len"
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="enc_opts"
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1144
		and target_1.getCondition().(RelationalOperation).getLesserOperand().(SubExpr).getValue()="251"
		and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-34"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vkey_1144, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("geneve_opt *")
		and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="data"
		and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="enc_opts"
		and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1144
		and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ValueFieldAccess).getTarget().getName()="len"
		and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="enc_opts"
		and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1144
}

from Function func, Parameter vkey_1144, StringLiteral target_0, ExprStmt target_2
where
func_0(func, target_0)
and not func_1(vkey_1144, target_2, func)
and func_2(vkey_1144, target_2)
and vkey_1144.getType().hasName("fl_flow_key *")
and vkey_1144.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
