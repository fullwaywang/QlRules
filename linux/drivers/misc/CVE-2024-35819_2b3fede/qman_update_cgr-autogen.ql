/**
 * @name linux-2b3fede8225133671ce837c0d284804aa3bc7a02-qman_update_cgr
 * @id cpp/linux/2b3fede8225133671ce837c0d284804aa3bc7a02/qman-update-cgr
 * @description linux-2b3fede8225133671ce837c0d284804aa3bc7a02-drivers/soc/fsl/qbman/qman.c-qman_update_cgr CVE-2024-35819
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable virqflags_2480, Variable vp_2481, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_unlock_irqrestore")
	and not target_0.getTarget().hasName("_raw_spin_unlock_irqrestore")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_2481
	and target_0.getArgument(1).(VariableAccess).getTarget()=virqflags_2480
}

predicate func_2(Variable virqflags_2480, Variable vp_2481, ExprStmt target_6, AddressOfExpr target_4) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("_raw_spin_unlock_irqrestore")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_2481
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=virqflags_2480
	and target_2.getLocation().isBefore(target_6.getLocation())
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable v__dummy_2486, Variable v__dummy2_2486, ExprStmt target_3) {
	target_3.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy_2486
	and target_3.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy2_2486
	and target_3.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(Literal).getValue()="1"
}

predicate func_4(Variable vp_2481, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_2481
	and target_4.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0) instanceof FunctionCall
}

predicate func_5(Function func, FunctionCall target_5) {
	target_5.getTarget().hasName("spinlock_check")
	and target_5.getArgument(0) instanceof AddressOfExpr
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("_raw_spin_lock_irqsave")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable virqflags_2480, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=virqflags_2480
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("_raw_spin_lock_irqsave")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0) instanceof FunctionCall
}

from Function func, Variable virqflags_2480, Variable vp_2481, Variable v__dummy_2486, Variable v__dummy2_2486, FunctionCall target_0, ExprStmt target_3, AddressOfExpr target_4, FunctionCall target_5, ExprStmt target_6
where
func_0(virqflags_2480, vp_2481, target_0)
and not func_2(virqflags_2480, vp_2481, target_6, target_4)
and func_3(v__dummy_2486, v__dummy2_2486, target_3)
and func_4(vp_2481, target_4)
and func_5(func, target_5)
and func_6(virqflags_2480, target_6)
and virqflags_2480.getType().hasName("unsigned long")
and vp_2481.getType().hasName("qman_portal *")
and v__dummy_2486.getType().hasName("unsigned long")
and v__dummy2_2486.getType().hasName("unsigned long")
and virqflags_2480.(LocalVariable).getFunction() = func
and vp_2481.(LocalVariable).getFunction() = func
and v__dummy_2486.(LocalVariable).getFunction() = func
and v__dummy2_2486.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
