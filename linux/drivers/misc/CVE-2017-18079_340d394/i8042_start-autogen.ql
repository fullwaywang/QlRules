/**
 * @name linux-340d394a789518018f834ff70f7534fc463d3226-i8042_start
 * @id cpp/linux/340d394a789518018f834ff70f7534fc463d3226/i8042-start
 * @description linux-340d394a789518018f834ff70f7534fc463d3226-drivers/input/serio/i8042.c-i8042_start CVE-2017-18079
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("spin_lock_irq")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("spinlock_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation()))
}

predicate func_1(AsmStmt target_2, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irq")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("spinlock_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation()))
}

predicate func_2(Function func, AsmStmt target_2) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="exists"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("i8042_port *")
	and target_3.getEnclosingFunction() = func
}

from Function func, AsmStmt target_2, ExprStmt target_3
where
not func_0(target_3, func)
and not func_1(target_2, func)
and func_2(func, target_2)
and func_3(func, target_3)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
