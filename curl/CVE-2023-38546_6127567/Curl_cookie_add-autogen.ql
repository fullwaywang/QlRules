/**
 * @name curl-61275672b46d9abb32857404-Curl_cookie_add
 * @id cpp/curl/61275672b46d9abb32857404/curl-cookie-add
 * @description curl-61275672b46d9abb32857404-lib/cookie.c-Curl_cookie_add CVE-2023-38546
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofTypeOperator target_0) {
		target_0.getType() instanceof LongType
		and target_0.getValue()="96"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vbadcookie_504, NotExpr target_6, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vbadcookie_504
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_2(Variable vco_498, Variable vvlen_530, Variable vvaluep_542, LogicalAndExpr target_7, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("strstore")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="version"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vco_498
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvaluep_542
		and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vvlen_530
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_3(Variable vco_498, LogicalAndExpr target_7, IfStmt target_3) {
		target_3.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="version"
		and target_3.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vco_498
		and target_3.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

/*predicate func_4(NotExpr target_6, Function func, BreakStmt target_4) {
		target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_4.getEnclosingFunction() = func
}

*/
predicate func_5(Variable vclist_497, Variable vCurl_cfree, VariableAccess target_8, ExprStmt target_5) {
		target_5.getExpr().(VariableCall).getExpr().(VariableAccess).getTarget()=vCurl_cfree
		and target_5.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="version"
		and target_5.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclist_497
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_6(Variable vco_498, NotExpr target_6) {
		target_6.getOperand().(PointerFieldAccess).getTarget().getName()="version"
		and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vco_498
}

predicate func_7(LogicalAndExpr target_7) {
		target_7.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_7.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="7"
		and target_7.getAnOperand().(FunctionCall).getTarget().hasName("curl_strnequal")
		and target_7.getAnOperand().(FunctionCall).getArgument(0).(StringLiteral).getValue()="version"
		and target_7.getAnOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
		and target_7.getAnOperand().(FunctionCall).getArgument(2).(Literal).getValue()="7"
}

predicate func_8(Variable vreplace_co_500, VariableAccess target_8) {
		target_8.getTarget()=vreplace_co_500
}

from Function func, Variable vclist_497, Variable vco_498, Variable vreplace_co_500, Variable vbadcookie_504, Variable vCurl_cfree, Variable vvlen_530, Variable vvaluep_542, SizeofTypeOperator target_0, ExprStmt target_1, ExprStmt target_2, IfStmt target_3, ExprStmt target_5, NotExpr target_6, LogicalAndExpr target_7, VariableAccess target_8
where
func_0(func, target_0)
and func_1(vbadcookie_504, target_6, target_1)
and func_2(vco_498, vvlen_530, vvaluep_542, target_7, target_2)
and func_3(vco_498, target_7, target_3)
and func_5(vclist_497, vCurl_cfree, target_8, target_5)
and func_6(vco_498, target_6)
and func_7(target_7)
and func_8(vreplace_co_500, target_8)
and vclist_497.getType().hasName("Cookie *")
and vco_498.getType().hasName("Cookie *")
and vreplace_co_500.getType().hasName("Cookie *")
and vbadcookie_504.getType().hasName("bool")
and vCurl_cfree.getType().hasName("curl_free_callback")
and vvlen_530.getType().hasName("size_t")
and vvaluep_542.getType().hasName("const char *")
and vclist_497.(LocalVariable).getFunction() = func
and vco_498.(LocalVariable).getFunction() = func
and vreplace_co_500.(LocalVariable).getFunction() = func
and vbadcookie_504.(LocalVariable).getFunction() = func
and not vCurl_cfree.getParentScope+() = func
and vvlen_530.(LocalVariable).getFunction() = func
and vvaluep_542.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
