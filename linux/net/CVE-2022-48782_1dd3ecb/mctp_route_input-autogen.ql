/**
 * @name linux-1dd3ecbec5f606b2a526c47925c8634b1a6bb81e-mctp_route_input
 * @id cpp/linux/1dd3ecbec5f606b2a526c47925c8634b1a6bb81e/mctp-route-input
 * @description linux-1dd3ecbec5f606b2a526c47925c8634b1a6bb81e-net/mctp/route.c-mctp_route_input CVE-2022-48782
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vkey_313, NotExpr target_3, ExprStmt target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("trace_mctp_key_acquire")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vkey_313
	)
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_1(Variable vkey_313, NotExpr target_3, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("mctp_key_unref")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vkey_313
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Variable vkey_313, VariableAccess target_4, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vkey_313
	)
	and target_2.getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Variable vkey_313, BlockStmt target_5, NotExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vkey_313
	and target_3.getParent().(IfStmt).getThen()=target_5
}

predicate func_4(Variable vrc_318, ExprStmt target_2, VariableAccess target_4) {
	target_4.getTarget()=vrc_318
	and target_4.getParent().(IfStmt).getThen()=target_2
}

predicate func_5(Variable vkey_313, BlockStmt target_5) {
	exists(ExprStmt obj_0 | obj_0=target_5.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArgument(1) |
					obj_3.getTarget().getName()="dest"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("mctp_hdr *")
				)
				and exists(PointerFieldAccess obj_4 | obj_4=obj_2.getArgument(2) |
					obj_4.getTarget().getName()="src"
					and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("mctp_hdr *")
				)
				and obj_2.getTarget().hasName("mctp_key_alloc")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("mctp_sock *")
				and obj_2.getArgument(3).(VariableAccess).getTarget().getType().hasName("u8")
				and obj_2.getArgument(4).(BitwiseOrExpr).getValue()="2592"
			)
			and obj_1.getLValue().(VariableAccess).getTarget()=vkey_313
		)
	)
}

from Function func, Variable vkey_313, Variable vrc_318, ExprStmt target_0, ExprStmt target_1, ExprStmt target_2, NotExpr target_3, VariableAccess target_4, BlockStmt target_5
where
func_0(vkey_313, target_3, target_0)
and func_1(vkey_313, target_3, target_1)
and func_2(vkey_313, target_4, target_2)
and func_3(vkey_313, target_5, target_3)
and func_4(vrc_318, target_2, target_4)
and func_5(vkey_313, target_5)
and vkey_313.getType().hasName("mctp_sk_key *")
and vrc_318.getType().hasName("int")
and vkey_313.(LocalVariable).getFunction() = func
and vrc_318.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
