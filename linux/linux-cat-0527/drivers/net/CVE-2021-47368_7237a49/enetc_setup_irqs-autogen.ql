/**
 * @name linux-7237a494decfa17d0b9d0076e6cee3235719de90-enetc_setup_irqs
 * @id cpp/linux/7237a494decfa17d0b9d0076e6cee3235719de90/enetc-setup-irqs
 * @description linux-7237a494decfa17d0b9d0076e6cee3235719de90-drivers/net/ethernet/freescale/enetc/enetc.c-enetc_setup_irqs CVE-2021-47368
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable virq_1886) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("get_cpu_mask")
	and target_0.getArgument(0) instanceof RemExpr
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("irq_set_affinity_hint")
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=virq_1886
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof AddressOfExpr)
}

predicate func_1(Variable vi_1883, RemExpr target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vi_1883
	and target_1.getRightOperand().(FunctionCall).getTarget().hasName("num_online_cpus")
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Function func, DeclStmt target_2) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vcpu_mask_1882, FunctionCall target_3) {
	target_3.getTarget().hasName("cpumask_clear")
	and target_3.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcpu_mask_1882
}

predicate func_4(Variable vcpu_mask_1882, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("cpumask_set_cpu")
	and target_4.getExpr().(FunctionCall).getArgument(0) instanceof RemExpr
	and target_4.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcpu_mask_1882
}

predicate func_5(Variable vcpu_mask_1882, Variable virq_1886, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("irq_set_affinity_hint")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=virq_1886
	and target_5.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcpu_mask_1882
}

/*predicate func_6(Variable vcpu_mask_1882, Variable virq_1886, AddressOfExpr target_7, ExprStmt target_8, AddressOfExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget()=vcpu_mask_1882
	and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("irq_set_affinity_hint")
	and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=virq_1886
	and target_7.getOperand().(VariableAccess).getLocation().isBefore(target_6.getOperand().(VariableAccess).getLocation())
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

*/
predicate func_7(Variable vcpu_mask_1882, AddressOfExpr target_7) {
	target_7.getOperand().(VariableAccess).getTarget()=vcpu_mask_1882
	and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Variable virq_1886, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("disable_irq")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=virq_1886
}

from Function func, Variable vcpu_mask_1882, Variable vi_1883, Variable virq_1886, RemExpr target_1, DeclStmt target_2, FunctionCall target_3, ExprStmt target_4, ExprStmt target_5, AddressOfExpr target_7, ExprStmt target_8
where
not func_0(virq_1886)
and func_1(vi_1883, target_1)
and func_2(func, target_2)
and func_3(vcpu_mask_1882, target_3)
and func_4(vcpu_mask_1882, target_4)
and func_5(vcpu_mask_1882, virq_1886, target_5)
and func_7(vcpu_mask_1882, target_7)
and func_8(virq_1886, target_8)
and vcpu_mask_1882.getType().hasName("cpumask_t")
and vi_1883.getType().hasName("int")
and virq_1886.getType().hasName("int")
and vcpu_mask_1882.(LocalVariable).getFunction() = func
and vi_1883.(LocalVariable).getFunction() = func
and virq_1886.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
