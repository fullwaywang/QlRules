/**
 * @name linux-c4c07b4d6fa1f11880eab8e076d3d060ef3f55fc-snmp_helper
 * @id cpp/linux/c4c07b4d6fa1f11880eab8e076d3d060ef3f55fc/snmp-helper
 * @description linux-c4c07b4d6fa1f11880eab8e076d3d060ef3f55fc-net/ipv4/netfilter/nf_nat_snmp_basic_main.c-snmp_helper CVE-2019-9162
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdatalen_114, IfStmt target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vdatalen_114
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="4"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_4.getLocation()))
}

predicate func_1(Parameter vdata_114, Variable vpdata_117, IfStmt target_4, PointerArithmeticOperation target_5, EqualityOperation target_7, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpdata_117
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vdata_114
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(VariableAccess).getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_7.getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vdata_114, VariableAccess target_2) {
	target_2.getTarget()=vdata_114
}

predicate func_3(Parameter vdata_114, Initializer target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vdata_114
}

predicate func_4(Parameter vdata_114, Variable vpdata_117, IfStmt target_4) {
	target_4.getCondition().(EqualityOperation).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vpdata_117
	and target_4.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="from"
	and target_4.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("snmp_ctx *")
	and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_4.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(PointerDereferenceExpr).getOperand().(PointerFieldAccess).getTarget().getName()="check"
	and target_4.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(PointerDereferenceExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("snmp_ctx *")
	and target_4.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fast_csum")
	and target_4.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("snmp_ctx *")
	and target_4.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vdata_114
	and target_4.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="begin"
}

predicate func_5(Parameter vdata_114, PointerArithmeticOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vdata_114
	and target_5.getRightOperand().(PointerFieldAccess).getTarget().getName()="begin"
	and target_5.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("snmp_ctx *")
}

predicate func_7(Variable vpdata_117, EqualityOperation target_7) {
	target_7.getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vpdata_117
	and target_7.getRightOperand().(PointerFieldAccess).getTarget().getName()="from"
	and target_7.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("snmp_ctx *")
}

from Function func, Parameter vdata_114, Parameter vdatalen_114, Variable vpdata_117, VariableAccess target_2, Initializer target_3, IfStmt target_4, PointerArithmeticOperation target_5, EqualityOperation target_7
where
not func_0(vdatalen_114, target_4, func)
and not func_1(vdata_114, vpdata_117, target_4, target_5, target_7, func)
and func_2(vdata_114, target_2)
and func_3(vdata_114, target_3)
and func_4(vdata_114, vpdata_117, target_4)
and func_5(vdata_114, target_5)
and func_7(vpdata_117, target_7)
and vdata_114.getType().hasName("const void *")
and vdatalen_114.getType().hasName("size_t")
and vpdata_117.getType().hasName("__be32 *")
and vdata_114.getFunction() = func
and vdatalen_114.getFunction() = func
and vpdata_117.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
