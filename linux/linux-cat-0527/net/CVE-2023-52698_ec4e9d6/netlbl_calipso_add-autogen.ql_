/**
 * @name linux-ec4e9d630a64df500641892f4e259e8149594a99-netlbl_calipso_add
 * @id cpp/linux/ec4e9d630a64df500641892f4e259e8149594a99/netlbl-calipso-add
 * @description linux-ec4e9d630a64df500641892f4e259e8149594a99-net/netlabel/netlabel_calipso.c-netlbl_calipso_add CVE-2023-52698
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getType().hasName("const netlbl_calipso_ops *")
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-95"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("netlbl_netlink_auditinfo")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("netlbl_audit")
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
