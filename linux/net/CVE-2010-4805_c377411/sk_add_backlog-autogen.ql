/**
 * @name linux-c377411f2494a931ff7facdbb3a6839b1266bcf6-sk_add_backlog
 * @id cpp/linux/c377411f2494a931ff7facdbb3a6839b1266bcf6/sk-add-backlog
 * @description linux-c377411f2494a931ff7facdbb3a6839b1266bcf6-include/net/sock.h-sk_add_backlog CVE-2010-4805
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_612, Parameter vskb_612, ReturnStmt target_7, ExprStmt target_8) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("sk_rcvqueues_full")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vsk_612
		and target_0.getArgument(1).(VariableAccess).getTarget()=vskb_612
		and target_0.getParent().(IfStmt).getThen()=target_7
		and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_612, VariableAccess target_1) {
		target_1.getTarget()=vsk_612
}

predicate func_2(Parameter vsk_612, Variable v_max1_614, Variable v_max2_614, ReturnStmt target_7, RelationalOperation target_2) {
		 (target_2 instanceof GEExpr or target_2 instanceof LEExpr)
		and target_2.getGreaterOperand().(ValueFieldAccess).getTarget().getName()="len"
		and target_2.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_2.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_612
		and target_2.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v_max1_614
		and target_2.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v_max2_614
		and target_2.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=v_max1_614
		and target_2.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=v_max2_614
		and target_2.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getThen().(VariableAccess).getTarget()=v_max1_614
		and target_2.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getElse().(VariableAccess).getTarget()=v_max2_614
		and target_2.getParent().(IfStmt).getThen()=target_7
}

/*predicate func_5(Variable v_max1_614, Variable v_max2_614, ExprStmt target_5) {
		target_5.getExpr().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v_max1_614
		and target_5.getExpr().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v_max2_614
}

*/
/*predicate func_6(Variable v_max1_614, Variable v_max2_614, ExprStmt target_6) {
		target_6.getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=v_max1_614
		and target_6.getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=v_max2_614
		and target_6.getExpr().(ConditionalExpr).getThen().(VariableAccess).getTarget()=v_max1_614
		and target_6.getExpr().(ConditionalExpr).getElse().(VariableAccess).getTarget()=v_max2_614
}

*/
predicate func_7(Function func, ReturnStmt target_7) {
		target_7.getExpr().(UnaryMinusExpr).getValue()="-105"
		and target_7.getEnclosingFunction() = func
}

predicate func_8(Parameter vsk_612, Parameter vskb_612, ExprStmt target_8) {
		target_8.getExpr().(FunctionCall).getTarget().hasName("__sk_add_backlog")
		and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_612
		and target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_612
}

from Function func, Parameter vsk_612, Variable v_max1_614, Variable v_max2_614, Parameter vskb_612, VariableAccess target_1, RelationalOperation target_2, ReturnStmt target_7, ExprStmt target_8
where
not func_0(vsk_612, vskb_612, target_7, target_8)
and func_1(vsk_612, target_1)
and func_2(vsk_612, v_max1_614, v_max2_614, target_7, target_2)
and func_7(func, target_7)
and func_8(vsk_612, vskb_612, target_8)
and vsk_612.getType().hasName("sock *")
and v_max1_614.getType().hasName("int")
and v_max2_614.getType().hasName("int")
and vskb_612.getType().hasName("sk_buff *")
and vsk_612.getFunction() = func
and v_max1_614.(LocalVariable).getFunction() = func
and v_max2_614.(LocalVariable).getFunction() = func
and vskb_612.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
