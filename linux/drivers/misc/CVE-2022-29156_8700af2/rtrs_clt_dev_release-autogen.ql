/**
 * @name linux-8700af2cc18c919b2a83e74e0479038fd113c15d-rtrs_clt_dev_release
 * @id cpp/linux/8700af2cc18c919b2a83e74e0479038fd113c15d/rtrs-clt-dev-release
 * @description linux-8700af2cc18c919b2a83e74e0479038fd113c15d-rtrs_clt_dev_release CVE-2022-29156
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vclt_2682, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_destroy")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="paths_ev_mutex"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclt_2682
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0)
}

predicate func_1(Variable vclt_2682, ExprStmt target_3, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_destroy")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="paths_mutex"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclt_2682
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vclt_2682, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vclt_2682
}

from Function func, Variable vclt_2682, ExprStmt target_3
where
not func_0(vclt_2682, func)
and not func_1(vclt_2682, target_3, func)
and func_3(vclt_2682, target_3)
and vclt_2682.getType().hasName("rtrs_clt_sess *")
and vclt_2682.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
