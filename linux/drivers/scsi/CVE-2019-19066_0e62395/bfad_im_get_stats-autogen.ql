/**
 * @name linux-0e62395da2bd5166d7c9e14cbc7503b256a34cb0-bfad_im_get_stats
 * @id cpp/linux/0e62395da2bd5166d7c9e14cbc7503b256a34cb0/bfad-im-get-stats
 * @description linux-0e62395da2bd5166d7c9e14cbc7503b256a34cb0-drivers/scsi/bfa/bfad_attr.c-bfad_im_get_stats CVE-2019-19066
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfcstats_262, EqualityOperation target_2, ExprStmt target_3, ExprStmt target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfcstats_262
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(EqualityOperation target_2, Function func, ReturnStmt target_1) {
	target_1.getExpr().(Literal).getValue()="0"
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("bfa_status")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vfcstats_262, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bfa_status")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("bfa_port_get_stats")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="port"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="modules"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfcstats_262
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bfad_hal_comp")
}

predicate func_4(Variable vfcstats_262, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="seconds_since_last_reset"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("fc_host_statistics *")
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="secs_reset"
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="fc"
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfcstats_262
}

from Function func, Variable vfcstats_262, ReturnStmt target_1, EqualityOperation target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vfcstats_262, target_2, target_3, target_4)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and func_3(vfcstats_262, target_3)
and func_4(vfcstats_262, target_4)
and vfcstats_262.getType().hasName("bfa_port_stats_u *")
and vfcstats_262.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
