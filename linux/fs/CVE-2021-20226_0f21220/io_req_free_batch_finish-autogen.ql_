/**
 * @name linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-io_req_free_batch_finish
 * @id cpp/linux/0f2122045b946241a9e549c2a76cea54fa58a7ff/io-req-free-batch-finish
 * @description linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-fs/io_uring.c-io_req_free_batch_finish CVE-2021-20226
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrb_1905, PointerFieldAccess target_1, IfStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("atomic_long_add")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="task_refs"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrb_1905
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="req_complete"
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="io_uring"
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="task"
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrb_1905
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vrb_1905, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="task"
	and target_1.getQualifier().(VariableAccess).getTarget()=vrb_1905
}

predicate func_2(Parameter vrb_1905, IfStmt target_2) {
	target_2.getCondition().(PointerFieldAccess).getTarget().getName()="task"
	and target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrb_1905
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_task_struct_many")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="task"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrb_1905
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="task_refs"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrb_1905
}

predicate func_3(Parameter vrb_1905, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("put_task_struct_many")
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="task"
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrb_1905
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="task_refs"
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrb_1905
}

from Function func, Parameter vrb_1905, PointerFieldAccess target_1, IfStmt target_2, ExprStmt target_3
where
not func_0(vrb_1905, target_1, target_2, target_3)
and func_1(vrb_1905, target_1)
and func_2(vrb_1905, target_2)
and func_3(vrb_1905, target_3)
and vrb_1905.getType().hasName("req_batch *")
and vrb_1905.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
