/**
 * @name linux-850103ebe6b062ee0ab0f6670205f861acc76ace-wx_free_irq
 * @id cpp/linux/850103ebe6b062ee0ab0f6670205f861acc76ace/wx-free-irq
 * @description linux-850103ebe6b062ee0ab0f6670205f861acc76ace-drivers/net/ethernet/wangxun/libwx/wx_lib.c-wx_free_irq CVE-2024-42150
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vwx_1994, ExprStmt target_5, PointerFieldAccess target_6) {
exists(NotExpr target_0 |
	exists(PointerFieldAccess obj_0 | obj_0=target_0.getOperand() |
		obj_0.getTarget().getName()="misc_irq_domain"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vwx_1994
	)
	and target_0.getParent().(IfStmt).getThen()=target_5
	and target_0.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vwx_1994, IfStmt target_7, AddressOfExpr target_8, Function func) {
exists(IfStmt target_1 |
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="misc_irq_domain"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vwx_1994
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_1.getThen() |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			exists(PointerFieldAccess obj_4 | obj_4=obj_3.getArgument(0) |
				exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
					obj_5.getTarget().getName()="msix_entry"
					and obj_5.getQualifier().(VariableAccess).getTarget()=vwx_1994
				)
				and obj_4.getTarget().getName()="vector"
			)
			and obj_3.getTarget().hasName("free_irq")
			and obj_3.getArgument(1).(VariableAccess).getTarget()=vwx_1994
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_7.getLocation())
	and target_8.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vpdev_1996, Parameter vwx_1994, NotExpr target_9, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="irq"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpdev_1996
		)
		and obj_0.getTarget().hasName("free_irq")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vwx_1994
	)
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_3(Parameter vwx_1994, VariableAccess target_3) {
	target_3.getTarget()=vwx_1994
}

predicate func_4(Parameter vwx_1994, ExprStmt target_5, EqualityOperation target_4) {
	exists(ValueFieldAccess obj_0 | obj_0=target_4.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="mac"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vwx_1994
		)
		and obj_0.getTarget().getName()="type"
	)
	and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Parameter vwx_1994, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="msix_entry"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vwx_1994
			)
			and obj_1.getTarget().getName()="vector"
		)
		and obj_0.getTarget().hasName("free_irq")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vwx_1994
	)
}

predicate func_6(Parameter vwx_1994, PointerFieldAccess target_6) {
	exists(PointerFieldAccess obj_0 | obj_0=target_6.getQualifier() |
		obj_0.getTarget().getName()="msix_entry"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vwx_1994
	)
	and target_6.getTarget().getName()="vector"
}

predicate func_7(Parameter vwx_1994, IfStmt target_7) {
	exists(ExprStmt obj_0 | obj_0=target_7.getThen() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="msix_entry"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vwx_1994
				)
				and obj_2.getTarget().getName()="vector"
			)
			and obj_1.getTarget().hasName("free_irq")
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vwx_1994
		)
	)
	and target_7.getCondition() instanceof EqualityOperation
}

predicate func_8(Parameter vwx_1994, AddressOfExpr target_8) {
	exists(ArrayExpr obj_0 | obj_0=target_8.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArrayBase() |
			obj_1.getTarget().getName()="msix_q_entries"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vwx_1994
		)
		and obj_0.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_9(Variable vpdev_1996, NotExpr target_9) {
	exists(PointerFieldAccess obj_0 | obj_0=target_9.getOperand() |
		obj_0.getTarget().getName()="msix_enabled"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpdev_1996
	)
}

from Function func, Variable vpdev_1996, Parameter vwx_1994, ExprStmt target_2, VariableAccess target_3, EqualityOperation target_4, ExprStmt target_5, PointerFieldAccess target_6, IfStmt target_7, AddressOfExpr target_8, NotExpr target_9
where
not func_0(vwx_1994, target_5, target_6)
and not func_1(vwx_1994, target_7, target_8, func)
and func_2(vpdev_1996, vwx_1994, target_9, target_2)
and func_3(vwx_1994, target_3)
and func_4(vwx_1994, target_5, target_4)
and func_5(vwx_1994, target_5)
and func_6(vwx_1994, target_6)
and func_7(vwx_1994, target_7)
and func_8(vwx_1994, target_8)
and func_9(vpdev_1996, target_9)
and vpdev_1996.getType().hasName("pci_dev *")
and vwx_1994.getType().hasName("wx *")
and vpdev_1996.(LocalVariable).getFunction() = func
and vwx_1994.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
