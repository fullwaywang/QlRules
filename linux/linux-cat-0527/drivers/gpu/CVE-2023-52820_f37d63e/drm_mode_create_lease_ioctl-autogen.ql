/**
 * @name linux-f37d63e219c39199a59b8b8a211412ff27192830-drm_mode_create_lease_ioctl
 * @id cpp/linux/f37d63e219c39199a59b8b8a211412ff27192830/drm-mode-create-lease-ioctl
 * @description linux-f37d63e219c39199a59b8b8a211412ff27192830-drivers/gpu/drm/drm_lease.c-drm_mode_create_lease_ioctl CVE-2023-52820
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcl_479, Variable vobject_count_480, FunctionCall target_0) {
	target_0.getTarget().hasName("memdup_user")
	and not target_0.getTarget().hasName("memdup_array_user")
	and target_0.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerFieldAccess).getTarget().getName()="object_ids"
	and target_0.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcl_479
	and target_0.getArgument(1).(FunctionCall).getTarget().hasName("size_mul")
	and target_0.getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vobject_count_480
	and target_0.getArgument(1).(FunctionCall).getArgument(1) instanceof SizeofTypeOperator
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t *")
}

predicate func_1(Variable vobject_count_480, VariableAccess target_1) {
	target_1.getTarget()=vobject_count_480
	and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("size_mul")
	and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getArgument(1).(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getArgument(1).(SizeofTypeOperator).getValue()="4"
}

/*predicate func_2(Function func, SizeofTypeOperator target_2) {
	target_2.getType() instanceof LongType
	and target_2.getValue()="4"
	and target_2.getEnclosingFunction() = func
}

*/
from Function func, Variable vcl_479, Variable vobject_count_480, FunctionCall target_0, VariableAccess target_1
where
func_0(vcl_479, vobject_count_480, target_0)
and func_1(vobject_count_480, target_1)
and vcl_479.getType().hasName("drm_mode_create_lease *")
and vobject_count_480.getType().hasName("size_t")
and vcl_479.(LocalVariable).getFunction() = func
and vobject_count_480.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
