/**
 * @name linux-32927393dc1ccd60fb2bdc05b9e8e88753761469-do_proc_douintvec_w
 * @id cpp/linux/32927393dc1ccd60fb2bdc05b9e8e88753761469/do-proc-douintvec-w
 * @description linux-32927393dc1ccd60fb2bdc05b9e8e88753761469-kernel/sysctl.c-do_proc_douintvec_w CVE-2021-4218
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr().(Literal).getValue()="0"
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Function func, UnaryMinusExpr target_1) {
	target_1.getValue()="-22"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vbuffer_637, VariableAccess target_2) {
	target_2.getTarget()=vbuffer_637
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_4(Parameter vbuffer_637, Variable vleft_646, Variable vkbuf_648, Variable vp_648, Function func, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vp_648
	and target_4.getExpr().(AssignExpr).getRValue().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkbuf_648
	and target_4.getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("memdup_user_nul")
	and target_4.getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbuffer_637
	and target_4.getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vleft_646
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vkbuf_648, Function func, IfStmt target_5) {
	target_5.getCondition().(FunctionCall).getTarget().hasName("IS_ERR")
	and target_5.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkbuf_648
	and target_5.getThen().(ReturnStmt).getExpr() instanceof UnaryMinusExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vkbuf_648, Function func, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkbuf_648
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

from Function func, Parameter vbuffer_637, Variable vleft_646, Variable vkbuf_648, Variable vp_648, Initializer target_0, UnaryMinusExpr target_1, VariableAccess target_2, ExprStmt target_4, IfStmt target_5, ExprStmt target_6
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(vbuffer_637, target_2)
and func_4(vbuffer_637, vleft_646, vkbuf_648, vp_648, func, target_4)
and func_5(vkbuf_648, func, target_5)
and func_6(vkbuf_648, func, target_6)
and vbuffer_637.getType().hasName("void *")
and vleft_646.getType().hasName("size_t")
and vkbuf_648.getType().hasName("char *")
and vp_648.getType().hasName("char *")
and vbuffer_637.getFunction() = func
and vleft_646.(LocalVariable).getFunction() = func
and vkbuf_648.(LocalVariable).getFunction() = func
and vp_648.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
