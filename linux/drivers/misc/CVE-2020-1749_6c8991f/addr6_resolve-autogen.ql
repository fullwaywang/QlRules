/**
 * @name linux-6c8991f41546-addr6_resolve
 * @id cpp/linux/6c8991f41546/addr6-resolve
 * @description linux-6c8991f41546-addr6_resolve CVE-2020-1749
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vipv6_stub, PointerFieldAccess target_0) {
		target_0.getTarget().getName()="ipv6_dst_lookup"
		and target_0.getQualifier().(VariableAccess).getTarget()=vipv6_stub
}

predicate func_1(Parameter vaddr_416, Variable vdst_423, Variable vipv6_stub, ExprStmt target_13, ExprStmt target_14) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(VariableAccess).getTarget()=vdst_423
		and target_1.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup_flow"
		and target_1.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
		and target_1.getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="net"
		and target_1.getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_416
		and target_1.getRValue().(VariableCall).getArgument(1) instanceof Literal
		and target_1.getRValue().(VariableCall).getArgument(2) instanceof AddressOfExpr
		and target_1.getRValue().(VariableCall).getArgument(3) instanceof Literal
		and target_13.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vdst_423, ReturnStmt target_16, AddressOfExpr target_17) {
	exists(FunctionCall target_2 |
		target_2.getTarget().hasName("IS_ERR")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vdst_423
		and target_2.getParent().(IfStmt).getThen()=target_16
		and target_17.getOperand().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vdst_423, ExprStmt target_14) {
	exists(FunctionCall target_3 |
		target_3.getTarget().hasName("PTR_ERR")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vdst_423
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Parameter vaddr_416, PointerFieldAccess target_4) {
		target_4.getTarget().getName()="net"
		and target_4.getQualifier().(VariableAccess).getTarget()=vaddr_416
		and target_4.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_5(Variable vfl6_422, AddressOfExpr target_5) {
		target_5.getOperand().(VariableAccess).getTarget()=vfl6_422
		and target_5.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_7(Variable vdst_423, VariableAccess target_7) {
		target_7.getTarget()=vdst_423
		and target_7.getParent().(AddressOfExpr).getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_9(Function func, DeclStmt target_9) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Parameter vaddr_416, Variable vdst_423, Variable vret_424, Variable vipv6_stub, AssignExpr target_10) {
		target_10.getLValue().(VariableAccess).getTarget()=vret_424
		and target_10.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup"
		and target_10.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
		and target_10.getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="net"
		and target_10.getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_416
		and target_10.getRValue().(VariableCall).getArgument(1) instanceof Literal
		and target_10.getRValue().(VariableCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdst_423
		and target_10.getRValue().(VariableCall).getArgument(3) instanceof AddressOfExpr
}

predicate func_11(Variable vret_424, ReturnStmt target_16, RelationalOperation target_11) {
		 (target_11 instanceof GTExpr or target_11 instanceof LTExpr)
		and target_11.getLesserOperand().(VariableAccess).getTarget()=vret_424
		and target_11.getGreaterOperand() instanceof Literal
		and target_11.getParent().(IfStmt).getThen()=target_16
}

predicate func_12(Variable vret_424, RelationalOperation target_11, VariableAccess target_12) {
		target_12.getTarget()=vret_424
		and target_11.getLesserOperand().(VariableAccess).getLocation().isBefore(target_12.getLocation())
}

predicate func_13(Parameter vaddr_416, Variable vfl6_422, ExprStmt target_13) {
		target_13.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flowic_oif"
		and target_13.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="__fl_common"
		and target_13.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfl6_422
		and target_13.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="bound_dev_if"
		and target_13.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_416
}

predicate func_14(Parameter vaddr_416, Variable vdst_423, ExprStmt target_14) {
		target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="hoplimit"
		and target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_416
		and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ip6_dst_hoplimit")
		and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdst_423
}

predicate func_16(Variable vret_424, ReturnStmt target_16) {
		target_16.getExpr().(VariableAccess).getTarget()=vret_424
}

predicate func_17(Variable vdst_423, AddressOfExpr target_17) {
		target_17.getOperand().(VariableAccess).getTarget()=vdst_423
}

from Function func, Parameter vaddr_416, Variable vfl6_422, Variable vdst_423, Variable vret_424, Variable vipv6_stub, PointerFieldAccess target_0, PointerFieldAccess target_4, AddressOfExpr target_5, VariableAccess target_7, DeclStmt target_9, AssignExpr target_10, RelationalOperation target_11, VariableAccess target_12, ExprStmt target_13, ExprStmt target_14, ReturnStmt target_16, AddressOfExpr target_17
where
func_0(vipv6_stub, target_0)
and not func_1(vaddr_416, vdst_423, vipv6_stub, target_13, target_14)
and not func_2(vdst_423, target_16, target_17)
and not func_3(vdst_423, target_14)
and func_4(vaddr_416, target_4)
and func_5(vfl6_422, target_5)
and func_7(vdst_423, target_7)
and func_9(func, target_9)
and func_10(vaddr_416, vdst_423, vret_424, vipv6_stub, target_10)
and func_11(vret_424, target_16, target_11)
and func_12(vret_424, target_11, target_12)
and func_13(vaddr_416, vfl6_422, target_13)
and func_14(vaddr_416, vdst_423, target_14)
and func_16(vret_424, target_16)
and func_17(vdst_423, target_17)
and vaddr_416.getType().hasName("rdma_dev_addr *")
and vfl6_422.getType().hasName("flowi6")
and vdst_423.getType().hasName("dst_entry *")
and vret_424.getType().hasName("int")
and vipv6_stub.getType().hasName("const ipv6_stub *")
and vaddr_416.getFunction() = func
and vfl6_422.(LocalVariable).getFunction() = func
and vdst_423.(LocalVariable).getFunction() = func
and vret_424.(LocalVariable).getFunction() = func
and not vipv6_stub.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
