/**
 * @name linux-0b6f39c175ba5f0ef72bdb3b9d2a06ad78621d62-__io_uaddr_map
 * @id cpp/linux/0b6f39c175ba5f0ef72bdb3b9d2a06ad78621d62/--io-uaddr-map
 * @description linux-0b6f39c175ba5f0ef72bdb3b9d2a06ad78621d62-io_uring/io_uring.c-__io_uaddr_map CVE-2024-35831
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_2679, VariableAccess target_0) {
	target_0.getTarget()=vret_2679
	and target_0.getParent().(AssignExpr).getLValue() = target_0
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pin_user_pages_fast")
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(BitwiseOrExpr).getValue()="257"
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("page **")
}

predicate func_1(Variable vret_2679, BlockStmt target_11, VariableAccess target_1) {
	target_1.getTarget()=vret_2679
	and target_1.getParent().(NEExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_11
}

/*predicate func_2(Variable vret_2679, VariableAccess target_2) {
	target_2.getTarget()=vret_2679
	and target_2.getParent().(GTExpr).getLesserOperand().(Literal).getValue()="0"
}

*/
predicate func_3(Variable vret_2679, VariableAccess target_3) {
	target_3.getTarget()=vret_2679
	and target_3.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("io_pages_free")
	and target_3.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("page **")
	and target_3.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vret_2679
	and target_3.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_3.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getElse().(Literal).getValue()="0"
}

predicate func_4(Variable vret_2679, VariableAccess target_4) {
	target_4.getTarget()=vret_2679
	and target_4.getParent().(LTExpr).getGreaterOperand().(Literal).getValue()="0"
}

predicate func_6(Variable vret_2679, EqualityOperation target_12, ConditionalExpr target_13) {
exists(ExprStmt target_6 |
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_2679
	and target_6.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_6.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(VariableAccess).getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse() instanceof UnaryMinusExpr
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_6
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
	and target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_13.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_7(EqualityOperation target_12, Function func) {
exists(GotoStmt target_7 |
	target_7.getName() ="free_pages"
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_7
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(Variable vret_2679, FunctionCall target_8) {
	target_8.getTarget().hasName("ERR_PTR")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vret_2679
}

predicate func_9(Function func, UnaryMinusExpr target_9) {
	target_9.getValue()="-14"
	and target_9.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse() instanceof FunctionCall
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vret_2679, ConditionalExpr target_10) {
	target_10.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vret_2679
	and target_10.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_10.getThen() instanceof FunctionCall
	and target_10.getElse().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_10.getElse().(FunctionCall).getArgument(0) instanceof UnaryMinusExpr
}

predicate func_11(Variable vret_2679, BlockStmt target_11) {
	target_11.getStmt(0) instanceof LabelStmt
	and target_11.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("io_pages_free")
	and target_11.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("page **")
	and target_11.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vret_2679
	and target_11.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_11.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getThen().(VariableAccess).getTarget()=vret_2679
	and target_11.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getElse().(Literal).getValue()="0"
}

predicate func_12(Variable vret_2679, EqualityOperation target_12) {
	target_12.getLeftOperand().(VariableAccess).getTarget()=vret_2679
	and target_12.getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_13(Variable vret_2679, ConditionalExpr target_13) {
	target_13.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vret_2679
	and target_13.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_13.getThen().(VariableAccess).getTarget()=vret_2679
	and target_13.getElse().(Literal).getValue()="0"
}

from Function func, Variable vret_2679, VariableAccess target_0, VariableAccess target_1, VariableAccess target_3, VariableAccess target_4, FunctionCall target_8, UnaryMinusExpr target_9, ConditionalExpr target_10, BlockStmt target_11, EqualityOperation target_12, ConditionalExpr target_13
where
func_0(vret_2679, target_0)
and func_1(vret_2679, target_11, target_1)
and func_3(vret_2679, target_3)
and func_4(vret_2679, target_4)
and not func_6(vret_2679, target_12, target_13)
and not func_7(target_12, func)
and func_8(vret_2679, target_8)
and func_9(func, target_9)
and func_10(vret_2679, target_10)
and func_11(vret_2679, target_11)
and func_12(vret_2679, target_12)
and func_13(vret_2679, target_13)
and vret_2679.getType().hasName("int")
and vret_2679.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
