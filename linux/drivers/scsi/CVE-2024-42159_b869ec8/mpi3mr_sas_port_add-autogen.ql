/**
 * @name linux-b869ec89d2ee923d46608b76e54c006680c9b4df-mpi3mr_sas_port_add
 * @id cpp/linux/b869ec89d2ee923d46608b76e54c006680c9b4df/mpi3mr-sas-port-add
 * @description linux-b869ec89d2ee923d46608b76e54c006680c9b4df-drivers/scsi/mpi3mr/mpi3mr_transport.c-mpi3mr_sas_port_add CVE-2024-42159
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmr_sas_node_1312, ForStmt target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getGreaterOperand() |
			obj_1.getTarget().getName()="num_phys"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vmr_sas_node_1312
		)
		and obj_0.getLesserOperand().(MulExpr).getValue()="32"
	)
	and exists(ExprStmt obj_2 | obj_2=target_0.getThen() |
		exists(StmtExpr obj_3 | obj_3=obj_2.getExpr() |
			exists(BlockStmt obj_4 | obj_4=obj_3.getStmt() |
				exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(1) |
					exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
						obj_6.getTarget().hasName("_printk")
						and obj_6.getArgument(0).(StringLiteral).getValue()="6%s: max port count %u could be too high\n"
						and obj_6.getArgument(1).(PointerFieldAccess).getTarget().getName()="name"
						and obj_6.getArgument(2).(PointerFieldAccess).getTarget().getName()="num_phys"
					)
				)
				and obj_4.getStmt(0).(DoStmt).getCondition() instanceof Literal
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vi_1315, ExprStmt target_4, LogicalOrExpr target_5) {
exists(IfStmt target_1 |
	exists(RelationalOperation obj_0 | obj_0=target_1.getCondition() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=vi_1315
		and obj_0.getLesserOperand().(MulExpr).getValue()="32"
	)
	and exists(BlockStmt obj_1 | obj_1=target_1.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(StmtExpr obj_3 | obj_3=obj_2.getExpr() |
				exists(BlockStmt obj_4 | obj_4=obj_3.getStmt() |
					obj_4.getStmt(0).(DoStmt).getCondition() instanceof Literal
					and obj_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_printk")
				)
			)
		)
		and obj_1.getStmt(1).(GotoStmt).getName() ="out_fail"
	)
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_5.getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_1.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vmr_sas_node_1312, Variable vi_1315, ForStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getInitialization() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getLValue().(VariableAccess).getTarget()=vi_1315
			and obj_1.getRValue().(Literal).getValue()="0"
		)
	)
	and exists(RelationalOperation obj_2 | obj_2=target_2.getCondition() |
		exists(PointerFieldAccess obj_3 | obj_3=obj_2.getGreaterOperand() |
			obj_3.getTarget().getName()="num_phys"
			and obj_3.getQualifier().(VariableAccess).getTarget()=vmr_sas_node_1312
		)
		and obj_2.getLesserOperand().(VariableAccess).getTarget()=vi_1315
	)
	and exists(BlockStmt obj_4 | obj_4=target_2.getStmt() |
		exists(IfStmt obj_5 | obj_5=obj_4.getStmt(0) |
			exists(LogicalOrExpr obj_6 | obj_6=obj_5.getCondition() |
				exists(EqualityOperation obj_7 | obj_7=obj_6.getLeftOperand() |
					exists(ValueFieldAccess obj_8 | obj_8=obj_7.getLeftOperand() |
						obj_8.getTarget().getName()="sas_address"
						and obj_8.getQualifier().(ValueFieldAccess).getTarget().getName()="remote_identify"
					)
					and exists(ValueFieldAccess obj_9 | obj_9=obj_7.getRightOperand() |
						obj_9.getTarget().getName()="sas_address"
						and obj_9.getQualifier().(PointerFieldAccess).getTarget().getName()="remote_identify"
					)
				)
				and exists(EqualityOperation obj_10 | obj_10=obj_6.getRightOperand() |
					obj_10.getLeftOperand().(ValueFieldAccess).getTarget().getName()="hba_port"
					and obj_10.getRightOperand().(VariableAccess).getTarget().getType().hasName("mpi3mr_hba_port *")
				)
			)
		)
	)
	and target_2.getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vi_1315
}

predicate func_3(Variable vmr_sas_node_1312, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getArgument(2) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="remote_identify"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("mpi3mr_sas_port *")
			)
			and obj_1.getTarget().getName()="sas_address"
		)
		and obj_0.getTarget().hasName("mpi3mr_sas_port_sanity_check")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("mpi3mr_ioc *")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vmr_sas_node_1312
		and obj_0.getArgument(3).(VariableAccess).getTarget().getType().hasName("mpi3mr_hba_port *")
	)
}

predicate func_4(Variable vmr_sas_node_1312, Variable vi_1315, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(ArrayExpr obj_3 | obj_3=obj_2.getQualifier() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getArrayBase() |
						obj_4.getTarget().getName()="phy"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vmr_sas_node_1312
					)
					and obj_3.getArrayOffset().(VariableAccess).getTarget()=vi_1315
				)
				and obj_2.getTarget().getName()="port_siblings"
			)
		)
		and exists(AddressOfExpr obj_5 | obj_5=obj_0.getArgument(1) |
			exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
				obj_6.getTarget().getName()="phy_list"
				and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("mpi3mr_sas_port *")
			)
		)
		and obj_0.getTarget().hasName("list_add_tail")
	)
}

predicate func_5(Variable vmr_sas_node_1312, Variable vi_1315, LogicalOrExpr target_5) {
	exists(EqualityOperation obj_0 | obj_0=target_5.getLeftOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				exists(ArrayExpr obj_3 | obj_3=obj_2.getQualifier() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getArrayBase() |
						obj_4.getTarget().getName()="phy"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vmr_sas_node_1312
					)
					and obj_3.getArrayOffset().(VariableAccess).getTarget()=vi_1315
				)
				and obj_2.getTarget().getName()="remote_identify"
			)
			and obj_1.getTarget().getName()="sas_address"
		)
		and exists(ValueFieldAccess obj_5 | obj_5=obj_0.getRightOperand() |
			exists(PointerFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
				obj_6.getTarget().getName()="remote_identify"
				and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("mpi3mr_sas_port *")
			)
			and obj_5.getTarget().getName()="sas_address"
		)
	)
	and exists(EqualityOperation obj_7 | obj_7=target_5.getRightOperand() |
		exists(ValueFieldAccess obj_8 | obj_8=obj_7.getLeftOperand() |
			exists(ArrayExpr obj_9 | obj_9=obj_8.getQualifier() |
				exists(PointerFieldAccess obj_10 | obj_10=obj_9.getArrayBase() |
					obj_10.getTarget().getName()="phy"
					and obj_10.getQualifier().(VariableAccess).getTarget()=vmr_sas_node_1312
				)
				and obj_9.getArrayOffset().(VariableAccess).getTarget()=vi_1315
			)
			and obj_8.getTarget().getName()="hba_port"
		)
		and obj_7.getRightOperand().(VariableAccess).getTarget().getType().hasName("mpi3mr_hba_port *")
	)
}

from Function func, Variable vmr_sas_node_1312, Variable vi_1315, ForStmt target_2, ExprStmt target_3, ExprStmt target_4, LogicalOrExpr target_5
where
not func_0(vmr_sas_node_1312, target_2, target_3, func)
and not func_1(vi_1315, target_4, target_5)
and func_2(vmr_sas_node_1312, vi_1315, target_2)
and func_3(vmr_sas_node_1312, target_3)
and func_4(vmr_sas_node_1312, vi_1315, target_4)
and func_5(vmr_sas_node_1312, vi_1315, target_5)
and vmr_sas_node_1312.getType().hasName("mpi3mr_sas_node *")
and vi_1315.getType().hasName("int")
and vmr_sas_node_1312.(LocalVariable).getFunction() = func
and vi_1315.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
