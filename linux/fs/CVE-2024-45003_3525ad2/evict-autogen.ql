/**
 * @name linux-3525ad25240dfdd8c78f3470911ed10aa727aa72-evict
 * @id cpp/linux/3525ad25240dfdd8c78f3470911ed10aa727aa72/evict
 * @description linux-3525ad25240dfdd8c78f3470911ed10aa727aa72-fs/inode.c-evict CVE-2024-45003
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="625"
	and not target_0.getValue()="629"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="626"
	and not target_1.getValue()="630"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="627"
	and not target_2.getValue()="631"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vinode_553, ExprStmt target_4, ExprStmt target_5, Function func) {
exists(ExprStmt target_3 |
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("inode_wait_for_lru_isolating")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_553
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_4.getLocation())
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_4(Parameter vinode_553, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		obj_0.getTarget().hasName("inode_wait_for_writeback")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_553
	)
}

predicate func_5(Parameter vinode_553, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("inode_sb_list_del")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_553
	)
}

from Function func, Parameter vinode_553, Literal target_0, Literal target_1, Literal target_2, ExprStmt target_4, ExprStmt target_5
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and not func_3(vinode_553, target_4, target_5, func)
and func_4(vinode_553, target_4)
and func_5(vinode_553, target_5)
and vinode_553.getType().hasName("inode *")
and vinode_553.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
