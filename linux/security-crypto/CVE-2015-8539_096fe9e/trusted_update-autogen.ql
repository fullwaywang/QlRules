/**
 * @name linux-096fe9eaea40a17e125569f9e657e34cdb6d73bd-trusted_update
 * @id cpp/linux/096fe9eaea40a17e125569f9e657e34cdb6d73bd/trusted-update
 * @description linux-096fe9eaea40a17e125569f9e657e34cdb6d73bd-security/keys/trusted.c-trusted_update CVE-2015-8539
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkey_1008, IfStmt target_4, ArrayExpr target_2, ExprStmt target_5, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_0.getCondition().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_0.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(Literal).getValue()="5"
	and target_0.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1008
	and target_0.getCondition().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_0.getCondition().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(Literal).getValue()="5"
	and target_0.getCondition().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1008
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-126"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_4.getLocation())
	and target_2.getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vp_1010, IfStmt target_4, NotExpr target_7, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vp_1010
	and target_1.getExpr().(AssignExpr).getRValue() instanceof ArrayExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vkey_1008, ArrayExpr target_2) {
	target_2.getArrayBase().(ValueFieldAccess).getTarget().getName()="data"
	and target_2.getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="payload"
	and target_2.getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1008
	and target_2.getArrayOffset().(Literal).getValue()="0"
}

predicate func_3(Function func, Initializer target_3) {
	target_3.getExpr() instanceof ArrayExpr
	and target_3.getExpr().getEnclosingFunction() = func
}

predicate func_4(Variable vp_1010, IfStmt target_4) {
	target_4.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="migratable"
	and target_4.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1010
	and target_4.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
}

predicate func_5(Parameter vkey_1008, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("trusted_key_payload *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("trusted_payload_alloc")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_1008
}

predicate func_7(Variable vp_1010, NotExpr target_7) {
	target_7.getOperand().(PointerFieldAccess).getTarget().getName()="migratable"
	and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1010
}

from Function func, Variable vp_1010, Parameter vkey_1008, ArrayExpr target_2, Initializer target_3, IfStmt target_4, ExprStmt target_5, NotExpr target_7
where
not func_0(vkey_1008, target_4, target_2, target_5, func)
and not func_1(vp_1010, target_4, target_7, func)
and func_2(vkey_1008, target_2)
and func_3(func, target_3)
and func_4(vp_1010, target_4)
and func_5(vkey_1008, target_5)
and func_7(vp_1010, target_7)
and vp_1010.getType().hasName("trusted_key_payload *")
and vkey_1008.getType().hasName("key *")
and vp_1010.(LocalVariable).getFunction() = func
and vkey_1008.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
