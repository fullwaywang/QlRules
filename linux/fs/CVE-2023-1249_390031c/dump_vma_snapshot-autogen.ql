/**
 * @name linux-390031c942116d4733310f0684beb8db19885fe6-dump_vma_snapshot
 * @id cpp/linux/390031c942116d4733310f0684beb8db19885fe6/dump-vma-snapshot
 * @description linux-390031c942116d4733310f0684beb8db19885fe6-dump_vma_snapshot CVE-2023-1249
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="32"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vvma_1108, Variable vm_1132, ExprStmt target_4) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="pgoff"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vm_1132
		and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="vm_pgoff"
		and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1108
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vvma_1108, Variable vm_1132) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="file"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vm_1132
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="vm_file"
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1108)
}

predicate func_3(Variable vm_1132) {
	exists(IfStmt target_3 |
		target_3.getCondition().(PointerFieldAccess).getTarget().getName()="file"
		and target_3.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vm_1132
		and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("get_file")
		and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="file"
		and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vm_1132)
}

predicate func_4(Variable vvma_1108, Variable vm_1132, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dump_size"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vm_1132
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vma_dump_size")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_1108
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="mm_flags"
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("coredump_params *")
}

from Function func, Variable vvma_1108, Variable vm_1132, SizeofExprOperator target_0, ExprStmt target_4
where
func_0(func, target_0)
and not func_1(vvma_1108, vm_1132, target_4)
and not func_2(vvma_1108, vm_1132)
and not func_3(vm_1132)
and func_4(vvma_1108, vm_1132, target_4)
and vvma_1108.getType().hasName("vm_area_struct *")
and vm_1132.getType().hasName("core_vma_metadata *")
and vvma_1108.(LocalVariable).getFunction() = func
and vm_1132.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
