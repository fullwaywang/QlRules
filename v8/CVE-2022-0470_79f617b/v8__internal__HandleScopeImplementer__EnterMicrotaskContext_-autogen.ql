/**
 * @name v8-79f617b009c4d8128413a07abed7f0fbe5b65308-v8__internal__HandleScopeImplementer__EnterMicrotaskContext_
 * @id cpp/v8/79f617b009c4d8128413a07abed7f0fbe5b65308/v8internalhandlescopeimplementerentermicrotaskcontext
 * @description v8-79f617b009c4d8128413a07abed7f0fbe5b65308-src/builtins/builtins-microtask-queue-gen.cc-v8__internal__HandleScopeImplementer__EnterMicrotaskContext_ CVE-2022-0470
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v_msg, Literal target_0) {
	target_0.getValue()="488"
	and not target_0.getValue()="490"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="../../src/api/api.h"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("c_str")
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getQualifier().(VariableAccess).getTarget()=v_msg
}

predicate func_1(Variable v_msg, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(DoStmt target_1 |
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(ConditionDeclExpr).getVariableAccess().(VariableAccess).getTarget()=v_msg
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="../../src/api/api.h"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="491"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("c_str")
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(DeleteExpr).getDeallocatorCall().(FunctionCall).getTarget().hasName("operator delete")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(DeleteExpr).getDestructorCall().(DestructorCall).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(ConditionDeclExpr).getVariableAccess().(VariableAccess).getLocation()))
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("push_back")
	and target_2.getExpr().(FunctionCall).getQualifier().(PointerFieldAccess).getTarget().getName()="entered_contexts_"
	and target_2.getExpr().(FunctionCall).getQualifier().(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("Context")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable v_msg, ExprStmt target_3) {
	target_3.getExpr().(DeleteExpr).getDeallocatorCall().(FunctionCall).getTarget().hasName("operator delete")
	and target_3.getExpr().(DeleteExpr).getDestructorCall().(DestructorCall).getQualifier().(VariableAccess).getTarget()=v_msg
}

from Function func, Variable v_msg, Literal target_0, ExprStmt target_2, ExprStmt target_3
where
func_0(v_msg, target_0)
and not func_1(v_msg, target_2, target_3, func)
and func_2(func, target_2)
and func_3(v_msg, target_3)
and v_msg.getType().hasName("string *")
and not v_msg.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
