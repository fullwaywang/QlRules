/**
 * @name linux-c66fb347946ebdd5b10908866ecc9fa05ee2cf3d-pipe_fcntl
 * @id cpp/linux/c66fb347946ebdd5b10908866ecc9fa05ee2cf3d/pipe-fcntl
 * @description linux-c66fb347946ebdd5b10908866ecc9fa05ee2cf3d-fs/pipe.c-pipe_fcntl CVE-2010-4256
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfile_1202) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("get_pipe_info")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vfile_1202
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("pipe_inode_info *"))
}

predicate func_1(Parameter vfile_1202, VariableAccess target_1) {
		target_1.getTarget()=vfile_1202
}

predicate func_2(Parameter vfile_1202, ValueFieldAccess target_2) {
		target_2.getTarget().getName()="i_pipe"
		and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_2.getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="d_inode"
		and target_2.getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="dentry"
		and target_2.getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="f_path"
		and target_2.getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_1202
		and target_2.getParent().(AssignExpr).getRValue() = target_2
		and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("pipe_inode_info *")
}

from Function func, Parameter vfile_1202, VariableAccess target_1, ValueFieldAccess target_2
where
not func_0(vfile_1202)
and func_1(vfile_1202, target_1)
and func_2(vfile_1202, target_2)
and vfile_1202.getType().hasName("file *")
and vfile_1202.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
