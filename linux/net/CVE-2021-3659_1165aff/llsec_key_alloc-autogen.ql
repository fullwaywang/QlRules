/**
 * @name linux-1165affd484889d4986cf3b724318935a0b120d8-llsec_key_alloc
 * @id cpp/linux/1165affd484889d4986cf3b724318935a0b120d8/llsec-key-alloc
 * @description linux-1165affd484889d4986cf3b724318935a0b120d8-net/mac802154/llsec.c-llsec_key_alloc CVE-2021-3659
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(NotExpr target_0 |
	target_0.getOperand().(FunctionCall).getTarget().hasName("IS_ERR_OR_NULL")
	and target_0.getOperand().(FunctionCall).getArgument(0) instanceof ArrayExpr
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vkey_117, Variable vi_118, ExprStmt target_2, ArrayExpr target_1) {
	target_1.getArrayBase().(PointerFieldAccess).getTarget().getName()="tfm"
	and target_1.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_117
	and target_1.getArrayOffset().(VariableAccess).getTarget()=vi_118
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vkey_117, Variable vi_118, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("crypto_free_aead")
	and target_2.getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="tfm"
	and target_2.getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_117
	and target_2.getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_118
}

from Function func, Variable vkey_117, Variable vi_118, ArrayExpr target_1, ExprStmt target_2
where
not func_0(target_2, func)
and func_1(vkey_117, vi_118, target_2, target_1)
and func_2(vkey_117, vi_118, target_2)
and vkey_117.getType().hasName("mac802154_llsec_key *")
and vi_118.getType().hasName("int")
and vkey_117.(LocalVariable).getFunction() = func
and vi_118.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
