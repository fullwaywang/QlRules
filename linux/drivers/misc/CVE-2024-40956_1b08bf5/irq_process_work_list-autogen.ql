/**
 * @name linux-1b08bf5a17c66ab7dbb628df5344da53c8e7ab33-irq_process_work_list
 * @id cpp/linux/1b08bf5a17c66ab7dbb628df5344da53c8e7ab33/irq-process-work-list
 * @description linux-1b08bf5a17c66ab7dbb628df5344da53c8e7ab33-drivers/dma/idxd/irq.c-irq_process_work_list CVE-2024-40956
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vn_215, ValueFieldAccess target_10) {
exists(CommaExpr target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getRightOperand() |
		obj_0.getLValue().(VariableAccess).getTarget()=vn_215
		and obj_0.getRValue() instanceof StmtExpr
	)
	and target_0.getLeftOperand() instanceof AssignExpr
	and target_10.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

/*predicate func_3(IfStmt target_6, Function func) {
exists(DoStmt target_3 |
	target_3.getCondition().(Literal).getValue()="0"
	and target_3.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_3.getLocation().isBefore(target_6.getLocation())
	and target_3.getEnclosingFunction() = func
)
}

*/
/*predicate func_4(IfStmt target_6, Function func) {
exists(ExprStmt target_4 |
	exists(PointerArithmeticOperation obj_0 | obj_0=target_4.getExpr() |
		obj_0.getLeftOperand().(VariableAccess).getType().hasName("void *")
		and obj_0.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="216"
	)
	and target_4.getLocation().isBefore(target_6.getLocation())
	and target_4.getEnclosingFunction() = func
)
}

*/
predicate func_5(Variable vdesc_215, NotExpr target_11) {
exists(ExprStmt target_5 |
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="list"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vdesc_215
			)
		)
		and obj_0.getTarget().hasName("list_del")
	)
	and target_11.getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_6(Variable vdesc_215, IfStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getCondition() |
		exists(NotExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(NotExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(EqualityOperation obj_3 | obj_3=obj_2.getOperand() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getLeftOperand() |
						obj_4.getTarget().getName()="status"
						and obj_4.getQualifier().(ValueFieldAccess).getTarget().getName()="completion"
					)
				)
			)
		)
		and obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_5 | obj_5=target_6.getThen() |
		exists(ExprStmt obj_6 | obj_6=obj_5.getStmt(0) |
			exists(FunctionCall obj_7 | obj_7=obj_6.getExpr() |
				obj_7.getTarget().hasName("complete_desc")
				and obj_7.getArgument(0).(VariableAccess).getTarget()=vdesc_215
			)
		)
	)
}

predicate func_7(Variable vdesc_215, ExprStmt target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getExpr() |
		obj_0.getTarget().hasName("complete_desc")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdesc_215
	)
}

predicate func_8(Variable vdesc_215, Variable v__mptr_236, AssignExpr target_8) {
	exists(StmtExpr obj_0 | obj_0=target_8.getRValue() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(2) |
				exists(PointerArithmeticOperation obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getLeftOperand().(VariableAccess).getTarget()=v__mptr_236
					and obj_3.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="216"
				)
			)
			and obj_1.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
		)
	)
	and target_8.getLValue().(VariableAccess).getTarget()=vdesc_215
}

predicate func_9(Variable vdesc_215, Variable v__mptr_1_236, StmtExpr target_9) {
	exists(BlockStmt obj_0 | obj_0=target_9.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			obj_1.getCondition().(Literal).getValue()="0"
			and obj_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
		)
		and exists(ExprStmt obj_2 | obj_2=obj_0.getStmt(2) |
			exists(PointerArithmeticOperation obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_236
				and obj_3.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="216"
			)
		)
	)
	and exists(AssignExpr obj_4 | obj_4=target_9.getParent() |
		obj_4.getRValue() = target_9
		and obj_4.getLValue().(VariableAccess).getTarget()=vdesc_215
	)
}

predicate func_10(Variable vn_215, ValueFieldAccess target_10) {
	exists(PointerFieldAccess obj_0 | obj_0=target_10.getQualifier() |
		obj_0.getTarget().getName()="list"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vn_215
	)
	and target_10.getTarget().getName()="next"
}

predicate func_11(Variable vdesc_215, NotExpr target_11) {
	exists(EqualityOperation obj_0 | obj_0=target_11.getOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="list"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vdesc_215
			)
		)
		and obj_0.getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("list_head")
	)
}

from Function func, Variable vdesc_215, Variable vn_215, Variable v__mptr_236, Variable v__mptr_1_236, IfStmt target_6, ExprStmt target_7, AssignExpr target_8, StmtExpr target_9, ValueFieldAccess target_10, NotExpr target_11
where
not func_0(vn_215, target_10)
and not func_5(vdesc_215, target_11)
and func_6(vdesc_215, target_6)
and func_7(vdesc_215, target_7)
and func_8(vdesc_215, v__mptr_236, target_8)
and func_9(vdesc_215, v__mptr_1_236, target_9)
and func_10(vn_215, target_10)
and func_11(vdesc_215, target_11)
and vdesc_215.getType().hasName("idxd_desc *")
and vn_215.getType().hasName("idxd_desc *")
and v__mptr_236.getType().hasName("void *")
and v__mptr_1_236.getType().hasName("void *")
and vdesc_215.(LocalVariable).getFunction() = func
and vn_215.(LocalVariable).getFunction() = func
and v__mptr_236.(LocalVariable).getFunction() = func
and v__mptr_1_236.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
