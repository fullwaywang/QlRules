/**
 * @name linux-794b4bc292f5d31739d89c0202c54e7dc9bc3add-valid_master_desc
 * @id cpp/linux/794b4bc292f5d31739d89c0202c54e7dc9bc3add/valid-master-desc
 * @description linux-794b4bc292f5d31739d89c0202c54e7dc9bc3add-security/keys/encrypted-keys/encrypted.c-valid_master_desc CVE-2017-13305
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnew_desc_142, Variable vKEY_TRUSTED_PREFIX, BlockStmt target_25, FunctionCall target_0) {
	target_0.getTarget().hasName("memcmp")
	and not target_0.getTarget().hasName("strncmp")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_0.getArgument(1).(VariableAccess).getTarget()=vKEY_TRUSTED_PREFIX
	and target_0.getArgument(2).(SubExpr).getValue()="8"
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_25
}

predicate func_1(Parameter vnew_desc_142, Variable vKEY_USER_PREFIX, BlockStmt target_26, FunctionCall target_1) {
	target_1.getTarget().hasName("memcmp")
	and not target_1.getTarget().hasName("strncmp")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_1.getArgument(1).(VariableAccess).getTarget()=vKEY_USER_PREFIX
	and target_1.getArgument(2).(SubExpr).getValue()="5"
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_26
}

predicate func_2(Parameter vnew_desc_142, Parameter vorig_desc_142, FunctionCall target_2) {
	target_2.getTarget().hasName("memcmp")
	and not target_2.getTarget().hasName("strncmp")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_2.getArgument(1).(VariableAccess).getTarget()=vorig_desc_142
	and target_2.getArgument(2).(SubExpr).getValue()="8"
	and target_2.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="1"
	and not target_3.getValue()="22"
	and target_3.getParent().(SubExpr).getParent().(FunctionCall).getArgument(2).(SubExpr).getValue()="8"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, Literal target_4) {
	target_4.getValue()="1"
	and not target_4.getValue()="22"
	and target_4.getParent().(SubExpr).getParent().(FunctionCall).getArgument(2) instanceof SubExpr
	and target_4.getEnclosingFunction() = func
}

predicate func_5(VariableAccess target_16, Function func) {
exists(ExprStmt target_5 |
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue() instanceof SubExpr
	and target_5.getParent().(IfStmt).getCondition()=target_16
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(VariableAccess target_16, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue() instanceof SubExpr
	and target_6.getParent().(IfStmt).getParent().(IfStmt).getThen().(IfStmt).getThen()=target_6
	and target_6.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_16
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Parameter vnew_desc_142) {
exists(NotExpr target_7 |
	target_7.getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vnew_desc_142
	and target_7.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getType().hasName("int")
	and target_7.getParent().(IfStmt).getThen() instanceof GotoStmt)
}

predicate func_8(EqualityOperation target_18, Function func) {
exists(ReturnStmt target_8 |
	target_8.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_8.getParent().(IfStmt).getCondition()=target_18
	and target_8.getEnclosingFunction() = func)
}

predicate func_9(Parameter vnew_desc_142, Parameter vorig_desc_142, BlockStmt target_25, FunctionCall target_2, IfStmt target_24) {
exists(LogicalAndExpr target_9 |
	target_9.getLeftOperand().(VariableAccess).getTarget()=vorig_desc_142
	and target_9.getRightOperand().(FunctionCall).getTarget().hasName("strncmp")
	and target_9.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_9.getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vorig_desc_142
	and target_9.getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("int")
	and target_9.getParent().(IfStmt).getThen()=target_25
	and target_9.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation())
	and target_9.getLeftOperand().(VariableAccess).getLocation().isBefore(target_24.getCondition().(VariableAccess).getLocation()))
}

predicate func_11(NotExpr target_28, Function func) {
exists(ReturnStmt target_11 |
	target_11.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_11.getParent().(IfStmt).getCondition()=target_28
	and target_11.getEnclosingFunction() = func)
}

predicate func_12(Function func, SubExpr target_12) {
	target_12.getValue()="8"
	and target_12.getParent().(EQExpr).getLeftOperand() instanceof FunctionCall
	and target_12.getParent().(EQExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Function func, SubExpr target_13) {
	target_13.getValue()="5"
	and target_13.getParent().(EQExpr).getLeftOperand() instanceof FunctionCall
	and target_13.getParent().(EQExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Function func, ReturnStmt target_14) {
	target_14.getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_15(Parameter vnew_desc_142, VariableAccess target_15) {
	target_15.getTarget()=vnew_desc_142
	and target_15.getParent().(FunctionCall).getParent().(EQExpr).getLeftOperand() instanceof FunctionCall
}

predicate func_16(Parameter vorig_desc_142, IfStmt target_29, VariableAccess target_16) {
	target_16.getTarget()=vorig_desc_142
	and target_16.getParent().(IfStmt).getThen()=target_29
}

predicate func_17(Parameter vnew_desc_142, Parameter vorig_desc_142, VariableAccess target_17) {
	target_17.getTarget()=vnew_desc_142
	and target_17.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vorig_desc_142
	and target_17.getParent().(FunctionCall).getArgument(2).(SubExpr).getValue()="8"
	and target_17.getParent().(FunctionCall).getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_18(Parameter vnew_desc_142, EqualityOperation target_18) {
	target_18.getLeftOperand().(FunctionCall).getTarget().hasName("strlen")
	and target_18.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_18.getRightOperand() instanceof SubExpr
	and target_18.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_19(EqualityOperation target_18, Function func, GotoStmt target_19) {
	target_19.getName() ="out"
	and target_19.getParent().(IfStmt).getCondition()=target_18
	and target_19.getEnclosingFunction() = func
}

predicate func_20(Function func, SizeofExprOperator target_20) {
	target_20.getValue()="9"
	and target_20.getEnclosingFunction() = func
}

predicate func_21(VariableAccess target_16, Function func, GotoStmt target_21) {
	target_21.getName() ="out"
	and target_21.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_16
	and target_21.getEnclosingFunction() = func
}

predicate func_22(Parameter vnew_desc_142, Parameter vorig_desc_142, NotExpr target_28, IfStmt target_22) {
	target_22.getCondition().(NotExpr).getOperand() instanceof FunctionCall
	and target_22.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("strlen")
	and target_22.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_22.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getRightOperand() instanceof SubExpr
	and target_22.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(GotoStmt).getName() ="out"
	and target_22.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=vorig_desc_142
	and target_22.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("memcmp")
	and target_22.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_22.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vorig_desc_142
	and target_22.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getArgument(2).(SubExpr).getValue()="5"
	and target_22.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(IfStmt).getThen().(GotoStmt).getName() ="out"
	and target_22.getElse().(GotoStmt).getName() ="out"
	and target_22.getParent().(IfStmt).getCondition()=target_28
}

/*predicate func_23(Parameter vnew_desc_142, NotExpr target_30, IfStmt target_23) {
	target_23.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("strlen")
	and target_23.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_23.getCondition().(EqualityOperation).getRightOperand() instanceof SubExpr
	and target_23.getThen().(GotoStmt).getName() ="out"
	and target_23.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_30
}

*/
predicate func_24(Parameter vnew_desc_142, Parameter vorig_desc_142, IfStmt target_24) {
	target_24.getCondition().(VariableAccess).getTarget()=vorig_desc_142
	and target_24.getThen().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("memcmp")
	and target_24.getThen().(IfStmt).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_desc_142
	and target_24.getThen().(IfStmt).getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vorig_desc_142
	and target_24.getThen().(IfStmt).getCondition().(FunctionCall).getArgument(2).(SubExpr).getValue()="5"
	and target_24.getThen().(IfStmt).getThen().(GotoStmt).getName() ="out"
}

predicate func_25(Parameter vorig_desc_142, BlockStmt target_25) {
	target_25.getStmt(0).(IfStmt).getCondition() instanceof EqualityOperation
	and target_25.getStmt(0).(IfStmt).getThen() instanceof GotoStmt
	and target_25.getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=vorig_desc_142
	and target_25.getStmt(1).(IfStmt).getThen().(IfStmt).getCondition() instanceof FunctionCall
	and target_25.getStmt(1).(IfStmt).getThen().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_26(Function func, BlockStmt target_26) {
	target_26.getStmt(0) instanceof IfStmt
	and target_26.getStmt(1) instanceof IfStmt
	and target_26.getEnclosingFunction() = func
}

predicate func_28(Function func, NotExpr target_28) {
	target_28.getOperand() instanceof FunctionCall
	and target_28.getEnclosingFunction() = func
}

predicate func_29(Function func, IfStmt target_29) {
	target_29.getCondition() instanceof FunctionCall
	and target_29.getThen() instanceof GotoStmt
	and target_29.getEnclosingFunction() = func
}

predicate func_30(Function func, NotExpr target_30) {
	target_30.getOperand() instanceof FunctionCall
	and target_30.getEnclosingFunction() = func
}

from Function func, Parameter vnew_desc_142, Parameter vorig_desc_142, Variable vKEY_TRUSTED_PREFIX, Variable vKEY_USER_PREFIX, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, Literal target_3, Literal target_4, SubExpr target_12, SubExpr target_13, ReturnStmt target_14, VariableAccess target_15, VariableAccess target_16, VariableAccess target_17, EqualityOperation target_18, GotoStmt target_19, SizeofExprOperator target_20, GotoStmt target_21, IfStmt target_22, IfStmt target_24, BlockStmt target_25, BlockStmt target_26, NotExpr target_28, IfStmt target_29, NotExpr target_30
where
func_0(vnew_desc_142, vKEY_TRUSTED_PREFIX, target_25, target_0)
and func_1(vnew_desc_142, vKEY_USER_PREFIX, target_26, target_1)
and func_2(vnew_desc_142, vorig_desc_142, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and not func_5(target_16, func)
and not func_6(target_16, func)
and not func_7(vnew_desc_142)
and not func_8(target_18, func)
and not func_9(vnew_desc_142, vorig_desc_142, target_25, target_2, target_24)
and not func_11(target_28, func)
and func_12(func, target_12)
and func_13(func, target_13)
and func_14(func, target_14)
and func_15(vnew_desc_142, target_15)
and func_16(vorig_desc_142, target_29, target_16)
and func_17(vnew_desc_142, vorig_desc_142, target_17)
and func_18(vnew_desc_142, target_18)
and func_19(target_18, func, target_19)
and func_20(func, target_20)
and func_21(target_16, func, target_21)
and func_22(vnew_desc_142, vorig_desc_142, target_28, target_22)
and func_24(vnew_desc_142, vorig_desc_142, target_24)
and func_25(vorig_desc_142, target_25)
and func_26(func, target_26)
and func_28(func, target_28)
and func_29(func, target_29)
and func_30(func, target_30)
and vnew_desc_142.getType().hasName("const char *")
and vorig_desc_142.getType().hasName("const char *")
and vKEY_TRUSTED_PREFIX.getType() instanceof ArrayType
and vKEY_USER_PREFIX.getType() instanceof ArrayType
and vnew_desc_142.getFunction() = func
and vorig_desc_142.getFunction() = func
and not vKEY_TRUSTED_PREFIX.getParentScope+() = func
and not vKEY_USER_PREFIX.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
