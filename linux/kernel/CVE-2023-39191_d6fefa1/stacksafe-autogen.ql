/**
 * @name linux-d6fefa1105dacc8a742cdcf2f4bfb501c9e61349-stacksafe
 * @id cpp/linux/d6fefa1105dacc8a742cdcf2f4bfb501c9e61349/stacksafe
 * @description linux-d6fefa1105dacc8a742cdcf2f4bfb501c9e61349-kernel/bpf/verifier.c-stacksafe CVE-2023-39191
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("is_spilled_reg")
	and not target_0.getTarget().hasName("check_ids")
	and target_0.getArgument(0).(AddressOfExpr).getOperand() instanceof ArrayExpr
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen() instanceof ContinueStmt
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func) {
exists(SwitchStmt target_1 |
	target_1.getExpr().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="slot_type"
	and target_1.getExpr().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier() instanceof ArrayExpr
	and target_1.getExpr().(ArrayExpr).getArrayOffset().(SubExpr).getValue()="7"
	and target_1.getStmt().(BlockStmt).getStmt(1) instanceof IfStmt
	and target_1.getStmt().(BlockStmt).getStmt(4).(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_1.getStmt().(BlockStmt).getStmt(4).(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="spilled_ptr"
	and target_1.getStmt().(BlockStmt).getStmt(4).(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_1.getStmt().(BlockStmt).getStmt(4).(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="spilled_ptr"
	and target_1.getStmt().(BlockStmt).getStmt(4).(BlockStmt).getStmt(3).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("check_ids")
	and target_1.getStmt().(BlockStmt).getStmt(8) instanceof ContinueStmt
	and target_1.getStmt().(BlockStmt).getStmt(9).(SwitchCase).toString() = "default: "
	and target_1.getEnclosingFunction() = func)
}

/*predicate func_2(Parameter vidmap_13175, NotExpr target_10) {
exists(LogicalOrExpr target_2 |
	target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="type"
	and target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="dynptr"
	and target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="type"
	and target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="dynptr"
	and target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="first_slot"
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="dynptr"
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="first_slot"
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="dynptr"
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("check_ids")
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ref_obj_id"
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="ref_obj_id"
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vidmap_13175
	and target_2.getParent().(IfStmt).getThen() instanceof ContinueStmt
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_10.getOperand().(FunctionCall).getArgument(3).(VariableAccess).getLocation()))
}

*/
/*predicate func_3(Function func) {
exists(PointerFieldAccess target_3 |
	target_3.getTarget().getName()="ref_obj_id"
	and target_3.getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_3.getEnclosingFunction() = func)
}

*/
/*predicate func_4(Function func) {
exists(PointerFieldAccess target_4 |
	target_4.getTarget().getName()="ref_obj_id"
	and target_4.getQualifier().(VariableAccess).getType().hasName("const bpf_reg_state *")
	and target_4.getEnclosingFunction() = func)
}

*/
/*predicate func_6(NotExpr target_11, Function func) {
exists(ReturnStmt target_6 |
	target_6.getParent().(IfStmt).getCondition()=target_11
	and target_6.getEnclosingFunction() = func)
}

*/
predicate func_7(Parameter vold_13174, Variable vspi_13177, ArrayExpr target_7) {
	target_7.getArrayBase().(PointerFieldAccess).getTarget().getName()="stack"
	and target_7.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vold_13174
	and target_7.getArrayOffset().(VariableAccess).getTarget()=vspi_13177
	and target_7.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_8(Parameter venv_13174, Parameter vidmap_13175, Variable vspi_13177, IfStmt target_8) {
	target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("regsafe")
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_13174
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="spilled_ptr"
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="stack"
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vspi_13177
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="spilled_ptr"
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="stack"
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vspi_13177
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vidmap_13175
}

predicate func_9(NotExpr target_11, Function func, ContinueStmt target_9) {
	target_9.getParent().(IfStmt).getCondition()=target_11
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Parameter venv_13174, Parameter vold_13174, Parameter vidmap_13175, Variable vspi_13177, NotExpr target_10) {
	target_10.getOperand().(FunctionCall).getTarget().hasName("regsafe")
	and target_10.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_13174
	and target_10.getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="spilled_ptr"
	and target_10.getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="stack"
	and target_10.getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vold_13174
	and target_10.getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vspi_13177
	and target_10.getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="spilled_ptr"
	and target_10.getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="stack"
	and target_10.getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_func_state *")
	and target_10.getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vspi_13177
	and target_10.getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vidmap_13175
}

predicate func_11(Function func, NotExpr target_11) {
	target_11.getOperand() instanceof FunctionCall
	and target_11.getEnclosingFunction() = func
}

from Function func, Parameter venv_13174, Parameter vold_13174, Parameter vidmap_13175, Variable vspi_13177, FunctionCall target_0, ArrayExpr target_7, IfStmt target_8, ContinueStmt target_9, NotExpr target_10, NotExpr target_11
where
func_0(func, target_0)
and not func_1(func)
and func_7(vold_13174, vspi_13177, target_7)
and func_8(venv_13174, vidmap_13175, vspi_13177, target_8)
and func_9(target_11, func, target_9)
and func_10(venv_13174, vold_13174, vidmap_13175, vspi_13177, target_10)
and func_11(func, target_11)
and venv_13174.getType().hasName("bpf_verifier_env *")
and vold_13174.getType().hasName("bpf_func_state *")
and vidmap_13175.getType().hasName("bpf_id_pair *")
and vspi_13177.getType().hasName("int")
and venv_13174.getFunction() = func
and vold_13174.getFunction() = func
and vidmap_13175.getFunction() = func
and vspi_13177.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
