/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-rds_cancel_sent_to
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/rds-cancel-sent-to
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/rds/af_rds.c-rds_cancel_sent_to CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptval_293, BlockStmt target_8, FunctionCall target_6) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("copy_from_sockptr")
	and target_0.getArgument(0) instanceof AddressOfExpr
	and target_0.getArgument(1).(VariableAccess).getTarget()=voptval_293
	and target_0.getArgument(2) instanceof SizeofTypeOperator
	and target_0.getParent().(IfStmt).getThen()=target_8
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_6.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter voptval_293, BlockStmt target_9, FunctionCall target_6, FunctionCall target_7) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("copy_from_sockptr")
	and target_1.getArgument(0) instanceof AddressOfExpr
	and target_1.getArgument(1).(VariableAccess).getTarget()=voptval_293
	and target_1.getArgument(2) instanceof SizeofTypeOperator
	and target_1.getParent().(IfStmt).getThen()=target_9
	and target_6.getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getArgument(1).(VariableAccess).getLocation())
	and target_1.getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Parameter voptval_293, Variable vsin_297, BlockStmt target_8, AddressOfExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vsin_297
	and target_2.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voptval_293
	and target_2.getParent().(FunctionCall).getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_2.getParent().(FunctionCall).getArgument(2).(SizeofTypeOperator).getValue()="16"
	and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_8
}

predicate func_3(Parameter voptval_293, Variable vsin6_296, BlockStmt target_9, AddressOfExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vsin6_296
	and target_3.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voptval_293
	and target_3.getParent().(FunctionCall).getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_3.getParent().(FunctionCall).getArgument(2).(SizeofTypeOperator).getValue()="28"
	and target_3.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_9
}

/*predicate func_4(Function func, SizeofTypeOperator target_4) {
	target_4.getType() instanceof LongType
	and target_4.getValue()="16"
	and target_4.getEnclosingFunction() = func
}

*/
/*predicate func_5(Function func, SizeofTypeOperator target_5) {
	target_5.getType() instanceof LongType
	and target_5.getValue()="28"
	and target_5.getEnclosingFunction() = func
}

*/
predicate func_6(Parameter voptval_293, BlockStmt target_8, FunctionCall target_6) {
	target_6.getTarget().hasName("copy_from_user")
	and target_6.getArgument(0) instanceof AddressOfExpr
	and target_6.getArgument(1).(VariableAccess).getTarget()=voptval_293
	and target_6.getArgument(2) instanceof SizeofTypeOperator
	and target_6.getParent().(IfStmt).getThen()=target_8
}

predicate func_7(Parameter voptval_293, BlockStmt target_9, FunctionCall target_7) {
	target_7.getTarget().hasName("copy_from_user")
	and target_7.getArgument(0) instanceof AddressOfExpr
	and target_7.getArgument(1).(VariableAccess).getTarget()=voptval_293
	and target_7.getArgument(2) instanceof SizeofTypeOperator
	and target_7.getParent().(IfStmt).getThen()=target_9
}

predicate func_8(FunctionCall target_6, Function func, BlockStmt target_8) {
	target_8.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_8.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_8.getStmt(1).(GotoStmt).getName() ="out"
	and target_8.getParent().(IfStmt).getCondition()=target_6
	and target_8.getEnclosingFunction() = func
}

predicate func_9(FunctionCall target_7, Function func, BlockStmt target_9) {
	target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_9.getStmt(1).(GotoStmt).getName() ="out"
	and target_9.getParent().(IfStmt).getCondition()=target_7
	and target_9.getEnclosingFunction() = func
}

from Function func, Parameter voptval_293, Variable vsin6_296, Variable vsin_297, AddressOfExpr target_2, AddressOfExpr target_3, FunctionCall target_6, FunctionCall target_7, BlockStmt target_8, BlockStmt target_9
where
not func_0(voptval_293, target_8, target_6)
and not func_1(voptval_293, target_9, target_6, target_7)
and func_2(voptval_293, vsin_297, target_8, target_2)
and func_3(voptval_293, vsin6_296, target_9, target_3)
and func_6(voptval_293, target_8, target_6)
and func_7(voptval_293, target_9, target_7)
and func_8(target_6, func, target_8)
and func_9(target_7, func, target_9)
and voptval_293.getType().hasName("char *")
and vsin6_296.getType().hasName("sockaddr_in6")
and vsin_297.getType().hasName("sockaddr_in")
and voptval_293.getFunction() = func
and vsin6_296.(LocalVariable).getFunction() = func
and vsin_297.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
