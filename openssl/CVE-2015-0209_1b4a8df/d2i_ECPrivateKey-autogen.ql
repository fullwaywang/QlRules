/**
 * @name openssl-1b4a8df38fc9ab3c089ca5765075ee53ec5bd66a-d2i_ECPrivateKey
 * @id cpp/openssl/1b4a8df38fc9ab3c089ca5765075ee53ec5bd66a/d2i-ecprivatekey
 * @description openssl-1b4a8df38fc9ab3c089ca5765075ee53ec5bd66a-crypto/ec/ec_asn1.c-d2i_ECPrivateKey CVE-2015-0209
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter va_995, Variable vret_998, ExprStmt target_3, ExprStmt target_4, IfStmt target_5) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vret_998
		and target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=va_995
		and target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=va_995
		and target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vret_998
		and target_0.getParent().(IfStmt).getThen()=target_3
		and target_4.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(VariableAccess).getLocation().isBefore(target_5.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Parameter va_995, Variable vret_998, LogicalOrExpr target_6, IfStmt target_1) {
		target_1.getCondition().(VariableAccess).getTarget()=va_995
		and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=va_995
		and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vret_998
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_2(Variable vret_998, ExprStmt target_3, VariableAccess target_2) {
		target_2.getTarget()=vret_998
		and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Variable vret_998, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("EC_KEY_free")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vret_998
}

predicate func_4(Parameter va_995, Variable vret_998, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_998
		and target_4.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=va_995
}

predicate func_5(Variable vret_998, IfStmt target_5) {
		target_5.getCondition().(VariableAccess).getTarget()=vret_998
		and target_5.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("EC_KEY_free")
		and target_5.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vret_998
}

predicate func_6(Parameter va_995, LogicalOrExpr target_6) {
		target_6.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=va_995
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=va_995
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
}

from Function func, Parameter va_995, Variable vret_998, IfStmt target_1, VariableAccess target_2, ExprStmt target_3, ExprStmt target_4, IfStmt target_5, LogicalOrExpr target_6
where
not func_0(va_995, vret_998, target_3, target_4, target_5)
and func_1(va_995, vret_998, target_6, target_1)
and func_2(vret_998, target_3, target_2)
and func_3(vret_998, target_3)
and func_4(va_995, vret_998, target_4)
and func_5(vret_998, target_5)
and func_6(va_995, target_6)
and va_995.getType().hasName("EC_KEY **")
and vret_998.getType().hasName("EC_KEY *")
and va_995.getFunction() = func
and vret_998.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
