/**
 * @name linux-b3cb7a830a24527877b0bc900b9bd74a96aea928-aq_ring_tx_alloc
 * @id cpp/linux/b3cb7a830a24527877b0bc900b9bd74a96aea928/aq-ring-tx-alloc
 * @description linux-b3cb7a830a24527877b0bc900b9bd74a96aea928-drivers/net/ethernet/aquantia/atlantic/aq_ring.c-aq_ring_tx_alloc CVE-2023-52664
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vaq_nic_166, Parameter vself_165, FunctionCall target_0) {
	target_0.getTarget().hasName("aq_ring_alloc")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vself_165
	and target_0.getArgument(1).(VariableAccess).getTarget()=vaq_nic_166
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vself_165
}

predicate func_1(Function func, DeclStmt target_1) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vself_165, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vself_165
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable verr_170, Parameter vself_165, Function func, IfStmt target_3) {
	target_3.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vself_165
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_170
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_3.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="err_exit"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(Variable verr_170, NotExpr target_10, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_170
	and target_4.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

*/
/*predicate func_5(NotExpr target_10, Function func, GotoStmt target_5) {
	target_5.getName() ="err_exit"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_5.getEnclosingFunction() = func
}

*/
predicate func_6(Variable verr_170, Parameter vself_165, Function func, IfStmt target_6) {
	target_6.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=verr_170
	and target_6.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("aq_ring_free")
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vself_165
	and target_6.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vself_165
	and target_6.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

/*predicate func_7(Parameter vself_165, RelationalOperation target_11, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("aq_ring_free")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vself_165
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

*/
predicate func_8(Parameter vself_165, RelationalOperation target_11, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vself_165
	and target_8.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

predicate func_9(Parameter vself_165, ExprStmt target_8, VariableAccess target_9) {
	target_9.getTarget()=vself_165
	and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_9.getLocation())
}

predicate func_10(Parameter vself_165, NotExpr target_10) {
	target_10.getOperand().(VariableAccess).getTarget()=vself_165
}

predicate func_11(Variable verr_170, RelationalOperation target_11) {
	 (target_11 instanceof GTExpr or target_11 instanceof LTExpr)
	and target_11.getLesserOperand().(VariableAccess).getTarget()=verr_170
	and target_11.getGreaterOperand() instanceof Literal
}

from Function func, Parameter vaq_nic_166, Variable verr_170, Parameter vself_165, FunctionCall target_0, DeclStmt target_1, ExprStmt target_2, IfStmt target_3, IfStmt target_6, ExprStmt target_8, VariableAccess target_9, NotExpr target_10, RelationalOperation target_11
where
func_0(vaq_nic_166, vself_165, target_0)
and func_1(func, target_1)
and func_2(vself_165, func, target_2)
and func_3(verr_170, vself_165, func, target_3)
and func_6(verr_170, vself_165, func, target_6)
and func_8(vself_165, target_11, target_8)
and func_9(vself_165, target_8, target_9)
and func_10(vself_165, target_10)
and func_11(verr_170, target_11)
and vaq_nic_166.getType().hasName("aq_nic_s *")
and verr_170.getType().hasName("int")
and vself_165.getType().hasName("aq_ring_s *")
and vaq_nic_166.getFunction() = func
and verr_170.(LocalVariable).getFunction() = func
and vself_165.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
