/**
 * @name linux-76597cd31470fa130784c78fadb4dab2e624a723-m_stop
 * @id cpp/linux/76597cd31470fa130784c78fadb4dab2e624a723/m-stop
 * @description linux-76597cd31470fa130784c78fadb4dab2e624a723-fs/proc/task_mmu.c-m_stop CVE-2011-3637
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvma_183, ExprStmt target_1, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("IS_ERR")
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_183
		and target_0.getThen() instanceof ExprStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vpriv_182, Variable vvma_183, Function func, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("vma_stop")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpriv_182
		and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvma_183
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

from Function func, Variable vpriv_182, Variable vvma_183, ExprStmt target_1
where
not func_0(vvma_183, target_1, func)
and func_1(vpriv_182, vvma_183, func, target_1)
and vpriv_182.getType().hasName("proc_maps_private *")
and vvma_183.getType().hasName("vm_area_struct *")
and vpriv_182.(LocalVariable).getFunction() = func
and vvma_183.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
