/**
 * @name linux-a45403b51582a87872927a3e0fc0a389c26867f1-ext4_fill_super
 * @id cpp/linux/a45403b51582a87872927a3e0fc0a389c26867f1/ext4-fill-super
 * @description linux-a45403b51582a87872927a3e0fc0a389c26867f1-fs/ext4/super.c-ext4_fill_super CVE-2018-1094
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsb_3401, BlockStmt target_4, FunctionCall target_0) {
	target_0.getTarget().hasName("ext4_has_feature_ea_inode")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsb_3401
	and target_0.getParent().(LogicalOrExpr).getLeftOperand() instanceof FunctionCall
	and target_0.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_1(Variable vsbi_3407, LogicalOrExpr target_5, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s_chksum_driver"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_3407
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("crypto_alloc_shash")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(StringLiteral).getValue()="crc32c"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_2(Variable vsbi_3407, Variable vret_3416, Parameter vsb_3401, LogicalOrExpr target_5, IfStmt target_2) {
	target_2.getCondition().(FunctionCall).getTarget().hasName("IS_ERR")
	and target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="s_chksum_driver"
	and target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_3407
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_3401
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Cannot load crc32c driver."
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_3416
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="s_chksum_driver"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_3407
	and target_2.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s_chksum_driver"
	and target_2.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_3407
	and target_2.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_2.getThen().(BlockStmt).getStmt(3).(GotoStmt).getName() ="failed_mount"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_3(Parameter vsb_3401, Function func, IfStmt target_3) {
	target_3.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ext4_has_feature_metadata_csum")
	and target_3.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_3401
	and target_3.getCondition().(LogicalOrExpr).getRightOperand() instanceof FunctionCall
	and target_3.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_3.getThen().(BlockStmt).getStmt(1) instanceof IfStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Function func, BlockStmt target_4) {
	target_4.getStmt(0) instanceof ExprStmt
	and target_4.getStmt(1) instanceof IfStmt
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, LogicalOrExpr target_5) {
	target_5.getLeftOperand() instanceof FunctionCall
	and target_5.getRightOperand() instanceof FunctionCall
	and target_5.getEnclosingFunction() = func
}

from Function func, Variable vsbi_3407, Variable vret_3416, Parameter vsb_3401, FunctionCall target_0, ExprStmt target_1, IfStmt target_2, IfStmt target_3, BlockStmt target_4, LogicalOrExpr target_5
where
func_0(vsb_3401, target_4, target_0)
and func_1(vsbi_3407, target_5, target_1)
and func_2(vsbi_3407, vret_3416, vsb_3401, target_5, target_2)
and func_3(vsb_3401, func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and vsbi_3407.getType().hasName("ext4_sb_info *")
and vret_3416.getType().hasName("int")
and vsb_3401.getType().hasName("super_block *")
and vsbi_3407.(LocalVariable).getFunction() = func
and vret_3416.(LocalVariable).getFunction() = func
and vsb_3401.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
