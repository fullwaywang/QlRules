/**
 * @name linux-780e982905bef61d13496d9af5310bf4af3a64d3-rds_recv_track_latency
 * @id cpp/linux/780e982905bef61d13496d9af5310bf4af3a64d3/rds-recv-track-latency
 * @description linux-780e982905bef61d13496d9af5310bf4af3a64d3-net/rds/af_rds.c-rds_recv_track_latency CVE-2017-18552
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtrace_304, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getTarget().getName()="rx_traces"
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vtrace_304
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vtrace_304, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="rs_rx_traces"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("rds_sock *")
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="rx_traces"
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vtrace_304
}

from Function func, Variable vtrace_304, ExprStmt target_1
where
not func_0(vtrace_304, target_1, func)
and func_1(vtrace_304, target_1)
and vtrace_304.getType().hasName("rds_rx_trace_so")
and vtrace_304.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
