/**
 * @name linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-semctl_setval
 * @id cpp/linux/6062a8dc0517bce23e3c2f7d2fea5e22411269a3/semctl-setval
 * @description linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-ipc/sem.c-semctl_setval CVE-2013-4483
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vns_943, Parameter vsemid_943, Variable vsma_947, FunctionCall target_0) {
	target_0.getTarget().hasName("sem_lock_check")
	and not target_0.getTarget().hasName("sem_obtain_object_check")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vns_943
	and target_0.getArgument(1).(VariableAccess).getTarget()=vsemid_943
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsma_947
}

predicate func_1(Variable vsma_947, FunctionCall target_1) {
	target_1.getTarget().hasName("ipc_unlock")
	and not target_1.getTarget().hasName("rcu_read_lock")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sem_perm"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_947
}

predicate func_2(Variable vsma_947, IfStmt target_38, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsma_947
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getLocation().isBefore(target_38.getLocation())
}

predicate func_3(Parameter vsemnum_943, Variable vnsems_950, ExprStmt target_39, IfStmt target_3) {
	target_3.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vsemnum_943
	and target_3.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_3.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vsemnum_943
	and target_3.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vnsems_950
	and target_3.getThen() instanceof GotoStmt
	and target_39.getLocation().isBefore(target_3.getLocation())
}

predicate func_4(ExprStmt target_40, Function func, IfStmt target_4) {
	target_4.getCondition() instanceof LogicalOrExpr
	and target_4.getThen() instanceof GotoStmt
	and target_40.getLocation().isBefore(target_4.getLocation())
	and target_4.getEnclosingFunction() = func
}

predicate func_5(FunctionCall target_16, Function func) {
exists(ReturnStmt target_5 |
	target_5.getExpr() instanceof UnaryMinusExpr
	and target_5.getParent().(IfStmt).getCondition()=target_16
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Function func) {
exists(FunctionCall target_6 |
	target_6.getTarget().hasName("rcu_read_unlock")
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Function func) {
exists(FunctionCall target_7 |
	target_7.getTarget().hasName("rcu_read_unlock")
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(LogicalOrExpr target_22, Function func) {
exists(ReturnStmt target_8 |
	target_8.getExpr() instanceof UnaryMinusExpr
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_8
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
	and target_8.getEnclosingFunction() = func)
}

predicate func_9(Function func) {
exists(FunctionCall target_9 |
	target_9.getTarget().hasName("rcu_read_unlock")
	and target_9.getEnclosingFunction() = func)
}

predicate func_10(FunctionCall target_41, Function func) {
exists(ReturnStmt target_10 |
	target_10.getExpr() instanceof UnaryMinusExpr
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_10
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_41
	and target_10.getEnclosingFunction() = func)
}

predicate func_11(VariableAccess target_42, Function func) {
exists(ExprStmt target_11 |
	target_11.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_11
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_42
	and target_11.getEnclosingFunction() = func)
}

predicate func_12(VariableAccess target_42, Function func) {
exists(ReturnStmt target_12 |
	target_12.getExpr().(UnaryMinusExpr).getValue()="-13"
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_12
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_42
	and target_12.getEnclosingFunction() = func)
}

predicate func_13(Variable vsma_947) {
exists(FunctionCall target_13 |
	target_13.getTarget().hasName("sem_lock")
	and target_13.getArgument(0).(VariableAccess).getTarget()=vsma_947
	and target_13.getArgument(1) instanceof Literal
	and target_13.getArgument(2).(UnaryMinusExpr).getValue()="-1")
}

predicate func_14(Variable vsma_947, ExprStmt target_43, AddressOfExpr target_44) {
exists(FunctionCall target_14 |
	target_14.getTarget().hasName("sem_unlock")
	and target_14.getArgument(0).(VariableAccess).getTarget()=vsma_947
	and target_14.getArgument(1).(UnaryMinusExpr).getValue()="-1"
	and target_43.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_14.getArgument(0).(VariableAccess).getLocation())
	and target_14.getArgument(0).(VariableAccess).getLocation().isBefore(target_44.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_16(Variable vsma_947, ReturnStmt target_17, FunctionCall target_16) {
	target_16.getTarget().hasName("IS_ERR")
	and target_16.getArgument(0).(VariableAccess).getTarget()=vsma_947
	and target_16.getParent().(IfStmt).getThen()=target_17
}

predicate func_17(Variable vsma_947, FunctionCall target_16, ReturnStmt target_17) {
	target_17.getExpr().(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsma_947
	and target_17.getParent().(IfStmt).getCondition()=target_16
}

predicate func_18(Variable vsma_947, Variable vnsems_950, PointerFieldAccess target_18) {
	target_18.getTarget().getName()="sem_nsems"
	and target_18.getQualifier().(VariableAccess).getTarget()=vsma_947
	and target_18.getParent().(AssignExpr).getRValue() = target_18
	and target_18.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnsems_950
}

predicate func_19(Variable verr_949, UnaryMinusExpr target_19) {
	target_19.getValue()="-13"
	and target_19.getParent().(AssignExpr).getRValue() = target_19
	and target_19.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_949
}

predicate func_20(Variable verr_949, UnaryMinusExpr target_20) {
	target_20.getValue()="-22"
	and target_20.getParent().(AssignExpr).getRValue() = target_20
	and target_20.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_949
}

predicate func_21(Variable verr_949, UnaryMinusExpr target_21) {
	target_21.getValue()="-34"
	and target_21.getParent().(AssignExpr).getRValue() = target_21
	and target_21.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_949
}

predicate func_22(Variable vval_952, LogicalOrExpr target_22) {
	target_22.getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vval_952
	and target_22.getLeftOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="32767"
	and target_22.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vval_952
	and target_22.getRightOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_22.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_24(Variable vsma_947, VariableAccess target_24) {
	target_24.getTarget()=vsma_947
	and target_24.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_25(Function func, DeclStmt target_25) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_25
}

predicate func_26(Variable vsma_947, Variable vnsems_950, AssignExpr target_26) {
	target_26.getLValue().(VariableAccess).getTarget()=vnsems_950
	and target_26.getRValue().(PointerFieldAccess).getTarget().getName()="sem_nsems"
	and target_26.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_947
}

predicate func_27(Variable verr_949, AssignExpr target_27) {
	target_27.getLValue().(VariableAccess).getTarget()=verr_949
	and target_27.getRValue() instanceof UnaryMinusExpr
}

predicate func_28(FunctionCall target_41, Function func, GotoStmt target_28) {
	target_28.getName() ="out_unlock"
	and target_28.getParent().(IfStmt).getCondition()=target_41
	and target_28.getEnclosingFunction() = func
}

predicate func_29(VariableAccess target_42, Function func, GotoStmt target_29) {
	target_29.getName() ="out_unlock"
	and target_29.getParent().(IfStmt).getCondition()=target_42
	and target_29.getEnclosingFunction() = func
}

predicate func_30(Variable verr_949, AssignExpr target_30) {
	target_30.getLValue().(VariableAccess).getTarget()=verr_949
	and target_30.getRValue() instanceof UnaryMinusExpr
}

predicate func_31(Variable vnsems_950, VariableAccess target_31) {
	target_31.getTarget()=vnsems_950
}

predicate func_32(LogicalOrExpr target_45, Function func, GotoStmt target_32) {
	target_32.getName() ="out_unlock"
	and target_32.getParent().(IfStmt).getCondition()=target_45
	and target_32.getEnclosingFunction() = func
}

predicate func_33(Variable verr_949, AssignExpr target_33) {
	target_33.getLValue().(VariableAccess).getTarget()=verr_949
	and target_33.getRValue() instanceof UnaryMinusExpr
}

predicate func_34(LogicalOrExpr target_22, Function func, GotoStmt target_34) {
	target_34.getName() ="out_unlock"
	and target_34.getParent().(IfStmt).getCondition()=target_22
	and target_34.getEnclosingFunction() = func
}

predicate func_35(Variable verr_949, AssignExpr target_35) {
	target_35.getLValue().(VariableAccess).getTarget()=verr_949
	and target_35.getRValue() instanceof Literal
}

predicate func_36(Variable vsma_947, PointerFieldAccess target_36) {
	target_36.getTarget().getName()="sem_perm"
	and target_36.getQualifier().(VariableAccess).getTarget()=vsma_947
}

predicate func_37(Variable verr_949, VariableAccess target_37) {
	target_37.getTarget()=verr_949
}

predicate func_38(Function func, IfStmt target_38) {
	target_38.getCondition() instanceof FunctionCall
	and target_38.getThen() instanceof ReturnStmt
	and target_38.getEnclosingFunction() = func
}

predicate func_39(Function func, ExprStmt target_39) {
	target_39.getExpr() instanceof AssignExpr
	and target_39.getEnclosingFunction() = func
}

predicate func_40(Function func, ExprStmt target_40) {
	target_40.getExpr() instanceof AssignExpr
	and target_40.getEnclosingFunction() = func
}

predicate func_41(Parameter vns_943, Variable vsma_947, FunctionCall target_41) {
	target_41.getTarget().hasName("ipcperms")
	and target_41.getArgument(0).(VariableAccess).getTarget()=vns_943
	and target_41.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sem_perm"
	and target_41.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_947
	and target_41.getArgument(2).(BitwiseOrExpr).getValue()="146"
}

predicate func_42(Variable verr_949, VariableAccess target_42) {
	target_42.getTarget()=verr_949
	and target_42.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_43(Variable vsma_947, ExprStmt target_43) {
	target_43.getExpr().(FunctionCall).getTarget().hasName("do_smart_update")
	and target_43.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsma_947
	and target_43.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_43.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_43.getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
	and target_43.getExpr().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("list_head")
}

predicate func_44(Variable vsma_947, AddressOfExpr target_44) {
	target_44.getOperand().(PointerFieldAccess).getTarget().getName()="sem_perm"
	and target_44.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_947
	and target_44.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_45(Parameter vsemnum_943, Variable vnsems_950, LogicalOrExpr target_45) {
	target_45.getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vsemnum_943
	and target_45.getLeftOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_45.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vsemnum_943
	and target_45.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vnsems_950
}

from Function func, Parameter vns_943, Parameter vsemid_943, Parameter vsemnum_943, Variable vsma_947, Variable verr_949, Variable vnsems_950, Variable vval_952, FunctionCall target_0, FunctionCall target_1, ExprStmt target_2, IfStmt target_3, IfStmt target_4, FunctionCall target_16, ReturnStmt target_17, PointerFieldAccess target_18, UnaryMinusExpr target_19, UnaryMinusExpr target_20, UnaryMinusExpr target_21, LogicalOrExpr target_22, VariableAccess target_24, DeclStmt target_25, AssignExpr target_26, AssignExpr target_27, GotoStmt target_28, GotoStmt target_29, AssignExpr target_30, VariableAccess target_31, GotoStmt target_32, AssignExpr target_33, GotoStmt target_34, AssignExpr target_35, PointerFieldAccess target_36, VariableAccess target_37, IfStmt target_38, ExprStmt target_39, ExprStmt target_40, FunctionCall target_41, VariableAccess target_42, ExprStmt target_43, AddressOfExpr target_44, LogicalOrExpr target_45
where
func_0(vns_943, vsemid_943, vsma_947, target_0)
and func_1(vsma_947, target_1)
and func_2(vsma_947, target_38, target_2)
and func_3(vsemnum_943, vnsems_950, target_39, target_3)
and func_4(target_40, func, target_4)
and not func_5(target_16, func)
and not func_6(func)
and not func_7(func)
and not func_8(target_22, func)
and not func_9(func)
and not func_10(target_41, func)
and not func_11(target_42, func)
and not func_12(target_42, func)
and not func_13(vsma_947)
and not func_14(vsma_947, target_43, target_44)
and func_16(vsma_947, target_17, target_16)
and func_17(vsma_947, target_16, target_17)
and func_18(vsma_947, vnsems_950, target_18)
and func_19(verr_949, target_19)
and func_20(verr_949, target_20)
and func_21(verr_949, target_21)
and func_22(vval_952, target_22)
and func_24(vsma_947, target_24)
and func_25(func, target_25)
and func_26(vsma_947, vnsems_950, target_26)
and func_27(verr_949, target_27)
and func_28(target_41, func, target_28)
and func_29(target_42, func, target_29)
and func_30(verr_949, target_30)
and func_31(vnsems_950, target_31)
and func_32(target_45, func, target_32)
and func_33(verr_949, target_33)
and func_34(target_22, func, target_34)
and func_35(verr_949, target_35)
and func_36(vsma_947, target_36)
and func_37(verr_949, target_37)
and func_38(func, target_38)
and func_39(func, target_39)
and func_40(func, target_40)
and func_41(vns_943, vsma_947, target_41)
and func_42(verr_949, target_42)
and func_43(vsma_947, target_43)
and func_44(vsma_947, target_44)
and func_45(vsemnum_943, vnsems_950, target_45)
and vns_943.getType().hasName("ipc_namespace *")
and vsemid_943.getType().hasName("int")
and vsemnum_943.getType().hasName("int")
and vsma_947.getType().hasName("sem_array *")
and verr_949.getType().hasName("int")
and vnsems_950.getType().hasName("int")
and vval_952.getType().hasName("int")
and vns_943.getFunction() = func
and vsemid_943.getFunction() = func
and vsemnum_943.getFunction() = func
and vsma_947.(LocalVariable).getFunction() = func
and verr_949.(LocalVariable).getFunction() = func
and vnsems_950.(LocalVariable).getFunction() = func
and vval_952.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
