/**
 * @name linux-4bedf9eee016286c835e3d8fa981ddece5338795-nft_immediate_destroy
 * @id cpp/linux/4bedf9eee016286c835e3d8fa981ddece5338795/nft-immediate-destroy
 * @description linux-4bedf9eee016286c835e3d8fa981ddece5338795-net/netfilter/nft_immediate.c-nft_immediate_destroy CVE-2023-3610
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchain_124, FunctionCall target_0) {
	target_0.getTarget().hasName("nft_chain_is_bound")
	and not target_0.getTarget().hasName("nft_chain_binding")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vchain_124
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen() instanceof BreakStmt
}

predicate func_1(Variable vrule_122, Variable vchain_ctx_123, FunctionCall target_1) {
	target_1.getTarget().hasName("nf_tables_rule_release")
	and not target_1.getTarget().hasName("nf_tables_rule_destroy")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vchain_ctx_123
	and target_1.getArgument(1).(VariableAccess).getTarget()=vrule_122
}

predicate func_2(Variable vchain_124, ValueFieldAccess target_6, ExprStmt target_8) {
exists(IfStmt target_2 |
	target_2.getCondition().(PointerFieldAccess).getTarget().getName()="bound"
	and target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_124
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="use"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_124
	and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
	and target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_3(Variable vchain_124, ValueFieldAccess target_6, ExprStmt target_8, PointerFieldAccess target_9) {
exists(ExprStmt target_3 |
	target_3.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="use"
	and target_3.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_124
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
	and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_3.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_9.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vchain_124, NotExpr target_10) {
exists(ExprStmt target_4 |
	target_4.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="use"
	and target_4.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_124
	and target_10.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Variable vrule_122, CommaExpr target_11) {
exists(ExprStmt target_5 |
	target_5.getExpr().(FunctionCall).getTarget().hasName("list_del")
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrule_122
	and target_11.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_6(Function func, ValueFieldAccess target_6) {
	target_6.getTarget().getName()="code"
	and target_6.getQualifier().(ValueFieldAccess).getTarget().getName()="verdict"
	and target_6.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_6.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const nft_data *")
	and target_6.getEnclosingFunction() = func
}

predicate func_8(Variable vchain_ctx_123, Variable vchain_124, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="chain"
	and target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_ctx_123
	and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vchain_124
}

predicate func_9(Variable vchain_124, PointerFieldAccess target_9) {
	target_9.getTarget().getName()="next"
	and target_9.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rules"
	and target_9.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_124
}

predicate func_10(Variable vrule_122, Variable vchain_124, NotExpr target_10) {
	target_10.getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_10.getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrule_122
	and target_10.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rules"
	and target_10.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_124
}

predicate func_11(Variable vrule_122, CommaExpr target_11) {
	target_11.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrule_122
	and target_11.getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("nft_rule *")
	and target_11.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("nft_rule *")
	and target_11.getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("void *")
}

from Function func, Variable vrule_122, Variable vchain_ctx_123, Variable vchain_124, FunctionCall target_0, FunctionCall target_1, ValueFieldAccess target_6, ExprStmt target_8, PointerFieldAccess target_9, NotExpr target_10, CommaExpr target_11
where
func_0(vchain_124, target_0)
and func_1(vrule_122, vchain_ctx_123, target_1)
and not func_2(vchain_124, target_6, target_8)
and not func_3(vchain_124, target_6, target_8, target_9)
and not func_4(vchain_124, target_10)
and not func_5(vrule_122, target_11)
and func_6(func, target_6)
and func_8(vchain_ctx_123, vchain_124, target_8)
and func_9(vchain_124, target_9)
and func_10(vrule_122, vchain_124, target_10)
and func_11(vrule_122, target_11)
and vrule_122.getType().hasName("nft_rule *")
and vchain_ctx_123.getType().hasName("nft_ctx")
and vchain_124.getType().hasName("nft_chain *")
and vrule_122.(LocalVariable).getFunction() = func
and vchain_ctx_123.(LocalVariable).getFunction() = func
and vchain_124.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
