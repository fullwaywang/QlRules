commit bdcb8aa434c6d36b5c215d02a9ef07551be25a37
Author: Juntong Deng <juntong.deng@outlook.com>
Date:   Mon Oct 30 05:10:06 2023 +0800

    gfs2: Fix slab-use-after-free in gfs2_qd_dealloc
    
    In gfs2_put_super(), whether withdrawn or not, the quota should
    be cleaned up by gfs2_quota_cleanup().
    
    Otherwise, struct gfs2_sbd will be freed before gfs2_qd_dealloc (rcu
    callback) has run for all gfs2_quota_data objects, resulting in
    use-after-free.
    
    Also, gfs2_destroy_threads() and gfs2_quota_cleanup() is already called
    by gfs2_make_fs_ro(), so in gfs2_put_super(), after calling
    gfs2_make_fs_ro(), there is no need to call them again.
    
    Reported-by: syzbot+29c47e9e51895928698c@syzkaller.appspotmail.com
    Closes: https://syzkaller.appspot.com/bug?extid=29c47e9e51895928698c
    Signed-off-by: Juntong Deng <juntong.deng@outlook.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>

diff --git a/fs/gfs2/super.c b/fs/gfs2/super.c
index 726f062bc490..84e88b50ed92 100644
--- a/fs/gfs2/super.c
+++ b/fs/gfs2/super.c
@@ -602,13 +602,15 @@ static void gfs2_put_super(struct super_block *sb)
 	}
 	spin_unlock(&sdp->sd_jindex_spin);
 
-	if (!sb_rdonly(sb)) {
+	if (!sb_rdonly(sb))
 		gfs2_make_fs_ro(sdp);
-	}
-	if (gfs2_withdrawn(sdp)) {
-		gfs2_destroy_threads(sdp);
+	else {
+		if (gfs2_withdrawn(sdp))
+			gfs2_destroy_threads(sdp);
+
 		gfs2_quota_cleanup(sdp);
 	}
+
 	WARN_ON(gfs2_withdrawing(sdp));
 
 	/*  At this point, we're through modifying the disk  */
