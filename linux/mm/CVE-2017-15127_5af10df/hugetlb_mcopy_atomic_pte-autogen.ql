/**
 * @name linux-5af10dfd0afc559bb4b0f7e3e8227a1578333995-hugetlb_mcopy_atomic_pte
 * @id cpp/linux/5af10dfd0afc559bb4b0f7e3e8227a1578333995/hugetlb-mcopy-atomic-pte
 * @description linux-5af10dfd0afc559bb4b0f7e3e8227a1578333995-mm/hugetlb.c-hugetlb_mcopy_atomic_pte CVE-2017-15127
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvm_shared_3980, Variable vpage_3985, LabelStmt target_1, IfStmt target_0) {
	target_0.getCondition().(VariableAccess).getTarget()=vvm_shared_3980
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("unlock_page")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_3985
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Function func, LabelStmt target_1) {
	target_1.getName() ="out_release_nounlock"
	and target_1.getEnclosingFunction() = func
}

from Function func, Variable vvm_shared_3980, Variable vpage_3985, IfStmt target_0, LabelStmt target_1
where
func_0(vvm_shared_3980, vpage_3985, target_1, target_0)
and func_1(func, target_1)
and vvm_shared_3980.getType().hasName("int")
and vpage_3985.getType().hasName("page *")
and vvm_shared_3980.(LocalVariable).getFunction() = func
and vpage_3985.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
