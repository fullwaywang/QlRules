/**
 * @name linux-99d825822eade8d827a1817357cbf3f889a552d6-get_rock_ridge_filename
 * @id cpp/linux/99d825822eade8d827a1817357cbf3f889a552d6/get-rock-ridge-filename
 * @description linux-99d825822eade8d827a1817357cbf3f889a552d6-fs/isofs/rock.c-get_rock_ridge_filename CVE-2016-4913
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="5"
		and not target_0.getValue()="0"
		and target_0.getParent().(SubExpr).getParent().(GEExpr).getGreaterOperand() instanceof SubExpr
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(VariableAccess).getType().hasName("int")
		and target_1.getRValue() instanceof SubExpr
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vretnamlen_203, BlockStmt target_20, ExprStmt target_22) {
	exists(AddExpr target_2 |
		target_2.getAnOperand().(VariableAccess).getTarget()=vretnamlen_203
		and target_2.getAnOperand().(VariableAccess).getType().hasName("int")
		and target_2.getParent().(GEExpr).getGreaterOperand() instanceof SubExpr
		and target_2.getParent().(GEExpr).getLesserOperand().(Literal).getValue()="254"
		and target_2.getParent().(GEExpr).getParent().(IfStmt).getThen()=target_20
		and target_2.getAnOperand().(VariableAccess).getLocation().isBefore(target_22.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Function func) {
	exists(AssignExpr target_3 |
		target_3.getLValue().(VariableAccess).getType().hasName("char *")
		and target_3.getRValue().(FunctionCall).getTarget().hasName("memchr")
		and target_3.getRValue().(FunctionCall).getArgument(0) instanceof ValueFieldAccess
		and target_3.getRValue().(FunctionCall).getArgument(1).(CharLiteral).getValue()="0"
		and target_3.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("int")
		and target_3.getEnclosingFunction() = func)
}

predicate func_5(VariableAccess target_24, Function func) {
	exists(IfStmt target_5 |
		target_5.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_5.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("char *")
		and target_5.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getType().hasName("char *")
		and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="name"
		and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="NM"
		and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="u"
		and target_5.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_24
		and target_5.getEnclosingFunction() = func)
}

predicate func_6(Parameter vretname_198, Variable vretnamlen_203, VariableAccess target_24, ExprStmt target_25, ExprStmt target_22) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
		and target_6.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vretname_198
		and target_6.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vretnamlen_203
		and target_6.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="name"
		and target_6.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier() instanceof ValueFieldAccess
		and target_6.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("int")
		and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_24
		and target_25.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getLocation())
		and target_22.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getLocation()))
}

predicate func_7(Variable vretnamlen_203, VariableAccess target_24) {
	exists(ExprStmt target_7 |
		target_7.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vretnamlen_203
		and target_7.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getType().hasName("int")
		and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_24)
}

predicate func_9(Parameter vretname_198, Variable vretnamlen_203, VariableAccess target_24, ReturnStmt target_28) {
	exists(ExprStmt target_9 |
		target_9.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vretname_198
		and target_9.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vretnamlen_203
		and target_9.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
		and target_9.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_24
		and target_9.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_28.getExpr().(VariableAccess).getLocation()))
}

/*predicate func_10(Variable vrr_201, ValueFieldAccess target_10) {
		target_10.getTarget().getName()="NM"
		and target_10.getQualifier().(PointerFieldAccess).getTarget().getName()="u"
		and target_10.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
}

*/
predicate func_11(Variable vrr_201, ValueFieldAccess target_11) {
		target_11.getTarget().getName()="name"
		and target_11.getQualifier().(ValueFieldAccess).getTarget().getName()="NM"
		and target_11.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="u"
		and target_11.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
}

predicate func_12(Variable vrr_201, SubExpr target_12) {
		target_12.getLeftOperand().(PointerFieldAccess).getTarget().getName()="len"
		and target_12.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
		and target_12.getRightOperand().(Literal).getValue()="5"
		and target_12.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_13(Variable vrr_201, VariableAccess target_13) {
		target_13.getTarget()=vrr_201
}

predicate func_14(Variable vrr_201, VariableAccess target_14) {
		target_14.getTarget()=vrr_201
}

predicate func_15(Parameter vretname_198, VariableAccess target_15) {
		target_15.getTarget()=vretname_198
		and target_15.getParent().(FunctionCall).getParent().(AddExpr).getAnOperand() instanceof FunctionCall
}

predicate func_16(Parameter vretname_198, VariableAccess target_16) {
		target_16.getTarget()=vretname_198
		and target_16.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_17(Parameter vretname_198, Variable vrr_201, BlockStmt target_20, SubExpr target_17) {
		target_17.getLeftOperand().(AddExpr).getAnOperand().(FunctionCall).getTarget().hasName("strlen")
		and target_17.getLeftOperand().(AddExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vretname_198
		and target_17.getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="len"
		and target_17.getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
		and target_17.getRightOperand() instanceof Literal
		and target_17.getParent().(GEExpr).getLesserOperand().(Literal).getValue()="254"
		and target_17.getParent().(GEExpr).getParent().(IfStmt).getThen()=target_20
}

predicate func_18(Parameter vretname_198, FunctionCall target_18) {
		target_18.getTarget().hasName("strncat")
		and target_18.getArgument(0).(VariableAccess).getTarget()=vretname_198
		and target_18.getArgument(1) instanceof ValueFieldAccess
		and target_18.getArgument(2) instanceof SubExpr
}

predicate func_19(Variable vrr_201, Variable vretnamlen_203, SubExpr target_12, SubExpr target_19) {
		target_19.getLeftOperand().(PointerFieldAccess).getTarget().getName()="len"
		and target_19.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrr_201
		and target_19.getRightOperand().(Literal).getValue()="5"
		and target_19.getParent().(AssignAddExpr).getRValue() = target_19
		and target_19.getParent().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vretnamlen_203
		and target_12.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_19.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_20(Function func, BlockStmt target_20) {
		target_20.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_20.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
		and target_20.getEnclosingFunction() = func
}

predicate func_22(Variable vretnamlen_203, ExprStmt target_22) {
		target_22.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vretnamlen_203
		and target_22.getExpr().(AssignAddExpr).getRValue() instanceof SubExpr
}

predicate func_24(Variable vsig_202, VariableAccess target_24) {
		target_24.getTarget()=vsig_202
}

predicate func_25(Parameter vretname_198, ExprStmt target_25) {
		target_25.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vretname_198
		and target_25.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_28(Variable vretnamlen_203, ReturnStmt target_28) {
		target_28.getExpr().(VariableAccess).getTarget()=vretnamlen_203
}

from Function func, Parameter vretname_198, Variable vrr_201, Variable vsig_202, Variable vretnamlen_203, Literal target_0, ValueFieldAccess target_11, SubExpr target_12, VariableAccess target_13, VariableAccess target_14, VariableAccess target_15, VariableAccess target_16, SubExpr target_17, FunctionCall target_18, SubExpr target_19, BlockStmt target_20, ExprStmt target_22, VariableAccess target_24, ExprStmt target_25, ReturnStmt target_28
where
func_0(func, target_0)
and not func_1(func)
and not func_2(vretnamlen_203, target_20, target_22)
and not func_3(func)
and not func_5(target_24, func)
and not func_6(vretname_198, vretnamlen_203, target_24, target_25, target_22)
and not func_7(vretnamlen_203, target_24)
and not func_9(vretname_198, vretnamlen_203, target_24, target_28)
and func_11(vrr_201, target_11)
and func_12(vrr_201, target_12)
and func_13(vrr_201, target_13)
and func_14(vrr_201, target_14)
and func_15(vretname_198, target_15)
and func_16(vretname_198, target_16)
and func_17(vretname_198, vrr_201, target_20, target_17)
and func_18(vretname_198, target_18)
and func_19(vrr_201, vretnamlen_203, target_12, target_19)
and func_20(func, target_20)
and func_22(vretnamlen_203, target_22)
and func_24(vsig_202, target_24)
and func_25(vretname_198, target_25)
and func_28(vretnamlen_203, target_28)
and vretname_198.getType().hasName("char *")
and vrr_201.getType().hasName("rock_ridge *")
and vsig_202.getType().hasName("int")
and vretnamlen_203.getType().hasName("int")
and vretname_198.getFunction() = func
and vrr_201.(LocalVariable).getFunction() = func
and vsig_202.(LocalVariable).getFunction() = func
and vretnamlen_203.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
