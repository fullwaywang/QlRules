/**
 * @name linux-4c87308bdea31a7b4828a51f6156e6f721a1fcc9-copy_to_user_auth
 * @id cpp/linux/4c87308bdea31a7b4828a51f6156e6f721a1fcc9/copy-to-user-auth
 * @description linux-4c87308bdea31a7b4828a51f6156e6f721a1fcc9-net/xfrm/xfrm_user.c-copy_to_user_auth CVE-2012-6538
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable valgo_736, Parameter vauth_734, FunctionCall target_0) {
	target_0.getTarget().hasName("strcpy")
	and not target_0.getTarget().hasName("strncpy")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="alg_name"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=valgo_736
	and target_0.getArgument(1).(PointerFieldAccess).getTarget().getName()="alg_name"
	and target_0.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vauth_734
}

predicate func_1(Function func) {
exists(SizeofExprOperator target_1 |
	target_1.getValue()="64"
	and target_1.getEnclosingFunction() = func)
}

from Function func, Variable valgo_736, Parameter vauth_734, FunctionCall target_0
where
func_0(valgo_736, vauth_734, target_0)
and not func_1(func)
and valgo_736.getType().hasName("xfrm_algo *")
and vauth_734.getType().hasName("xfrm_algo_auth *")
and valgo_736.(LocalVariable).getFunction() = func
and vauth_734.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
