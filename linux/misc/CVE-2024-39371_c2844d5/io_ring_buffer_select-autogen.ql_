/**
 * @name linux-c2844d5e58576c55d8e8d4a9f74902d3f7be8044-io_ring_buffer_select
 * @id cpp/linux/c2844d5e58576c55d8e8d4a9f74902d3f7be8044/io-ring-buffer-select
 * @description linux-c2844d5e58576c55d8e8d4a9f74902d3f7be8044-io_uring/kbuf.c-io_ring_buffer_select CVE-2024-39371
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_131, BlockStmt target_2, ExprStmt target_3, ValueFieldAccess target_4) {
exists(LogicalAndExpr target_0 |
	exists(ValueFieldAccess obj_0 | obj_0=target_0.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="(unknown field)"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vreq_131
		)
		and obj_0.getTarget().getName()="file"
	)
	and exists(LogicalOrExpr obj_2 | obj_2=target_0.getParent() |
		obj_2.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and obj_2.getRightOperand() instanceof NotExpr
		and obj_2.getParent().(IfStmt).getThen()=target_2
	)
	and target_0.getRightOperand() instanceof NotExpr
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vreq_131, BlockStmt target_2, NotExpr target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="(unknown field)"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vreq_131
			)
			and obj_1.getTarget().getName()="file"
		)
		and obj_0.getTarget().hasName("file_can_poll")
	)
	and exists(LogicalOrExpr obj_3 | obj_3=target_1.getParent() |
		obj_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and obj_3.getParent().(IfStmt).getThen()=target_2
	)
}

predicate func_2(Parameter vreq_131, BlockStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="(unknown field)"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vreq_131
				)
				and obj_2.getTarget().getName()="buf_list"
			)
			and obj_1.getRValue().(Literal).getValue()="0"
		)
	)
	and exists(ExprStmt obj_4 | obj_4=target_2.getStmt(1) |
		exists(PostfixIncrExpr obj_5 | obj_5=obj_4.getExpr() |
			exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
				obj_6.getTarget().getName()="head"
				and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("io_buffer_list *")
			)
		)
	)
}

predicate func_3(Parameter vreq_131, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="buf_index"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vreq_131
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().getName()="bid"
			and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("io_uring_buf *")
		)
	)
}

predicate func_4(Parameter vreq_131, ValueFieldAccess target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getQualifier() |
		obj_0.getTarget().getName()="(unknown field)"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vreq_131
	)
	and target_4.getTarget().getName()="file"
}

from Function func, Parameter vreq_131, NotExpr target_1, BlockStmt target_2, ExprStmt target_3, ValueFieldAccess target_4
where
not func_0(vreq_131, target_2, target_3, target_4)
and func_1(vreq_131, target_2, target_1)
and func_2(vreq_131, target_2)
and func_3(vreq_131, target_3)
and func_4(vreq_131, target_4)
and vreq_131.getType().hasName("io_kiocb *")
and vreq_131.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
