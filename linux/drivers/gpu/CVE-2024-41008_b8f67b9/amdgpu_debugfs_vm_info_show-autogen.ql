/**
 * @name linux-b8f67b9ddf4f8fe6dd536590712b5912ad78f99c-amdgpu_debugfs_vm_info_show
 * @id cpp/linux/b8f67b9ddf4f8fe6dd536590712b5912ad78f99c/amdgpu-debugfs-vm-info-show
 * @description linux-b8f67b9ddf4f8fe6dd536590712b5912ad78f99c-drivers/gpu/drm/amd/amdgpu/amdgpu_debugfs.c-amdgpu_debugfs_vm_info_show CVE-2024-41008
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvm_1784) {
exists(AssignExpr target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getRValue() |
		obj_0.getTarget().hasName("amdgpu_vm_get_task_info_vm")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvm_1784
	)
	and target_0.getLValue().(VariableAccess).getType().hasName("amdgpu_task_info *")
)
}

predicate func_1(Parameter vm_1771, ExprStmt target_7, ExprStmt target_8) {
exists(IfStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArgument(2) |
					obj_3.getTarget().getName()="pid"
					and obj_3.getQualifier().(VariableAccess).getType().hasName("amdgpu_task_info *")
				)
				and exists(PointerFieldAccess obj_4 | obj_4=obj_2.getArgument(3) |
					obj_4.getTarget().getName()="process_name"
					and obj_4.getQualifier().(VariableAccess).getType().hasName("amdgpu_task_info *")
				)
				and obj_2.getTarget().hasName("seq_printf")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vm_1771
				and obj_2.getArgument(1).(StringLiteral).getValue()="pid:%d\tProcess:%s ----------\n"
			)
		)
		and exists(ExprStmt obj_5 | obj_5=obj_0.getStmt(1) |
			exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
				obj_6.getTarget().hasName("amdgpu_vm_put_task_info")
				and obj_6.getArgument(0).(VariableAccess).getType().hasName("amdgpu_task_info *")
			)
		)
	)
	and target_1.getCondition().(VariableAccess).getType().hasName("amdgpu_task_info *")
	and target_1.getLocation().isBefore(target_7.getLocation())
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
)
}

/*predicate func_2(Function func) {
exists(PointerFieldAccess target_2 |
	target_2.getTarget().getName()="pid"
	and target_2.getQualifier().(VariableAccess).getType().hasName("amdgpu_task_info *")
	and target_2.getEnclosingFunction() = func
)
}

*/
/*predicate func_3(Function func) {
exists(PointerFieldAccess target_3 |
	target_3.getTarget().getName()="process_name"
	and target_3.getQualifier().(VariableAccess).getType().hasName("amdgpu_task_info *")
	and target_3.getEnclosingFunction() = func
)
}

*/
predicate func_4(Variable vvm_1784, Parameter vm_1771, VariableAccess target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getParent() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getParent() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getParent() |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("seq_printf")
						and obj_4.getArgument(0).(VariableAccess).getTarget()=vm_1771
						and obj_4.getArgument(1).(StringLiteral).getValue()="pid:%d\tProcess:%s ----------\n"
						and obj_4.getArgument(2) instanceof ValueFieldAccess
						and obj_4.getArgument(3) instanceof ValueFieldAccess
					)
				)
			)
		)
	)
	and target_4.getTarget()=vvm_1784
}

predicate func_5(Variable vvm_1784, Parameter vm_1771, ValueFieldAccess target_5) {
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getQualifier() |
		obj_0.getTarget().getName()="task_info"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvm_1784
	)
	and exists(FunctionCall obj_1 | obj_1=target_5.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				exists(ValueFieldAccess obj_4 | obj_4=obj_3.getArgument(3) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
						obj_5.getTarget().getName()="task_info"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vvm_1784
					)
					and obj_4.getTarget().getName()="process_name"
				)
				and obj_3.getTarget().hasName("seq_printf")
				and obj_3.getArgument(0).(VariableAccess).getTarget()=vm_1771
				and obj_3.getArgument(1).(StringLiteral).getValue()="pid:%d\tProcess:%s ----------\n"
			)
		)
	)
	and target_5.getTarget().getName()="pid"
}

/*predicate func_6(Variable vvm_1784, Parameter vm_1771, ValueFieldAccess target_6) {
	exists(PointerFieldAccess obj_0 | obj_0=target_6.getQualifier() |
		obj_0.getTarget().getName()="task_info"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvm_1784
	)
	and exists(FunctionCall obj_1 | obj_1=target_6.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				exists(ValueFieldAccess obj_4 | obj_4=obj_3.getArgument(2) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
						obj_5.getTarget().getName()="task_info"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vvm_1784
					)
					and obj_4.getTarget().getName()="pid"
				)
				and obj_3.getTarget().hasName("seq_printf")
				and obj_3.getArgument(0).(VariableAccess).getTarget()=vm_1771
				and obj_3.getArgument(1).(StringLiteral).getValue()="pid:%d\tProcess:%s ----------\n"
			)
		)
	)
	and target_6.getTarget().getName()="process_name"
}

*/
predicate func_7(Variable vvm_1784, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="root"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vvm_1784
				)
				and obj_2.getTarget().getName()="bo"
			)
			and obj_1.getTarget().hasName("amdgpu_bo_reserve")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_8(Variable vvm_1784, Parameter vm_1771, ExprStmt target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getExpr() |
		obj_0.getTarget().hasName("amdgpu_debugfs_vm_bo_info")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvm_1784
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vm_1771
	)
}

from Function func, Variable vvm_1784, Parameter vm_1771, VariableAccess target_4, ValueFieldAccess target_5, ExprStmt target_7, ExprStmt target_8
where
not func_0(vvm_1784)
and not func_1(vm_1771, target_7, target_8)
and func_4(vvm_1784, vm_1771, target_4)
and func_5(vvm_1784, vm_1771, target_5)
and func_7(vvm_1784, target_7)
and func_8(vvm_1784, vm_1771, target_8)
and vvm_1784.getType().hasName("amdgpu_vm *")
and vm_1771.getType().hasName("seq_file *")
and vvm_1784.(LocalVariable).getFunction() = func
and vm_1771.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
