/**
 * @name linux-0d07c0ec4381f630c801539c79ad8dcc627f6e4a-can_optimize
 * @id cpp/linux/0d07c0ec4381f630c801539c79ad8dcc627f6e4a/can-optimize
 * @description linux-0d07c0ec4381f630c801539c79ad8dcc627f6e4a-arch/x86/kernel/kprobes/opt.c-can_optimize CVE-2021-3411
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vaddr_278, Variable vsize_278, Variable voffset_278, Parameter vpaddr_276, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4, AddExpr target_5) {
exists(ReturnStmt target_0 |
	target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("is_padding_int3")
	and target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vaddr_278
	and target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(1).(AddExpr).getLeftOperand().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vpaddr_276
	and target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(1).(AddExpr).getLeftOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget()=voffset_278
	and target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(1).(AddExpr).getRightOperand().(VariableAccess).getTarget()=vsize_278
	and target_0.getExpr().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_0.getExpr().(ConditionalExpr).getElse().(Literal).getValue()="0"
	and target_0.getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
	and target_4.getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(1).(AddExpr).getRightOperand().(VariableAccess).getLocation())
	and target_0.getExpr().(ConditionalExpr).getCondition().(FunctionCall).getArgument(1).(AddExpr).getLeftOperand().(SubExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, EqualityOperation target_1) {
	target_1.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="bytes"
	and target_1.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_1.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="opcode"
	and target_1.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("insn")
	and target_1.getLeftOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_1.getRightOperand().(Literal).getValue()="204"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vaddr_278, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("recover_probed_instruction")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kprobe_opcode_t[15]")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vaddr_278
}

predicate func_3(Variable vaddr_278, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="kaddr"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("insn")
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vaddr_278
}

predicate func_4(Variable vaddr_278, Variable vsize_278, Variable voffset_278, Parameter vpaddr_276, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getLesserOperand().(VariableAccess).getTarget()=vaddr_278
	and target_4.getGreaterOperand().(AddExpr).getLeftOperand().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vpaddr_276
	and target_4.getGreaterOperand().(AddExpr).getLeftOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget()=voffset_278
	and target_4.getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vsize_278
}

predicate func_5(Parameter vpaddr_276, AddExpr target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vpaddr_276
	and target_5.getRightOperand().(Literal).getValue()="1"
}

from Function func, Variable vaddr_278, Variable vsize_278, Variable voffset_278, Parameter vpaddr_276, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4, AddExpr target_5
where
not func_0(vaddr_278, vsize_278, voffset_278, vpaddr_276, target_1, target_2, target_3, target_4, target_5)
and func_1(func, target_1)
and func_2(vaddr_278, target_2)
and func_3(vaddr_278, target_3)
and func_4(vaddr_278, vsize_278, voffset_278, vpaddr_276, target_4)
and func_5(vpaddr_276, target_5)
and vaddr_278.getType().hasName("unsigned long")
and vsize_278.getType().hasName("unsigned long")
and voffset_278.getType().hasName("unsigned long")
and vpaddr_276.getType().hasName("unsigned long")
and vaddr_278.(LocalVariable).getFunction() = func
and vsize_278.(LocalVariable).getFunction() = func
and voffset_278.(LocalVariable).getFunction() = func
and vpaddr_276.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
