/**
 * @name linux-7a87441c9651ba37842f4809224aca13a554a26f-nfc_llcp_setsockopt
 * @id cpp/linux/7a87441c9651ba37842f4809224aca13a554a26f/nfc-llcp-setsockopt
 * @description linux-7a87441c9651ba37842f4809224aca13a554a26f-net/nfc/llcp_sock.c-nfc_llcp_setsockopt CVE-2024-36915
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptval_232, Variable vopt_236, BlockStmt target_12, FunctionCall target_0) {
	target_0.getTarget().hasName("copy_from_sockptr")
	and not target_0.getTarget().hasName("copy_safe_from_sockptr")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopt_236
	and target_0.getArgument(1).(VariableAccess).getTarget()=voptval_232
	and target_0.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_0.getParent().(IfStmt).getThen()=target_12
}

predicate func_1(Parameter voptval_232, Variable vopt_236, BlockStmt target_13, FunctionCall target_1) {
	target_1.getTarget().hasName("copy_from_sockptr")
	and not target_1.getTarget().hasName("copy_safe_from_sockptr")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopt_236
	and target_1.getArgument(1).(VariableAccess).getTarget()=voptval_232
	and target_1.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_1.getParent().(IfStmt).getThen()=target_13
}

predicate func_2(Function func) {
exists(SizeofExprOperator target_2 |
	target_2.getValue()="4"
	and target_2.getEnclosingFunction() = func)
}

predicate func_5(Function func) {
exists(SizeofExprOperator target_5 |
	target_5.getValue()="4"
	and target_5.getEnclosingFunction() = func)
}

predicate func_8(FunctionCall target_0, Function func, BreakStmt target_8) {
	target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_0
	and target_8.getEnclosingFunction() = func
}

predicate func_9(FunctionCall target_1, Function func, BreakStmt target_9) {
	target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, UnaryMinusExpr target_10) {
	target_10.getValue()="-14"
	and target_10.getParent().(AssignExpr).getRValue() = target_10
	and target_10.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, UnaryMinusExpr target_11) {
	target_11.getValue()="-14"
	and target_11.getParent().(AssignExpr).getRValue() = target_11
	and target_11.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getEnclosingFunction() = func
}

predicate func_12(FunctionCall target_0, Function func, BlockStmt target_12) {
	target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_12.getStmt(1) instanceof BreakStmt
	and target_12.getParent().(IfStmt).getCondition()=target_0
	and target_12.getEnclosingFunction() = func
}

predicate func_13(FunctionCall target_1, Function func, BlockStmt target_13) {
	target_13.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_13.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_13.getStmt(1) instanceof BreakStmt
	and target_13.getParent().(IfStmt).getCondition()=target_1
	and target_13.getEnclosingFunction() = func
}

from Function func, Parameter voptval_232, Variable vopt_236, FunctionCall target_0, FunctionCall target_1, BreakStmt target_8, BreakStmt target_9, UnaryMinusExpr target_10, UnaryMinusExpr target_11, BlockStmt target_12, BlockStmt target_13
where
func_0(voptval_232, vopt_236, target_12, target_0)
and func_1(voptval_232, vopt_236, target_13, target_1)
and not func_2(func)
and not func_5(func)
and func_8(target_0, func, target_8)
and func_9(target_1, func, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and func_12(target_0, func, target_12)
and func_13(target_1, func, target_13)
and voptval_232.getType().hasName("sockptr_t")
and vopt_236.getType().hasName("u32")
and voptval_232.getFunction() = func
and vopt_236.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
