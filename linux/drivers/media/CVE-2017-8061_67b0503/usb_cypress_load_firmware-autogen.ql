/**
 * @name linux-67b0503db9c29b04eadfeede6bebbfe5ddad94ef-usb_cypress_load_firmware
 * @id cpp/linux/67b0503db9c29b04eadfeede6bebbfe5ddad94ef/usb-cypress-load-firmware
 * @description linux-67b0503db9c29b04eadfeede6bebbfe5ddad94ef-drivers/media/usb/dvb-usb/dvb-usb-firmware.c-usb_cypress_load_firmware CVE-2017-8061
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getType().hasName("u8 *")
	and target_1.getRValue() instanceof FunctionCall
	and target_1.getEnclosingFunction() = func)
}

predicate func_4(IfStmt target_30, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getType().hasName("u8 *")
	and target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_30.getLocation()))
}

/*predicate func_5(Function func) {
exists(ArrayExpr target_5 |
	target_5.getArrayBase().(VariableAccess).getType().hasName("u8 *")
	and target_5.getArrayOffset().(Literal).getValue()="0"
	and target_5.getParent().(AssignExpr).getLValue() = target_5
	and target_5.getParent().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_5.getEnclosingFunction() = func)
}

*/
predicate func_9(Function func) {
exists(ArrayExpr target_9 |
	target_9.getArrayBase().(VariableAccess).getType().hasName("u8 *")
	and target_9.getArrayOffset().(Literal).getValue()="0"
	and target_9.getParent().(AssignExpr).getLValue() = target_9
	and target_9.getParent().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_9.getEnclosingFunction() = func)
}

predicate func_13(Variable vhx_38, FunctionCall target_13) {
	target_13.getTarget().hasName("kmalloc")
	and target_13.getArgument(0).(SizeofExprOperator).getValue()="268"
	and target_13.getArgument(1).(BitwiseOrExpr).getValue()="37748928"
	and target_13.getParent().(AssignExpr).getRValue() = target_13
	and target_13.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vhx_38
}

/*predicate func_14(Parameter vtype_36, Variable vcypress, ValueFieldAccess target_14) {
	target_14.getTarget().getName()="cpu_cs_register"
	and target_14.getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcypress
	and target_14.getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vtype_36
}

*/
predicate func_15(Parameter vtype_36, Variable vcypress, Parameter vudev_36, VariableAccess target_15) {
	target_15.getTarget()=vudev_36
	and target_15.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("usb_cypress_writemem")
	and target_15.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="cpu_cs_register"
	and target_15.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcypress
	and target_15.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vtype_36
	and target_15.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2) instanceof AddressOfExpr
	and target_15.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="1"
}

predicate func_17(Parameter vudev_36, VariableAccess target_17) {
	target_17.getTarget()=vudev_36
	and target_17.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getTarget().hasName("usb_cypress_writemem")
	and target_17.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(1) instanceof ValueFieldAccess
	and target_17.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(2) instanceof AddressOfExpr
	and target_17.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(3).(Literal).getValue()="1"
}

predicate func_20(Variable vhx_38, ReturnStmt target_31, RelationalOperation target_33, VariableAccess target_20) {
	target_20.getTarget()=vhx_38
	and target_20.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_31
	and target_20.getLocation().isBefore(target_33.getGreaterOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_21(Variable vreset_39, AddressOfExpr target_23, VariableAccess target_21) {
	target_21.getTarget()=vreset_39
	and target_21.getParent().(AssignExpr).getLValue() = target_21
	and target_21.getParent().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_21.getLocation().isBefore(target_23.getOperand().(VariableAccess).getLocation())
}

predicate func_22(Variable vreset_39, Variable vret_40, Parameter vudev_36, ExprStmt target_35, AssignExpr target_22) {
	target_22.getLValue().(VariableAccess).getTarget()=vret_40
	and target_22.getRValue().(FunctionCall).getTarget().hasName("usb_cypress_writemem")
	and target_22.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vudev_36
	and target_22.getRValue().(FunctionCall).getArgument(1) instanceof ValueFieldAccess
	and target_22.getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vreset_39
	and target_22.getRValue().(FunctionCall).getArgument(3) instanceof Literal
	and target_22.getParent().(NEExpr).getRightOperand().(Literal).getValue()="1"
	and target_22.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_35
}

predicate func_23(Variable vreset_39, Parameter vudev_36, AddressOfExpr target_23) {
	target_23.getOperand().(VariableAccess).getTarget()=vreset_39
	and target_23.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("usb_cypress_writemem")
	and target_23.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vudev_36
	and target_23.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1) instanceof ValueFieldAccess
	and target_23.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3) instanceof Literal
}

predicate func_24(Variable vhx_38, ExprStmt target_36, ExprStmt target_37, VariableAccess target_24) {
	target_24.getTarget()=vhx_38
	and target_24.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_36.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_24.getLocation())
	and target_24.getLocation().isBefore(target_37.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_25(Variable vreset_39, AddressOfExpr target_23, AddressOfExpr target_28, VariableAccess target_25) {
	target_25.getTarget()=vreset_39
	and target_25.getParent().(AssignExpr).getLValue() = target_25
	and target_25.getParent().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_23.getOperand().(VariableAccess).getLocation().isBefore(target_25.getLocation())
	and target_25.getLocation().isBefore(target_28.getOperand().(VariableAccess).getLocation())
}

predicate func_26(Parameter vtype_36, Variable vreset_39, Variable vret_40, Variable vcypress, Parameter vudev_36, BlockStmt target_38, LogicalOrExpr target_26) {
	target_26.getLeftOperand().(VariableAccess).getTarget()=vret_40
	and target_26.getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("usb_cypress_writemem")
	and target_26.getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vudev_36
	and target_26.getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="cpu_cs_register"
	and target_26.getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcypress
	and target_26.getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vtype_36
	and target_26.getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vreset_39
	and target_26.getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(3) instanceof Literal
	and target_26.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_26.getParent().(IfStmt).getThen()=target_38
}

/*predicate func_27(Parameter vtype_36, Variable vreset_39, Variable vcypress, Parameter vudev_36, ValueFieldAccess target_27) {
	target_27.getTarget().getName()="cpu_cs_register"
	and target_27.getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcypress
	and target_27.getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vtype_36
	and target_27.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getTarget().hasName("usb_cypress_writemem")
	and target_27.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vudev_36
	and target_27.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vreset_39
	and target_27.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(3) instanceof Literal
}

*/
predicate func_28(Variable vreset_39, Parameter vudev_36, AddressOfExpr target_28) {
	target_28.getOperand().(VariableAccess).getTarget()=vreset_39
	and target_28.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getTarget().hasName("usb_cypress_writemem")
	and target_28.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vudev_36
	and target_28.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(1) instanceof ValueFieldAccess
	and target_28.getParent().(FunctionCall).getParent().(NEExpr).getLeftOperand().(FunctionCall).getArgument(3) instanceof Literal
}

predicate func_29(Variable vhx_38, ExprStmt target_39, VariableAccess target_29) {
	target_29.getTarget()=vhx_38
	and target_29.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_39.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_29.getLocation())
}

predicate func_30(Function func, IfStmt target_30) {
	target_30.getCondition().(EqualityOperation).getLeftOperand() instanceof AssignExpr
	and target_30.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_30.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_30.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3dvb-usb: could not stop the USB controller CPU.\n"
	and target_30.getEnclosingFunction() = func
}

predicate func_31(Function func, ReturnStmt target_31) {
	target_31.getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_31.getEnclosingFunction() = func
}

predicate func_33(Variable vhx_38, Variable vret_40, RelationalOperation target_33) {
	 (target_33 instanceof GTExpr or target_33 instanceof LTExpr)
	and target_33.getGreaterOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_40
	and target_33.getGreaterOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dvb_usb_get_hexline")
	and target_33.getGreaterOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const firmware *")
	and target_33.getGreaterOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vhx_38
	and target_33.getGreaterOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_33.getLesserOperand().(Literal).getValue()="0"
}

predicate func_35(Function func, ExprStmt target_35) {
	target_35.getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_35.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3dvb-usb: could not stop the USB controller CPU.\n"
	and target_35.getEnclosingFunction() = func
}

predicate func_36(Variable vhx_38, Variable vret_40, ExprStmt target_36) {
	target_36.getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_36.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3dvb-usb: error while transferring firmware (transferred size: %d, block size: %d)\n"
	and target_36.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vret_40
	and target_36.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="len"
	and target_36.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhx_38
}

predicate func_37(Variable vhx_38, Function func, ExprStmt target_37) {
	target_37.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_37.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhx_38
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_37
}

predicate func_38(Variable vret_40, BlockStmt target_38) {
	target_38.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_38.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3dvb-usb: could not restart the USB controller CPU.\n"
	and target_38.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_40
	and target_38.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
}

predicate func_39(Variable vhx_38, RelationalOperation target_40, ExprStmt target_39) {
	target_39.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_39.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhx_38
	and target_39.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_40
}

predicate func_40(Variable vret_40, RelationalOperation target_40) {
	 (target_40 instanceof GTExpr or target_40 instanceof LTExpr)
	and target_40.getLesserOperand().(VariableAccess).getTarget()=vret_40
	and target_40.getGreaterOperand().(Literal).getValue()="0"
}

from Function func, Parameter vtype_36, Variable vhx_38, Variable vreset_39, Variable vret_40, Variable vcypress, Parameter vudev_36, FunctionCall target_13, VariableAccess target_15, VariableAccess target_17, VariableAccess target_20, VariableAccess target_21, AssignExpr target_22, AddressOfExpr target_23, VariableAccess target_24, VariableAccess target_25, LogicalOrExpr target_26, AddressOfExpr target_28, VariableAccess target_29, IfStmt target_30, ReturnStmt target_31, RelationalOperation target_33, ExprStmt target_35, ExprStmt target_36, ExprStmt target_37, BlockStmt target_38, ExprStmt target_39, RelationalOperation target_40
where
not func_1(func)
and not func_4(target_30, func)
and not func_9(func)
and func_13(vhx_38, target_13)
and func_15(vtype_36, vcypress, vudev_36, target_15)
and func_17(vudev_36, target_17)
and func_20(vhx_38, target_31, target_33, target_20)
and func_21(vreset_39, target_23, target_21)
and func_22(vreset_39, vret_40, vudev_36, target_35, target_22)
and func_23(vreset_39, vudev_36, target_23)
and func_24(vhx_38, target_36, target_37, target_24)
and func_25(vreset_39, target_23, target_28, target_25)
and func_26(vtype_36, vreset_39, vret_40, vcypress, vudev_36, target_38, target_26)
and func_28(vreset_39, vudev_36, target_28)
and func_29(vhx_38, target_39, target_29)
and func_30(func, target_30)
and func_31(func, target_31)
and func_33(vhx_38, vret_40, target_33)
and func_35(func, target_35)
and func_36(vhx_38, vret_40, target_36)
and func_37(vhx_38, func, target_37)
and func_38(vret_40, target_38)
and func_39(vhx_38, target_40, target_39)
and func_40(vret_40, target_40)
and vtype_36.getType().hasName("int")
and vhx_38.getType().hasName("hexline *")
and vreset_39.getType().hasName("u8")
and vret_40.getType().hasName("int")
and vcypress.getType() instanceof ArrayType
and vudev_36.getType().hasName("usb_device *")
and vtype_36.getFunction() = func
and vhx_38.(LocalVariable).getFunction() = func
and vreset_39.(LocalVariable).getFunction() = func
and vret_40.(LocalVariable).getFunction() = func
and not vcypress.getParentScope+() = func
and vudev_36.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
