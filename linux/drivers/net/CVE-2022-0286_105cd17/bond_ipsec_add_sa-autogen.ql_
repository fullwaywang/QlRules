/**
 * @name linux-105cd17a866017b45f3c45901b394c711c97bf40-bond_ipsec_add_sa
 * @id cpp/linux/105cd17a866017b45f3c45901b394c711c97bf40/bond-ipsec-add-sa
 * @description linux-105cd17a866017b45f3c45901b394c711c97bf40-drivers/net/bonding/bond_main.c-bond_ipsec_add_sa CVE-2022-0286
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vslave_405, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vslave_405
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vslave_405, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="real_dev"
	and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="xso"
	and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("xfrm_state *")
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="dev"
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vslave_405
}

predicate func_2(Variable vslave_405, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vslave_405
	and target_2.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_2.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(VariableAccess).getTarget().getType().hasName("slave *")
}

from Function func, Variable vslave_405, ExprStmt target_1, ExprStmt target_2
where
not func_0(vslave_405, target_1, target_2, func)
and func_1(vslave_405, target_1)
and func_2(vslave_405, target_2)
and vslave_405.getType().hasName("slave *")
and vslave_405.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
