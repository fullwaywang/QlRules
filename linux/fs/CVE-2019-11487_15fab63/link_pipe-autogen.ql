/**
 * @name linux-15fab63e1e57be9fdb5eec1bbc5916e9825e9acb-link_pipe
 * @id cpp/linux/15fab63e1e57be9fdb5eec1bbc5916e9825e9acb/link-pipe
 * @description linux-15fab63e1e57be9fdb5eec1bbc5916e9825e9acb-fs/splice.c-link_pipe CVE-2019-11487
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_1632, ExprStmt target_3, ExprStmt target_4) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand() instanceof FunctionCall
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vret_1632
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1632
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

/*predicate func_1(Variable vret_1632, ExprStmt target_4) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(VariableAccess).getTarget()=vret_1632
		and target_1.getRValue().(UnaryMinusExpr).getValue()="-14"
		and target_1.getLValue().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

*/
predicate func_2(Variable vibuf_1631, Parameter vipipe_1627, FunctionCall target_2) {
		target_2.getTarget().hasName("pipe_buf_get")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vipipe_1627
		and target_2.getArgument(1).(VariableAccess).getTarget()=vibuf_1631
}

predicate func_3(Variable vret_1632, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1632
		and target_3.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-32"
}

predicate func_4(Variable vret_1632, ExprStmt target_4) {
		target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vret_1632
		and target_4.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="len"
		and target_4.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("pipe_buffer *")
}

from Function func, Variable vibuf_1631, Variable vret_1632, Parameter vipipe_1627, FunctionCall target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vret_1632, target_3, target_4)
and func_2(vibuf_1631, vipipe_1627, target_2)
and func_3(vret_1632, target_3)
and func_4(vret_1632, target_4)
and vibuf_1631.getType().hasName("pipe_buffer *")
and vret_1632.getType().hasName("int")
and vipipe_1627.getType().hasName("pipe_inode_info *")
and vibuf_1631.(LocalVariable).getFunction() = func
and vret_1632.(LocalVariable).getFunction() = func
and vipipe_1627.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
