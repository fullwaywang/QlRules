/**
 * @name linux-723012cab779eee8228376754e22c6594229bf8f-write_begin_slow
 * @id cpp/linux/723012cab779eee8228376754e22c6594229bf8f/write-begin-slow
 * @description linux-723012cab779eee8228376754e22c6594229bf8f-fs/ubifs/file.c-write_begin_slow CVE-2024-35821
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpage_225, NotExpr target_2, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("SetPageUptodate")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_225
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_1(Variable vpage_225, NotExpr target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("ClearPageError")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_225
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vpage_225, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("PageUptodate")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_225
}

from Function func, Variable vpage_225, ExprStmt target_0, ExprStmt target_1, NotExpr target_2
where
func_0(vpage_225, target_2, target_0)
and func_1(vpage_225, target_2, target_1)
and func_2(vpage_225, target_2)
and vpage_225.getType().hasName("page *")
and vpage_225.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
