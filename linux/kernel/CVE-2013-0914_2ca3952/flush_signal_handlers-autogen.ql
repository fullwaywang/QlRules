/**
 * @name linux-2ca39528c01a933f6689cd6505ce65bd6d68a530-flush_signal_handlers
 * @id cpp/linux/2ca39528c01a933f6689cd6505ce65bd6d68a530/flush-signal-handlers
 * @description linux-2ca39528c01a933f6689cd6505ce65bd6d68a530-kernel/signal.c-flush_signal_handlers CVE-2013-0914
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vka_483, ExprStmt target_1, ExprStmt target_2, AddressOfExpr target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="sa_restorer"
	and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sa"
	and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vka_483
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vka_483, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("sigemptyset")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="sa_mask"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sa"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vka_483
}

predicate func_2(Variable vka_483, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="sa_flags"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sa"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vka_483
	and target_2.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_3(Variable vka_483, AddressOfExpr target_3) {
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="sa_mask"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sa"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vka_483
}

from Function func, Variable vka_483, ExprStmt target_1, ExprStmt target_2, AddressOfExpr target_3
where
not func_0(vka_483, target_1, target_2, target_3)
and func_1(vka_483, target_1)
and func_2(vka_483, target_2)
and func_3(vka_483, target_3)
and vka_483.getType().hasName("k_sigaction *")
and vka_483.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
