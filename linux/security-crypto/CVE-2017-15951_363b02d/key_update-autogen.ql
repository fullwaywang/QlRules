/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-key_update
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/key-update
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/key.c-key_update CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vkey_960, FunctionCall target_0) {
	target_0.getTarget().hasName("clear_bit")
	and not target_0.getTarget().hasName("mark_key_instantiated")
	and target_0.getArgument(0).(Literal).getValue()="5"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_960
}

predicate func_1(Variable vkey_960, VariableAccess target_1) {
	target_1.getTarget()=vkey_960
	and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vkey_960, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="flags"
	and target_2.getQualifier().(VariableAccess).getTarget()=vkey_960
}

from Function func, Variable vkey_960, FunctionCall target_0, VariableAccess target_1, PointerFieldAccess target_2
where
func_0(vkey_960, target_0)
and func_1(vkey_960, target_1)
and func_2(vkey_960, target_2)
and vkey_960.getType().hasName("key *")
and vkey_960.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
