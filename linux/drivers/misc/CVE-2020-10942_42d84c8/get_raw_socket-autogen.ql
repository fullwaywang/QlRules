/**
 * @name linux-42d84c8490f9f0931786f1623191fcab397c3d64-get_raw_socket
 * @id cpp/linux/42d84c8490f9f0931786f1623191fcab397c3d64/get-raw-socket
 * @description linux-42d84c8490f9f0931786f1623191fcab397c3d64-drivers/vhost/net.c-get_raw_socket CVE-2020-10942
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vuaddr_1420, ValueFieldAccess target_0) {
		target_0.getTarget().getName()="sll_family"
		and target_0.getQualifier().(ValueFieldAccess).getTarget().getName()="sa"
		and target_0.getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vuaddr_1420
}

predicate func_1(Variable vsock_1422, EqualityOperation target_7) {
	exists(PointerFieldAccess target_1 |
		target_1.getTarget().getName()="__sk_common"
		and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="sk"
		and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_1422
		and target_7.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vsock_1422, VariableAccess target_2) {
		target_2.getTarget()=vsock_1422
}

predicate func_3(Function func, DeclStmt target_3) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vr_1421, Variable vsock_1422, Variable vuaddr_1420, Function func, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vr_1421
		and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="getname"
		and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
		and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_1422
		and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vsock_1422
		and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="sa"
		and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vuaddr_1420
		and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vr_1421, Function func, IfStmt target_5) {
		target_5.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vr_1421
		and target_5.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vuaddr_1420, VariableAccess target_6) {
		target_6.getTarget()=vuaddr_1420
}

predicate func_7(Variable vsock_1422, EqualityOperation target_7) {
		target_7.getAnOperand().(PointerFieldAccess).getTarget().getName()="sk_type"
		and target_7.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk"
		and target_7.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_1422
}

from Function func, Variable vr_1421, Variable vsock_1422, Variable vuaddr_1420, ValueFieldAccess target_0, VariableAccess target_2, DeclStmt target_3, ExprStmt target_4, IfStmt target_5, VariableAccess target_6, EqualityOperation target_7
where
func_0(vuaddr_1420, target_0)
and not func_1(vsock_1422, target_7)
and func_2(vsock_1422, target_2)
and func_3(func, target_3)
and func_4(vr_1421, vsock_1422, vuaddr_1420, func, target_4)
and func_5(vr_1421, func, target_5)
and func_6(vuaddr_1420, target_6)
and func_7(vsock_1422, target_7)
and vr_1421.getType().hasName("int")
and vsock_1422.getType().hasName("socket *")
and vuaddr_1420.getType().hasName("struct <unnamed>")
and vr_1421.(LocalVariable).getFunction() = func
and vsock_1422.(LocalVariable).getFunction() = func
and vuaddr_1420.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
