/**
 * @name linux-4bf584a03eec674975ee9fe36c8583d9d470dab1-dwc3_remove
 * @id cpp/linux/4bf584a03eec674975ee9fe36c8583d9d470dab1/dwc3-remove
 * @description linux-4bf584a03eec674975ee9fe36c8583d9d470dab1-drivers/usb/dwc3/core.c-dwc3_remove CVE-2021-47220
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdwc_1670, FunctionCall target_0) {
	target_0.getTarget().hasName("dwc3_debugfs_exit")
	and not target_0.getTarget().hasName("dwc3_core_exit_mode")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vdwc_1670
}

predicate func_1(Variable vdwc_1670, ExprStmt target_5, FunctionCall target_1) {
	target_1.getTarget().hasName("dwc3_core_exit_mode")
	and not target_1.getTarget().hasName("dwc3_debugfs_exit")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vdwc_1670
	and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_5(Variable vdwc_1670, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("dwc3_core_exit")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdwc_1670
}

from Function func, Variable vdwc_1670, FunctionCall target_0, FunctionCall target_1, ExprStmt target_5
where
func_0(vdwc_1670, target_0)
and func_1(vdwc_1670, target_5, target_1)
and func_5(vdwc_1670, target_5)
and vdwc_1670.getType().hasName("dwc3 *")
and vdwc_1670.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
