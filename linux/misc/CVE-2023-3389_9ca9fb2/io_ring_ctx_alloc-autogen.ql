/**
 * @name linux-9ca9fb24d5febccea354089c41f96a8ad0d853f8-io_ring_ctx_alloc
 * @id cpp/linux/9ca9fb24d5febccea354089c41f96a8ad0d853f8/io-ring-ctx-alloc
 * @description linux-9ca9fb24d5febccea354089c41f96a8ad0d853f8-io_uring/io_uring.c-io_ring_ctx_alloc CVE-2023-3389
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="2048"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vctx_260, Variable vhash_bits_261, AddressOfExpr target_3, ExprStmt target_4, FunctionCall target_5, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(FunctionCall).getTarget().hasName("io_alloc_hash_table")
		and target_1.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="cancel_table_locked"
		and target_1.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_1.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_260
		and target_1.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vhash_bits_261
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_5.getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Variable vctx_260, ValueFieldAccess target_6, ValueFieldAccess target_7, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="hbs"
		and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="cancel_table_locked"
		and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_260
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vctx_260, AddressOfExpr target_3) {
		target_3.getOperand().(ValueFieldAccess).getTarget().getName()="cancel_table"
		and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_260
}

predicate func_4(Variable vctx_260, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dummy_ubuf"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_260
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kzalloc")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofExprOperator).getValue()="32"
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
}

predicate func_5(Variable vctx_260, Variable vhash_bits_261, FunctionCall target_5) {
		target_5.getTarget().hasName("io_alloc_hash_table")
		and target_5.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="cancel_table"
		and target_5.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_5.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_260
		and target_5.getArgument(1).(VariableAccess).getTarget()=vhash_bits_261
}

predicate func_6(Variable vctx_260, ValueFieldAccess target_6) {
		target_6.getTarget().getName()="cancel_table"
		and target_6.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_260
}

predicate func_7(Variable vctx_260, ValueFieldAccess target_7) {
		target_7.getTarget().getName()="io_bl"
		and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_260
}

from Function func, Variable vctx_260, Variable vhash_bits_261, SizeofExprOperator target_0, AddressOfExpr target_3, ExprStmt target_4, FunctionCall target_5, ValueFieldAccess target_6, ValueFieldAccess target_7
where
func_0(func, target_0)
and not func_1(vctx_260, vhash_bits_261, target_3, target_4, target_5, func)
and not func_2(vctx_260, target_6, target_7, func)
and func_3(vctx_260, target_3)
and func_4(vctx_260, target_4)
and func_5(vctx_260, vhash_bits_261, target_5)
and func_6(vctx_260, target_6)
and func_7(vctx_260, target_7)
and vctx_260.getType().hasName("io_ring_ctx *")
and vhash_bits_261.getType().hasName("int")
and vctx_260.(LocalVariable).getFunction() = func
and vhash_bits_261.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
