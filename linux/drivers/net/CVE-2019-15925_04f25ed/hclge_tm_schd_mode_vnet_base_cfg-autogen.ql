/**
 * @name linux-04f25edb48c441fc278ecc154c270f16966cbb90-hclge_tm_schd_mode_vnet_base_cfg
 * @id cpp/linux/04f25edb48c441fc278ecc154c270f16966cbb90/hclge-tm-schd-mode-vnet-base-cfg
 * @description linux-04f25edb48c441fc278ecc154c270f16966cbb90-drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_tm.c-hclge_tm_schd_mode_vnet_base_cfg CVE-2019-15925
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvport_1134, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="vport_id"
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvport_1134
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="8"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Parameter vvport_1134, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("hclge_tm_pri_schd_mode_cfg")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("hclge_dev *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="vport_id"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvport_1134
}

from Function func, Parameter vvport_1134, ExprStmt target_1
where
not func_0(vvport_1134, target_1, func)
and func_1(vvport_1134, target_1)
and vvport_1134.getType().hasName("hclge_vport *")
and vvport_1134.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
