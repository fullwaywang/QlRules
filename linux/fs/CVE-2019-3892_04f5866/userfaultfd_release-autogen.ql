/**
 * @name linux-04f5866e41fb70690e28397487d8bd8eea7d712a-userfaultfd_release
 * @id cpp/linux/04f5866e41fb70690e28397487d8bd8eea7d712a/userfaultfd-release
 * @description linux-04f5866e41fb70690e28397487d8bd8eea7d712a-fs/userfaultfd.c-userfaultfd_release CVE-2019-3892
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="429"
	and not target_0.getValue()="430"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vmm_866, ExprStmt target_2, AddressOfExpr target_3, ExprStmt target_4, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("mmget_still_valid")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_866
	and target_1.getThen().(GotoStmt).getName() ="skip_mm"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
	and target_2.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vmm_866, AddressOfExpr target_3) {
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="mmap_sem"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_866
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("down_write")
}

predicate func_4(Variable vmm_866, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="mmap"
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_866
}

from Function func, Variable vmm_866, Literal target_0, ExprStmt target_2, AddressOfExpr target_3, ExprStmt target_4
where
func_0(func, target_0)
and not func_1(vmm_866, target_2, target_3, target_4, func)
and func_2(func, target_2)
and func_3(vmm_866, target_3)
and func_4(vmm_866, target_4)
and vmm_866.getType().hasName("mm_struct *")
and vmm_866.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
