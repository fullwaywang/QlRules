/**
 * @name linux-1424ab4bb386df9cc590c73afa55f13e9b00dea2-paravirt_patch_default
 * @id cpp/linux/1424ab4bb386df9cc590c73afa55f13e9b00dea2/paravirt-patch-default
 * @description linux-1424ab4bb386df9cc590c73afa55f13e9b00dea2-arch/x86/kernel/paravirt.c-paravirt_patch_default CVE-2021-4440
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, DivExpr target_0) {
	target_0.getValue()="32"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vtype_106, ExprStmt target_2, LogicalOrExpr target_1) {
	exists(EqualityOperation obj_0 | obj_0=target_1.getLeftOperand() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vtype_106
		and obj_0.getRightOperand() instanceof DivExpr
	)
	and exists(EqualityOperation obj_1 | obj_1=target_1.getRightOperand() |
		obj_1.getLeftOperand().(VariableAccess).getTarget()=vtype_106
		and obj_1.getRightOperand().(DivExpr).getValue()="31"
	)
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("paravirt_patch_jmp")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("void *")
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
			and obj_1.getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
			and obj_1.getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, Parameter vtype_106, DivExpr target_0, LogicalOrExpr target_1, ExprStmt target_2
where
func_0(func, target_0)
and func_1(vtype_106, target_2, target_1)
and func_2(func, target_2)
and vtype_106.getType().hasName("u8")
and vtype_106.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
