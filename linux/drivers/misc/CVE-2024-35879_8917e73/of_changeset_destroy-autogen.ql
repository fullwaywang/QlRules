/**
 * @name linux-8917e7385346bd6584890ed362985c219fe6ae84-of_changeset_destroy
 * @id cpp/linux/8917e7385346bd6584890ed362985c219fe6ae84/of-changeset-destroy
 * @description linux-8917e7385346bd6584890ed362985c219fe6ae84-drivers/of/dynamic.c-of_changeset_destroy CVE-2024-35879
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ForStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("device_link_wait_removal")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ForStmt target_1) {
	target_1.getInitialization().(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("of_changeset_entry *")
	and target_1.getInitialization().(ExprStmt).getExpr().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("of_changeset_entry *")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("list_is_head")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="node"
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("of_changeset_entry *")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="entries"
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("of_changeset *")
	and target_1.getUpdate().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("of_changeset_entry *")
	and target_1.getUpdate().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("of_changeset_entry *")
	and target_1.getUpdate().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("of_changeset_entry *")
	and target_1.getStmt().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__of_changeset_entry_destroy")
	and target_1.getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("of_changeset_entry *")
	and target_1.getEnclosingFunction() = func
}

from Function func, ForStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
