/**
 * @name linux-1a5a9906d4e8d1976b701f889d8f35d54b928f25-unuse_pmd_range
 * @id cpp/linux/1a5a9906d4e8d1976b701f889d8f35d54b928f25/unuse-pmd-range
 * @description linux-1a5a9906d4e8d1976b701f889d8f35d54b928f25-mm/swapfile.c-unuse_pmd_range CVE-2012-1179
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpmd_928, FunctionCall target_0) {
		target_0.getTarget().hasName("pmd_none_or_clear_bad")
		and not target_0.getTarget().hasName("pmd_none_or_trans_huge_or_clear_bad")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vpmd_928
		and target_0.getParent().(IfStmt).getThen() instanceof ContinueStmt
}

predicate func_1(Variable vpmd_928, IfStmt target_1) {
		target_1.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_1.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("pmd_trans_huge")
		and target_1.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vpmd_928
		and target_1.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Variable vpmd_928, FunctionCall target_0, IfStmt target_1
where
func_0(vpmd_928, target_0)
and func_1(vpmd_928, target_1)
and vpmd_928.getType().hasName("pmd_t *")
and vpmd_928.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
