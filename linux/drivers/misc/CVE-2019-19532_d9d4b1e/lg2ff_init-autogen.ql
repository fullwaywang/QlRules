/**
 * @name linux-d9d4b1e46d9543a82c23f6df03f4ad697dab361b-lg2ff_init
 * @id cpp/linux/d9d4b1e46d9543a82c23f6df03f4ad697dab361b/lg2ff-init
 * @description linux-d9d4b1e46d9543a82c23f6df03f4ad697dab361b-drivers/hid/hid-lg2ff.c-lg2ff_init CVE-2019-19532
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vhid_49, ExprStmt target_7, ValueFieldAccess target_8, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("list_empty")
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="inputs"
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhid_49
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhid_49
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="no inputs found\n"
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_7.getLocation())
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vhidinput_53, ExprStmt target_7, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vhidinput_53
	and target_1.getExpr().(AssignExpr).getRValue() instanceof StmtExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_7.getLocation()))
}

predicate func_2(Variable vhidinput_53, Variable vdev_55, ExprStmt target_7, ExprStmt target_10, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdev_55
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="input"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhidinput_53
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_7.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable v__mptr_53, StmtExpr target_3) {
	target_3.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_3.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_3.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_53
	and target_3.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

predicate func_4(Variable vhidinput_53, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="input"
	and target_4.getQualifier().(VariableAccess).getTarget()=vhidinput_53
}

predicate func_5(Function func, Initializer target_5) {
	target_5.getExpr() instanceof StmtExpr
	and target_5.getExpr().getEnclosingFunction() = func
}

predicate func_6(Variable vhidinput_53, Initializer target_6) {
	target_6.getExpr().(PointerFieldAccess).getTarget().getName()="input"
	and target_6.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhidinput_53
}

predicate func_7(Parameter vhid_49, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("hid_report *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("hid_validate_values")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhid_49
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="0"
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(Literal).getValue()="7"
}

predicate func_8(Parameter vhid_49, ValueFieldAccess target_8) {
	target_8.getTarget().getName()="next"
	and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="inputs"
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhid_49
}

predicate func_10(Variable vdev_55, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_10.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="80"
	and target_10.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="ffbit"
	and target_10.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_55
}

from Function func, Variable vhidinput_53, Variable v__mptr_53, Variable vdev_55, Parameter vhid_49, StmtExpr target_3, PointerFieldAccess target_4, Initializer target_5, Initializer target_6, ExprStmt target_7, ValueFieldAccess target_8, ExprStmt target_10
where
not func_0(vhid_49, target_7, target_8, func)
and not func_1(vhidinput_53, target_7, func)
and not func_2(vhidinput_53, vdev_55, target_7, target_10, func)
and func_3(v__mptr_53, target_3)
and func_4(vhidinput_53, target_4)
and func_5(func, target_5)
and func_6(vhidinput_53, target_6)
and func_7(vhid_49, target_7)
and func_8(vhid_49, target_8)
and func_10(vdev_55, target_10)
and vhidinput_53.getType().hasName("hid_input *")
and v__mptr_53.getType().hasName("void *")
and vdev_55.getType().hasName("input_dev *")
and vhid_49.getType().hasName("hid_device *")
and vhidinput_53.(LocalVariable).getFunction() = func
and v__mptr_53.(LocalVariable).getFunction() = func
and vdev_55.(LocalVariable).getFunction() = func
and vhid_49.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
