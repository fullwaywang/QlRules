/**
 * @name linux-6caabe7f197d3466d238f70915d65301f1716626-hsr_dev_finalize
 * @id cpp/linux/6caabe7f197d3466d238f70915d65301f1716626/hsr-dev-finalize
 * @description linux-6caabe7f197d3466d238f70915d65301f1716626-net/hsr/hsr_device.c-hsr_dev_finalize CVE-2019-16995
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(VariableAccess target_4, Function func) {
exists(GotoStmt target_0 |
	target_0.getName() ="err_add_port"
	and target_0.getParent().(IfStmt).getCondition()=target_4
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vhsr_444, EqualityOperation target_5, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("hsr_del_node")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="self_node_db"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhsr_444
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_5.getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vres_446, VariableAccess target_4, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=vres_446
	and target_2.getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Variable vres_446, IfStmt target_6, Function func, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vres_446
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_6.getCondition().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation())
}

predicate func_4(Variable vres_446, ReturnStmt target_2, VariableAccess target_4) {
	target_4.getTarget()=vres_446
	and target_4.getParent().(IfStmt).getThen()=target_2
}

predicate func_5(Variable vhsr_444, EqualityOperation target_5) {
	target_5.getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="port_list"
	and target_5.getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hsr_port *")
	and target_5.getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ports"
	and target_5.getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhsr_444
}

predicate func_6(Variable vres_446, Function func, IfStmt target_6) {
	target_6.getCondition().(VariableAccess).getTarget()=vres_446
	and target_6.getThen().(GotoStmt).getName() ="fail"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

from Function func, Variable vhsr_444, Variable vres_446, ReturnStmt target_2, ReturnStmt target_3, VariableAccess target_4, EqualityOperation target_5, IfStmt target_6
where
not func_0(target_4, func)
and not func_1(vhsr_444, target_5, func)
and func_2(vres_446, target_4, target_2)
and func_3(vres_446, target_6, func, target_3)
and func_4(vres_446, target_2, target_4)
and func_5(vhsr_444, target_5)
and func_6(vres_446, func, target_6)
and vhsr_444.getType().hasName("hsr_priv *")
and vres_446.getType().hasName("int")
and vhsr_444.(LocalVariable).getFunction() = func
and vres_446.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
