/**
 * @name linux-84c4e1f89fefe70554da0ab33be72c9be7994379-aio_prep_rw
 * @id cpp/linux/84c4e1f89fefe70554da0ab33be72c9be7994379/aio-prep-rw
 * @description linux-84c4e1f89fefe70554da0ab33be72c9be7994379-fs/aio.c-aio_prep_rw CVE-2019-10125
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vret_1433, Function func, ReturnStmt target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=vret_1433
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter viocb_1431, Parameter vreq_1431, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ki_filp"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1431
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fget")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="aio_fildes"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=viocb_1431
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Parameter vreq_1431, Function func, IfStmt target_3) {
	target_3.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_3.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ki_filp"
	and target_3.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1431
	and target_3.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-9"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(Function func, UnaryMinusExpr target_4) {
	target_4.getValue()="-9"
	and target_4.getEnclosingFunction() = func
}

*/
predicate func_5(VariableAccess target_8, Function func, GotoStmt target_5) {
	target_5.getName() ="out_fput"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_5.getEnclosingFunction() = func
}

predicate func_6(FunctionCall target_9, Function func, GotoStmt target_6) {
	target_6.getName() ="out_fput"
	and target_6.getParent().(IfStmt).getCondition()=target_9
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Parameter vreq_1431, Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("fput")
	and target_7.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ki_filp"
	and target_7.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1431
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vret_1433, BlockStmt target_10, VariableAccess target_8) {
	target_8.getTarget()=vret_1433
	and target_8.getParent().(IfStmt).getThen()=target_10
}

predicate func_9(Variable vret_1433, FunctionCall target_9) {
	target_9.getTarget().hasName("__builtin_expect")
	and target_9.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vret_1433
	and target_9.getArgument(1).(Literal).getValue()="0"
}

predicate func_10(Variable vret_1433, BlockStmt target_10) {
	target_10.getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_10.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_10.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="%s: aio ioprio check cap error: %d\n"
	and target_10.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_10.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vret_1433
}

from Function func, Parameter viocb_1431, Variable vret_1433, Parameter vreq_1431, ReturnStmt target_1, ExprStmt target_2, IfStmt target_3, GotoStmt target_5, GotoStmt target_6, ExprStmt target_7, VariableAccess target_8, FunctionCall target_9, BlockStmt target_10
where
func_1(vret_1433, func, target_1)
and func_2(viocb_1431, vreq_1431, func, target_2)
and func_3(vreq_1431, func, target_3)
and func_5(target_8, func, target_5)
and func_6(target_9, func, target_6)
and func_7(vreq_1431, func, target_7)
and func_8(vret_1433, target_10, target_8)
and func_9(vret_1433, target_9)
and func_10(vret_1433, target_10)
and viocb_1431.getType().hasName("const iocb *")
and vret_1433.getType().hasName("int")
and vreq_1431.getType().hasName("kiocb *")
and viocb_1431.getFunction() = func
and vret_1433.(LocalVariable).getFunction() = func
and vreq_1431.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
