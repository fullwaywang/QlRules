/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-ip_setsockopt
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/ip-setsockopt
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/ipv4/ip_sockglue.c-ip_setsockopt CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_3(Parameter voptval_1405, FunctionCall target_3) {
	target_3.getTarget().hasName("USER_SOCKPTR")
	and target_3.getArgument(0).(VariableAccess).getTarget()=voptval_1405
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("do_ip_setsockopt")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_4(Parameter voptval_1405, FunctionCall target_4) {
	target_4.getTarget().hasName("USER_SOCKPTR")
	and target_4.getArgument(0).(VariableAccess).getTarget()=voptval_1405
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("bpfilter_ip_set_sockopt")
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_5(Parameter voptval_1405, FunctionCall target_5) {
	target_5.getTarget().hasName("USER_SOCKPTR")
	and target_5.getArgument(0).(VariableAccess).getTarget()=voptval_1405
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nf_setsockopt")
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="2"
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Parameter voptval_1405, FunctionCall target_3, FunctionCall target_4, FunctionCall target_5
where
func_3(voptval_1405, target_3)
and func_4(voptval_1405, target_4)
and func_5(voptval_1405, target_5)
and voptval_1405.getType().hasName("char *")
and voptval_1405.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
