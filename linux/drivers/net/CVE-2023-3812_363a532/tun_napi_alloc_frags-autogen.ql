/**
 * @name linux-363a5328f4b0517e59572118ccfb7c626d81dca9-tun_napi_alloc_frags
 * @id cpp/linux/363a5328f4b0517e59572118ccfb7c626d81dca9/tun-napi-alloc-frags
 * @description linux-363a5328f4b0517e59572118ccfb7c626d81dca9-tun_napi_alloc_frags CVE-2023-3812
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vlen_1454, ReturnStmt target_2, ExprStmt target_3) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand() instanceof RelationalOperation
		and target_0.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vlen_1454
		and target_0.getAnOperand().(RelationalOperation).getLesserOperand().(SubExpr).getLeftOperand().(SubExpr).getLeftOperand().(Literal).getValue()="65535"
		and target_0.getAnOperand().(RelationalOperation).getLesserOperand().(SubExpr).getLeftOperand().(SubExpr).getRightOperand().(BuiltInChooseExpr).getChild(0).(LogicalAndExpr).getValue()="1"
		and target_0.getAnOperand().(RelationalOperation).getLesserOperand().(SubExpr).getLeftOperand().(SubExpr).getRightOperand().(BuiltInChooseExpr).getChild(1).(ConditionalExpr).getValue()="64"
		and target_0.getAnOperand().(RelationalOperation).getLesserOperand().(SubExpr).getRightOperand().(Literal).getValue()="0"
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_0.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vit_1455, ReturnStmt target_2, RelationalOperation target_1) {
		 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
		and target_1.getGreaterOperand().(ValueFieldAccess).getTarget().getName()="nr_segs"
		and target_1.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_1.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vit_1455
		and target_1.getLesserOperand().(AddExpr).getValue()="18"
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("ERR_PTR")
		and target_2.getExpr().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-90"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vlen_1454, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="len"
		and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vlen_1454
}

from Function func, Parameter vlen_1454, Parameter vit_1455, RelationalOperation target_1, ReturnStmt target_2, ExprStmt target_3
where
not func_0(vlen_1454, target_2, target_3)
and func_1(vit_1455, target_2, target_1)
and func_2(func, target_2)
and func_3(vlen_1454, target_3)
and vlen_1454.getType().hasName("size_t")
and vit_1455.getType().hasName("const iov_iter *")
and vlen_1454.getFunction() = func
and vit_1455.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
