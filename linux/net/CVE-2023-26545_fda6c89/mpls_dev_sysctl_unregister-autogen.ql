/**
 * @name linux-fda6c89fe3d9aca073495a664e1d5aea28cd4377-mpls_dev_sysctl_unregister
 * @id cpp/linux/fda6c89fe3d9aca073495a664e1d5aea28cd4377/mpls-dev-sysctl-unregister
 * @description linux-fda6c89fe3d9aca073495a664e1d5aea28cd4377-net/mpls/af_mpls.c-mpls_dev_sysctl_unregister CVE-2023-26545
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmdev_1435, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sysctl"
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_1435
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Parameter vmdev_1435, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ctl_table *")
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ctl_table_arg"
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sysctl"
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_1435
}

from Function func, Parameter vmdev_1435, ExprStmt target_1
where
not func_0(vmdev_1435, target_1, func)
and func_1(vmdev_1435, target_1)
and vmdev_1435.getType().hasName("mpls_dev *")
and vmdev_1435.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
