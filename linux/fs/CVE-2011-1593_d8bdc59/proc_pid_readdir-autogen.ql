/**
 * @name linux-d8bdc59f215e62098bc5b4256fd9928bf27053a1-proc_pid_readdir
 * @id cpp/linux/d8bdc59f215e62098bc5b4256fd9928bf27053a1/proc-pid-readdir
 * @description linux-d8bdc59f215e62098bc5b4256fd9928bf27053a1-fs/proc/base.c-proc_pid_readdir CVE-2011-1593
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfilp_3125, ValueFieldAccess target_7, CommaExpr target_8, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="f_pos"
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfilp_3125
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(AddExpr).getValue()="4194561"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getLeftOperand().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnr_3127, RelationalOperation target_10, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnr_3127
		and target_1.getExpr().(AssignExpr).getRValue() instanceof SubExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_10.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable vreaper_3128, NotExpr target_12, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vreaper_3128
		and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_12.getOperand().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vfilp_3125, SubExpr target_3) {
		target_3.getLeftOperand().(PointerFieldAccess).getTarget().getName()="f_pos"
		and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfilp_3125
		and target_3.getRightOperand().(Literal).getValue()="256"
}

predicate func_4(Parameter vfilp_3125, FunctionCall target_4) {
		target_4.getTarget().hasName("get_proc_task")
		and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="d_inode"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="dentry"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="f_path"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfilp_3125
}

predicate func_5(Function func, Initializer target_5) {
		target_5.getExpr() instanceof SubExpr
		and target_5.getExpr().getEnclosingFunction() = func
}

predicate func_6(Function func, Initializer target_6) {
		target_6.getExpr() instanceof FunctionCall
		and target_6.getExpr().getEnclosingFunction() = func
}

predicate func_7(Parameter vfilp_3125, ValueFieldAccess target_7) {
		target_7.getTarget().getName()="dentry"
		and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="f_path"
		and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfilp_3125
}

predicate func_8(Parameter vfilp_3125, Variable vnr_3127, CommaExpr target_8) {
		target_8.getLeftOperand().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="f_pos"
		and target_8.getLeftOperand().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfilp_3125
		and target_8.getRightOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vnr_3127
}

predicate func_10(Variable vnr_3127, RelationalOperation target_10) {
		 (target_10 instanceof GTExpr or target_10 instanceof LTExpr)
		and target_10.getLesserOperand().(VariableAccess).getTarget()=vnr_3127
		and target_10.getGreaterOperand().(AddExpr).getValue()="1"
}

predicate func_12(Variable vreaper_3128, NotExpr target_12) {
		target_12.getOperand().(VariableAccess).getTarget()=vreaper_3128
}

from Function func, Parameter vfilp_3125, Variable vnr_3127, Variable vreaper_3128, SubExpr target_3, FunctionCall target_4, Initializer target_5, Initializer target_6, ValueFieldAccess target_7, CommaExpr target_8, RelationalOperation target_10, NotExpr target_12
where
not func_0(vfilp_3125, target_7, target_8, func)
and not func_1(vnr_3127, target_10, func)
and not func_2(vreaper_3128, target_12, func)
and func_3(vfilp_3125, target_3)
and func_4(vfilp_3125, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
and func_7(vfilp_3125, target_7)
and func_8(vfilp_3125, vnr_3127, target_8)
and func_10(vnr_3127, target_10)
and func_12(vreaper_3128, target_12)
and vfilp_3125.getType().hasName("file *")
and vnr_3127.getType().hasName("unsigned int")
and vreaper_3128.getType().hasName("task_struct *")
and vfilp_3125.getFunction() = func
and vnr_3127.(LocalVariable).getFunction() = func
and vreaper_3128.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
