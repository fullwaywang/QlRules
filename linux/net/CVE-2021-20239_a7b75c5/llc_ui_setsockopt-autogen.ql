/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-llc_ui_setsockopt
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/llc-ui-setsockopt
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/llc/af_llc.c-llc_ui_setsockopt CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v__val_gu_1066, VariableAccess target_0) {
	target_0.getTarget()=v__val_gu_1066
}

predicate func_1(Parameter voptval_1056, Variable vopt_1060, AsmStmt target_8, RelationalOperation target_12) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("copy_from_sockptr")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopt_1060
	and target_1.getArgument(1).(VariableAccess).getTarget()=voptval_1056
	and target_1.getArgument(2).(SizeofExprOperator).getValue()="4"
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getArgument(1).(VariableAccess).getLocation().isBefore(target_8.getChild(3).(VariableAccess).getLocation())
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_12.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable vopt_1060, Variable v__val_gu_1066, VariableAccess target_2) {
	target_2.getTarget()=vopt_1060
	and target_2.getParent().(AssignExpr).getLValue() = target_2
	and target_2.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1066
}

predicate func_3(Parameter voptval_1056, Variable vopt_1060, Variable v__ret_gu_1066, Variable v__val_gu_1066, Variable vcurrent_stack_pointer, StmtExpr target_3) {
	target_3.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(Literal).getValue()="0"
	and target_3.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_3.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_3.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(0).(VariableAccess).getTarget()=v__ret_gu_1066
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(1).(VariableAccess).getTarget()=v__val_gu_1066
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(3).(VariableAccess).getTarget()=voptval_1056
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(4).(SizeofExprOperator).getValue()="4"
	and target_3.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vopt_1060
	and target_3.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1066
	and target_3.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_3.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_1066
	and target_3.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getParent().(AssignExpr).getRValue() = target_3
	and target_3.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

/*predicate func_6(Function func, ExprStmt target_6) {
	target_6.getExpr().(Literal).getValue()="0"
	and target_6.getEnclosingFunction() = func
}

*/
/*predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_7.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_7.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(Parameter voptval_1056, Variable v__ret_gu_1066, Variable v__val_gu_1066, Variable vcurrent_stack_pointer, AsmStmt target_8) {
	target_8.getChild(0).(VariableAccess).getTarget()=v__ret_gu_1066
	and target_8.getChild(1).(VariableAccess).getTarget()=v__val_gu_1066
	and target_8.getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_8.getChild(3).(VariableAccess).getTarget()=voptval_1056
	and target_8.getChild(4).(SizeofExprOperator).getValue()="4"
}

predicate func_9(Parameter voptval_1056, PointerDereferenceExpr target_9) {
	target_9.getOperand().(VariableAccess).getTarget()=voptval_1056
}

/*predicate func_10(Variable vopt_1060, Variable v__val_gu_1066, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vopt_1060
	and target_10.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1066
}

*/
/*predicate func_11(Variable v__ret_gu_1066, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_1066
	and target_11.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

*/
predicate func_12(Variable vopt_1060, RelationalOperation target_12) {
	 (target_12 instanceof GTExpr or target_12 instanceof LTExpr)
	and target_12.getGreaterOperand().(VariableAccess).getTarget()=vopt_1060
	and target_12.getLesserOperand().(Literal).getValue()="100"
}

from Function func, Parameter voptval_1056, Variable vopt_1060, Variable v__ret_gu_1066, Variable v__val_gu_1066, Variable vcurrent_stack_pointer, VariableAccess target_0, VariableAccess target_2, StmtExpr target_3, AsmStmt target_8, PointerDereferenceExpr target_9, RelationalOperation target_12
where
func_0(v__val_gu_1066, target_0)
and not func_1(voptval_1056, vopt_1060, target_8, target_12)
and func_2(vopt_1060, v__val_gu_1066, target_2)
and func_3(voptval_1056, vopt_1060, v__ret_gu_1066, v__val_gu_1066, vcurrent_stack_pointer, target_3)
and func_8(voptval_1056, v__ret_gu_1066, v__val_gu_1066, vcurrent_stack_pointer, target_8)
and func_9(voptval_1056, target_9)
and func_12(vopt_1060, target_12)
and voptval_1056.getType().hasName("char *")
and vopt_1060.getType().hasName("unsigned int")
and v__ret_gu_1066.getType().hasName("int")
and v__val_gu_1066.getType().hasName("unsigned int")
and vcurrent_stack_pointer.getType().hasName("unsigned long")
and voptval_1056.getFunction() = func
and vopt_1060.(LocalVariable).getFunction() = func
and v__ret_gu_1066.(LocalVariable).getFunction() = func
and v__val_gu_1066.(LocalVariable).getFunction() = func
and not vcurrent_stack_pointer.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
