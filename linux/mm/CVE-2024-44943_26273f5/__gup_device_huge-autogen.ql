/**
 * @name linux-26273f5f4cf68b29414e403837093408a9c98e1f-__gup_device_huge
 * @id cpp/linux/26273f5f4cf68b29414e403837093408a9c98e1f/--gup-device-huge
 * @description linux-26273f5f4cf68b29414e403837093408a9c98e1f-mm/gup.c-__gup_device_huge CVE-2024-44943
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vflags_2680, Variable vpage_2687, FunctionCall target_0) {
	exists(NotExpr obj_0 | obj_0=target_0.getParent() |
		exists(NotExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getParent() |
				exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
					exists(FunctionCall obj_4 | obj_4=obj_3.getCondition() |
						obj_4.getTarget().hasName("__builtin_expect")
						and obj_4.getArgument(1).(Literal).getValue()="0"
					)
				)
			)
		)
	)
	and target_0.getTarget().hasName("try_grab_page")
	and not target_0.getTarget().hasName("try_grab_folio")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vpage_2687
	and target_0.getArgument(1).(VariableAccess).getTarget()=vflags_2680
}

predicate func_1(Variable vpage_2687) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("_compound_head")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vpage_2687
	and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
)
}

predicate func_3(Variable vpage_2687, VariableAccess target_3) {
	target_3.getTarget()=vpage_2687
	and target_3.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

from Function func, Parameter vflags_2680, Variable vpage_2687, FunctionCall target_0, VariableAccess target_3
where
func_0(vflags_2680, vpage_2687, target_0)
and not func_1(vpage_2687)
and func_3(vpage_2687, target_3)
and vflags_2680.getType().hasName("unsigned int")
and vpage_2687.getType().hasName("page *")
and vflags_2680.getFunction() = func
and vpage_2687.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
