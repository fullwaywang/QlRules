/**
 * @name linux-c6fa1de83fd87267ab24359e6fa52f98f5cee3f9-msm_mdss_parse_data_bus_icc_path
 * @id cpp/linux/c6fa1de83fd87267ab24359e6fa52f98f5cee3f9/msm-mdss-parse-data-bus-icc-path
 * @description linux-c6fa1de83fd87267ab24359e6fa52f98f5cee3f9-drivers/gpu/drm/msm/msm_mdss.c-msm_mdss_parse_data_bus_icc_path CVE-2022-48888
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpath0_49, IfStmt target_6, FunctionCall target_8, Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vpath0_49
		and obj_0.getRValue() instanceof FunctionCall
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_6.getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_8.getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vpath1_50, IfStmt target_9, NotExpr target_11, Function func) {
exists(ExprStmt target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vpath1_50
		and obj_0.getRValue() instanceof FunctionCall
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_9.getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_11.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Parameter vdev_46, FunctionCall target_2) {
	target_2.getTarget().hasName("of_icc_get")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vdev_46
	and target_2.getArgument(1).(StringLiteral).getValue()="mdp0-mem"
}

predicate func_3(Parameter vdev_46, FunctionCall target_3) {
	target_3.getTarget().hasName("of_icc_get")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vdev_46
	and target_3.getArgument(1).(StringLiteral).getValue()="mdp1-mem"
}

predicate func_4(Function func, Initializer target_4) {
	target_4.getExpr() instanceof FunctionCall
	and target_4.getExpr().getEnclosingFunction() = func
}

predicate func_5(Function func, Initializer target_5) {
	target_5.getExpr() instanceof FunctionCall
	and target_5.getExpr().getEnclosingFunction() = func
}

predicate func_6(Variable vpath0_49, IfStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getCondition() |
		obj_0.getTarget().hasName("IS_ERR_OR_NULL")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpath0_49
	)
	and exists(ReturnStmt obj_1 | obj_1=target_6.getThen() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getTarget().hasName("PTR_ERR_OR_ZERO")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vpath0_49
		)
	)
}

predicate func_8(Variable vpath0_49, FunctionCall target_8) {
	target_8.getTarget().hasName("IS_ERR_OR_NULL")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vpath0_49
}

predicate func_9(Variable vpath1_50, IfStmt target_9) {
	exists(NotExpr obj_0 | obj_0=target_9.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("IS_ERR_OR_NULL")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vpath1_50
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_9.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(AssignExpr obj_4 | obj_4=obj_3.getExpr() |
				exists(ArrayExpr obj_5 | obj_5=obj_4.getLValue() |
					exists(PointerFieldAccess obj_6 | obj_6=obj_5.getArrayBase() |
						obj_6.getTarget().getName()="path"
						and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("msm_mdss *")
					)
					and obj_5.getArrayOffset().(Literal).getValue()="1"
				)
				and obj_4.getRValue().(VariableAccess).getTarget()=vpath1_50
			)
		)
		and exists(ExprStmt obj_7 | obj_7=obj_2.getStmt(1) |
			exists(PostfixIncrExpr obj_8 | obj_8=obj_7.getExpr() |
				exists(PointerFieldAccess obj_9 | obj_9=obj_8.getOperand() |
					obj_9.getTarget().getName()="num_paths"
					and obj_9.getQualifier().(VariableAccess).getTarget().getType().hasName("msm_mdss *")
				)
			)
		)
	)
}

predicate func_11(Variable vpath1_50, NotExpr target_11) {
	exists(FunctionCall obj_0 | obj_0=target_11.getOperand() |
		obj_0.getTarget().hasName("IS_ERR_OR_NULL")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpath1_50
	)
}

from Function func, Variable vpath0_49, Variable vpath1_50, Parameter vdev_46, FunctionCall target_2, FunctionCall target_3, Initializer target_4, Initializer target_5, IfStmt target_6, FunctionCall target_8, IfStmt target_9, NotExpr target_11
where
not func_0(vpath0_49, target_6, target_8, func)
and not func_1(vpath1_50, target_9, target_11, func)
and func_2(vdev_46, target_2)
and func_3(vdev_46, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(vpath0_49, target_6)
and func_8(vpath0_49, target_8)
and func_9(vpath1_50, target_9)
and func_11(vpath1_50, target_11)
and vpath0_49.getType().hasName("icc_path *")
and vpath1_50.getType().hasName("icc_path *")
and vdev_46.getType().hasName("device *")
and vpath0_49.(LocalVariable).getFunction() = func
and vpath1_50.(LocalVariable).getFunction() = func
and vdev_46.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
