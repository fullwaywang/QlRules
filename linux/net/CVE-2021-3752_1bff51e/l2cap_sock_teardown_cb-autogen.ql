/**
 * @name linux-1bff51ea59a9afb67d2dd78518ab0582a54a472c-l2cap_sock_teardown_cb
 * @id cpp/linux/1bff51ea59a9afb67d2dd78518ab0582a54a472c/l2cap-sock-teardown-cb
 * @description linux-1bff51ea59a9afb67d2dd78518ab0582a54a472c-net/bluetooth/l2cap_sock.c-l2cap_sock_teardown_cb CVE-2021-3752
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_1516, DoStmt target_1, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vsk_1516
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, DoStmt target_1) {
	target_1.getCondition() instanceof Literal
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="chan %p state %s\n"
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("l2cap_chan *")
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getTarget().hasName("state_to_string")
	and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="state"
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vsk_1516, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("lock_sock_nested")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1516
	and target_3.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("atomic_read")
	and target_3.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nesting"
	and target_3.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("l2cap_chan *")
}

from Function func, Variable vsk_1516, DoStmt target_1, ExprStmt target_3
where
not func_0(vsk_1516, target_1, target_3, func)
and func_1(func, target_1)
and func_3(vsk_1516, target_3)
and vsk_1516.getType().hasName("sock *")
and vsk_1516.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
