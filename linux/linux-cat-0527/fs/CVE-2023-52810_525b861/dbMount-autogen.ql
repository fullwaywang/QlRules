/**
 * @name linux-525b861a008143048535011f3816d407940f4bfa-dbMount
 * @id cpp/linux/525b861a008143048535011f3816d407940f4bfa/dbmount
 * @description linux-525b861a008143048535011f3816d407940f4bfa-fs/jfs/jfs_dmap.c-dbMount CVE-2023-52810
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbmp_155, BlockStmt target_2, ExprStmt target_3, RelationalOperation target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof RelationalOperation
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getTarget().getName()="dn_l2nbperpage"
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="db_bmap"
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbmp_155
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vbmp_155, BlockStmt target_2, RelationalOperation target_1) {
	 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getGreaterOperand().(ValueFieldAccess).getTarget().getName()="dn_l2nbperpage"
	and target_1.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="db_bmap"
	and target_1.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbmp_155
	and target_1.getLesserOperand().(SubExpr).getValue()="3"
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(RelationalOperation target_1, Function func, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
	and target_2.getStmt(1).(GotoStmt).getName() ="err_release_metapage"
	and target_2.getParent().(IfStmt).getCondition()=target_1
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vbmp_155, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="dn_l2nbperpage"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="db_bmap"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbmp_155
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="dn_l2nbperpage"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dbmap_disk *")
}

from Function func, Variable vbmp_155, RelationalOperation target_1, BlockStmt target_2, ExprStmt target_3
where
not func_0(vbmp_155, target_2, target_3, target_1)
and func_1(vbmp_155, target_2, target_1)
and func_2(target_1, func, target_2)
and func_3(vbmp_155, target_3)
and vbmp_155.getType().hasName("bmap *")
and vbmp_155.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
