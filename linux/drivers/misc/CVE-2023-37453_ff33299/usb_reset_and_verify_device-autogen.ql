/**
 * @name linux-ff33299ec8bb80cdcc073ad9c506bd79bb2ed20b-usb_reset_and_verify_device
 * @id cpp/linux/ff33299ec8bb80cdcc073ad9c506bd79bb2ed20b/usb-reset-and-verify-device
 * @description linux-ff33299ec8bb80cdcc073ad9c506bd79bb2ed20b-drivers/usb/core/hub.c-usb_reset_and_verify_device CVE-2023-37453
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdescriptor_6025, Parameter vudev_6020, AddressOfExpr target_4) {
exists(AddressOfExpr target_0 |
	target_0.getOperand().(VariableAccess).getTarget()=vdescriptor_6025
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("hub_port_init")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("usb_hub *")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vudev_6020
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_0.getOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vudev_6020, Initializer target_1) {
	target_1.getExpr().(PointerFieldAccess).getTarget().getName()="descriptor"
	and target_1.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vudev_6020
}

predicate func_2(Variable vdescriptor_6025, Parameter vudev_6020, FunctionCall target_5, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="descriptor"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vudev_6020
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vdescriptor_6025
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vdescriptor_6025, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vdescriptor_6025
}

predicate func_5(Variable vdescriptor_6025, Parameter vudev_6020, FunctionCall target_5) {
	target_5.getTarget().hasName("descriptors_changed")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vudev_6020
	and target_5.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdescriptor_6025
	and target_5.getArgument(2).(VariableAccess).getTarget().getType().hasName("usb_host_bos *")
}

from Function func, Variable vdescriptor_6025, Parameter vudev_6020, Initializer target_1, ExprStmt target_2, AddressOfExpr target_4, FunctionCall target_5
where
not func_0(vdescriptor_6025, vudev_6020, target_4)
and func_1(vudev_6020, target_1)
and func_2(vdescriptor_6025, vudev_6020, target_5, target_2)
and func_4(vdescriptor_6025, target_4)
and func_5(vdescriptor_6025, vudev_6020, target_5)
and vdescriptor_6025.getType().hasName("usb_device_descriptor")
and vudev_6020.getType().hasName("usb_device *")
and vdescriptor_6025.(LocalVariable).getFunction() = func
and vudev_6020.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
