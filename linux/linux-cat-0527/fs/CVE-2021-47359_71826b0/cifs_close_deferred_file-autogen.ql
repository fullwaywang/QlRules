/**
 * @name linux-71826b068884050d5fdd37fda857ba1539c513d3-cifs_close_deferred_file
 * @id cpp/linux/71826b068884050d5fdd37fda857ba1539c513d3/cifs-close-deferred-file
 * @description linux-71826b068884050d5fdd37fda857ba1539c513d3-fs/cifs/misc.c-cifs_close_deferred_file CVE-2021-47359
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_2, Function func) {
exists(BreakStmt target_0 |
	target_0.getParent().(IfStmt).getCondition()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(EqualityOperation target_2, Function func, ContinueStmt target_1) {
	target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("file_list *")
	and target_2.getRightOperand().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

from Function func, ContinueStmt target_1, EqualityOperation target_2
where
not func_0(target_2, func)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
