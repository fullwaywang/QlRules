/**
 * @name linux-d01ffb9eee4af165d83b08dd73ebdf9fe94a519b-ax25_dev_device_down
 * @id cpp/linux/d01ffb9eee4af165d83b08dd73ebdf9fe94a519b/ax25-dev-device-down
 * @description linux-d01ffb9eee4af165d83b08dd73ebdf9fe94a519b-ax25_dev_device_down CVE-2022-1204
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vax25_dev_93, FunctionCall target_0) {
		target_0.getTarget().hasName("kfree")
		and not target_0.getTarget().hasName("ax25_dev_put")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vax25_dev_93
}

predicate func_1(Variable vax25_dev_93, FunctionCall target_1) {
		target_1.getTarget().hasName("kfree")
		and not target_1.getTarget().hasName("ax25_dev_put")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vax25_dev_93
}

predicate func_2(Variable vax25_dev_93, EqualityOperation target_5, ExprStmt target_6, AddressOfExpr target_7) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("ax25_dev_put")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vax25_dev_93
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vax25_dev_93, EqualityOperation target_5, AddressOfExpr target_7) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(FunctionCall).getTarget().hasName("ax25_dev_put")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vax25_dev_93
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Variable vax25_dev_93, Function func) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(FunctionCall).getTarget().hasName("ax25_dev_put")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vax25_dev_93
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4)
}

predicate func_5(Variable vax25_dev_93, EqualityOperation target_5) {
		target_5.getAnOperand().(PointerFieldAccess).getTarget().getName()="next"
		and target_5.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
		and target_5.getAnOperand().(VariableAccess).getTarget()=vax25_dev_93
}

predicate func_6(Variable vax25_dev_93, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="next"
		and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
		and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="next"
		and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_93
}

predicate func_7(Variable vax25_dev_93, AddressOfExpr target_7) {
		target_7.getOperand().(PointerFieldAccess).getTarget().getName()="dev_tracker"
		and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_93
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_put_track")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net_device *")
}

from Function func, Variable vax25_dev_93, FunctionCall target_0, FunctionCall target_1, EqualityOperation target_5, ExprStmt target_6, AddressOfExpr target_7
where
func_0(vax25_dev_93, target_0)
and func_1(vax25_dev_93, target_1)
and not func_2(vax25_dev_93, target_5, target_6, target_7)
and not func_3(vax25_dev_93, target_5, target_7)
and not func_4(vax25_dev_93, func)
and func_5(vax25_dev_93, target_5)
and func_6(vax25_dev_93, target_6)
and func_7(vax25_dev_93, target_7)
and vax25_dev_93.getType().hasName("ax25_dev *")
and vax25_dev_93.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
