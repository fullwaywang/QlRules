/**
 * @name linux-94b16ca86ab688ed6fad4548f70137f93cf1f0a9-stm32_usbphyc_pll_enable
 * @id cpp/linux/94b16ca86ab688ed6fad4548f70137f93cf1f0a9/stm32-usbphyc-pll-enable
 * @description linux-94b16ca86ab688ed6fad4548f70137f93cf1f0a9-drivers/phy/st/phy-stm32-usbphyc.c-stm32_usbphyc_pll_enable CVE-2022-48820
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(VariableAccess target_2, Function func) {
exists(GotoStmt target_0 |
	target_0.getName() ="dec_n_pll_cons"
	and target_0.getParent().(IfStmt).getCondition()=target_2
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Variable vret_210, VariableAccess target_2, IfStmt target_3, ReturnStmt target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=vret_210
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_3.getCondition().(VariableAccess).getLocation().isBefore(target_1.getExpr().(VariableAccess).getLocation())
}

predicate func_2(Variable vret_210, ReturnStmt target_1, VariableAccess target_2) {
	target_2.getTarget()=vret_210
	and target_2.getParent().(IfStmt).getThen()=target_1
}

predicate func_3(Variable vret_210, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget()=vret_210
	and target_3.getThen() instanceof ReturnStmt
}

from Function func, Variable vret_210, ReturnStmt target_1, VariableAccess target_2, IfStmt target_3
where
not func_0(target_2, func)
and func_1(vret_210, target_2, target_3, target_1)
and func_2(vret_210, target_1, target_2)
and func_3(vret_210, target_3)
and vret_210.getType().hasName("int")
and vret_210.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
