/**
 * @name linux-b01a74b3ca6fd51b62c67733ba7c3280fa6c5d26-sta_info_free
 * @id cpp/linux/b01a74b3ca6fd51b62c67733ba7c3280fa6c5d26/sta-info-free
 * @description linux-b01a74b3ca6fd51b62c67733ba7c3280fa6c5d26-net/mac80211/sta_info.c-sta_info_free CVE-2024-35838
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="3710"
	and not target_0.getValue()="3712"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="3711"
	and not target_1.getValue()="3713"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="3712"
	and not target_2.getValue()="3714"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="3713"
	and not target_3.getValue()="3715"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, Literal target_4) {
	target_4.getValue()="3714"
	and not target_4.getValue()="3716"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, Literal target_5) {
	target_5.getValue()="3715"
	and not target_5.getValue()="3717"
	and target_5.getEnclosingFunction() = func
}

/*predicate func_6(Function func, Initializer target_6) {
	target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="rates"
	and target_6.getExpr().getEnclosingFunction() = func
}

*/
predicate func_7(Variable v__UNIQUE_ID_rcu3716_437, VariableAccess target_7) {
	target_7.getTarget()=v__UNIQUE_ID_rcu3716_437
	and target_7.getParent().(ExprStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
}

predicate func_8(IfStmt target_19, Function func) {
exists(ExprStmt target_8 |
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("link_sta_info *")
	and target_8.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(VariableAccess).getType().hasName("link_sta_info *")
	and target_8.getLocation().isBefore(target_19.getLocation())
	and target_8.getEnclosingFunction() = func)
}

predicate func_10(Function func) {
exists(ExprStmt target_10 |
	target_10.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="3716"
	and target_10.getEnclosingFunction() = func)
}

predicate func_11(Function func) {
exists(ExprStmt target_11 |
	target_11.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="3717"
	and target_11.getEnclosingFunction() = func)
}

predicate func_12(Function func, ExprStmt target_12) {
	target_12.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Function func, ExprStmt target_13) {
	target_13.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Function func, ExprStmt target_14) {
	target_14.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Function func, ExprStmt target_15) {
	target_15.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Parameter vsta_402, VariableAccess target_16) {
	target_16.getTarget()=vsta_402
}

predicate func_17(Variable vi_404, VariableAccess target_17) {
	target_17.getTarget()=vi_404
}

predicate func_18(Parameter vsta_402, Variable vi_404, BitwiseAndExpr target_18) {
	target_18.getLeftOperand().(ValueFieldAccess).getTarget().getName()="valid_links"
	and target_18.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sta"
	and target_18.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsta_402
	and target_18.getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(Literal).getValue()="1"
	and target_18.getRightOperand().(BinaryBitwiseOperation).getRightOperand().(VariableAccess).getTarget()=vi_404
	and target_18.getParent().(NotExpr).getParent().(IfStmt).getThen() instanceof ContinueStmt
}

predicate func_19(Function func, IfStmt target_19) {
	target_19.getCondition().(NotExpr).getOperand() instanceof BitwiseAndExpr
	and target_19.getEnclosingFunction() = func
}

from Function func, Parameter vsta_402, Variable vi_404, Variable v__UNIQUE_ID_rcu3716_437, Literal target_0, Literal target_1, Literal target_2, Literal target_3, Literal target_4, Literal target_5, VariableAccess target_7, ExprStmt target_12, ExprStmt target_13, ExprStmt target_14, ExprStmt target_15, VariableAccess target_16, VariableAccess target_17, BitwiseAndExpr target_18, IfStmt target_19
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_7(v__UNIQUE_ID_rcu3716_437, target_7)
and not func_8(target_19, func)
and not func_10(func)
and not func_11(func)
and func_12(func, target_12)
and func_13(func, target_13)
and func_14(func, target_14)
and func_15(func, target_15)
and func_16(vsta_402, target_16)
and func_17(vi_404, target_17)
and func_18(vsta_402, vi_404, target_18)
and func_19(func, target_19)
and vsta_402.getType().hasName("sta_info *")
and vi_404.getType().hasName("int")
and v__UNIQUE_ID_rcu3716_437.getType().hasName("ieee80211_sta_rates *")
and vsta_402.getFunction() = func
and vi_404.(LocalVariable).getFunction() = func
and v__UNIQUE_ID_rcu3716_437.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
