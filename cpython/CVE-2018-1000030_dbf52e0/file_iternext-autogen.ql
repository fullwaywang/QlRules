/**
 * @name cpython-dbf52e02f18dac6f5f0a64f78932f3dc6efc056b-file_iternext
 * @id cpp/cpython/dbf52e02f18dac6f5f0a64f78932f3dc6efc056b/file-iternext
 * @description cpython-dbf52e02f18dac6f5f0a64f78932f3dc6efc056b-Objects/fileobject.c-file_iternext CVE-2018-1000030
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vf_2350) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="f_buf"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vf_2350
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0")
}

predicate func_1(Variable vl_2352, Parameter vf_2350, LogicalOrExpr target_8) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vl_2352
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("readahead_get_line_skip")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vf_2350
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("readaheadbuffer")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="8192"
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_8.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation()))
}

/*predicate func_2(Parameter vf_2350) {
	exists(AddressOfExpr target_2 |
		target_2.getOperand().(VariableAccess).getType().hasName("readaheadbuffer")
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("readahead_get_line_skip")
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vf_2350
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="8192")
}

*/
predicate func_3(Parameter vf_2350, ExprStmt target_9) {
	exists(FunctionCall target_3 |
		target_3.getTarget().hasName("drop_file_readahead")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vf_2350
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Parameter vf_2350) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="f_buf"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vf_2350
		and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="buf"
		and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("readaheadbuffer"))
}

predicate func_5(Parameter vf_2350) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="f_bufptr"
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vf_2350
		and target_5.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="bufptr"
		and target_5.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("readaheadbuffer"))
}

predicate func_6(Parameter vf_2350) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="f_bufend"
		and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vf_2350
		and target_6.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="bufend"
		and target_6.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("readaheadbuffer"))
}

predicate func_8(Variable vl_2352, LogicalOrExpr target_8) {
		target_8.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vl_2352
		and target_8.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_8.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="ob_size"
		and target_8.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vl_2352
		and target_8.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
}

predicate func_9(Variable vl_2352, Parameter vf_2350, ExprStmt target_9) {
		target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vl_2352
		and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("readahead_get_line_skip")
		and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vf_2350
		and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="8192"
}

from Function func, Variable vl_2352, Parameter vf_2350, LogicalOrExpr target_8, ExprStmt target_9
where
not func_0(vf_2350)
and not func_1(vl_2352, vf_2350, target_8)
and not func_3(vf_2350, target_9)
and not func_4(vf_2350)
and not func_5(vf_2350)
and not func_6(vf_2350)
and func_8(vl_2352, target_8)
and func_9(vl_2352, vf_2350, target_9)
and vl_2352.getType().hasName("PyStringObject *")
and vf_2350.getType().hasName("PyFileObject *")
and vl_2352.(LocalVariable).getFunction() = func
and vf_2350.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
