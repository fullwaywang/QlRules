/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-dccp_setsockopt_service
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/dccp-setsockopt-service
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/dccp/proto.c-dccp_setsockopt_service CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptval_414, RelationalOperation target_6) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("sockptr_advance")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=voptval_414
	and target_0.getExpr().(FunctionCall).getArgument(1) instanceof SizeofExprOperator
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6)
}

predicate func_1(Parameter voptval_414, Variable vsl_417, BlockStmt target_7, PointerArithmeticOperation target_8, LogicalOrExpr target_9) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("copy_from_sockptr")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="dccpsl_list"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsl_417
	and target_1.getArgument(1).(VariableAccess).getTarget()=voptval_414
	and target_1.getArgument(2) instanceof SubExpr
	and target_1.getParent().(LogicalOrExpr).getLeftOperand() instanceof FunctionCall
	and target_1.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("dccp_list_has_service")
	and target_1.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsl_417
	and target_1.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("__builtin_bswap32")
	and target_1.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(1).(FunctionCall).getValue()="4294967295"
	and target_1.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_7
	and target_1.getArgument(1).(VariableAccess).getLocation().isBefore(target_8.getLeftOperand().(VariableAccess).getLocation())
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_9.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vsl_417, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="dccpsl_list"
	and target_2.getQualifier().(VariableAccess).getTarget()=vsl_417
	and target_2.getParent().(FunctionCall).getParent().(LogicalOrExpr).getLeftOperand() instanceof FunctionCall
}

predicate func_3(Function func, SizeofExprOperator target_3) {
	target_3.getValue()="4"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter voptlen_414, SubExpr target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget()=voptlen_414
	and target_4.getRightOperand().(SizeofExprOperator).getValue()="4"
	and target_4.getParent().(FunctionCall).getParent().(LogicalOrExpr).getLeftOperand() instanceof FunctionCall
}

predicate func_5(Parameter voptval_414, Variable vsl_417, BlockStmt target_7, FunctionCall target_5) {
	target_5.getTarget().hasName("copy_from_user")
	and target_5.getArgument(0).(PointerFieldAccess).getTarget().getName()="dccpsl_list"
	and target_5.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsl_417
	and target_5.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=voptval_414
	and target_5.getArgument(1).(PointerArithmeticOperation).getRightOperand() instanceof SizeofExprOperator
	and target_5.getArgument(2) instanceof SubExpr
	and target_5.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("dccp_list_has_service")
	and target_5.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsl_417
	and target_5.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("__builtin_bswap32")
	and target_5.getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(1).(FunctionCall).getValue()="4294967295"
	and target_5.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_7
}

predicate func_6(Parameter voptlen_414, RelationalOperation target_6) {
	 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
	and target_6.getGreaterOperand().(VariableAccess).getTarget()=voptlen_414
	and target_6.getLesserOperand().(SizeofExprOperator).getValue()="4"
}

predicate func_7(Variable vsl_417, BlockStmt target_7) {
	target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsl_417
	and target_7.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
}

predicate func_8(Parameter voptval_414, PointerArithmeticOperation target_8) {
	target_8.getLeftOperand().(VariableAccess).getTarget()=voptval_414
	and target_8.getRightOperand() instanceof SizeofExprOperator
}

predicate func_9(Variable vsl_417, LogicalOrExpr target_9) {
	target_9.getLeftOperand() instanceof FunctionCall
	and target_9.getRightOperand().(FunctionCall).getTarget().hasName("dccp_list_has_service")
	and target_9.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsl_417
	and target_9.getRightOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("__builtin_bswap32")
	and target_9.getRightOperand().(FunctionCall).getArgument(1).(FunctionCall).getValue()="4294967295"
}

from Function func, Parameter voptval_414, Parameter voptlen_414, Variable vsl_417, PointerFieldAccess target_2, SizeofExprOperator target_3, SubExpr target_4, FunctionCall target_5, RelationalOperation target_6, BlockStmt target_7, PointerArithmeticOperation target_8, LogicalOrExpr target_9
where
not func_0(voptval_414, target_6)
and not func_1(voptval_414, vsl_417, target_7, target_8, target_9)
and func_2(vsl_417, target_2)
and func_3(func, target_3)
and func_4(voptlen_414, target_4)
and func_5(voptval_414, vsl_417, target_7, target_5)
and func_6(voptlen_414, target_6)
and func_7(vsl_417, target_7)
and func_8(voptval_414, target_8)
and func_9(vsl_417, target_9)
and voptval_414.getType().hasName("char *")
and voptlen_414.getType().hasName("unsigned int")
and vsl_417.getType().hasName("dccp_service_list *")
and voptval_414.getFunction() = func
and voptlen_414.getFunction() = func
and vsl_417.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
