/**
 * @name linux-7ac9578e45b20e3f3c0c8eb71f5417a499a7226a-vmw_resource_context_res_add
 * @id cpp/linux/7ac9578e45b20e3f3c0c8eb71f5417a499a7226a/vmw-resource-context-res-add
 * @description linux-7ac9578e45b20e3f3c0c8eb71f5417a499a7226a-drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c-vmw_resource_context_res_add CVE-2022-48887
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsw_context_459, Variable vres_465, FunctionCall target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_0.getTarget().hasName("vmw_execbuf_res_noctx_val_add")
	and not target_0.getTarget().hasName("vmw_execbuf_res_val_add")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsw_context_459
	and target_0.getArgument(1).(VariableAccess).getTarget()=vres_465
	and target_0.getArgument(2).(BinaryBitwiseOperation).getValue()="1"
}

predicate func_1(Parameter vsw_context_459, Variable ventry_463, FunctionCall target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getArgument(1) |
		obj_0.getTarget().getName()="res"
		and obj_0.getQualifier().(VariableAccess).getTarget()=ventry_463
	)
	and exists(FunctionCall obj_1 | obj_1=target_1.getArgument(2) |
		exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
			obj_2.getTarget().getName()="bt"
			and obj_2.getQualifier().(VariableAccess).getTarget()=ventry_463
		)
		and obj_1.getTarget().hasName("vmw_binding_dirtying")
	)
	and exists(AssignExpr obj_3 | obj_3=target_1.getParent() |
		obj_3.getRValue() = target_1
		and obj_3.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_1.getTarget().hasName("vmw_execbuf_res_noctx_val_add")
	and not target_1.getTarget().hasName("vmw_execbuf_res_val_add")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vsw_context_459
}

from Function func, Parameter vsw_context_459, Variable ventry_463, Variable vres_465, FunctionCall target_0, FunctionCall target_1
where
func_0(vsw_context_459, vres_465, target_0)
and func_1(vsw_context_459, ventry_463, target_1)
and vsw_context_459.getType().hasName("vmw_sw_context *")
and ventry_463.getType().hasName("vmw_ctx_bindinfo *")
and vres_465.getType().hasName("vmw_resource *")
and vsw_context_459.getFunction() = func
and ventry_463.(LocalVariable).getFunction() = func
and vres_465.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
