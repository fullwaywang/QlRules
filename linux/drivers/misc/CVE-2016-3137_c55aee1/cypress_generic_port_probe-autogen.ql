/**
 * @name linux-c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754-cypress_generic_port_probe
 * @id cpp/linux/c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754/cypress-generic-port-probe
 * @description linux-c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754-drivers/usb/serial/cypress_m8.c-cypress_generic_port_probe CVE-2016-3137
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vport_445, ExprStmt target_1, RelationalOperation target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="interrupt_out_urb"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_445
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="interrupt_in_urb"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_445
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_err")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_445
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="required endpoint is missing\n"
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("cypress_private *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kzalloc")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofTypeOperator).getValue()="208"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="37748928"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vport_445, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="interrupt_out_size"
	and target_2.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_445
	and target_2.getLesserOperand().(Literal).getValue()="9"
}

from Function func, Parameter vport_445, ExprStmt target_1, RelationalOperation target_2
where
not func_0(vport_445, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vport_445, target_2)
and vport_445.getType().hasName("usb_serial_port *")
and vport_445.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
