/**
 * @name linux-c52873e5a1ef72f845526d9f6a50704433f9c625-acm_probe
 * @id cpp/linux/c52873e5a1ef72f845526d9f6a50704433f9c625/acm-probe
 * @description linux-c52873e5a1ef72f845526d9f6a50704433f9c625-drivers/usb/class/cdc-acm.c-acm_probe CVE-2019-19530
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vacm_1131, ExprStmt target_2, AddressOfExpr target_3) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="control"
		and target_0.getQualifier().(VariableAccess).getTarget()=vacm_1131
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation())
		and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vcontrol_interface_1124, ExprStmt target_4, AddressOfExpr target_5, VariableAccess target_1) {
		target_1.getTarget()=vcontrol_interface_1124
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("usb_get_intf")
		and target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_1.getLocation())
		and target_1.getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_2(Variable vacm_1131, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("usb_set_intfdata")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("usb_interface *")
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vacm_1131
}

predicate func_3(Variable vcontrol_interface_1124, Variable vacm_1131, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="port"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vacm_1131
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("tty_port_register_device")
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("tty_driver *")
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcontrol_interface_1124
}

predicate func_4(Variable vcontrol_interface_1124, Variable vacm_1131, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="control"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vacm_1131
		and target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vcontrol_interface_1124
}

predicate func_5(Variable vcontrol_interface_1124, AddressOfExpr target_5) {
		target_5.getOperand().(PointerFieldAccess).getTarget().getName()="dev"
		and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcontrol_interface_1124
}

from Function func, Variable vcontrol_interface_1124, Variable vacm_1131, VariableAccess target_1, ExprStmt target_2, AddressOfExpr target_3, ExprStmt target_4, AddressOfExpr target_5
where
not func_0(vacm_1131, target_2, target_3)
and func_1(vcontrol_interface_1124, target_4, target_5, target_1)
and func_2(vacm_1131, target_2)
and func_3(vcontrol_interface_1124, vacm_1131, target_3)
and func_4(vcontrol_interface_1124, vacm_1131, target_4)
and func_5(vcontrol_interface_1124, target_5)
and vcontrol_interface_1124.getType().hasName("usb_interface *")
and vacm_1131.getType().hasName("acm *")
and vcontrol_interface_1124.(LocalVariable).getFunction() = func
and vacm_1131.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
