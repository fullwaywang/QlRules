/**
 * @name linux-84c4e1f89fefe70554da0ab33be72c9be7994379-aio_read
 * @id cpp/linux/84c4e1f89fefe70554da0ab33be72c9be7994379/aio-read
 * @description linux-84c4e1f89fefe70554da0ab33be72c9be7994379-fs/aio.c-aio_read CVE-2019-10125
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="0"
	and not target_0.getValue()="22"
	and target_0.getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
	and target_0.getEnclosingFunction() = func
}

predicate func_1(FunctionCall target_12, Function func) {
exists(ReturnStmt target_1 |
	target_1.getExpr() instanceof UnaryMinusExpr
	and target_1.getParent().(IfStmt).getCondition()=target_12
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(FunctionCall target_13, Function func) {
exists(ReturnStmt target_2 |
	target_2.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_2.getParent().(IfStmt).getCondition()=target_13
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vret_1518, ExprStmt target_14, ReturnStmt target_5, Function func) {
exists(ReturnStmt target_3 |
	target_3.getExpr().(VariableAccess).getTarget()=vret_1518
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_14.getLocation())
	and target_3.getExpr().(VariableAccess).getLocation().isBefore(target_5.getExpr().(VariableAccess).getLocation()))
}

predicate func_4(Variable vret_1518, UnaryMinusExpr target_4) {
	target_4.getValue()="-9"
	and target_4.getParent().(AssignExpr).getRValue() = target_4
	and target_4.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1518
}

predicate func_5(Variable vret_1518, Function func, ReturnStmt target_5) {
	target_5.getExpr().(VariableAccess).getTarget()=vret_1518
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vret_1518, VariableAccess target_6) {
	target_6.getTarget()=vret_1518
	and target_6.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
}

predicate func_7(Variable vret_1518, Function func, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1518
	and target_7.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(FunctionCall target_12, Function func, GotoStmt target_8) {
	target_8.getName() ="out_fput"
	and target_8.getParent().(IfStmt).getCondition()=target_12
	and target_8.getEnclosingFunction() = func
}

predicate func_9(FunctionCall target_13, Function func, GotoStmt target_9) {
	target_9.getName() ="out_fput"
	and target_9.getParent().(IfStmt).getCondition()=target_13
	and target_9.getEnclosingFunction() = func
}

predicate func_10(VariableAccess target_15, Function func, GotoStmt target_10) {
	target_10.getName() ="out_fput"
	and target_10.getParent().(IfStmt).getCondition()=target_15
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vfile_1517, Variable vret_1518, Function func, IfStmt target_11) {
	target_11.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_11.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vret_1518
	and target_11.getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_11.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fput")
	and target_11.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_1517
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Variable vfile_1517, FunctionCall target_12) {
	target_12.getTarget().hasName("__builtin_expect")
	and target_12.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="f_mode"
	and target_12.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_1517
	and target_12.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_12.getArgument(1).(Literal).getValue()="0"
}

predicate func_13(Variable vfile_1517, FunctionCall target_13) {
	target_13.getTarget().hasName("__builtin_expect")
	and target_13.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="read_iter"
	and target_13.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="f_op"
	and target_13.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_1517
	and target_13.getArgument(1).(Literal).getValue()="0"
}

predicate func_14(Function func, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("iovec *")
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vret_1518, VariableAccess target_15) {
	target_15.getTarget()=vret_1518
	and target_15.getParent().(IfStmt).getThen() instanceof GotoStmt
}

from Function func, Variable vfile_1517, Variable vret_1518, Literal target_0, UnaryMinusExpr target_4, ReturnStmt target_5, VariableAccess target_6, ExprStmt target_7, GotoStmt target_8, GotoStmt target_9, GotoStmt target_10, IfStmt target_11, FunctionCall target_12, FunctionCall target_13, ExprStmt target_14, VariableAccess target_15
where
func_0(func, target_0)
and not func_1(target_12, func)
and not func_2(target_13, func)
and not func_3(vret_1518, target_14, target_5, func)
and func_4(vret_1518, target_4)
and func_5(vret_1518, func, target_5)
and func_6(vret_1518, target_6)
and func_7(vret_1518, func, target_7)
and func_8(target_12, func, target_8)
and func_9(target_13, func, target_9)
and func_10(target_15, func, target_10)
and func_11(vfile_1517, vret_1518, func, target_11)
and func_12(vfile_1517, target_12)
and func_13(vfile_1517, target_13)
and func_14(func, target_14)
and func_15(vret_1518, target_15)
and vfile_1517.getType().hasName("file *")
and vret_1518.getType().hasName("ssize_t")
and vfile_1517.(LocalVariable).getFunction() = func
and vret_1518.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
