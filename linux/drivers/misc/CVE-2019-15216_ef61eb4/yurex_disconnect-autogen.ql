/**
 * @name linux-ef61eb43ada6c1d6b94668f0f514e4c268093ff3-yurex_disconnect
 * @id cpp/linux/ef61eb43ada6c1d6b94668f0f514e4c268093ff3/yurex-disconnect
 * @description linux-ef61eb43ada6c1d6b94668f0f514e4c268093ff3-drivers/usb/misc/yurex.c-yurex_disconnect CVE-2019-15216
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdev_307, ExprStmt target_1, ExprStmt target_2, AddressOfExpr target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("usb_poison_urb")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="urb"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_307
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vdev_307, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="io_mutex"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_307
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_2(Variable vdev_307, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdev_307
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("usb_get_intfdata")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("usb_interface *")
}

predicate func_3(Variable vdev_307, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="io_mutex"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_307
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Variable vdev_307, ExprStmt target_1, ExprStmt target_2, AddressOfExpr target_3
where
not func_0(vdev_307, target_1, target_2, target_3, func)
and func_1(vdev_307, target_1)
and func_2(vdev_307, target_2)
and func_3(vdev_307, target_3)
and vdev_307.getType().hasName("usb_yurex *")
and vdev_307.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
