/**
 * @name linux-4ea77014af0d6205b05503d1c7aac6eace11d473-kill_something_info
 * @id cpp/linux/4ea77014af0d6205b05503d1c7aac6eace11d473/kill-something-info
 * @description linux-4ea77014af0d6205b05503d1c7aac6eace11d473-kernel/signal.c-kill_something_info CVE-2018-10124
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpid_1394, FunctionCall target_1, EqualityOperation target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vpid_1394
		and target_0.getCondition().(EqualityOperation).getAnOperand().(SubExpr).getValue()="-2147483648"
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-3"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_2.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpid_1394, FunctionCall target_1) {
		target_1.getTarget().hasName("find_vpid")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vpid_1394
}

predicate func_2(Parameter vpid_1394, EqualityOperation target_2) {
		target_2.getAnOperand().(VariableAccess).getTarget()=vpid_1394
		and target_2.getAnOperand().(UnaryMinusExpr).getValue()="-1"
}

from Function func, Parameter vpid_1394, FunctionCall target_1, EqualityOperation target_2
where
not func_0(vpid_1394, target_1, target_2, func)
and func_1(vpid_1394, target_1)
and func_2(vpid_1394, target_2)
and vpid_1394.getType().hasName("pid_t")
and vpid_1394.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
