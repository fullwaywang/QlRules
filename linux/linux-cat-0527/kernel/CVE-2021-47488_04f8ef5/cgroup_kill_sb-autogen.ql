/**
 * @name linux-04f8ef5643bcd8bcde25dfdebef998aea480b2ba-cgroup_kill_sb
 * @id cpp/linux/04f8ef5643bcd8bcde25dfdebef998aea480b2ba/cgroup-kill-sb
 * @description linux-04f8ef5643bcd8bcde25dfdebef998aea480b2ba-kernel/cgroup/cgroup.c-cgroup_kill_sb CVE-2021-47488
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vroot_2181, LogicalAndExpr target_2, AddressOfExpr target_3, AddressOfExpr target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("cgroup_bpf_offline")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgrp"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vroot_2181
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vroot_2181, LogicalAndExpr target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("percpu_ref_kill")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="refcnt"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="self"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cgrp"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vroot_2181
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vroot_2181, LogicalAndExpr target_2) {
	target_2.getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("list_empty")
	and target_2.getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="children"
	and target_2.getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="self"
	and target_2.getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cgrp"
	and target_2.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vroot_2181
	and target_2.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("cgroup_root")
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("percpu_ref_is_dying")
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="refcnt"
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="self"
	and target_2.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cgrp"
}

predicate func_3(Variable vroot_2181, AddressOfExpr target_3) {
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="refcnt"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="self"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cgrp"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vroot_2181
}

predicate func_4(Variable vroot_2181, AddressOfExpr target_4) {
	target_4.getOperand().(ValueFieldAccess).getTarget().getName()="refcnt"
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="self"
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cgrp"
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vroot_2181
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("percpu_ref_kill")
}

from Function func, Variable vroot_2181, ExprStmt target_1, LogicalAndExpr target_2, AddressOfExpr target_3, AddressOfExpr target_4
where
not func_0(vroot_2181, target_2, target_3, target_4)
and func_1(vroot_2181, target_2, target_1)
and func_2(vroot_2181, target_2)
and func_3(vroot_2181, target_3)
and func_4(vroot_2181, target_4)
and vroot_2181.getType().hasName("cgroup_root *")
and vroot_2181.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
