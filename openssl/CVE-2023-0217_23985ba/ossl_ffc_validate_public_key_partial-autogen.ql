/**
 * @name openssl-23985bac83fd50c8e29431009302b5442f985096-ossl_ffc_validate_public_key_partial
 * @id cpp/openssl/23985bac83fd50c8e29431009302b5442f985096/ossl-ffc-validate-public-key-partial
 * @description openssl-23985bac83fd50c8e29431009302b5442f985096-crypto/ffc/ffc_key_validate.c-ossl_ffc_validate_public_key_partial CVE-2023-0217
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpub_key_20, Parameter vret_20, Parameter vparams_19, RelationalOperation target_1, ExprStmt target_2, ExprStmt target_3, LogicalOrExpr target_4, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vparams_19
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vpub_key_20
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="p"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparams_19
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vret_20
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="64"
		and target_0.getThen().(BlockStmt).getStmt(1) instanceof ReturnStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_1.getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_2.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignOrExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_4.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpub_key_20, RelationalOperation target_1) {
		 (target_1 instanceof GEExpr or target_1 instanceof LEExpr)
		and target_1.getLesserOperand().(FunctionCall).getTarget().hasName("BN_cmp")
		and target_1.getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpub_key_20
		and target_1.getLesserOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("BIGNUM *")
		and target_1.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_2(Parameter vret_20, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vret_20
		and target_2.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_3(Parameter vret_20, ExprStmt target_3) {
		target_3.getExpr().(AssignOrExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vret_20
		and target_3.getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="1"
}

predicate func_4(Parameter vparams_19, LogicalOrExpr target_4) {
		target_4.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("BN_copy")
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("BIGNUM *")
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="p"
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparams_19
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_4.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("BN_sub_word")
		and target_4.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("BIGNUM *")
		and target_4.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="1"
}

from Function func, Parameter vpub_key_20, Parameter vret_20, Parameter vparams_19, RelationalOperation target_1, ExprStmt target_2, ExprStmt target_3, LogicalOrExpr target_4
where
not func_0(vpub_key_20, vret_20, vparams_19, target_1, target_2, target_3, target_4, func)
and func_1(vpub_key_20, target_1)
and func_2(vret_20, target_2)
and func_3(vret_20, target_3)
and func_4(vparams_19, target_4)
and vpub_key_20.getType().hasName("const BIGNUM *")
and vret_20.getType().hasName("int *")
and vparams_19.getType().hasName("const FFC_PARAMS *")
and vpub_key_20.getFunction() = func
and vret_20.getFunction() = func
and vparams_19.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
