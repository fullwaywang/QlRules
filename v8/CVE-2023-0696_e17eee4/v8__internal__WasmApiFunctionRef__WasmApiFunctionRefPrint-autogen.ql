/**
 * @name v8-e17eee4894be67f715a7b2d7f17d8b69724f1cf8-v8__internal__WasmApiFunctionRef__WasmApiFunctionRefPrint
 * @id cpp/v8/e17eee4894be67f715a7b2d7f17d8b69724f1cf8/v8internalwasmapifunctionrefwasmapifunctionrefprint
 * @description v8-e17eee4894be67f715a7b2d7f17d8b69724f1cf8-src/diagnostics/objects-printer.cc-v8__internal__WasmApiFunctionRef__WasmApiFunctionRefPrint CVE-2023-0696
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vos_2154, ExprStmt target_1, FunctionCall target_2, FunctionCall target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("operator<<")
	and target_0.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("operator<<")
	and target_0.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vos_2154
	and target_0.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(1).(StringLiteral).getValue()="\n - instance: "
	and target_0.getExpr().(FunctionCall).getArgument(1).(ConstructorCall).getArgument(0).(FunctionCall).getTarget().hasName("instance")
	and target_0.getExpr().(FunctionCall).getArgument(1).(ConstructorCall).getArgument(0).(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vos_2154, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("operator<<")
	and target_1.getExpr().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("operator<<")
	and target_1.getExpr().(FunctionCall).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vos_2154
	and target_1.getExpr().(FunctionCall).getQualifier().(FunctionCall).getArgument(1).(StringLiteral).getValue()="\n - suspend: "
	and target_1.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("suspend")
	and target_1.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
}

predicate func_2(Parameter vos_2154, FunctionCall target_2) {
	target_2.getTarget().hasName("operator<<")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vos_2154
	and target_2.getArgument(1).(StringLiteral).getValue()="\n - callable: "
}

predicate func_3(Parameter vos_2154, FunctionCall target_3) {
	target_3.getTarget().hasName("operator<<")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vos_2154
	and target_3.getArgument(1).(StringLiteral).getValue()="\n - suspend: "
}

from Function func, Parameter vos_2154, ExprStmt target_1, FunctionCall target_2, FunctionCall target_3
where
not func_0(vos_2154, target_1, target_2, target_3, func)
and func_1(vos_2154, target_1)
and func_2(vos_2154, target_2)
and func_3(vos_2154, target_3)
and vos_2154.getType().hasName("ostream &")
and vos_2154.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
