/**
 * @name linux-ee0d8d8482345ff97a75a7d747efc309f13b0d80-ipxitf_ioctl
 * @id cpp/linux/ee0d8d8482345ff97a75a7d747efc309f13b0d80/ipxitf-ioctl
 * @description linux-ee0d8d8482345ff97a75a7d747efc309f13b0d80-net/ipx/af_ipx.c-ipxitf_ioctl CVE-2017-7487
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrc_1119, ExprStmt target_3, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1119
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_3.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vrc_1119, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1119
	and target_1.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
}

predicate func_2(FunctionCall target_4, Function func, BreakStmt target_2) {
	target_2.getParent().(IfStmt).getCondition()=target_4
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("ipxitf_put")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ipx_interface *")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, FunctionCall target_4) {
	target_4.getTarget().hasName("copy_to_user")
	and target_4.getArgument(0).(VariableAccess).getTarget().getType().hasName("void *")
	and target_4.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ifreq")
	and target_4.getArgument(2).(SizeofExprOperator).getValue()="40"
	and target_4.getEnclosingFunction() = func
}

from Function func, Variable vrc_1119, ExprStmt target_0, ExprStmt target_1, BreakStmt target_2, ExprStmt target_3, FunctionCall target_4
where
func_0(vrc_1119, target_3, target_0)
and func_1(vrc_1119, target_1)
and func_2(target_4, func, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and vrc_1119.getType().hasName("int")
and vrc_1119.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
