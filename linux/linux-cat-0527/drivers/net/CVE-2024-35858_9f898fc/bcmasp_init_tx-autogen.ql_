/**
 * @name linux-9f898fc2c31fbf0ac5ecd289f528a716464cb005-bcmasp_init_tx
 * @id cpp/linux/9f898fc2c31fbf0ac5ecd289f528a716464cb005/bcmasp-init-tx
 * @description linux-9f898fc2c31fbf0ac5ecd289f528a716464cb005-drivers/net/ethernet/broadcom/asp2/bcmasp_intf.c-bcmasp_init_tx CVE-2024-35858
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getTarget().hasName("fortify_memset_chk")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("size_t")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("__builtin_object_size")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("__builtin_object_size")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getTarget().hasName("__builtin_memset")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="tx_cbs"
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("size_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("tx_spb_ctrl_wl")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bcmasp_intf *")
	and target_1.getExpr().(FunctionCall).getArgument(1).(HexLiteral).getValue()="0"
	and target_1.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
