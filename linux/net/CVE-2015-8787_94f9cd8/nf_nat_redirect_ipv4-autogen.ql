/**
 * @name linux-94f9cd81436c85d8c3a318ba92e236ede73752fc-nf_nat_redirect_ipv4
 * @id cpp/linux/94f9cd81436c85d8c3a318ba92e236ede73752fc/nf-nat-redirect-ipv4
 * @description linux-94f9cd81436c85d8c3a318ba92e236ede73752fc-net/netfilter/nf_nat_redirect.c-nf_nat_redirect_ipv4 CVE-2015-8787
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vindev_51, BlockStmt target_3, EqualityOperation target_2) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vindev_51
	and target_0.getRightOperand().(PointerFieldAccess).getTarget().getName()="ifa_list"
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vindev_51
	and target_0.getParent().(IfStmt).getThen()=target_3
	and target_0.getLeftOperand().(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vindev_51, BlockStmt target_3, VariableAccess target_1) {
	target_1.getTarget()=vindev_51
	and target_1.getParent().(NEExpr).getRightOperand() instanceof Literal
	and target_1.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Variable vindev_51, BlockStmt target_3, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget()=vindev_51
	and target_2.getRightOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Variable vindev_51, BlockStmt target_3) {
	target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("in_ifaddr *")
	and target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ifa_list"
	and target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vindev_51
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("__be32")
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ifa_local"
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("in_ifaddr *")
}

from Function func, Variable vindev_51, VariableAccess target_1, EqualityOperation target_2, BlockStmt target_3
where
not func_0(vindev_51, target_3, target_2)
and func_1(vindev_51, target_3, target_1)
and func_2(vindev_51, target_3, target_2)
and func_3(vindev_51, target_3)
and vindev_51.getType().hasName("in_device *")
and vindev_51.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
