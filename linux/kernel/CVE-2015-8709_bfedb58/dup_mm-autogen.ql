/**
 * @name linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-dup_mm
 * @id cpp/linux/bfedb589252c01fa505ac9f6f2a3d5d68d707ef4/dup-mm
 * @description linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-kernel/fork.c-dup_mm CVE-2015-8709
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="2400"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vmm_1120, NotExpr target_2, ExprStmt target_3) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="user_ns"
	and target_1.getQualifier().(VariableAccess).getTarget()=vmm_1120
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getQualifier().(VariableAccess).getLocation())
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vmm_1120, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("mm_init")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_1120
	and target_2.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("task_struct *")
}

predicate func_3(Variable vmm_1120, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dup_mmap")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_1120
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("mm_struct *")
}

from Function func, Variable vmm_1120, SizeofExprOperator target_0, NotExpr target_2, ExprStmt target_3
where
func_0(func, target_0)
and not func_1(vmm_1120, target_2, target_3)
and func_2(vmm_1120, target_2)
and func_3(vmm_1120, target_3)
and vmm_1120.getType().hasName("mm_struct *")
and vmm_1120.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
