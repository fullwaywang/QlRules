/**
 * @name linux-363bee27e258-aio_poll
 * @id cpp/linux/363bee27e258/aio-poll
 * @description linux-363bee27e258-aio_poll CVE-2021-39698
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreq_1737, PointerFieldAccess target_0) {
		target_0.getTarget().getName()="done"
		and target_0.getQualifier().(VariableAccess).getTarget()=vreq_1737
}

predicate func_1(Variable vreq_1737, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="done"
		and target_1.getQualifier().(VariableAccess).getTarget()=vreq_1737
}

predicate func_2(Variable vreq_1737, ExprStmt target_7, ExprStmt target_8, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="work_need_resched"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vreq_1737, BlockStmt target_9, AddressOfExpr target_10, AddressOfExpr target_11) {
	exists(LogicalOrExpr target_3 |
		target_3.getAnOperand().(FunctionCall).getTarget().hasName("list_empty")
		and target_3.getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="entry"
		and target_3.getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="wait"
		and target_3.getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
		and target_3.getAnOperand().(PointerFieldAccess).getTarget().getName()="work_scheduled"
		and target_3.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
		and target_3.getParent().(IfStmt).getThen()=target_9
		and target_10.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_3.getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_11.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vreq_1737, NotExpr target_4) {
		target_4.getOperand().(FunctionCall).getTarget().hasName("list_empty")
		and target_4.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="entry"
		and target_4.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="wait"
		and target_4.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
		and target_4.getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
}

predicate func_5(BlockStmt target_9, Function func, FunctionCall target_5) {
		target_5.getTarget().hasName("__builtin_expect")
		and target_5.getArgument(0).(NotExpr).getOperand() instanceof NotExpr
		and target_5.getArgument(1).(Literal).getValue()="0"
		and target_5.getParent().(IfStmt).getThen()=target_9
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vreq_1737, BlockStmt target_12, NotExpr target_6) {
		target_6.getOperand().(PointerFieldAccess).getTarget().getName()="done"
		and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
		and target_6.getParent().(IfStmt).getThen()=target_12
}

predicate func_7(Variable vreq_1737, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cancelled"
		and target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
}

predicate func_8(Variable vreq_1737, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="_key"
		and target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="pt"
		and target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("aio_poll_table")
		and target_8.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="events"
		and target_8.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
}

predicate func_9(Function func, BlockStmt target_9) {
		target_9.getStmt(0).(IfStmt).getCondition().(ValueFieldAccess).getTarget().getName()="error"
		and target_9.getStmt(0).(IfStmt).getCondition().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("aio_poll_table")
		and target_9.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bool")
		and target_9.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="error"
		and target_9.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("aio_poll_table")
		and target_9.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vreq_1737, AddressOfExpr target_10) {
		target_10.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_10.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="head"
		and target_10.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
		and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_lock")
}

predicate func_11(Variable vreq_1737, AddressOfExpr target_11) {
		target_11.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_11.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="head"
		and target_11.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1737
		and target_11.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
}

predicate func_12(Function func, BlockStmt target_12) {
		target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
		and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ki_list"
		and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("aio_kiocb *")
		and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="active_reqs"
		and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("kioctx *")
		and target_12.getEnclosingFunction() = func
}

from Function func, Variable vreq_1737, PointerFieldAccess target_0, PointerFieldAccess target_1, NotExpr target_4, FunctionCall target_5, NotExpr target_6, ExprStmt target_7, ExprStmt target_8, BlockStmt target_9, AddressOfExpr target_10, AddressOfExpr target_11, BlockStmt target_12
where
func_0(vreq_1737, target_0)
and func_1(vreq_1737, target_1)
and not func_2(vreq_1737, target_7, target_8, func)
and not func_3(vreq_1737, target_9, target_10, target_11)
and func_4(vreq_1737, target_4)
and func_5(target_9, func, target_5)
and func_6(vreq_1737, target_12, target_6)
and func_7(vreq_1737, target_7)
and func_8(vreq_1737, target_8)
and func_9(func, target_9)
and func_10(vreq_1737, target_10)
and func_11(vreq_1737, target_11)
and func_12(func, target_12)
and vreq_1737.getType().hasName("poll_iocb *")
and vreq_1737.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
