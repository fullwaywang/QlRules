/**
 * @name v8-0944ea06c6590182a4336ef69f773fabac6035f4-v8_inspector__InjectedScript__Scope__installCommandLineAPI
 * @id cpp/v8/0944ea06c6590182a4336ef69f773fabac6035f4/v8inspectorinjectedscriptscopeinstallcommandlineapi
 * @description v8-0944ea06c6590182a4336ef69f773fabac6035f4-src/inspector/injected-script.cc-v8_inspector__InjectedScript__Scope__installCommandLineAPI CVE-2022-3054
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("clientTrustLevel")
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getQualifier().(VariableAccess).getType().hasName("V8InspectorSessionImpl *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("reset")
	and target_1.getExpr().(FunctionCall).getQualifier().(PointerFieldAccess).getTarget().getName()="m_commandLineAPIScope"
	and target_1.getExpr().(FunctionCall).getQualifier().(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getAllocatorCall().(FunctionCall).getTarget().hasName("operator new")
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getAllocatorCall().(FunctionCall).getArgument(0).(ErrorExpr).getType() instanceof LongType
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getInitializer().(ConstructorCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="m_context"
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getInitializer().(ConstructorCall).getArgument(0).(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getInitializer().(ConstructorCall).getArgument(1).(FunctionCall).getTarget().hasName("commandLineAPI")
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getInitializer().(ConstructorCall).getArgument(1).(FunctionCall).getQualifier().(PointerFieldAccess).getTarget().getName()="m_injectedScript"
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getInitializer().(ConstructorCall).getArgument(1).(FunctionCall).getQualifier().(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getInitializer().(ConstructorCall).getArgument(2).(FunctionCall).getTarget().hasName("Global")
	and target_1.getExpr().(FunctionCall).getArgument(0).(NewExpr).getInitializer().(ConstructorCall).getArgument(2).(FunctionCall).getQualifier().(FunctionCall).getQualifier().(PointerFieldAccess).getTarget().getName()="m_context"
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
