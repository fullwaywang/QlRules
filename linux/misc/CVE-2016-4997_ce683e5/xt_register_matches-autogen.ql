/**
 * @name linux-ce683e5f9d045e5d67d1312a42b359cb2ab2a13c-xt_register_matches
 * @id cpp/linux/ce683e5f9d045e5d67d1312a42b359cb2ab2a13c/xt-register-matches
 * @description linux-ce683e5f9d045e5d67d1312a42b359cb2ab2a13c-include/linux/netfilter/x_tables.h-xt_register_matches CVE-2016-4997
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr() instanceof Literal
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Parameter vmatch_145, Variable vi_147, FunctionCall target_1) {
	target_1.getTarget().hasName("xt_unregister_matches")
	and not target_1.getTarget().hasName("mutex_lock_nested")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vmatch_145
	and target_1.getArgument(1).(VariableAccess).getTarget()=vi_147
}

predicate func_3(Parameter vmatch_145) {
exists(PointerFieldAccess target_3 |
	target_3.getTarget().getName()="family"
	and target_3.getQualifier().(VariableAccess).getTarget()=vmatch_145)
}

predicate func_4(Function func) {
exists(AddressOfExpr target_4 |
	target_4.getOperand().(ValueFieldAccess).getTarget().getName()="mutex"
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getType().hasName("xt_af *")
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getType().hasName("u_int8_t")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Parameter vmatch_145) {
exists(FunctionCall target_5 |
	target_5.getTarget().hasName("list_del")
	and target_5.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_5.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmatch_145)
}

predicate func_6(Function func) {
exists(FunctionCall target_6 |
	target_6.getTarget().hasName("mutex_unlock")
	and target_6.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="mutex"
	and target_6.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getType().hasName("xt_af *")
	and target_6.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getType().hasName("u_int8_t")
	and target_6.getEnclosingFunction() = func)
}

predicate func_8(Parameter vmatch_145, Variable vi_147, VariableAccess target_8) {
	target_8.getTarget()=vmatch_145
	and target_8.getParent().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_147
}

predicate func_9(Parameter vmatch_145, VariableAccess target_9) {
	target_9.getTarget()=vmatch_145
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_11(Function func, DeclStmt target_11) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Parameter vn_145, Variable vi_147, Variable verr_148, Function func, ForStmt target_12) {
	target_12.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_147
	and target_12.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_12.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vi_147
	and target_12.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vn_145
	and target_12.getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vi_147
	and target_12.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_148
	and target_12.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("xt_register_match")
	and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=verr_148
	and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="err"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

/*predicate func_13(Variable vi_147, AssignExpr target_13) {
	target_13.getLValue().(VariableAccess).getTarget()=vi_147
	and target_13.getRValue().(Literal).getValue()="0"
}

*/
/*predicate func_14(Parameter vmatch_145, Variable vi_147, Variable verr_148, AssignExpr target_14) {
	target_14.getLValue().(VariableAccess).getTarget()=verr_148
	and target_14.getRValue().(FunctionCall).getTarget().hasName("xt_register_match")
	and target_14.getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vmatch_145
	and target_14.getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_147
}

*/
predicate func_15(Variable verr_148, IfStmt target_15) {
	target_15.getCondition().(VariableAccess).getTarget()=verr_148
	and target_15.getThen().(GotoStmt).getName() ="err"
}

predicate func_16(Variable verr_148, IfStmt target_15, ReturnStmt target_18, VariableAccess target_16) {
	target_16.getTarget()=verr_148
	and target_15.getCondition().(VariableAccess).getLocation().isBefore(target_16.getLocation())
	and target_16.getLocation().isBefore(target_18.getExpr().(VariableAccess).getLocation())
}

predicate func_17(Variable vi_147, Function func, IfStmt target_17) {
	target_17.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vi_147
	and target_17.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_17.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
}

predicate func_18(Variable verr_148, ReturnStmt target_20, Function func, ReturnStmt target_18) {
	target_18.getExpr().(VariableAccess).getTarget()=verr_148
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_18
	and target_20.getExpr().(VariableAccess).getLocation().isBefore(target_18.getExpr().(VariableAccess).getLocation())
}

predicate func_20(Variable verr_148, Function func, ReturnStmt target_20) {
	target_20.getExpr().(VariableAccess).getTarget()=verr_148
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
}

from Function func, Parameter vmatch_145, Parameter vn_145, Variable vi_147, Variable verr_148, Initializer target_0, FunctionCall target_1, VariableAccess target_8, VariableAccess target_9, DeclStmt target_11, ForStmt target_12, IfStmt target_15, VariableAccess target_16, IfStmt target_17, ReturnStmt target_18, ReturnStmt target_20
where
func_0(func, target_0)
and func_1(vmatch_145, vi_147, target_1)
and not func_3(vmatch_145)
and not func_4(func)
and not func_5(vmatch_145)
and not func_6(func)
and func_8(vmatch_145, vi_147, target_8)
and func_9(vmatch_145, target_9)
and func_11(func, target_11)
and func_12(vn_145, vi_147, verr_148, func, target_12)
and func_15(verr_148, target_15)
and func_16(verr_148, target_15, target_18, target_16)
and func_17(vi_147, func, target_17)
and func_18(verr_148, target_20, func, target_18)
and func_20(verr_148, func, target_20)
and vmatch_145.getType().hasName("xt_match *")
and vn_145.getType().hasName("unsigned int")
and vi_147.getType().hasName("unsigned int")
and verr_148.getType().hasName("int")
and vmatch_145.getFunction() = func
and vn_145.getFunction() = func
and vi_147.(LocalVariable).getFunction() = func
and verr_148.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
