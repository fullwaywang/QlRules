/**
 * @name linux-3e11ef1903cf6c2fba35594b193a3570854d9e9e-mld_newpack
 * @id cpp/linux/3e11ef1903cf6c2fba35594b193a3570854d9e9e/mld-newpack
 * @description linux-3e11ef1903cf6c2fba35594b193a3570854d9e9e-net/ipv6/mcast.c-mld_newpack CVE-2022-48785
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vaddr_buf_1742, Parameter videv_1733, BlockStmt target_2, FunctionCall target_0) {
	target_0.getTarget().hasName("__ipv6_get_lladdr")
	and not target_0.getTarget().hasName("ipv6_get_lladdr")
	and target_0.getArgument(0).(VariableAccess).getTarget()=videv_1733
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vaddr_buf_1742
	and target_0.getArgument(2).(Literal).getValue()="64"
	and target_0.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getLValue().(VariableAccess).getTarget().getType().hasName("const in6_addr *")
			and obj_1.getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const in6_addr")
		)
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vaddr_buf_1742, Parameter videv_1733, FunctionCall target_0, BlockStmt target_2
where
func_0(vaddr_buf_1742, videv_1733, target_2, target_0)
and func_2(func, target_2)
and vaddr_buf_1742.getType().hasName("in6_addr")
and videv_1733.getType().hasName("inet6_dev *")
and vaddr_buf_1742.(LocalVariable).getFunction() = func
and videv_1733.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
