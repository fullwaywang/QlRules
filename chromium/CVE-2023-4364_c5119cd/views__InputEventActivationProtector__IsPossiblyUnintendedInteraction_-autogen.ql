/**
 * @name chromium-c5119cd03d4078afaa280d2398d7faf3157db980-views__InputEventActivationProtector__IsPossiblyUnintendedInteraction_
 * @id cpp/chromium/c5119cd03d4078afaa280d2398d7faf3157db980/viewsinputeventactivationprotectorispossiblyunintendedinteraction
 * @description chromium-c5119cd03d4078afaa280d2398d7faf3157db980-ui/views/window/dialog_client_view.cc-views__InputEventActivationProtector__IsPossiblyUnintendedInteraction_ CVE-2023-4364
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="view_shown_time_stamp_"
	and target_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="view_shown_time_stamp_"
	and target_1.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_1.getEnclosingFunction() = func
}

predicate func_2(LogicalAndExpr target_4, Function func, ReturnStmt target_2) {
	target_2.getExpr().(Literal).getValue()="1"
	and target_2.getParent().(IfStmt).getCondition()=target_4
	and target_2.getEnclosingFunction() = func
}

predicate func_3(LogicalAndExpr target_5, Function func, ReturnStmt target_3) {
	target_3.getExpr().(Literal).getValue()="0"
	and target_3.getParent().(IfStmt).getCondition()=target_5
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, LogicalAndExpr target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getLeftOperand() |
		obj_0.getTarget().hasName("IsKeyEvent")
		and obj_0.getQualifier().(VariableAccess).getTarget().getType().hasName("const Event &")
	)
	and exists(FunctionCall obj_1 | obj_1=target_4.getRightOperand() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
			obj_2.getTarget().hasName("AsKeyEvent")
			and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("const Event &")
		)
		and obj_1.getTarget().hasName("is_repeat")
	)
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, LogicalAndExpr target_5) {
	exists(NotExpr obj_0 | obj_0=target_5.getLeftOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("IsMouseEvent")
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("const Event &")
		)
	)
	and exists(NotExpr obj_2 | obj_2=target_5.getRightOperand() |
		exists(FunctionCall obj_3 | obj_3=obj_2.getOperand() |
			obj_3.getTarget().hasName("IsTouchEvent")
			and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("const Event &")
		)
	)
	and target_5.getEnclosingFunction() = func
}

from Function func, PointerFieldAccess target_0, PointerFieldAccess target_1, ReturnStmt target_2, ReturnStmt target_3, LogicalAndExpr target_4, LogicalAndExpr target_5
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(target_4, func, target_2)
and func_3(target_5, func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
