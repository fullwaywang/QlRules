commit b9afbb9a0c734197c59c43610071041044bf1562
Author: Hao Ge <gehao@kylinos.cn>
Date:   Tue Jul 9 10:33:37 2024 +0800

    tpm: Use auth only after NULL check in tpm_buf_check_hmac_response()
    
    commit 7dc357d343f134bf59815ff6098b93503ec8a23b upstream.
    
    Dereference auth after NULL check in tpm_buf_check_hmac_response().
    Otherwise, unless tpm2_sessions_init() was called, a call can cause NULL
    dereference, when TCG_TPM2_HMAC is enabled.
    
    [jarkko: adjusted the commit message.]
    Cc: stable@vger.kernel.org # v6.10+
    Fixes: 7ca110f2679b ("tpm: Address !chip->auth in tpm_buf_append_hmac_session*()")
    Signed-off-by: Hao Ge <gehao@kylinos.cn>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/char/tpm/tpm2-sessions.c b/drivers/char/tpm/tpm2-sessions.c
index 2281d55df545..d3521aadd43e 100644
--- a/drivers/char/tpm/tpm2-sessions.c
+++ b/drivers/char/tpm/tpm2-sessions.c
@@ -746,15 +746,16 @@ int tpm_buf_check_hmac_response(struct tpm_chip *chip, struct tpm_buf *buf,
 	struct tpm2_auth *auth = chip->auth;
 	off_t offset_s, offset_p;
 	u8 rphash[SHA256_DIGEST_SIZE];
-	u32 attrs;
+	u32 attrs, cc;
 	struct sha256_state sctx;
 	u16 tag = be16_to_cpu(head->tag);
-	u32 cc = be32_to_cpu(auth->ordinal);
 	int parm_len, len, i, handles;
 
 	if (!auth)
 		return rc;
 
+	cc = be32_to_cpu(auth->ordinal);
+
 	if (auth->session >= TPM_HEADER_SIZE) {
 		WARN(1, "tpm session not filled correctly\n");
 		goto out;
