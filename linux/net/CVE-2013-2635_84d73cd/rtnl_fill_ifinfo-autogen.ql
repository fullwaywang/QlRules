/**
 * @name linux-84d73cd3fb142bf1298a8c13fd4ca50fd2432372-rtnl_fill_ifinfo
 * @id cpp/linux/84d73cd3fb142bf1298a8c13fd4ca50fd2432372/rtnl-fill-ifinfo
 * @description linux-84d73cd3fb142bf1298a8c13fd4ca50fd2432372-net/core/rtnetlink.c-rtnl_fill_ifinfo CVE-2013-2635
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vivi_969, IfStmt target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="mac"
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vivi_969
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="32"
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vivi_969, IfStmt target_1) {
	target_1.getCondition().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ndo_get_vf_config"
	and target_1.getCondition().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="netdev_ops"
	and target_1.getCondition().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
	and target_1.getCondition().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net_device *")
	and target_1.getCondition().(VariableCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getCondition().(VariableCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vivi_969
}

predicate func_2(Variable vivi_969, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="spoofchk"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vivi_969
	and target_2.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="4294967295"
}

from Function func, Variable vivi_969, IfStmt target_1, ExprStmt target_2
where
not func_0(vivi_969, target_1, target_2)
and func_1(vivi_969, target_1)
and func_2(vivi_969, target_2)
and vivi_969.getType().hasName("ifla_vf_info")
and vivi_969.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
