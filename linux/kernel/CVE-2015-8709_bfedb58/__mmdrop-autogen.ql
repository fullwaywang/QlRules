/**
 * @name linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-__mmdrop
 * @id cpp/linux/bfedb589252c01fa505ac9f6f2a3d5d68d707ef4/--mmdrop
 * @description linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-kernel/fork.c-__mmdrop CVE-2015-8709
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmm_841, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("put_user_ns")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_841
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vmm_841, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("kmem_cache_free")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kmem_cache *")
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmm_841
}

predicate func_2(Parameter vmm_841, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("check_mm")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_841
}

from Function func, Parameter vmm_841, ExprStmt target_1, ExprStmt target_2
where
not func_0(vmm_841, target_1, target_2, func)
and func_1(vmm_841, target_1)
and func_2(vmm_841, target_2)
and vmm_841.getType().hasName("mm_struct *")
and vmm_841.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
