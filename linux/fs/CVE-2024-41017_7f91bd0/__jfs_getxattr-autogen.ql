/**
 * @name linux-7f91bd0f2941fa36449ce1a15faaa64f840d9746-__jfs_getxattr
 * @id cpp/linux/7f91bd0f2941fa36449ce1a15faaa64f840d9746/--jfs-getxattr
 * @description linux-7f91bd0f2941fa36449ce1a15faaa64f840d9746-fs/jfs/xattr.c-__jfs_getxattr CVE-2024-41017
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(ForStmt target_6, Function func) {
exists(ExprStmt target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		obj_0.getLValue().(VariableAccess).getType().hasName("jfs_ea *")
		and obj_0.getRValue() instanceof PointerArithmeticOperation
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_6.getLocation())
)
}

predicate func_3(Variable vsize_816, ExprStmt target_7) {
exists(IfStmt target_3 |
	exists(LogicalOrExpr obj_0 | obj_0=target_3.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().hasName("__builtin_expect")
			and obj_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("jfs_ea *")
			and obj_1.getArgument(1).(Literal).getValue()="0"
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getTarget().hasName("__builtin_expect")
			and obj_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("jfs_ea *")
			and obj_2.getArgument(1).(Literal).getValue()="0"
		)
	)
	and exists(BlockStmt obj_3 | obj_3=target_3.getThen() |
		exists(ExprStmt obj_4 | obj_4=obj_3.getStmt(0) |
			exists(AssignExpr obj_5 | obj_5=obj_4.getExpr() |
				obj_5.getLValue().(VariableAccess).getTarget()=vsize_816
				and obj_5.getRValue().(UnaryMinusExpr).getValue()="-117"
			)
		)
		and obj_3.getStmt(1).(GotoStmt).getName() ="release"
	)
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_4(Variable vealist_812, Variable vea_813, IfStmt target_5, PointerArithmeticOperation target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getRightOperand() |
		obj_0.getTarget().getName()="size"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vealist_812
	)
	and exists(LTExpr obj_1 | obj_1=target_4.getParent() |
		obj_1.getLesserOperand().(VariableAccess).getTarget()=vea_813
		and obj_1.getParent().(ForStmt).getStmt()=target_5
	)
	and target_4.getLeftOperand().(VariableAccess).getTarget()=vealist_812
}

predicate func_5(Parameter vname_809, Parameter vdata_809, Parameter vbuf_size_810, Variable vea_813, Variable vsize_816, Variable vnamelen_817, Variable vvalue_818, IfStmt target_5) {
	exists(LogicalAndExpr obj_0 | obj_0=target_5.getCondition() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getRightOperand() |
				obj_2.getTarget().getName()="namelen"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vea_813
			)
			and obj_1.getLeftOperand().(VariableAccess).getTarget()=vnamelen_817
		)
		and exists(EqualityOperation obj_3 | obj_3=obj_0.getRightOperand() |
			exists(FunctionCall obj_4 | obj_4=obj_3.getLeftOperand() |
				exists(PointerFieldAccess obj_5 | obj_5=obj_4.getArgument(1) |
					obj_5.getTarget().getName()="name"
					and obj_5.getQualifier().(VariableAccess).getTarget()=vea_813
				)
				and obj_4.getTarget().hasName("memcmp")
				and obj_4.getArgument(0).(VariableAccess).getTarget()=vname_809
				and obj_4.getArgument(2).(VariableAccess).getTarget()=vnamelen_817
			)
			and obj_3.getRightOperand().(Literal).getValue()="0"
		)
	)
	and exists(BlockStmt obj_6 | obj_6=target_5.getThen() |
		exists(ExprStmt obj_7 | obj_7=obj_6.getStmt(0) |
			exists(AssignExpr obj_8 | obj_8=obj_7.getExpr() |
				exists(PointerFieldAccess obj_9 | obj_9=obj_8.getRValue() |
					obj_9.getTarget().getName()="valuelen"
					and obj_9.getQualifier().(VariableAccess).getTarget()=vea_813
				)
				and obj_8.getLValue().(VariableAccess).getTarget()=vsize_816
			)
		)
		and exists(IfStmt obj_10 | obj_10=obj_6.getStmt(1) |
			exists(IfStmt obj_11 | obj_11=obj_10.getElse() |
				exists(RelationalOperation obj_12 | obj_12=obj_11.getCondition() |
					obj_12.getGreaterOperand().(VariableAccess).getTarget()=vsize_816
					and obj_12.getLesserOperand().(VariableAccess).getTarget()=vbuf_size_810
				)
				and obj_11.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="release"
			)
			and obj_10.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vdata_809
			and obj_10.getThen().(GotoStmt).getName() ="release"
		)
		and exists(ExprStmt obj_13 | obj_13=obj_6.getStmt(2) |
			exists(AssignExpr obj_14 | obj_14=obj_13.getExpr() |
				exists(PointerArithmeticOperation obj_15 | obj_15=obj_14.getRValue() |
					obj_15.getLeftOperand().(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="namelen"
					and obj_15.getRightOperand().(Literal).getValue()="1"
				)
				and obj_14.getLValue().(VariableAccess).getTarget()=vvalue_818
			)
		)
		and exists(ExprStmt obj_16 | obj_16=obj_6.getStmt(3) |
			exists(FunctionCall obj_17 | obj_17=obj_16.getExpr() |
				obj_17.getTarget().hasName("__memcpy")
				and obj_17.getArgument(0).(VariableAccess).getTarget()=vdata_809
				and obj_17.getArgument(1).(VariableAccess).getTarget()=vvalue_818
				and obj_17.getArgument(2).(VariableAccess).getTarget()=vsize_816
			)
		)
		and obj_6.getStmt(4).(GotoStmt).getName() ="release"
	)
}

predicate func_6(Variable vealist_812, Variable vea_813, ForStmt target_6) {
	exists(ExprStmt obj_0 | obj_0=target_6.getInitialization() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().getName()="ea"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vealist_812
			)
			and obj_1.getLValue().(VariableAccess).getTarget()=vea_813
		)
	)
	and exists(RelationalOperation obj_3 | obj_3=target_6.getCondition() |
		obj_3.getLesserOperand().(VariableAccess).getTarget()=vea_813
		and obj_3.getGreaterOperand() instanceof PointerArithmeticOperation
	)
	and exists(AssignExpr obj_4 | obj_4=target_6.getUpdate() |
		exists(PointerArithmeticOperation obj_5 | obj_5=obj_4.getRValue() |
			exists(AddExpr obj_6 | obj_6=obj_5.getRightOperand() |
				exists(AddExpr obj_7 | obj_7=obj_6.getLeftOperand() |
					exists(AddExpr obj_8 | obj_8=obj_7.getLeftOperand() |
						exists(SizeofTypeOperator obj_9 | obj_9=obj_8.getLeftOperand() |
							obj_9.getType() instanceof LongType
							and obj_9.getValue()="4"
						)
						and obj_8.getRightOperand().(PointerFieldAccess).getTarget().getName()="namelen"
					)
					and obj_7.getRightOperand().(Literal).getValue()="1"
				)
				and exists(PointerFieldAccess obj_10 | obj_10=obj_6.getRightOperand() |
					obj_10.getTarget().getName()="valuelen"
					and obj_10.getQualifier().(VariableAccess).getTarget()=vea_813
				)
			)
			and obj_5.getLeftOperand().(VariableAccess).getTarget()=vea_813
		)
		and obj_4.getLValue().(VariableAccess).getTarget()=vea_813
	)
	and target_6.getStmt() instanceof IfStmt
}

predicate func_7(Variable vsize_816, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vsize_816
		and obj_0.getRValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

from Function func, Parameter vname_809, Parameter vdata_809, Parameter vbuf_size_810, Variable vealist_812, Variable vea_813, Variable vsize_816, Variable vnamelen_817, Variable vvalue_818, PointerArithmeticOperation target_4, IfStmt target_5, ForStmt target_6, ExprStmt target_7
where
not func_1(target_6, func)
and not func_3(vsize_816, target_7)
and func_4(vealist_812, vea_813, target_5, target_4)
and func_5(vname_809, vdata_809, vbuf_size_810, vea_813, vsize_816, vnamelen_817, vvalue_818, target_5)
and func_6(vealist_812, vea_813, target_6)
and func_7(vsize_816, target_7)
and vname_809.getType().hasName("const char *")
and vdata_809.getType().hasName("void *")
and vbuf_size_810.getType().hasName("size_t")
and vealist_812.getType().hasName("jfs_ea_list *")
and vea_813.getType().hasName("jfs_ea *")
and vsize_816.getType().hasName("ssize_t")
and vnamelen_817.getType().hasName("int")
and vvalue_818.getType().hasName("char *")
and vname_809.getFunction() = func
and vdata_809.getFunction() = func
and vbuf_size_810.getFunction() = func
and vealist_812.(LocalVariable).getFunction() = func
and vea_813.(LocalVariable).getFunction() = func
and vsize_816.(LocalVariable).getFunction() = func
and vnamelen_817.(LocalVariable).getFunction() = func
and vvalue_818.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
