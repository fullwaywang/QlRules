/**
 * @name linux-16981742717b04644a41052570fb502682a315d2-binder_transaction
 * @id cpp/linux/16981742717b04644a41052570fb502682a315d2/binder-transaction
 * @description linux-16981742717b04644a41052570fb502682a315d2-drivers/android/binder.c-binder_transaction CVE-2020-0041
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(DivExpr target_0 |
		target_0.getLeftOperand() instanceof SubExpr
		and target_0.getRightOperand() instanceof SizeofTypeOperator
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func) {
	exists(DivExpr target_1 |
		target_1.getLeftOperand() instanceof SubExpr
		and target_1.getRightOperand() instanceof SizeofTypeOperator
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vbuffer_offset_2846, Variable voff_start_offset_2847, SubExpr target_2) {
		target_2.getLeftOperand().(VariableAccess).getTarget()=vbuffer_offset_2846
		and target_2.getRightOperand().(VariableAccess).getTarget()=voff_start_offset_2847
}

predicate func_3(Variable vbuffer_offset_2846, Variable voff_start_offset_2847, SubExpr target_3) {
		target_3.getLeftOperand().(VariableAccess).getTarget()=vbuffer_offset_2846
		and target_3.getRightOperand().(VariableAccess).getTarget()=voff_start_offset_2847
}

predicate func_4(Function func, SizeofTypeOperator target_4) {
		target_4.getType() instanceof LongType
		and target_4.getValue()="8"
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, SizeofTypeOperator target_5) {
		target_5.getType() instanceof LongType
		and target_5.getValue()="8"
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, MulExpr target_6) {
		target_6.getLeftOperand() instanceof SubExpr
		and target_6.getRightOperand() instanceof SizeofTypeOperator
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, MulExpr target_7) {
		target_7.getLeftOperand() instanceof SubExpr
		and target_7.getRightOperand() instanceof SizeofTypeOperator
		and target_7.getParent().(AssignExpr).getRValue() = target_7
		and target_7.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_7.getEnclosingFunction() = func
}

from Function func, Variable vbuffer_offset_2846, Variable voff_start_offset_2847, SubExpr target_2, SubExpr target_3, SizeofTypeOperator target_4, SizeofTypeOperator target_5, MulExpr target_6, MulExpr target_7
where
not func_0(func)
and not func_1(func)
and func_2(vbuffer_offset_2846, voff_start_offset_2847, target_2)
and func_3(vbuffer_offset_2846, voff_start_offset_2847, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
and vbuffer_offset_2846.getType().hasName("binder_size_t")
and voff_start_offset_2847.getType().hasName("binder_size_t")
and vbuffer_offset_2846.(LocalVariable).getFunction() = func
and voff_start_offset_2847.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
