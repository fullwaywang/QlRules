/**
 * @name linux-3a38a829c8bc27d78552c28e582eb1d885d07d11-temac_probe
 * @id cpp/linux/3a38a829c8bc27d78552c28e582eb1d885d07d11/temac-probe
 * @description linux-3a38a829c8bc27d78552c28e582eb1d885d07d11-drivers/net/ethernet/xilinx/ll_temac_main.c-temac_probe CVE-2024-35796
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpdev_1383, FunctionCall target_0) {
	target_0.getTarget().hasName("devm_platform_ioremap_resource_byname")
	and not target_0.getTarget().hasName("devm_platform_ioremap_resource")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vpdev_1383
	and target_0.getArgument(1).(Literal).getValue()="0"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="regs"
	and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("temac_local *")
}

from Function func, Parameter vpdev_1383, FunctionCall target_0
where
func_0(vpdev_1383, target_0)
and vpdev_1383.getType().hasName("platform_device *")
and vpdev_1383.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
