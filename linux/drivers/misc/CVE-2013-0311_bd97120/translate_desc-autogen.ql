/**
 * @name linux-bd97120fc3d1a11f3124c7c9ba1d91f51829eb85-translate_desc
 * @id cpp/linux/bd97120fc3d1a11f3124c7c9ba1d91f51829eb85/translate-desc
 * @description linux-bd97120fc3d1a11f3124c7c9ba1d91f51829eb85-drivers/vhost/vhost.c-translate_desc CVE-2013-0311
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vlen_1054, Variable vs_1060, RelationalOperation target_4, ExprStmt target_5) {
exists(SubExpr target_1 |
	target_1.getLeftOperand().(VariableAccess).getTarget()=vlen_1054
	and target_1.getRightOperand().(VariableAccess).getTarget()=vs_1060
	and target_4.getLesserOperand().(VariableAccess).getLocation().isBefore(target_1.getRightOperand().(VariableAccess).getLocation())
	and target_1.getRightOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vlen_1054, VariableAccess target_2) {
	target_2.getTarget()=vlen_1054
}

predicate func_4(Parameter vlen_1054, Variable vs_1060, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getGreaterOperand().(VariableAccess).getTarget()=vlen_1054
	and target_4.getLesserOperand().(VariableAccess).getTarget()=vs_1060
}

predicate func_5(Variable vs_1060, ExprStmt target_5) {
	target_5.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vs_1060
	and target_5.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getTarget().getType().hasName("u64")
}

from Function func, Parameter vlen_1054, Variable vs_1060, VariableAccess target_2, RelationalOperation target_4, ExprStmt target_5
where
not func_1(vlen_1054, vs_1060, target_4, target_5)
and func_2(vlen_1054, target_2)
and func_4(vlen_1054, vs_1060, target_4)
and func_5(vs_1060, target_5)
and vlen_1054.getType().hasName("u32")
and vs_1060.getType().hasName("u64")
and vlen_1054.getFunction() = func
and vs_1060.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
