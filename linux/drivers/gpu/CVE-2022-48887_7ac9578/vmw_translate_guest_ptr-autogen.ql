/**
 * @name linux-7ac9578e45b20e3f3c0c8eb71f5417a499a7226a-vmw_translate_guest_ptr
 * @id cpp/linux/7ac9578e45b20e3f3c0c8eb71f5417a499a7226a/vmw-translate-guest-ptr
 * @description linux-7ac9578e45b20e3f3c0c8eb71f5417a499a7226a-drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c-vmw_translate_guest_ptr CVE-2022-48887
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v__UNIQUE_ID_ddebug934_1230, FunctionCall target_0) {
	target_0.getTarget().hasName("___drm_dbg")
	and not target_0.getTarget().hasName("__drm_dev_dbg")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__UNIQUE_ID_ddebug934_1230
	and target_0.getArgument(2).(StringLiteral).getValue()="Could not find or use GMR region.\n"
}

predicate func_1(Parameter vsw_context_1218, Variable vvmw_bo_1222, Variable vhandle_1223, Variable vret_1225, ExprStmt target_9, FunctionCall target_8) {
exists(AssignExpr target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getRValue() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="filp"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsw_context_1218
		)
		and obj_0.getTarget().hasName("vmw_user_bo_lookup")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vhandle_1223
		and obj_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vvmw_bo_1222
		and obj_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and obj_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_8.getArgument(0).(VariableAccess).getLocation())
	)
	and target_1.getLValue().(VariableAccess).getTarget()=vret_1225
)
}

predicate func_2(Variable vret_1225, BlockStmt target_11) {
exists(EqualityOperation target_2 |
	target_2.getLeftOperand().(VariableAccess).getTarget()=vret_1225
	and target_2.getRightOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_11
)
}

predicate func_3(Parameter vdev_priv_1217) {
exists(ConditionalExpr target_3 |
	exists(AddressOfExpr obj_0 | obj_0=target_3.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="drm"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdev_priv_1217
		)
	)
	and exists(PointerFieldAccess obj_2 | obj_2=target_3.getThen() |
		exists(AddressOfExpr obj_3 | obj_3=obj_2.getQualifier() |
			exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
				obj_4.getTarget().getName()="drm"
				and obj_4.getQualifier().(VariableAccess).getTarget()=vdev_priv_1217
			)
		)
		and obj_2.getTarget().getName()="dev"
	)
	and target_3.getElse() instanceof Literal
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
)
}

predicate func_4(Parameter vsw_context_1218, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="filp"
	and target_4.getQualifier().(VariableAccess).getTarget()=vsw_context_1218
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_5(Variable vhandle_1223, VariableAccess target_5) {
	target_5.getTarget()=vhandle_1223
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_6(Variable vvmw_bo_1222, VariableAccess target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getParent() |
		obj_0.getLValue() = target_6
		and obj_0.getRValue() instanceof FunctionCall
	)
	and target_6.getTarget()=vvmw_bo_1222
}

predicate func_7(Parameter vsw_context_1218, Variable vvmw_bo_1222, Variable vhandle_1223, AssignExpr target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getRValue() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="filp"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsw_context_1218
		)
		and obj_0.getTarget().hasName("vmw_user_bo_noref_lookup")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vhandle_1223
	)
	and target_7.getLValue().(VariableAccess).getTarget()=vvmw_bo_1222
}

predicate func_8(Variable vvmw_bo_1222, BlockStmt target_11, FunctionCall target_8) {
	target_8.getTarget().hasName("IS_ERR")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vvmw_bo_1222
	and target_8.getParent().(IfStmt).getThen()=target_11
}

predicate func_9(Parameter vsw_context_1218, Variable vvmw_bo_1222, Variable vret_1225, ExprStmt target_9) {
	exists(AssignExpr obj_0 | obj_0=target_9.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="ctx"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vsw_context_1218
			)
			and obj_1.getTarget().hasName("vmw_validation_add_bo")
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vvmw_bo_1222
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_1225
	)
}

predicate func_11(Variable vvmw_bo_1222, BlockStmt target_11) {
	exists(DoStmt obj_0 | obj_0=target_11.getStmt(0) |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			obj_1.getStmt(1).(DoStmt).getCondition() instanceof Literal
			and obj_1.getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr() instanceof FunctionCall
		)
		and obj_0.getCondition() instanceof Literal
	)
	and exists(ReturnStmt obj_2 | obj_2=target_11.getStmt(1) |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			obj_3.getTarget().hasName("PTR_ERR")
			and obj_3.getArgument(0).(VariableAccess).getTarget()=vvmw_bo_1222
		)
	)
}

from Function func, Parameter vsw_context_1218, Variable vvmw_bo_1222, Variable vhandle_1223, Variable vret_1225, Variable v__UNIQUE_ID_ddebug934_1230, Parameter vdev_priv_1217, FunctionCall target_0, PointerFieldAccess target_4, VariableAccess target_5, VariableAccess target_6, AssignExpr target_7, FunctionCall target_8, ExprStmt target_9, BlockStmt target_11
where
func_0(v__UNIQUE_ID_ddebug934_1230, target_0)
and not func_1(vsw_context_1218, vvmw_bo_1222, vhandle_1223, vret_1225, target_9, target_8)
and not func_2(vret_1225, target_11)
and not func_3(vdev_priv_1217)
and func_4(vsw_context_1218, target_4)
and func_5(vhandle_1223, target_5)
and func_6(vvmw_bo_1222, target_6)
and func_7(vsw_context_1218, vvmw_bo_1222, vhandle_1223, target_7)
and func_8(vvmw_bo_1222, target_11, target_8)
and func_9(vsw_context_1218, vvmw_bo_1222, vret_1225, target_9)
and func_11(vvmw_bo_1222, target_11)
and vsw_context_1218.getType().hasName("vmw_sw_context *")
and vvmw_bo_1222.getType().hasName("vmw_buffer_object *")
and vhandle_1223.getType().hasName("uint32_t")
and vret_1225.getType().hasName("int")
and v__UNIQUE_ID_ddebug934_1230.getType().hasName("_ddebug")
and vdev_priv_1217.getType().hasName("vmw_private *")
and vsw_context_1218.getFunction() = func
and vvmw_bo_1222.(LocalVariable).getFunction() = func
and vhandle_1223.(LocalVariable).getFunction() = func
and vret_1225.(LocalVariable).getFunction() = func
and v__UNIQUE_ID_ddebug934_1230.(LocalVariable).getFunction() = func
and vdev_priv_1217.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
