/**
 * @name linux-4971613c1639d8e5f102c4e797c3bf8f83a5a69e-packet_do_bind
 * @id cpp/linux/4971613c1639d8e5f102c4e797c3bf8f83a5a69e/packet-do-bind
 * @description linux-4971613c1639d8e5f102c4e797c3bf8f83a5a69e-net/packet/af_packet.c-packet_do_bind CVE-2017-15649
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpo_3064, ExprStmt target_5, IfStmt target_0) {
	target_0.getCondition().(PointerFieldAccess).getTarget().getName()="fanout"
	and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpo_3064
	and target_0.getThen() instanceof ReturnStmt
	and target_0.getLocation().isBefore(target_5.getLocation())
}

predicate func_1(Variable vret_3069, PointerFieldAccess target_6) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_3069
	and target_1.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6)
}

predicate func_2(PointerFieldAccess target_6, Function func) {
exists(GotoStmt target_2 |
	target_2.getName() ="out_unlock"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Function func, UnaryMinusExpr target_3) {
	target_3.getValue()="-22"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(PointerFieldAccess target_6, Function func, ReturnStmt target_4) {
	target_4.getExpr() instanceof UnaryMinusExpr
	and target_4.getParent().(IfStmt).getCondition()=target_6
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vpo_3064, PointerFieldAccess target_6) {
	target_6.getTarget().getName()="fanout"
	and target_6.getQualifier().(VariableAccess).getTarget()=vpo_3064
}

from Function func, Variable vpo_3064, Variable vret_3069, IfStmt target_0, UnaryMinusExpr target_3, ReturnStmt target_4, ExprStmt target_5, PointerFieldAccess target_6
where
func_0(vpo_3064, target_5, target_0)
and not func_1(vret_3069, target_6)
and not func_2(target_6, func)
and func_3(func, target_3)
and func_4(target_6, func, target_4)
and func_5(func, target_5)
and func_6(vpo_3064, target_6)
and vpo_3064.getType().hasName("packet_sock *")
and vret_3069.getType().hasName("int")
and vpo_3064.(LocalVariable).getFunction() = func
and vret_3069.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
