/**
 * @name linux-aa066afaaac32caf2160d58d4e3010ee04421c62-nvmem_populate_sysfs_cells
 * @id cpp/linux/aa066afaaac32caf2160d58d4e3010ee04421c62/nvmem-populate-sysfs-cells
 * @description linux-aa066afaaac32caf2160d58d4e3010ee04421c62-drivers/nvmem/core.c-nvmem_populate_sysfs_cells CVE-2024-41029
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnvmem_429, AddressOfExpr target_2, AddressOfExpr target_3) {
exists(BitwiseAndExpr target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getRightOperand() |
		obj_0.getTarget().hasName("nvmem_bin_attr_get_umode")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vnvmem_429
	)
	and exists(AssignExpr obj_1 | obj_1=target_0.getParent() |
		exists(ValueFieldAccess obj_2 | obj_2=obj_1.getLValue() |
			exists(ValueFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
				exists(ArrayExpr obj_4 | obj_4=obj_3.getQualifier() |
					obj_4.getArrayBase().(VariableAccess).getTarget().getType().hasName("bin_attribute *")
					and obj_4.getArrayOffset().(VariableAccess).getTarget().getType().hasName("unsigned int")
				)
				and obj_3.getTarget().getName()="attr"
			)
			and obj_2.getTarget().getName()="mode"
		)
		and obj_1.getRValue() = target_0
	)
	and target_0.getLeftOperand() instanceof OctalLiteral
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Parameter vnvmem_429, AddressOfExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="dev"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vnvmem_429
	)
	and exists(FunctionCall obj_1 | obj_1=target_2.getParent() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				exists(PointerFieldAccess obj_4 | obj_4=obj_3.getArgument(3) |
					obj_4.getTarget().getName()="name"
					and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("nvmem_cell_entry *")
				)
				and exists(PointerFieldAccess obj_5 | obj_5=obj_3.getArgument(4) |
					obj_5.getTarget().getName()="offset"
					and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("nvmem_cell_entry *")
				)
				and exists(PointerFieldAccess obj_6 | obj_6=obj_3.getArgument(5) |
					obj_6.getTarget().getName()="bit_offset"
					and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("nvmem_cell_entry *")
				)
				and obj_3.getTarget().hasName("devm_kasprintf")
				and obj_3.getArgument(1).(BitwiseOrExpr).getValue()="3264"
				and obj_3.getArgument(2).(StringLiteral).getValue()="%s@%x,%x"
			)
		)
	)
}

predicate func_3(Parameter vnvmem_429, AddressOfExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="dev"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vnvmem_429
	)
	and exists(FunctionCall obj_1 | obj_1=target_3.getParent() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				obj_3.getTarget().hasName("devm_device_add_groups")
				and obj_3.getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
			)
		)
	)
}

from Function func, Parameter vnvmem_429, AddressOfExpr target_2, AddressOfExpr target_3
where
not func_0(vnvmem_429, target_2, target_3)
and func_2(vnvmem_429, target_2)
and func_3(vnvmem_429, target_3)
and vnvmem_429.getType().hasName("nvmem_device *")
and vnvmem_429.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
