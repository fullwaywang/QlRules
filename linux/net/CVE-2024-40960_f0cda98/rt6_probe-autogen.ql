/**
 * @name linux-f0cda984e4e634b221dbf9642b8ecc5b4806b41e-rt6_probe
 * @id cpp/linux/f0cda984e4e634b221dbf9642b8ecc5b4806b41e/rt6-probe
 * @description linux-f0cda984e4e634b221dbf9642b8ecc5b4806b41e-net/ipv6/route.c-rt6_probe CVE-2024-40960
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable videv_531, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=videv_531
	and target_0.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("__ipv6_neigh_lookup_noref")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("net_device *")
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("const in6_addr *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("neighbour *")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable videv_531, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("__in6_dev_get")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("net_device *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=videv_531
	)
}

from Function func, Variable videv_531, ExprStmt target_1, ExprStmt target_2
where
not func_0(videv_531, target_1, target_2, func)
and func_1(func, target_1)
and func_2(videv_531, target_2)
and videv_531.getType().hasName("inet6_dev *")
and videv_531.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
