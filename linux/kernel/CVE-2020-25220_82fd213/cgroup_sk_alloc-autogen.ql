/**
 * @name linux-82fd2138a5ffd7e0d4320cdb669e115ee976a26e-cgroup_sk_alloc
 * @id cpp/linux/82fd2138a5ffd7e0d4320cdb669e115ee976a26e/cgroup-sk-alloc
 * @description linux-82fd2138a5ffd7e0d4320cdb669e115ee976a26e-kernel/cgroup/cgroup.c-cgroup_sk_alloc CVE-2020-25220
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskcd_5799, FunctionCall target_5) {
	exists(AssignExpr target_0 |
		target_0.getLValue().(ValueFieldAccess).getTarget().getName()="no_refcnt"
		and target_0.getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
		and target_0.getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_0.getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskcd_5799
		and target_0.getRValue().(Literal).getValue()="1"
		and target_0.getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vskcd_5799, BlockStmt target_6, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="(unknown field)"
		and target_1.getQualifier().(VariableAccess).getTarget()=vskcd_5799
		and target_1.getParent().(ValueFieldAccess).getParent().(IfStmt).getThen()=target_6
}

predicate func_2(VariableAccess target_7, Function func, ReturnStmt target_2) {
		target_2.getParent().(IfStmt).getCondition()=target_7
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vskcd_5799, Function func, IfStmt target_3) {
		target_3.getCondition().(ValueFieldAccess).getTarget().getName()="val"
		and target_3.getCondition().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_3.getCondition().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskcd_5799
		and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("cgroup_get")
		and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("sock_cgroup_ptr")
		and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskcd_5799
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(Parameter vskcd_5799, FunctionCall target_4) {
		target_4.getTarget().hasName("cgroup_get")
		and target_4.getArgument(0).(FunctionCall).getTarget().hasName("sock_cgroup_ptr")
		and target_4.getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskcd_5799
}

*/
predicate func_5(Parameter vskcd_5799, FunctionCall target_5) {
		target_5.getTarget().hasName("sock_cgroup_ptr")
		and target_5.getArgument(0).(VariableAccess).getTarget()=vskcd_5799
}

predicate func_6(Function func, BlockStmt target_6) {
		target_6.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vcgroup_sk_alloc_disabled, VariableAccess target_7) {
		target_7.getTarget()=vcgroup_sk_alloc_disabled
}

from Function func, Parameter vskcd_5799, Variable vcgroup_sk_alloc_disabled, PointerFieldAccess target_1, ReturnStmt target_2, IfStmt target_3, FunctionCall target_5, BlockStmt target_6, VariableAccess target_7
where
not func_0(vskcd_5799, target_5)
and func_1(vskcd_5799, target_6, target_1)
and func_2(target_7, func, target_2)
and func_3(vskcd_5799, func, target_3)
and func_5(vskcd_5799, target_5)
and func_6(func, target_6)
and func_7(vcgroup_sk_alloc_disabled, target_7)
and vskcd_5799.getType().hasName("sock_cgroup_data *")
and vcgroup_sk_alloc_disabled.getType().hasName("bool")
and vskcd_5799.getFunction() = func
and not vcgroup_sk_alloc_disabled.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
