/**
 * @name linux-854e8bb1aa06c578c2c9145fa6bfe3680ef63b23-wrmsr_interception
 * @id cpp/linux/854e8bb1aa06c578c2c9145fa6bfe3680ef63b23/wrmsr-interception
 * @description linux-854e8bb1aa06c578c2c9145fa6bfe3680ef63b23-arch/x86/kvm/svm.c-wrmsr_interception CVE-2014-3610
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmsr_3244, Parameter vsvm_3242, BlockStmt target_1, FunctionCall target_0) {
	target_0.getTarget().hasName("svm_set_msr")
	and not target_0.getTarget().hasName("kvm_set_msr")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="vcpu"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsvm_3242
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmsr_3244
	and target_0.getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Parameter vsvm_3242, BlockStmt target_1) {
	target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("trace_kvm_msr")
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="1"
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u64")
	and target_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_inject_gp")
	and target_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="vcpu"
	and target_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsvm_3242
	and target_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Variable vmsr_3244, Parameter vsvm_3242, FunctionCall target_0, BlockStmt target_1
where
func_0(vmsr_3244, vsvm_3242, target_1, target_0)
and func_1(vsvm_3242, target_1)
and vmsr_3244.getType().hasName("msr_data")
and vsvm_3242.getType().hasName("vcpu_svm *")
and vmsr_3244.(LocalVariable).getFunction() = func
and vsvm_3242.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
