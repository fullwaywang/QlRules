/**
 * @name linux-830ead5fb0c5855ce4d70ba2ed4a673b5f1e7d9b-dpll_pin_direction_set
 * @id cpp/linux/830ead5fb0c5855ce4d70ba2ed4a673b5f1e7d9b/dpll-pin-direction-set
 * @description linux-830ead5fb0c5855ce4d70ba2ed4a673b5f1e7d9b-drivers/dpll/dpll_netlink.c-dpll_pin_direction_set CVE-2024-35836
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpin_802, AddressOfExpr target_3) {
exists(ValueFieldAccess target_0 |
	target_0.getTarget().getName()="capabilities"
	and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="prop"
	and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpin_802
	and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpin_802, VariableAccess target_1) {
	target_1.getTarget()=vpin_802
}

predicate func_2(Parameter vpin_802, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="capabilities"
	and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="prop"
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpin_802
}

predicate func_3(Parameter vpin_802, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="dpll_refs"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpin_802
}

from Function func, Parameter vpin_802, VariableAccess target_1, PointerFieldAccess target_2, AddressOfExpr target_3
where
not func_0(vpin_802, target_3)
and func_1(vpin_802, target_1)
and func_2(vpin_802, target_2)
and func_3(vpin_802, target_3)
and vpin_802.getType().hasName("dpll_pin *")
and vpin_802.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
