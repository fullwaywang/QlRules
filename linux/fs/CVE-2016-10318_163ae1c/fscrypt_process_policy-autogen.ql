/**
 * @name linux-163ae1c6ad6299b19e22b4a35d5ab24a89791a98-fscrypt_process_policy
 * @id cpp/linux/163ae1c6ad6299b19e22b4a35d5ab24a89791a98/fscrypt-process-policy
 * @description linux-163ae1c6ad6299b19e22b4a35d5ab24a89791a98-fs/crypto/policy.c-fscrypt_process_policy CVE-2016-10318
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_95, IfStmt target_1, NotExpr target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("inode_owner_or_capable")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_95
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-13"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="version"
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const fscrypt_policy *")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vinode_95, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("inode_has_encryption_context")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_95
}

from Function func, Parameter vinode_95, IfStmt target_1, NotExpr target_2
where
not func_0(vinode_95, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vinode_95, target_2)
and vinode_95.getType().hasName("inode *")
and vinode_95.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
