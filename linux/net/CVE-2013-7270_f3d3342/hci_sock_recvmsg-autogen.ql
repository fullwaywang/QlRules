/**
 * @name linux-f3d3342602f8bcbf37d7c46641cb9bca7618eb1c-hci_sock_recvmsg
 * @id cpp/linux/f3d3342602f8bcbf37d7c46641cb9bca7618eb1c/hci-sock-recvmsg
 * @description linux-f3d3342602f8bcbf37d7c46641cb9bca7618eb1c-net/bluetooth/hci_sock.c-hci_sock_recvmsg CVE-2013-7270
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vflags_840, Initializer target_0) {
	target_0.getExpr().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_840
	and target_0.getExpr().(BitwiseAndExpr).getRightOperand() instanceof Literal
}

predicate func_2(Parameter vsock_839, Variable vsk_843, Variable vdescriptor_847, FunctionCall target_2) {
	target_2.getTarget().hasName("__dynamic_pr_debug")
	and not target_2.getTarget().hasName("af_alg_wait_for_completion")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdescriptor_847
	and target_2.getArgument(1).(StringLiteral).getValue()="sock %p, sk %p\n"
	and target_2.getArgument(2).(VariableAccess).getTarget()=vsock_839
	and target_2.getArgument(3).(VariableAccess).getTarget()=vsk_843
}

predicate func_3(Variable vskb_844, FunctionCall target_3) {
	target_3.getTarget().hasName("skb_reset_transport_header")
	and not target_3.getTarget().hasName("lock_sock")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vskb_844
}

predicate func_4(Parameter vmsg_840, Variable vskb_844, Variable vcopied_845, Variable verr_845, FunctionCall target_4) {
	target_4.getTarget().hasName("skb_copy_datagram_iovec")
	and not target_4.getTarget().hasName("crypto_ahash_final")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vskb_844
	and target_4.getArgument(1).(Literal).getValue()="0"
	and target_4.getArgument(2).(PointerFieldAccess).getTarget().getName()="msg_iov"
	and target_4.getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_840
	and target_4.getArgument(3).(VariableAccess).getTarget()=vcopied_845
	and target_4.getParent().(AssignExpr).getRValue() = target_4
	and target_4.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_845
}

predicate func_5(Parameter vmsg_840, Variable vsk_843, Variable vskb_844, FunctionCall target_5) {
	target_5.getTarget().hasName("hci_sock_cmsg")
	and not target_5.getTarget().hasName("ahash_request_set_crypt")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vsk_843
	and target_5.getArgument(1).(VariableAccess).getTarget()=vmsg_840
	and target_5.getArgument(2).(VariableAccess).getTarget()=vskb_844
}

predicate func_6(Parameter vmsg_840, Variable vsk_843, Variable vskb_844, FunctionCall target_6) {
	target_6.getTarget().hasName("sock_recv_timestamp")
	and not target_6.getTarget().hasName("release_sock")
	and target_6.getArgument(0).(VariableAccess).getTarget()=vmsg_840
	and target_6.getArgument(1).(VariableAccess).getTarget()=vsk_843
	and target_6.getArgument(2).(VariableAccess).getTarget()=vskb_844
}

predicate func_7(Variable vskb_844, Variable vcopied_845, IfStmt target_58, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcopied_845
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="len"
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_844
	and target_7.getLocation().isBefore(target_58.getLocation())
}

predicate func_9(Variable vsk_843, SwitchStmt target_62) {
exists(FunctionCall target_9 |
	target_9.getTarget().hasName("alg_sk")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vsk_843
	and target_9.getArgument(0).(VariableAccess).getLocation().isBefore(target_62.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_11(Function func) {
exists(PointerFieldAccess target_11 |
	target_11.getTarget().getName()="private"
	and target_11.getQualifier().(VariableAccess).getType().hasName("alg_sock *")
	and target_11.getEnclosingFunction() = func)
}

predicate func_13(Parameter vlen_840, ReturnStmt target_72) {
exists(RelationalOperation target_13 |
	 (target_13 instanceof GTExpr or target_13 instanceof LTExpr)
	and target_13.getGreaterOperand().(VariableAccess).getTarget()=vlen_840
	and target_13.getLesserOperand().(VariableAccess).getType().hasName("unsigned int")
	and target_13.getParent().(IfStmt).getThen()=target_72)
}

predicate func_14(Parameter vlen_840) {
exists(AssignExpr target_14 |
	target_14.getLValue().(VariableAccess).getTarget()=vlen_840
	and target_14.getRValue().(VariableAccess).getType().hasName("unsigned int"))
}

predicate func_16(Function func) {
exists(PointerFieldAccess target_16 |
	target_16.getTarget().getName()="more"
	and target_16.getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
	and target_16.getEnclosingFunction() = func)
}

predicate func_17(Function func) {
exists(AssignExpr target_17 |
	target_17.getLValue().(PointerFieldAccess).getTarget().getName()="more"
	and target_17.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
	and target_17.getRValue() instanceof Literal
	and target_17.getEnclosingFunction() = func)
}

predicate func_18(Function func) {
exists(AddressOfExpr target_18 |
	target_18.getOperand().(PointerFieldAccess).getTarget().getName()="req"
	and target_18.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
	and target_18.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_18.getEnclosingFunction() = func)
}

predicate func_19(Function func) {
exists(PointerFieldAccess target_19 |
	target_19.getTarget().getName()="result"
	and target_19.getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
	and target_19.getEnclosingFunction() = func)
}

predicate func_20(Function func) {
exists(AddressOfExpr target_20 |
	target_20.getOperand().(PointerFieldAccess).getTarget().getName()="req"
	and target_20.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
	and target_20.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_20.getEnclosingFunction() = func)
}

predicate func_21(Function func) {
exists(AddressOfExpr target_21 |
	target_21.getOperand().(PointerFieldAccess).getTarget().getName()="completion"
	and target_21.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
	and target_21.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_21.getEnclosingFunction() = func)
}

predicate func_22(NotExpr target_53, Function func) {
exists(GotoStmt target_22 |
	target_22.getName() ="unlock"
	and target_22.getParent().(IfStmt).getCondition()=target_53
	and target_22.getEnclosingFunction() = func)
}

predicate func_23(Parameter vmsg_840, Parameter vlen_840, Variable vcopied_845, ExprStmt target_64, RelationalOperation target_73) {
exists(FunctionCall target_23 |
	target_23.getTarget().hasName("memcpy_toiovec")
	and target_23.getArgument(0).(PointerFieldAccess).getTarget().getName()="msg_iov"
	and target_23.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_840
	and target_23.getArgument(1).(PointerFieldAccess).getTarget().getName()="result"
	and target_23.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
	and target_23.getArgument(2).(VariableAccess).getTarget()=vlen_840
	and target_23.getParent().(AssignExpr).getRValue() = target_23
	and target_23.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcopied_845
	and target_23.getArgument(2).(VariableAccess).getLocation().isBefore(target_73.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_24(Parameter vlen_840) {
exists(ConditionalExpr target_24 |
	target_24.getCondition().(VariableAccess).getType().hasName("int")
	and target_24.getElse().(VariableAccess).getTarget()=vlen_840)
}

predicate func_25(Parameter vmsg_840, RelationalOperation target_73, ExprStmt target_25) {
	target_25.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="msg_flags"
	and target_25.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_840
	and target_25.getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="32"
	and target_25.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_73
}

predicate func_26(Parameter vmsg_840, PointerFieldAccess target_26) {
	target_26.getTarget().getName()="msg_iov"
	and target_26.getQualifier().(VariableAccess).getTarget()=vmsg_840
	and target_26.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_27(Variable vsk_843, VariableAccess target_27) {
	target_27.getTarget()=vsk_843
	and target_27.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_29(Variable verr_845, VariableAccess target_29) {
	target_29.getTarget()=verr_845
	and target_29.getParent().(AssignExpr).getLValue() = target_29
	and target_29.getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_30(Variable vsk_843, VariableAccess target_30) {
	target_30.getTarget()=vsk_843
	and target_30.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_31(Variable vsk_843, VariableAccess target_31) {
	target_31.getTarget()=vsk_843
	and target_31.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_32(Variable verr_845, VariableAccess target_32) {
	target_32.getTarget()=verr_845
}

predicate func_34(Variable verr_845, VariableAccess target_34) {
	target_34.getTarget()=verr_845
	and target_34.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_35(Variable verr_845, VariableAccess target_35) {
	target_35.getTarget()=verr_845
}

predicate func_36(Parameter vlen_840, Variable vcopied_845, VariableAccess target_36) {
	target_36.getTarget()=vlen_840
	and target_36.getParent().(AssignExpr).getRValue() = target_36
	and target_36.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcopied_845
}

predicate func_38(Parameter vflags_840, BitwiseAndExpr target_48, VariableAccess target_38) {
	target_38.getTarget()=vflags_840
	and target_38.getLocation().isBefore(target_48.getLeftOperand().(VariableAccess).getLocation())
}

predicate func_42(Function func, DoStmt target_42) {
	target_42.getCondition() instanceof Literal
	and target_42.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_42.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_42.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_42
}

/*predicate func_46(Variable vdescriptor_847, ExprStmt target_74, FunctionCall target_46) {
	target_46.getTarget().hasName("__builtin_expect")
	and target_46.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="flags"
	and target_46.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vdescriptor_847
	and target_46.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="1"
	and target_46.getArgument(1) instanceof Literal
	and target_46.getParent().(IfStmt).getThen()=target_74
}

*/
predicate func_47(Variable vdescriptor_847, VariableAccess target_47) {
	target_47.getTarget()=vdescriptor_847
	and target_47.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_48(Parameter vflags_840, ReturnStmt target_72, BitwiseAndExpr target_48) {
	target_48.getLeftOperand().(VariableAccess).getTarget()=vflags_840
	and target_48.getRightOperand().(Literal).getValue()="1"
	and target_48.getParent().(IfStmt).getThen()=target_72
}

predicate func_49(Function func, UnaryMinusExpr target_49) {
	target_49.getValue()="-95"
	and target_49.getEnclosingFunction() = func
}

predicate func_50(Variable vsk_843, ReturnStmt target_51, EqualityOperation target_50) {
	target_50.getLeftOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
	and target_50.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_50.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_843
	and target_50.getParent().(IfStmt).getThen()=target_51
}

predicate func_51(EqualityOperation target_50, Function func, ReturnStmt target_51) {
	target_51.getExpr().(Literal).getValue()="0"
	and target_51.getParent().(IfStmt).getCondition()=target_50
	and target_51.getEnclosingFunction() = func
}

predicate func_52(Parameter vflags_840, Variable vnoblock_842, Variable vsk_843, Variable vskb_844, Variable verr_845, AssignExpr target_52) {
	target_52.getLValue().(VariableAccess).getTarget()=vskb_844
	and target_52.getRValue().(FunctionCall).getTarget().hasName("skb_recv_datagram")
	and target_52.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_843
	and target_52.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vflags_840
	and target_52.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnoblock_842
	and target_52.getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=verr_845
}

predicate func_53(Variable vskb_844, ReturnStmt target_54, NotExpr target_53) {
	target_53.getOperand().(VariableAccess).getTarget()=vskb_844
	and target_53.getParent().(IfStmt).getThen()=target_54
}

predicate func_54(Variable verr_845, NotExpr target_53, ReturnStmt target_54) {
	target_54.getExpr().(VariableAccess).getTarget()=verr_845
	and target_54.getParent().(IfStmt).getCondition()=target_53
}

predicate func_55(Parameter vmsg_840, PointerFieldAccess target_55) {
	target_55.getTarget().getName()="msg_namelen"
	and target_55.getQualifier().(VariableAccess).getTarget()=vmsg_840
}

predicate func_56(Variable vskb_844, Variable vcopied_845, NotExpr target_53, RelationalOperation target_73, VariableAccess target_56) {
	target_56.getTarget()=vcopied_845
	and target_56.getParent().(AssignExpr).getLValue() = target_56
	and target_56.getParent().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="len"
	and target_56.getParent().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_844
	and target_53.getOperand().(VariableAccess).getLocation().isBefore(target_56.getParent().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_56.getLocation().isBefore(target_73.getGreaterOperand().(VariableAccess).getLocation())
}

/*predicate func_57(Variable vskb_844, PointerFieldAccess target_57) {
	target_57.getTarget().getName()="len"
	and target_57.getQualifier().(VariableAccess).getTarget()=vskb_844
}

*/
predicate func_58(Parameter vlen_840, Variable vcopied_845, Function func, IfStmt target_58) {
	target_58.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_840
	and target_58.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vcopied_845
	and target_58.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_58.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcopied_845
	and target_58.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vlen_840
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_58
}

/*predicate func_59(Parameter vlen_840, Variable vcopied_845, BlockStmt target_77, ExprStmt target_7, VariableAccess target_59) {
	target_59.getTarget()=vcopied_845
	and target_59.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget()=vlen_840
	and target_59.getParent().(LTExpr).getParent().(IfStmt).getThen()=target_77
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_59.getLocation())
}

*/
/*predicate func_60(Parameter vlen_840, Variable vcopied_845, AssignExpr target_60) {
	target_60.getLValue().(VariableAccess).getTarget()=vcopied_845
	and target_60.getRValue().(VariableAccess).getTarget()=vlen_840
}

*/
predicate func_61(Variable verr_845, Function func, ExprStmt target_61) {
	target_61.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_845
	and target_61.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_61
}

predicate func_62(Variable vsk_843, Function func, SwitchStmt target_62) {
	target_62.getExpr().(PointerFieldAccess).getTarget().getName()="channel"
	and target_62.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_843
	and target_62.getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="0"
	and target_62.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
	and target_62.getStmt().(BlockStmt).getStmt(3).(SwitchCase).getExpr().(Literal).getValue()="1"
	and target_62.getStmt().(BlockStmt).getStmt(4).(SwitchCase).getExpr().(Literal).getValue()="3"
	and target_62.getStmt().(BlockStmt).getStmt(5).(SwitchCase).getExpr().(Literal).getValue()="2"
	and target_62.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_62
}

/*predicate func_63(Function func, SwitchCase target_63) {
	target_63.getExpr().(Literal).getValue()="0"
	and target_63.getEnclosingFunction() = func
}

*/
predicate func_64(Function func, ExprStmt target_64) {
	target_64.getExpr() instanceof FunctionCall
	and target_64.getEnclosingFunction() = func
}

/*predicate func_65(PointerFieldAccess target_79, Function func, BreakStmt target_65) {
	target_65.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_79
	and target_65.getEnclosingFunction() = func
}

*/
/*predicate func_66(Function func, SwitchCase target_66) {
	target_66.getExpr().(Literal).getValue()="1"
	and target_66.getEnclosingFunction() = func
}

*/
/*predicate func_67(Function func, SwitchCase target_67) {
	target_67.getExpr().(Literal).getValue()="3"
	and target_67.getEnclosingFunction() = func
}

*/
/*predicate func_68(Function func, SwitchCase target_68) {
	target_68.getExpr().(Literal).getValue()="2"
	and target_68.getEnclosingFunction() = func
}

*/
/*predicate func_69(PointerFieldAccess target_79, Function func, BreakStmt target_69) {
	target_69.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_79
	and target_69.getEnclosingFunction() = func
}

*/
predicate func_70(Variable vsk_843, Variable vskb_844, Function func, ExprStmt target_70) {
	target_70.getExpr().(FunctionCall).getTarget().hasName("skb_free_datagram")
	and target_70.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_843
	and target_70.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_844
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_70
}

predicate func_71(Variable vcopied_845, Variable verr_845, Function func, ReturnStmt target_71) {
	target_71.getExpr().(ConditionalExpr).getCondition().(VariableAccess).getTarget()=verr_845
	and target_71.getExpr().(ConditionalExpr).getElse().(VariableAccess).getTarget()=vcopied_845
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_71
}

predicate func_72(Function func, ReturnStmt target_72) {
	target_72.getExpr() instanceof UnaryMinusExpr
	and target_72.getEnclosingFunction() = func
}

predicate func_73(Parameter vlen_840, Variable vcopied_845, RelationalOperation target_73) {
	 (target_73 instanceof GTExpr or target_73 instanceof LTExpr)
	and target_73.getLesserOperand().(VariableAccess).getTarget()=vlen_840
	and target_73.getGreaterOperand().(VariableAccess).getTarget()=vcopied_845
}

predicate func_74(Function func, ExprStmt target_74) {
	target_74.getExpr() instanceof FunctionCall
	and target_74.getEnclosingFunction() = func
}

predicate func_77(Function func, BlockStmt target_77) {
	target_77.getStmt(0) instanceof ExprStmt
	and target_77.getStmt(1).(ExprStmt).getExpr() instanceof AssignExpr
	and target_77.getEnclosingFunction() = func
}

predicate func_79(Variable vsk_843, PointerFieldAccess target_79) {
	target_79.getTarget().getName()="channel"
	and target_79.getQualifier().(VariableAccess).getTarget()=vsk_843
}

from Function func, Parameter vsock_839, Parameter vmsg_840, Parameter vlen_840, Parameter vflags_840, Variable vnoblock_842, Variable vsk_843, Variable vskb_844, Variable vcopied_845, Variable verr_845, Variable vdescriptor_847, Initializer target_0, FunctionCall target_2, FunctionCall target_3, FunctionCall target_4, FunctionCall target_5, FunctionCall target_6, ExprStmt target_7, ExprStmt target_25, PointerFieldAccess target_26, VariableAccess target_27, VariableAccess target_29, VariableAccess target_30, VariableAccess target_31, VariableAccess target_32, VariableAccess target_34, VariableAccess target_35, VariableAccess target_36, VariableAccess target_38, DoStmt target_42, VariableAccess target_47, BitwiseAndExpr target_48, UnaryMinusExpr target_49, EqualityOperation target_50, ReturnStmt target_51, AssignExpr target_52, NotExpr target_53, ReturnStmt target_54, PointerFieldAccess target_55, VariableAccess target_56, IfStmt target_58, ExprStmt target_61, SwitchStmt target_62, ExprStmt target_64, ExprStmt target_70, ReturnStmt target_71, ReturnStmt target_72, RelationalOperation target_73, ExprStmt target_74, BlockStmt target_77, PointerFieldAccess target_79
where
func_0(vflags_840, target_0)
and func_2(vsock_839, vsk_843, vdescriptor_847, target_2)
and func_3(vskb_844, target_3)
and func_4(vmsg_840, vskb_844, vcopied_845, verr_845, target_4)
and func_5(vmsg_840, vsk_843, vskb_844, target_5)
and func_6(vmsg_840, vsk_843, vskb_844, target_6)
and func_7(vskb_844, vcopied_845, target_58, target_7)
and not func_9(vsk_843, target_62)
and not func_11(func)
and not func_13(vlen_840, target_72)
and not func_14(vlen_840)
and not func_16(func)
and not func_17(func)
and not func_18(func)
and not func_19(func)
and not func_20(func)
and not func_21(func)
and not func_22(target_53, func)
and not func_23(vmsg_840, vlen_840, vcopied_845, target_64, target_73)
and not func_24(vlen_840)
and func_25(vmsg_840, target_73, target_25)
and func_26(vmsg_840, target_26)
and func_27(vsk_843, target_27)
and func_29(verr_845, target_29)
and func_30(vsk_843, target_30)
and func_31(vsk_843, target_31)
and func_32(verr_845, target_32)
and func_34(verr_845, target_34)
and func_35(verr_845, target_35)
and func_36(vlen_840, vcopied_845, target_36)
and func_38(vflags_840, target_48, target_38)
and func_42(func, target_42)
and func_47(vdescriptor_847, target_47)
and func_48(vflags_840, target_72, target_48)
and func_49(func, target_49)
and func_50(vsk_843, target_51, target_50)
and func_51(target_50, func, target_51)
and func_52(vflags_840, vnoblock_842, vsk_843, vskb_844, verr_845, target_52)
and func_53(vskb_844, target_54, target_53)
and func_54(verr_845, target_53, target_54)
and func_55(vmsg_840, target_55)
and func_56(vskb_844, vcopied_845, target_53, target_73, target_56)
and func_58(vlen_840, vcopied_845, func, target_58)
and func_61(verr_845, func, target_61)
and func_62(vsk_843, func, target_62)
and func_64(func, target_64)
and func_70(vsk_843, vskb_844, func, target_70)
and func_71(vcopied_845, verr_845, func, target_71)
and func_72(func, target_72)
and func_73(vlen_840, vcopied_845, target_73)
and func_74(func, target_74)
and func_77(func, target_77)
and func_79(vsk_843, target_79)
and vsock_839.getType().hasName("socket *")
and vmsg_840.getType().hasName("msghdr *")
and vlen_840.getType().hasName("size_t")
and vflags_840.getType().hasName("int")
and vnoblock_842.getType().hasName("int")
and vsk_843.getType().hasName("sock *")
and vskb_844.getType().hasName("sk_buff *")
and vcopied_845.getType().hasName("int")
and verr_845.getType().hasName("int")
and vdescriptor_847.getType().hasName("_ddebug")
and vsock_839.getFunction() = func
and vmsg_840.getFunction() = func
and vlen_840.getFunction() = func
and vflags_840.getFunction() = func
and vnoblock_842.(LocalVariable).getFunction() = func
and vsk_843.(LocalVariable).getFunction() = func
and vskb_844.(LocalVariable).getFunction() = func
and vcopied_845.(LocalVariable).getFunction() = func
and verr_845.(LocalVariable).getFunction() = func
and vdescriptor_847.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
