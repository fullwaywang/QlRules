/**
 * @name linux-7e0438f83dc769465ee663bb5dcf8cc154940712-tpm_chip_unregister
 * @id cpp/linux/7e0438f83dc769465ee663bb5dcf8cc154940712/tpm-chip-unregister
 * @description linux-7e0438f83dc769465ee663bb5dcf8cc154940712-drivers/char/tpm/tpm-chip.c-tpm_chip_unregister CVE-2022-2977
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vchip_650, FunctionCall target_0) {
	target_0.getTarget().hasName("cdev_device_del")
	and not target_0.getTarget().hasName("tpm_devs_remove")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cdevs"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_650
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="devs"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_650
}

predicate func_1(Parameter vchip_650, VariableAccess target_1) {
	target_1.getTarget()=vchip_650
	and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Parameter vchip_650, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="cdevs"
	and target_2.getQualifier().(VariableAccess).getTarget()=vchip_650
}

predicate func_3(Parameter vchip_650, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="devs"
	and target_3.getQualifier().(VariableAccess).getTarget()=vchip_650
}

from Function func, Parameter vchip_650, FunctionCall target_0, VariableAccess target_1, PointerFieldAccess target_2, PointerFieldAccess target_3
where
func_0(vchip_650, target_0)
and func_1(vchip_650, target_1)
and func_2(vchip_650, target_2)
and func_3(vchip_650, target_3)
and vchip_650.getType().hasName("tpm_chip *")
and vchip_650.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
