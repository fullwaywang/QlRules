/**
 * @name linux-eeb1497277d6b1a0a34ed36b97e18f2bd7d6de0d-valid_cc
 * @id cpp/linux/eeb1497277d6b1a0a34ed36b97e18f2bd7d6de0d/valid-cc
 * @description linux-eeb1497277d6b1a0a34ed36b97e18f2bd7d6de0d-net/ipv4/inet_diag.c-valid_cc CVE-2011-2213
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vop_434, ReturnStmt target_2, RelationalOperation target_1) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand() instanceof RelationalOperation
		and target_0.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="yes"
		and target_0.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vop_434
		and target_0.getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="3"
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_0.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vop_434, ReturnStmt target_2, RelationalOperation target_1) {
		 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
		and target_1.getLesserOperand().(PointerFieldAccess).getTarget().getName()="yes"
		and target_1.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vop_434
		and target_1.getGreaterOperand().(Literal).getValue()="4"
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(RelationalOperation target_1, Function func, ReturnStmt target_2) {
		target_2.getExpr().(Literal).getValue()="0"
		and target_2.getParent().(IfStmt).getCondition()=target_1
		and target_2.getEnclosingFunction() = func
}

from Function func, Variable vop_434, RelationalOperation target_1, ReturnStmt target_2
where
not func_0(vop_434, target_2, target_1)
and func_1(vop_434, target_2, target_1)
and func_2(target_1, func, target_2)
and vop_434.getType().hasName("const inet_diag_bc_op *")
and vop_434.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
