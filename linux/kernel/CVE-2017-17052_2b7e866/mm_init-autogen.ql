/**
 * @name linux-2b7e8665b4ff51c034c55df3cff76518d1a9ee3a-mm_init
 * @id cpp/linux/2b7e8665b4ff51c034c55df3cff76518d1a9ee3a/mm-init
 * @description linux-2b7e8665b4ff51c034c55df3cff76518d1a9ee3a-kernel/fork.c-mm_init CVE-2017-17052
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(DoStmt target_0 |
	target_0.getCondition().(Literal).getValue()="0"
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__write_once_size")
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("mmu_notifier_mm_init")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("mm_struct *")
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
