/**
 * @name linux-5b09e88e1bf7fe86540fab4b5f3eece8abead39e-hns3_nic_net_open
 * @id cpp/linux/5b09e88e1bf7fe86540fab4b5f3eece8abead39e/hns3-nic-net-open
 * @description linux-5b09e88e1bf7fe86540fab4b5f3eece8abead39e-drivers/net/ethernet/hisilicon/hns3/hns3_enet.c-hns3_nic_net_open CVE-2021-47400
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_774, Parameter vnetdev_772, ExprStmt target_1, ExprStmt target_3, FunctionCall target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("test_bit")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="state"
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_774
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("netdev_warn")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_772
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="net open repeatedly!\n"
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vnetdev_772, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("netif_carrier_off")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_772
}

predicate func_3(Variable vpriv_774, ExprStmt target_3) {
	target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="set_timer_task"
	and target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ae_algo"
	and target_3.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hnae3_handle *")
	and target_3.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ae_handle"
	and target_3.getExpr().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_774
}

predicate func_4(Parameter vnetdev_772, FunctionCall target_4) {
	target_4.getTarget().hasName("hns3_nic_resetting")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vnetdev_772
}

from Function func, Variable vpriv_774, Parameter vnetdev_772, ExprStmt target_1, ExprStmt target_3, FunctionCall target_4
where
not func_0(vpriv_774, vnetdev_772, target_1, target_3, target_4, func)
and func_1(vnetdev_772, target_1)
and func_3(vpriv_774, target_3)
and func_4(vnetdev_772, target_4)
and vpriv_774.getType().hasName("hns3_nic_priv *")
and vnetdev_772.getType().hasName("net_device *")
and vpriv_774.(LocalVariable).getFunction() = func
and vnetdev_772.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
