/**
 * @name linux-f534dc438828cc3f1f8c6895b8bdfbef079521fb-axi_chan_handle_err
 * @id cpp/linux/f534dc438828cc3f1f8c6895b8bdfbef079521fb/axi-chan-handle-err
 * @description linux-f534dc438828cc3f1f8c6895b8bdfbef079521fb-drivers/dma/dw-axi-dmac/dw-axi-dmac-platform.c-axi_chan_handle_err CVE-2023-52899
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vchan_543, Variable vvd_545, ExprStmt target_1, AddressOfExpr target_2, FunctionCall target_3, ExprStmt target_4, AddressOfExpr target_5, Function func) {
exists(IfStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(0) |
					obj_3.getTarget().hasName("chan2dev")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=vchan_543
				)
				and exists(FunctionCall obj_4 | obj_4=obj_2.getArgument(2) |
					obj_4.getTarget().hasName("axi_chan_name")
					and obj_4.getArgument(0).(VariableAccess).getTarget()=vchan_543
				)
				and obj_2.getTarget().hasName("_dev_err")
				and obj_2.getArgument(1).(StringLiteral).getValue()="BUG: %s, IRQ with no descriptors\n"
			)
		)
		and obj_0.getStmt(1).(GotoStmt).getName() ="out"
	)
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vvd_545
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vvd_545, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="node"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvd_545
			)
		)
		and obj_0.getTarget().hasName("list_del")
	)
}

predicate func_2(Parameter vchan_543, AddressOfExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="vc"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vchan_543
	)
}

predicate func_3(Parameter vchan_543, FunctionCall target_3) {
	target_3.getTarget().hasName("chan2dev")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vchan_543
}

predicate func_4(Parameter vchan_543, Variable vvd_545, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="vc"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vchan_543
				)
			)
			and obj_1.getTarget().hasName("vchan_next_desc")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vvd_545
	)
}

predicate func_5(Variable vvd_545, AddressOfExpr target_5) {
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getOperand() |
		obj_0.getTarget().getName()="node"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvd_545
	)
}

from Function func, Parameter vchan_543, Variable vvd_545, ExprStmt target_1, AddressOfExpr target_2, FunctionCall target_3, ExprStmt target_4, AddressOfExpr target_5
where
not func_0(vchan_543, vvd_545, target_1, target_2, target_3, target_4, target_5, func)
and func_1(vvd_545, target_1)
and func_2(vchan_543, target_2)
and func_3(vchan_543, target_3)
and func_4(vchan_543, vvd_545, target_4)
and func_5(vvd_545, target_5)
and vchan_543.getType().hasName("axi_dma_chan *")
and vvd_545.getType().hasName("virt_dma_desc *")
and vchan_543.getFunction() = func
and vvd_545.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
