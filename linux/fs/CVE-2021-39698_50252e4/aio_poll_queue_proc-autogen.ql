/**
 * @name linux-50252e4b5e98-aio_poll_queue_proc
 * @id cpp/linux/50252e4b5e98/aio-poll-queue-proc
 * @description linux-50252e4b5e98-aio_poll_queue_proc CVE-2021-39698
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpt_1753, PointerFieldAccess target_2) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="queued"
		and target_0.getQualifier().(VariableAccess).getTarget()=vpt_1753
		and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vpt_1753, ExprStmt target_5, ExprStmt target_6, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="queued"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpt_1753
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vpt_1753, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="(unknown field)"
		and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="iocb"
		and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpt_1753
		and target_2.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_2.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_3(Variable vpt_1753, ValueFieldAccess target_3) {
		target_3.getTarget().getName()="head"
		and target_3.getQualifier().(ValueFieldAccess).getTarget().getName()="poll"
		and target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="iocb"
		and target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpt_1753
		and target_3.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_3.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_5(Variable vpt_1753, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="error"
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpt_1753
		and target_5.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
}

predicate func_6(Variable vpt_1753, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="error"
		and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpt_1753
		and target_6.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Variable vpt_1753, PointerFieldAccess target_2, ValueFieldAccess target_3, ExprStmt target_5, ExprStmt target_6
where
not func_0(vpt_1753, target_2)
and not func_1(vpt_1753, target_5, target_6, func)
and func_2(vpt_1753, target_2)
and func_3(vpt_1753, target_3)
and func_5(vpt_1753, target_5)
and func_6(vpt_1753, target_6)
and vpt_1753.getType().hasName("aio_poll_table *")
and vpt_1753.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
