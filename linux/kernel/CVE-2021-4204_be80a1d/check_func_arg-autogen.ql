/**
 * @name linux-be80a1d3f9dbe5aee79a325964f7037fe2d92f30-check_func_arg
 * @id cpp/linux/be80a1d3f9dbe5aee79a325964f7037fe2d92f30/check-func-arg
 * @description linux-be80a1d3f9dbe5aee79a325964f7037fe2d92f30-kernel/bpf/verifier.c-check_func_arg CVE-2021-4204
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vregno_5262, Variable vreg_5263, Parameter venv_5258, FunctionCall target_0) {
	target_0.getTarget().hasName("check_ctx_reg")
	and not target_0.getTarget().hasName("check_ptr_off_reg")
	and target_0.getArgument(0).(VariableAccess).getTarget()=venv_5258
	and target_0.getArgument(1).(VariableAccess).getTarget()=vreg_5263
	and target_0.getArgument(2).(VariableAccess).getTarget()=vregno_5262
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vregno_5262, Variable vreg_5263, Parameter venv_5258, FunctionCall target_0
where
func_0(vregno_5262, vreg_5263, venv_5258, target_0)
and vregno_5262.getType().hasName("u32")
and vreg_5263.getType().hasName("bpf_reg_state *")
and venv_5258.getType().hasName("bpf_verifier_env *")
and vregno_5262.(LocalVariable).getFunction() = func
and vreg_5263.(LocalVariable).getFunction() = func
and venv_5258.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
