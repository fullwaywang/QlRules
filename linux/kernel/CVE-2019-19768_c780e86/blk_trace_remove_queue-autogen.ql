/**
 * @name linux-c780e86dd48ef6467a1146cf7d0fe1e05a635039-blk_trace_remove_queue
 * @id cpp/linux/c780e86dd48ef6467a1146cf7d0fe1e05a635039/blk-trace-remove-queue
 * @description linux-c780e86dd48ef6467a1146cf7d0fe1e05a635039-kernel/trace/blktrace.c-blk_trace_remove_queue CVE-2019-19768
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("synchronize_rcu")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("blk_trace_free")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("blk_trace *")
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
