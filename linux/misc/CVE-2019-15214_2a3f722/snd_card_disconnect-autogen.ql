/**
 * @name linux-2a3f7221acddfe1caa9ff09b3a8158c39b2fdeac-snd_card_disconnect
 * @id cpp/linux/2a3f7221acddfe1caa9ff09b3a8158c39b2fdeac/snd-card-disconnect
 * @description linux-2a3f7221acddfe1caa9ff09b3a8158c39b2fdeac-sound/core/init.c-snd_card_disconnect CVE-2019-15214
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsnd_card_mutex, ExprStmt target_4, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsnd_card_mutex
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getLocation().isBefore(target_4.getLocation())
}

predicate func_1(Variable vsnd_cards, Parameter vcard_370, ExprStmt target_4, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vsnd_cards
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="number"
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_370
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_1.getLocation().isBefore(target_4.getLocation())
}

predicate func_2(Variable vsnd_cards_lock, Parameter vcard_370, ExprStmt target_4, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("clear_bit")
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="number"
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_370
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsnd_cards_lock
	and target_2.getLocation().isBefore(target_4.getLocation())
}

predicate func_3(Variable vsnd_card_mutex, ExprStmt target_4, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsnd_card_mutex
	and target_3.getLocation().isBefore(target_4.getLocation())
}

predicate func_4(Parameter vcard_370, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="files_lock"
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_370
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

from Function func, Variable vsnd_card_mutex, Variable vsnd_cards, Variable vsnd_cards_lock, Parameter vcard_370, ExprStmt target_0, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4
where
func_0(vsnd_card_mutex, target_4, target_0)
and func_1(vsnd_cards, vcard_370, target_4, target_1)
and func_2(vsnd_cards_lock, vcard_370, target_4, target_2)
and func_3(vsnd_card_mutex, target_4, target_3)
and func_4(vcard_370, func, target_4)
and vsnd_card_mutex.getType().hasName("mutex")
and vsnd_cards.getType() instanceof ArrayType
and vsnd_cards_lock.getType() instanceof ArrayType
and vcard_370.getType().hasName("snd_card *")
and not vsnd_card_mutex.getParentScope+() = func
and not vsnd_cards.getParentScope+() = func
and not vsnd_cards_lock.getParentScope+() = func
and vcard_370.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
