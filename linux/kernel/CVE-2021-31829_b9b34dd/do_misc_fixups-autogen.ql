/**
 * @name linux-b9b34ddbe2076ade359cd5ce7537d5ed019e9807-do_misc_fixups
 * @id cpp/linux/b9b34ddbe2076ade359cd5ce7537d5ed019e9807/do-misc-fixups
 * @description linux-b9b34ddbe2076ade359cd5ce7537d5ed019e9807-kernel/bpf/verifier.c-do_misc_fixups CVE-2021-31829
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="80"
	and not target_1.getValue()="176"
	and target_1.getParent().(BitwiseAndExpr).getParent().(BitwiseOrExpr).getRightOperand().(BitwiseAndExpr).getValue()="80"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vissrc_12374, BlockStmt target_11, LogicalAndExpr target_12) {
exists(NotExpr target_2 |
	target_2.getOperand().(VariableAccess).getTarget()=vissrc_12374
	and target_2.getParent().(IfStmt).getThen()=target_11
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_12.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_5(Variable vpatch_12373, VariableAccess target_7, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vpatch_12373
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_6(Variable vinsn_12296, VariableAccess target_7, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="src_reg"
	and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_12296
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_7(Variable vissrc_12374, BlockStmt target_11, VariableAccess target_7) {
	target_7.getTarget()=vissrc_12374
	and target_7.getParent().(IfStmt).getThen()=target_11
}

predicate func_11(Function func, BlockStmt target_11) {
	target_11.getStmt(0) instanceof ExprStmt
	and target_11.getStmt(1) instanceof ExprStmt
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vissrc_12374, LogicalAndExpr target_12) {
	target_12.getLeftOperand().(VariableAccess).getTarget()=vissrc_12374
	and target_12.getRightOperand().(VariableAccess).getTarget().getType().hasName("bool")
}

from Function func, Variable vinsn_12296, Variable vpatch_12373, Variable vissrc_12374, Literal target_1, ExprStmt target_5, ExprStmt target_6, VariableAccess target_7, BlockStmt target_11, LogicalAndExpr target_12
where
func_1(func, target_1)
and not func_2(vissrc_12374, target_11, target_12)
and func_5(vpatch_12373, target_7, target_5)
and func_6(vinsn_12296, target_7, target_6)
and func_7(vissrc_12374, target_11, target_7)
and func_11(func, target_11)
and func_12(vissrc_12374, target_12)
and vinsn_12296.getType().hasName("bpf_insn *")
and vpatch_12373.getType().hasName("bpf_insn *")
and vissrc_12374.getType().hasName("bool")
and vinsn_12296.(LocalVariable).getFunction() = func
and vpatch_12373.(LocalVariable).getFunction() = func
and vissrc_12374.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
