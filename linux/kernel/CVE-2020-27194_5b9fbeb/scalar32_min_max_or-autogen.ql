/**
 * @name linux-5b9fbeb75b6a98955f628e205ac26689bcb1383e-scalar32_min_max_or
 * @id cpp/linux/5b9fbeb75b6a98955f628e205ac26689bcb1383e/scalar32-min-max-or
 * @description linux-5b9fbeb75b6a98955f628e205ac26689bcb1383e-scalar32_min_max_or CVE-2020-27194
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsrc_reg_5665, FunctionCall target_12) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="s32_min_value"
		and target_0.getQualifier().(VariableAccess).getTarget()=vsrc_reg_5665
		and target_12.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsrc_reg_5665) {
	exists(PointerFieldAccess target_1 |
		target_1.getTarget().getName()="u32_min_value"
		and target_1.getQualifier().(VariableAccess).getTarget()=vsrc_reg_5665)
}

predicate func_2(Parameter vdst_reg_5664, ExprStmt target_13, ExprStmt target_14) {
	exists(PointerFieldAccess target_2 |
		target_2.getTarget().getName()="u32_min_value"
		and target_2.getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
		and target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(VariableAccess).getLocation())
		and target_2.getQualifier().(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vdst_reg_5664, ExprStmt target_14) {
	exists(PointerFieldAccess target_3 |
		target_3.getTarget().getName()="u32_max_value"
		and target_3.getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
		and target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vsrc_reg_5665, VariableAccess target_4) {
		target_4.getTarget()=vsrc_reg_5665
}

predicate func_5(Parameter vsrc_reg_5665, VariableAccess target_5) {
		target_5.getTarget()=vsrc_reg_5665
}

predicate func_6(Parameter vdst_reg_5664, VariableAccess target_6) {
		target_6.getTarget()=vdst_reg_5664
}

predicate func_7(Parameter vdst_reg_5664, VariableAccess target_7) {
		target_7.getTarget()=vdst_reg_5664
}

predicate func_8(Parameter vsrc_reg_5665, PointerFieldAccess target_8) {
		target_8.getTarget().getName()="smin_value"
		and target_8.getQualifier().(VariableAccess).getTarget()=vsrc_reg_5665
}

predicate func_9(Parameter vsrc_reg_5665, PointerFieldAccess target_9) {
		target_9.getTarget().getName()="umin_value"
		and target_9.getQualifier().(VariableAccess).getTarget()=vsrc_reg_5665
}

predicate func_10(Parameter vdst_reg_5664, PointerFieldAccess target_10) {
		target_10.getTarget().getName()="umin_value"
		and target_10.getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
}

predicate func_11(Parameter vdst_reg_5664, PointerFieldAccess target_11) {
		target_11.getTarget().getName()="umax_value"
		and target_11.getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
}

predicate func_12(Parameter vsrc_reg_5665, FunctionCall target_12) {
		target_12.getTarget().hasName("tnum_subreg_is_const")
		and target_12.getArgument(0).(PointerFieldAccess).getTarget().getName()="var_off"
		and target_12.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsrc_reg_5665
}

predicate func_13(Parameter vdst_reg_5664, ExprStmt target_13) {
		target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s32_min_value"
		and target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
		and target_13.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="umin_value"
		and target_13.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
}

predicate func_14(Parameter vdst_reg_5664, ExprStmt target_14) {
		target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s32_max_value"
		and target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
		and target_14.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="umax_value"
		and target_14.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_reg_5664
}

from Function func, Parameter vdst_reg_5664, Parameter vsrc_reg_5665, VariableAccess target_4, VariableAccess target_5, VariableAccess target_6, VariableAccess target_7, PointerFieldAccess target_8, PointerFieldAccess target_9, PointerFieldAccess target_10, PointerFieldAccess target_11, FunctionCall target_12, ExprStmt target_13, ExprStmt target_14
where
not func_0(vsrc_reg_5665, target_12)
and not func_1(vsrc_reg_5665)
and not func_2(vdst_reg_5664, target_13, target_14)
and not func_3(vdst_reg_5664, target_14)
and func_4(vsrc_reg_5665, target_4)
and func_5(vsrc_reg_5665, target_5)
and func_6(vdst_reg_5664, target_6)
and func_7(vdst_reg_5664, target_7)
and func_8(vsrc_reg_5665, target_8)
and func_9(vsrc_reg_5665, target_9)
and func_10(vdst_reg_5664, target_10)
and func_11(vdst_reg_5664, target_11)
and func_12(vsrc_reg_5665, target_12)
and func_13(vdst_reg_5664, target_13)
and func_14(vdst_reg_5664, target_14)
and vdst_reg_5664.getType().hasName("bpf_reg_state *")
and vsrc_reg_5665.getType().hasName("bpf_reg_state *")
and vdst_reg_5664.getFunction() = func
and vsrc_reg_5665.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
