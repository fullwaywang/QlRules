/**
 * @name linux-934e1e4331859183a861f396d7dfaf33cb5afb02-__bch_count_data
 * @id cpp/linux/934e1e4331859183a861f396d7dfaf33cb5afb02/--bch-count-data
 * @description linux-934e1e4331859183a861f396d7dfaf33cb5afb02-drivers/md/bcache/bset.c-__bch_count_data CVE-2024-39482
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vb_54, Variable viter_57, FunctionCall target_1) {
	target_1.getTarget().hasName("bch_btree_iter_init")
	and not target_1.getTarget().hasName("bch_btree_iter_stack_init")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vb_54
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_57
	and target_1.getArgument(2).(Literal).getValue()="0"
}

predicate func_2(Function func) {
exists(AddressOfExpr target_2 |
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="iter"
		and obj_0.getQualifier() instanceof AddressOfExpr
	)
	and exists(FunctionCall obj_1 | obj_1=target_2.getParent() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				obj_3.getTarget().hasName("bch_btree_iter_next")
				and obj_3.getArgument(0) instanceof AddressOfExpr
			)
		)
	)
	and target_2.getEnclosingFunction() = func
)
}

predicate func_3(Variable viter_57, AddressOfExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=viter_57
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("bch_btree_iter_next")
}

from Function func, Parameter vb_54, Variable viter_57, FunctionCall target_1, AddressOfExpr target_3
where
func_1(vb_54, viter_57, target_1)
and not func_2(func)
and func_3(viter_57, target_3)
and vb_54.getType().hasName("btree_keys *")
and viter_57.getType().hasName("btree_iter")
and vb_54.getFunction() = func
and viter_57.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
