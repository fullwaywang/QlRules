/**
 * @name linux-47b0c2e4c220f2251fd8dcfbb44479819c715e15-__kvm_mmu_prepare_zap_page
 * @id cpp/linux/47b0c2e4c220f2251fd8dcfbb44479819c715e15/--kvm-mmu-prepare-zap-page
 * @description linux-47b0c2e4c220f2251fd8dcfbb44479819c715e15-__kvm_mmu_prepare_zap_page CVE-2022-45869
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

/*predicate func_0(Function func, FunctionDeclarationEntry target_0) {
		target_0.getType() instanceof VoidType
		and target_0.getEnclosingFunction() = func
}

*/
predicate func_1(Function func, FunctionCall target_1) {
		target_1.getTarget().hasName("__compiletime_assert_2634")
		and not target_1.getTarget().hasName("__compiletime_assert_2636")
		and target_1.getParent().(ExprStmt).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_make_all_cpus_request")
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func) {
	exists(DoStmt target_2 |
		target_2.getCondition() instanceof Literal
		and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2)
}

from Function func, FunctionCall target_1
where
func_1(func, target_1)
and not func_2(func)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
