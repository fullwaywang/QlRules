/**
 * @name linux-06b5a69c27ec405a3c3f2da8520ff1ee70b94a21-do_sync_mmap_readahead
 * @id cpp/linux/06b5a69c27ec405a3c3f2da8520ff1ee70b94a21/do-sync-mmap-readahead
 * @description linux-06b5a69c27ec405a3c3f2da8520ff1ee70b94a21-mm/filemap.c-do_sync_mmap_readahead CVE-2024-41031
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BlockStmt target_2, Function func) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof BitwiseAndExpr
	and target_0.getRightOperand().(RelationalOperation).getValue()="1"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Variable vvm_flags_3155, BlockStmt target_2, BitwiseAndExpr target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vvm_flags_3155
	and target_1.getRightOperand().(Literal).getValue()="536870912"
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("maybe_unlock_mmap_for_io")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("vm_fault *")
				and obj_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("file *")
			)
			and obj_1.getLValue().(VariableAccess).getTarget().getType().hasName("file *")
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_2.getStmt(1) |
		exists(AssignAndExpr obj_4 | obj_4=obj_3.getExpr() |
			exists(ValueFieldAccess obj_5 | obj_5=obj_4.getLValue() |
				obj_5.getTarget().getName()="_index"
				and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("readahead_control")
			)
			and obj_4.getRValue().(ComplementExpr).getValue()="18446744073709551104"
		)
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vvm_flags_3155, BitwiseAndExpr target_1, BlockStmt target_2
where
not func_0(target_2, func)
and func_1(vvm_flags_3155, target_2, target_1)
and func_2(func, target_2)
and vvm_flags_3155.getType().hasName("unsigned long")
and vvm_flags_3155.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
