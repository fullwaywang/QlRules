/**
 * @name linux-92964c79b357efd980812c4de5c1fd2ec8bb5520-netlink_dump
 * @id cpp/linux/92964c79b357efd980812c4de5c1fd2ec8bb5520/netlink-dump
 * @description linux-92964c79b357efd980812c4de5c1fd2ec8bb5520-net/netlink/af_netlink.c-netlink_dump CVE-2016-9806
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnlk_2058, ExprStmt target_9, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="cb_mutex"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnlk_2058
	and target_0.getLocation().isBefore(target_9.getLocation())
}

predicate func_1(Variable vcb_2059, ExprStmt target_10) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getType().hasName("module *")
	and target_1.getRValue().(PointerFieldAccess).getTarget().getName()="module"
	and target_1.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcb_2059
	and target_1.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vcb_2059, Variable vskb_2060, ExprStmt target_11) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getTarget()=vskb_2060
	and target_2.getRValue().(PointerFieldAccess).getTarget().getName()="skb"
	and target_2.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcb_2059
	and target_11.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_2.getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("module_put")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("module *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_5(Variable vskb_2060, ExprStmt target_12, Function func) {
exists(ExprStmt target_5 |
	target_5.getExpr().(FunctionCall).getTarget().hasName("consume_skb")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_2060
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getFollowingStmt() instanceof ReturnStmt
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_7(Variable vcb_2059, PointerFieldAccess target_7) {
	target_7.getTarget().getName()="module"
	and target_7.getQualifier().(VariableAccess).getTarget()=vcb_2059
	and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("module_put")
}

predicate func_8(Variable vcb_2059, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="skb"
	and target_8.getQualifier().(VariableAccess).getTarget()=vcb_2059
	and target_8.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("consume_skb")
}

predicate func_9(Variable vcb_2059, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("module_put")
	and target_9.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="module"
	and target_9.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcb_2059
}

predicate func_10(Variable vcb_2059, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("consume_skb")
	and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="skb"
	and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcb_2059
}

predicate func_11(Variable vskb_2060, FunctionCall target_13, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("__netlink_sendskb")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_11.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_2060
	and target_11.getParent().(IfStmt).getCondition()=target_13
}

predicate func_12(Variable vskb_2060, Function func, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_2060
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Variable vskb_2060, ExprStmt target_14, FunctionCall target_13) {
	target_13.getTarget().hasName("sk_filter")
	and target_13.getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_13.getArgument(1).(VariableAccess).getTarget()=vskb_2060
	and target_13.getParent().(IfStmt).getThen()=target_14
}

predicate func_14(Variable vskb_2060, FunctionCall target_13, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_2060
	and target_14.getParent().(IfStmt).getCondition()=target_13
}

from Function func, Variable vnlk_2058, Variable vcb_2059, Variable vskb_2060, ExprStmt target_0, PointerFieldAccess target_7, PointerFieldAccess target_8, ExprStmt target_9, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12, FunctionCall target_13, ExprStmt target_14
where
func_0(vnlk_2058, target_9, target_0)
and not func_1(vcb_2059, target_10)
and not func_2(vcb_2059, vskb_2060, target_11)
and not func_3(func)
and not func_5(vskb_2060, target_12, func)
and func_7(vcb_2059, target_7)
and func_8(vcb_2059, target_8)
and func_9(vcb_2059, target_9)
and func_10(vcb_2059, target_10)
and func_11(vskb_2060, target_13, target_11)
and func_12(vskb_2060, func, target_12)
and func_13(vskb_2060, target_14, target_13)
and func_14(vskb_2060, target_13, target_14)
and vnlk_2058.getType().hasName("netlink_sock *")
and vcb_2059.getType().hasName("netlink_callback *")
and vskb_2060.getType().hasName("sk_buff *")
and vnlk_2058.(LocalVariable).getFunction() = func
and vcb_2059.(LocalVariable).getFunction() = func
and vskb_2060.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
