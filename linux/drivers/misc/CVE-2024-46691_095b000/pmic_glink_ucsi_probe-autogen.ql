/**
 * @name linux-095b0001aefddcd9361097c971b7debc84e72714-pmic_glink_ucsi_probe
 * @id cpp/linux/095b0001aefddcd9361097c971b7debc84e72714/pmic-glink-ucsi-probe
 * @description linux-095b0001aefddcd9361097c971b7debc84e72714-drivers/usb/typec/ucsi/ucsi_glink.c-pmic_glink_ucsi_probe CVE-2024-46691
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="720"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(DoStmt target_3, Function func) {
exists(DoStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(0) |
					obj_3.getTarget().hasName("spinlock_check")
					and obj_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="state_lock"
				)
				and obj_2.getTarget().hasName("__raw_spin_lock_init")
				and obj_2.getArgument(1).(StringLiteral).getValue()="&ucsi->state_lock"
				and obj_2.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
			)
		)
	)
	and target_1.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
)
}

/*predicate func_2(Variable vucsi_333) {
exists(ExprStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getArgument(0) |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="state_lock"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vucsi_333
				)
			)
			and obj_1.getTarget().hasName("spinlock_check")
		)
		and obj_0.getTarget().hasName("__raw_spin_lock_init")
		and obj_0.getArgument(1).(StringLiteral).getValue()="&ucsi->state_lock"
		and obj_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
	)
)
}

*/
predicate func_3(Variable vucsi_333, DoStmt target_3) {
	exists(BlockStmt obj_0 | obj_0=target_3.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="lock"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vucsi_333
					)
				)
				and obj_2.getTarget().hasName("__mutex_init")
				and obj_2.getArgument(1).(StringLiteral).getValue()="&ucsi->lock"
				and obj_2.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("lock_class_key")
			)
		)
	)
	and target_3.getCondition().(Literal).getValue()="0"
}

from Function func, Variable vucsi_333, SizeofExprOperator target_0, DoStmt target_3
where
func_0(func, target_0)
and not func_1(target_3, func)
and func_3(vucsi_333, target_3)
and vucsi_333.getType().hasName("pmic_glink_ucsi *")
and vucsi_333.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
