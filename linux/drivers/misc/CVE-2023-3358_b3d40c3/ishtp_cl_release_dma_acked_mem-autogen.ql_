/**
 * @name linux-b3d40c3ec3dc4ad78017de6c3a38979f57aaaab8-ishtp_cl_release_dma_acked_mem
 * @id cpp/linux/b3d40c3ec3dc4ad78017de6c3a38979f57aaaab8/ishtp-cl-release-dma-acked-mem
 * @description linux-b3d40c3ec3dc4ad78017de6c3a38979f57aaaab8-drivers/hid/intel-ish-hid/ishtp/dma-if.c-ishtp_cl_release_dma_acked_mem CVE-2023-3358
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_139, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ishtp_dma_tx_map"
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_139
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdev_139, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("void *")
	and target_1.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="ishtp_host_dma_tx_buf"
	and target_1.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_139
	and target_1.getExpr().(AssignExpr).getRValue().(DivExpr).getRightOperand().(Literal).getValue()="4096"
}

predicate func_2(Parameter vdev_139, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="devc"
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_139
	and target_2.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Bad DMA Tx ack address\n"
}

from Function func, Parameter vdev_139, ExprStmt target_1, ExprStmt target_2
where
not func_0(vdev_139, target_1, target_2, func)
and func_1(vdev_139, target_1)
and func_2(vdev_139, target_2)
and vdev_139.getType().hasName("ishtp_device *")
and vdev_139.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
