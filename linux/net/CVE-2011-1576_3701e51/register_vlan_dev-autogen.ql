/**
 * @name linux-3701e51382a026cba10c60b03efabe534fba4ca4-register_vlan_dev
 * @id cpp/linux/3701e51382a026cba10c60b03efabe534fba4ca4/register-vlan-dev
 * @description linux-3701e51382a026cba10c60b03efabe534fba4ca4-net/8021q/vlan.c-register_vlan_dev CVE-2011-1576
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vops_180, ExprStmt target_4) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="ndo_vlan_rx_register"
		and target_0.getQualifier().(VariableAccess).getTarget()=vops_180
		and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vreal_dev_179, ExprStmt target_4, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="features"
		and target_1.getQualifier().(VariableAccess).getTarget()=vreal_dev_179
		and target_1.getParent().(BitwiseAndExpr).getRightOperand() instanceof Literal
		and target_1.getParent().(BitwiseAndExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vreal_dev_179, ExprStmt target_4, BitwiseAndExpr target_2) {
		target_2.getLeftOperand().(PointerFieldAccess).getTarget().getName()="features"
		and target_2.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreal_dev_179
		and target_2.getRightOperand().(Literal).getValue()="256"
		and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Variable vreal_dev_179, Variable vops_180, ExprStmt target_4) {
		target_4.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ndo_vlan_rx_register"
		and target_4.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vops_180
		and target_4.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vreal_dev_179
		and target_4.getExpr().(VariableCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("vlan_group *")
}

from Function func, Variable vreal_dev_179, Variable vops_180, PointerFieldAccess target_1, BitwiseAndExpr target_2, ExprStmt target_4
where
not func_0(vops_180, target_4)
and func_1(vreal_dev_179, target_4, target_1)
and func_2(vreal_dev_179, target_4, target_2)
and func_4(vreal_dev_179, vops_180, target_4)
and vreal_dev_179.getType().hasName("net_device *")
and vops_180.getType().hasName("const net_device_ops *")
and vreal_dev_179.(LocalVariable).getFunction() = func
and vops_180.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
