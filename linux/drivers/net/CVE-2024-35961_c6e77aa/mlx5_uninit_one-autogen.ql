/**
 * @name linux-c6e77aa9dd82bc18a89bf49418f8f7e961cfccc8-mlx5_uninit_one
 * @id cpp/linux/c6e77aa9dd82bc18a89bf49418f8f7e961cfccc8/mlx5-uninit-one
 * @description linux-c6e77aa9dd82bc18a89bf49418f8f7e961cfccc8-drivers/net/ethernet/mellanox/mlx5/core/main.c-mlx5_uninit_one CVE-2024-35961
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_1513, ExprStmt target_3, AddressOfExpr target_4, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mlx5_hwmon_dev_unregister")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_1513
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation())
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdev_1513, ExprStmt target_3, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mlx5_crdump_disable")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_1513
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation()))
}

predicate func_2(Variable vdevlink_1515, ExprStmt target_5, ExprStmt target_6, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("devl_unregister")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdevlink_1515
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_5.getLocation())
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vdev_1513, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("mlx5_unregister_device")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_1513
}

predicate func_4(Parameter vdev_1513, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="intf_state_mutex"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1513
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_5(Variable vdevlink_1515, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("devl_unlock")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdevlink_1515
}

predicate func_6(Variable vdevlink_1515, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("devl_lock")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdevlink_1515
}

from Function func, Variable vdevlink_1515, Parameter vdev_1513, ExprStmt target_3, AddressOfExpr target_4, ExprStmt target_5, ExprStmt target_6
where
not func_0(vdev_1513, target_3, target_4, func)
and not func_1(vdev_1513, target_3, func)
and not func_2(vdevlink_1515, target_5, target_6, func)
and func_3(vdev_1513, target_3)
and func_4(vdev_1513, target_4)
and func_5(vdevlink_1515, target_5)
and func_6(vdevlink_1515, target_6)
and vdevlink_1515.getType().hasName("devlink *")
and vdev_1513.getType().hasName("mlx5_core_dev *")
and vdevlink_1515.(LocalVariable).getFunction() = func
and vdev_1513.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
