/**
 * @name linux-372e3147df7016ebeaa372939e8774a1292db558-binder_inc_ref
 * @id cpp/linux/372e3147df7016ebeaa372939e8774a1292db558/binder-inc-ref
 * @description linux-372e3147df7016ebeaa372939e8774a1292db558-drivers/android/binder.c-binder_inc_ref CVE-2018-20509
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vref_730, ExprStmt target_12) {
exists(ValueFieldAccess target_0 |
	target_0.getTarget().getName()="strong"
	and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="data"
	and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vref_730
	and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vref_730, EqualityOperation target_13) {
exists(ValueFieldAccess target_1 |
	target_1.getTarget().getName()="strong"
	and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="data"
	and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vref_730
	and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vref_730, ExprStmt target_14) {
exists(ValueFieldAccess target_2 |
	target_2.getTarget().getName()="weak"
	and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="data"
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vref_730
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vref_730) {
exists(ValueFieldAccess target_3 |
	target_3.getTarget().getName()="weak"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="data"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vref_730)
}

predicate func_4(Parameter vref_730, VariableAccess target_4) {
	target_4.getTarget()=vref_730
}

predicate func_5(Parameter vref_730, VariableAccess target_5) {
	target_5.getTarget()=vref_730
}

predicate func_6(Parameter vref_730, VariableAccess target_6) {
	target_6.getTarget()=vref_730
}

predicate func_7(Parameter vref_730, VariableAccess target_7) {
	target_7.getTarget()=vref_730
}

predicate func_8(Parameter vref_730, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="strong"
	and target_8.getQualifier().(VariableAccess).getTarget()=vref_730
}

predicate func_9(Parameter vref_730, PointerFieldAccess target_9) {
	target_9.getTarget().getName()="strong"
	and target_9.getQualifier().(VariableAccess).getTarget()=vref_730
}

predicate func_10(Parameter vref_730, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="weak"
	and target_10.getQualifier().(VariableAccess).getTarget()=vref_730
}

predicate func_11(Parameter vref_730, PointerFieldAccess target_11) {
	target_11.getTarget().getName()="weak"
	and target_11.getQualifier().(VariableAccess).getTarget()=vref_730
}

predicate func_12(Parameter vref_730, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("binder_inc_node")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="node"
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vref_730
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="1"
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("list_head *")
}

predicate func_13(Parameter vref_730, EqualityOperation target_13) {
	target_13.getLeftOperand().(PointerFieldAccess).getTarget().getName()="weak"
	and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vref_730
	and target_13.getRightOperand().(Literal).getValue()="0"
}

predicate func_14(Parameter vref_730, ExprStmt target_14) {
	target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("binder_inc_node")
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="node"
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vref_730
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="1"
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("list_head *")
}

from Function func, Parameter vref_730, VariableAccess target_4, VariableAccess target_5, VariableAccess target_6, VariableAccess target_7, PointerFieldAccess target_8, PointerFieldAccess target_9, PointerFieldAccess target_10, PointerFieldAccess target_11, ExprStmt target_12, EqualityOperation target_13, ExprStmt target_14
where
not func_0(vref_730, target_12)
and not func_1(vref_730, target_13)
and not func_2(vref_730, target_14)
and not func_3(vref_730)
and func_4(vref_730, target_4)
and func_5(vref_730, target_5)
and func_6(vref_730, target_6)
and func_7(vref_730, target_7)
and func_8(vref_730, target_8)
and func_9(vref_730, target_9)
and func_10(vref_730, target_10)
and func_11(vref_730, target_11)
and func_12(vref_730, target_12)
and func_13(vref_730, target_13)
and func_14(vref_730, target_14)
and vref_730.getType().hasName("binder_ref *")
and vref_730.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
