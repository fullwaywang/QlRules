/**
 * @name linux-a0846f1868b11cd827bdfeaf4527d8b1b1c0b098-mos7840_ioctl
 * @id cpp/linux/a0846f1868b11cd827bdfeaf4527d8b1b1c0b098/mos7840-ioctl
 * @description linux-a0846f1868b11cd827bdfeaf4527d8b1b1c0b098-drivers/usb/serial/mos7840.c-mos7840_ioctl CVE-2010-4074
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vicount_2226, VariableAccess target_1, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vicount_2226
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
		and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofTypeOperator).getValue()="80"
		and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_1
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vcmd_2218, VariableAccess target_1) {
		target_1.getTarget()=vcmd_2218
}

predicate func_3(Variable vicount_2226, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="cts"
		and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vicount_2226
		and target_3.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="cts"
		and target_3.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("async_icount")
}

from Function func, Parameter vcmd_2218, Variable vicount_2226, VariableAccess target_1, ExprStmt target_3
where
not func_0(vicount_2226, target_1, target_3)
and func_1(vcmd_2218, target_1)
and func_3(vicount_2226, target_3)
and vcmd_2218.getType().hasName("unsigned int")
and vicount_2226.getType().hasName("serial_icounter_struct")
and vcmd_2218.getFunction() = func
and vicount_2226.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
