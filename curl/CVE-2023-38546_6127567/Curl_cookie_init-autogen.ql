/**
 * @name curl-61275672b46d9abb32857404-Curl_cookie_init
 * @id cpp/curl/61275672b46d9abb32857404/curl-cookie-init
 * @description curl-61275672b46d9abb32857404-lib/cookie.c-Curl_cookie_init CVE-2023-38546
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofTypeOperator target_0) {
		target_0.getType() instanceof LongType
		and target_0.getValue()="2080"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vfile_1214, Variable vc_1218, Variable vCurl_cstrdup, NotExpr target_3, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="filename"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vc_1218
		and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(VariableAccess).getTarget()=vCurl_cstrdup
		and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(ConditionalExpr).getCondition().(VariableAccess).getTarget()=vfile_1214
		and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(ConditionalExpr).getThen().(VariableAccess).getTarget()=vfile_1214
		and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(ConditionalExpr).getElse().(StringLiteral).getValue()="none"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Variable vc_1218, NotExpr target_3, IfStmt target_2) {
		target_2.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="filename"
		and target_2.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vc_1218
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(NotExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget().getType().hasName("CookieInfo *")
}

from Function func, Parameter vfile_1214, Variable vc_1218, Variable vCurl_cstrdup, SizeofTypeOperator target_0, ExprStmt target_1, IfStmt target_2, NotExpr target_3
where
func_0(func, target_0)
and func_1(vfile_1214, vc_1218, vCurl_cstrdup, target_3, target_1)
and func_2(vc_1218, target_3, target_2)
and func_3(target_3)
and vfile_1214.getType().hasName("const char *")
and vc_1218.getType().hasName("CookieInfo *")
and vCurl_cstrdup.getType().hasName("curl_strdup_callback")
and vfile_1214.getFunction() = func
and vc_1218.(LocalVariable).getFunction() = func
and not vCurl_cstrdup.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
