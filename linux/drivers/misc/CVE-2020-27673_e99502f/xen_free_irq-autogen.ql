/**
 * @name linux-e99502f76271d6bc4e374fe368c50c67a1fd3070-xen_free_irq
 * @id cpp/linux/e99502f76271d6bc4e374fe368c50c67a1fd3070/xen-free-irq
 * @description linux-e99502f76271d6bc4e374fe368c50c67a1fd3070-xen_free_irq CVE-2020-27673
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="1499"
		and not target_0.getValue()="1506"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="1500"
		and not target_1.getValue()="1507"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
		target_2.getValue()="1501"
		and not target_2.getValue()="1508"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
		target_3.getValue()="1502"
		and not target_3.getValue()="1509"
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, Literal target_4) {
		target_4.getValue()="1503"
		and not target_4.getValue()="1510"
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, Literal target_5) {
		target_5.getValue()="1504"
		and not target_5.getValue()="1511"
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vinfo_493, NotExpr target_7, AddressOfExpr target_8, Function func) {
	exists(IfStmt target_6 |
		target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("list_empty")
		and target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="eoi_list"
		and target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_493
		and target_6.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lateeoi_list_del")
		and target_6.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinfo_493
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
		and target_7.getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_7(Variable vinfo_493, NotExpr target_7) {
		target_7.getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vinfo_493
}

predicate func_8(Variable vinfo_493, AddressOfExpr target_8) {
		target_8.getOperand().(PointerFieldAccess).getTarget().getName()="list"
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_493
}

from Function func, Variable vinfo_493, Literal target_0, Literal target_1, Literal target_2, Literal target_3, Literal target_4, Literal target_5, NotExpr target_7, AddressOfExpr target_8
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and not func_6(vinfo_493, target_7, target_8, func)
and func_7(vinfo_493, target_7)
and func_8(vinfo_493, target_8)
and vinfo_493.getType().hasName("irq_info *")
and vinfo_493.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
