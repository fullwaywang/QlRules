/**
 * @name linux-cfaa80c91f6f99b9342b6557f0f0e1143e434066-bpf_exec_tx_verdict
 * @id cpp/linux/cfaa80c91f6f99b9342b6557f0f0e1143e434066/bpf-exec-tx-verdict
 * @description linux-cfaa80c91f6f99b9342b6557f0f0e1143e434066-bpf_exec_tx_verdict CVE-2023-6176
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_813, BlockStmt target_4, ExprStmt target_5) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=verr_813
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=verr_813
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-115"
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget()=verr_813
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sk_err"
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="74"
		and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_4
		and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_813, BlockStmt target_6, ExprStmt target_7, LogicalAndExpr target_8) {
	exists(LogicalAndExpr target_1 |
		target_1.getAnOperand().(VariableAccess).getTarget()=verr_813
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=verr_813
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-115"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget()=verr_813
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sk_err"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="74"
		and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_6
		and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(VariableAccess).getLocation())
		and target_1.getAnOperand().(VariableAccess).getLocation().isBefore(target_8.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable verr_813, BlockStmt target_4, VariableAccess target_2) {
		target_2.getTarget()=verr_813
		and target_2.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sk_err"
		and target_2.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_2.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="74"
		and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable verr_813, BlockStmt target_6, VariableAccess target_3) {
		target_3.getTarget()=verr_813
		and target_3.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sk_err"
		and target_3.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_3.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="74"
		and target_3.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_4(Function func, BlockStmt target_4) {
		target_4.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ssize_t *")
		and target_4.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getRValue().(FunctionCall).getTarget().hasName("sk_msg_free")
		and target_4.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_4.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sk_msg *")
		and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("tls_free_open_rec")
		and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable verr_813, LogicalOrExpr target_9, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_813
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("tls_push_record")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u8")
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_6(Function func, BlockStmt target_6) {
		target_6.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ssize_t *")
		and target_6.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getRValue().(FunctionCall).getTarget().hasName("sk_msg_free")
		and target_6.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_6.getStmt(0).(ExprStmt).getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sk_msg *")
		and target_6.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("tls_free_open_rec")
		and target_6.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable verr_813, PointerFieldAccess target_10, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_813
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("tls_push_record")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u8")
		and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_10
}

predicate func_8(Variable verr_813, LogicalAndExpr target_8) {
		target_8.getAnOperand().(VariableAccess).getTarget()=verr_813
		and target_8.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sk_err"
		and target_8.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_8.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="74"
}

predicate func_9(Function func, LogicalOrExpr target_9) {
		target_9.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sk_psock *")
		and target_9.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bool")
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, PointerFieldAccess target_10) {
		target_10.getTarget().getName()="eval"
		and target_10.getQualifier().(VariableAccess).getTarget().getType().hasName("sk_psock *")
		and target_10.getEnclosingFunction() = func
}

from Function func, Variable verr_813, VariableAccess target_2, VariableAccess target_3, BlockStmt target_4, ExprStmt target_5, BlockStmt target_6, ExprStmt target_7, LogicalAndExpr target_8, LogicalOrExpr target_9, PointerFieldAccess target_10
where
not func_0(verr_813, target_4, target_5)
and not func_1(verr_813, target_6, target_7, target_8)
and func_2(verr_813, target_4, target_2)
and func_3(verr_813, target_6, target_3)
and func_4(func, target_4)
and func_5(verr_813, target_9, target_5)
and func_6(func, target_6)
and func_7(verr_813, target_10, target_7)
and func_8(verr_813, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and verr_813.getType().hasName("int")
and verr_813.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
