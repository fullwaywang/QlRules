/**
 * @name curl-fae6fea209a2d4d-Curl_hsts
 * @id cpp/curl/fae6fea209a2d4d/curl-hsts
 * @description curl-fae6fea209a2d4d-lib/hsts.c-Curl_hsts CVE-2022-30115
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhlen_242, VariableAccess target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vhlen_242
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="256"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vhlen_242
		and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_1(Parameter vhostname_237, Variable vhlen_242, VariableAccess target_5, FunctionCall target_7) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("memcpy")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("char[257]")
		and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vhostname_237
		and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vhlen_242
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_7.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vhostname_237, Variable vhlen_242, VariableAccess target_5) {
	exists(IfStmt target_2 |
		target_2.getCondition().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vhostname_237
		and target_2.getCondition().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vhlen_242
		and target_2.getCondition().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(SubExpr).getRightOperand().(Literal).getValue()="1"
		and target_2.getCondition().(EqualityOperation).getAnOperand().(CharLiteral).getValue()="46"
		and target_2.getThen().(ExprStmt).getExpr().(PrefixDecrExpr).getOperand().(VariableAccess).getTarget()=vhlen_242
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(7)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_3(Variable vhlen_242, VariableAccess target_5, RelationalOperation target_8) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getType().hasName("char[257]")
		and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vhlen_242
		and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(8)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_8.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vhostname_237, VariableAccess target_5, LogicalAndExpr target_9) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vhostname_237
		and target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("char[257]")
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(9)=target_4
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_9.getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation()))
}

predicate func_5(Parameter vh_237, VariableAccess target_5) {
		target_5.getTarget()=vh_237
}

predicate func_7(Parameter vhostname_237, FunctionCall target_7) {
		target_7.getTarget().hasName("strlen")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vhostname_237
}

predicate func_8(Variable vhlen_242, RelationalOperation target_8) {
		 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
		and target_8.getLesserOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_8.getGreaterOperand().(VariableAccess).getTarget()=vhlen_242
}

predicate func_9(Parameter vhostname_237, LogicalAndExpr target_9) {
		target_9.getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vhostname_237
		and target_9.getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_9.getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(SubExpr).getRightOperand().(Literal).getValue()="1"
		and target_9.getAnOperand().(EqualityOperation).getAnOperand().(CharLiteral).getValue()="46"
		and target_9.getAnOperand().(FunctionCall).getTarget().hasName("Curl_strncasecompare")
		and target_9.getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vhostname_237
		and target_9.getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_9.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="host"
		and target_9.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("stsentry *")
		and target_9.getAnOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("size_t")
}

from Function func, Parameter vhostname_237, Parameter vh_237, Variable vhlen_242, VariableAccess target_5, FunctionCall target_7, RelationalOperation target_8, LogicalAndExpr target_9
where
not func_0(vhlen_242, target_5)
and not func_1(vhostname_237, vhlen_242, target_5, target_7)
and not func_2(vhostname_237, vhlen_242, target_5)
and not func_3(vhlen_242, target_5, target_8)
and not func_4(vhostname_237, target_5, target_9)
and func_5(vh_237, target_5)
and func_7(vhostname_237, target_7)
and func_8(vhlen_242, target_8)
and func_9(vhostname_237, target_9)
and vhostname_237.getType().hasName("const char *")
and vh_237.getType().hasName("hsts *")
and vhlen_242.getType().hasName("size_t")
and vhostname_237.getFunction() = func
and vh_237.getFunction() = func
and vhlen_242.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
