/**
 * @name linux-e13de8fe0d6a51341671bbe384826d527afe8d44-unittest_data_add
 * @id cpp/linux/e13de8fe0d6a51341671bbe384826d527afe8d44/unittest-data-add
 * @description linux-e13de8fe0d6a51341671bbe384826d527afe8d44-drivers/of/unittest.c-unittest_data_add CVE-2019-19049
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vunittest_data_1185, NotExpr target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vunittest_data_1185
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget().getType().hasName("device_node *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vunittest_data_1185, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("of_fdt_unflatten_tree")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vunittest_data_1185
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("device_node *")
}

from Function func, Variable vunittest_data_1185, NotExpr target_1, ExprStmt target_2
where
not func_0(vunittest_data_1185, target_1, target_2)
and func_1(func, target_1)
and func_2(vunittest_data_1185, target_2)
and vunittest_data_1185.getType().hasName("void *")
and vunittest_data_1185.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
