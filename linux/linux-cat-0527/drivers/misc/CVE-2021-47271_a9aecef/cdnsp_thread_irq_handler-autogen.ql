/**
 * @name linux-a9aecef198faae3240921b707bc09b602e966fce-cdnsp_thread_irq_handler
 * @id cpp/linux/a9aecef198faae3240921b707bc09b602e966fce/cdnsp-thread-irq-handler
 * @description linux-a9aecef198faae3240921b707bc09b602e966fce-drivers/usb/cdns3/cdnsp-ring.c-cdnsp_thread_irq_handler CVE-2021-47271
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_lock")
	and not target_0.getTarget().hasName("spin_unlock_irqrestore")
	and target_0.getArgument(0) instanceof AddressOfExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("spin_unlock")
	and not target_1.getTarget().hasName("spin_unlock_irqrestore")
	and target_1.getArgument(0) instanceof AddressOfExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_2(ExprStmt target_12, Function func) {
exists(DoStmt target_2 |
	target_2.getCondition().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("unsigned long")
	and target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("_raw_spin_lock_irqsave")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_12.getLocation()))
}

/*predicate func_4(Function func) {
exists(AssignExpr target_4 |
	target_4.getLValue().(VariableAccess).getType().hasName("unsigned long")
	and target_4.getRValue().(FunctionCall).getTarget().hasName("_raw_spin_lock_irqsave")
	and target_4.getRValue().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
	and target_4.getRValue().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and target_4.getEnclosingFunction() = func)
}

*/
predicate func_6(ExprStmt target_13, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irqrestore")
	and target_6.getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and target_6.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("unsigned long")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getLocation().isBefore(target_13.getLocation()))
}

predicate func_8(Variable vpdev_1518, AddressOfExpr target_8) {
	target_8.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpdev_1518
	and target_8.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_9(Variable vpdev_1518, AddressOfExpr target_9) {
	target_9.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpdev_1518
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_10(Variable vpdev_1518, AddressOfExpr target_10) {
	target_10.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpdev_1518
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_11(Function func, FunctionCall target_11) {
	target_11.getTarget().hasName("spin_unlock")
	and target_11.getArgument(0) instanceof AddressOfExpr
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Function func, ExprStmt target_12) {
	target_12.getExpr() instanceof FunctionCall
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable vpdev_1518, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("cdnsp_update_erst_dequeue")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpdev_1518
	and target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("cdnsp_trb *")
	and target_13.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="1"
}

from Function func, Variable vpdev_1518, FunctionCall target_0, FunctionCall target_1, AddressOfExpr target_8, AddressOfExpr target_9, AddressOfExpr target_10, FunctionCall target_11, ExprStmt target_12, ExprStmt target_13
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(target_12, func)
and not func_6(target_13, func)
and func_8(vpdev_1518, target_8)
and func_9(vpdev_1518, target_9)
and func_10(vpdev_1518, target_10)
and func_11(func, target_11)
and func_12(func, target_12)
and func_13(vpdev_1518, target_13)
and vpdev_1518.getType().hasName("cdnsp_device *")
and vpdev_1518.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
