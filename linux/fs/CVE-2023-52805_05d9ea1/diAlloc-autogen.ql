/**
 * @name linux-05d9ea1ceb62a55af6727a69269a4fd310edf483-diAlloc
 * @id cpp/linux/05d9ea1ceb62a55af6727a69269a4fd310edf483/dialloc
 * @description linux-05d9ea1ceb62a55af6727a69269a4fd310edf483-fs/jfs/jfs_imap.c-diAlloc CVE-2023-52805
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(IfStmt target_3, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="dn_numag"
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="db_bmap"
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="bmap"
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("JFS_SBI")
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation()))
}

predicate func_2(Variable vagno_1323, IfStmt target_3, ExprStmt target_4, AddressOfExpr target_5, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vagno_1323
	and target_2.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vagno_1323
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
	and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_3.getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_2.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_5.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

predicate func_3(Variable vagno_1323, IfStmt target_3) {
	target_3.getCondition().(FunctionCall).getTarget().hasName("atomic_read")
	and target_3.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="db_active"
	and target_3.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="bmap"
	and target_3.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("JFS_SBI")
	and target_3.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vagno_1323
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vagno_1323
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dbNextAG")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ipbmap"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("JFS_SBI")
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="im_aglock"
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vagno_1323
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_4(Variable vagno_1323, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vagno_1323
	and target_4.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="agstart"
	and target_4.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("JFS_IP")
	and target_4.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_4.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="dn_agl2size"
	and target_4.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="db_bmap"
	and target_4.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="bmap"
	and target_4.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("JFS_SBI")
}

predicate func_5(Variable vagno_1323, AddressOfExpr target_5) {
	target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="db_active"
	and target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="bmap"
	and target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("JFS_SBI")
	and target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("inode *")
	and target_5.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vagno_1323
}

from Function func, Variable vagno_1323, IfStmt target_3, ExprStmt target_4, AddressOfExpr target_5
where
not func_1(target_3, func)
and not func_2(vagno_1323, target_3, target_4, target_5, func)
and func_3(vagno_1323, target_3)
and func_4(vagno_1323, target_4)
and func_5(vagno_1323, target_5)
and vagno_1323.getType().hasName("int")
and vagno_1323.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
