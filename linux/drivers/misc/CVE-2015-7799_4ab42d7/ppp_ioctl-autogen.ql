/**
 * @name linux-4ab42d78e37a294ac7bc56901d563c642e03c4ae-ppp_ioctl
 * @id cpp/linux/4ab42d78e37a294ac7bc56901d563c642e03c4ae/ppp-ioctl
 * @description linux-4ab42d78e37a294ac7bc56901d563c642e03c4ae-drivers/isdn/i4l/isdn_ppp.c-ppp_ioctl CVE-2015-7799
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvj_576, BlockStmt target_7, ExprStmt target_8) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("IS_ERR")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vvj_576
		and target_0.getParent().(IfStmt).getThen()=target_7
		and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_572, Variable vvj_576, NotExpr target_3, ExprStmt target_9) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("PTR_ERR")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vvj_576
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_572
		and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation())
		and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable vvj_576, BlockStmt target_7, VariableAccess target_2) {
		target_2.getTarget()=vvj_576
		and target_2.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_7
}

predicate func_3(Variable vvj_576, BlockStmt target_7, NotExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget()=vvj_576
		and target_3.getParent().(IfStmt).getThen()=target_7
}

predicate func_4(Variable vppp_571, FunctionCall target_4) {
		target_4.getTarget().hasName("netdev_err")
		and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vppp_571
		and target_4.getArgument(1).(StringLiteral).getValue()="PPP: no memory (VJ compressor)\n"
}

predicate func_5(Variable verr_572, NotExpr target_3, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_572
		and target_5.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

/*predicate func_6(Variable verr_572, UnaryMinusExpr target_6) {
		target_6.getValue()="-12"
		and target_6.getParent().(AssignExpr).getRValue() = target_6
		and target_6.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_572
}

*/
predicate func_7(Function func, BlockStmt target_7) {
		target_7.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
		and target_7.getStmt(1) instanceof ExprStmt
		and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vvj_576, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vvj_576
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("slhc_init")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(Literal).getValue()="1"
}

predicate func_9(Variable vppp_571, Variable vvj_576, ExprStmt target_9) {
		target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="vj"
		and target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vppp_571
		and target_9.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vvj_576
}

from Function func, Variable vppp_571, Variable verr_572, Variable vvj_576, VariableAccess target_2, NotExpr target_3, FunctionCall target_4, ExprStmt target_5, BlockStmt target_7, ExprStmt target_8, ExprStmt target_9
where
not func_0(vvj_576, target_7, target_8)
and not func_1(verr_572, vvj_576, target_3, target_9)
and func_2(vvj_576, target_7, target_2)
and func_3(vvj_576, target_7, target_3)
and func_4(vppp_571, target_4)
and func_5(verr_572, target_3, target_5)
and func_7(func, target_7)
and func_8(vvj_576, target_8)
and func_9(vppp_571, vvj_576, target_9)
and vppp_571.getType().hasName("ppp *")
and verr_572.getType().hasName("int")
and vvj_576.getType().hasName("slcompress *")
and vppp_571.(LocalVariable).getFunction() = func
and verr_572.(LocalVariable).getFunction() = func
and vvj_576.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
