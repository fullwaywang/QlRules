/**
 * @name linux-3ce424e45411cf5a13105e0386b6ecf6eeb4f66f-hardware_setup
 * @id cpp/linux/3ce424e45411cf5a13105e0386b6ecf6eeb4f66f/hardware-setup
 * @description linux-3ce424e45411cf5a13105e0386b6ecf6eeb4f66f-arch/x86/kvm/vmx.c-hardware_setup CVE-2016-4440
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmsr_6195, VariableAccess target_7, ForStmt target_0) {
	target_0.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmsr_6195
	and target_0.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(HexLiteral).getValue()="2048"
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vmsr_6195
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(HexLiteral).getValue()="2303"
	and target_0.getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vmsr_6195
	and target_0.getStmt().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("vmx_disable_intercept_msr_read_x2apic")
	and target_0.getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsr_6195
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_1(VariableAccess target_7, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("vmx_enable_intercept_msr_read_x2apic")
	and target_1.getExpr().(FunctionCall).getArgument(0).(HexLiteral).getValue()="2050"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_1.getEnclosingFunction() = func
}

predicate func_2(VariableAccess target_7, Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("vmx_enable_intercept_msr_read_x2apic")
	and target_2.getExpr().(FunctionCall).getArgument(0).(HexLiteral).getValue()="2105"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_2.getEnclosingFunction() = func
}

predicate func_3(VariableAccess target_7, Function func, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("vmx_disable_intercept_msr_write_x2apic")
	and target_3.getExpr().(FunctionCall).getArgument(0).(HexLiteral).getValue()="2056"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_3.getEnclosingFunction() = func
}

predicate func_4(VariableAccess target_7, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("vmx_disable_intercept_msr_write_x2apic")
	and target_4.getExpr().(FunctionCall).getArgument(0).(HexLiteral).getValue()="2059"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_4.getEnclosingFunction() = func
}

predicate func_5(VariableAccess target_7, Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("vmx_disable_intercept_msr_write_x2apic")
	and target_5.getExpr().(FunctionCall).getArgument(0).(HexLiteral).getValue()="2111"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable venable_apicv, Function func, IfStmt target_6) {
	target_6.getCondition().(VariableAccess).getTarget()=venable_apicv
	and target_6.getThen().(BlockStmt).getStmt(0) instanceof ForStmt
	and target_6.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
	and target_6.getThen().(BlockStmt).getStmt(2) instanceof ExprStmt
	and target_6.getThen().(BlockStmt).getStmt(3) instanceof ExprStmt
	and target_6.getThen().(BlockStmt).getStmt(4) instanceof ExprStmt
	and target_6.getThen().(BlockStmt).getStmt(5) instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable venable_apicv, VariableAccess target_7) {
	target_7.getTarget()=venable_apicv
}

from Function func, Variable vmsr_6195, Variable venable_apicv, ForStmt target_0, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5, IfStmt target_6, VariableAccess target_7
where
func_0(vmsr_6195, target_7, target_0)
and func_1(target_7, func, target_1)
and func_2(target_7, func, target_2)
and func_3(target_7, func, target_3)
and func_4(target_7, func, target_4)
and func_5(target_7, func, target_5)
and func_6(venable_apicv, func, target_6)
and func_7(venable_apicv, target_7)
and vmsr_6195.getType().hasName("int")
and venable_apicv.getType().hasName("bool")
and vmsr_6195.(LocalVariable).getFunction() = func
and not venable_apicv.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
