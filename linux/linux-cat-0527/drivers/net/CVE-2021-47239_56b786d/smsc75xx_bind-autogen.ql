/**
 * @name linux-56b786d86694e079d8aad9b314e015cd4ac02a3d-smsc75xx_bind
 * @id cpp/linux/56b786d86694e079d8aad9b314e015cd4ac02a3d/smsc75xx-bind
 * @description linux-56b786d86694e079d8aad9b314e015cd4ac02a3d-drivers/net/usb/smsc75xx.c-smsc75xx_bind CVE-2021-47239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpdata_1449, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("cancel_work_sync")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="set_multicast"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpdata_1449
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdev_1447, ExprStmt target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="data"
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1447
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vpdata_1449, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpdata_1449
}

predicate func_3(Variable vpdata_1449, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="func"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="set_multicast"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpdata_1449
}

predicate func_4(Parameter vdev_1447, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="max_mtu"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="net"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1447
	and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="9000"
}

from Function func, Variable vpdata_1449, Parameter vdev_1447, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vpdata_1449, target_2, target_3, func)
and not func_1(vdev_1447, target_4, func)
and func_2(vpdata_1449, target_2)
and func_3(vpdata_1449, target_3)
and func_4(vdev_1447, target_4)
and vpdata_1449.getType().hasName("smsc75xx_priv *")
and vdev_1447.getType().hasName("usbnet *")
and vpdata_1449.(LocalVariable).getFunction() = func
and vdev_1447.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
