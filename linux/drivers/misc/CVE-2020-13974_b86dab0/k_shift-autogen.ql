/**
 * @name linux-b86dab054059b970111b5516ae548efaae5b3aae-k_shift
 * @id cpp/linux/b86dab054059b970111b5516ae548efaae5b3aae/k-shift
 * @description linux-b86dab054059b970111b5516ae548efaae5b3aae-drivers/tty/vt/keyboard.c-k_shift CVE-2020-13974
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_2(Function func) {
	exists(BitwiseAndExpr target_2 |
		target_2.getLeftOperand().(VariableAccess).getType().hasName("unsigned int")
		and target_2.getRightOperand() instanceof HexLiteral
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_queue")
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vc_data *")
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof BitwiseAndExpr
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Function func) {
	exists(AssignExpr target_3 |
		target_3.getLValue().(VariableAccess).getType().hasName("bool")
		and target_3.getEnclosingFunction() = func)
}

predicate func_5(Variable vnpadch, BlockStmt target_9, EqualityOperation target_5) {
		target_5.getAnOperand().(VariableAccess).getTarget()=vnpadch
		and target_5.getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_5.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("char")
		and target_5.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_9
}

predicate func_6(Variable vnpadch, BitwiseAndExpr target_7, VariableAccess target_6) {
		target_6.getTarget()=vnpadch
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("to_utf8")
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vc_data *")
		and target_6.getLocation().isBefore(target_7.getLeftOperand().(VariableAccess).getLocation())
}

predicate func_7(Variable vnpadch, BitwiseAndExpr target_7) {
		target_7.getLeftOperand().(VariableAccess).getTarget()=vnpadch
		and target_7.getRightOperand() instanceof HexLiteral
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_queue")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vc_data *")
}

predicate func_8(Variable vnpadch, AssignExpr target_8) {
		target_8.getLValue().(VariableAccess).getTarget()=vnpadch
		and target_8.getRValue().(UnaryMinusExpr).getValue()="-1"
}

predicate func_9(Variable vnpadch, BlockStmt target_9) {
		target_9.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="kbdmode"
		and target_9.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("kbd_struct *")
		and target_9.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="3"
		and target_9.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("to_utf8")
		and target_9.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vc_data *")
		and target_9.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnpadch
		and target_9.getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_queue")
		and target_9.getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vc_data *")
		and target_9.getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof BitwiseAndExpr
}

from Function func, Variable vnpadch, EqualityOperation target_5, VariableAccess target_6, BitwiseAndExpr target_7, AssignExpr target_8, BlockStmt target_9
where
not func_2(func)
and not func_3(func)
and func_5(vnpadch, target_9, target_5)
and func_6(vnpadch, target_7, target_6)
and func_7(vnpadch, target_7)
and func_8(vnpadch, target_8)
and func_9(vnpadch, target_9)
and vnpadch.getType().hasName("int")
and not vnpadch.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
