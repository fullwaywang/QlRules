/**
 * @name linux-82e31755e55fbcea6a9dfaae5fe4860ade17cbc0-ax25_release
 * @id cpp/linux/82e31755e55fbcea6a9dfaae5fe4860ade17cbc0/ax25-release
 * @description linux-82e31755e55fbcea6a9dfaae5fe4860ade17cbc0-ax25_release CVE-2022-1205
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vax25_983, VariableAccess target_5, ExprStmt target_6) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("del_timer_sync")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="timer"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_983
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vax25_983, VariableAccess target_5) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("del_timer_sync")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="t1timer"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_983
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_2(Variable vax25_983, VariableAccess target_5) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("del_timer_sync")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="t2timer"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_983
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_3(Variable vax25_983, VariableAccess target_5) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(FunctionCall).getTarget().hasName("del_timer_sync")
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="t3timer"
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_983
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_4(Variable vax25_983, VariableAccess target_5) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(FunctionCall).getTarget().hasName("del_timer_sync")
		and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="idletimer"
		and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_983
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_4
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_5(Variable vax25_dev_984, BlockStmt target_7, VariableAccess target_5) {
		target_5.getTarget()=vax25_dev_984
		and target_5.getParent().(IfStmt).getThen()=target_7
}

predicate func_6(Variable vax25_983, EqualityOperation target_8, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("ax25_destroy_socket")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vax25_983
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_7(Variable vax25_dev_984, BlockStmt target_7) {
		target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_put_track")
		and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
		and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_984
		and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_tracker"
		and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_984
}

predicate func_8(Function func, EqualityOperation target_8) {
		target_8.getAnOperand().(PointerFieldAccess).getTarget().getName()="sk_type"
		and target_8.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_8.getEnclosingFunction() = func
}

from Function func, Variable vax25_983, Variable vax25_dev_984, VariableAccess target_5, ExprStmt target_6, BlockStmt target_7, EqualityOperation target_8
where
not func_0(vax25_983, target_5, target_6)
and not func_1(vax25_983, target_5)
and not func_2(vax25_983, target_5)
and not func_3(vax25_983, target_5)
and not func_4(vax25_983, target_5)
and func_5(vax25_dev_984, target_7, target_5)
and func_6(vax25_983, target_8, target_6)
and func_7(vax25_dev_984, target_7)
and func_8(func, target_8)
and vax25_983.getType().hasName("ax25_cb *")
and vax25_dev_984.getType().hasName("ax25_dev *")
and vax25_983.(LocalVariable).getFunction() = func
and vax25_dev_984.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
