/**
 * @name linux-3fc0fd724d199e061432b66a8d85b7d48fe485f7-inet_diag_msg_sctpasoc_fill
 * @id cpp/linux/3fc0fd724d199e061432b66a8d85b7d48fe485f7/inet-diag-msg-sctpasoc-fill
 * @description linux-3fc0fd724d199e061432b66a8d85b7d48fe485f7-net/sctp/sctp_diag.c-inet_diag_msg_sctpasoc_fill CVE-2022-48855
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vr_10, FunctionCall target_3, ExprStmt target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="idiag_timer"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vr_10
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_1(Parameter vr_10, FunctionCall target_3, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="idiag_retrans"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vr_10
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Parameter vr_10, FunctionCall target_3, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="idiag_expires"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vr_10
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("timer_pending")
	and target_3.getArgument(0).(VariableAccess).getTarget().getType().hasName("timer_list *")
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vr_10, ExprStmt target_0, ExprStmt target_1, ExprStmt target_2, FunctionCall target_3
where
func_0(vr_10, target_3, target_0)
and func_1(vr_10, target_3, target_1)
and func_2(vr_10, target_3, target_2)
and func_3(func, target_3)
and vr_10.getType().hasName("inet_diag_msg *")
and vr_10.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
