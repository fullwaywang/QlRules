/**
 * @name linux-c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa-vmx_get_msr
 * @id cpp/linux/c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa/vmx-get-msr
 * @description linux-c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa-arch/x86/kvm/vmx/vmx.c-vmx_get_msr CVE-2019-19338
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(SwitchCase target_0 |
		target_0.getExpr().(Literal).getValue()="290"
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vmsr_info_1765, Parameter vvcpu_1765, PointerFieldAccess target_4, FunctionCall target_5, LogicalAndExpr target_6, LogicalAndExpr target_7) {
	exists(IfStmt target_1 |
		target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="host_initiated"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsr_info_1765
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="arch_capabilities"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_1765
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="128"
		and target_1.getThen().(ReturnStmt).getExpr().(Literal).getValue()="1"
		and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_4
		and target_5.getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(PointerFieldAccess target_4, Function func) {
	exists(GotoStmt target_2 |
		target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_4
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(PointerFieldAccess target_4, Function func) {
	exists(GotoStmt target_3 |
		target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_4
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(Parameter vmsr_info_1765, PointerFieldAccess target_4) {
		target_4.getTarget().getName()="index"
		and target_4.getQualifier().(VariableAccess).getTarget()=vmsr_info_1765
}

predicate func_5(Parameter vmsr_info_1765, Parameter vvcpu_1765, FunctionCall target_5) {
		target_5.getTarget().hasName("kvm_get_msr_common")
		and target_5.getArgument(0).(VariableAccess).getTarget()=vvcpu_1765
		and target_5.getArgument(1).(VariableAccess).getTarget()=vmsr_info_1765
}

predicate func_6(Parameter vmsr_info_1765, LogicalAndExpr target_6) {
		target_6.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="host_initiated"
		and target_6.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsr_info_1765
		and target_6.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("vmx_has_waitpkg")
		and target_6.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vcpu_vmx *")
}

predicate func_7(Parameter vmsr_info_1765, Parameter vvcpu_1765, LogicalAndExpr target_7) {
		target_7.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="host_initiated"
		and target_7.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsr_info_1765
		and target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("guest_cpuid_has")
		and target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_1765
		and target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddExpr).getValue()="602"
}

from Function func, Parameter vmsr_info_1765, Parameter vvcpu_1765, PointerFieldAccess target_4, FunctionCall target_5, LogicalAndExpr target_6, LogicalAndExpr target_7
where
not func_0(func)
and not func_1(vmsr_info_1765, vvcpu_1765, target_4, target_5, target_6, target_7)
and not func_2(target_4, func)
and not func_3(target_4, func)
and func_4(vmsr_info_1765, target_4)
and func_5(vmsr_info_1765, vvcpu_1765, target_5)
and func_6(vmsr_info_1765, target_6)
and func_7(vmsr_info_1765, vvcpu_1765, target_7)
and vmsr_info_1765.getType().hasName("msr_data *")
and vvcpu_1765.getType().hasName("kvm_vcpu *")
and vmsr_info_1765.getFunction() = func
and vvcpu_1765.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
