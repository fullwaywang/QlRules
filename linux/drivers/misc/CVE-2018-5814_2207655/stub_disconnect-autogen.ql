/**
 * @name linux-22076557b07c12086eeb16b8ce2b0b735f7a27e7-stub_disconnect
 * @id cpp/linux/22076557b07c12086eeb16b8ce2b0b735f7a27e7/stub-disconnect
 * @description linux-22076557b07c12086eeb16b8ce2b0b735f7a27e7-drivers/usb/usbip/stub_dev.c-stub_disconnect CVE-2018-5814
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_8, Function func) {
	exists(GotoStmt target_0 |
		target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(VariableAccess target_9, Function func) {
	exists(GotoStmt target_1 |
		target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(FunctionCall target_10, Function func) {
	exists(GotoStmt target_2 |
		target_2.getParent().(IfStmt).getCondition()=target_10
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vbusid_priv_404, ExprStmt target_11, Function func) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(FunctionCall).getTarget().hasName("put_busid_priv")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbusid_priv_404
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
		and target_11.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(NotExpr target_8, Function func, ReturnStmt target_4) {
		target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
		and target_4.getEnclosingFunction() = func
}

predicate func_5(VariableAccess target_9, Function func, ReturnStmt target_5) {
		target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_5.getEnclosingFunction() = func
}

predicate func_6(FunctionCall target_10, Function func, ReturnStmt target_6) {
		target_6.getParent().(IfStmt).getCondition()=target_10
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, ReturnStmt target_7) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Function func, NotExpr target_8) {
		target_8.getOperand().(VariableAccess).getTarget().getType().hasName("stub_device *")
		and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vrc_405, VariableAccess target_9) {
		target_9.getTarget()=vrc_405
}

predicate func_10(Function func, FunctionCall target_10) {
		target_10.getTarget().hasName("usbip_in_eh")
		and target_10.getArgument(0).(FunctionCall).getTarget().hasName("get_current")
		and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vbusid_priv_404, ExprStmt target_11) {
		target_11.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="status"
		and target_11.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbusid_priv_404
		and target_11.getExpr().(AssignExpr).getRValue().(Literal).getValue()="2"
}

from Function func, Variable vbusid_priv_404, Variable vrc_405, ReturnStmt target_4, ReturnStmt target_5, ReturnStmt target_6, ReturnStmt target_7, NotExpr target_8, VariableAccess target_9, FunctionCall target_10, ExprStmt target_11
where
not func_0(target_8, func)
and not func_1(target_9, func)
and not func_2(target_10, func)
and not func_3(vbusid_priv_404, target_11, func)
and func_4(target_8, func, target_4)
and func_5(target_9, func, target_5)
and func_6(target_10, func, target_6)
and func_7(func, target_7)
and func_8(func, target_8)
and func_9(vrc_405, target_9)
and func_10(func, target_10)
and func_11(vbusid_priv_404, target_11)
and vbusid_priv_404.getType().hasName("bus_id_priv *")
and vrc_405.getType().hasName("int")
and vbusid_priv_404.(LocalVariable).getFunction() = func
and vrc_405.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
