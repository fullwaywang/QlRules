/**
 * @name linux-6c8991f41546c3c472503dff1ea9daaddf9331c2-inet6_fib_lookup_dev
 * @id cpp/linux/6c8991f41546c3c472503dff1ea9daaddf9331c2/inet6-fib-lookup-dev
 * @description linux-6c8991f41546c3c472503dff1ea9daaddf9331c2-net/mpls/af_mpls.c-inet6_fib_lookup_dev CVE-2020-1749
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vipv6_stub, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="ipv6_dst_lookup"
	and target_0.getQualifier().(VariableAccess).getTarget()=vipv6_stub
}

predicate func_1(Variable verr_620, FunctionCall target_1) {
	target_1.getTarget().hasName("ERR_PTR")
	and not target_1.getTarget().hasName("ERR_CAST")
	and target_1.getArgument(0).(VariableAccess).getTarget()=verr_620
}

predicate func_2(Parameter vnet_614, Variable vdst_618, Variable vipv6_stub, NotExpr target_12) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getTarget()=vdst_618
	and target_2.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup_flow"
	and target_2.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
	and target_2.getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vnet_614
	and target_2.getRValue().(VariableCall).getArgument(1) instanceof Literal
	and target_2.getRValue().(VariableCall).getArgument(2) instanceof AddressOfExpr
	and target_2.getRValue().(VariableCall).getArgument(3).(Literal).getValue()="0"
	and target_12.getOperand().(VariableAccess).getLocation().isBefore(target_2.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vdst_618, ReturnStmt target_13, AddressOfExpr target_14) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("IS_ERR")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vdst_618
	and target_3.getParent().(IfStmt).getThen()=target_13
	and target_14.getOperand().(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_5(Variable vfl6_619, AddressOfExpr target_5) {
	target_5.getOperand().(VariableAccess).getTarget()=vfl6_619
	and target_5.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_6(Parameter vnet_614, VariableAccess target_6) {
	target_6.getTarget()=vnet_614
	and target_6.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_8(Variable vdst_618, VariableAccess target_8) {
	target_8.getTarget()=vdst_618
	and target_8.getParent().(AddressOfExpr).getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_9(Function func, DeclStmt target_9) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Parameter vnet_614, Variable vdst_618, Variable verr_620, Variable vipv6_stub, AssignExpr target_10) {
	target_10.getLValue().(VariableAccess).getTarget()=verr_620
	and target_10.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup"
	and target_10.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
	and target_10.getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vnet_614
	and target_10.getRValue().(VariableCall).getArgument(1) instanceof Literal
	and target_10.getRValue().(VariableCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdst_618
	and target_10.getRValue().(VariableCall).getArgument(3) instanceof AddressOfExpr
}

predicate func_11(Variable verr_620, ReturnStmt target_13, FunctionCall target_1, VariableAccess target_11) {
	target_11.getTarget()=verr_620
	and target_11.getParent().(IfStmt).getThen()=target_13
	and target_11.getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation())
}

predicate func_12(Variable vipv6_stub, NotExpr target_12) {
	target_12.getOperand().(VariableAccess).getTarget()=vipv6_stub
}

predicate func_13(Function func, ReturnStmt target_13) {
	target_13.getExpr() instanceof FunctionCall
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vdst_618, AddressOfExpr target_14) {
	target_14.getOperand().(VariableAccess).getTarget()=vdst_618
}

from Function func, Parameter vnet_614, Variable vdst_618, Variable vfl6_619, Variable verr_620, Variable vipv6_stub, PointerFieldAccess target_0, FunctionCall target_1, AddressOfExpr target_5, VariableAccess target_6, VariableAccess target_8, DeclStmt target_9, AssignExpr target_10, VariableAccess target_11, NotExpr target_12, ReturnStmt target_13, AddressOfExpr target_14
where
func_0(vipv6_stub, target_0)
and func_1(verr_620, target_1)
and not func_2(vnet_614, vdst_618, vipv6_stub, target_12)
and not func_3(vdst_618, target_13, target_14)
and func_5(vfl6_619, target_5)
and func_6(vnet_614, target_6)
and func_8(vdst_618, target_8)
and func_9(func, target_9)
and func_10(vnet_614, vdst_618, verr_620, vipv6_stub, target_10)
and func_11(verr_620, target_13, target_1, target_11)
and func_12(vipv6_stub, target_12)
and func_13(func, target_13)
and func_14(vdst_618, target_14)
and vnet_614.getType().hasName("net *")
and vdst_618.getType().hasName("dst_entry *")
and vfl6_619.getType().hasName("flowi6")
and verr_620.getType().hasName("int")
and vipv6_stub.getType().hasName("const ipv6_stub *")
and vnet_614.getFunction() = func
and vdst_618.(LocalVariable).getFunction() = func
and vfl6_619.(LocalVariable).getFunction() = func
and verr_620.(LocalVariable).getFunction() = func
and not vipv6_stub.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
