/**
 * @name linux-9db8c299a521813630fcb4154298cb60c37f3133-setkey_unaligned
 * @id cpp/linux/9db8c299a521813630fcb4154298cb60c37f3133/setkey-unaligned
 * @description linux-9db8c299a521813630fcb4154298cb60c37f3133-crypto/aead.c-setkey_unaligned CVE-2024-42229
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbuffer_27, FunctionCall target_0) {
	target_0.getTarget().hasName("kfree")
	and not target_0.getTarget().hasName("kfree_sensitive")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuffer_27
}

predicate func_1(Parameter vkeylen_23, Variable valignbuffer_27, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("__memset")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=valignbuffer_27
		and obj_0.getArgument(1).(Literal).getValue()="0"
		and obj_0.getArgument(2).(VariableAccess).getTarget()=vkeylen_23
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

from Function func, Parameter vkeylen_23, Variable vbuffer_27, Variable valignbuffer_27, FunctionCall target_0, ExprStmt target_1
where
func_0(vbuffer_27, target_0)
and func_1(vkeylen_23, valignbuffer_27, func, target_1)
and vkeylen_23.getType().hasName("unsigned int")
and vbuffer_27.getType().hasName("u8 *")
and valignbuffer_27.getType().hasName("u8 *")
and vkeylen_23.getFunction() = func
and vbuffer_27.(LocalVariable).getFunction() = func
and valignbuffer_27.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
