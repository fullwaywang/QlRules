/**
 * @name linux-5f2f97656ada8d811d3c1bef503ced266fcd53a0-rxrpc_krb5_decode_ticket
 * @id cpp/linux/5f2f97656ada8d811d3c1bef503ced266fcd53a0/rxrpc-krb5-decode-ticket
 * @description linux-5f2f97656ada8d811d3c1bef503ced266fcd53a0-net/rxrpc/key.c-rxrpc_krb5_decode_ticket CVE-2017-7482
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlen_390, VariableAccess target_0) {
		target_0.getTarget()=vlen_390
		and target_0.getParent().(AssignExpr).getLValue() = target_0
		and target_0.getParent().(AssignExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vlen_390
		and target_0.getParent().(AssignExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(AddExpr).getAnOperand().(Literal).getValue()="3"
		and target_0.getParent().(AssignExpr).getRValue().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="4294967292"
}

predicate func_1(Variable vtoklen_390, Variable vlen_390, VariableAccess target_1) {
		target_1.getTarget()=vlen_390
		and target_1.getParent().(AssignSubExpr).getRValue() = target_1
		and target_1.getParent().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vtoklen_390
}

predicate func_2(Variable vlen_390, VariableAccess target_2) {
		target_2.getTarget()=vlen_390
}

predicate func_4(Variable vtoklen_390, ExprStmt target_5, ExprStmt target_6, Function func) {
	exists(IfStmt target_4 |
		target_4.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("unsigned int")
		and target_4.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vtoklen_390
		and target_4.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
		and target_5.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation().isBefore(target_4.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_4.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_5(Variable vtoklen_390, ExprStmt target_5) {
		target_5.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vtoklen_390
		and target_5.getExpr().(AssignSubExpr).getRValue().(Literal).getValue()="4"
}

predicate func_6(Variable vtoklen_390, Variable vlen_390, ExprStmt target_6) {
		target_6.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vtoklen_390
		and target_6.getExpr().(AssignSubExpr).getRValue().(VariableAccess).getTarget()=vlen_390
}

from Function func, Variable vtoklen_390, Variable vlen_390, VariableAccess target_0, VariableAccess target_1, VariableAccess target_2, ExprStmt target_5, ExprStmt target_6
where
func_0(vlen_390, target_0)
and func_1(vtoklen_390, vlen_390, target_1)
and func_2(vlen_390, target_2)
and not func_4(vtoklen_390, target_5, target_6, func)
and func_5(vtoklen_390, target_5)
and func_6(vtoklen_390, vlen_390, target_6)
and vtoklen_390.getType().hasName("unsigned int")
and vlen_390.getType().hasName("unsigned int")
and vtoklen_390.(LocalVariable).getFunction() = func
and vlen_390.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
