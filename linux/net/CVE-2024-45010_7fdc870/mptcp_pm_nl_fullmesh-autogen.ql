/**
 * @name linux-7fdc870d08960961408a44c569f20f50940e7d4f-mptcp_pm_nl_fullmesh
 * @id cpp/linux/7fdc870d08960961408a44c569f20f50940e7d4f/mptcp-pm-nl-fullmesh
 * @description linux-7fdc870d08960961408a44c569f20f50940e7d4f-net/mptcp/pm_netlink.c-mptcp_pm_nl_fullmesh CVE-2024-45010
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlist_1962, Parameter vmsk_1959, ExprStmt target_1, AddressOfExpr target_2, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getArgument(1) |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				obj_2.getTarget().getName()="ids"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vlist_1962
			)
			and obj_1.getArrayOffset().(Literal).getValue()="0"
		)
		and obj_0.getTarget().hasName("__mark_subflow_endp_available")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vmsk_1959
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(1).(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vmsk_1959, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("mptcp_pm_create_subflow_or_signal_addr")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vmsk_1959
	)
}

predicate func_2(Variable vlist_1962, AddressOfExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vlist_1962
}

predicate func_3(Variable vlist_1962, Parameter vmsk_1959, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("mptcp_pm_nl_rm_subflow_received")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vmsk_1959
		and obj_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vlist_1962
	)
}

from Function func, Variable vlist_1962, Parameter vmsk_1959, ExprStmt target_1, AddressOfExpr target_2, ExprStmt target_3
where
not func_0(vlist_1962, vmsk_1959, target_1, target_2, target_3, func)
and func_1(vmsk_1959, target_1)
and func_2(vlist_1962, target_2)
and func_3(vlist_1962, vmsk_1959, target_3)
and vlist_1962.getType().hasName("mptcp_rm_list")
and vmsk_1959.getType().hasName("mptcp_sock *")
and vlist_1962.(LocalVariable).getFunction() = func
and vmsk_1959.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
