/**
 * @name linux-0558f33c06bb910e2879e355192227a8e8f0219d-sas_init_port
 * @id cpp/linux/0558f33c06bb910e2879e355192227a8e8f0219d/sas-init-port
 * @description linux-0558f33c06bb910e2879e355192227a8e8f0219d-drivers/scsi/libsas/sas_port.c-sas_init_port CVE-2017-18232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="1128"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vport_312, AddressOfExpr target_2, AddressOfExpr target_3, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sas_port_del_list"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_312
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vport_312, AddressOfExpr target_2) {
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="destroy_list"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_312
}

predicate func_3(Parameter vport_312, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="phy_list_lock"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_312
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spinlock_check")
}

from Function func, Parameter vport_312, SizeofExprOperator target_0, AddressOfExpr target_2, AddressOfExpr target_3
where
func_0(func, target_0)
and not func_1(vport_312, target_2, target_3, func)
and func_2(vport_312, target_2)
and func_3(vport_312, target_3)
and vport_312.getType().hasName("asd_sas_port *")
and vport_312.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
