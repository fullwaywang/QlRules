/**
 * @name cpython-ef33dd6036aafbd3f06c1d56e2b1a81dae3da63c-PyMemoTable_Set
 * @id cpp/cpython/ef33dd6036aafbd3f06c1d56e2b1a81dae3da63c/pymemotable-set
 * @description cpython-ef33dd6036aafbd3f06c1d56e2b1a81dae3da63c-Modules/_pickle.c-PyMemoTable_Set CVE-2018-20406
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="1"
		and not target_0.getValue()="3"
		and target_0.getParent().(AddExpr).getParent().(MulExpr).getLeftOperand() instanceof AddExpr
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vself_808, ReturnStmt target_6, NotExpr target_11) {
	exists(LogicalAndExpr target_1 |
		target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(DivExpr).getValue()="6148914691236517205"
		and target_1.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_1.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_808
		and target_1.getAnOperand().(RelationalOperation).getLesserOperand() instanceof MulExpr
		and target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(MulExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="mt_allocated"
		and target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(MulExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_808
		and target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(MulExpr).getRightOperand() instanceof Literal
		and target_1.getParent().(IfStmt).getThen()=target_6
		and target_11.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_2(Function func) {
	exists(DivExpr target_2 |
		target_2.getValue()="6148914691236517205"
		and target_2.getEnclosingFunction() = func)
}

*/
/*predicate func_3(Parameter vself_808, NotExpr target_11, FunctionCall target_13) {
	exists(PointerFieldAccess target_3 |
		target_3.getTarget().getName()="mt_used"
		and target_3.getQualifier().(VariableAccess).getTarget()=vself_808
		and target_11.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
		and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_13.getArgument(0).(VariableAccess).getLocation()))
}

*/
predicate func_4(Function func) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("size_t")
		and target_4.getExpr().(AssignExpr).getRValue() instanceof MulExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4)
}

predicate func_6(NotExpr target_11, Function func, ReturnStmt target_6) {
		target_6.getExpr().(Literal).getValue()="0"
		and target_6.getParent().(IfStmt).getCondition()=target_11
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Parameter vself_808, MulExpr target_7) {
		target_7.getLeftOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_7.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_808
		and target_7.getRightOperand().(Literal).getValue()="3"
}

predicate func_8(Parameter vself_808, MulExpr target_8) {
		target_8.getLeftOperand().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_8.getLeftOperand().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_808
		and target_8.getLeftOperand().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="50000"
		and target_8.getLeftOperand().(ConditionalExpr).getThen().(Literal).getValue()="2"
		and target_8.getLeftOperand().(ConditionalExpr).getElse().(Literal).getValue()="4"
		and target_8.getRightOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_8.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_808
		and target_8.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("_PyMemoTable_ResizeTable")
		and target_8.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vself_808
}

predicate func_9(Parameter vself_808, VariableAccess target_9) {
		target_9.getTarget()=vself_808
}

predicate func_11(Parameter vself_808, ReturnStmt target_6, NotExpr target_11) {
		target_11.getOperand().(RelationalOperation).getGreaterOperand() instanceof MulExpr
		and target_11.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="mt_mask"
		and target_11.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_808
		and target_11.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand() instanceof Literal
		and target_11.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getRightOperand() instanceof Literal
		and target_11.getParent().(IfStmt).getThen()=target_6
}

/*predicate func_12(Parameter vself_808, MulExpr target_12) {
		target_12.getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="mt_mask"
		and target_12.getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_808
		and target_12.getLeftOperand().(AddExpr).getAnOperand() instanceof Literal
		and target_12.getRightOperand() instanceof Literal
}

*/
predicate func_13(Parameter vself_808, FunctionCall target_13) {
		target_13.getTarget().hasName("_PyMemoTable_ResizeTable")
		and target_13.getArgument(0).(VariableAccess).getTarget()=vself_808
		and target_13.getArgument(1) instanceof MulExpr
}

from Function func, Parameter vself_808, Literal target_0, ReturnStmt target_6, MulExpr target_7, MulExpr target_8, VariableAccess target_9, NotExpr target_11, FunctionCall target_13
where
func_0(func, target_0)
and not func_1(vself_808, target_6, target_11)
and not func_4(func)
and func_6(target_11, func, target_6)
and func_7(vself_808, target_7)
and func_8(vself_808, target_8)
and func_9(vself_808, target_9)
and func_11(vself_808, target_6, target_11)
and func_13(vself_808, target_13)
and vself_808.getType().hasName("PyMemoTable *")
and vself_808.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
