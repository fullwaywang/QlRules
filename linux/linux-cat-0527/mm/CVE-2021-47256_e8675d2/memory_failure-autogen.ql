/**
 * @name linux-e8675d291ac007e1c636870db880f837a9ea112a-memory_failure
 * @id cpp/linux/e8675d291ac007e1c636870db880f837a9ea112a/memory-failure
 * @description linux-e8675d291ac007e1c636870db880f837a9ea112a-mm/memory-failure.c-memory_failure CVE-2021-47256
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vp_1428, ExprStmt target_2, LogicalAndExpr target_1) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof LogicalAndExpr
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageWriteback")
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vp_1428
	and target_0.getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vp_1428, LogicalAndExpr target_1) {
	target_1.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageTransTail")
	and target_1.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vp_1428
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageLRU")
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vp_1428
	and target_1.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_2(Variable vp_1428, FunctionCall target_3, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("put_page")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vp_1428
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Variable vp_1428, FunctionCall target_3) {
	target_3.getTarget().hasName("hwpoison_filter")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vp_1428
}

from Function func, Variable vp_1428, LogicalAndExpr target_1, ExprStmt target_2, FunctionCall target_3
where
not func_0(vp_1428, target_2, target_1)
and func_1(vp_1428, target_1)
and func_2(vp_1428, target_3, target_2)
and func_3(vp_1428, target_3)
and vp_1428.getType().hasName("page *")
and vp_1428.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
