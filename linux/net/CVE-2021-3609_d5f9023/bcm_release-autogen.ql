/**
 * @name linux-d5f9023fa61ee8b94f37a93f08e94b136cf1e463-bcm_release
 * @id cpp/linux/d5f9023fa61ee8b94f37a93f08e94b136cf1e463/bcm-release
 * @description linux-d5f9023fa61ee8b94f37a93f08e94b136cf1e463-net/can/bcm.c-bcm_release CVE-2021-3609
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("synchronize_rcu")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation()))
}

predicate func_1(Variable vbo_1486, Variable vop_1487, Variable vnext_1487, IfStmt target_3, LogicalAndExpr target_4, ExprStmt target_2, ValueFieldAccess target_5, Function func) {
exists(ForStmt target_1 |
	target_1.getInitialization().(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vop_1487
	and target_1.getInitialization().(ExprStmt).getExpr().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnext_1487
	and target_1.getCondition().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_1.getCondition().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vop_1487
	and target_1.getCondition().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rx_ops"
	and target_1.getCondition().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_1486
	and target_1.getUpdate().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vop_1487
	and target_1.getUpdate().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getTarget()=vnext_1487
	and target_1.getUpdate().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnext_1487
	and target_1.getUpdate().(CommaExpr).getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_1.getCondition().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getInitialization().(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getInitialization().(ExprStmt).getExpr().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable vop_1487, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("bcm_remove_op")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vop_1487
}

predicate func_3(Variable vbo_1486, IfStmt target_3) {
	target_3.getCondition().(LogicalAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="bcmproc_dir"
	and target_3.getCondition().(LogicalAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="can"
	and target_3.getCondition().(LogicalAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net *")
	and target_3.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="bcm_proc_read"
	and target_3.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_1486
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("remove_proc_entry")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="procname"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_1486
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="bcmproc_dir"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="can"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net *")
}

predicate func_4(Variable vbo_1486, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(ValueFieldAccess).getTarget().getName()="bcmproc_dir"
	and target_4.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="can"
	and target_4.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net *")
	and target_4.getRightOperand().(PointerFieldAccess).getTarget().getName()="bcm_proc_read"
	and target_4.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbo_1486
}

predicate func_5(Variable vnext_1487, ValueFieldAccess target_5) {
	target_5.getTarget().getName()="next"
	and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="list"
	and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnext_1487
}

from Function func, Variable vbo_1486, Variable vop_1487, Variable vnext_1487, ExprStmt target_2, IfStmt target_3, LogicalAndExpr target_4, ValueFieldAccess target_5
where
not func_0(target_3, func)
and not func_1(vbo_1486, vop_1487, vnext_1487, target_3, target_4, target_2, target_5, func)
and func_2(vop_1487, target_2)
and func_3(vbo_1486, target_3)
and func_4(vbo_1486, target_4)
and func_5(vnext_1487, target_5)
and vbo_1486.getType().hasName("bcm_sock *")
and vop_1487.getType().hasName("bcm_op *")
and vnext_1487.getType().hasName("bcm_op *")
and vbo_1486.(LocalVariable).getFunction() = func
and vop_1487.(LocalVariable).getFunction() = func
and vnext_1487.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
