/**
 * @name linux-c7df4a1ecb8579838ec8c56b2bb6a6716e974f37-ext4_unlink
 * @id cpp/linux/c7df4a1ecb8579838ec8c56b2bb6a6716e974f37/ext4-unlink
 * @description linux-c7df4a1ecb8579838ec8c56b2bb6a6716e974f37-fs/ext4/namei.c-ext4_unlink CVE-2019-19447
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinode_3157, ExprStmt target_3, IfStmt target_0) {
	target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="i_nlink"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_3157
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_0.getThen() instanceof BlockStmt
	and target_0.getLocation().isBefore(target_3.getLocation())
}

predicate func_1(Variable vinode_3157, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("drop_nlink")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_3157
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vinode_3157, EqualityOperation target_4, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("set_nlink")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_3157
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_delete_entry")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("handle_t *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("ext4_dir_entry_2 *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("buffer_head *")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vinode_3157, EqualityOperation target_4) {
	target_4.getLeftOperand().(ValueFieldAccess).getTarget().getName()="i_nlink"
	and target_4.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_3157
	and target_4.getRightOperand().(Literal).getValue()="0"
}

from Function func, Variable vinode_3157, IfStmt target_0, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, EqualityOperation target_4
where
func_0(vinode_3157, target_3, target_0)
and func_1(vinode_3157, func, target_1)
and func_2(vinode_3157, target_4, target_2)
and func_3(func, target_3)
and func_4(vinode_3157, target_4)
and vinode_3157.getType().hasName("inode *")
and vinode_3157.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
