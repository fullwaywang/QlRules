/**
 * @name linux-6921ed9049bc7457f66c1596c5b78aec0dae4a9d-spectre_v2_user_select_mitigation
 * @id cpp/linux/6921ed9049bc7457f66c1596c5b78aec0dae4a9d/spectre-v2-user-select-mitigation
 * @description linux-6921ed9049bc7457f66c1596c5b78aec0dae4a9d-arch/x86/kernel/cpu/bugs.c-spectre_v2_user_select_mitigation CVE-2023-1998
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vspectre_v2_enabled, FunctionCall target_0) {
	target_0.getTarget().hasName("spectre_v2_in_ibrs_mode")
	and not target_0.getTarget().hasName("spectre_v2_in_eibrs_mode")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vspectre_v2_enabled
	and target_0.getParent().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="0"
	and target_0.getParent().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_0.getParent().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("arch_test_bit")
	and target_0.getParent().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="x86_capability"
	and target_0.getParent().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bool")
	and target_0.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen() instanceof ReturnStmt
}

from Function func, Variable vspectre_v2_enabled, FunctionCall target_0
where
func_0(vspectre_v2_enabled, target_0)
and vspectre_v2_enabled.getType().hasName("spectre_v2_mitigation")
and not vspectre_v2_enabled.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
