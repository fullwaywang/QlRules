/**
 * @name v8-e144f3b71e64e01d6ffd247eb15ca1ff56f6287b-v8__internal__KeyedStoreIC__StoreElementHandler
 * @id cpp/v8/e144f3b71e64e01d6ffd247eb15ca1ff56f6287b/v8internalkeyedstoreicstoreelementhandler
 * @description v8-e144f3b71e64e01d6ffd247eb15ca1ff56f6287b-src/ic/ic.cc-v8__internal__KeyedStoreIC__StoreElementHandler CVE-2023-3079
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreceiver_map_2275, Variable vcode_2297, LogicalOrExpr target_6, FunctionCall target_7, FunctionCall target_8, ReturnStmt target_9, ReturnStmt target_10) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("IsJSArgumentsObjectMap")
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("has_fast_packed_elements")
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcode_2297
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ConstructorCall).getArgument(0).(FunctionCall).getTarget().hasName("StoreFastElementBuiltin")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ConstructorCall).getArgument(0).(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("isolate")
	and target_0.getElse().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_0.getElse().(BlockStmt).getStmt(1) instanceof IfStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_7.getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getQualifier().(VariableAccess).getLocation())
	and target_9.getExpr().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_10.getExpr().(VariableAccess).getLocation()))
}

/*predicate func_1(Function func) {
exists(ConstructorCall target_1 |
	target_1.getArgument(0).(FunctionCall).getTarget().hasName("StoreFastElementBuiltin")
	and target_1.getArgument(0).(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("isolate")
	and target_1.getArgument(0).(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_1.getEnclosingFunction() = func)
}

*/
predicate func_2(FunctionCall target_11, Function func) {
exists(ReturnStmt target_2 |
	target_2.getExpr() instanceof ConstructorCall
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(2)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Parameter vstore_mode_2275, Variable vcode_2297, LogicalOrExpr target_6, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcode_2297
	and target_3.getExpr().(AssignExpr).getRValue().(ConstructorCall).getArgument(0).(FunctionCall).getTarget().hasName("StoreFastElementBuiltin")
	and target_3.getExpr().(AssignExpr).getRValue().(ConstructorCall).getArgument(0).(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("isolate")
	and target_3.getExpr().(AssignExpr).getRValue().(ConstructorCall).getArgument(0).(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_3.getExpr().(AssignExpr).getRValue().(ConstructorCall).getArgument(0).(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vstore_mode_2275
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_4(Parameter vreceiver_map_2275, Variable vcode_2297, LogicalOrExpr target_6, IfStmt target_4) {
	target_4.getCondition().(FunctionCall).getTarget().hasName("has_typed_array_or_rab_gsab_typed_array_elements")
	and target_4.getCondition().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
	and target_4.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(VariableAccess).getTarget()=vcode_2297
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_5(Parameter vstore_mode_2275, ConstructorCall target_5) {
	target_5.getArgument(0).(FunctionCall).getTarget().hasName("StoreSlow")
	and target_5.getArgument(0).(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("isolate")
	and target_5.getArgument(0).(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_5.getArgument(0).(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vstore_mode_2275
}

predicate func_6(Parameter vreceiver_map_2275, LogicalOrExpr target_6) {
	target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("has_fast_elements")
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("has_sealed_elements")
	and target_6.getLeftOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("has_nonextensible_elements")
	and target_6.getLeftOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
	and target_6.getRightOperand().(FunctionCall).getTarget().hasName("has_typed_array_or_rab_gsab_typed_array_elements")
	and target_6.getRightOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
}

predicate func_7(Parameter vreceiver_map_2275, FunctionCall target_7) {
	target_7.getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
}

predicate func_8(Parameter vreceiver_map_2275, FunctionCall target_8) {
	target_8.getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
}

predicate func_9(Variable vcode_2297, FunctionCall target_12, ReturnStmt target_9) {
	target_9.getExpr().(VariableAccess).getTarget()=vcode_2297
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
}

predicate func_10(Variable vcode_2297, LogicalOrExpr target_13, ReturnStmt target_10) {
	target_10.getExpr().(VariableAccess).getTarget()=vcode_2297
	and target_10.getParent().(IfStmt).getCondition()=target_13
}

predicate func_11(BlockStmt target_14, Function func, FunctionCall target_11) {
	target_11.getTarget().hasName("IsStoreInArrayLiteralIC")
	and target_11.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_11.getParent().(IfStmt).getThen()=target_14
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Parameter vreceiver_map_2275, BlockStmt target_15, FunctionCall target_12) {
	target_12.getTarget().hasName("has_typed_array_or_rab_gsab_typed_array_elements")
	and target_12.getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vreceiver_map_2275
	and target_12.getParent().(IfStmt).getThen()=target_15
}

predicate func_13(Function func, LogicalOrExpr target_13) {
	target_13.getLeftOperand().(FunctionCall).getTarget().hasName("IsAnyDefineOwn")
	and target_13.getLeftOperand().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_13.getRightOperand().(FunctionCall).getTarget().hasName("IsStoreInArrayLiteralIC")
	and target_13.getRightOperand().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Function func, BlockStmt target_14) {
	target_14.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_14.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_14.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_14.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("runtime_call_stats")
	and target_14.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("counters")
	and target_14.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("CorrectCurrentCounterId")
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vcode_2297, FunctionCall target_12, BlockStmt target_15) {
	target_15.getStmt(0).(ReturnStmt).getExpr().(VariableAccess).getTarget()=vcode_2297
	and target_15.getParent().(IfStmt).getCondition()=target_12
}

from Function func, Parameter vreceiver_map_2275, Parameter vstore_mode_2275, Variable vcode_2297, ExprStmt target_3, IfStmt target_4, ConstructorCall target_5, LogicalOrExpr target_6, FunctionCall target_7, FunctionCall target_8, ReturnStmt target_9, ReturnStmt target_10, FunctionCall target_11, FunctionCall target_12, LogicalOrExpr target_13, BlockStmt target_14, BlockStmt target_15
where
not func_0(vreceiver_map_2275, vcode_2297, target_6, target_7, target_8, target_9, target_10)
and not func_2(target_11, func)
and func_3(vstore_mode_2275, vcode_2297, target_6, target_3)
and func_4(vreceiver_map_2275, vcode_2297, target_6, target_4)
and func_5(vstore_mode_2275, target_5)
and func_6(vreceiver_map_2275, target_6)
and func_7(vreceiver_map_2275, target_7)
and func_8(vreceiver_map_2275, target_8)
and func_9(vcode_2297, target_12, target_9)
and func_10(vcode_2297, target_13, target_10)
and func_11(target_14, func, target_11)
and func_12(vreceiver_map_2275, target_15, target_12)
and func_13(func, target_13)
and func_14(func, target_14)
and func_15(vcode_2297, target_12, target_15)
and vreceiver_map_2275.getType().hasName("Handle<Map>")
and vstore_mode_2275.getType().hasName("KeyedAccessStoreMode")
and vcode_2297.getType().hasName("Handle<Object>")
and vreceiver_map_2275.getFunction() = func
and vstore_mode_2275.getFunction() = func
and vcode_2297.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
