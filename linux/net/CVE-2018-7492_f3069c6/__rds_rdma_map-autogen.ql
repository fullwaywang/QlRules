/**
 * @name linux-f3069c6d33f6ae63a1668737bc78aaaa51bff7ca-__rds_rdma_map
 * @id cpp/linux/f3069c6d33f6ae63a1668737bc78aaaa51bff7ca/--rds-rdma-map
 * @description linux-f3069c6d33f6ae63a1668737bc78aaaa51bff7ca-net/rds/rdma.c-__rds_rdma_map CVE-2018-7492
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrs_172, BlockStmt target_2, EqualityOperation target_1) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand() instanceof EqualityOperation
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rs_transport"
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrs_172
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vrs_172, BlockStmt target_2, EqualityOperation target_1) {
		target_1.getAnOperand().(PointerFieldAccess).getTarget().getName()="rs_bound_addr"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrs_172
		and target_1.getAnOperand().(Literal).getValue()="0"
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
		target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-107"
		and target_2.getEnclosingFunction() = func
}

from Function func, Parameter vrs_172, EqualityOperation target_1, BlockStmt target_2
where
not func_0(vrs_172, target_2, target_1)
and func_1(vrs_172, target_2, target_1)
and func_2(func, target_2)
and vrs_172.getType().hasName("rds_sock *")
and vrs_172.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
