/**
 * @name linux-cec8f96e49d9be372fdb0c3836dcf31ec71e457e-snd_timer_user_params
 * @id cpp/linux/cec8f96e49d9be372fdb0c3836dcf31ec71e457e/snd-timer-user-params
 * @description linux-cec8f96e49d9be372fdb0c3836dcf31ec71e457e-sound/core/timer.c-snd_timer_user_params CVE-2016-4569
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtread_1739, PointerFieldAccess target_1) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtread_1739
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="32"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1)
}

predicate func_1(Function func, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="tread"
	and target_1.getQualifier().(VariableAccess).getTarget().getType().hasName("snd_timer_user *")
	and target_1.getEnclosingFunction() = func
}

from Function func, Variable vtread_1739, PointerFieldAccess target_1
where
not func_0(vtread_1739, target_1)
and func_1(func, target_1)
and vtread_1739.getType().hasName("snd_timer_tread")
and vtread_1739.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
