/**
 * @name linux-a3c54931199565930d6d84f4c3456f6440aefd41-audit_filter_inode_name
 * @id cpp/linux/a3c54931199565930d6d84f4c3456f6440aefd41/audit-filter-inode-name
 * @description linux-a3c54931199565930d6d84f4c3456f6440aefd41-kernel/auditsc.c-audit_filter_inode_name CVE-2014-3917
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctx_771, Variable ve_775, BlockStmt target_7, ExprStmt target_5, AddressOfExpr target_8) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("audit_in_mask")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rule"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ve_775
	and target_0.getArgument(1).(PointerFieldAccess).getTarget().getName()="major"
	and target_0.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_771
	and target_0.getParent().(LogicalAndExpr).getLeftOperand() instanceof EqualityOperation
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("audit_filter_rules")
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rule"
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ve_775
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vctx_771
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("audit_names *")
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("audit_state")
	and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_7
	and target_0.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vctx_771, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="major"
	and target_1.getQualifier().(VariableAccess).getTarget()=vctx_771
}

predicate func_2(Variable ve_775, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="rule"
	and target_2.getQualifier().(VariableAccess).getTarget()=ve_775
}

predicate func_3(Function func, DeclStmt target_3) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Parameter vctx_771, Variable vword_772, Function func, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vword_772
	and target_4.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="major"
	and target_4.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_771
	and target_4.getExpr().(AssignExpr).getRValue().(DivExpr).getRightOperand().(Literal).getValue()="32"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Parameter vctx_771, Variable vbit_772, Function func, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vbit_772
	and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(Literal).getValue()="1"
	and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="major"
	and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_771
	and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(MulExpr).getLeftOperand().(DivExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="major"
	and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(MulExpr).getLeftOperand().(DivExpr).getRightOperand().(Literal).getValue()="32"
	and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(MulExpr).getRightOperand().(Literal).getValue()="32"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Parameter vctx_771, Variable vword_772, Variable vbit_772, Variable ve_775, BlockStmt target_7, EqualityOperation target_6) {
	target_6.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="mask"
	and target_6.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rule"
	and target_6.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ve_775
	and target_6.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vword_772
	and target_6.getLeftOperand().(BitwiseAndExpr).getRightOperand().(VariableAccess).getTarget()=vbit_772
	and target_6.getRightOperand().(VariableAccess).getTarget()=vbit_772
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("audit_filter_rules")
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rule"
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ve_775
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vctx_771
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("audit_names *")
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("audit_state")
	and target_6.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_7
}

predicate func_7(Parameter vctx_771, BlockStmt target_7) {
	target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="current_state"
	and target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_771
	and target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("audit_state")
	and target_7.getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="1"
}

predicate func_8(Variable ve_775, AddressOfExpr target_8) {
	target_8.getOperand().(PointerFieldAccess).getTarget().getName()="rule"
	and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ve_775
}

from Function func, Parameter vctx_771, Variable vword_772, Variable vbit_772, Variable ve_775, PointerFieldAccess target_1, PointerFieldAccess target_2, DeclStmt target_3, ExprStmt target_4, ExprStmt target_5, EqualityOperation target_6, BlockStmt target_7, AddressOfExpr target_8
where
not func_0(vctx_771, ve_775, target_7, target_5, target_8)
and func_1(vctx_771, target_1)
and func_2(ve_775, target_2)
and func_3(func, target_3)
and func_4(vctx_771, vword_772, func, target_4)
and func_5(vctx_771, vbit_772, func, target_5)
and func_6(vctx_771, vword_772, vbit_772, ve_775, target_7, target_6)
and func_7(vctx_771, target_7)
and func_8(ve_775, target_8)
and vctx_771.getType().hasName("audit_context *")
and vword_772.getType().hasName("int")
and vbit_772.getType().hasName("int")
and ve_775.getType().hasName("audit_entry *")
and vctx_771.getFunction() = func
and vword_772.(LocalVariable).getFunction() = func
and vbit_772.(LocalVariable).getFunction() = func
and ve_775.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
