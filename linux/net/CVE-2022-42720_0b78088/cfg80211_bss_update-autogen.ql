/**
 * @name linux-0b7808818cb9df6680f98996b8e9a439fa7bcc2f-cfg80211_bss_update
 * @id cpp/linux/0b7808818cb9df6680f98996b8e9a439fa7bcc2f/cfg80211-bss-update
 * @description linux-0b7808818cb9df6680f98996b8e9a439fa7bcc2f-net/wireless/scan.c-cfg80211_bss_update CVE-2022-42720
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnew_1720, VariableAccess target_1, AddressOfExpr target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="transmitted_bss"
	and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="pub"
	and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_1720
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(9)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vfound_1700, BlockStmt target_4, VariableAccess target_1) {
	target_1.getTarget()=vfound_1700
	and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vnew_1720, AddressOfExpr target_2) {
	target_2.getOperand().(ValueFieldAccess).getTarget().getName()="nontrans_list"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="pub"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_1720
}

predicate func_3(Variable vnew_1720, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="hidden_beacon_bss"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="pub"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_1720
	and target_3.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="pub"
	and target_3.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("cfg80211_internal_bss *")
}

predicate func_4(Variable vfound_1700, BlockStmt target_4) {
	target_4.getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("cfg80211_update_known_bss")
	and target_4.getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("cfg80211_registered_device *")
	and target_4.getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfound_1700
	and target_4.getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("cfg80211_internal_bss *")
	and target_4.getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("bool")
	and target_4.getStmt(0).(IfStmt).getThen().(GotoStmt).getName() ="drop"
}

from Function func, Variable vfound_1700, Variable vnew_1720, VariableAccess target_1, AddressOfExpr target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vnew_1720, target_1, target_2, target_3)
and func_1(vfound_1700, target_4, target_1)
and func_2(vnew_1720, target_2)
and func_3(vnew_1720, target_3)
and func_4(vfound_1700, target_4)
and vfound_1700.getType().hasName("cfg80211_internal_bss *")
and vnew_1720.getType().hasName("cfg80211_internal_bss *")
and vfound_1700.(LocalVariable).getFunction() = func
and vnew_1720.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
