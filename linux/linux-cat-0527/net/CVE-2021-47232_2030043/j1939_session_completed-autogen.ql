/**
 * @name linux-2030043e616cab40f510299f09b636285e0a3678-j1939_session_completed
 * @id cpp/linux/2030043e616cab40f510299f09b636285e0a3678/j1939-session-completed
 * @description linux-2030043e616cab40f510299f09b636285e0a3678-net/can/j1939/transport.c-j1939_session_completed CVE-2021-47232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsession_1168, Variable vskb_1170, FunctionCall target_0) {
	target_0.getTarget().hasName("j1939_session_skb_find")
	and not target_0.getTarget().hasName("j1939_session_skb_get")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsession_1168
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vskb_1170
}

predicate func_1(Variable vskb_1170, NotExpr target_2, ExprStmt target_3) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("consume_skb")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_1170
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vsession_1168, NotExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="transmission"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsession_1168
}

predicate func_3(Parameter vsession_1168, Variable vskb_1170, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("j1939_sk_recv")
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="priv"
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsession_1168
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_1170
}

from Function func, Parameter vsession_1168, Variable vskb_1170, FunctionCall target_0, NotExpr target_2, ExprStmt target_3
where
func_0(vsession_1168, vskb_1170, target_0)
and not func_1(vskb_1170, target_2, target_3)
and func_2(vsession_1168, target_2)
and func_3(vsession_1168, vskb_1170, target_3)
and vsession_1168.getType().hasName("j1939_session *")
and vskb_1170.getType().hasName("sk_buff *")
and vsession_1168.getFunction() = func
and vskb_1170.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
