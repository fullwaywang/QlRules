/**
 * @name linux-0e8235d28f3a0e9eda9f02ff67ee566d5f42b66b-ntfs_read_mft
 * @id cpp/linux/0e8235d28f3a0e9eda9f02ff67ee566d5f42b66b/ntfs-read-mft
 * @description linux-0e8235d28f3a0e9eda9f02ff67ee566d5f42b66b-ntfs_read_mft CVE-2022-48502
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_27, UnaryMinusExpr target_0) {
		target_0.getValue()="-22"
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_27
}

predicate func_1(Variable verr_27, NotExpr target_6) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_27
		and target_1.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-116"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6)
}

/*predicate func_3(Variable verr_27, AssignExpr target_3) {
		target_3.getLValue().(VariableAccess).getTarget()=verr_27
		and target_3.getRValue() instanceof UnaryMinusExpr
}

*/
predicate func_4(Variable verr_27, NotExpr target_6, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_27
		and target_4.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_5(NotExpr target_7, Function func, GotoStmt target_5) {
		target_5.getParent().(IfStmt).getCondition()=target_7
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, NotExpr target_6) {
		target_6.getOperand().(FunctionCall).getTarget().hasName("is_rec_inuse")
		and target_6.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("MFT_REC *")
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, NotExpr target_7) {
		target_7.getOperand().(FunctionCall).getTarget().hasName("is_rec_base")
		and target_7.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("MFT_REC *")
		and target_7.getEnclosingFunction() = func
}

from Function func, Variable verr_27, UnaryMinusExpr target_0, ExprStmt target_4, GotoStmt target_5, NotExpr target_6, NotExpr target_7
where
func_0(verr_27, target_0)
and not func_1(verr_27, target_6)
and func_4(verr_27, target_6, target_4)
and func_5(target_7, func, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
and verr_27.getType().hasName("int")
and verr_27.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
