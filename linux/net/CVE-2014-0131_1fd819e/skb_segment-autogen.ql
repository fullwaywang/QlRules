/**
 * @name linux-1fd819ecb90cc9b822cd84d3056ddba315d3340f-skb_segment
 * @id cpp/linux/1fd819ecb90cc9b822cd84d3056ddba315d3340f/skb-segment
 * @description linux-1fd819ecb90cc9b822cd84d3056ddba315d3340f-net/core/skbuff.c-skb_segment CVE-2014-0131
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlist_skb_2853, LogicalAndExpr target_3, FunctionCall target_4, ExprStmt target_5) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("sk_buff *")
		and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vlist_skb_2853
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignAddExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vlist_skb_2853, RelationalOperation target_6, FunctionCall target_7) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("sk_buff *")
		and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vlist_skb_2853
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_7.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_2(Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("skb_orphan_frags")
		and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("sk_buff *")
		and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="32"
		and target_2.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vlist_skb_2853, LogicalAndExpr target_3) {
		target_3.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("skb_headlen")
		and target_3.getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vlist_skb_2853
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("skb_headlen")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vlist_skb_2853
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_4(Variable vlist_skb_2853, FunctionCall target_4) {
		target_4.getTarget().hasName("skb_end_pointer")
		and target_4.getArgument(0).(VariableAccess).getTarget()=vlist_skb_2853
}

predicate func_5(Variable vlist_skb_2853, ExprStmt target_5) {
		target_5.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getExpr().(AssignAddExpr).getRValue().(FunctionCall).getTarget().hasName("skb_headlen")
		and target_5.getExpr().(AssignAddExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vlist_skb_2853
}

predicate func_6(BlockStmt target_8, Function func, RelationalOperation target_6) {
		 (target_6 instanceof GEExpr or target_6 instanceof LEExpr)
		and target_6.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getParent().(IfStmt).getThen()=target_8
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vlist_skb_2853, FunctionCall target_7) {
		target_7.getTarget().hasName("skb_end_pointer")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vlist_skb_2853
}

predicate func_8(Function func, BlockStmt target_8) {
		target_8.getStmt(0).(DoStmt).getCondition() instanceof Literal
		and target_8.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_8.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
		and target_8.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(DoStmt).getCondition() instanceof Literal
		and target_8.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_8.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_8.getEnclosingFunction() = func
}

from Function func, Variable vlist_skb_2853, LogicalAndExpr target_3, FunctionCall target_4, ExprStmt target_5, RelationalOperation target_6, FunctionCall target_7, BlockStmt target_8
where
not func_0(vlist_skb_2853, target_3, target_4, target_5)
and not func_1(vlist_skb_2853, target_6, target_7)
and not func_2(func)
and func_3(vlist_skb_2853, target_3)
and func_4(vlist_skb_2853, target_4)
and func_5(vlist_skb_2853, target_5)
and func_6(target_8, func, target_6)
and func_7(vlist_skb_2853, target_7)
and func_8(func, target_8)
and vlist_skb_2853.getType().hasName("sk_buff *")
and vlist_skb_2853.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
