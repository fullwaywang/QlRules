/**
 * @name linux-b86dab054059b970111b5516ae548efaae5b3aae-k_ascii
 * @id cpp/linux/b86dab054059b970111b5516ae548efaae5b3aae/k-ascii
 * @description linux-b86dab054059b970111b5516ae548efaae5b3aae-drivers/tty/vt/keyboard.c-k_ascii CVE-2020-13974
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="1"
		and not target_1.getValue()="0"
		and target_1.getParent().(UnaryMinusExpr).getParent().(EQExpr).getAnOperand() instanceof UnaryMinusExpr
		and target_1.getEnclosingFunction() = func
}

predicate func_2(ExprStmt target_10, Function func) {
	exists(NotExpr target_2 |
		target_2.getOperand().(VariableAccess).getType().hasName("bool")
		and target_2.getParent().(IfStmt).getThen()=target_10
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Function func) {
	exists(AssignExpr target_3 |
		target_3.getLValue().(VariableAccess).getType().hasName("unsigned int")
		and target_3.getRValue().(Literal).getValue()="0"
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(Function func) {
	exists(AssignExpr target_4 |
		target_4.getLValue().(VariableAccess).getType().hasName("bool")
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Parameter vvalue_869, Variable vbase_871, ExprStmt target_10, Function func) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("unsigned int")
		and target_5.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(MulExpr).getLeftOperand().(VariableAccess).getType().hasName("unsigned int")
		and target_5.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(MulExpr).getRightOperand().(VariableAccess).getTarget()=vbase_871
		and target_5.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vvalue_869
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5)
}

predicate func_6(Parameter vvalue_869, VariableAccess target_6) {
		target_6.getTarget()=vvalue_869
}

predicate func_7(Variable vnpadch, ExprStmt target_10, EqualityOperation target_7) {
		target_7.getAnOperand().(VariableAccess).getTarget()=vnpadch
		and target_7.getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_7.getParent().(IfStmt).getThen()=target_10
}

predicate func_8(Parameter vvalue_869, Variable vnpadch, AssignExpr target_8) {
		target_8.getLValue().(VariableAccess).getTarget()=vnpadch
		and target_8.getRValue().(VariableAccess).getTarget()=vvalue_869
}

predicate func_9(Parameter vvalue_869, Variable vbase_871, Variable vnpadch, AssignExpr target_9) {
		target_9.getLValue().(VariableAccess).getTarget()=vnpadch
		and target_9.getRValue().(AddExpr).getAnOperand().(MulExpr).getLeftOperand().(VariableAccess).getTarget()=vnpadch
		and target_9.getRValue().(AddExpr).getAnOperand().(MulExpr).getRightOperand().(VariableAccess).getTarget()=vbase_871
		and target_9.getRValue().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vvalue_869
}

predicate func_10(Function func, ExprStmt target_10) {
		target_10.getExpr() instanceof AssignExpr
		and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vvalue_869, Variable vbase_871, Variable vnpadch, Literal target_1, VariableAccess target_6, EqualityOperation target_7, AssignExpr target_8, AssignExpr target_9, ExprStmt target_10
where
func_1(func, target_1)
and not func_2(target_10, func)
and not func_3(func)
and not func_4(func)
and not func_5(vvalue_869, vbase_871, target_10, func)
and func_6(vvalue_869, target_6)
and func_7(vnpadch, target_10, target_7)
and func_8(vvalue_869, vnpadch, target_8)
and func_9(vvalue_869, vbase_871, vnpadch, target_9)
and func_10(func, target_10)
and vvalue_869.getType().hasName("unsigned char")
and vbase_871.getType().hasName("int")
and vnpadch.getType().hasName("int")
and vvalue_869.getFunction() = func
and vbase_871.(LocalVariable).getFunction() = func
and not vnpadch.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
