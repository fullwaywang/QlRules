/**
 * @name linux-09ba28e1cd3cf715daab1fca6e1623e22fd754a6-mlxbf_gige_shutdown
 * @id cpp/linux/09ba28e1cd3cf715daab1fca6e1623e22fd754a6/mlxbf-gige-shutdown
 * @description linux-09ba28e1cd3cf715daab1fca6e1623e22fd754a6-drivers/net/ethernet/mellanox/mlxbf_gige/mlxbf_gige_main.c-mlxbf_gige_shutdown CVE-2024-35885
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_493, FunctionCall target_0) {
	target_0.getTarget().hasName("writeq")
	and not target_0.getTarget().hasName("rtnl_lock")
	and target_0.getArgument(0).(Literal).getValue()="0"
	and target_0.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="base"
	and target_0.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_493
	and target_0.getArgument(1).(PointerArithmeticOperation).getRightOperand() instanceof Literal
}

predicate func_1(Variable vpriv_493) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("netif_device_detach")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="netdev"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_493)
}

predicate func_2(Variable vpriv_493, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(FunctionCall).getTarget().hasName("netif_running")
	and target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="netdev"
	and target_2.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_493
	and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_close")
	and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="netdev"
	and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_493
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_3(Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("rtnl_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_4(Variable vpriv_493, VariableAccess target_4) {
	target_4.getTarget()=vpriv_493
	and target_4.getParent().(PointerFieldAccess).getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_5(Variable vpriv_493, VariableAccess target_5) {
	target_5.getTarget()=vpriv_493
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(Variable vpriv_493, PointerFieldAccess target_6) {
	target_6.getTarget().getName()="base"
	and target_6.getQualifier().(VariableAccess).getTarget()=vpriv_493
}

predicate func_8(Variable vpriv_493, FunctionCall target_8) {
	target_8.getTarget().hasName("mlxbf_gige_clean_port")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vpriv_493
}

from Function func, Variable vpriv_493, FunctionCall target_0, VariableAccess target_4, VariableAccess target_5, PointerFieldAccess target_6, FunctionCall target_8
where
func_0(vpriv_493, target_0)
and not func_1(vpriv_493)
and not func_2(vpriv_493, func)
and not func_3(func)
and func_4(vpriv_493, target_4)
and func_5(vpriv_493, target_5)
and func_6(vpriv_493, target_6)
and func_8(vpriv_493, target_8)
and vpriv_493.getType().hasName("mlxbf_gige *")
and vpriv_493.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
