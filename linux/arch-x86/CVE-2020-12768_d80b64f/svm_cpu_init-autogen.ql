/**
 * @name linux-d80b64ff297e40c2b6f7d7abc1b3eba70d22a068-svm_cpu_init
 * @id cpp/linux/d80b64ff297e40c2b6f7d7abc1b3eba70d22a068/svm-cpu-init
 * @description linux-d80b64ff297e40c2b6f7d7abc1b3eba70d22a068-arch/x86/kvm/svm.c-svm_cpu_init CVE-2020-12768
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="12"
	and not target_0.getValue()="0"
	and target_0.getParent().(UnaryMinusExpr).getParent().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(ExprStmt target_8, Function func, ExprStmt target_1) {
	target_1.getExpr() instanceof AssignExpr
	and target_1.getLocation().isBefore(target_8.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vsd_1007, ExprStmt target_9, ExprStmt target_8) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("__free_pages")
	and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="save_area"
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsd_1007
	and target_2.getArgument(1).(Literal).getValue()="0"
	and target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vr_1008, UnaryMinusExpr target_3) {
	target_3.getValue()="-12"
	and target_3.getParent().(AssignExpr).getRValue() = target_3
	and target_3.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vr_1008
}

predicate func_4(Function func, DeclStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vr_1008, DeclStmt target_4, AssignExpr target_5) {
	target_5.getLValue().(VariableAccess).getTarget()=vr_1008
	and target_5.getRValue() instanceof UnaryMinusExpr
}

predicate func_6(Variable vr_1008, FunctionCall target_10, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vr_1008
	and target_6.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_7(Variable vr_1008, VariableAccess target_7) {
	target_7.getTarget()=vr_1008
}

predicate func_8(Variable vsd_1007, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="save_area"
	and target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsd_1007
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alloc_pages")
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(BitwiseOrExpr).getValue()="3264"
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_9(Variable vsd_1007, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cpu"
	and target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsd_1007
	and target_9.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_10(Function func, FunctionCall target_10) {
	target_10.getTarget().hasName("svm_sev_enabled")
	and target_10.getEnclosingFunction() = func
}

from Function func, Variable vsd_1007, Variable vr_1008, Literal target_0, ExprStmt target_1, UnaryMinusExpr target_3, DeclStmt target_4, AssignExpr target_5, ExprStmt target_6, VariableAccess target_7, ExprStmt target_8, ExprStmt target_9, FunctionCall target_10
where
func_0(func, target_0)
and func_1(target_8, func, target_1)
and not func_2(vsd_1007, target_9, target_8)
and func_3(vr_1008, target_3)
and func_4(func, target_4)
and func_5(vr_1008, target_4, target_5)
and func_6(vr_1008, target_10, target_6)
and func_7(vr_1008, target_7)
and func_8(vsd_1007, target_8)
and func_9(vsd_1007, target_9)
and func_10(func, target_10)
and vsd_1007.getType().hasName("svm_cpu_data *")
and vr_1008.getType().hasName("int")
and vsd_1007.(LocalVariable).getFunction() = func
and vr_1008.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
