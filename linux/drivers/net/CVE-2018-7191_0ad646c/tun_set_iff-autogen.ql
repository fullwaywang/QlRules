/**
 * @name linux-0ad646c81b2182f7fa67ec0c8c825e0ee165696d-tun_set_iff
 * @id cpp/linux/0ad646c81b2182f7fa67ec0c8c825e0ee165696d/tun-set-iff
 * @description linux-0ad646c81b2182f7fa67ec0c8c825e0ee165696d-drivers/net/tun.c-tun_set_iff CVE-2018-7191
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnet_1954, Variable vdev_1958, Variable verr_1959, Variable vname_1998, VariableAccess target_2, NotExpr target_3, ExprStmt target_4, NotExpr target_5, ReturnStmt target_6, ExprStmt target_7) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1959
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dev_get_valid_name")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnet_1954
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdev_1958
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vname_1998
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(10)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_5.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_6.getExpr().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_1959, VariableAccess target_2) {
exists(IfStmt target_1 |
	target_1.getCondition().(VariableAccess).getTarget()=verr_1959
	and target_1.getThen().(GotoStmt).getName() ="err_free_dev"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(11)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2)
}

predicate func_2(Variable vdev_1958, BlockStmt target_8, VariableAccess target_2) {
	target_2.getTarget()=vdev_1958
	and target_2.getParent().(IfStmt).getThen()=target_8
}

predicate func_3(Parameter vnet_1954, NotExpr target_3) {
	target_3.getOperand().(FunctionCall).getTarget().hasName("ns_capable")
	and target_3.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_3.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_1954
	and target_3.getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="12"
}

predicate func_4(Parameter vnet_1954, Variable vdev_1958, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("dev_net_set")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_1958
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnet_1954
}

predicate func_5(Variable vdev_1958, NotExpr target_5) {
	target_5.getOperand().(VariableAccess).getTarget()=vdev_1958
}

predicate func_6(Variable verr_1959, RelationalOperation target_9, ReturnStmt target_6) {
	target_6.getExpr().(VariableAccess).getTarget()=verr_1959
	and target_6.getParent().(IfStmt).getCondition()=target_9
}

predicate func_7(Variable vdev_1958, Variable vname_1998, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdev_1958
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alloc_netdev_mqs")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofTypeOperator).getType() instanceof LongType
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofTypeOperator).getValue()="10616"
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vname_1998
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_8(Function func, BlockStmt target_8) {
	target_8.getStmt(0).(IfStmt).getCondition().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="ifru_flags"
	and target_8.getStmt(0).(IfStmt).getCondition().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ifr_ifru"
	and target_8.getStmt(0).(IfStmt).getCondition().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ifreq *")
	and target_8.getStmt(0).(IfStmt).getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="32768"
	and target_8.getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable verr_1959, ReturnStmt target_6, RelationalOperation target_9) {
	 (target_9 instanceof GTExpr or target_9 instanceof LTExpr)
	and target_9.getLesserOperand().(VariableAccess).getTarget()=verr_1959
	and target_9.getGreaterOperand().(Literal).getValue()="0"
	and target_9.getParent().(IfStmt).getThen()=target_6
}

from Function func, Parameter vnet_1954, Variable vdev_1958, Variable verr_1959, Variable vname_1998, VariableAccess target_2, NotExpr target_3, ExprStmt target_4, NotExpr target_5, ReturnStmt target_6, ExprStmt target_7, BlockStmt target_8, RelationalOperation target_9
where
not func_0(vnet_1954, vdev_1958, verr_1959, vname_1998, target_2, target_3, target_4, target_5, target_6, target_7)
and not func_1(verr_1959, target_2)
and func_2(vdev_1958, target_8, target_2)
and func_3(vnet_1954, target_3)
and func_4(vnet_1954, vdev_1958, target_4)
and func_5(vdev_1958, target_5)
and func_6(verr_1959, target_9, target_6)
and func_7(vdev_1958, vname_1998, target_7)
and func_8(func, target_8)
and func_9(verr_1959, target_6, target_9)
and vnet_1954.getType().hasName("net *")
and vdev_1958.getType().hasName("net_device *")
and verr_1959.getType().hasName("int")
and vname_1998.getType().hasName("char *")
and vnet_1954.getFunction() = func
and vdev_1958.(LocalVariable).getFunction() = func
and verr_1959.(LocalVariable).getFunction() = func
and vname_1998.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
