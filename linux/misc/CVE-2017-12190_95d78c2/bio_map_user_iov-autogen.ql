/**
 * @name linux-95d78c28b5a85bacbc29b8dba7c04babb9b0d467-bio_map_user_iov
 * @id cpp/linux/95d78c28b5a85bacbc29b8dba7c04babb9b0d467/bio-map-user-iov
 * @description linux-95d78c28b5a85bacbc29b8dba7c04babb9b0d467-block/bio.c-bio_map_user_iov CVE-2017-12190
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vj_1326, Variable vpages_1328, Variable vbio_1329, ExprStmt target_1, ArrayExpr target_2, ExprStmt target_3, ArrayExpr target_4, RelationalOperation target_5, ExprStmt target_6) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bi_vcnt"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbio_1329
	and target_0.getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getType().hasName("unsigned short")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_page")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vpages_1328
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vj_1326
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArrayOffset().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getLocation())
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_4.getArrayBase().(VariableAccess).getLocation())
	and target_5.getLesserOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_1.getExpr().(AssignSubExpr).getRValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vj_1326, Variable vpages_1328, Variable vbio_1329, ArrayExpr target_2) {
	target_2.getArrayBase().(VariableAccess).getTarget()=vpages_1328
	and target_2.getArrayOffset().(VariableAccess).getTarget()=vj_1326
	and target_2.getParent().(FunctionCall).getParent().(LTExpr).getLesserOperand().(FunctionCall).getTarget().hasName("bio_add_pc_page")
	and target_2.getParent().(FunctionCall).getParent().(LTExpr).getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("request_queue *")
	and target_2.getParent().(FunctionCall).getParent().(LTExpr).getLesserOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vbio_1329
	and target_2.getParent().(FunctionCall).getParent().(LTExpr).getLesserOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getParent().(FunctionCall).getParent().(LTExpr).getLesserOperand().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Variable vj_1326, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vj_1326
}

predicate func_4(Variable vj_1326, Variable vpages_1328, ArrayExpr target_4) {
	target_4.getArrayBase().(VariableAccess).getTarget()=vpages_1328
	and target_4.getArrayOffset().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vj_1326
}

predicate func_5(Variable vj_1326, Variable vpages_1328, Variable vbio_1329, RelationalOperation target_5) {
	 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
	and target_5.getLesserOperand().(FunctionCall).getTarget().hasName("bio_add_pc_page")
	and target_5.getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("request_queue *")
	and target_5.getLesserOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vbio_1329
	and target_5.getLesserOperand().(FunctionCall).getArgument(2).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vpages_1328
	and target_5.getLesserOperand().(FunctionCall).getArgument(2).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vj_1326
	and target_5.getLesserOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_5.getLesserOperand().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_6(Variable vbio_1329, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("bio_set_flag")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbio_1329
	and target_6.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="4"
}

from Function func, Variable vj_1326, Variable vpages_1328, Variable vbio_1329, ExprStmt target_1, ArrayExpr target_2, ExprStmt target_3, ArrayExpr target_4, RelationalOperation target_5, ExprStmt target_6
where
not func_0(vj_1326, vpages_1328, vbio_1329, target_1, target_2, target_3, target_4, target_5, target_6)
and func_1(func, target_1)
and func_2(vj_1326, vpages_1328, vbio_1329, target_2)
and func_3(vj_1326, target_3)
and func_4(vj_1326, vpages_1328, target_4)
and func_5(vj_1326, vpages_1328, vbio_1329, target_5)
and func_6(vbio_1329, target_6)
and vj_1326.getType().hasName("int")
and vpages_1328.getType().hasName("page **")
and vbio_1329.getType().hasName("bio *")
and vj_1326.(LocalVariable).getFunction() = func
and vpages_1328.(LocalVariable).getFunction() = func
and vbio_1329.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
