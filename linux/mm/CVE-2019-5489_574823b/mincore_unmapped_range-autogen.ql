/**
 * @name linux-574823bfab82d9d8fa47f422778043fbb4b4f50e-mincore_unmapped_range
 * @id cpp/linux/574823bfab82d9d8fa47f422778043fbb4b4f50e/mincore-unmapped-range
 * @description linux-574823bfab82d9d8fa47f422778043fbb4b4f50e-mm/mincore.c-mincore_unmapped_range CVE-2019-5489
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_6, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("unsigned char *")
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("unsigned long")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_6.getLocation()))
}

predicate func_2(Parameter vwalk_107, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="private"
	and target_2.getQualifier().(VariableAccess).getTarget()=vwalk_107
	and target_2.getParent().(FunctionCall).getParent().(AssignPointerAddExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Parameter vaddr_106, VariableAccess target_3) {
	target_3.getTarget()=vaddr_106
	and target_3.getParent().(FunctionCall).getParent().(AssignPointerAddExpr).getRValue() instanceof FunctionCall
}

predicate func_4(Parameter vend_106, VariableAccess target_4) {
	target_4.getTarget()=vend_106
	and target_4.getParent().(FunctionCall).getParent().(AssignPointerAddExpr).getRValue() instanceof FunctionCall
}

predicate func_5(Parameter vaddr_106, Parameter vend_106, Parameter vwalk_107, FunctionCall target_5) {
	target_5.getTarget().hasName("__mincore_unmapped_range")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vaddr_106
	and target_5.getArgument(1).(VariableAccess).getTarget()=vend_106
	and target_5.getArgument(2).(PointerFieldAccess).getTarget().getName()="vma"
	and target_5.getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwalk_107
	and target_5.getArgument(3).(PointerFieldAccess).getTarget().getName()="private"
	and target_5.getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwalk_107
}

predicate func_6(Parameter vwalk_107, ExprStmt target_6) {
	target_6.getExpr().(AssignPointerAddExpr).getLValue().(PointerFieldAccess).getTarget().getName()="private"
	and target_6.getExpr().(AssignPointerAddExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwalk_107
	and target_6.getExpr().(AssignPointerAddExpr).getRValue() instanceof FunctionCall
}

from Function func, Parameter vaddr_106, Parameter vend_106, Parameter vwalk_107, PointerFieldAccess target_2, VariableAccess target_3, VariableAccess target_4, FunctionCall target_5, ExprStmt target_6
where
not func_0(target_6, func)
and func_2(vwalk_107, target_2)
and func_3(vaddr_106, target_3)
and func_4(vend_106, target_4)
and func_5(vaddr_106, vend_106, vwalk_107, target_5)
and func_6(vwalk_107, target_6)
and vaddr_106.getType().hasName("unsigned long")
and vend_106.getType().hasName("unsigned long")
and vwalk_107.getType().hasName("mm_walk *")
and vaddr_106.getFunction() = func
and vend_106.getFunction() = func
and vwalk_107.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
