/**
 * @name linux-017c73a34a661a861712f7cc1393a123e5b2208c-ubi_attach_mtd_dev
 * @id cpp/linux/017c73a34a661a861712f7cc1393a123e5b2208c/ubi-attach-mtd-dev
 * @description linux-017c73a34a661a861712f7cc1393a123e5b2208c-drivers/mtd/ubi/build.c-ubi_attach_mtd_dev CVE-2023-31085
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmtd_842, IfStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="erasesize"
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmtd_842
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_printk")
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-1"
	and target_1.getThen().(BlockStmt).getStmt(0).(BlockStmt).getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getThen().(BlockStmt).getStmt(0).(BlockStmt).getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(BlockStmt).getStmt(0).(ForStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getThen().(BlockStmt).getStmt(0).(BlockStmt).getStmt(0).(ForStmt).getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="32"
	and target_1.getThen().(BlockStmt).getStmt(0).(BlockStmt).getStmt(0).(ForStmt).getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getElse().(BlockStmt).getStmt(0).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getElse().(BlockStmt).getStmt(0).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="32"
	and target_1.getElse().(BlockStmt).getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getElse().(BlockStmt).getStmt(1).(IfStmt).getCondition().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_1.getElse().(BlockStmt).getStmt(1).(IfStmt).getCondition().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getElse().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-17"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vmtd_842, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("_printk")
	and target_2.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3ubi: refuse attaching mtd%d - MLC NAND is not supported\n"
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="index"
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmtd_842
}

from Function func, Parameter vmtd_842, IfStmt target_1, ExprStmt target_2
where
not func_0(vmtd_842, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vmtd_842, target_2)
and vmtd_842.getType().hasName("mtd_info *")
and vmtd_842.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
