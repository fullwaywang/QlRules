/**
 * @name linux-f5c779b7ddbda30866cf2a27c63e34158f858c73-smb2_session_logoff
 * @id cpp/linux/f5c779b7ddbda30866cf2a27c63e34158f858c73/smb2-session-logoff
 * @description linux-f5c779b7ddbda30866cf2a27c63e34158f858c73-fs/ksmbd/smb2pdu.c-smb2_session_logoff CVE-2023-32250
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vconn_2051, Variable vsess_2053, ExprStmt target_7, ExprStmt target_8, FunctionCall target_9, AddressOfExpr target_10, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsess_2053
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ksmbd_session_lookup")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vconn_2051
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="SessionId"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="hdr"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("smb2_logoff_req *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_7.getLocation())
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_9.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(FunctionCall target_9, Function func, DeclStmt target_3) {
	target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vwork_2049, Initializer target_4) {
	target_4.getExpr().(PointerFieldAccess).getTarget().getName()="sess"
	and target_4.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_2049
}

predicate func_5(Parameter vwork_2049, ExprStmt target_11, ExprStmt target_12, VariableAccess target_5) {
	target_5.getTarget()=vwork_2049
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ksmbd_conn_set_need_reconnect")
	and target_11.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getLocation())
	and target_5.getLocation().isBefore(target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_6(Parameter vwork_2049, ExprStmt target_13, VariableAccess target_6) {
	target_6.getTarget()=vwork_2049
	and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ksmbd_conn_set_need_negotiate")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getLocation())
}

predicate func_7(Variable vsess_2053, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("ksmbd_destroy_file_table")
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="file_table"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_2053
}

predicate func_8(Variable vconn_2051, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("ksmbd_conn_wait_idle")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vconn_2051
}

predicate func_9(Variable vsess_2053, FunctionCall target_9) {
	target_9.getTarget().hasName("ksmbd_tree_conn_session_logoff")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vsess_2053
}

predicate func_10(Variable vsess_2053, AddressOfExpr target_10) {
	target_10.getOperand().(PointerFieldAccess).getTarget().getName()="file_table"
	and target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_2053
}

predicate func_11(Parameter vwork_2049, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("inc_rfc1001_len")
	and target_11.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="response_buf"
	and target_11.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_2049
	and target_11.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="4"
}

predicate func_12(Parameter vwork_2049, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("ksmbd_close_session_fds")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vwork_2049
}

predicate func_13(Parameter vwork_2049, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("smb2_set_err_rsp")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vwork_2049
}

from Function func, Variable vconn_2051, Variable vsess_2053, Parameter vwork_2049, DeclStmt target_3, Initializer target_4, VariableAccess target_5, VariableAccess target_6, ExprStmt target_7, ExprStmt target_8, FunctionCall target_9, AddressOfExpr target_10, ExprStmt target_11, ExprStmt target_12, ExprStmt target_13
where
not func_1(vconn_2051, vsess_2053, target_7, target_8, target_9, target_10, func)
and func_3(target_9, func, target_3)
and func_4(vwork_2049, target_4)
and func_5(vwork_2049, target_11, target_12, target_5)
and func_6(vwork_2049, target_13, target_6)
and func_7(vsess_2053, target_7)
and func_8(vconn_2051, target_8)
and func_9(vsess_2053, target_9)
and func_10(vsess_2053, target_10)
and func_11(vwork_2049, target_11)
and func_12(vwork_2049, target_12)
and func_13(vwork_2049, target_13)
and vconn_2051.getType().hasName("ksmbd_conn *")
and vsess_2053.getType().hasName("ksmbd_session *")
and vwork_2049.getType().hasName("ksmbd_work *")
and vconn_2051.(LocalVariable).getFunction() = func
and vsess_2053.(LocalVariable).getFunction() = func
and vwork_2049.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
