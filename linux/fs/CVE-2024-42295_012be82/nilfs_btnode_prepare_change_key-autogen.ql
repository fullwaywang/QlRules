/**
 * @name linux-012be828a118bf496e666ef1fc47fc0e7358ada2-nilfs_btnode_prepare_change_key
 * @id cpp/linux/012be828a118bf496e666ef1fc47fc0e7358ada2/nilfs-btnode-prepare-change-key
 * @description linux-012be828a118bf496e666ef1fc47fc0e7358ada2-fs/nilfs2/btnode.c-nilfs_btnode_prepare_change_key CVE-2024-42295
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="823"
	and not target_0.getValue()="822"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="824"
	and not target_1.getValue()="823"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="12"
	and not target_2.getValue()="0"
	and target_2.getParent().(UnaryMinusExpr).getParent().(ReturnStmt).getExpr() instanceof UnaryMinusExpr
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func) {
exists(DoStmt target_3 |
	exists(BlockStmt obj_0 | obj_0=target_3.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(AsmStmt obj_3 | obj_3=obj_2.getStmt(0) |
					exists(SizeofTypeOperator obj_4 | obj_4=obj_3.getChild(3) |
						obj_4.getType() instanceof LongType
						and obj_4.getValue()="12"
					)
					and obj_3.getChild(0) instanceof StringLiteral
					and obj_3.getChild(1) instanceof Literal
					and obj_3.getChild(2) instanceof Literal
				)
			)
			and obj_1.getCondition() instanceof Literal
		)
		and obj_0.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="822"
		and obj_0.getStmt(2) instanceof ExprStmt
	)
	and target_3.getCondition() instanceof Literal
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(Variable vnbh_176, ReturnStmt target_10) {
exists(FunctionCall target_4 |
	target_4.getTarget().hasName("IS_ERR")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vnbh_176
	and target_4.getParent().(IfStmt).getThen()=target_10
)
}

predicate func_5(Variable vnbh_176, NotExpr target_8, NotExpr target_11) {
exists(FunctionCall target_5 |
	target_5.getTarget().hasName("PTR_ERR")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vnbh_176
	and target_8.getOperand().(VariableAccess).getLocation().isBefore(target_5.getArgument(0).(VariableAccess).getLocation())
	and target_5.getArgument(0).(VariableAccess).getLocation().isBefore(target_11.getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
)
}

predicate func_6(Function func, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("__builtin_unreachable")
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vnbh_176, ReturnStmt target_10, VariableAccess target_7) {
	target_7.getTarget()=vnbh_176
	and target_7.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_10
}

predicate func_8(Variable vnbh_176, ReturnStmt target_10, NotExpr target_8) {
	target_8.getOperand().(VariableAccess).getTarget()=vnbh_176
	and target_8.getParent().(IfStmt).getThen()=target_10
}

predicate func_9(Function func, UnaryMinusExpr target_9) {
	target_9.getValue()="-12"
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, ReturnStmt target_10) {
	target_10.getExpr() instanceof UnaryMinusExpr
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vnbh_176, NotExpr target_11) {
	exists(NotExpr obj_0 | obj_0=target_11.getOperand() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vnbh_176
			and obj_1.getRightOperand().(VariableAccess).getTarget().getType().hasName("buffer_head *")
		)
	)
}

from Function func, Variable vnbh_176, Literal target_0, Literal target_1, Literal target_2, ExprStmt target_6, VariableAccess target_7, NotExpr target_8, UnaryMinusExpr target_9, ReturnStmt target_10, NotExpr target_11
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and not func_3(func)
and not func_4(vnbh_176, target_10)
and not func_5(vnbh_176, target_8, target_11)
and func_6(func, target_6)
and func_7(vnbh_176, target_10, target_7)
and func_8(vnbh_176, target_10, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(vnbh_176, target_11)
and vnbh_176.getType().hasName("buffer_head *")
and vnbh_176.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
