/**
 * @name openssl-bbcf509bd046b34cca19c766bbddc31683d0858b-PEM_read_bio_ex
 * @id cpp/openssl/bbcf509bd046b34cca19c766bbddc31683d0858b/pem-read-bio-ex
 * @description openssl-bbcf509bd046b34cca19c766bbddc31683d0858b-crypto/pem/pem_lib.c-PEM_read_bio_ex CVE-2022-4450
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vheader_899, LogicalOrExpr target_2, PointerDereferenceExpr target_3, PointerDereferenceExpr target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vheader_899
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdata_900, LogicalOrExpr target_2, PointerDereferenceExpr target_5, PointerDereferenceExpr target_6) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vdata_900
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_5.getOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_1.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_6.getOperand().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vheader_899, Parameter vdata_900, LogicalOrExpr target_2) {
		target_2.getAnOperand().(EqualityOperation).getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vheader_899
		and target_2.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_2.getAnOperand().(EqualityOperation).getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vdata_900
		and target_2.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
}

predicate func_3(Parameter vheader_899, PointerDereferenceExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget()=vheader_899
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("pem_free")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

predicate func_4(Parameter vheader_899, PointerDereferenceExpr target_4) {
		target_4.getOperand().(VariableAccess).getTarget()=vheader_899
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("BIO_read")
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("BIO *")
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_5(Parameter vdata_900, PointerDereferenceExpr target_5) {
		target_5.getOperand().(VariableAccess).getTarget()=vdata_900
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("pem_free")
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

predicate func_6(Parameter vdata_900, PointerDereferenceExpr target_6) {
		target_6.getOperand().(VariableAccess).getTarget()=vdata_900
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("BIO_read")
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("BIO *")
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vheader_899, Parameter vdata_900, LogicalOrExpr target_2, PointerDereferenceExpr target_3, PointerDereferenceExpr target_4, PointerDereferenceExpr target_5, PointerDereferenceExpr target_6
where
not func_0(vheader_899, target_2, target_3, target_4)
and not func_1(vdata_900, target_2, target_5, target_6)
and func_2(vheader_899, vdata_900, target_2)
and func_3(vheader_899, target_3)
and func_4(vheader_899, target_4)
and func_5(vdata_900, target_5)
and func_6(vdata_900, target_6)
and vheader_899.getType().hasName("char **")
and vdata_900.getType().hasName("unsigned char **")
and vheader_899.getFunction() = func
and vdata_900.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
