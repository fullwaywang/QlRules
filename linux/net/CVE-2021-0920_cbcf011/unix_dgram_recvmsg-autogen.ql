/**
 * @name linux-cbcf01128d0a92e131bd09f1688fe032480b65ca-unix_dgram_recvmsg
 * @id cpp/linux/cbcf01128d0a92e131bd09f1688fe032480b65ca/unix-dgram-recvmsg
 * @description linux-cbcf01128d0a92e131bd09f1688fe032480b65ca-net/unix/af_unix.c-unix_dgram_recvmsg CVE-2021-0920
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vscm_2087, Variable vskb_2090, AddressOfExpr target_4, ExprStmt target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("unix_peek_fds")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vscm_2087
	and target_0.getArgument(1).(VariableAccess).getTarget()=vskb_2090
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation())
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vscm_2087, VariableAccess target_1) {
	target_1.getTarget()=vscm_2087
}

predicate func_2(Variable vskb_2090, VariableAccess target_2) {
	target_2.getTarget()=vskb_2090
	and target_2.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(PointerDereferenceExpr).getParent().(ValueFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Variable vscm_2087, Variable vskb_2090, AssignExpr target_3) {
	target_3.getLValue().(ValueFieldAccess).getTarget().getName()="fp"
	and target_3.getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vscm_2087
	and target_3.getRValue().(FunctionCall).getTarget().hasName("scm_fp_dup")
	and target_3.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="fp"
	and target_3.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cb"
	and target_3.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_2090
}

predicate func_4(Variable vscm_2087, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vscm_2087
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("scm_recv")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("socket *")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("msghdr *")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_5(Variable vskb_2090, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="32"
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_2090
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(SubExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(VariableAccess).getTarget().getType().hasName("size_t")
}

from Function func, Variable vscm_2087, Variable vskb_2090, VariableAccess target_1, VariableAccess target_2, AssignExpr target_3, AddressOfExpr target_4, ExprStmt target_5
where
not func_0(vscm_2087, vskb_2090, target_4, target_5)
and func_1(vscm_2087, target_1)
and func_2(vskb_2090, target_2)
and func_3(vscm_2087, vskb_2090, target_3)
and func_4(vscm_2087, target_4)
and func_5(vskb_2090, target_5)
and vscm_2087.getType().hasName("scm_cookie")
and vskb_2090.getType().hasName("sk_buff *")
and vscm_2087.(LocalVariable).getFunction() = func
and vskb_2090.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
