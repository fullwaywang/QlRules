/**
 * @name linux-086ba77a6db00ed858ff07451bedee197df868c9-perf_syscall_exit
 * @id cpp/linux/086ba77a6db00ed858ff07451bedee197df868c9/perf-syscall-exit
 * @description linux-086ba77a6db00ed858ff07451bedee197df868c9-kernel/trace/trace_syscalls.c-perf_syscall_exit CVE-2014-7825
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsyscall_nr_639, ExprStmt target_2, RelationalOperation target_1) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand() instanceof RelationalOperation
		and target_0.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vsyscall_nr_639
		and target_0.getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="545"
		and target_0.getParent().(IfStmt).getThen() instanceof ReturnStmt
		and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_1.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsyscall_nr_639, RelationalOperation target_1) {
		 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
		and target_1.getLesserOperand().(VariableAccess).getTarget()=vsyscall_nr_639
		and target_1.getGreaterOperand().(Literal).getValue()="0"
		and target_1.getParent().(IfStmt).getThen() instanceof ReturnStmt
}

predicate func_2(Variable vsyscall_nr_639, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsyscall_nr_639
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("trace_get_syscall_nr")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("get_current")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("pt_regs *")
}

from Function func, Variable vsyscall_nr_639, RelationalOperation target_1, ExprStmt target_2
where
not func_0(vsyscall_nr_639, target_2, target_1)
and func_1(vsyscall_nr_639, target_1)
and func_2(vsyscall_nr_639, target_2)
and vsyscall_nr_639.getType().hasName("int")
and vsyscall_nr_639.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
