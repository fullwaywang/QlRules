/**
 * @name linux-23efa74cfe6eb923abb5b9bc51b2a04879013c67-ma35d1serial_probe
 * @id cpp/linux/23efa74cfe6eb923abb5b9bc51b2a04879013c67/ma35d1serial-probe
 * @description linux-23efa74cfe6eb923abb5b9bc51b2a04879013c67-drivers/tty/serial/ma35d1_serial.c-ma35d1serial_probe CVE-2024-42248
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BlockStmt target_4, Function func) {
exists(NotExpr target_0 |
	target_0.getOperand() instanceof ValueFieldAccess
	and target_0.getParent().(IfStmt).getThen()=target_4
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(ValueFieldAccess target_3, Function func) {
exists(ReturnStmt target_1 |
	target_1.getExpr().(UnaryMinusExpr).getValue()="-19"
	and target_1.getParent().(IfStmt).getCondition()=target_3
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Variable vret_689, Parameter vpdev_685, ValueFieldAccess target_3, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="dev"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vpdev_685
				)
				and obj_2.getTarget().getName()="of_node"
			)
			and obj_1.getTarget().hasName("of_alias_get_id")
			and obj_1.getArgument(1).(StringLiteral).getValue()="serial"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_689
	)
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Parameter vpdev_685, ValueFieldAccess target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getQualifier() |
		obj_0.getTarget().getName()="dev"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpdev_685
	)
	and target_3.getTarget().getName()="of_node"
}

predicate func_4(Variable vret_689, BlockStmt target_4) {
	exists(IfStmt obj_0 | obj_0=target_4.getStmt(1) |
		exists(RelationalOperation obj_1 | obj_1=obj_0.getCondition() |
			obj_1.getLesserOperand().(VariableAccess).getTarget()=vret_689
			and obj_1.getGreaterOperand().(Literal).getValue()="0"
		)
		and obj_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(VariableAccess).getTarget()=vret_689
	)
	and target_4.getStmt(0) instanceof ExprStmt
}

from Function func, Variable vret_689, Parameter vpdev_685, ExprStmt target_2, ValueFieldAccess target_3, BlockStmt target_4
where
not func_0(target_4, func)
and not func_1(target_3, func)
and func_2(vret_689, vpdev_685, target_3, target_2)
and func_3(vpdev_685, target_3)
and func_4(vret_689, target_4)
and vret_689.getType().hasName("int")
and vpdev_685.getType().hasName("platform_device *")
and vret_689.(LocalVariable).getFunction() = func
and vpdev_685.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
