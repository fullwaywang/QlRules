/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-user_update
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/user-update
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/user_defined.c-user_update CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkey_105, FunctionCall target_0) {
		target_0.getTarget().hasName("constant_test_bit")
		and not target_0.getTarget().hasName("key_is_positive")
		and target_0.getArgument(0).(Literal).getValue()="5"
		and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_105
}

predicate func_1(Parameter vkey_105, VariableAccess target_1) {
		target_1.getTarget()=vkey_105
		and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ConditionalExpr).getThen() instanceof FunctionCall
}

predicate func_2(Parameter vkey_105, ExprStmt target_4, NotExpr target_2) {
		target_2.getOperand().(ConditionalExpr).getCondition().(Literal).getValue()="1"
		and target_2.getOperand().(ConditionalExpr).getThen() instanceof FunctionCall
		and target_2.getOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
		and target_2.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(Literal).getValue()="5"
		and target_2.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_2.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_105
		and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Parameter vkey_105, ExprStmt target_5, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="flags"
		and target_3.getQualifier().(VariableAccess).getTarget()=vkey_105
		and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
}

predicate func_4(Function func, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("user_key_payload *")
		and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
		and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getTarget().getName()="rcu_data0"
		and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="payload"
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vkey_105, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="expiry"
		and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_105
		and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="expiry"
		and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key_preparsed_payload *")
}

from Function func, Parameter vkey_105, FunctionCall target_0, VariableAccess target_1, NotExpr target_2, PointerFieldAccess target_3, ExprStmt target_4, ExprStmt target_5
where
func_0(vkey_105, target_0)
and func_1(vkey_105, target_1)
and func_2(vkey_105, target_4, target_2)
and func_3(vkey_105, target_5, target_3)
and func_4(func, target_4)
and func_5(vkey_105, target_5)
and vkey_105.getType().hasName("key *")
and vkey_105.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
