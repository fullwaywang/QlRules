/**
 * @name linux-f0d1762554014ce0ae347b9f0d088f2c157c8c72-pcd_exit
 * @id cpp/linux/f0d1762554014ce0ae347b9f0d088f2c157c8c72/pcd-exit
 * @description linux-f0d1762554014ce0ae347b9f0d088f2c157c8c72-drivers/block/paride/pcd.c-pcd_exit CVE-2019-15923
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcd_1031, CommaExpr target_1, IfStmt target_2) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="disk"
		and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_1031
		and target_1.getRightOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vcd_1031, CommaExpr target_1) {
		target_1.getLeftOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getRightOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vcd_1031
}

predicate func_2(Variable vcd_1031, IfStmt target_2) {
		target_2.getCondition().(PointerFieldAccess).getTarget().getName()="present"
		and target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_1031
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("del_gendisk")
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="disk"
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_1031
		and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("pi_release")
		and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="pi"
		and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcd_1031
}

from Function func, Variable vcd_1031, CommaExpr target_1, IfStmt target_2
where
not func_0(vcd_1031, target_1, target_2)
and func_1(vcd_1031, target_1)
and func_2(vcd_1031, target_2)
and vcd_1031.getType().hasName("pcd_unit *")
and vcd_1031.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
