/**
 * @name linux-f00432063db1a0db484e85193eccc6845435b80e-xs_reset_transport
 * @id cpp/linux/f00432063db1a0db484e85193eccc6845435b80e/xs-reset-transport
 * @description linux-f00432063db1a0db484e85193eccc6845435b80e-xs_reset_transport CVE-2022-28893
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfilp_1184, FunctionCall target_0) {
		target_0.getTarget().hasName("fput")
		and not target_0.getTarget().hasName("__fput_sync")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vfilp_1184
}

predicate func_1(Variable vxprt_1183, ExprStmt target_3, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
		and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="32"
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
		and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="3"
		and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="state"
		and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxprt_1183
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vxprt_1183, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("xprt_clear_connected")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vxprt_1183
}

from Function func, Variable vxprt_1183, Variable vfilp_1184, FunctionCall target_0, ExprStmt target_3
where
func_0(vfilp_1184, target_0)
and not func_1(vxprt_1183, target_3, func)
and func_3(vxprt_1183, target_3)
and vxprt_1183.getType().hasName("rpc_xprt *")
and vfilp_1184.getType().hasName("file *")
and vxprt_1183.(LocalVariable).getFunction() = func
and vfilp_1184.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
