/**
 * @name linux-36d5fe6a000790f56039afe26834265db0a3ad4c-nfqnl_build_packet_message
 * @id cpp/linux/36d5fe6a000790f56039afe26834265db0a3ad4c/nfqnl-build-packet-message
 * @description linux-36d5fe6a000790f56039afe26834265db0a3ad4c-net/netfilter/nfnetlink_queue_core.c-nfqnl_build_packet_message CVE-2014-2568
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_289, FunctionCall target_0) {
	target_0.getTarget().hasName("kfree_skb")
	and not target_0.getTarget().hasName("skb_tx_error")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vskb_289
}

predicate func_1(Function func) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("skb_tx_error")
	and target_1.getArgument(0).(VariableAccess).getType().hasName("sk_buff *")
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable ventskb_294, NotExpr target_9, ExprStmt target_10) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("skb_tx_error")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ventskb_294
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(VariableAccess target_11, Function func) {
exists(IfStmt target_3 |
	target_3.getCondition() instanceof FunctionCall
	and target_3.getThen().(GotoStmt).getName() ="nla_put_failure"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Variable ventskb_294, ExprStmt target_12, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(FunctionCall).getTarget().hasName("skb_tx_error")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ventskb_294
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_12.getLocation()))
}

predicate func_5(NotExpr target_9, Function func, ExprStmt target_5) {
	target_5.getExpr() instanceof FunctionCall
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_5.getEnclosingFunction() = func
}

predicate func_6(NotExpr target_9, Function func, ReturnStmt target_6) {
	target_6.getExpr().(Literal).getValue()="0"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_6.getEnclosingFunction() = func
}

predicate func_7(NotExpr target_14, Function func, ReturnStmt target_7) {
	target_7.getExpr().(Literal).getValue()="0"
	and target_7.getParent().(IfStmt).getCondition()=target_14
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vdata_len_287, Variable vhlen_288, Variable vskb_289, Variable ventskb_294, FunctionCall target_8) {
	target_8.getTarget().hasName("skb_zerocopy")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vskb_289
	and target_8.getArgument(1).(VariableAccess).getTarget()=ventskb_294
	and target_8.getArgument(2).(VariableAccess).getTarget()=vdata_len_287
	and target_8.getArgument(3).(VariableAccess).getTarget()=vhlen_288
}

predicate func_9(Function func, NotExpr target_9) {
	target_9.getOperand().(VariableAccess).getTarget().getType().hasName("nlmsghdr *")
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable ventskb_294, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("nf_conn *")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nfqnl_ct_get")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ventskb_294
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ip_conntrack_info")
}

predicate func_11(Variable vdata_len_287, BlockStmt target_15, VariableAccess target_11) {
	target_11.getTarget()=vdata_len_287
	and target_11.getParent().(IfStmt).getThen()=target_15
}

predicate func_12(Variable vskb_289, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_289
}

predicate func_14(Variable vskb_289, NotExpr target_14) {
	target_14.getOperand().(VariableAccess).getTarget()=vskb_289
}

predicate func_15(Variable vhlen_288, Variable vskb_289, BlockStmt target_15) {
	target_15.getStmt(1).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getTarget().hasName("skb_tailroom")
	and target_15.getStmt(1).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_289
	and target_15.getStmt(1).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(SizeofExprOperator).getValue()="4"
	and target_15.getStmt(1).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vhlen_288
	and target_15.getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="nla_put_failure"
}

from Function func, Variable vdata_len_287, Variable vhlen_288, Variable vskb_289, Variable ventskb_294, FunctionCall target_0, ExprStmt target_5, ReturnStmt target_6, ReturnStmt target_7, FunctionCall target_8, NotExpr target_9, ExprStmt target_10, VariableAccess target_11, ExprStmt target_12, NotExpr target_14, BlockStmt target_15
where
func_0(vskb_289, target_0)
and not func_1(func)
and not func_2(ventskb_294, target_9, target_10)
and not func_3(target_11, func)
and not func_4(ventskb_294, target_12, func)
and func_5(target_9, func, target_5)
and func_6(target_9, func, target_6)
and func_7(target_14, func, target_7)
and func_8(vdata_len_287, vhlen_288, vskb_289, ventskb_294, target_8)
and func_9(func, target_9)
and func_10(ventskb_294, target_10)
and func_11(vdata_len_287, target_15, target_11)
and func_12(vskb_289, target_12)
and func_14(vskb_289, target_14)
and func_15(vhlen_288, vskb_289, target_15)
and vdata_len_287.getType().hasName("size_t")
and vhlen_288.getType().hasName("unsigned int")
and vskb_289.getType().hasName("sk_buff *")
and ventskb_294.getType().hasName("sk_buff *")
and vdata_len_287.(LocalVariable).getFunction() = func
and vhlen_288.(LocalVariable).getFunction() = func
and vskb_289.(LocalVariable).getFunction() = func
and ventskb_294.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
