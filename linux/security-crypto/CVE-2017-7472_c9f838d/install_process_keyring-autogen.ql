/**
 * @name linux-c9f838d104fed6f2f61d68164712e3204bf5271b-install_process_keyring
 * @id cpp/linux/c9f838d104fed6f2f61d68164712e3204bf5271b/install-process-keyring
 * @description linux-c9f838d104fed6f2f61d68164712e3204bf5271b-security/keys/process_keys.c-install_process_keyring CVE-2017-7472
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_206, VariableAccess target_0) {
	target_0.getTarget()=vret_206
	and target_0.getParent().(NEExpr).getRightOperand() instanceof UnaryMinusExpr
}

predicate func_1(Variable vret_206, ConditionalExpr target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vret_206
	and target_1.getCondition().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-17"
	and target_1.getThen().(VariableAccess).getTarget()=vret_206
	and target_1.getElse().(Literal).getValue()="0"
}

from Function func, Variable vret_206, VariableAccess target_0, ConditionalExpr target_1
where
func_0(vret_206, target_0)
and func_1(vret_206, target_1)
and vret_206.getType().hasName("int")
and vret_206.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
