/**
 * @name linux-53ffa6a9f83b2170c60591da1ead8791d5a42e81-amd_sfh_hid_client_init
 * @id cpp/linux/53ffa6a9f83b2170c60591da1ead8791d5a42e81/amd-sfh-hid-client-init
 * @description linux-53ffa6a9f83b2170c60591da1ead8791d5a42e81-amd_sfh_hid_client_init CVE-2023-3357
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vin_data_209, Variable vrc_217, Variable vi_217, ExprStmt target_1, ExprStmt target_2, AddressOfExpr target_4, ExprStmt target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sensor_virt_addr"
		and target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vin_data_209
		and target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_217
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_217
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
		and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_4.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation())
		and target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

predicate func_1(Variable vin_data_209, Variable vi_217, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sensor_virt_addr"
		and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vin_data_209
		and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_217
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dma_alloc_coherent")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("device *")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(MulExpr).getValue()="32"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sensor_dma_addr"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("amdtp_cl_data *")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_217
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(BitwiseOrExpr).getValue()="3264"
}

predicate func_2(Variable vin_data_209, Variable vi_217, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="input_report"
		and target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vin_data_209
		and target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_217
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("devm_kzalloc")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("device *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(BitwiseOrExpr).getValue()="3264"
}

predicate func_4(Variable vi_217, AddressOfExpr target_4) {
		target_4.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sensor_dma_addr"
		and target_4.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("amdtp_cl_data *")
		and target_4.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_217
}

predicate func_5(Variable vi_217, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sensor_sts"
		and target_5.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("amdtp_cl_data *")
		and target_5.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_217
		and target_5.getExpr().(AssignExpr).getRValue().(Literal).getValue()="5"
}

from Function func, Variable vin_data_209, Variable vrc_217, Variable vi_217, ExprStmt target_1, ExprStmt target_2, AddressOfExpr target_4, ExprStmt target_5
where
not func_0(vin_data_209, vrc_217, vi_217, target_1, target_2, target_4, target_5)
and func_1(vin_data_209, vi_217, target_1)
and func_2(vin_data_209, vi_217, target_2)
and func_4(vi_217, target_4)
and func_5(vi_217, target_5)
and vin_data_209.getType().hasName("amd_input_data *")
and vrc_217.getType().hasName("int")
and vi_217.getType().hasName("int")
and vin_data_209.(LocalVariable).getFunction() = func
and vrc_217.(LocalVariable).getFunction() = func
and vi_217.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
