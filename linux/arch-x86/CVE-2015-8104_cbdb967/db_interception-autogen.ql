/**
 * @name linux-cbdb967af3d54993f5814f1cee0ed311a055377d-db_interception
 * @id cpp/linux/cbdb967af3d54993f5814f1cee0ed311a055377d/db-interception
 * @description linux-cbdb967af3d54993f5814f1cee0ed311a055377d-arch/x86/kvm/svm.c-db_interception CVE-2015-8104
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsvm_1660, PointerFieldAccess target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("update_db_bp_intercept")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="vcpu"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsvm_1660
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_1(Parameter vsvm_1660, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="nmi_singlestep"
	and target_1.getQualifier().(VariableAccess).getTarget()=vsvm_1660
}

from Function func, Parameter vsvm_1660, ExprStmt target_0, PointerFieldAccess target_1
where
func_0(vsvm_1660, target_1, target_0)
and func_1(vsvm_1660, target_1)
and vsvm_1660.getType().hasName("vcpu_svm *")
and vsvm_1660.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
