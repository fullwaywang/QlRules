/**
 * @name linux-6eaf41e87a223ae6f8e7a28d6e78384ad7e407f8-nf_tables_delrule
 * @id cpp/linux/6eaf41e87a223ae6f8e7a28d6e78384ad7e407f8/nf-tables-delrule
 * @description linux-6eaf41e87a223ae6f8e7a28d6e78384ad7e407f8-net/netfilter/nf_tables_api.c-nf_tables_delrule CVE-2023-3777
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchain_4031, ExprStmt target_1, NotExpr target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("nft_chain_is_bound")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchain_4031
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vchain_4031, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="chain"
	and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nft_ctx")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vchain_4031
}

predicate func_2(Variable vchain_4031, NotExpr target_2) {
	target_2.getOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="genmask"
	and target_2.getOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_4031
	and target_2.getOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("nft_genmask_next")
	and target_2.getOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_2.getOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
}

from Function func, Variable vchain_4031, ExprStmt target_1, NotExpr target_2
where
not func_0(vchain_4031, target_1, target_2)
and func_1(vchain_4031, target_1)
and func_2(vchain_4031, target_2)
and vchain_4031.getType().hasName("nft_chain *")
and vchain_4031.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
