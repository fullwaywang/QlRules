/**
 * @name openssl-a801bf263849a2ef773e5bc0c86438cbba720835-BIO_vprintf
 * @id cpp/openssl/a801bf263849a2ef773e5bc0c86438cbba720835/bio-vprintf
 * @description openssl-a801bf263849a2ef773e5bc0c86438cbba720835-crypto/bio/b_print.c-BIO_vprintf CVE-2016-0799
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="770"
		and not target_0.getValue()="810"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("CRYPTO_push_info_")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="doapr()"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="b_print.c"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vdynbuf_766, ExprStmt target_4, AddressOfExpr target_5, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(NotExpr).getOperand() instanceof FunctionCall
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("CRYPTO_free")
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdynbuf_766
		and target_1.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getOperand().(VariableAccess).getLocation()))
}

/*predicate func_2(Variable vdynbuf_766, ExprStmt target_4, AddressOfExpr target_5) {
	exists(FunctionCall target_2 |
		target_2.getTarget().hasName("CRYPTO_free")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vdynbuf_766
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation())
		and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getOperand().(VariableAccess).getLocation()))
}

*/
predicate func_3(Parameter vformat_757, Parameter vargs_757, Variable vretlen_760, Variable vhugebufp_764, Variable vhugebufsize_765, Variable vdynbuf_766, Variable vignored_767, FunctionCall target_3) {
		target_3.getTarget().hasName("_dopr")
		and target_3.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vhugebufp_764
		and target_3.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdynbuf_766
		and target_3.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vhugebufsize_765
		and target_3.getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vretlen_760
		and target_3.getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vignored_767
		and target_3.getArgument(5).(VariableAccess).getTarget()=vformat_757
		and target_3.getArgument(6).(VariableAccess).getTarget()=vargs_757
}

predicate func_4(Variable vdynbuf_766, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdynbuf_766
		and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_5(Variable vdynbuf_766, AddressOfExpr target_5) {
		target_5.getOperand().(VariableAccess).getTarget()=vdynbuf_766
}

from Function func, Parameter vformat_757, Parameter vargs_757, Variable vretlen_760, Variable vhugebufp_764, Variable vhugebufsize_765, Variable vdynbuf_766, Variable vignored_767, Literal target_0, FunctionCall target_3, ExprStmt target_4, AddressOfExpr target_5
where
func_0(func, target_0)
and not func_1(vdynbuf_766, target_4, target_5, func)
and func_3(vformat_757, vargs_757, vretlen_760, vhugebufp_764, vhugebufsize_765, vdynbuf_766, vignored_767, target_3)
and func_4(vdynbuf_766, target_4)
and func_5(vdynbuf_766, target_5)
and vformat_757.getType().hasName("const char *")
and vargs_757.getType().hasName("va_list")
and vretlen_760.getType().hasName("size_t")
and vhugebufp_764.getType().hasName("char *")
and vhugebufsize_765.getType().hasName("size_t")
and vdynbuf_766.getType().hasName("char *")
and vignored_767.getType().hasName("int")
and vformat_757.getFunction() = func
and vargs_757.getFunction() = func
and vretlen_760.(LocalVariable).getFunction() = func
and vhugebufp_764.(LocalVariable).getFunction() = func
and vhugebufsize_765.(LocalVariable).getFunction() = func
and vdynbuf_766.(LocalVariable).getFunction() = func
and vignored_767.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
