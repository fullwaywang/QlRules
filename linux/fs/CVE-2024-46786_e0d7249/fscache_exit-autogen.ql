/**
 * @name linux-e0d724932ad12e3528f4ce97fc0f6078d0cce4bc-fscache_exit
 * @id cpp/linux/e0d724932ad12e3528f4ce97fc0f6078d0cce4bc/fscache-exit
 * @description linux-e0d724932ad12e3528f4ce97fc0f6078d0cce4bc-fs/fscache/main.c-fscache_exit CVE-2024-46786
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("timer_shutdown_sync")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("timer_list")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("destroy_workqueue")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("workqueue_struct *")
	)
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
