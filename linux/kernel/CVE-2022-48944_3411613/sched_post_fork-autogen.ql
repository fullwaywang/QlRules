/**
 * @name linux-3411613611a5cddf7e80908010dc87cb527dd13b-sched_post_fork
 * @id cpp/linux/3411613611a5cddf7e80908010dc87cb527dd13b/sched-post-fork
 * @description linux-3411613611a5cddf7e80908010dc87cb527dd13b-kernel/sched/core.c-sched_post_fork CVE-2022-48944
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, DeclStmt target_0) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Function func, DeclStmt target_1) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vflags_4397, Function func, DoStmt target_2) {
	exists(BlockStmt obj_0 | obj_0=target_2.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
					obj_3.getTarget().hasName("_raw_spin_lock_irqsave")
					and obj_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="pi_lock"
				)
				and obj_2.getLValue().(VariableAccess).getTarget()=vflags_4397
			)
		)
		and obj_0.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(Literal).getValue()="1"
	)
	and target_2.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

/*predicate func_3(Variable v__dummy_4402, Variable v__dummy2_4402, ExprStmt target_3) {
	exists(StmtExpr obj_0 | obj_0=target_3.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(2) |
				exists(EqualityOperation obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getLeftOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy_4402
					and obj_3.getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy2_4402
				)
			)
			and obj_1.getStmt(3).(ExprStmt).getExpr().(Literal).getValue()="1"
		)
	)
}

*/
/*predicate func_6(Variable v__dummy_4402, Variable v__dummy2_4402, ExprStmt target_6) {
	exists(EqualityOperation obj_0 | obj_0=target_6.getExpr() |
		obj_0.getLeftOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy_4402
		and obj_0.getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy2_4402
	)
}

*/
/*predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr().(Literal).getValue()="1"
	and target_7.getEnclosingFunction() = func
}

*/
/*predicate func_8(Variable vflags_4397, Parameter vp_4395, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="pi_lock"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vp_4395
				)
			)
			and obj_1.getTarget().hasName("_raw_spin_lock_irqsave")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vflags_4397
	)
}

*/
predicate func_9(Variable vtg_4399, Variable v__mptr_4404, Function func, ExprStmt target_9) {
	exists(AssignExpr obj_0 | obj_0=target_9.getExpr() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				obj_2.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
				and obj_2.getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_4404
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vtg_4399
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

/*predicate func_11(Function func, DoStmt target_11) {
	target_11.getCondition().(Literal).getValue()="0"
	and target_11.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_13(Function func, IfStmt target_13) {
	target_13.getCondition().(NotExpr).getValue()="0"
	and target_13.getEnclosingFunction() = func
}

*/
/*predicate func_14(Variable v__mptr_4404, ExprStmt target_14) {
	exists(PointerArithmeticOperation obj_0 | obj_0=target_14.getExpr() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=v__mptr_4404
		and obj_0.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
	)
}

*/
predicate func_15(Variable vtg_4399, Parameter vp_4395, Function func, ExprStmt target_15) {
	exists(AssignExpr obj_0 | obj_0=target_15.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="sched_task_group"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vp_4395
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().hasName("autogroup_task_group")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vp_4395
			and obj_2.getArgument(1).(VariableAccess).getTarget()=vtg_4399
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_16(Parameter vp_4395, Function func, ExprStmt target_16) {
	exists(FunctionCall obj_0 | obj_0=target_16.getExpr() |
		obj_0.getTarget().hasName("rseq_migrate")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vp_4395
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_16
}

predicate func_17(Parameter vp_4395, Function func, ExprStmt target_17) {
	exists(FunctionCall obj_0 | obj_0=target_17.getExpr() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getArgument(1) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("__this_cpu_preempt_check")
						and obj_4.getArgument(0).(StringLiteral).getValue()="read"
					)
				)
			)
		)
		and obj_0.getTarget().hasName("__set_task_cpu")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vp_4395
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
}

/*predicate func_18(Function func, ExprStmt target_18) {
	exists(FunctionCall obj_0 | obj_0=target_18.getExpr() |
		obj_0.getTarget().hasName("__this_cpu_preempt_check")
		and obj_0.getArgument(0).(StringLiteral).getValue()="read"
	)
	and target_18.getEnclosingFunction() = func
}

*/
/*predicate func_19(Variable vpscr_ret___4413, Variable v__vpp_verify_4413, ExprStmt target_19) {
	exists(StmtExpr obj_0 | obj_0=target_19.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(DoStmt obj_2 | obj_2=obj_1.getStmt(1) |
				obj_2.getCondition().(Literal).getValue()="0"
				and obj_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__vpp_verify_4413
			)
			and exists(SwitchStmt obj_3 | obj_3=obj_1.getStmt(2) |
				exists(BlockStmt obj_4 | obj_4=obj_3.getStmt() |
					obj_4.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="1"
					and obj_4.getStmt(3).(SwitchCase).getExpr().(Literal).getValue()="2"
					and obj_4.getStmt(6).(SwitchCase).getExpr().(Literal).getValue()="4"
					and obj_4.getStmt(9).(SwitchCase).getExpr().(Literal).getValue()="8"
					and obj_4.getStmt(12).(SwitchCase).toString() = "default: "
					and obj_4.getStmt(13).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__bad_size_call_parameter")
				)
				and obj_3.getExpr().(SizeofExprOperator).getValue()="4"
			)
			and obj_1.getStmt(4).(ExprStmt).getExpr().(VariableAccess).getTarget()=vpscr_ret___4413
		)
	)
}

*/
/*predicate func_21(Variable v__vpp_verify_4413, DoStmt target_21) {
	target_21.getCondition().(Literal).getValue()="0"
	and target_21.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__vpp_verify_4413
}

*/
/*predicate func_23(Variable v__vpp_verify_4413, ExprStmt target_23) {
	target_23.getExpr().(VariableAccess).getTarget()=v__vpp_verify_4413
}

*/
/*predicate func_24(Variable vpscr_ret___4413, SwitchStmt target_24) {
	exists(BlockStmt obj_0 | obj_0=target_24.getStmt() |
		obj_0.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="1"
		and obj_0.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
		and obj_0.getStmt(3).(SwitchCase).getExpr().(Literal).getValue()="2"
		and obj_0.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
		and obj_0.getStmt(6).(SwitchCase).getExpr().(Literal).getValue()="4"
		and obj_0.getStmt(7).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
		and obj_0.getStmt(9).(SwitchCase).getExpr().(Literal).getValue()="8"
		and obj_0.getStmt(10).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
		and obj_0.getStmt(12).(SwitchCase).toString() = "default: "
		and obj_0.getStmt(13).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__bad_size_call_parameter")
	)
	and target_24.getExpr().(SizeofExprOperator).getValue()="4"
}

*/
/*predicate func_25(Function func, SwitchCase target_25) {
	target_25.getExpr().(Literal).getValue()="1"
	and target_25.getEnclosingFunction() = func
}

*/
/*predicate func_26(Variable vpscr_ret___4413, Variable vcpu_number, Variable vpfo_val___4413, SizeofExprOperator target_61, ExprStmt target_26) {
	exists(AssignExpr obj_0 | obj_0=target_26.getExpr() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(AsmStmt obj_3 | obj_3=obj_2.getStmt(1) |
					obj_3.getChild(0).(VariableAccess).getTarget()=vpfo_val___4413
					and obj_3.getChild(1).(VariableAccess).getTarget()=vcpu_number
				)
				and obj_2.getStmt(2).(ExprStmt).getExpr().(VariableAccess).getTarget()=vpfo_val___4413
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
	)
	and target_26.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
}

*/
/*predicate func_28(Variable vcpu_number, Variable vpfo_val___4413, AsmStmt target_28) {
	target_28.getChild(0).(VariableAccess).getTarget()=vpfo_val___4413
	and target_28.getChild(1).(VariableAccess).getTarget()=vcpu_number
}

*/
/*predicate func_29(Variable vpfo_val___4413, ExprStmt target_29) {
	target_29.getExpr().(VariableAccess).getTarget()=vpfo_val___4413
}

*/
/*predicate func_30(SizeofExprOperator target_61, Function func, BreakStmt target_30) {
	target_30.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
	and target_30.getEnclosingFunction() = func
}

*/
/*predicate func_31(Function func, SwitchCase target_31) {
	target_31.getExpr().(Literal).getValue()="2"
	and target_31.getEnclosingFunction() = func
}

*/
/*predicate func_32(Variable vpscr_ret___4413, Variable vcpu_number, Variable vpfo_val___1_4413, SizeofExprOperator target_61, ExprStmt target_32) {
	exists(AssignExpr obj_0 | obj_0=target_32.getExpr() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(AsmStmt obj_3 | obj_3=obj_2.getStmt(1) |
					obj_3.getChild(0).(VariableAccess).getTarget()=vpfo_val___1_4413
					and obj_3.getChild(1).(VariableAccess).getTarget()=vcpu_number
				)
				and obj_2.getStmt(2).(ExprStmt).getExpr().(VariableAccess).getTarget()=vpfo_val___1_4413
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
	)
	and target_32.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
}

*/
/*predicate func_34(Variable vcpu_number, Variable vpfo_val___1_4413, AsmStmt target_34) {
	target_34.getChild(0).(VariableAccess).getTarget()=vpfo_val___1_4413
	and target_34.getChild(1).(VariableAccess).getTarget()=vcpu_number
}

*/
/*predicate func_35(Variable vpfo_val___1_4413, ExprStmt target_35) {
	target_35.getExpr().(VariableAccess).getTarget()=vpfo_val___1_4413
}

*/
/*predicate func_36(SizeofExprOperator target_61, Function func, BreakStmt target_36) {
	target_36.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
	and target_36.getEnclosingFunction() = func
}

*/
/*predicate func_37(Function func, SwitchCase target_37) {
	target_37.getExpr().(Literal).getValue()="4"
	and target_37.getEnclosingFunction() = func
}

*/
/*predicate func_38(Variable vpscr_ret___4413, Variable vcpu_number, Variable vpfo_val___2_4413, SizeofExprOperator target_61, ExprStmt target_38) {
	exists(AssignExpr obj_0 | obj_0=target_38.getExpr() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(AsmStmt obj_3 | obj_3=obj_2.getStmt(1) |
					obj_3.getChild(0).(VariableAccess).getTarget()=vpfo_val___2_4413
					and obj_3.getChild(1).(VariableAccess).getTarget()=vcpu_number
				)
				and obj_2.getStmt(2).(ExprStmt).getExpr().(VariableAccess).getTarget()=vpfo_val___2_4413
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
	)
	and target_38.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
}

*/
/*predicate func_40(Variable vcpu_number, Variable vpfo_val___2_4413, AsmStmt target_40) {
	target_40.getChild(0).(VariableAccess).getTarget()=vpfo_val___2_4413
	and target_40.getChild(1).(VariableAccess).getTarget()=vcpu_number
}

*/
/*predicate func_41(Variable vpfo_val___2_4413, ExprStmt target_41) {
	target_41.getExpr().(VariableAccess).getTarget()=vpfo_val___2_4413
}

*/
/*predicate func_42(SizeofExprOperator target_61, Function func, BreakStmt target_42) {
	target_42.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
	and target_42.getEnclosingFunction() = func
}

*/
/*predicate func_43(Function func, SwitchCase target_43) {
	target_43.getExpr().(Literal).getValue()="8"
	and target_43.getEnclosingFunction() = func
}

*/
/*predicate func_44(Variable vpscr_ret___4413, Variable vcpu_number, Variable vpfo_val___3_4413, SizeofExprOperator target_61, ExprStmt target_44) {
	exists(AssignExpr obj_0 | obj_0=target_44.getExpr() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(AsmStmt obj_3 | obj_3=obj_2.getStmt(1) |
					obj_3.getChild(0).(VariableAccess).getTarget()=vpfo_val___3_4413
					and obj_3.getChild(1).(VariableAccess).getTarget()=vcpu_number
				)
				and obj_2.getStmt(2).(ExprStmt).getExpr().(VariableAccess).getTarget()=vpfo_val___3_4413
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpscr_ret___4413
	)
	and target_44.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
}

*/
/*predicate func_46(Variable vcpu_number, Variable vpfo_val___3_4413, AsmStmt target_46) {
	target_46.getChild(0).(VariableAccess).getTarget()=vpfo_val___3_4413
	and target_46.getChild(1).(VariableAccess).getTarget()=vcpu_number
}

*/
/*predicate func_47(Variable vpfo_val___3_4413, ExprStmt target_47) {
	target_47.getExpr().(VariableAccess).getTarget()=vpfo_val___3_4413
}

*/
/*predicate func_48(SizeofExprOperator target_61, Function func, BreakStmt target_48) {
	target_48.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
	and target_48.getEnclosingFunction() = func
}

*/
/*predicate func_49(Function func, SwitchCase target_49) {
	target_49.toString() = "default: "
	and target_49.getEnclosingFunction() = func
}

*/
/*predicate func_50(SizeofExprOperator target_61, Function func, ExprStmt target_50) {
	target_50.getExpr().(FunctionCall).getTarget().hasName("__bad_size_call_parameter")
	and target_50.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
	and target_50.getEnclosingFunction() = func
}

*/
/*predicate func_51(SizeofExprOperator target_61, Function func, BreakStmt target_51) {
	target_51.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_61
	and target_51.getEnclosingFunction() = func
}

*/
/*predicate func_52(Variable vpscr_ret___4413, ExprStmt target_52) {
	target_52.getExpr().(VariableAccess).getTarget()=vpscr_ret___4413
}

*/
predicate func_53(Parameter vp_4395, Function func, IfStmt target_53) {
	exists(PointerFieldAccess obj_0 | obj_0=target_53.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="sched_class"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vp_4395
		)
		and obj_0.getTarget().getName()="task_fork"
	)
	and exists(ExprStmt obj_2 | obj_2=target_53.getThen() |
		exists(VariableCall obj_3 | obj_3=obj_2.getExpr() |
			exists(PointerFieldAccess obj_4 | obj_4=obj_3.getExpr() |
				exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
					obj_5.getTarget().getName()="sched_class"
					and obj_5.getQualifier().(VariableAccess).getTarget()=vp_4395
				)
				and obj_4.getTarget().getName()="task_fork"
			)
			and obj_3.getArgument(0).(VariableAccess).getTarget()=vp_4395
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_53
}

predicate func_54(Variable vflags_4397, Parameter vp_4395, Function func, DoStmt target_54) {
	exists(BlockStmt obj_0 | obj_0=target_54.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="pi_lock"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vp_4395
					)
				)
				and obj_2.getTarget().hasName("_raw_spin_unlock_irqrestore")
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vflags_4397
			)
		)
		and obj_0.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(Literal).getValue()="1"
	)
	and target_54.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_54
}

/*predicate func_55(Variable v__dummy_4416, Variable v__dummy2_4416, ExprStmt target_55) {
	exists(StmtExpr obj_0 | obj_0=target_55.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(2) |
				exists(EqualityOperation obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getLeftOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy_4416
					and obj_3.getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy2_4416
				)
			)
			and obj_1.getStmt(3).(ExprStmt).getExpr().(Literal).getValue()="1"
		)
	)
}

*/
/*predicate func_58(Variable v__dummy_4416, Variable v__dummy2_4416, ExprStmt target_58) {
	exists(EqualityOperation obj_0 | obj_0=target_58.getExpr() |
		obj_0.getLeftOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy_4416
		and obj_0.getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__dummy2_4416
	)
}

*/
/*predicate func_59(Function func, ExprStmt target_59) {
	target_59.getExpr().(Literal).getValue()="1"
	and target_59.getEnclosingFunction() = func
}

*/
/*predicate func_60(Variable vflags_4397, Parameter vp_4395, ExprStmt target_60) {
	exists(FunctionCall obj_0 | obj_0=target_60.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="pi_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vp_4395
			)
		)
		and obj_0.getTarget().hasName("_raw_spin_unlock_irqrestore")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vflags_4397
	)
}

*/
predicate func_61(Function func, SizeofExprOperator target_61) {
	target_61.getValue()="4"
	and target_61.getEnclosingFunction() = func
}

from Function func, Variable vflags_4397, Variable vtg_4399, Variable v__dummy_4402, Variable v__dummy2_4402, Variable v__mptr_4404, Variable vpscr_ret___4413, Variable v__vpp_verify_4413, Variable vcpu_number, Variable vpfo_val___4413, Variable vpfo_val___1_4413, Variable vpfo_val___2_4413, Variable vpfo_val___3_4413, Variable v__dummy_4416, Variable v__dummy2_4416, Parameter vp_4395, DeclStmt target_0, DeclStmt target_1, DoStmt target_2, ExprStmt target_9, ExprStmt target_15, ExprStmt target_16, ExprStmt target_17, IfStmt target_53, DoStmt target_54, SizeofExprOperator target_61
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(vflags_4397, func, target_2)
and func_9(vtg_4399, v__mptr_4404, func, target_9)
and func_15(vtg_4399, vp_4395, func, target_15)
and func_16(vp_4395, func, target_16)
and func_17(vp_4395, func, target_17)
and func_53(vp_4395, func, target_53)
and func_54(vflags_4397, vp_4395, func, target_54)
and func_61(func, target_61)
and vflags_4397.getType().hasName("unsigned long")
and vtg_4399.getType().hasName("task_group *")
and v__dummy_4402.getType().hasName("unsigned long")
and v__dummy2_4402.getType().hasName("unsigned long")
and v__mptr_4404.getType().hasName("void *")
and vpscr_ret___4413.getType().hasName("int")
and v__vpp_verify_4413.getType().hasName("const void *")
and vcpu_number.getType().hasName("int")
and vpfo_val___4413.getType().hasName("u8")
and vpfo_val___1_4413.getType().hasName("u16")
and vpfo_val___2_4413.getType().hasName("u32")
and vpfo_val___3_4413.getType().hasName("u64")
and v__dummy_4416.getType().hasName("unsigned long")
and v__dummy2_4416.getType().hasName("unsigned long")
and vp_4395.getType().hasName("task_struct *")
and vflags_4397.(LocalVariable).getFunction() = func
and vtg_4399.(LocalVariable).getFunction() = func
and v__dummy_4402.(LocalVariable).getFunction() = func
and v__dummy2_4402.(LocalVariable).getFunction() = func
and v__mptr_4404.(LocalVariable).getFunction() = func
and vpscr_ret___4413.(LocalVariable).getFunction() = func
and v__vpp_verify_4413.(LocalVariable).getFunction() = func
and not vcpu_number.getParentScope+() = func
and vpfo_val___4413.(LocalVariable).getFunction() = func
and vpfo_val___1_4413.(LocalVariable).getFunction() = func
and vpfo_val___2_4413.(LocalVariable).getFunction() = func
and vpfo_val___3_4413.(LocalVariable).getFunction() = func
and v__dummy_4416.(LocalVariable).getFunction() = func
and v__dummy2_4416.(LocalVariable).getFunction() = func
and vp_4395.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
