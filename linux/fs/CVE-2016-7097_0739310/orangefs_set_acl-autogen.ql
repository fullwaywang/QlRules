/**
 * @name linux-073931017b49d9458aa351605b43a7e34598caef-orangefs_set_acl
 * @id cpp/linux/073931017b49d9458aa351605b43a7e34598caef/orangefs-set-acl
 * @description linux-073931017b49d9458aa351605b43a7e34598caef-fs/orangefs/acl.c-orangefs_set_acl CVE-2016-7097
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
	target_0.getValue()="%s: posix_acl_equiv_mode err: %d\n"
	and not target_0.getValue()="%s: posix_acl_update_mode err: %d\n"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vacl_64, Variable verror_67, Variable vmode_76, FunctionCall target_1) {
	target_1.getTarget().hasName("posix_acl_equiv_mode")
	and not target_1.getTarget().hasName("posix_acl_update_mode")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vacl_64
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmode_76
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_67
}

predicate func_2(Parameter vacl_64, IfStmt target_9) {
exists(AddressOfExpr target_2 |
	target_2.getOperand().(VariableAccess).getTarget()=vacl_64
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_9.getCondition().(VariableAccess).getLocation()))
}

predicate func_3(Variable verror_67, BlockStmt target_10, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget()=verror_67
	and target_3.getGreaterOperand().(Literal).getValue()="0"
	and target_3.getParent().(IfStmt).getThen()=target_10
}

predicate func_4(Parameter vinode_64, VariableAccess target_4) {
	target_4.getTarget()=vinode_64
}

predicate func_5(Variable verror_67, ExprStmt target_11, VariableAccess target_5) {
	target_5.getTarget()=verror_67
	and target_5.getParent().(EQExpr).getRightOperand() instanceof Literal
	and target_5.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_11
}

predicate func_6(Parameter vacl_64, VariableAccess target_6) {
	target_6.getTarget()=vacl_64
	and target_6.getParent().(AssignExpr).getLValue() = target_6
	and target_6.getParent().(AssignExpr).getRValue() instanceof Literal
}

predicate func_7(Parameter vinode_64, Initializer target_7) {
	target_7.getExpr().(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_7.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_64
}

predicate func_8(Parameter vacl_64, Variable verror_67, VariableAccess target_12, IfStmt target_8) {
	target_8.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=verror_67
	and target_8.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_8.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vacl_64
	and target_8.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
}

predicate func_9(Parameter vacl_64, IfStmt target_9) {
	target_9.getCondition().(VariableAccess).getTarget()=vacl_64
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("posix_acl_xattr_size")
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="a_count"
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vacl_64
	and target_9.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("void *")
	and target_9.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kmalloc")
	and target_9.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("size_t")
	and target_9.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="37748928"
}

predicate func_10(Variable verror_67, BlockStmt target_10) {
	target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__pr_err")
	and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=verror_67
	and target_10.getStmt(1).(ReturnStmt).getExpr().(VariableAccess).getTarget()=verror_67
}

predicate func_11(Function func, ExprStmt target_11) {
	target_11.getExpr() instanceof AssignExpr
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Parameter vacl_64, BlockStmt target_13, VariableAccess target_12) {
	target_12.getTarget()=vacl_64
	and target_12.getParent().(IfStmt).getThen()=target_13
}

predicate func_13(Variable verror_67, BlockStmt target_13) {
	target_13.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_67
	and target_13.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_13.getStmt(2).(IfStmt).getCondition() instanceof RelationalOperation
	and target_13.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__pr_err")
	and target_13.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_13.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_13.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=verror_67
	and target_13.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(VariableAccess).getTarget()=verror_67
}

from Function func, Parameter vacl_64, Variable verror_67, Variable vmode_76, Parameter vinode_64, StringLiteral target_0, FunctionCall target_1, RelationalOperation target_3, VariableAccess target_4, VariableAccess target_5, VariableAccess target_6, Initializer target_7, IfStmt target_8, IfStmt target_9, BlockStmt target_10, ExprStmt target_11, VariableAccess target_12, BlockStmt target_13
where
func_0(func, target_0)
and func_1(vacl_64, verror_67, vmode_76, target_1)
and not func_2(vacl_64, target_9)
and func_3(verror_67, target_10, target_3)
and func_4(vinode_64, target_4)
and func_5(verror_67, target_11, target_5)
and func_6(vacl_64, target_6)
and func_7(vinode_64, target_7)
and func_8(vacl_64, verror_67, target_12, target_8)
and func_9(vacl_64, target_9)
and func_10(verror_67, target_10)
and func_11(func, target_11)
and func_12(vacl_64, target_13, target_12)
and func_13(verror_67, target_13)
and vacl_64.getType().hasName("posix_acl *")
and verror_67.getType().hasName("int")
and vmode_76.getType().hasName("umode_t")
and vinode_64.getType().hasName("inode *")
and vacl_64.getFunction() = func
and verror_67.(LocalVariable).getFunction() = func
and vmode_76.(LocalVariable).getFunction() = func
and vinode_64.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
