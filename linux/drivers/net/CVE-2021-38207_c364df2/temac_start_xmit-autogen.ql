/**
 * @name linux-c364df2489b8ef2f5e3159b1dff1ff1fdb16040d-temac_start_xmit
 * @id cpp/linux/c364df2489b8ef2f5e3159b1dff1ff1fdb16040d/temac-start-xmit
 * @description linux-c364df2489b8ef2f5e3159b1dff1ff1fdb16040d-drivers/net/ethernet/xilinx/ll_temac_main.c-temac_start_xmit CVE-2021-38207
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnum_frag_847, ReturnStmt target_2, RelationalOperation target_3) {
exists(AddExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vnum_frag_847
	and target_0.getRightOperand().(Literal).getValue()="1"
	and target_0.getParent().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("temac_local *")
	and target_0.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnum_frag_847
	and target_0.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_2
	and target_0.getLeftOperand().(VariableAccess).getLocation().isBefore(target_3.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnum_frag_847, ReturnStmt target_2, VariableAccess target_1) {
	target_1.getTarget()=vnum_frag_847
	and target_1.getParent().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("temac_local *")
	and target_1.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(FunctionCall target_4, Function func, ReturnStmt target_2) {
	target_2.getParent().(IfStmt).getCondition()=target_4
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vnum_frag_847, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getGreaterOperand().(VariableAccess).getTarget()=vnum_frag_847
}

predicate func_4(Variable vnum_frag_847, FunctionCall target_4) {
	target_4.getTarget().hasName("temac_check_tx_bd_space")
	and target_4.getArgument(0).(VariableAccess).getTarget().getType().hasName("temac_local *")
	and target_4.getArgument(1).(VariableAccess).getTarget()=vnum_frag_847
}

from Function func, Variable vnum_frag_847, VariableAccess target_1, ReturnStmt target_2, RelationalOperation target_3, FunctionCall target_4
where
not func_0(vnum_frag_847, target_2, target_3)
and func_1(vnum_frag_847, target_2, target_1)
and func_2(target_4, func, target_2)
and func_3(vnum_frag_847, target_3)
and func_4(vnum_frag_847, target_4)
and vnum_frag_847.getType().hasName("unsigned long")
and vnum_frag_847.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
