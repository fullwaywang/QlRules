/**
 * @name linux-92117d8443bc5afacc8d5ba82e541946310f106e-bpf_obj_do_get
 * @id cpp/linux/92117d8443bc5afacc8d5ba82e541946310f106e/bpf-obj-do-get
 * @description linux-92117d8443bc5afacc8d5ba82e541946310f106e-kernel/bpf/inode.c-bpf_obj_do_get CVE-2016-4558
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vraw_283, ExprStmt target_1, ExprStmt target_2, ReturnStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("IS_ERR")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vraw_283
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(Variable vpath_282, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("touch_atime")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vpath_282
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vraw_283, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vraw_283
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("bpf_any_get")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_private"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("inode *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bpf_type *")
}

predicate func_3(Variable vraw_283, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vraw_283
}

from Function func, Variable vpath_282, Variable vraw_283, ExprStmt target_1, ExprStmt target_2, ReturnStmt target_3
where
not func_0(vraw_283, target_1, target_2, target_3, func)
and func_1(vpath_282, func, target_1)
and func_2(vraw_283, target_2)
and func_3(vraw_283, target_3)
and vpath_282.getType().hasName("path")
and vraw_283.getType().hasName("void *")
and vpath_282.(LocalVariable).getFunction() = func
and vraw_283.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
