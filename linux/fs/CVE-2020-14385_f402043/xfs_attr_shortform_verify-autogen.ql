/**
 * @name linux-f4020438fab05364018c91f7e02ebdd192085933-xfs_attr_shortform_verify
 * @id cpp/linux/f4020438fab05364018c91f7e02ebdd192085933/xfs-attr-shortform-verify
 * @description linux-f4020438fab05364018c91f7e02ebdd192085933-fs/xfs/libxfs/xfs_attr_leaf.c-xfs_attr_shortform_verify CVE-2020-14385
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ReturnStmt target_2, Function func) {
exists(PointerArithmeticOperation target_0 |
	target_0.getLeftOperand() instanceof PointerArithmeticOperation
	and target_0.getRightOperand().(Literal).getValue()="1"
	and target_0.getParent().(GEExpr).getGreaterOperand() instanceof PointerArithmeticOperation
	and target_0.getParent().(GEExpr).getLesserOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_0.getParent().(GEExpr).getParent().(IfStmt).getThen()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vsfep_1012, ReturnStmt target_2, PointerArithmeticOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vsfep_1012
	and target_1.getRightOperand().(SizeofExprOperator).getValue()="4"
	and target_1.getParent().(GEExpr).getLesserOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_1.getParent().(GEExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(LabelStmt).getName() ="__here"
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(LabelLiteral).getValue()="&&__here"
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vsfep_1012, PointerArithmeticOperation target_1, ReturnStmt target_2
where
not func_0(target_2, func)
and func_1(vsfep_1012, target_2, target_1)
and func_2(func, target_2)
and vsfep_1012.getType().hasName("xfs_attr_sf_entry *")
and vsfep_1012.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
