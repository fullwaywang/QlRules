/**
 * @name linux-9bf3d20331295b1ecb81f4ed9ef358c51699a050-remove_tree
 * @id cpp/linux/9bf3d20331295b1ecb81f4ed9ef358c51699a050/remove-tree
 * @description linux-9bf3d20331295b1ecb81f4ed9ef358c51699a050-fs/quota/quota_tree.c-remove_tree CVE-2021-45868
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdquot_465, Variable vret_469, Variable vnewblk_470, Variable v__func__, Parameter vinfo_465, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4, ExprStmt target_5, ExprStmt target_6, EqualityOperation target_7, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vnewblk_470
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="1"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vnewblk_470
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="dqi_blocks"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_465
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__quota_error")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dq_sb"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdquot_465
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=v__func__
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Getting block too big (%u >= %u)"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vnewblk_470
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="dqi_blocks"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_465
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_469
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-117"
	and target_0.getThen().(BlockStmt).getStmt(2).(GotoStmt).getName() ="out_buf"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_4.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdquot_465, Variable vret_469, Variable vnewblk_470, Parameter vinfo_465, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="dqi_qtree_depth"
	and target_1.getCondition().(EqualityOperation).getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_465
	and target_1.getCondition().(EqualityOperation).getRightOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_469
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("free_dqentry")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinfo_465
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdquot_465
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnewblk_470
	and target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_469
	and target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("remove_tree")
	and target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinfo_465
	and target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdquot_465
	and target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vnewblk_470
	and target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_2(Parameter vdquot_465, Variable vnewblk_470, Parameter vinfo_465, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnewblk_470
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__le32 *")
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(FunctionCall).getTarget().hasName("get_index")
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinfo_465
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="dq_id"
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdquot_465
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Parameter vdquot_465, Variable vret_469, Variable vnewblk_470, Parameter vinfo_465, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_469
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("free_dqentry")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinfo_465
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdquot_465
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnewblk_470
}

predicate func_4(Variable vret_469, BlockStmt target_8, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getLesserOperand().(VariableAccess).getTarget()=vret_469
	and target_4.getGreaterOperand().(Literal).getValue()="0"
	and target_4.getParent().(IfStmt).getThen()=target_8
}

predicate func_5(Parameter vdquot_465, Variable v__func__, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("__quota_error")
	and target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dq_sb"
	and target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdquot_465
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=v__func__
	and target_5.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Can't read quota data block %u"
	and target_5.getExpr().(FunctionCall).getArgument(3).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("uint *")
}

predicate func_6(Parameter vdquot_465, Variable v__func__, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("__quota_error")
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dq_sb"
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdquot_465
	and target_6.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=v__func__
	and target_6.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Can't write quota tree block %u"
	and target_6.getExpr().(FunctionCall).getArgument(3).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("uint *")
}

predicate func_7(Parameter vinfo_465, EqualityOperation target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_7.getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="dqi_qtree_depth"
	and target_7.getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_465
	and target_7.getRightOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_8(Parameter vdquot_465, Variable v__func__, BlockStmt target_8) {
	target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__quota_error")
	and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dq_sb"
	and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdquot_465
	and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=v__func__
	and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Can't read quota data block %u"
	and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("uint *")
}

from Function func, Parameter vdquot_465, Variable vret_469, Variable vnewblk_470, Variable v__func__, Parameter vinfo_465, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4, ExprStmt target_5, ExprStmt target_6, EqualityOperation target_7, BlockStmt target_8
where
not func_0(vdquot_465, vret_469, vnewblk_470, v__func__, vinfo_465, target_1, target_2, target_3, target_4, target_5, target_6, target_7, func)
and func_1(vdquot_465, vret_469, vnewblk_470, vinfo_465, target_1)
and func_2(vdquot_465, vnewblk_470, vinfo_465, target_2)
and func_3(vdquot_465, vret_469, vnewblk_470, vinfo_465, target_3)
and func_4(vret_469, target_8, target_4)
and func_5(vdquot_465, v__func__, target_5)
and func_6(vdquot_465, v__func__, target_6)
and func_7(vinfo_465, target_7)
and func_8(vdquot_465, v__func__, target_8)
and vdquot_465.getType().hasName("dquot *")
and vret_469.getType().hasName("int")
and vnewblk_470.getType().hasName("uint")
and v__func__.getType() instanceof ArrayType
and vinfo_465.getType().hasName("qtree_mem_dqinfo *")
and vdquot_465.getFunction() = func
and vret_469.(LocalVariable).getFunction() = func
and vnewblk_470.(LocalVariable).getFunction() = func
and not v__func__.getParentScope+() = func
and vinfo_465.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
