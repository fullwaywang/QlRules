/**
 * @name linux-910c57dfa4d113aae6571c2a8b9ae8c430975902-emulator_cmpxchg_emulated
 * @id cpp/linux/910c57dfa4d113aae6571c2a8b9ae8c430975902/emulator-cmpxchg-emulated
 * @description linux-910c57dfa4d113aae6571c2a8b9ae8c430975902-arch/x86/kvm/x86.c-emulator_cmpxchg_emulated CVE-2024-35804
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvcpu_7957, Variable vgpa_7960, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kvm_vcpu_mark_page_dirty")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7957
	and target_0.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("gpa_to_gfn")
	and target_0.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vgpa_7960
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_4.getExpr().(AssignAddExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getThen().(ReturnStmt).getExpr().(Literal).getValue()="4"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vvcpu_7957, Variable vgpa_7960, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvm_vcpu_gfn_to_hva")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7957
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("gpa_to_gfn")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vgpa_7960
}

predicate func_3(Variable vvcpu_7957, Variable vgpa_7960, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("kvm_page_track_write")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7957
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vgpa_7960
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("const void *")
	and target_3.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_4(Variable vgpa_7960, ExprStmt target_4) {
	target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_4.getExpr().(AssignAddExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vgpa_7960
	and target_4.getExpr().(AssignAddExpr).getRValue().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="4095"
}

from Function func, Variable vvcpu_7957, Variable vgpa_7960, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vvcpu_7957, vgpa_7960, target_1, target_2, target_3, target_4, func)
and func_1(func, target_1)
and func_2(vvcpu_7957, vgpa_7960, target_2)
and func_3(vvcpu_7957, vgpa_7960, target_3)
and func_4(vgpa_7960, target_4)
and vvcpu_7957.getType().hasName("kvm_vcpu *")
and vgpa_7960.getType().hasName("gpa_t")
and vvcpu_7957.(LocalVariable).getFunction() = func
and vgpa_7960.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
