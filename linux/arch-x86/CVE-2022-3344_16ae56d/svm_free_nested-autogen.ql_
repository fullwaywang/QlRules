/**
 * @name linux-16ae56d7e0528559bf8dc9070e3bfd8ba3de80df-svm_free_nested
 * @id cpp/linux/16ae56d7e0528559bf8dc9070e3bfd8ba3de80df/svm-free-nested
 * @description linux-16ae56d7e0528559bf8dc9070e3bfd8ba3de80df-arch/x86/kvm/svm/nested.c-svm_free_nested CVE-2022-3344
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsvm_1123, ExprStmt target_1, ValueFieldAccess target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(DoStmt).getCondition() instanceof Literal
	and target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("svm_switch_vmcb")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsvm_1123
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="vmcb01"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsvm_1123
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsvm_1123, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("svm_vcpu_free_msrpm")
	and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="msrpm"
	and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="nested"
	and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsvm_1123
}

predicate func_2(Parameter vsvm_1123, ValueFieldAccess target_2) {
	target_2.getTarget().getName()="msrpm"
	and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="nested"
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsvm_1123
}

from Function func, Parameter vsvm_1123, ExprStmt target_1, ValueFieldAccess target_2
where
not func_0(vsvm_1123, target_1, target_2, func)
and func_1(vsvm_1123, target_1)
and func_2(vsvm_1123, target_2)
and vsvm_1123.getType().hasName("vcpu_svm *")
and vsvm_1123.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
