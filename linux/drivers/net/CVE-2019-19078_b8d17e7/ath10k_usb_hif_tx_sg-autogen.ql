/**
 * @name linux-b8d17e7d93d2beb89e4f34c59996376b8b544792-ath10k_usb_hif_tx_sg
 * @id cpp/linux/b8d17e7d93d2beb89e4f34c59996376b8b544792/ath10k-usb-hif-tx-sg
 * @description linux-b8d17e7d93d2beb89e4f34c59996376b8b544792-drivers/net/wireless/ath/ath10k/usb.c-ath10k_usb_hif_tx_sg CVE-2019-19078
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vurb_401, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("usb_free_urb")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_401
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vret_402, BlockStmt target_4, VariableAccess target_1) {
	target_1.getTarget()=vret_402
	and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vurb_401, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("usb_unanchor_urb")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_401
}

predicate func_3(Variable vurb_401, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("usb_free_urb")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_401
}

predicate func_4(Variable vret_402, BlockStmt target_4) {
	target_4.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_4.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalOrExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_4.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("trace_ath10k_log_dbg_enabled")
	and target_4.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__ath10k_dbg")
	and target_4.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ath10k *")
	and target_4.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="usb bulk transmit failed: %d\n"
	and target_4.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vret_402
}

from Function func, Variable vurb_401, Variable vret_402, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vurb_401, target_1, target_2, target_3)
and func_1(vret_402, target_4, target_1)
and func_2(vurb_401, target_2)
and func_3(vurb_401, target_3)
and func_4(vret_402, target_4)
and vurb_401.getType().hasName("urb *")
and vret_402.getType().hasName("int")
and vurb_401.(LocalVariable).getFunction() = func
and vret_402.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
