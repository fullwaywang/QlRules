/**
 * @name linux-baff42ab1494528907bf4d5870359e31711746ae-tcp_read_sock
 * @id cpp/linux/baff42ab1494528907bf4d5870359e31711746ae/tcp-read-sock
 * @description linux-baff42ab1494528907bf4d5870359e31711746ae-net/ipv4/tcp.c-tcp_read_sock CVE-2013-2128
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtp_1322, Variable vseq_1323, SubExpr target_1, ExprStmt target_2, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="copied_seq"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtp_1322
		and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vseq_1323
		and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_3.getExpr().(PrefixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtp_1322, Variable vseq_1323, SubExpr target_1) {
		target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="urg_seq"
		and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtp_1322
		and target_1.getRightOperand().(VariableAccess).getTarget()=vseq_1323
}

predicate func_2(Variable vtp_1322, Variable vseq_1323, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="copied_seq"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtp_1322
		and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vseq_1323
}

predicate func_3(Variable vseq_1323, ExprStmt target_3) {
		target_3.getExpr().(PrefixIncrExpr).getOperand().(VariableAccess).getTarget()=vseq_1323
}

from Function func, Variable vtp_1322, Variable vseq_1323, SubExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vtp_1322, vseq_1323, target_1, target_2, target_3)
and func_1(vtp_1322, vseq_1323, target_1)
and func_2(vtp_1322, vseq_1323, target_2)
and func_3(vseq_1323, target_3)
and vtp_1322.getType().hasName("tcp_sock *")
and vseq_1323.getType().hasName("u32")
and vtp_1322.(LocalVariable).getFunction() = func
and vseq_1323.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
