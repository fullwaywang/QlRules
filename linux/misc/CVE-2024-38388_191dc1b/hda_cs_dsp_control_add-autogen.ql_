/**
 * @name linux-191dc1b2ff0fb35e7aff15a53224837637df8bff-hda_cs_dsp_control_add
 * @id cpp/linux/191dc1b2ff0fb35e7aff15a53224837637df8bff/hda-cs-dsp-control-add
 * @description linux-191dc1b2ff0fb35e7aff15a53224837637df8bff-sound/pci/hda/hda_cs_dsp_ctl.c-hda_cs_dsp_control_add CVE-2024-38388
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_12, Function func, ReturnStmt target_0) {
	target_0.getParent().(IfStmt).getCondition()=target_12
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vctl_141, Parameter vcs_ctl_136, VariableAccess target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getParent() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="cs_ctl"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vctl_141
		)
		and obj_0.getRValue() = target_1
	)
	and target_1.getTarget()=vcs_ctl_136
}

predicate func_2(Parameter vinfo_137, VariableAccess target_2) {
	target_2.getTarget()=vinfo_137
}

predicate func_3(Function func, DeclStmt target_3) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vctl_141, AssignExpr target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getRValue() |
		obj_0.getTarget().hasName("kzalloc")
		and obj_0.getArgument(0).(SizeofExprOperator).getValue()="24"
		and obj_0.getArgument(1).(BitwiseOrExpr).getValue()="3264"
	)
	and target_4.getLValue().(VariableAccess).getTarget()=vctl_141
}

predicate func_5(Variable vctl_141, Function func, IfStmt target_5) {
	target_5.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vctl_141
	and target_5.getThen() instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vctl_141, Parameter vcs_ctl_136, Function func, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="cs_ctl"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vctl_141
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vcs_ctl_136
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable vctl_141, Parameter vinfo_137, Function func, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="card"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vctl_141
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().getName()="card"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vinfo_137
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vctl_141, Parameter vcs_ctl_136, Function func, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="priv"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vcs_ctl_136
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vctl_141
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Variable vname_140, Variable vctl_141, Function func, ExprStmt target_9) {
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		obj_0.getTarget().hasName("hda_cs_dsp_add_kcontrol")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vctl_141
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vname_140
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

/*predicate func_10(Variable vname_140, Variable vctl_141, PointerArithmeticOperation target_13, ExprStmt target_8, VariableAccess target_10) {
	exists(FunctionCall obj_0 | obj_0=target_10.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("hda_cs_dsp_add_kcontrol")
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vname_140
			)
		)
	)
	and target_10.getTarget()=vctl_141
	and target_13.getLeftOperand().(VariableAccess).getLocation().isBefore(target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_10.getLocation())
}

*/
predicate func_11(Function func, ReturnStmt target_11) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Variable vctl_141, NotExpr target_12) {
	target_12.getOperand().(VariableAccess).getTarget()=vctl_141
}

predicate func_13(Variable vname_140, PointerArithmeticOperation target_13) {
	target_13.getLeftOperand().(VariableAccess).getTarget()=vname_140
	and target_13.getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vname_140, Variable vctl_141, Parameter vcs_ctl_136, Parameter vinfo_137, ReturnStmt target_0, VariableAccess target_1, VariableAccess target_2, DeclStmt target_3, AssignExpr target_4, IfStmt target_5, ExprStmt target_6, ExprStmt target_7, ExprStmt target_8, ExprStmt target_9, ReturnStmt target_11, NotExpr target_12, PointerArithmeticOperation target_13
where
func_0(target_12, func, target_0)
and func_1(vctl_141, vcs_ctl_136, target_1)
and func_2(vinfo_137, target_2)
and func_3(func, target_3)
and func_4(vctl_141, target_4)
and func_5(vctl_141, func, target_5)
and func_6(vctl_141, vcs_ctl_136, func, target_6)
and func_7(vctl_141, vinfo_137, func, target_7)
and func_8(vctl_141, vcs_ctl_136, func, target_8)
and func_9(vname_140, vctl_141, func, target_9)
and func_11(func, target_11)
and func_12(vctl_141, target_12)
and func_13(vname_140, target_13)
and vname_140.getType().hasName("char[44]")
and vctl_141.getType().hasName("hda_cs_dsp_coeff_ctl *")
and vcs_ctl_136.getType().hasName("cs_dsp_coeff_ctl *")
and vinfo_137.getType().hasName("const hda_cs_dsp_ctl_info *")
and vname_140.(LocalVariable).getFunction() = func
and vctl_141.(LocalVariable).getFunction() = func
and vcs_ctl_136.getFunction() = func
and vinfo_137.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
