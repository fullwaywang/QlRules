commit 4a81311a62d853a43e002f45c6867f73c0accdab	4a81311a62d853a43e002f45c6867f73c0accdab
Author: Geoff Lang <geofflang@chromium.org>
Date:   Thu Mar 9 22:24:55 2023 +0000

    Disable glShaderBinary in the passthrough cmd decoder.
    
    This matches the behaviour of the validating command decoder. The client
    does not use this function and it's not exposed to WebGL.
    
    Bug: 1422594
    Change-Id: I87c670e4e80b0078fddb9f089b7ac7777a6debfa
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4324998
    Reviewed-by: Kenneth Russell <kbr@chromium.org>
    Commit-Queue: Geoff Lang <geofflang@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1115379}

diff --git a/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_doers.cc b/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_doers.cc
index 96c5e96ec7e71..e74db90f381a8 100644
--- a/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_doers.cc
+++ b/gpu/command_buffer/service/gles2_cmd_decoder_passthrough_doers.cc
@@ -2830,6 +2830,10 @@ error::Error GLES2DecoderPassthroughImpl::DoShaderBinary(GLsizei n,
                                                          GLenum binaryformat,
                                                          const void* binary,
                                                          GLsizei length) {
+#if 1  // No binary shader support.
+  InsertError(GL_INVALID_ENUM, "Invalid enum.");
+  return error::kNoError;
+#else
   std::vector<GLuint> service_shaders(n, 0);
   for (GLsizei i = 0; i < n; i++) {
     service_shaders[i] = GetShaderServiceID(shaders[i], resources_);
@@ -2837,6 +2841,7 @@ error::Error GLES2DecoderPassthroughImpl::DoShaderBinary(GLsizei n,
   api()->glShaderBinaryFn(n, service_shaders.data(), binaryformat, binary,
                           length);
   return error::kNoError;
+#endif
 }
 
 error::Error GLES2DecoderPassthroughImpl::DoShaderSource(GLuint shader,
