/**
 * @name linux-712f4aad406bb1ed67f3f98d04c044191f0ff593-unix_inflight
 * @id cpp/linux/712f4aad406bb1ed67f3f98d04c044191f0ff593/unix-inflight
 * @description linux-712f4aad406bb1ed67f3f98d04c044191f0ff593-net/unix/garbage.c-unix_inflight CVE-2013-4312
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfp_119, FunctionCall target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="unix_inflight"
	and target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="user"
	and target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="f_cred"
	and target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfp_119
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vunix_gc_lock, VariableAccess target_4, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vunix_gc_lock
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_2(Variable vunix_gc_lock, VariableAccess target_4, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vunix_gc_lock
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Parameter vfp_119, FunctionCall target_3) {
	target_3.getTarget().hasName("unix_get_socket")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vfp_119
}

predicate func_4(Variable vs_121, BlockStmt target_5, VariableAccess target_4) {
	target_4.getTarget()=vs_121
	and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Function func, BlockStmt target_5) {
	target_5.getStmt(1) instanceof ExprStmt
	and target_5.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("atomic_long_inc_return")
	and target_5.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="inflight"
	and target_5.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("unix_sock *")
	and target_5.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_5.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_5.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_5.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
	and target_5.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="link"
	and target_5.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("list_head")
	and target_5.getStmt(2).(IfStmt).getElse().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_5.getStmt(2).(IfStmt).getElse().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_5.getEnclosingFunction() = func
}

from Function func, Variable vs_121, Variable vunix_gc_lock, Parameter vfp_119, ExprStmt target_1, ExprStmt target_2, FunctionCall target_3, VariableAccess target_4, BlockStmt target_5
where
not func_0(vfp_119, target_3, func)
and func_1(vunix_gc_lock, target_4, target_1)
and func_2(vunix_gc_lock, target_4, target_2)
and func_3(vfp_119, target_3)
and func_4(vs_121, target_5, target_4)
and func_5(func, target_5)
and vs_121.getType().hasName("sock *")
and vunix_gc_lock.getType().hasName("spinlock_t")
and vfp_119.getType().hasName("file *")
and vs_121.(LocalVariable).getFunction() = func
and not vunix_gc_lock.getParentScope+() = func
and vfp_119.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
