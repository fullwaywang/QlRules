/**
 * @name linux-294f2fc6da27620a506e6c050241655459ccd6bd-adjust_scalar_min_max_vals
 * @id cpp/linux/294f2fc6da27620a506e6c050241655459ccd6bd/adjust-scalar-min-max-vals
 * @description linux-294f2fc6da27620a506e6c050241655459ccd6bd-kernel/bpf/verifier.c-adjust_scalar_min_max_vals CVE-2021-4159
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdst_reg_5083, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__update_reg_bounds")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdst_reg_5083
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdst_reg_5083, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("__reg_deduce_bounds")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdst_reg_5083
}

predicate func_2(Parameter vdst_reg_5083, EqualityOperation target_3, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("coerce_reg_to_size")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdst_reg_5083
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="4"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, EqualityOperation target_3) {
	target_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="code"
	and target_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_insn *")
	and target_3.getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="7"
	and target_3.getRightOperand().(Literal).getValue()="7"
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vdst_reg_5083, ExprStmt target_1, ExprStmt target_2, EqualityOperation target_3
where
not func_0(vdst_reg_5083, target_1, target_2, func)
and func_1(vdst_reg_5083, target_1)
and func_2(vdst_reg_5083, target_3, target_2)
and func_3(func, target_3)
and vdst_reg_5083.getType().hasName("bpf_reg_state *")
and vdst_reg_5083.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
