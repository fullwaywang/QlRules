/**
 * @name linux-0acc442309a0a1b01bcdaa135e56e6398a49439c-canfd_rcv
 * @id cpp/linux/0acc442309a0a1b01bcdaa135e56e6398a49439c/canfd-rcv
 * @description linux-0acc442309a0a1b01bcdaa135e56e6398a49439c-net/can/af_can.c-canfd_rcv CVE-2023-2166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_692) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof EqualityOperation
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("can_get_ml_priv")
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_692
	and target_0.getParent().(LogicalOrExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getParent().(LogicalOrExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0")
}

predicate func_1(Parameter vdev_692, EqualityOperation target_1) {
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_692
	and target_1.getRightOperand().(Literal).getValue()="280"
	and target_1.getParent().(LogicalOrExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getParent().(LogicalOrExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Parameter vdev_692, EqualityOperation target_1
where
not func_0(vdev_692)
and func_1(vdev_692, target_1)
and vdev_692.getType().hasName("net_device *")
and vdev_692.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
