commit 68d19af95a353f5e2b021602180b65b303eba99d
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Thu Jul 18 20:00:53 2024 +0100

    io_uring: fix error pbuf checking
    
    commit bcc87d978b834c298bbdd9c52454c5d0a946e97e upstream.
    
    Syz reports a problem, which boils down to NULL vs IS_ERR inconsistent
    error handling in io_alloc_pbuf_ring().
    
    KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
    RIP: 0010:__io_remove_buffers+0xac/0x700 io_uring/kbuf.c:341
    Call Trace:
     <TASK>
     io_put_bl io_uring/kbuf.c:378 [inline]
     io_destroy_buffers+0x14e/0x490 io_uring/kbuf.c:392
     io_ring_ctx_free+0xa00/0x1070 io_uring/io_uring.c:2613
     io_ring_exit_work+0x80f/0x8a0 io_uring/io_uring.c:2844
     process_one_work kernel/workqueue.c:3231 [inline]
     process_scheduled_works+0xa2c/0x1830 kernel/workqueue.c:3312
     worker_thread+0x86d/0xd40 kernel/workqueue.c:3390
     kthread+0x2f0/0x390 kernel/kthread.c:389
     ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147
     ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
    
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+2074b1a3d447915c6f1c@syzkaller.appspotmail.com
    Fixes: 87585b05757dc ("io_uring/kbuf: use vm_insert_pages() for mmap'ed pbuf ring")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/c5f9df20560bd9830401e8e48abc029e7cfd9f5e.1721329239.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/io_uring/kbuf.c b/io_uring/kbuf.c
index d2945c9c812b..c95dc1736dd9 100644
--- a/io_uring/kbuf.c
+++ b/io_uring/kbuf.c
@@ -657,8 +657,10 @@ static int io_alloc_pbuf_ring(struct io_ring_ctx *ctx,
 	ring_size = reg->ring_entries * sizeof(struct io_uring_buf_ring);
 
 	bl->buf_ring = io_pages_map(&bl->buf_pages, &bl->buf_nr_pages, ring_size);
-	if (!bl->buf_ring)
+	if (IS_ERR(bl->buf_ring)) {
+		bl->buf_ring = NULL;
 		return -ENOMEM;
+	}
 
 	bl->is_buf_ring = 1;
 	bl->is_mmap = 1;
