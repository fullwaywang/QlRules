/**
 * @name linux-0bd22a4966d55f1d2c127a53300d5c2b50152376-vfio_intx_enable
 * @id cpp/linux/0bd22a4966d55f1d2c127a53300d5c2b50152376/vfio-intx-enable
 * @description linux-0bd22a4966d55f1d2c127a53300d5c2b50152376-drivers/vfio/pci/vfio_pci_intrs.c-vfio_intx_enable CVE-2024-38632
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vname_266, NotExpr target_2, NotExpr target_3, ExprStmt target_4) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vname_266
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_2.getCondition()=target_2
		)
	)
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
)
}

predicate func_1(NotExpr target_2, Function func, ReturnStmt target_1) {
	target_1.getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget().getType().hasName("vfio_pci_irq_ctx *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vname_266, NotExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vname_266
}

predicate func_4(Variable vname_266, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="name"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("vfio_pci_irq_ctx *")
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vname_266
	)
}

from Function func, Variable vname_266, ReturnStmt target_1, NotExpr target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(vname_266, target_2, target_3, target_4)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and func_3(vname_266, target_3)
and func_4(vname_266, target_4)
and vname_266.getType().hasName("char *")
and vname_266.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
