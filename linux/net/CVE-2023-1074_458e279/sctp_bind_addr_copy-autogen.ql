/**
 * @name linux-458e279f861d3f61796894cd158b780765a1569f-sctp_bind_addr_copy
 * @id cpp/linux/458e279f861d3f61796894cd158b780765a1569f/sctp-bind-addr-copy
 * @description linux-458e279f861d3f61796894cd158b780765a1569f-net/sctp/bind_addr.c-sctp_bind_addr_copy CVE-2023-1074
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdest_43, Variable verror_49, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("list_empty")
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="address_list"
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdest_43
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_49
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-101"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_4.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdest_43, Variable verror_49, IfStmt target_1) {
	target_1.getCondition().(VariableAccess).getTarget()=verror_49
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("sctp_bind_addr_clean")
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdest_43
}

predicate func_2(Parameter vdest_43, Variable verror_49, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_49
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sctp_copy_one_addr")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdest_43
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="a"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sctp_sockaddr_entry *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("gfp_t")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Parameter vdest_43, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("sctp_bind_addr_clean")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdest_43
}

predicate func_4(Variable verror_49, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getLesserOperand().(VariableAccess).getTarget()=verror_49
	and target_4.getGreaterOperand().(Literal).getValue()="0"
	and target_4.getParent().(IfStmt).getThen() instanceof GotoStmt
}

from Function func, Parameter vdest_43, Variable verror_49, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4
where
not func_0(vdest_43, verror_49, target_1, target_2, target_3, target_4, func)
and func_1(vdest_43, verror_49, target_1)
and func_2(vdest_43, verror_49, target_2)
and func_3(vdest_43, target_3)
and func_4(verror_49, target_4)
and vdest_43.getType().hasName("sctp_bind_addr *")
and verror_49.getType().hasName("int")
and vdest_43.getFunction() = func
and verror_49.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
