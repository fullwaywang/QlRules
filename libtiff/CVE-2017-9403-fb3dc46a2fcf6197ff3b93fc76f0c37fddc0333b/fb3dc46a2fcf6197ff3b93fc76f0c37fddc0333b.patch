commit fb3dc46a2fcf6197ff3b93fc76f0c37fddc0333b	fb3dc46a2fcf6197ff3b93fc76f0c37fddc0333b
Author: erouault <erouault>
Date:   Thu Apr 27 15:46:22 2017 +0000

    * libtiff/tif_dirread.c: fix memory leak in non DEFER_STRILE_LOAD
    mode (ie default) when there is both a StripOffsets and
    TileOffsets tag, or a StripByteCounts and TileByteCounts
    Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2689
    * tools/tiff2ps.c: call TIFFClose() in error code paths.

diff --git a/ChangeLog b/ChangeLog
index d5c1efca..11639b98 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,10 @@
+2017-04-27
+	* libtiff/tif_dirread.c: fix memory leak in non DEFER_STRILE_LOAD
+	mode (ie default) when there is both a StripOffsets and
+	TileOffsets tag, or a StripByteCounts and TileByteCounts
+	Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2689
+	* tools/tiff2ps.c: call TIFFClose() in error code paths.
+
 2017-02-25 Even Rouault <even.rouault at spatialys.com>
 
 	* libtiff/tif_fax3.c, tif_predict.c, tif_getimage.c: fix GCC 7
diff --git a/libtiff/tif_dirread.c b/libtiff/tif_dirread.c
index 77b0f377..1d4f0b9a 100644
--- a/libtiff/tif_dirread.c
+++ b/libtiff/tif_dirread.c
@@ -3738,6 +3738,14 @@ TIFFReadDirectory(TIFF* tif)
                                 _TIFFmemcpy( &(tif->tif_dir.td_stripoffset_entry),
                                              dp, sizeof(TIFFDirEntry) );
 #else                          
+                                if( tif->tif_dir.td_stripoffset != NULL )
+                                {
+                                    TIFFErrorExt(tif->tif_clientdata, module,
+                                        "tif->tif_dir.td_stripoffset is "
+                                        "already allocated. Likely duplicated "
+                                        "StripOffsets/TileOffsets tag");
+                                    goto bad;
+                                }
 				if (!TIFFFetchStripThing(tif,dp,tif->tif_dir.td_nstrips,&tif->tif_dir.td_stripoffset))  
 					goto bad;
 #endif                                
@@ -3748,7 +3756,15 @@ TIFFReadDirectory(TIFF* tif)
                                 _TIFFmemcpy( &(tif->tif_dir.td_stripbytecount_entry),
                                              dp, sizeof(TIFFDirEntry) );
 #else                          
-				if (!TIFFFetchStripThing(tif,dp,tif->tif_dir.td_nstrips,&tif->tif_dir.td_stripbytecount))  
+                                if( tif->tif_dir.td_stripbytecount != NULL )
+                                {
+                                    TIFFErrorExt(tif->tif_clientdata, module,
+                                        "tif->tif_dir.td_stripbytecount is "
+                                        "already allocated. Likely duplicated "
+                                        "StripByteCounts/TileByteCounts tag");
+                                    goto bad;
+                                }
+                                if (!TIFFFetchStripThing(tif,dp,tif->tif_dir.td_nstrips,&tif->tif_dir.td_stripbytecount))  
 					goto bad;
 #endif                                
 				break;
diff --git a/tools/tiff2ps.c b/tools/tiff2ps.c
index 29020670..2aebdc04 100644
--- a/tools/tiff2ps.c
+++ b/tools/tiff2ps.c
@@ -466,10 +466,16 @@ main(int argc, char* argv[])
 		if (tif != NULL) {
 			if (dirnum != -1
                             && !TIFFSetDirectory(tif, (tdir_t)dirnum))
+                        {
+                                TIFFClose(tif);
 				return (-1);
+                        }
 			else if (diroff != 0 &&
 			    !TIFFSetSubDirectory(tif, diroff))
+                        {
+                                TIFFClose(tif);
 				return (-1);
+                        }
 			np = TIFF2PS(output, tif, pageWidth, pageHeight,
 				     leftmargin, bottommargin, centered);
                         if (np < 0)
