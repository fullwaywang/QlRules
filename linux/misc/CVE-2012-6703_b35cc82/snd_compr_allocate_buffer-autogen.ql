/**
 * @name linux-b35cc8225845112a616e3a2266d2fde5ab13d3ab-snd_compr_allocate_buffer
 * @id cpp/linux/b35cc8225845112a616e3a2266d2fde5ab13d3ab/snd-compr-allocate-buffer
 * @description linux-b35cc8225845112a616e3a2266d2fde5ab13d3ab-sound/core/compress_offload.c-snd_compr_allocate_buffer CVE-2012-6703
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vparams_405, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="fragment_size"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparams_405
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getTarget().getName()="fragments"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparams_405
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(DivExpr).getLeftOperand().(ComplementExpr).getValue()="18446744073709551615"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(DivExpr).getRightOperand().(ValueFieldAccess).getTarget().getName()="fragment_size"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(DivExpr).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(DivExpr).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparams_405
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Parameter vparams_405, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getExpr().(AssignExpr).getRValue().(MulExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="fragment_size"
	and target_1.getExpr().(AssignExpr).getRValue().(MulExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_1.getExpr().(AssignExpr).getRValue().(MulExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparams_405
	and target_1.getExpr().(AssignExpr).getRValue().(MulExpr).getRightOperand().(ValueFieldAccess).getTarget().getName()="fragments"
	and target_1.getExpr().(AssignExpr).getRValue().(MulExpr).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_1.getExpr().(AssignExpr).getRValue().(MulExpr).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparams_405
}

from Function func, Parameter vparams_405, ExprStmt target_1
where
not func_0(vparams_405, target_1, func)
and func_1(vparams_405, target_1)
and vparams_405.getType().hasName("snd_compr_params *")
and vparams_405.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
