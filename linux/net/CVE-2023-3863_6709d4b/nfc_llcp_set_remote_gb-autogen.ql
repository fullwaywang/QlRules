/**
 * @name linux-6709d4b7bc2e079241fdef15d1160581c5261c10-nfc_llcp_set_remote_gb
 * @id cpp/linux/6709d4b7bc2e079241fdef15d1160581c5261c10/nfc-llcp-set-remote-gb
 * @description linux-6709d4b7bc2e079241fdef15d1160581c5261c10-net/nfc/llcp_core.c-nfc_llcp_set_remote_gb CVE-2023-3863
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(FunctionCall target_8, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_0.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(FunctionCall target_8, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="out"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_3(Variable vlocal_616, FunctionCall target_8, FunctionCall target_6, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("nfc_llcp_local_put")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vlocal_616
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt
	and target_8.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_5(Function func, UnaryMinusExpr target_5) {
	target_5.getValue()="-22"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vlocal_616, FunctionCall target_6) {
	target_6.getTarget().hasName("nfc_llcp_parse_gb_tlv")
	and target_6.getArgument(0).(VariableAccess).getTarget()=vlocal_616
	and target_6.getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="remote_gb"
	and target_6.getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vlocal_616
	and target_6.getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="3"
	and target_6.getArgument(2).(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="remote_gb_len"
	and target_6.getArgument(2).(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vlocal_616
	and target_6.getArgument(2).(SubExpr).getRightOperand().(Literal).getValue()="3"
}

predicate func_7(Function func, ReturnStmt target_7) {
	target_7.getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vlocal_616, FunctionCall target_8) {
	target_8.getTarget().hasName("memcmp")
	and target_8.getArgument(0).(PointerFieldAccess).getTarget().getName()="remote_gb"
	and target_8.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vlocal_616
	and target_8.getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_8.getArgument(2).(Literal).getValue()="3"
}

from Function func, Variable vlocal_616, UnaryMinusExpr target_5, FunctionCall target_6, ReturnStmt target_7, FunctionCall target_8
where
not func_0(target_8, func)
and not func_1(target_8, func)
and not func_2(func)
and not func_3(vlocal_616, target_8, target_6, func)
and func_5(func, target_5)
and func_6(vlocal_616, target_6)
and func_7(func, target_7)
and func_8(vlocal_616, target_8)
and vlocal_616.getType().hasName("nfc_llcp_local *")
and vlocal_616.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
