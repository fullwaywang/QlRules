/**
 * @name linux-073931017b49d9458aa351605b43a7e34598caef-__gfs2_set_acl
 * @id cpp/linux/073931017b49d9458aa351605b43a7e34598caef/--gfs2-set-acl
 * @description linux-073931017b49d9458aa351605b43a7e34598caef-fs/gfs2/acl.c-__gfs2_set_acl CVE-2016-7097
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vacl_82, Variable verror_84, Variable vmode_93, FunctionCall target_0) {
	target_0.getTarget().hasName("posix_acl_equiv_mode")
	and not target_0.getTarget().hasName("posix_acl_update_mode")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vacl_82
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmode_93
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_84
}

predicate func_2(Parameter vacl_82, IfStmt target_14) {
exists(AddressOfExpr target_2 |
	target_2.getOperand().(VariableAccess).getTarget()=vacl_82
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_14.getCondition().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vinode_82, Variable vmode_93, BlockStmt target_15, EqualityOperation target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget()=vmode_93
	and target_3.getRightOperand().(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_3.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_82
	and target_3.getParent().(IfStmt).getThen()=target_15
}

predicate func_4(Parameter vinode_82, Variable vmode_93, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="i_mode"
	and target_4.getQualifier().(VariableAccess).getTarget()=vinode_82
	and target_4.getParent().(AssignExpr).getLValue() = target_4
	and target_4.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmode_93
}

predicate func_5(Parameter vinode_82, EqualityOperation target_3, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("mark_inode_dirty")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_82
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_6(Variable verror_84, ReturnStmt target_16, VariableAccess target_6) {
	target_6.getTarget()=verror_84
	and target_6.getParent().(LTExpr).getGreaterOperand() instanceof Literal
	and target_6.getParent().(LTExpr).getParent().(IfStmt).getThen()=target_16
}

predicate func_7(Parameter vacl_82, VariableAccess target_7) {
	target_7.getTarget()=vacl_82
	and target_7.getParent().(AssignExpr).getLValue() = target_7
	and target_7.getParent().(AssignExpr).getRValue() instanceof Literal
}

predicate func_8(Variable vmode_93, VariableAccess target_8) {
	target_8.getTarget()=vmode_93
	and target_8.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_9(Variable verror_84, ReturnStmt target_16, RelationalOperation target_9) {
	 (target_9 instanceof GTExpr or target_9 instanceof LTExpr)
	and target_9.getLesserOperand().(VariableAccess).getTarget()=verror_84
	and target_9.getGreaterOperand().(Literal).getValue()="0"
	and target_9.getParent().(IfStmt).getThen()=target_16
}

predicate func_10(Variable verror_84, ExprStmt target_11, EqualityOperation target_10) {
	target_10.getLeftOperand().(VariableAccess).getTarget()=verror_84
	and target_10.getRightOperand().(Literal).getValue()="0"
	and target_10.getParent().(IfStmt).getThen()=target_11
}

predicate func_11(Parameter vacl_82, EqualityOperation target_10, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vacl_82
	and target_11.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_11.getParent().(IfStmt).getCondition()=target_10
}

predicate func_12(Parameter vinode_82, Variable vmode_93, EqualityOperation target_17, IfStmt target_12) {
	target_12.getCondition() instanceof EqualityOperation
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_82
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmode_93
	and target_12.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

/*predicate func_13(Parameter vinode_82, Variable vmode_93, EqualityOperation target_3, ExprStmt target_13) {
	target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_82
	and target_13.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmode_93
	and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

*/
predicate func_14(Parameter vacl_82, IfStmt target_14) {
	target_14.getCondition().(VariableAccess).getTarget()=vacl_82
	and target_14.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_14.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("posix_acl_to_xattr")
	and target_14.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("user_namespace")
	and target_14.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vacl_82
	and target_14.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_14.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="0"
	and target_14.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("char *")
	and target_14.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_14.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_14.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_15(Function func, BlockStmt target_15) {
	target_15.getStmt(0) instanceof ExprStmt
	and target_15.getStmt(1) instanceof ExprStmt
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Variable verror_84, RelationalOperation target_9, ReturnStmt target_16) {
	target_16.getExpr().(VariableAccess).getTarget()=verror_84
	and target_16.getParent().(IfStmt).getCondition()=target_9
}

predicate func_17(Function func, EqualityOperation target_17) {
	target_17.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_17.getRightOperand().(Literal).getValue()="32768"
	and target_17.getEnclosingFunction() = func
}

from Function func, Parameter vinode_82, Parameter vacl_82, Variable verror_84, Variable vmode_93, FunctionCall target_0, EqualityOperation target_3, PointerFieldAccess target_4, ExprStmt target_5, VariableAccess target_6, VariableAccess target_7, VariableAccess target_8, RelationalOperation target_9, EqualityOperation target_10, ExprStmt target_11, IfStmt target_12, IfStmt target_14, BlockStmt target_15, ReturnStmt target_16, EqualityOperation target_17
where
func_0(vacl_82, verror_84, vmode_93, target_0)
and not func_2(vacl_82, target_14)
and func_3(vinode_82, vmode_93, target_15, target_3)
and func_4(vinode_82, vmode_93, target_4)
and func_5(vinode_82, target_3, target_5)
and func_6(verror_84, target_16, target_6)
and func_7(vacl_82, target_7)
and func_8(vmode_93, target_8)
and func_9(verror_84, target_16, target_9)
and func_10(verror_84, target_11, target_10)
and func_11(vacl_82, target_10, target_11)
and func_12(vinode_82, vmode_93, target_17, target_12)
and func_14(vacl_82, target_14)
and func_15(func, target_15)
and func_16(verror_84, target_9, target_16)
and func_17(func, target_17)
and vinode_82.getType().hasName("inode *")
and vacl_82.getType().hasName("posix_acl *")
and verror_84.getType().hasName("int")
and vmode_93.getType().hasName("umode_t")
and vinode_82.getFunction() = func
and vacl_82.getFunction() = func
and verror_84.(LocalVariable).getFunction() = func
and vmode_93.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
