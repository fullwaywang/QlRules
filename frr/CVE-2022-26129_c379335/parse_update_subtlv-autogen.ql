/**
 * @name frr-c3793352a8d76d2eee1edc38a9a16c1c8a6573f4-parse_update_subtlv
 * @id cpp/frr/c3793352a8d76d2eee1edc38a9a16c1c8a6573f4/parse-update-subtlv
 * @description frr-c3793352a8d76d2eee1edc38a9a16c1c8a6573f4-babeld/message.c-parse_update_subtlv CVE-2022-26129
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter valen_131, BlockStmt target_7, RelationalOperation target_8, RelationalOperation target_6) {
	exists(RelationalOperation target_0 |
		 (target_0 instanceof GEExpr or target_0 instanceof LEExpr)
		and target_0.getGreaterOperand() instanceof AddExpr
		and target_0.getLesserOperand().(VariableAccess).getTarget()=valen_131
		and target_0.getParent().(IfStmt).getThen()=target_7
		and target_8.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_0.getLesserOperand().(VariableAccess).getLocation())
		and target_0.getLesserOperand().(VariableAccess).getLocation().isBefore(target_6.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter valen_131, BlockStmt target_7) {
	exists(AddExpr target_1 |
		target_1.getAnOperand() instanceof AddExpr
		and target_1.getAnOperand().(Literal).getValue()="2"
		and target_1.getParent().(GTExpr).getGreaterOperand() instanceof AddExpr
		and target_1.getParent().(GTExpr).getLesserOperand().(VariableAccess).getTarget()=valen_131
		and target_1.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_7)
}

predicate func_2(Parameter valen_131, Variable vi_134, BlockStmt target_7, AddExpr target_2) {
		target_2.getAnOperand().(VariableAccess).getTarget()=vi_134
		and target_2.getAnOperand().(Literal).getValue()="1"
		and target_2.getParent().(GTExpr).getLesserOperand().(VariableAccess).getTarget()=valen_131
		and target_2.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_7
}

predicate func_3(Parameter valen_131, Variable vlen_134, Variable vi_134, BlockStmt target_9, AddExpr target_3) {
		target_3.getAnOperand().(VariableAccess).getTarget()=vi_134
		and target_3.getAnOperand().(VariableAccess).getTarget()=vlen_134
		and target_3.getParent().(GTExpr).getLesserOperand().(VariableAccess).getTarget()=valen_131
		and target_3.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_9
}

/*predicate func_4(Parameter valen_131, BlockStmt target_7, VariableAccess target_4) {
		target_4.getTarget()=valen_131
		and target_4.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_7
}

*/
/*predicate func_5(Parameter valen_131, Variable vlen_134, Variable vi_134, BlockStmt target_9, VariableAccess target_5) {
		target_5.getTarget()=valen_131
		and target_5.getParent().(GTExpr).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vi_134
		and target_5.getParent().(GTExpr).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vlen_134
		and target_5.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_9
}

*/
predicate func_6(Parameter valen_131, BlockStmt target_9, RelationalOperation target_6) {
		 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
		and target_6.getGreaterOperand() instanceof AddExpr
		and target_6.getLesserOperand().(VariableAccess).getTarget()=valen_131
		and target_6.getParent().(IfStmt).getThen()=target_9
}

predicate func_7(Function func, BlockStmt target_7) {
		target_7.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_7.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("zlog_ref")
		and target_7.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const xref_logmsg")
		and target_7.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Received truncated attributes."
		and target_7.getEnclosingFunction() = func
}

predicate func_8(Parameter valen_131, Variable vi_134, RelationalOperation target_8) {
		 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
		and target_8.getLesserOperand().(VariableAccess).getTarget()=vi_134
		and target_8.getGreaterOperand().(VariableAccess).getTarget()=valen_131
}

predicate func_9(Function func, BlockStmt target_9) {
		target_9.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_9.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("zlog_ref")
		and target_9.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const xref_logmsg")
		and target_9.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Received truncated attributes."
		and target_9.getEnclosingFunction() = func
}

from Function func, Parameter valen_131, Variable vlen_134, Variable vi_134, AddExpr target_2, AddExpr target_3, RelationalOperation target_6, BlockStmt target_7, RelationalOperation target_8, BlockStmt target_9
where
not func_0(valen_131, target_7, target_8, target_6)
and not func_1(valen_131, target_7)
and func_2(valen_131, vi_134, target_7, target_2)
and func_3(valen_131, vlen_134, vi_134, target_9, target_3)
and func_6(valen_131, target_9, target_6)
and func_7(func, target_7)
and func_8(valen_131, vi_134, target_8)
and func_9(func, target_9)
and valen_131.getType().hasName("int")
and vlen_134.getType().hasName("int")
and vi_134.getType().hasName("int")
and valen_131.getFunction() = func
and vlen_134.(LocalVariable).getFunction() = func
and vi_134.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
