/**
 * @name linux-a4639380bbe66172df329f8b54aa7d2e943f0f64-f2fs_put_super
 * @id cpp/linux/a4639380bbe66172df329f8b54aa7d2e943f0f64/f2fs-put-super
 * @description linux-a4639380bbe66172df329f8b54aa7d2e943f0f64-fs/f2fs/super.c-f2fs_put_super CVE-2023-52848
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_1610, Variable vsbi_1608, BlockStmt target_2, ExprStmt target_3, FunctionCall target_4) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=verr_1610
	and target_0.getRightOperand().(FunctionCall).getTarget().hasName("f2fs_cp_error")
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_1608
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_1610, BlockStmt target_2, VariableAccess target_1) {
	target_1.getTarget()=verr_1610
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vsbi_1608, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("truncate_inode_pages_final")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("NODE_MAPPING")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_1608
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("truncate_inode_pages_final")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("META_MAPPING")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_1608
}

predicate func_3(Variable vsbi_1608, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("f2fs_wait_on_all_pages")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_1608
}

predicate func_4(Variable vsbi_1608, FunctionCall target_4) {
	target_4.getTarget().hasName("NODE_MAPPING")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vsbi_1608
}

from Function func, Variable verr_1610, Variable vsbi_1608, VariableAccess target_1, BlockStmt target_2, ExprStmt target_3, FunctionCall target_4
where
not func_0(verr_1610, vsbi_1608, target_2, target_3, target_4)
and func_1(verr_1610, target_2, target_1)
and func_2(vsbi_1608, target_2)
and func_3(vsbi_1608, target_3)
and func_4(vsbi_1608, target_4)
and verr_1610.getType().hasName("int")
and vsbi_1608.getType().hasName("f2fs_sb_info *")
and verr_1610.(LocalVariable).getFunction() = func
and vsbi_1608.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
