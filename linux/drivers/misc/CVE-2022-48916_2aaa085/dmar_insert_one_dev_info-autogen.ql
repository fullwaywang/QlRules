/**
 * @name linux-2aaa085bd012a83be7104356301828585a2253ed-dmar_insert_one_dev_info
 * @id cpp/linux/2aaa085bd012a83be7104356301828585a2253ed/dmar-insert-one-dev-info
 * @description linux-2aaa085bd012a83be7104356301828585a2253ed-drivers/iommu/intel/iommu.c-dmar_insert_one_dev_info CVE-2022-48916
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_2561, BlockStmt target_3) {
exists(NotExpr target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getOperand() |
		obj_0.getTarget().hasName("dev_is_real_dma_subdevice")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdev_2561
	)
	and exists(LogicalAndExpr obj_1 | obj_1=target_0.getParent() |
		exists(LogicalAndExpr obj_2 | obj_2=obj_1.getRightOperand() |
			exists(BitwiseAndExpr obj_3 | obj_3=obj_2.getRightOperand() |
				exists(BinaryBitwiseOperation obj_4 | obj_4=obj_3.getLeftOperand() |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getLeftOperand() |
						obj_5.getTarget().getName()="ecap"
						and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("intel_iommu *")
					)
					and obj_4.getRightOperand().(Literal).getValue()="43"
				)
				and obj_3.getRightOperand().(Literal).getValue()="1"
			)
			and obj_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
		)
		and obj_1.getLeftOperand() instanceof LogicalAndExpr
		and obj_1.getParent().(IfStmt).getThen()=target_3
	)
)
}

predicate func_1(Parameter vdev_2561, VariableAccess target_1) {
	target_1.getTarget()=vdev_2561
}

predicate func_2(Parameter vdev_2561, Variable vpci_bus_type, BlockStmt target_3, ExprStmt target_4, LogicalAndExpr target_5, LogicalAndExpr target_2) {
	exists(EqualityOperation obj_0 | obj_0=target_2.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="bus"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdev_2561
		)
		and obj_0.getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vpci_bus_type
	)
	and exists(LogicalAndExpr obj_2 | obj_2=target_2.getParent() |
		exists(LogicalAndExpr obj_3 | obj_3=obj_2.getRightOperand() |
			exists(BitwiseAndExpr obj_4 | obj_4=obj_3.getRightOperand() |
				exists(BinaryBitwiseOperation obj_5 | obj_5=obj_4.getLeftOperand() |
					exists(PointerFieldAccess obj_6 | obj_6=obj_5.getLeftOperand() |
						obj_6.getTarget().getName()="ecap"
						and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("intel_iommu *")
					)
					and obj_5.getRightOperand().(Literal).getValue()="43"
				)
				and obj_4.getRightOperand().(Literal).getValue()="1"
			)
			and obj_3.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
		)
		and obj_2.getParent().(IfStmt).getThen()=target_3
	)
	and target_2.getLeftOperand().(VariableAccess).getTarget()=vdev_2561
	and target_2.getLeftOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_5.getRightOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_2.getRightOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getLocation())
}

predicate func_3(Parameter vdev_2561, BlockStmt target_3) {
	exists(ExprStmt obj_0 | obj_0=target_3.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("intel_pasid_alloc_table")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vdev_2561
			)
			and obj_1.getLValue().(VariableAccess).getTarget().getType().hasName("int")
		)
	)
	and exists(IfStmt obj_3 | obj_3=target_3.getStmt(1) |
		exists(BlockStmt obj_4 | obj_4=obj_3.getThen() |
			exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(1) |
				exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
					obj_6.getTarget().hasName("dmar_remove_one_dev_info")
					and obj_6.getArgument(0).(VariableAccess).getTarget()=vdev_2561
				)
			)
			and obj_4.getStmt(2).(ReturnStmt).getExpr().(Literal).getValue()="0"
		)
		and obj_3.getCondition().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_4(Parameter vdev_2561, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("intel_pasid_alloc_table")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vdev_2561
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_5(Parameter vdev_2561, Variable vpci_bus_type, BlockStmt target_6, LogicalAndExpr target_5) {
	exists(EqualityOperation obj_0 | obj_0=target_5.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="bus"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdev_2561
		)
		and obj_0.getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vpci_bus_type
	)
	and target_5.getLeftOperand().(VariableAccess).getTarget()=vdev_2561
	and target_5.getParent().(IfStmt).getThen()=target_6
}

predicate func_6(Function func, BlockStmt target_6) {
	exists(IfStmt obj_0 | obj_0=target_6.getStmt(1) |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getCondition() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(BitwiseAndExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					exists(BinaryBitwiseOperation obj_4 | obj_4=obj_3.getLeftOperand() |
						obj_4.getLeftOperand().(PointerFieldAccess).getTarget().getName()="ecap"
						and obj_4.getRightOperand().(Literal).getValue()="2"
					)
					and obj_3.getRightOperand().(Literal).getValue()="1"
				)
				and exists(FunctionCall obj_5 | obj_5=obj_2.getRightOperand() |
					obj_5.getTarget().hasName("pci_ats_supported")
					and obj_5.getArgument(0).(VariableAccess).getTarget().getType().hasName("pci_dev *")
				)
			)
			and exists(FunctionCall obj_6 | obj_6=obj_1.getRightOperand() |
				obj_6.getTarget().hasName("dmar_find_matched_atsr_unit")
				and obj_6.getArgument(0).(VariableAccess).getTarget().getType().hasName("pci_dev *")
			)
		)
		and exists(ExprStmt obj_7 | obj_7=obj_0.getThen() |
			exists(AssignExpr obj_8 | obj_8=obj_7.getExpr() |
				exists(PointerFieldAccess obj_9 | obj_9=obj_8.getLValue() |
					obj_9.getTarget().getName()="ats_supported"
					and obj_9.getQualifier().(VariableAccess).getTarget().getType().hasName("device_domain_info *")
				)
				and obj_8.getRValue().(Literal).getValue()="1"
			)
		)
	)
	and target_6.getEnclosingFunction() = func
}

from Function func, Parameter vdev_2561, Variable vpci_bus_type, VariableAccess target_1, LogicalAndExpr target_2, BlockStmt target_3, ExprStmt target_4, LogicalAndExpr target_5, BlockStmt target_6
where
not func_0(vdev_2561, target_3)
and func_1(vdev_2561, target_1)
and func_2(vdev_2561, vpci_bus_type, target_3, target_4, target_5, target_2)
and func_3(vdev_2561, target_3)
and func_4(vdev_2561, target_4)
and func_5(vdev_2561, vpci_bus_type, target_6, target_5)
and func_6(func, target_6)
and vdev_2561.getType().hasName("device *")
and vpci_bus_type.getType().hasName("bus_type")
and vdev_2561.getFunction() = func
and not vpci_bus_type.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
