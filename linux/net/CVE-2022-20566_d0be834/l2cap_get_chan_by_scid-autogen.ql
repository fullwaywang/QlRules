/**
 * @name linux-d0be8347c623e0ac4202a1d4e0373882821f56b0-l2cap_get_chan_by_scid
 * @id cpp/linux/d0be8347c623e0ac4202a1d4e0373882821f56b0/l2cap-get-chan-by-scid
 * @description linux-d0be8347c623e0ac4202a1d4e0373882821f56b0-l2cap_get_chan_by_scid CVE-2022-20566
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vc_118, ExprStmt target_2, IfStmt target_1, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(VariableAccess).getTarget()=vc_118
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vc_118
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("l2cap_chan_hold_unless_zero")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_118
		and target_0.getThen().(BlockStmt).getStmt(1) instanceof IfStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(VariableAccess).getLocation())
		and target_0.getCondition().(VariableAccess).getLocation().isBefore(target_1.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Variable vc_118, Function func, IfStmt target_1) {
		target_1.getCondition().(VariableAccess).getTarget()=vc_118
		and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("l2cap_chan_lock")
		and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_118
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vc_118, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vc_118
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__l2cap_get_chan_by_scid")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("l2cap_conn *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u16")
}

from Function func, Variable vc_118, IfStmt target_1, ExprStmt target_2
where
not func_0(vc_118, target_2, target_1, func)
and func_1(vc_118, func, target_1)
and func_2(vc_118, target_2)
and vc_118.getType().hasName("l2cap_chan *")
and vc_118.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
