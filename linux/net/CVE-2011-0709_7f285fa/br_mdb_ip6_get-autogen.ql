/**
 * @name linux-7f285fa78d4b81b8458f05e77fb6b46245121b4e-br_mdb_ip6_get
 * @id cpp/linux/7f285fa78d4b81b8458f05e77fb6b46245121b4e/br-mdb-ip6-get
 * @description linux-7f285fa78d4b81b8458f05e77fb6b46245121b4e-net/bridge/br_multicast.c-br_mdb_ip6_get CVE-2011-0709
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdst_115, Variable vbr_dst_117, Parameter vmdb_115, FunctionCall target_0) {
		target_0.getTarget().hasName("__br_mdb_ip_get")
		and not target_0.getTarget().hasName("br_mdb_ip_get")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vmdb_115
		and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vbr_dst_117
		and target_0.getArgument(2).(FunctionCall).getTarget().hasName("__br_ip6_hash")
		and target_0.getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmdb_115
		and target_0.getArgument(2).(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdst_115
}

predicate func_1(Parameter vdst_115, Parameter vmdb_115, ExprStmt target_3, VariableAccess target_1) {
		target_1.getTarget()=vmdb_115
		and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("__br_ip6_hash")
		and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(2).(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdst_115
		and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(2).(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

/*predicate func_2(Parameter vdst_115, Parameter vmdb_115, ExprStmt target_3, VariableAccess target_2) {
		target_2.getTarget()=vdst_115
		and target_2.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("__br_ip6_hash")
		and target_2.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmdb_115
		and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_2.getLocation())
}

*/
predicate func_3(Parameter vdst_115, Variable vbr_dst_117, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("ipv6_addr_copy")
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="ip6"
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="u"
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vbr_dst_117
		and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdst_115
}

from Function func, Parameter vdst_115, Variable vbr_dst_117, Parameter vmdb_115, FunctionCall target_0, VariableAccess target_1, ExprStmt target_3
where
func_0(vdst_115, vbr_dst_117, vmdb_115, target_0)
and func_1(vdst_115, vmdb_115, target_3, target_1)
and func_3(vdst_115, vbr_dst_117, target_3)
and vdst_115.getType().hasName("const in6_addr *")
and vbr_dst_117.getType().hasName("br_ip")
and vmdb_115.getType().hasName("net_bridge_mdb_htable *")
and vdst_115.getFunction() = func
and vbr_dst_117.(LocalVariable).getFunction() = func
and vmdb_115.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
