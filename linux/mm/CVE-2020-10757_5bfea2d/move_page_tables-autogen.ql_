/**
 * @name linux-5bfea2d9b17f1034a68147a8b03b9789af5700f9-move_page_tables
 * @id cpp/linux/5bfea2d9b17f1034a68147a8b03b9789af5700f9/move-page-tables
 * @description linux-5bfea2d9b17f1034a68147a8b03b9789af5700f9-mm/mremap.c-move_page_tables CVE-2020-10757
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vold_pmd_247, BlockStmt target_2, NotExpr target_3, PointerDereferenceExpr target_4) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof LogicalOrExpr
	and target_0.getRightOperand().(FunctionCall).getTarget().hasName("pmd_devmap")
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vold_pmd_247
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vold_pmd_247, BlockStmt target_2, LogicalOrExpr target_1) {
	target_1.getLeftOperand().(FunctionCall).getTarget().hasName("is_swap_pmd")
	and target_1.getLeftOperand().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vold_pmd_247
	and target_1.getRightOperand().(FunctionCall).getTarget().hasName("pmd_trans_huge")
	and target_1.getRightOperand().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vold_pmd_247
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vold_pmd_247, BlockStmt target_2) {
	target_2.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(BinaryBitwiseOperation).getValue()="2097152"
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("bool")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("take_rmap_locks")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bool")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("move_huge_pmd")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vold_pmd_247
	and target_2.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("pmd_t *")
}

predicate func_3(Variable vold_pmd_247, NotExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vold_pmd_247
}

predicate func_4(Variable vold_pmd_247, PointerDereferenceExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vold_pmd_247
}

from Function func, Variable vold_pmd_247, LogicalOrExpr target_1, BlockStmt target_2, NotExpr target_3, PointerDereferenceExpr target_4
where
not func_0(vold_pmd_247, target_2, target_3, target_4)
and func_1(vold_pmd_247, target_2, target_1)
and func_2(vold_pmd_247, target_2)
and func_3(vold_pmd_247, target_3)
and func_4(vold_pmd_247, target_4)
and vold_pmd_247.getType().hasName("pmd_t *")
and vold_pmd_247.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
