/**
 * @name linux-30842f2989aacfaba3ccb39829b3417be9313dbe-udp_get_next
 * @id cpp/linux/30842f2989aacfaba3ccb39829b3417be9313dbe/udp-get-next
 * @description linux-30842f2989aacfaba3ccb39829b3417be9313dbe-net/ipv4/udp.c-udp_get_next CVE-2009-1243
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vstate_1609, ConditionalExpr target_2, LogicalAndExpr target_3) {
	exists(IfStmt target_0 |
		target_0.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_0.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="bucket"
		and target_0.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstate_1609
		and target_0.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(RelationalOperation).getGreaterOperand() instanceof Literal
		and target_0.getCondition().(ConditionalExpr).getThen().(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="bucket"
		and target_0.getCondition().(ConditionalExpr).getThen().(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstate_1609
		and target_0.getCondition().(ConditionalExpr).getThen().(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand() instanceof Literal
		and target_0.getCondition().(ConditionalExpr).getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_0.getCondition().(ConditionalExpr).getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getCondition().(VariableAccess).getType().hasName("int")
		and target_0.getCondition().(ConditionalExpr).getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(VariableAccess).getType().hasName("int")
		and target_0.getThen() instanceof ExprStmt
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vstate_1609, ConditionalExpr target_2, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("_spin_unlock_bh")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="lock"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="hash"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="udp_table"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="bucket"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstate_1609
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, ConditionalExpr target_2) {
		target_2.getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_2.getThen().(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getThen().(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="hit"
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getElse().(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="miss"
		and target_2.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vstate_1609, LogicalAndExpr target_3) {
		target_3.getAnOperand().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("net_eq")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("sock_net")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("net *")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="skc_family"
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="family"
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstate_1609
}

from Function func, Variable vstate_1609, ExprStmt target_1, ConditionalExpr target_2, LogicalAndExpr target_3
where
not func_0(vstate_1609, target_2, target_3)
and func_1(vstate_1609, target_2, target_1)
and func_2(func, target_2)
and func_3(vstate_1609, target_3)
and vstate_1609.getType().hasName("udp_iter_state *")
and vstate_1609.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
