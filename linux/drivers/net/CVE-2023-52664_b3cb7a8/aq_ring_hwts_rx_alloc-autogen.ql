/**
 * @name linux-b3cb7a830a24527877b0bc900b9bd74a96aea928-aq_ring_hwts_rx_alloc
 * @id cpp/linux/b3cb7a830a24527877b0bc900b9bd74a96aea928/aq-ring-hwts-rx-alloc
 * @description linux-b3cb7a830a24527877b0bc900b9bd74a96aea928-drivers/net/ethernet/aquantia/atlantic/aq_ring.c-aq_ring_hwts_rx_alloc CVE-2023-52664
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(UnaryMinusExpr target_0 |
	target_0.getValue()="-12"
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(NotExpr target_3, Function func, ReturnStmt target_1) {
	target_1.getExpr().(Literal).getValue()="0"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vself_236, ExprStmt target_4, VariableAccess target_2) {
	target_2.getTarget()=vself_236
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getLocation())
}

predicate func_3(Parameter vself_236, NotExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="dx_ring"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_236
}

predicate func_4(Parameter vself_236, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("aq_ring_free")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vself_236
}

from Function func, Parameter vself_236, ReturnStmt target_1, VariableAccess target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(func)
and func_1(target_3, func, target_1)
and func_2(vself_236, target_4, target_2)
and func_3(vself_236, target_3)
and func_4(vself_236, target_4)
and vself_236.getType().hasName("aq_ring_s *")
and vself_236.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
