/**
 * @name chromium-cd4c1f165c16c6d8161b5372ef7f61c715e01a42-IPC____ChannelAssociatedGroupController__~ChannelAssociatedGroupController
 * @id cpp/chromium/cd4c1f165c16c6d8161b5372ef7f61c715e01a42/ipcchannelassociatedgroupcontroller~channelassociatedgroupcontroller
 * @description chromium-cd4c1f165c16c6d8161b5372ef7f61c715e01a42-ipc/ipc_mojo_bootstrap.cc-IPC____ChannelAssociatedGroupController__~ChannelAssociatedGroupController CVE-2023-6347
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vendpoint_821, FunctionCall target_0) {
	target_0.getTarget().hasName("MarkClosedAndMaybeRemove")
	and not target_0.getTarget().hasName("clear")
	and target_0.getQualifier() instanceof ThisExpr
	and target_0.getArgument(0).(VariableAccess).getTarget()=vendpoint_821
}

predicate func_1(Function func, FunctionCall target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getQualifier() |
		obj_0.getTarget().getName()="endpoints_"
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	)
	and target_1.getTarget().hasName("empty")
	and not target_1.getTarget().hasName("MarkClosed")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vendpoint_821) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("MarkPeerClosed")
	and target_2.getQualifier() instanceof ThisExpr
	and target_2.getArgument(0).(VariableAccess).getTarget()=vendpoint_821
)
}

predicate func_3(Function func, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="endpoints_"
	and target_3.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, ThisExpr target_4) {
	target_4.getType() instanceof PointerType
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vendpoint_821, VariableAccess target_5) {
	target_5.getTarget()=vendpoint_821
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(Function func, ThisExpr target_6) {
	target_6.getType() instanceof PointerType
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vendpoint_821, VariableAccess target_7) {
	target_7.getTarget()=vendpoint_821
	and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Variable vendpoint_821, FunctionCall target_8) {
	target_8.getTarget().hasName("MarkPeerClosedAndMaybeRemove")
	and target_8.getQualifier() instanceof ThisExpr
	and target_8.getArgument(0).(VariableAccess).getTarget()=vendpoint_821
}

predicate func_9(Variable vprobably_true_836, Function func, SwitchStmt target_9) {
	exists(BlockStmt obj_0 | obj_0=target_9.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getTarget().hasName("__builtin_expect")
				and obj_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vprobably_true_836
				and obj_2.getArgument(1).(Literal).getValue()="1"
			)
			and exists(ExprStmt obj_3 | obj_3=obj_1.getElse() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().hasName("DCheck")
					and obj_4.getArgument(0).(StringLiteral).getValue()="endpoints_.empty()"
				)
			)
		)
		and obj_0.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="0"
		and obj_0.getStmt(1).(SwitchCase).toString() = "default: "
	)
	and target_9.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

/*predicate func_10(Function func, SwitchCase target_10) {
	target_10.getExpr().(Literal).getValue()="0"
	and target_10.getEnclosingFunction() = func
}

*/
/*predicate func_11(Function func, SwitchCase target_11) {
	target_11.toString() = "default: "
	and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_12(Variable vprobably_true_836, Literal target_14, IfStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getCondition() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vprobably_true_836
		and obj_0.getArgument(1).(Literal).getValue()="1"
	)
	and exists(ExprStmt obj_1 | obj_1=target_12.getElse() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getTarget().hasName("DCheck")
			and obj_2.getArgument(0).(StringLiteral).getValue()="endpoints_.empty()"
		)
	)
	and target_12.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_14
}

*/
/*predicate func_13(Function func, FunctionCall target_13) {
	target_13.getTarget().hasName("DCheck")
	and target_13.getArgument(0).(StringLiteral).getValue()="endpoints_.empty()"
	and target_13.getEnclosingFunction() = func
}

*/
from Function func, Variable vendpoint_821, Variable vprobably_true_836, FunctionCall target_0, FunctionCall target_1, PointerFieldAccess target_3, ThisExpr target_4, VariableAccess target_5, ThisExpr target_6, VariableAccess target_7, FunctionCall target_8, SwitchStmt target_9
where
func_0(vendpoint_821, target_0)
and func_1(func, target_1)
and not func_2(vendpoint_821)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(vendpoint_821, target_5)
and func_6(func, target_6)
and func_7(vendpoint_821, target_7)
and func_8(vendpoint_821, target_8)
and func_9(vprobably_true_836, func, target_9)
and vendpoint_821.getType().hasName("Endpoint *")
and vprobably_true_836.getType().hasName("const bool")
and vendpoint_821.(LocalVariable).getFunction() = func
and vprobably_true_836.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
