/**
 * @name linux-550fd08c2cebad61c548def135f67aba284c6162-fr_add_pvc
 * @id cpp/linux/550fd08c2cebad61c548def135f67aba284c6162/fr-add-pvc
 * @description linux-550fd08c2cebad61c548def135f67aba284c6162-drivers/net/wan/hdlc_fr.c-fr_add_pvc CVE-2011-4112
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdev_1064, EqualityOperation target_2) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getTarget().getName()="priv_flags"
		and target_0.getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1064
		and target_0.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="4294901759"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2)
}

predicate func_1(Variable vdev_1064, EqualityOperation target_2, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdev_1064
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alloc_netdev_mqs")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(Literal).getValue()="0"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(StringLiteral).getValue()="pvceth%d"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="1"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(Literal).getValue()="1"
		and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(ExprStmt target_1, Function func, EqualityOperation target_2) {
		target_2.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getAnOperand().(Literal).getValue()="1"
		and target_2.getParent().(IfStmt).getThen()=target_1
		and target_2.getEnclosingFunction() = func
}

from Function func, Variable vdev_1064, ExprStmt target_1, EqualityOperation target_2
where
not func_0(vdev_1064, target_2)
and func_1(vdev_1064, target_2, target_1)
and func_2(target_1, func, target_2)
and vdev_1064.getType().hasName("net_device *")
and vdev_1064.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
