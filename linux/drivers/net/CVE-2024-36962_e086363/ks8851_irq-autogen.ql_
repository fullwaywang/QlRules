/**
 * @name linux-e0863634bf9f7cf36291ebb5bfa2d16632f79c49-ks8851_irq
 * @id cpp/linux/e0863634bf9f7cf36291ebb5bfa2d16632f79c49/ks8851-irq
 * @description linux-e0863634bf9f7cf36291ebb5bfa2d16632f79c49-drivers/net/ethernet/micrel/ks8851_common.c-ks8851_irq CVE-2024-36962
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("local_bh_disable")
	and not target_0.getTarget().hasName("__skb_queue_head_init")
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func) {
exists(AddressOfExpr target_1 |
	target_1.getOperand().(VariableAccess).getType().hasName("sk_buff_head")
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Function func) {
exists(AddressOfExpr target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("ks8851_rx_pkts")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("ks8851_net *")
			)
		)
	)
	and target_2.getOperand().(VariableAccess).getType().hasName("sk_buff_head")
	and target_2.getEnclosingFunction() = func
)
}

predicate func_3(Variable vstatus_331, IfStmt target_6, BitwiseAndExpr target_7, BitwiseAndExpr target_8, Function func) {
exists(IfStmt target_3 |
	exists(BitwiseAndExpr obj_0 | obj_0=target_3.getCondition() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vstatus_331
		and obj_0.getRightOperand().(BinaryBitwiseOperation).getValue()="8192"
	)
	and exists(WhileStmt obj_1 | obj_1=target_3.getThen() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getCondition() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				obj_3.getTarget().hasName("__skb_dequeue")
				and obj_3.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("sk_buff_head")
			)
			and obj_2.getLValue().(VariableAccess).getType().hasName("sk_buff *")
		)
		and exists(ExprStmt obj_4 | obj_4=obj_1.getStmt() |
			exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
				obj_5.getTarget().hasName("netif_rx")
				and obj_5.getArgument(0).(VariableAccess).getType().hasName("sk_buff *")
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_6.getLocation())
	and target_7.getLeftOperand().(VariableAccess).getLocation().isBefore(target_3.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_3.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_8.getLeftOperand().(VariableAccess).getLocation())
)
}

/*predicate func_4(Function func) {
exists(FunctionCall target_4 |
	target_4.getTarget().hasName("netif_rx")
	and target_4.getArgument(0).(VariableAccess).getType().hasName("sk_buff *")
	and target_4.getEnclosingFunction() = func
)
}

*/
predicate func_5(Function func, FunctionCall target_5) {
	target_5.getTarget().hasName("local_bh_enable")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vstatus_331, IfStmt target_6) {
	exists(BitwiseAndExpr obj_0 | obj_0=target_6.getCondition() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vstatus_331
		and obj_0.getRightOperand().(BinaryBitwiseOperation).getValue()="32768"
	)
	and exists(ExprStmt obj_1 | obj_1=target_6.getThen() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
				exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
					obj_4.getTarget().getName()="mii"
					and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("ks8851_net *")
				)
			)
			and obj_2.getTarget().hasName("mii_check_link")
		)
	)
}

predicate func_7(Variable vstatus_331, BlockStmt target_9, BitwiseAndExpr target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget()=vstatus_331
	and target_7.getRightOperand().(BinaryBitwiseOperation).getValue()="256"
	and target_7.getParent().(IfStmt).getThen()=target_9
}

predicate func_8(Variable vstatus_331, ExprStmt target_10, BitwiseAndExpr target_8) {
	target_8.getLeftOperand().(VariableAccess).getTarget()=vstatus_331
	and target_8.getRightOperand().(BinaryBitwiseOperation).getValue()="32768"
	and target_8.getParent().(IfStmt).getThen()=target_10
}

predicate func_9(Function func, BlockStmt target_9) {
	exists(ExprStmt obj_0 | obj_0=target_9.getStmt(1) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getArgument(2) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					obj_3.getTarget().getName()="mchash"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("ks8851_rxctrl *")
				)
				and obj_2.getArrayOffset().(Literal).getValue()="0"
			)
			and obj_1.getTarget().hasName("ks8851_wrreg16")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("ks8851_net *")
			and obj_1.getArgument(1).(Literal).getValue()="160"
		)
	)
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, ExprStmt target_10) {
	exists(FunctionCall obj_0 | obj_0=target_10.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mii"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("ks8851_net *")
			)
		)
		and obj_0.getTarget().hasName("mii_check_link")
	)
	and target_10.getEnclosingFunction() = func
}

from Function func, Variable vstatus_331, FunctionCall target_0, FunctionCall target_5, IfStmt target_6, BitwiseAndExpr target_7, BitwiseAndExpr target_8, BlockStmt target_9, ExprStmt target_10
where
func_0(func, target_0)
and not func_1(func)
and not func_2(func)
and not func_3(vstatus_331, target_6, target_7, target_8, func)
and func_5(func, target_5)
and func_6(vstatus_331, target_6)
and func_7(vstatus_331, target_9, target_7)
and func_8(vstatus_331, target_10, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and vstatus_331.getType().hasName("unsigned int")
and vstatus_331.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
