/**
 * @name linux-62fdaa52a3d00a875da771719b6dc537ca79fce1-check_leaf
 * @id cpp/linux/62fdaa52a3d00a875da771719b6dc537ca79fce1/check-leaf
 * @description linux-62fdaa52a3d00a875da771719b6dc537ca79fce1-fs/btrfs/tree-checker.c-check_leaf CVE-2019-19036
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vleaf_1289, Variable vowner_1314, LogicalAndExpr target_1, ExprStmt target_2, ExprStmt target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vowner_1314
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("generic_err")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vleaf_1289
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="invalid owner, root 0 is not defined"
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-117"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vleaf_1289, LogicalAndExpr target_1) {
	target_1.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("btrfs_header_flag")
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vleaf_1289
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="2"
}

predicate func_2(Parameter vleaf_1289, Variable vowner_1314, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("generic_err")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vleaf_1289
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="invalid root, root %llu must never be empty"
	and target_2.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vowner_1314
}

predicate func_3(Parameter vleaf_1289, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("btrfs_item_key_to_cpu")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vleaf_1289
	and target_3.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("btrfs_key")
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vleaf_1289, Variable vowner_1314, LogicalAndExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vleaf_1289, vowner_1314, target_1, target_2, target_3)
and func_1(vleaf_1289, target_1)
and func_2(vleaf_1289, vowner_1314, target_2)
and func_3(vleaf_1289, target_3)
and vleaf_1289.getType().hasName("extent_buffer *")
and vowner_1314.getType().hasName("u64")
and vleaf_1289.getFunction() = func
and vowner_1314.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
