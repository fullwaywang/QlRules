/**
 * @name linux-037965402a010898d34f4e35327d22c0a95cd51f-xennet_alloc_one_rx_buffer
 * @id cpp/linux/037965402a010898d34f4e35327d22c0a95cd51f/xennet-alloc-one-rx-buffer
 * @description linux-037965402a010898d34f4e35327d22c0a95cd51f-drivers/net/xen-netfront.c-xennet_alloc_one_rx_buffer CVE-2024-27393
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_272, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("skb_mark_for_recycle")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_272
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vskb_272, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("skb_reserve")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_272
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_2(Variable vskb_272, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("skb_add_rx_frag")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_272
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("page *")
	and target_2.getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(4).(Literal).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(5).(BinaryBitwiseOperation).getValue()="4096"
}

from Function func, Variable vskb_272, ExprStmt target_1, ExprStmt target_2
where
not func_0(vskb_272, target_1, target_2, func)
and func_1(vskb_272, target_1)
and func_2(vskb_272, target_2)
and vskb_272.getType().hasName("sk_buff *")
and vskb_272.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
