/**
 * @name linux-7c9cbd0b5e38a1672fcd137894ace3b042dfbf69-l2cap_parse_conf_req
 * @id cpp/linux/7c9cbd0b5e38a1672fcd137894ace3b042dfbf69/l2cap-parse-conf-req
 * @description linux-7c9cbd0b5e38a1672fcd137894ace3b042dfbf69-net/bluetooth/l2cap_core.c-l2cap_parse_conf_req CVE-2019-3459
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlen_3326, ExprStmt target_1, ExprStmt target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_3326
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="128"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vlen_3326, ExprStmt target_2) {
	target_2.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vlen_3326
	and target_2.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getTarget().hasName("l2cap_get_conf_opt")
	and target_2.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("void *")
	and target_2.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
}

from Function func, Variable vlen_3326, ExprStmt target_1, ExprStmt target_2
where
not func_0(vlen_3326, target_1, target_2)
and func_1(func, target_1)
and func_2(vlen_3326, target_2)
and vlen_3326.getType().hasName("int")
and vlen_3326.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
