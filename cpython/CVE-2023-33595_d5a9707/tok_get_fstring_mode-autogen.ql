/**
 * @name cpython-d5a97074d24cd14cb2a35a2b1ad3074863cde264-tok_get_fstring_mode
 * @id cpp/cpython/d5a97074d24cd14cb2a35a2b1ad3074863cde264/tok-get-fstring-mode
 * @description cpython-d5a97074d24cd14cb2a35a2b1ad3074863cde264-Parser/tokenizer.c-tok_get_fstring_mode CVE-2023-33595
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtoken_2498, Variable vp_start_2500, Variable vp_end_2501, Parameter vtok_2498, LogicalOrExpr target_1, FunctionCall target_2, FunctionCall target_3, FunctionCall target_4, ExprStmt target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(PointerFieldAccess).getTarget().getName()="decoding_erred"
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtok_2498
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("token_setup")
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtok_2498
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vtoken_2498
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="64"
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vp_start_2500
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vp_end_2501
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getArgument(1).(VariableAccess).getLocation())
		and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, LogicalOrExpr target_1) {
		target_1.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="f_string_quote_size"
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tokenizer_mode *")
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="1"
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(CharLiteral).getValue()="10"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vtoken_2498, Variable vp_start_2500, Variable vp_end_2501, Parameter vtok_2498, FunctionCall target_2) {
		target_2.getTarget().hasName("token_setup")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vtok_2498
		and target_2.getArgument(1).(VariableAccess).getTarget()=vtoken_2498
		and target_2.getArgument(2).(Literal).getValue()="63"
		and target_2.getArgument(3).(VariableAccess).getTarget()=vp_start_2500
		and target_2.getArgument(4).(VariableAccess).getTarget()=vp_end_2501
}

predicate func_3(Parameter vtoken_2498, Variable vp_start_2500, Variable vp_end_2501, Parameter vtok_2498, FunctionCall target_3) {
		target_3.getTarget().hasName("token_setup")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vtok_2498
		and target_3.getArgument(1).(VariableAccess).getTarget()=vtoken_2498
		and target_3.getArgument(2).(FunctionCall).getTarget().hasName("syntaxerror")
		and target_3.getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtok_2498
		and target_3.getArgument(2).(FunctionCall).getArgument(1).(StringLiteral).getValue()="unterminated triple-quoted f-string literal (detected at line %d)"
		and target_3.getArgument(2).(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getArgument(3).(VariableAccess).getTarget()=vp_start_2500
		and target_3.getArgument(4).(VariableAccess).getTarget()=vp_end_2501
}

predicate func_4(Parameter vtok_2498, FunctionCall target_4) {
		target_4.getTarget().hasName("tok_nextc")
		and target_4.getArgument(0).(VariableAccess).getTarget()=vtok_2498
}

predicate func_5(Parameter vtok_2498, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cur"
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtok_2498
		and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="f_string_start"
		and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tokenizer_mode *")
}

from Function func, Parameter vtoken_2498, Variable vp_start_2500, Variable vp_end_2501, Parameter vtok_2498, LogicalOrExpr target_1, FunctionCall target_2, FunctionCall target_3, FunctionCall target_4, ExprStmt target_5
where
not func_0(vtoken_2498, vp_start_2500, vp_end_2501, vtok_2498, target_1, target_2, target_3, target_4, target_5)
and func_1(func, target_1)
and func_2(vtoken_2498, vp_start_2500, vp_end_2501, vtok_2498, target_2)
and func_3(vtoken_2498, vp_start_2500, vp_end_2501, vtok_2498, target_3)
and func_4(vtok_2498, target_4)
and func_5(vtok_2498, target_5)
and vtoken_2498.getType().hasName("token *")
and vp_start_2500.getType().hasName("const char *")
and vp_end_2501.getType().hasName("const char *")
and vtok_2498.getType().hasName("tok_state *")
and vtoken_2498.getFunction() = func
and vp_start_2500.(LocalVariable).getFunction() = func
and vp_end_2501.(LocalVariable).getFunction() = func
and vtok_2498.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
