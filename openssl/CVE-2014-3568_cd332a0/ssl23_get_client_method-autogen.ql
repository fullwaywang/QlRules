/**
 * @name openssl-cd332a07503bd9771595de87e768179f81715704-ssl23_get_client_method
 * @id cpp/openssl/cd332a07503bd9771595de87e768179f81715704/ssl23-get-client-method
 * @description openssl-cd332a07503bd9771595de87e768179f81715704-ssl/s23_clnt.c-ssl23_get_client_method CVE-2014-3568
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vver_69, EqualityOperation target_1, IfStmt target_0) {
		target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vver_69
		and target_0.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="769"
		and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("TLSv1_client_method")
		and target_0.getElse().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and target_0.getParent().(IfStmt).getCondition()=target_1
}

predicate func_1(Parameter vver_69, EqualityOperation target_1) {
		target_1.getAnOperand().(VariableAccess).getTarget()=vver_69
		and target_1.getAnOperand().(Literal).getValue()="768"
}

from Function func, Parameter vver_69, IfStmt target_0, EqualityOperation target_1
where
func_0(vver_69, target_1, target_0)
and func_1(vver_69, target_1)
and vver_69.getType().hasName("int")
and vver_69.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
