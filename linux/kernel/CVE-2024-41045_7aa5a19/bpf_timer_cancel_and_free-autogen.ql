/**
 * @name linux-7aa5a19279c3639ae8b758b63f05d0c616a39fa1-bpf_timer_cancel_and_free
 * @id cpp/linux/7aa5a19279c3639ae8b758b63f05d0c616a39fa1/bpf-timer-cancel-and-free
 * @description linux-7aa5a19279c3639ae8b758b63f05d0c616a39fa1-kernel/bpf/helpers.c-bpf_timer_cancel_and_free CVE-2024-41045
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v___p_1485, VariableAccess target_0) {
	target_0.getTarget()=v___p_1485
	and target_0.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Function func) {
exists(FunctionCall target_2 |
	exists(AddressOfExpr obj_0 | obj_0=target_2.getArgument(1) |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="cb"
					and obj_3.getQualifier().(VariableAccess).getType().hasName("bpf_hrtimer *")
				)
				and obj_2.getTarget().getName()="(unknown field)"
			)
			and obj_1.getTarget().getName()="delete_work"
		)
	)
	and target_2.getTarget().hasName("queue_work")
	and target_2.getArgument(0).(VariableAccess).getType().hasName("workqueue_struct *")
	and target_2.getEnclosingFunction() = func
)
}

predicate func_3(Variable vt_1447) {
exists(AddressOfExpr target_3 |
	exists(ValueFieldAccess obj_0 | obj_0=target_3.getOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="cb"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vt_1447
			)
			and obj_1.getTarget().getName()="(unknown field)"
		)
		and obj_0.getTarget().getName()="delete_work"
	)
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
)
}

predicate func_4(Variable vt_1447, Variable vpscr_ret___1483, Variable v__vpp_verify_1483, ExprStmt target_15, StmtExpr target_4) {
	exists(BlockStmt obj_0 | obj_0=target_4.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			obj_1.getCondition().(Literal).getValue()="0"
			and obj_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__vpp_verify_1483
		)
		and exists(BlockStmt obj_2 | obj_2=obj_0.getStmt(2) |
			exists(SwitchStmt obj_3 | obj_3=obj_2.getStmt(0) |
				exists(BlockStmt obj_4 | obj_4=obj_3.getStmt() |
					obj_4.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="1"
					and obj_4.getStmt(3).(SwitchCase).getExpr().(Literal).getValue()="2"
					and obj_4.getStmt(6).(SwitchCase).getExpr().(Literal).getValue()="4"
					and obj_4.getStmt(9).(SwitchCase).getExpr().(Literal).getValue()="8"
					and obj_4.getStmt(12).(SwitchCase).toString() = "default: "
					and obj_4.getStmt(13).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__bad_size_call_parameter")
				)
				and obj_3.getExpr().(SizeofExprOperator).getValue()="8"
			)
		)
		and obj_0.getStmt(3).(ExprStmt).getExpr().(VariableAccess).getTarget()=vpscr_ret___1483
	)
	and exists(NEExpr obj_5 | obj_5=target_4.getParent() |
		obj_5.getRightOperand().(VariableAccess).getTarget()=vt_1447
		and obj_5.getParent().(IfStmt).getThen()=target_15
	)
}

predicate func_5(Variable vt_1447, VariableAccess target_5) {
	target_5.getTarget()=vt_1447
	and target_5.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(Variable vt_1447, ExprStmt target_15, EqualityOperation target_6) {
	target_6.getLeftOperand() instanceof StmtExpr
	and target_6.getRightOperand().(VariableAccess).getTarget()=vt_1447
	and target_6.getParent().(IfStmt).getThen()=target_15
}

predicate func_7(Variable vt_1447, FunctionCall target_7) {
	exists(AddressOfExpr obj_0 | obj_0=target_7.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="timer"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vt_1447
		)
	)
	and target_7.getTarget().hasName("hrtimer_cancel")
}

predicate func_8(Variable v___p_1485, Function func, DoStmt target_8) {
	exists(BlockStmt obj_0 | obj_0=target_8.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getThen() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(1) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("kvfree_call_rcu")
						and obj_4.getArgument(1).(VariableAccess).getTarget()=v___p_1485
					)
				)
				and obj_2.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
			)
			and obj_1.getCondition().(VariableAccess).getTarget()=v___p_1485
		)
	)
	and target_8.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

/*predicate func_10(Variable v___p_1485, IfStmt target_10) {
	exists(BlockStmt obj_0 | obj_0=target_10.getThen() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(IfStmt obj_3 | obj_3=obj_2.getStmt(1) |
					obj_3.getCondition().(NotExpr).getValue()="0"
					and obj_3.getThen().(ExprStmt).getExpr() instanceof FunctionCall
				)
			)
			and obj_1.getCondition().(Literal).getValue()="0"
		)
		and exists(ExprStmt obj_4 | obj_4=obj_0.getStmt(1) |
			exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
				exists(AddressOfExpr obj_6 | obj_6=obj_5.getArgument(0) |
					exists(ValueFieldAccess obj_7 | obj_7=obj_6.getOperand() |
						obj_7.getTarget().getName()="rcu"
						and obj_7.getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
					)
				)
				and obj_5.getTarget().hasName("kvfree_call_rcu")
				and obj_5.getArgument(1).(VariableAccess).getTarget()=v___p_1485
			)
		)
	)
	and target_10.getCondition().(VariableAccess).getTarget()=v___p_1485
}

*/
/*predicate func_11(VariableAccess target_16, Function func, DoStmt target_11) {
	exists(BlockStmt obj_0 | obj_0=target_11.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(1) |
			obj_1.getCondition().(NotExpr).getValue()="0"
			and obj_1.getThen().(ExprStmt).getExpr() instanceof FunctionCall
		)
	)
	and target_11.getCondition().(Literal).getValue()="0"
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
	and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_13(Function func, IfStmt target_13) {
	target_13.getCondition().(NotExpr).getValue()="0"
	and target_13.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and target_13.getEnclosingFunction() = func
}

*/
/*predicate func_14(Variable v___p_1485, VariableAccess target_16, ExprStmt target_14) {
	exists(FunctionCall obj_0 | obj_0=target_14.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="cb"
					and obj_3.getQualifier().(VariableAccess).getTarget()=v___p_1485
				)
				and obj_2.getTarget().getName()="rcu"
			)
		)
		and obj_0.getTarget().hasName("kvfree_call_rcu")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=v___p_1485
	)
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
}

*/
predicate func_15(Function func, ExprStmt target_15) {
	target_15.getExpr() instanceof FunctionCall
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Variable v___p_1485, BlockStmt target_17, VariableAccess target_16) {
	target_16.getTarget()=v___p_1485
	and target_16.getParent().(IfStmt).getThen()=target_17
}

predicate func_17(Function func, BlockStmt target_17) {
	target_17.getStmt(0) instanceof DoStmt
	and target_17.getStmt(1) instanceof ExprStmt
	and target_17.getEnclosingFunction() = func
}

from Function func, Variable vt_1447, Variable vpscr_ret___1483, Variable v__vpp_verify_1483, Variable v___p_1485, VariableAccess target_0, StmtExpr target_4, VariableAccess target_5, EqualityOperation target_6, FunctionCall target_7, DoStmt target_8, ExprStmt target_15, VariableAccess target_16, BlockStmt target_17
where
func_0(v___p_1485, target_0)
and not func_2(func)
and not func_3(vt_1447)
and func_4(vt_1447, vpscr_ret___1483, v__vpp_verify_1483, target_15, target_4)
and func_5(vt_1447, target_5)
and func_6(vt_1447, target_15, target_6)
and func_7(vt_1447, target_7)
and func_8(v___p_1485, func, target_8)
and func_15(func, target_15)
and func_16(v___p_1485, target_17, target_16)
and func_17(func, target_17)
and vt_1447.getType().hasName("bpf_hrtimer *")
and vpscr_ret___1483.getType().hasName("bpf_hrtimer *")
and v__vpp_verify_1483.getType().hasName("const void *")
and v___p_1485.getType().hasName("bpf_hrtimer *")
and vt_1447.(LocalVariable).getFunction() = func
and vpscr_ret___1483.(LocalVariable).getFunction() = func
and v__vpp_verify_1483.(LocalVariable).getFunction() = func
and v___p_1485.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
