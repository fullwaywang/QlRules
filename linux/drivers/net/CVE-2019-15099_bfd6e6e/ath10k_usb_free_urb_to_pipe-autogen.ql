/**
 * @name linux-bfd6e6e6c5d2ee43a3d9902b36e01fc7527ebb27-ath10k_usb_free_urb_to_pipe
 * @id cpp/linux/bfd6e6e6c5d2ee43a3d9902b36e01fc7527ebb27/ath10k-usb-free-urb-to-pipe
 * @description linux-bfd6e6e6c5d2ee43a3d9902b36e01fc7527ebb27-drivers/net/wireless/ath/ath10k/usb.c-ath10k_usb_free_urb_to_pipe CVE-2019-15099
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpipe_53, AddressOfExpr target_1, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ar_usb"
		and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_53
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpipe_53, AddressOfExpr target_1) {
		target_1.getOperand().(PointerFieldAccess).getTarget().getName()="cs_lock"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ar_usb"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_53
		and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

from Function func, Parameter vpipe_53, AddressOfExpr target_1
where
not func_0(vpipe_53, target_1, func)
and func_1(vpipe_53, target_1)
and vpipe_53.getType().hasName("ath10k_usb_pipe *")
and vpipe_53.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
