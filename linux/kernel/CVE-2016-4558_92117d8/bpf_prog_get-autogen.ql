/**
 * @name linux-92117d8443bc5afacc8d5ba82e541946310f106e-bpf_prog_get
 * @id cpp/linux/92117d8443bc5afacc8d5ba82e541946310f106e/bpf-prog-get
 * @description linux-92117d8443bc5afacc8d5ba82e541946310f106e-kernel/bpf/syscall.c-bpf_prog_get CVE-2016-4558
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vprog_667, ReturnStmt target_3, ReturnStmt target_4) {
	exists(AssignExpr target_0 |
		target_0.getLValue().(VariableAccess).getTarget()=vprog_667
		and target_0.getRValue().(FunctionCall).getTarget().hasName("bpf_prog_inc")
		and target_0.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vprog_667
		and target_3.getExpr().(VariableAccess).getLocation().isBefore(target_0.getLValue().(VariableAccess).getLocation())
		and target_0.getLValue().(VariableAccess).getLocation().isBefore(target_4.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(Variable vprog_667, VariableAccess target_1) {
		target_1.getTarget()=vprog_667
		and target_1.getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vprog_667, FunctionCall target_2) {
		target_2.getTarget().hasName("atomic_inc")
		and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="refcnt"
		and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="aux"
		and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vprog_667
}

predicate func_3(Variable vprog_667, FunctionCall target_5, ReturnStmt target_3) {
		target_3.getExpr().(VariableAccess).getTarget()=vprog_667
		and target_3.getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vprog_667, Function func, ReturnStmt target_4) {
		target_4.getExpr().(VariableAccess).getTarget()=vprog_667
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vprog_667, FunctionCall target_5) {
		target_5.getTarget().hasName("IS_ERR")
		and target_5.getArgument(0).(VariableAccess).getTarget()=vprog_667
}

from Function func, Variable vprog_667, VariableAccess target_1, FunctionCall target_2, ReturnStmt target_3, ReturnStmt target_4, FunctionCall target_5
where
not func_0(vprog_667, target_3, target_4)
and func_1(vprog_667, target_1)
and func_2(vprog_667, target_2)
and func_3(vprog_667, target_5, target_3)
and func_4(vprog_667, func, target_4)
and func_5(vprog_667, target_5)
and vprog_667.getType().hasName("bpf_prog *")
and vprog_667.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
