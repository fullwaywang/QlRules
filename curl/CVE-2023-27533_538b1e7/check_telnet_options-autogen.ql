/**
 * @name curl-538b1e79a6e7b-check_telnet_options
 * @id cpp/curl/538b1e79a6e7b/check-telnet-options
 * @description curl-538b1e79a6e7b-lib/telnet.c-check_telnet_options CVE-2023-27533
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdata_773, ValueFieldAccess target_3, ValueFieldAccess target_4, PointerFieldAccess target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("str_is_nonascii")
		and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user"
		and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="conn"
		and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_773
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable varg_798, VariableAccess target_6, ExprStmt target_7, ExprStmt target_8) {
	exists(IfStmt target_1 |
		target_1.getCondition().(FunctionCall).getTarget().hasName("str_is_nonascii")
		and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=varg_798
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vdata_773, ValueFieldAccess target_3) {
		target_3.getTarget().getName()="user"
		and target_3.getQualifier().(ValueFieldAccess).getTarget().getName()="aptr"
		and target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_773
}

predicate func_4(Parameter vdata_773, ValueFieldAccess target_4) {
		target_4.getTarget().getName()="aptr"
		and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_773
}

predicate func_5(Parameter vdata_773, PointerFieldAccess target_5) {
		target_5.getTarget().getName()="user"
		and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="conn"
		and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_773
}

predicate func_6(Variable vsep_799, VariableAccess target_6) {
		target_6.getTarget()=vsep_799
}

predicate func_7(Variable varg_798, Variable vsep_799, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=varg_798
		and target_7.getExpr().(AssignExpr).getRValue().(PrefixIncrExpr).getOperand().(VariableAccess).getTarget()=vsep_799
}

predicate func_8(Variable varg_798, ExprStmt target_8) {
		target_8.getExpr().(FunctionCall).getTarget().hasName("strncpy")
		and target_8.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="subopt_ttype"
		and target_8.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("TELNET *")
		and target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=varg_798
		and target_8.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="31"
}

from Function func, Variable varg_798, Variable vsep_799, Parameter vdata_773, ValueFieldAccess target_3, ValueFieldAccess target_4, PointerFieldAccess target_5, VariableAccess target_6, ExprStmt target_7, ExprStmt target_8
where
not func_0(vdata_773, target_3, target_4, target_5)
and not func_1(varg_798, target_6, target_7, target_8)
and func_3(vdata_773, target_3)
and func_4(vdata_773, target_4)
and func_5(vdata_773, target_5)
and func_6(vsep_799, target_6)
and func_7(varg_798, vsep_799, target_7)
and func_8(varg_798, target_8)
and varg_798.getType().hasName("char *")
and vsep_799.getType().hasName("char *")
and vdata_773.getType().hasName("Curl_easy *")
and varg_798.(LocalVariable).getFunction() = func
and vsep_799.(LocalVariable).getFunction() = func
and vdata_773.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
