commit 770cacc75b0091ece17349195d72133912c1ca7c
Author: Marc Zyngier <maz@kernel.org>
Date:   Fri Aug 9 15:44:07 2024 +0300

    usb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()
    
    commit dcdb52d948f3a17ccd3fce757d9bd981d7c32039 upstream.
    
    If xhci_mem_init() fails, it calls into xhci_mem_cleanup() to mop
    up the damage. If it fails early enough, before xhci->interrupters
    is allocated but after xhci->max_interrupters has been set, which
    happens in most (all?) cases, things get uglier, as xhci_mem_cleanup()
    unconditionally derefences xhci->interrupters. With prejudice.
    
    Gate the interrupt freeing loop with a check on xhci->interrupters
    being non-NULL.
    
    Found while debugging a DMA allocation issue that led the XHCI driver
    on this exact path.
    
    Fixes: c99b38c41234 ("xhci: add support to allocate several interrupters")
    Cc: Mathias Nyman <mathias.nyman@linux.intel.com>
    Cc: Wesley Cheng <quic_wcheng@quicinc.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: stable@vger.kernel.org # 6.8+
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20240809124408.505786-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/host/xhci-mem.c b/drivers/usb/host/xhci-mem.c
index 3100219d6496..f591ddd08662 100644
--- a/drivers/usb/host/xhci-mem.c
+++ b/drivers/usb/host/xhci-mem.c
@@ -1877,7 +1877,7 @@ void xhci_mem_cleanup(struct xhci_hcd *xhci)
 
 	cancel_delayed_work_sync(&xhci->cmd_timer);
 
-	for (i = 0; i < xhci->max_interrupters; i++) {
+	for (i = 0; xhci->interrupters && i < xhci->max_interrupters; i++) {
 		if (xhci->interrupters[i]) {
 			xhci_remove_interrupter(xhci, xhci->interrupters[i]);
 			xhci_free_interrupter(xhci, xhci->interrupters[i]);
