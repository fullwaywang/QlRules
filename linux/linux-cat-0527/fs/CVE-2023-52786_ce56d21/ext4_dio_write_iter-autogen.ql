/**
 * @name linux-ce56d21355cd6f6937aca32f1f44ca749d1e4808-ext4_dio_write_iter
 * @id cpp/linux/ce56d21355cd6f6937aca32f1f44ca749d1e4808/ext4-dio-write-iter
 * @description linux-ce56d21355cd6f6937aca32f1f44ca749d1e4808-fs/ext4/file.c-ext4_dio_write_iter CVE-2023-52786
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinode_532, IfStmt target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("ext4_clear_inode_state")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_532
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_1.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_1.getEnclosingFunction() = func
}

from Function func, Variable vinode_532, ExprStmt target_0, IfStmt target_1
where
func_0(vinode_532, target_1, target_0)
and func_1(func, target_1)
and vinode_532.getType().hasName("inode *")
and vinode_532.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
