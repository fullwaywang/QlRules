/**
 * @name linux-06580b33c183c9f98e2a2ca96a86137179032c08-__hns_roce_free_irq
 * @id cpp/linux/06580b33c183c9f98e2a2ca96a86137179032c08/--hns-roce-free-irq
 * @description linux-06580b33c183c9f98e2a2ca96a86137179032c08-drivers/infiniband/hw/hns/hns_roce_hw_v2.c-__hns_roce_free_irq CVE-2024-43872
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vi_6621, Parameter vhr_dev_6617, PostfixIncrExpr target_2, ValueFieldAccess target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getGreaterOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="caps"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vhr_dev_6617
			)
			and obj_1.getTarget().getName()="num_comp_vectors"
		)
		and obj_0.getLesserOperand().(VariableAccess).getTarget()=vi_6621
	)
	and exists(ExprStmt obj_3 | obj_3=target_0.getThen() |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			exists(AddressOfExpr obj_5 | obj_5=obj_4.getArgument(0) |
				exists(ValueFieldAccess obj_6 | obj_6=obj_5.getOperand() |
					exists(ArrayExpr obj_7 | obj_7=obj_6.getQualifier() |
						obj_7.getArrayBase().(ValueFieldAccess).getTarget().getName()="eq"
						and obj_7.getArrayOffset().(VariableAccess).getTarget()=vi_6621
					)
					and obj_6.getTarget().getName()="work"
				)
			)
			and obj_4.getTarget().hasName("cancel_work_sync")
		)
	)
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation())
	and target_4.getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vi_6621, Parameter vhr_dev_6617, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getQualifier() |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="eq_table"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vhr_dev_6617
					)
					and obj_3.getTarget().getName()="eq"
				)
				and obj_2.getArrayOffset().(VariableAccess).getTarget()=vi_6621
			)
			and obj_1.getTarget().getName()="irq"
		)
		and exists(AddressOfExpr obj_5 | obj_5=obj_0.getArgument(1) |
			exists(ArrayExpr obj_6 | obj_6=obj_5.getOperand() |
				exists(ValueFieldAccess obj_7 | obj_7=obj_6.getArrayBase() |
					exists(PointerFieldAccess obj_8 | obj_8=obj_7.getQualifier() |
						obj_8.getTarget().getName()="eq_table"
						and obj_8.getQualifier().(VariableAccess).getTarget()=vhr_dev_6617
					)
					and obj_7.getTarget().getName()="eq"
				)
				and obj_6.getArrayOffset().(VariableAccess).getTarget()=vi_6621
			)
		)
		and obj_0.getTarget().hasName("free_irq")
	)
}

predicate func_2(Variable vi_6621, PostfixIncrExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vi_6621
}

predicate func_3(Variable vi_6621, Parameter vhr_dev_6617, ValueFieldAccess target_3) {
	exists(ArrayExpr obj_0 | obj_0=target_3.getQualifier() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getArrayBase() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="eq_table"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vhr_dev_6617
			)
			and obj_1.getTarget().getName()="eq"
		)
		and obj_0.getArrayOffset().(VariableAccess).getTarget()=vi_6621
	)
	and target_3.getTarget().getName()="irq"
}

predicate func_4(Variable vi_6621, Parameter vhr_dev_6617, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				obj_2.getTarget().getName()="irq"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vhr_dev_6617
			)
			and obj_1.getArrayOffset().(VariableAccess).getTarget()=vi_6621
		)
		and obj_0.getTarget().hasName("free_irq")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vhr_dev_6617
	)
}

from Function func, Variable vi_6621, Parameter vhr_dev_6617, ExprStmt target_1, PostfixIncrExpr target_2, ValueFieldAccess target_3, ExprStmt target_4
where
not func_0(vi_6621, vhr_dev_6617, target_2, target_3, target_4)
and func_1(vi_6621, vhr_dev_6617, target_1)
and func_2(vi_6621, target_2)
and func_3(vi_6621, vhr_dev_6617, target_3)
and func_4(vi_6621, vhr_dev_6617, target_4)
and vi_6621.getType().hasName("int")
and vhr_dev_6617.getType().hasName("hns_roce_dev *")
and vi_6621.(LocalVariable).getFunction() = func
and vhr_dev_6617.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
