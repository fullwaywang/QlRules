/**
 * @name curl-48d7064a49148f0394-Curl_cookie_add
 * @id cpp/curl/48d7064a49148f0394/curl-cookie-add
 * @description curl-48d7064a49148f0394-lib/cookie.c-Curl_cookie_add CVE-2022-32205
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(DoStmt target_0 |
		target_0.getCondition().(Literal).getValue()="0"
		and (func.getEntryPoint().(BlockStmt).getStmt(9)=target_0 or func.getEntryPoint().(BlockStmt).getStmt(9).getFollowingStmt()=target_0))
}

predicate func_1(Parameter vdata_455, ExprStmt target_3, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getTarget().getName()="setcookies"
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="req"
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_455
		and target_1.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="50"
		and target_1.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and (func.getEntryPoint().(BlockStmt).getStmt(10)=target_1 or func.getEntryPoint().(BlockStmt).getStmt(10).getFollowingStmt()=target_1)
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vdata_455, VariableAccess target_4, ExprStmt target_5) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="setcookies"
		and target_2.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="req"
		and target_2.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_455
		and target_2.getParent().(IfStmt).getCondition()=target_4
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vdata_455, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("Curl_infof")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_455
		and target_3.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="oversized cookie dropped, name/val %zu + %zu bytes"
		and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("size_t")
		and target_3.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("size_t")
}

predicate func_4(Parameter vhttpheader_462, VariableAccess target_4) {
		target_4.getTarget()=vhttpheader_462
}

predicate func_5(Parameter vdata_455, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("Curl_infof")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_455
		and target_5.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="skipped cookie with bad tailmatch domain: %s"
		and target_5.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("const char *")
}

from Function func, Parameter vhttpheader_462, Parameter vdata_455, ExprStmt target_3, VariableAccess target_4, ExprStmt target_5
where
not func_0(func)
and not func_1(vdata_455, target_3, func)
and not func_2(vdata_455, target_4, target_5)
and func_3(vdata_455, target_3)
and func_4(vhttpheader_462, target_4)
and func_5(vdata_455, target_5)
and vhttpheader_462.getType().hasName("bool")
and vdata_455.getType().hasName("Curl_easy *")
and vhttpheader_462.getFunction() = func
and vdata_455.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
