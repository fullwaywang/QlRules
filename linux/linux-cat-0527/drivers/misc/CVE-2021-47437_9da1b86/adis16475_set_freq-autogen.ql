/**
 * @name linux-9da1b86865ab4376408c58cd9fec332c8bdb5c73-adis16475_set_freq
 * @id cpp/linux/9da1b86865ab4376408c58cd9fec332c8bdb5c73/adis16475-set-freq
 * @description linux-9da1b86865ab4376408c58cd9fec332c8bdb5c73-drivers/iio/imu/adis16475.c-adis16475_set_freq CVE-2021-47437
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vst_291, Variable vdec_293, FunctionCall target_0) {
	target_0.getTarget().hasName("adis_write_reg_16")
	and not target_0.getTarget().hasName("__adis_write_reg_16")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="adis"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vst_291
	and target_0.getArgument(1).(Literal).getValue()="100"
	and target_0.getArgument(2).(VariableAccess).getTarget()=vdec_293
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_1(Parameter vst_291, ExprStmt target_2, AddressOfExpr target_3, AddressOfExpr target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("adis_dev_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="adis"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vst_291
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vst_291, Variable vdec_293, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("assign_bit")
	and target_2.getExpr().(FunctionCall).getArgument(0).(BinaryBitwiseOperation).getValue()="1"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lsb_flag"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vst_291
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vdec_293
}

predicate func_3(Parameter vst_291, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="adis"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vst_291
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_4(Parameter vst_291, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="lsb_flag"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vst_291
}

from Function func, Parameter vst_291, Variable vdec_293, FunctionCall target_0, ExprStmt target_2, AddressOfExpr target_3, AddressOfExpr target_4
where
func_0(vst_291, vdec_293, target_0)
and not func_1(vst_291, target_2, target_3, target_4, func)
and func_2(vst_291, vdec_293, target_2)
and func_3(vst_291, target_3)
and func_4(vst_291, target_4)
and vst_291.getType().hasName("adis16475 *")
and vdec_293.getType().hasName("u16")
and vst_291.getFunction() = func
and vdec_293.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
