/**
 * @name linux-8d9da10a392a32368392f7a16775e1f36e2a5346-__aafs_profile_mkdir
 * @id cpp/linux/8d9da10a392a32368392f7a16775e1f36e2a5346/--aafs-profile-mkdir
 * @description linux-8d9da10a392a32368392f7a16775e1f36e2a5346-security/apparmor/apparmorfs.c-__aafs_profile_mkdir CVE-2024-46721
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdent_1586, Variable verror_1587, NotExpr target_1, ExprStmt target_2) {
exists(IfStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getLValue().(VariableAccess).getTarget()=verror_1587
				and obj_2.getRValue().(UnaryMinusExpr).getValue()="-2"
			)
		)
		and obj_0.getStmt(1).(GotoStmt).getName() ="fail2"
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(3)=target_0
			and obj_4.getCondition()=target_1
		)
	)
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vdent_1586
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget().getType().hasName("dentry *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vdent_1586, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				obj_2.getTarget().getName()="dents"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("aa_profile *")
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vdent_1586
	)
}

from Function func, Variable vdent_1586, Variable verror_1587, NotExpr target_1, ExprStmt target_2
where
not func_0(vdent_1586, verror_1587, target_1, target_2)
and func_1(func, target_1)
and func_2(vdent_1586, target_2)
and vdent_1586.getType().hasName("dentry *")
and verror_1587.getType().hasName("int")
and vdent_1586.(LocalVariable).getFunction() = func
and verror_1587.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
