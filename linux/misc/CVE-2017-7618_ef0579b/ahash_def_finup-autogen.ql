/**
 * @name linux-ef0579b64e93188710d48667cb5e014926af9f1b-ahash_def_finup
 * @id cpp/linux/ef0579b64e93188710d48667cb5e014926af9f1b/ahash-def-finup
 * @description linux-ef0579b64e93188710d48667cb5e014926af9f1b-crypto/ahash.c-ahash_def_finup CVE-2017-7618
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_409, Variable verr_412, ExprStmt target_1, FunctionCall target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=verr_412
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-115"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=verr_412
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-16"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ahash_request_flags")
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_409
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1024"
	and target_0.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_412
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vreq_409, Variable verr_412, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_412
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="update"
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("crypto_ahash *")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vreq_409
}

predicate func_2(Parameter vreq_409, Variable verr_412, FunctionCall target_2) {
	target_2.getTarget().hasName("ahash_def_finup_finish1")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vreq_409
	and target_2.getArgument(1).(VariableAccess).getTarget()=verr_412
}

from Function func, Parameter vreq_409, Variable verr_412, ExprStmt target_1, FunctionCall target_2
where
not func_0(vreq_409, verr_412, target_1, target_2, func)
and func_1(vreq_409, verr_412, target_1)
and func_2(vreq_409, verr_412, target_2)
and vreq_409.getType().hasName("ahash_request *")
and verr_412.getType().hasName("int")
and vreq_409.getFunction() = func
and verr_412.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
