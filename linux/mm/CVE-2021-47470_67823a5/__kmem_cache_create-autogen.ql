/**
 * @name linux-67823a544414def2a36c212abadb55b23bcda00c-__kmem_cache_create
 * @id cpp/linux/67823a544414def2a36c212abadb55b23bcda00c/--kmem-cache-create
 * @description linux-67823a544414def2a36c212abadb55b23bcda00c-mm/slub.c-__kmem_cache_create CVE-2021-47470
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vs_4877, VariableAccess target_3, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("__kmem_cache_release")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_4877
	and target_1.getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Variable verr_4879, Function func, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=verr_4879
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable verr_4879, ExprStmt target_1, VariableAccess target_3) {
	target_3.getTarget()=verr_4879
	and target_3.getParent().(IfStmt).getThen()=target_1
}

from Function func, Variable verr_4879, Parameter vs_4877, ExprStmt target_1, ReturnStmt target_2, VariableAccess target_3
where
func_1(vs_4877, target_3, target_1)
and func_2(verr_4879, func, target_2)
and func_3(verr_4879, target_1, target_3)
and verr_4879.getType().hasName("int")
and vs_4877.getType().hasName("kmem_cache *")
and verr_4879.(LocalVariable).getFunction() = func
and vs_4877.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
