/**
 * @name linux-1871c6020d7308afb99127bba51f04548e7ca84e-pio_copy_data
 * @id cpp/linux/1871c6020d7308afb99127bba51f04548e7ca84e/pio-copy-data
 * @description linux-1871c6020d7308afb99127bba51f04548e7ca84e-arch/x86/kvm/x86.c-pio_copy_data CVE-2010-0298
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvcpu_3439, Variable vq_3442) {
	exists(AddressOfExpr target_0 |
		target_0.getOperand().(VariableAccess).getType().hasName("u32")
		and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvm_write_guest_virt")
		and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vq_3442
		and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
		and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vvcpu_3439)
}

predicate func_1(Parameter vvcpu_3439, Variable vq_3442) {
	exists(AddressOfExpr target_1 |
		target_1.getOperand().(VariableAccess).getType().hasName("u32")
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvm_read_guest_virt")
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vq_3442
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vvcpu_3439)
}

predicate func_2(Variable vret_3444, Parameter vvcpu_3439, Variable vq_3442, ExprStmt target_3, ReturnStmt target_4, Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vret_3444
		and target_2.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="2"
		and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvm_inject_page_fault")
		and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3439
		and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vq_3442
		and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("u32")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_2.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(VariableAccess).getLocation()))
}

predicate func_3(Variable vret_3444, Parameter vvcpu_3439, Variable vq_3442, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_3444
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvm_read_guest_virt")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vq_3442
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vvcpu_3439
}

predicate func_4(Variable vret_3444, ReturnStmt target_4) {
		target_4.getExpr().(VariableAccess).getTarget()=vret_3444
}

from Function func, Variable vret_3444, Parameter vvcpu_3439, Variable vq_3442, ExprStmt target_3, ReturnStmt target_4
where
not func_0(vvcpu_3439, vq_3442)
and not func_1(vvcpu_3439, vq_3442)
and not func_2(vret_3444, vvcpu_3439, vq_3442, target_3, target_4, func)
and func_3(vret_3444, vvcpu_3439, vq_3442, target_3)
and func_4(vret_3444, target_4)
and vret_3444.getType().hasName("int")
and vvcpu_3439.getType().hasName("kvm_vcpu *")
and vq_3442.getType().hasName("gva_t")
and vret_3444.(LocalVariable).getFunction() = func
and vvcpu_3439.getFunction() = func
and vq_3442.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
