/**
 * @name linux-4942642080ea82d99ab5b653abb9a12b7ba31f4a-filemap_fault
 * @id cpp/linux/4942642080ea82d99ab5b653abb9a12b7ba31f4a/filemap-fault
 * @description linux-4942642080ea82d99ab5b653abb9a12b7ba31f4a-mm/filemap.c-filemap_fault CVE-2014-8171
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, DeclStmt target_0) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Variable vmemcg_oom_1619, LogicalAndExpr target_5, DeclStmt target_0, ExprStmt target_2, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmemcg_oom_1619
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mem_cgroup_toggle_oom")
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_2(Variable vmemcg_oom_1619, LogicalAndExpr target_5, ExprStmt target_1, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("mem_cgroup_toggle_oom")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmemcg_oom_1619
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_3(Variable vmemcg_oom_1619, NotExpr target_6, ExprStmt target_2, ExprStmt target_4, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmemcg_oom_1619
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mem_cgroup_toggle_oom")
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_4(Variable vmemcg_oom_1619, NotExpr target_6, ExprStmt target_3, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("mem_cgroup_toggle_oom")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmemcg_oom_1619
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_5(Function func, LogicalAndExpr target_5) {
		target_5.getAnOperand().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_5.getAnOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("page *")
		and target_5.getAnOperand().(FunctionCall).getArgument(1).(Literal).getValue()="1"
		and target_5.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_5.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("vm_fault *")
		and target_5.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="64"
		and target_5.getEnclosingFunction() = func
}

predicate func_6(BlockStmt target_7, Function func, NotExpr target_6) {
		target_6.getOperand().(VariableAccess).getTarget().getType().hasName("page *")
		and target_6.getParent().(IfStmt).getThen()=target_7
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, BlockStmt target_7) {
		target_7.getStmt(0) instanceof ExprStmt
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("do_sync_mmap_readahead")
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("file_ra_state *")
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("file *")
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_7.getEnclosingFunction() = func
}

from Function func, Variable vmemcg_oom_1619, DeclStmt target_0, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, LogicalAndExpr target_5, NotExpr target_6, BlockStmt target_7
where
func_0(func, target_0)
and func_1(vmemcg_oom_1619, target_5, target_0, target_2, target_1)
and func_2(vmemcg_oom_1619, target_5, target_1, target_2)
and func_3(vmemcg_oom_1619, target_6, target_2, target_4, target_3)
and func_4(vmemcg_oom_1619, target_6, target_3, target_4)
and func_5(func, target_5)
and func_6(target_7, func, target_6)
and func_7(func, target_7)
and vmemcg_oom_1619.getType().hasName("bool")
and vmemcg_oom_1619.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
