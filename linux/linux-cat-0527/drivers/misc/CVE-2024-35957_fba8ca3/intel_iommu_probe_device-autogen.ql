/**
 * @name linux-fba8ca3e6f608b92e54271fdbd3ce569361939fc-intel_iommu_probe_device
 * @id cpp/linux/fba8ca3e6f608b92e54271fdbd3ce569361939fc/intel-iommu-probe-device
 * @description linux-fba8ca3e6f608b92e54271fdbd3ce569361939fc-drivers/iommu/intel/iommu.c-intel_iommu_probe_device CVE-2024-35957
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpdev_4325, ExprStmt target_1, LogicalAndExpr target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vpdev_4325
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("pci_ats_supported")
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpdev_4325
	and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_0.getThen().(BlockStmt).getStmt(1) instanceof IfStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vinfo_4326, Variable viommu_4327, Variable vret_4329, Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_4329
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("device_rbtree_insert")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=viommu_4327
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinfo_4326
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vret_4329, Function func, IfStmt target_2) {
	target_2.getCondition().(VariableAccess).getTarget()=vret_4329
	and target_2.getThen().(GotoStmt).getName() ="free"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vpdev_4325, Variable vinfo_4326, Variable viommu_4327, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ats_supported"
	and target_3.getLeftOperand().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_4326
	and target_3.getLeftOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ecap"
	and target_3.getLeftOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=viommu_4327
	and target_3.getLeftOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="29"
	and target_3.getLeftOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_3.getRightOperand().(FunctionCall).getTarget().hasName("pci_pri_supported")
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpdev_4325
}

from Function func, Variable vpdev_4325, Variable vinfo_4326, Variable viommu_4327, Variable vret_4329, ExprStmt target_1, IfStmt target_2, LogicalAndExpr target_3
where
not func_0(vpdev_4325, target_1, target_3, func)
and func_1(vinfo_4326, viommu_4327, vret_4329, func, target_1)
and func_2(vret_4329, func, target_2)
and func_3(vpdev_4325, vinfo_4326, viommu_4327, target_3)
and vpdev_4325.getType().hasName("pci_dev *")
and vinfo_4326.getType().hasName("device_domain_info *")
and viommu_4327.getType().hasName("intel_iommu *")
and vret_4329.getType().hasName("int")
and vpdev_4325.(LocalVariable).getFunction() = func
and vinfo_4326.(LocalVariable).getFunction() = func
and viommu_4327.(LocalVariable).getFunction() = func
and vret_4329.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
