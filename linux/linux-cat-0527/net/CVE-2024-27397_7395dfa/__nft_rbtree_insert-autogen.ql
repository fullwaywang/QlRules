/**
 * @name linux-7395dfacfff65e9938ac0889dafa1ab01e987d15-__nft_rbtree_insert
 * @id cpp/linux/7395dfacfff65e9938ac0889dafa1ab01e987d15/--nft-rbtree-insert
 * @description linux-7395dfacfff65e9938ac0889dafa1ab01e987d15-net/netfilter/nft_set_rbtree.c-__nft_rbtree_insert CVE-2024-27397
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrbe_311, BlockStmt target_2, FunctionCall target_0) {
	target_0.getTarget().hasName("nft_set_elem_expired")
	and not target_0.getTarget().hasName("__nft_set_elem_expired")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ext"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrbe_311
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("nft_set_elem_active")
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ext"
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrbe_311
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u8")
	and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vrbe_311, BlockStmt target_2) {
	target_2.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("const nft_rbtree_elem *")
	and target_2.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nft_rbtree_gc_elem")
	and target_2.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const nft_set *")
	and target_2.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("nft_rbtree *")
	and target_2.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vrbe_311
	and target_2.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("u8")
}

from Function func, Variable vrbe_311, FunctionCall target_0, BlockStmt target_2
where
func_0(vrbe_311, target_2, target_0)
and func_2(vrbe_311, target_2)
and vrbe_311.getType().hasName("nft_rbtree_elem *")
and vrbe_311.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
