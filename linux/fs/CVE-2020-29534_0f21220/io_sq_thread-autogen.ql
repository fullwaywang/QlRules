/**
 * @name linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-io_sq_thread
 * @id cpp/linux/0f2122045b946241a9e549c2a76cea54fa58a7ff/io-sq-thread
 * @description linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-fs/io_uring.c-io_sq_thread CVE-2020-29534
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func, UnaryMinusExpr target_1) {
	target_1.getValue()="-1"
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("io_submit_sqes")
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("io_ring_ctx *")
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_1.getEnclosingFunction() = func
}

from Function func, UnaryMinusExpr target_1
where
func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
