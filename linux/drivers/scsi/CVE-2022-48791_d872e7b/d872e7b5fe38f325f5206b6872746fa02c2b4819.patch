commit d872e7b5fe38f325f5206b6872746fa02c2b4819
Author: John Garry <john.garry@huawei.com>
Date:   Thu Jan 27 21:12:51 2022 +0800

    scsi: pm8001: Fix use-after-free for aborted TMF sas_task
    
    [ Upstream commit 61f162aa4381845acbdc7f2be4dfb694d027c018 ]
    
    Currently a use-after-free may occur if a TMF sas_task is aborted before we
    handle the IO completion in mpi_ssp_completion(). The abort occurs due to
    timeout.
    
    When the timeout occurs, the SAS_TASK_STATE_ABORTED flag is set and the
    sas_task is freed in pm8001_exec_internal_tmf_task().
    
    However, if the I/O completion occurs later, the I/O completion still
    thinks that the sas_task is available. Fix this by clearing the ccb->task
    if the TMF times out - the I/O completion handler does nothing if this
    pointer is cleared.
    
    Link: https://lore.kernel.org/r/1643289172-165636-3-git-send-email-john.garry@huawei.com
    Reviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Acked-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/drivers/scsi/pm8001/pm8001_sas.c b/drivers/scsi/pm8001/pm8001_sas.c
index c3bb58885033..75ac4d86d9c4 100644
--- a/drivers/scsi/pm8001/pm8001_sas.c
+++ b/drivers/scsi/pm8001/pm8001_sas.c
@@ -753,8 +753,13 @@ static int pm8001_exec_internal_tmf_task(struct domain_device *dev,
 		res = -TMF_RESP_FUNC_FAILED;
 		/* Even TMF timed out, return direct. */
 		if (task->task_state_flags & SAS_TASK_STATE_ABORTED) {
+			struct pm8001_ccb_info *ccb = task->lldd_task;
+
 			pm8001_dbg(pm8001_ha, FAIL, "TMF task[%x]timeout.\n",
 				   tmf->tmf);
+
+			if (ccb)
+				ccb->task = NULL;
 			goto ex_err;
 		}
 
