/**
 * @name linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-io_uring_get_fd
 * @id cpp/linux/0f2122045b946241a9e549c2a76cea54fa58a7ff/io-uring-get-fd
 * @description linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-io_uring_get_fd CVE-2020-29534
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfile_8576, ExprStmt target_1, ExprStmt target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("io_uring_add_task_file")
		and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_8576
		and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfile_8576
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-12"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vfile_8576, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="file"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ring_sock"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("io_ring_ctx *")
		and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vfile_8576
}

predicate func_2(Variable vfile_8576, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("fd_install")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfile_8576
}

from Function func, Variable vfile_8576, ExprStmt target_1, ExprStmt target_2
where
not func_0(vfile_8576, target_1, target_2, func)
and func_1(vfile_8576, target_1)
and func_2(vfile_8576, target_2)
and vfile_8576.getType().hasName("file *")
and vfile_8576.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
