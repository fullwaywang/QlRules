/**
 * @name linux-e785fa0a164aa11001cba931367c7f94ffaff888-nl80211_set_rekey_data
 * @id cpp/linux/e785fa0a164aa11001cba931367c7f94ffaff888/nl80211-set-rekey-data
 * @description linux-e785fa0a164aa11001cba931367c7f94ffaff888-net/wireless/nl80211.c-nl80211_set_rekey_data CVE-2017-12153
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtb_10893, ExprStmt target_1, ArrayExpr target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_10893
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_10893
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_10893
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_2.getArrayBase().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtb_10893, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nla_parse_nested")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtb_10893
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="attrs"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("genl_info *")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType() instanceof ArrayType
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="extack"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("genl_info *")
}

predicate func_2(Variable vtb_10893, ArrayExpr target_2) {
		target_2.getArrayBase().(VariableAccess).getTarget()=vtb_10893
		and target_2.getParent().(FunctionCall).getParent().(NEExpr).getAnOperand().(FunctionCall).getTarget().hasName("nla_len")
}

from Function func, Variable vtb_10893, ExprStmt target_1, ArrayExpr target_2
where
not func_0(vtb_10893, target_1, target_2, func)
and func_1(vtb_10893, target_1)
and func_2(vtb_10893, target_2)
and vtb_10893.getType().hasName("nlattr *[4]")
and vtb_10893.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
