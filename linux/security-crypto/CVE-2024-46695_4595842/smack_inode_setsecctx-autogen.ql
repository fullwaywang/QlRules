/**
 * @name linux-459584258d47ec3cc6245a82e8a49c9d08eb8b57-smack_inode_setsecctx
 * @id cpp/linux/459584258d47ec3cc6245a82e8a49c9d08eb8b57/smack-inode-setsecctx
 * @description linux-459584258d47ec3cc6245a82e8a49c9d08eb8b57-security/smack/smack_lsm.c-smack_inode_setsecctx CVE-2024-46695
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdentry_4773, Parameter vctx_4773, Parameter vctxlen_4773, Variable vnop_mnt_idmap, FunctionCall target_0) {
	target_0.getTarget().hasName("__vfs_setxattr_noperm")
	and not target_0.getTarget().hasName("__vfs_setxattr_locked")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vnop_mnt_idmap
	and target_0.getArgument(1).(VariableAccess).getTarget()=vdentry_4773
	and target_0.getArgument(2).(StringLiteral).getValue()="security.SMACK64"
	and target_0.getArgument(3).(VariableAccess).getTarget()=vctx_4773
	and target_0.getArgument(4).(VariableAccess).getTarget()=vctxlen_4773
	and target_0.getArgument(5).(Literal).getValue()="0"
}

from Function func, Parameter vdentry_4773, Parameter vctx_4773, Parameter vctxlen_4773, Variable vnop_mnt_idmap, FunctionCall target_0
where
func_0(vdentry_4773, vctx_4773, vctxlen_4773, vnop_mnt_idmap, target_0)
and vdentry_4773.getType().hasName("dentry *")
and vctx_4773.getType().hasName("void *")
and vctxlen_4773.getType().hasName("u32")
and vnop_mnt_idmap.getType().hasName("mnt_idmap")
and vdentry_4773.getFunction() = func
and vctx_4773.getFunction() = func
and vctxlen_4773.getFunction() = func
and not vnop_mnt_idmap.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
