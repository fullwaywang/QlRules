/**
 * @name linux-4f3951242ace5efc7131932e2e01e6ac6baed846-l2cap_sock_setsockopt_old
 * @id cpp/linux/4f3951242ace5efc7131932e2e01e6ac6baed846/l2cap-sock-setsockopt-old
 * @description linux-4f3951242ace5efc7131932e2e01e6ac6baed846-net/bluetooth/l2cap_sock.c-l2cap_sock_setsockopt_old CVE-2024-35965
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable v__UNIQUE_ID_ddebug1779_793, VariableAccess target_1) {
	target_1.getTarget()=v__UNIQUE_ID_ddebug1779_793
	and target_1.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("arch_static_branch_jump")
}

predicate func_2(Variable v__UNIQUE_ID_ddebug1779_793, VariableAccess target_2) {
	target_2.getTarget()=v__UNIQUE_ID_ddebug1779_793
	and target_2.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("arch_static_branch")
}

predicate func_3(Variable v__UNIQUE_ID_ddebug1779_793, VariableAccess target_3) {
	target_3.getTarget()=v__UNIQUE_ID_ddebug1779_793
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="mode 0x%2.2x\n"
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="mode"
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("l2cap_chan *")
}

predicate func_4(Function func, SizeofExprOperator target_4) {
	target_4.getValue()="1"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter voptval_725, Variable vopts_729, Variable vlen_730, BlockStmt target_27, FunctionCall target_5) {
	target_5.getTarget().hasName("copy_from_sockptr")
	and not target_5.getTarget().hasName("bt_copy_from_sockptr")
	and target_5.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopts_729
	and target_5.getArgument(1).(VariableAccess).getTarget()=voptval_725
	and target_5.getArgument(2).(VariableAccess).getTarget()=vlen_730
	and target_5.getParent().(IfStmt).getThen()=target_27
}

predicate func_6(Parameter voptval_725, Variable vopt_731, BlockStmt target_28, FunctionCall target_6) {
	target_6.getTarget().hasName("copy_from_sockptr")
	and not target_6.getTarget().hasName("bt_copy_from_sockptr")
	and target_6.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopt_731
	and target_6.getArgument(1).(VariableAccess).getTarget()=voptval_725
	and target_6.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_6.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_6.getParent().(IfStmt).getThen()=target_28
}

predicate func_9(Function func, SizeofExprOperator target_9) {
	target_9.getValue()="12"
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable verr_730, VariableAccess target_10) {
	target_10.getTarget()=verr_730
	and target_10.getParent().(AssignExpr).getLValue() = target_10
	and target_10.getParent().(AssignExpr).getRValue() instanceof UnaryMinusExpr
}

predicate func_11(Variable verr_730, VariableAccess target_11) {
	target_11.getTarget()=verr_730
	and target_11.getParent().(AssignExpr).getLValue() = target_11
	and target_11.getParent().(AssignExpr).getRValue() instanceof UnaryMinusExpr
}

predicate func_12(Parameter voptlen_725, VariableAccess target_12) {
	target_12.getTarget()=voptlen_725
}

predicate func_13(Parameter voptlen_725, VariableAccess target_13) {
	target_13.getTarget()=voptlen_725
	and target_13.getParent().(LTExpr).getLesserOperand() instanceof SizeofExprOperator
}

predicate func_14(FunctionCall target_5, Function func, BreakStmt target_14) {
	target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_14.getEnclosingFunction() = func
}

predicate func_15(FunctionCall target_6, Function func, BreakStmt target_15) {
	target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_15.getEnclosingFunction() = func
}

predicate func_17(Parameter voptlen_725, Variable vlen_730, VariableAccess target_17) {
	target_17.getTarget()=vlen_730
	and target_17.getParent().(AssignExpr).getLValue() = target_17
	and target_17.getParent().(AssignExpr).getRValue().(BuiltInChooseExpr).getChild(0).(EqualityOperation).getValue()="0"
	and target_17.getParent().(AssignExpr).getRValue().(BuiltInChooseExpr).getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(SizeofExprOperator).getValue()="12"
	and target_17.getParent().(AssignExpr).getRValue().(BuiltInChooseExpr).getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=voptlen_725
	and target_17.getParent().(AssignExpr).getRValue().(BuiltInChooseExpr).getChild(1).(ConditionalExpr).getThen().(SizeofExprOperator).getValue()="12"
	and target_17.getParent().(AssignExpr).getRValue().(BuiltInChooseExpr).getChild(1).(ConditionalExpr).getElse().(VariableAccess).getTarget()=voptlen_725
}

/*predicate func_18(Parameter voptlen_725, Variable vlen_730, Variable v__UNIQUE_ID___x1777_757, Variable v__UNIQUE_ID___y1778_757, BuiltInChooseExpr target_18) {
	target_18.getChild(0).(EqualityOperation).getValue()="0"
	and target_18.getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(SizeofExprOperator).getValue()="12"
	and target_18.getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=voptlen_725
	and target_18.getChild(1).(ConditionalExpr).getThen().(SizeofExprOperator).getValue()="12"
	and target_18.getChild(1).(ConditionalExpr).getElse().(VariableAccess).getTarget()=voptlen_725
	and target_18.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___x1777_757
	and target_18.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___y1778_757
	and target_18.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getThen().(VariableAccess).getTarget()=v__UNIQUE_ID___x1777_757
	and target_18.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getElse().(VariableAccess).getTarget()=v__UNIQUE_ID___y1778_757
	and target_18.getParent().(AssignExpr).getRValue() = target_18
	and target_18.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vlen_730
}

*/
predicate func_19(Parameter voptlen_725, ConditionalExpr target_19) {
	target_19.getCondition().(Literal).getValue()="8"
	and target_19.getThen().(MulExpr).getLeftOperand().(SubExpr).getLeftOperand() instanceof SizeofExprOperator
	and target_19.getThen().(MulExpr).getLeftOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget()=voptlen_725
	and target_19.getThen().(MulExpr).getRightOperand().(Literal).getValue()="0"
	and target_19.getElse().(Literal).getValue()="8"
}

/*predicate func_23(Variable v__UNIQUE_ID___x1777_757, Variable v__UNIQUE_ID___y1778_757, ConditionalExpr target_23) {
	target_23.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___x1777_757
	and target_23.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___y1778_757
	and target_23.getThen().(VariableAccess).getTarget()=v__UNIQUE_ID___x1777_757
	and target_23.getElse().(VariableAccess).getTarget()=v__UNIQUE_ID___y1778_757
}

*/
predicate func_24(Variable verr_730, FunctionCall target_5, ExprStmt target_24) {
	target_24.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_730
	and target_24.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_24.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

/*predicate func_25(Variable verr_730, UnaryMinusExpr target_25) {
	target_25.getValue()="-14"
	and target_25.getParent().(AssignExpr).getRValue() = target_25
	and target_25.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_730
}

*/
predicate func_26(Variable verr_730, FunctionCall target_6, ExprStmt target_26) {
	target_26.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_730
	and target_26.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_26.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_27(FunctionCall target_5, Function func, BlockStmt target_27) {
	target_27.getStmt(0) instanceof ExprStmt
	and target_27.getStmt(1) instanceof BreakStmt
	and target_27.getParent().(IfStmt).getCondition()=target_5
	and target_27.getEnclosingFunction() = func
}

predicate func_28(FunctionCall target_6, Function func, BlockStmt target_28) {
	target_28.getStmt(0) instanceof ExprStmt
	and target_28.getStmt(1) instanceof BreakStmt
	and target_28.getParent().(IfStmt).getCondition()=target_6
	and target_28.getEnclosingFunction() = func
}

from Function func, Parameter voptval_725, Parameter voptlen_725, Variable vopts_729, Variable vlen_730, Variable verr_730, Variable vopt_731, Variable v__UNIQUE_ID___x1777_757, Variable v__UNIQUE_ID___y1778_757, Variable v__UNIQUE_ID_ddebug1779_793, VariableAccess target_1, VariableAccess target_2, VariableAccess target_3, SizeofExprOperator target_4, FunctionCall target_5, FunctionCall target_6, SizeofExprOperator target_9, VariableAccess target_10, VariableAccess target_11, VariableAccess target_12, VariableAccess target_13, BreakStmt target_14, BreakStmt target_15, VariableAccess target_17, ConditionalExpr target_19, ExprStmt target_24, ExprStmt target_26, BlockStmt target_27, BlockStmt target_28
where
func_1(v__UNIQUE_ID_ddebug1779_793, target_1)
and func_2(v__UNIQUE_ID_ddebug1779_793, target_2)
and func_3(v__UNIQUE_ID_ddebug1779_793, target_3)
and func_4(func, target_4)
and func_5(voptval_725, vopts_729, vlen_730, target_27, target_5)
and func_6(voptval_725, vopt_731, target_28, target_6)
and func_9(func, target_9)
and func_10(verr_730, target_10)
and func_11(verr_730, target_11)
and func_12(voptlen_725, target_12)
and func_13(voptlen_725, target_13)
and func_14(target_5, func, target_14)
and func_15(target_6, func, target_15)
and func_17(voptlen_725, vlen_730, target_17)
and func_19(voptlen_725, target_19)
and func_24(verr_730, target_5, target_24)
and func_26(verr_730, target_6, target_26)
and func_27(target_5, func, target_27)
and func_28(target_6, func, target_28)
and voptval_725.getType().hasName("sockptr_t")
and voptlen_725.getType().hasName("unsigned int")
and vopts_729.getType().hasName("l2cap_options")
and vlen_730.getType().hasName("int")
and verr_730.getType().hasName("int")
and vopt_731.getType().hasName("u32")
and v__UNIQUE_ID___x1777_757.getType().hasName("unsigned int")
and v__UNIQUE_ID___y1778_757.getType().hasName("unsigned int")
and v__UNIQUE_ID_ddebug1779_793.getType().hasName("_ddebug")
and voptval_725.getFunction() = func
and voptlen_725.getFunction() = func
and vopts_729.(LocalVariable).getFunction() = func
and vlen_730.(LocalVariable).getFunction() = func
and verr_730.(LocalVariable).getFunction() = func
and vopt_731.(LocalVariable).getFunction() = func
and v__UNIQUE_ID___x1777_757.(LocalVariable).getFunction() = func
and v__UNIQUE_ID___y1778_757.(LocalVariable).getFunction() = func
and v__UNIQUE_ID_ddebug1779_793.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
