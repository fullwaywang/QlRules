/**
 * @name linux-c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9-__do_SAK
 * @id cpp/linux/c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9/--do-sak
 * @description linux-c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9-drivers/tty/tty_io.c-__do_SAK CVE-2020-29660
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_6, Function func) {
exists(DoStmt target_0 |
	target_0.getCondition().(Literal).getValue()="0"
	and target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("unsigned long")
	and target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("_raw_spin_lock_irqsave")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_6.getLocation()))
}

predicate func_1(Parameter vtty_2892, Variable vsession_2898, ExprStmt target_6, ExprStmt target_7, EqualityOperation target_9, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsession_2898
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_pid")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="session"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_2892
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_6.getLocation())
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_9.getLeftOperand().(VariableAccess).getLocation()))
}

/*predicate func_2(Parameter vtty_2892, Variable vsession_2898, ExprStmt target_7) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("get_pid")
	and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="session"
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_2892
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsession_2898
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

*/
predicate func_3(Parameter vtty_2892, ExprStmt target_6) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("spin_unlock_irqrestore")
	and target_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ctrl_lock"
	and target_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_2892
	and target_3.getArgument(1).(VariableAccess).getType().hasName("unsigned long")
	and target_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vsession_2898, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(FunctionCall).getTarget().hasName("put_pid")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsession_2898
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_5(Parameter vtty_2892, Variable vsession_2898, PointerFieldAccess target_5) {
	target_5.getTarget().getName()="session"
	and target_5.getQualifier().(VariableAccess).getTarget()=vtty_2892
	and target_5.getParent().(AssignExpr).getRValue() = target_5
	and target_5.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsession_2898
}

predicate func_6(Parameter vtty_2892, Variable vsession_2898, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsession_2898
	and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="session"
	and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_2892
}

predicate func_7(Parameter vtty_2892, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("tty_ldisc_flush")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtty_2892
}

predicate func_9(Variable vsession_2898, EqualityOperation target_9) {
	target_9.getLeftOperand().(VariableAccess).getTarget()=vsession_2898
	and target_9.getRightOperand() instanceof Literal
}

from Function func, Parameter vtty_2892, Variable vsession_2898, PointerFieldAccess target_5, ExprStmt target_6, ExprStmt target_7, EqualityOperation target_9
where
not func_0(target_6, func)
and not func_1(vtty_2892, vsession_2898, target_6, target_7, target_9, func)
and not func_3(vtty_2892, target_6)
and not func_4(vsession_2898, func)
and func_5(vtty_2892, vsession_2898, target_5)
and func_6(vtty_2892, vsession_2898, target_6)
and func_7(vtty_2892, target_7)
and func_9(vsession_2898, target_9)
and vtty_2892.getType().hasName("tty_struct *")
and vsession_2898.getType().hasName("pid *")
and vtty_2892.getFunction() = func
and vsession_2898.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
