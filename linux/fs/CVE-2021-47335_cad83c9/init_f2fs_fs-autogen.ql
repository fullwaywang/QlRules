/**
 * @name linux-cad83c968c2ebe97905f900326988ed37146c347-init_f2fs_fs
 * @id cpp/linux/cad83c968c2ebe97905f900326988ed37146c347/init-f2fs-fs
 * @description linux-cad83c968c2ebe97905f900326988ed37146c347-fs/f2fs/super.c-init_f2fs_fs CVE-2021-47335
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_4210, ExprStmt target_4, IfStmt target_0) {
	target_0.getCondition().(VariableAccess).getTarget()=verr_4210
	and target_0.getThen().(GotoStmt).getName() ="free_checkpoint_caches"
	and target_0.getLocation().isBefore(target_4.getLocation())
}

predicate func_1(Variable verr_4210, ExprStmt target_5, IfStmt target_6, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_4210
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("f2fs_create_recovery_cache")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_5.getLocation())
	and target_6.getCondition().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable verr_4210, ExprStmt target_4, IfStmt target_0, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(VariableAccess).getTarget()=verr_4210
	and target_2.getThen().(GotoStmt).getName() ="free_recovery_cache"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_4.getLocation())
	and target_0.getCondition().(VariableAccess).getLocation().isBefore(target_2.getCondition().(VariableAccess).getLocation()))
}

predicate func_3(ExprStmt target_7, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("f2fs_destroy_recovery_cache")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_7.getLocation()))
}

predicate func_4(Variable verr_4210, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_4210
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("f2fs_create_garbage_collection_cache")
}

predicate func_5(Variable verr_4210, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_4210
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("f2fs_create_extent_cache")
}

predicate func_6(Variable verr_4210, IfStmt target_6) {
	target_6.getCondition().(VariableAccess).getTarget()=verr_4210
	and target_6.getThen().(GotoStmt).getName() ="free_segment_manager_caches"
}

predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("f2fs_destroy_checkpoint_caches")
	and target_7.getEnclosingFunction() = func
}

from Function func, Variable verr_4210, IfStmt target_0, ExprStmt target_4, ExprStmt target_5, IfStmt target_6, ExprStmt target_7
where
func_0(verr_4210, target_4, target_0)
and not func_1(verr_4210, target_5, target_6, func)
and not func_2(verr_4210, target_4, target_0, func)
and not func_3(target_7, func)
and func_4(verr_4210, target_4)
and func_5(verr_4210, target_5)
and func_6(verr_4210, target_6)
and func_7(func, target_7)
and verr_4210.getType().hasName("int")
and verr_4210.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
