/**
 * @name linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-copy_process
 * @id cpp/linux/0f2122045b946241a9e549c2a76cea54fa58a7ff/copy-process
 * @description linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-copy_process CVE-2020-29534
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vp_1828, AddressOfExpr target_1, AddressOfExpr target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="io_uring"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1828
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vp_1828, AddressOfExpr target_1) {
		target_1.getOperand().(PointerFieldAccess).getTarget().getName()="prev_cputime"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1828
}

predicate func_2(Variable vp_1828, AddressOfExpr target_2) {
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="rss_stat"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1828
}

from Function func, Variable vp_1828, AddressOfExpr target_1, AddressOfExpr target_2
where
not func_0(vp_1828, target_1, target_2, func)
and func_1(vp_1828, target_1)
and func_2(vp_1828, target_2)
and vp_1828.getType().hasName("task_struct *")
and vp_1828.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
