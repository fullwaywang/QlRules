/**
 * @name linux-6b0d6a9b4296fa16a28d10d416db7a770fc03287-br_multicast_add_group
 * @id cpp/linux/6b0d6a9b4296fa16a28d10d416db7a770fc03287/br-multicast-add-group
 * @description linux-6b0d6a9b4296fa16a28d10d416db7a770fc03287-net/bridge/br_multicast.c-br_multicast_add_group CVE-2011-0716
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmp_705, NotExpr target_2, FunctionCall target_3, AddressOfExpr target_4) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("hlist_unhashed")
		and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mglist"
		and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmp_705
		and target_0.getThen() instanceof ExprStmt
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vmp_705, Parameter vbr_701, NotExpr target_2, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("hlist_add_head")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mglist"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmp_705
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mglist"
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbr_701
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, NotExpr target_2) {
		target_2.getOperand().(VariableAccess).getTarget().getType().hasName("net_bridge_port *")
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vmp_705, FunctionCall target_3) {
		target_3.getTarget().hasName("IS_ERR")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vmp_705
}

predicate func_4(Variable vmp_705, AddressOfExpr target_4) {
		target_4.getOperand().(PointerFieldAccess).getTarget().getName()="mglist"
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmp_705
}

from Function func, Variable vmp_705, Parameter vbr_701, ExprStmt target_1, NotExpr target_2, FunctionCall target_3, AddressOfExpr target_4
where
not func_0(vmp_705, target_2, target_3, target_4)
and func_1(vmp_705, vbr_701, target_2, target_1)
and func_2(func, target_2)
and func_3(vmp_705, target_3)
and func_4(vmp_705, target_4)
and vmp_705.getType().hasName("net_bridge_mdb_entry *")
and vbr_701.getType().hasName("net_bridge *")
and vmp_705.(LocalVariable).getFunction() = func
and vbr_701.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
