/**
 * @name linux-2f057db2fb29bc209c103050647562e60554d3d3-ice_vsi_rebuild
 * @id cpp/linux/2f057db2fb29bc209c103050647562e60554d3d3/ice-vsi-rebuild
 * @description linux-2f057db2fb29bc209c103050647562e60554d3d3-drivers/net/ethernet/intel/ice/ice_lib.c-ice_vsi_rebuild CVE-2024-46765
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcoalesce_3152, FunctionCall target_0) {
	target_0.getTarget().hasName("kfree")
	and not target_0.getTarget().hasName("mutex_lock_nested")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vcoalesce_3152
}

predicate func_1(Variable vcoalesce_3152, FunctionCall target_1) {
	target_1.getTarget().hasName("kfree")
	and not target_1.getTarget().hasName("clear_bit")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vcoalesce_3152
}

predicate func_2(ExprStmt target_15, Function func, ExprStmt target_2) {
	target_2.getExpr() instanceof FunctionCall
	and target_15.getLocation().isBefore(target_2.getLocation())
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vvsi_3149, ExprStmt target_20, ExprStmt target_15) {
exists(AddressOfExpr target_3 |
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="xdp_state_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvsi_3149
	)
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_20.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_4(Variable vret_3155, NotExpr target_21, IfStmt target_22) {
exists(ExprStmt target_4 |
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vret_3155
		and obj_0.getRValue() instanceof UnaryMinusExpr
	)
	and exists(BlockStmt obj_1 | obj_1=target_4.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(0)=target_4
			and obj_2.getCondition()=target_21
		)
	)
	and target_22.getCondition().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_5(NotExpr target_21, Function func) {
exists(GotoStmt target_5 |
	exists(BlockStmt obj_0 | obj_0=target_5.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(1)=target_5
			and obj_1.getCondition()=target_21
		)
	)
	and target_5.getName() ="decfg"
	and target_5.getEnclosingFunction() = func
)
}

predicate func_6(Variable vret_3155, VariableAccess target_23, ExprStmt target_24) {
exists(ExprStmt target_6 |
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vret_3155
		and obj_0.getRValue() instanceof FunctionCall
	)
	and exists(BlockStmt obj_1 | obj_1=target_6.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(1)=target_6
			and obj_2.getCondition()=target_23
		)
	)
	and target_24.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_7(VariableAccess target_23, Function func) {
exists(GotoStmt target_7 |
	exists(BlockStmt obj_0 | obj_0=target_7.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(2)=target_7
			and obj_1.getCondition()=target_23
		)
	)
	and target_7.getName() ="free_coalesce"
	and target_7.getEnclosingFunction() = func
)
}

predicate func_9(Parameter vvsi_3149, ExprStmt target_15) {
exists(PointerFieldAccess target_9 |
	target_9.getTarget().getName()="state"
	and target_9.getQualifier().(VariableAccess).getTarget()=vvsi_3149
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getQualifier().(VariableAccess).getLocation())
)
}

predicate func_10(Variable vret_3155, ReturnStmt target_25, Function func) {
exists(IfStmt target_10 |
	target_10.getCondition().(VariableAccess).getTarget()=vret_3155
	and target_10.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
	and target_10.getFollowingStmt() instanceof ReturnStmt
	and target_10.getCondition().(VariableAccess).getLocation().isBefore(target_25.getExpr().(VariableAccess).getLocation())
)
}

predicate func_11(Parameter vvsi_3149, Function func) {
exists(ExprStmt target_11 |
	exists(FunctionCall obj_0 | obj_0=target_11.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="xdp_state_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvsi_3149
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
	and target_11.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_12(Function func, UnaryMinusExpr target_12) {
	target_12.getValue()="-12"
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable vcoalesce_3152, VariableAccess target_23, ExprStmt target_13) {
	exists(FunctionCall obj_0 | obj_0=target_13.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcoalesce_3152
	)
	and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
}

predicate func_14(Variable vpf_3154, FunctionCall target_14) {
	target_14.getTarget().hasName("ice_schedule_reset")
	and target_14.getArgument(0).(VariableAccess).getTarget()=vpf_3154
}

predicate func_15(Parameter vvsi_3149, Function func, ExprStmt target_15) {
	exists(FunctionCall obj_0 | obj_0=target_15.getExpr() |
		obj_0.getTarget().hasName("ice_vsi_decfg")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvsi_3149
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_17(NotExpr target_21, Function func, ReturnStmt target_17) {
	target_17.getExpr() instanceof UnaryMinusExpr
	and target_17.getParent().(IfStmt).getCondition()=target_21
	and target_17.getEnclosingFunction() = func
}

predicate func_18(VariableAccess target_23, Function func, ReturnStmt target_18) {
	target_18.getExpr() instanceof FunctionCall
	and target_18.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
	and target_18.getEnclosingFunction() = func
}

predicate func_19(Function func, ReturnStmt target_19) {
	target_19.getExpr() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_19
}

predicate func_20(Parameter vvsi_3149, Variable vcoalesce_3152, ExprStmt target_20) {
	exists(FunctionCall obj_0 | obj_0=target_20.getExpr() |
		obj_0.getTarget().hasName("ice_vsi_rebuild_set_coalesce")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvsi_3149
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vcoalesce_3152
		and obj_0.getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_21(Variable vcoalesce_3152, NotExpr target_21) {
	target_21.getOperand().(VariableAccess).getTarget()=vcoalesce_3152
}

predicate func_22(Variable vret_3155, Function func, IfStmt target_22) {
	target_22.getCondition().(VariableAccess).getTarget()=vret_3155
	and target_22.getThen().(GotoStmt).getName() ="err_vsi_cfg"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_22
}

predicate func_23(Variable vret_3155, BlockStmt target_26, VariableAccess target_23) {
	target_23.getTarget()=vret_3155
	and target_23.getParent().(IfStmt).getThen()=target_26
}

predicate func_24(Variable vret_3155, ExprStmt target_24) {
	exists(AssignExpr obj_0 | obj_0=target_24.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vret_3155
		and obj_0.getRValue().(UnaryMinusExpr).getValue()="-5"
	)
}

predicate func_25(Variable vret_3155, ReturnStmt target_25) {
	target_25.getExpr().(VariableAccess).getTarget()=vret_3155
}

predicate func_26(Variable vret_3155, BlockStmt target_26) {
	exists(IfStmt obj_0 | obj_0=target_26.getStmt(0) |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getCondition() |
			obj_1.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u32")
			and obj_1.getRightOperand().(BinaryBitwiseOperation).getValue()="1"
		)
		and exists(BlockStmt obj_2 | obj_2=obj_0.getThen() |
			exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
				exists(AssignExpr obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getLValue().(VariableAccess).getTarget()=vret_3155
					and obj_4.getRValue().(UnaryMinusExpr).getValue()="-5"
				)
			)
			and obj_2.getStmt(1).(GotoStmt).getName() ="err_vsi_cfg_tc_lan"
		)
	)
}

from Function func, Parameter vvsi_3149, Variable vcoalesce_3152, Variable vpf_3154, Variable vret_3155, FunctionCall target_0, FunctionCall target_1, ExprStmt target_2, UnaryMinusExpr target_12, ExprStmt target_13, FunctionCall target_14, ExprStmt target_15, ReturnStmt target_17, ReturnStmt target_18, ReturnStmt target_19, ExprStmt target_20, NotExpr target_21, IfStmt target_22, VariableAccess target_23, ExprStmt target_24, ReturnStmt target_25, BlockStmt target_26
where
func_0(vcoalesce_3152, target_0)
and func_1(vcoalesce_3152, target_1)
and func_2(target_15, func, target_2)
and not func_3(vvsi_3149, target_20, target_15)
and not func_4(vret_3155, target_21, target_22)
and not func_5(target_21, func)
and not func_6(vret_3155, target_23, target_24)
and not func_7(target_23, func)
and not func_9(vvsi_3149, target_15)
and not func_10(vret_3155, target_25, func)
and not func_11(vvsi_3149, func)
and func_12(func, target_12)
and func_13(vcoalesce_3152, target_23, target_13)
and func_14(vpf_3154, target_14)
and func_15(vvsi_3149, func, target_15)
and func_17(target_21, func, target_17)
and func_18(target_23, func, target_18)
and func_19(func, target_19)
and func_20(vvsi_3149, vcoalesce_3152, target_20)
and func_21(vcoalesce_3152, target_21)
and func_22(vret_3155, func, target_22)
and func_23(vret_3155, target_26, target_23)
and func_24(vret_3155, target_24)
and func_25(vret_3155, target_25)
and func_26(vret_3155, target_26)
and vvsi_3149.getType().hasName("ice_vsi *")
and vcoalesce_3152.getType().hasName("ice_coalesce_stored *")
and vpf_3154.getType().hasName("ice_pf *")
and vret_3155.getType().hasName("int")
and vvsi_3149.getFunction() = func
and vcoalesce_3152.(LocalVariable).getFunction() = func
and vpf_3154.(LocalVariable).getFunction() = func
and vret_3155.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
