/**
 * @name linux-7bada55ab50697861eee6bb7d60b41e68a961a9c-binder_thread_write
 * @id cpp/linux/7bada55ab50697861eee6bb7d60b41e68a961a9c/binder-thread-write
 * @description linux-7bada55ab50697861eee6bb7d60b41e68a961a9c-drivers/android/binder.c-binder_thread_write CVE-2019-2025
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
	target_0.getValue()="6binder: %d:%d BC_FREE_BUFFER u%016llx matched unreturned buffer\n"
	and not target_0.getValue()="6binder: %d:%d BC_FREE_BUFFER u%016llx matched unreturned or currently freeing buffer\n"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vbuffer_3505, NotExpr target_8, Literal target_1) {
	target_1.getValue()="0"
	and not target_1.getValue()="1"
	and target_1.getParent().(EQExpr).getParent().(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vbuffer_3505
	and target_1.getParent().(EQExpr).getParent().(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_2(Variable vbuffer_3505, BlockStmt target_10, NotExpr target_8) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("IS_ERR_OR_NULL")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vbuffer_3505
	and target_2.getParent().(IfStmt).getThen()=target_10
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vbuffer_3505, BlockStmt target_10, ExprStmt target_11) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("PTR_ERR")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vbuffer_3505
	and target_3.getParent().(EQExpr).getLeftOperand().(VariableAccess).getTarget()=vbuffer_3505
	and target_3.getParent().(EQExpr).getRightOperand() instanceof Literal
	and target_3.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_10
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_11.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vbuffer_3505, BlockStmt target_10) {
exists(UnaryMinusExpr target_4 |
	target_4.getValue()="-1"
	and target_4.getParent().(EQExpr).getLeftOperand().(VariableAccess).getTarget()=vbuffer_3505
	and target_4.getParent().(EQExpr).getRightOperand() instanceof Literal
	and target_4.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_10)
}

predicate func_5(Variable vbinder_debug_mask, Variable vbinder_stop_on_user_error, EqualityOperation target_12, DoStmt target_5) {
	target_5.getCondition().(Literal).getValue()="0"
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vbinder_debug_mask
	and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=vbinder_stop_on_user_error
	and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vbinder_stop_on_user_error
	and target_5.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="2"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
}

predicate func_6(Variable vbuffer_3505, BlockStmt target_10, VariableAccess target_6) {
	target_6.getTarget()=vbuffer_3505
	and target_6.getParent().(EQExpr).getRightOperand() instanceof Literal
	and target_6.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_10
}

predicate func_7(Variable vbuffer_3505, VariableAccess target_7) {
	target_7.getTarget()=vbuffer_3505
}

predicate func_8(Variable vbuffer_3505, BlockStmt target_13, NotExpr target_8) {
	target_8.getOperand().(PointerFieldAccess).getTarget().getName()="allow_user_free"
	and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_3505
	and target_8.getParent().(IfStmt).getThen()=target_13
}

predicate func_9(NotExpr target_8, Function func, BreakStmt target_9) {
	target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, BlockStmt target_10) {
	target_10.getStmt(0) instanceof DoStmt
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vbuffer_3505, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_11.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="6binder: %d:%d BC_FREE_BUFFER u%016llx found buffer %d for %s transaction\n"
	and target_11.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="pid"
	and target_11.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("binder_proc *")
	and target_11.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="pid"
	and target_11.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("binder_thread *")
	and target_11.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("binder_uintptr_t")
	and target_11.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="debug_id"
	and target_11.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_3505
	and target_11.getExpr().(FunctionCall).getArgument(5).(ConditionalExpr).getCondition().(PointerFieldAccess).getTarget().getName()="transaction"
	and target_11.getExpr().(FunctionCall).getArgument(5).(ConditionalExpr).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_3505
	and target_11.getExpr().(FunctionCall).getArgument(5).(ConditionalExpr).getThen().(StringLiteral).getValue()="active"
	and target_11.getExpr().(FunctionCall).getArgument(5).(ConditionalExpr).getElse().(StringLiteral).getValue()="finished"
}

predicate func_12(Variable vbuffer_3505, EqualityOperation target_12) {
	target_12.getLeftOperand().(VariableAccess).getTarget()=vbuffer_3505
	and target_12.getRightOperand() instanceof Literal
}

predicate func_13(Variable vbinder_debug_mask, Variable vbinder_stop_on_user_error, BlockStmt target_13) {
	target_13.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vbinder_debug_mask
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=vbinder_stop_on_user_error
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vbinder_stop_on_user_error
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="2"
}

from Function func, Variable vbuffer_3505, Variable vbinder_debug_mask, Variable vbinder_stop_on_user_error, StringLiteral target_0, Literal target_1, DoStmt target_5, VariableAccess target_6, VariableAccess target_7, NotExpr target_8, BreakStmt target_9, BlockStmt target_10, ExprStmt target_11, EqualityOperation target_12, BlockStmt target_13
where
func_0(func, target_0)
and func_1(vbuffer_3505, target_8, target_1)
and not func_2(vbuffer_3505, target_10, target_8)
and not func_3(vbuffer_3505, target_10, target_11)
and not func_4(vbuffer_3505, target_10)
and func_5(vbinder_debug_mask, vbinder_stop_on_user_error, target_12, target_5)
and func_6(vbuffer_3505, target_10, target_6)
and func_7(vbuffer_3505, target_7)
and func_8(vbuffer_3505, target_13, target_8)
and func_9(target_8, func, target_9)
and func_10(func, target_10)
and func_11(vbuffer_3505, target_11)
and func_12(vbuffer_3505, target_12)
and func_13(vbinder_debug_mask, vbinder_stop_on_user_error, target_13)
and vbuffer_3505.getType().hasName("binder_buffer *")
and vbinder_debug_mask.getType().hasName("uint32_t")
and vbinder_stop_on_user_error.getType().hasName("int")
and vbuffer_3505.(LocalVariable).getFunction() = func
and not vbinder_debug_mask.getParentScope+() = func
and not vbinder_stop_on_user_error.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
