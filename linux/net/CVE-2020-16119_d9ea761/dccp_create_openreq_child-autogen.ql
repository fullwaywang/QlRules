/**
 * @name linux-d9ea761fdd197351890418acd462c51f241014a7-dccp_create_openreq_child
 * @id cpp/linux/d9ea761fdd197351890418acd462c51f241014a7/dccp-create-openreq-child
 * @description linux-d9ea761fdd197351890418acd462c51f241014a7-net/dccp/minisocks.c-dccp_create_openreq_child CVE-2020-16119
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnewdp_92, EqualityOperation target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dccps_hc_rx_ccid"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewdp_92
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnewdp_92, EqualityOperation target_2, ExprStmt target_4) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dccps_hc_tx_ccid"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewdp_92
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(7)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Function func, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("sock *")
	and target_2.getRightOperand().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vnewdp_92, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dccps_service_list"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewdp_92
	and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_4(Variable vnewdp_92, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dccps_service"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewdp_92
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="dreq_service"
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dccp_request_sock *")
}

from Function func, Variable vnewdp_92, EqualityOperation target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vnewdp_92, target_2, target_3)
and not func_1(vnewdp_92, target_2, target_4)
and func_2(func, target_2)
and func_3(vnewdp_92, target_3)
and func_4(vnewdp_92, target_4)
and vnewdp_92.getType().hasName("dccp_sock *")
and vnewdp_92.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
