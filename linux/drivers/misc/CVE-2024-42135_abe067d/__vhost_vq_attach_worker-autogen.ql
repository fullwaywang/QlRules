/**
 * @name linux-abe067dc3a662eef7d5cddbbc41ed50a0b68b0af-__vhost_vq_attach_worker
 * @id cpp/linux/abe067dc3a662eef7d5cddbbc41ed50a0b68b0af/--vhost-vq-attach-worker
 * @description linux-abe067dc3a662eef7d5cddbbc41ed50a0b68b0af-drivers/vhost/vhost.c-__vhost_vq_attach_worker CVE-2024-42135
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	exists(StmtExpr obj_0 | obj_0=target_0.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			obj_1.getStmt(0).(DoStmt).getCondition() instanceof Literal
			and obj_1.getStmt(1).(ExprStmt).getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="worker"
		)
	)
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Variable v__UNIQUE_ID_rcu940_678, VariableAccess target_1) {
	target_1.getTarget()=v__UNIQUE_ID_rcu940_678
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="945"
	and not target_2.getValue()="950"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="946"
	and not target_3.getValue()="951"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vworker_671, ExprStmt target_10, AddressOfExpr target_11, Function func) {
exists(IfStmt target_4 |
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getCondition() |
		obj_0.getTarget().getName()="killed"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vworker_671
	)
	and exists(BlockStmt obj_1 | obj_1=target_4.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(0) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
						obj_5.getTarget().getName()="mutex"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vworker_671
					)
				)
				and obj_3.getTarget().hasName("mutex_unlock")
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_10.getLocation())
	and target_11.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_5(Variable vold_worker_673, ExprStmt target_12, AddressOfExpr target_13, ExprStmt target_14, Function func) {
exists(IfStmt target_5 |
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getCondition() |
		obj_0.getTarget().getName()="killed"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vold_worker_673
	)
	and exists(BlockStmt obj_1 | obj_1=target_5.getThen() |
		obj_1.getStmt(0) instanceof ExprStmt
		and obj_1.getStmt(1) instanceof ReturnStmt
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getLocation().isBefore(target_12.getLocation())
	and target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_5.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_6(Variable vold_worker_673, ExprStmt target_8, ExprStmt target_15, AddressOfExpr target_16, Function func) {
exists(ExprStmt target_6 |
	exists(FunctionCall obj_0 | obj_0=target_6.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vold_worker_673
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getLocation().isBefore(target_8.getLocation())
	and target_15.getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_7(ExprStmt target_8, Function func) {
exists(ReturnStmt target_7 |
	func.getEntryPoint().(BlockStmt).getAStmt()=target_7
	and target_7.getLocation().isBefore(target_8.getLocation())
)
}

predicate func_8(Variable vold_worker_673, Function func, ExprStmt target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vold_worker_673
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Function func, ReturnStmt target_9) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Function func, ExprStmt target_10) {
	exists(FunctionCall obj_0 | obj_0=target_10.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("vhost_virtqueue *")
			)
		)
		and obj_0.getTarget().hasName("mutex_lock_nested")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Parameter vworker_671, AddressOfExpr target_11) {
	exists(PointerFieldAccess obj_0 | obj_0=target_11.getOperand() |
		obj_0.getTarget().getName()="mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vworker_671
	)
	and exists(FunctionCall obj_1 | obj_1=target_11.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("mutex_lock_nested")
				and obj_3.getArgument(1).(Literal).getValue()="0"
			)
		)
	)
}

predicate func_12(Function func, ExprStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("vhost_virtqueue *")
			)
		)
		and obj_0.getTarget().hasName("mutex_lock_nested")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Variable vold_worker_673, AddressOfExpr target_13) {
	exists(PointerFieldAccess obj_0 | obj_0=target_13.getOperand() |
		obj_0.getTarget().getName()="mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vold_worker_673
	)
	and exists(FunctionCall obj_1 | obj_1=target_13.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("mutex_lock_nested")
				and obj_3.getArgument(1).(Literal).getValue()="0"
			)
		)
	)
}

predicate func_14(Variable vold_worker_673, LogicalAndExpr target_17, ExprStmt target_14) {
	exists(PostfixDecrExpr obj_0 | obj_0=target_14.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="attachment_cnt"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vold_worker_673
		)
	)
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_15(Variable vold_worker_673, Function func, ExprStmt target_15) {
	exists(PostfixDecrExpr obj_0 | obj_0=target_15.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="attachment_cnt"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vold_worker_673
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_16(Variable vold_worker_673, AddressOfExpr target_16) {
	exists(PointerFieldAccess obj_0 | obj_0=target_16.getOperand() |
		obj_0.getTarget().getName()="mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vold_worker_673
	)
	and target_16.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

predicate func_17(Function func, LogicalAndExpr target_17) {
	exists(NotExpr obj_0 | obj_0=target_17.getLeftOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("vhost_vq_get_backend")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("vhost_virtqueue *")
		)
	)
	and exists(NotExpr obj_2 | obj_2=target_17.getRightOperand() |
		exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
			obj_3.getTarget().getName()="kick"
			and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("vhost_virtqueue *")
		)
	)
	and target_17.getEnclosingFunction() = func
}

from Function func, Parameter vworker_671, Variable vold_worker_673, Variable v__UNIQUE_ID_rcu940_678, Initializer target_0, VariableAccess target_1, Literal target_2, Literal target_3, ExprStmt target_8, ReturnStmt target_9, ExprStmt target_10, AddressOfExpr target_11, ExprStmt target_12, AddressOfExpr target_13, ExprStmt target_14, ExprStmt target_15, AddressOfExpr target_16, LogicalAndExpr target_17
where
func_0(func, target_0)
and func_1(v__UNIQUE_ID_rcu940_678, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and not func_4(vworker_671, target_10, target_11, func)
and not func_5(vold_worker_673, target_12, target_13, target_14, func)
and not func_6(vold_worker_673, target_8, target_15, target_16, func)
and not func_7(target_8, func)
and func_8(vold_worker_673, func, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(vworker_671, target_11)
and func_12(func, target_12)
and func_13(vold_worker_673, target_13)
and func_14(vold_worker_673, target_17, target_14)
and func_15(vold_worker_673, func, target_15)
and func_16(vold_worker_673, target_16)
and func_17(func, target_17)
and vworker_671.getType().hasName("vhost_worker *")
and vold_worker_673.getType().hasName("vhost_worker *")
and v__UNIQUE_ID_rcu940_678.getType().hasName("vhost_worker *")
and vworker_671.getFunction() = func
and vold_worker_673.(LocalVariable).getFunction() = func
and v__UNIQUE_ID_rcu940_678.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
