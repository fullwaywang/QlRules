/**
 * @name linux-d974baa398f34393db76be45f7d4d04fbdbb4a0a-vmx_vcpu_run
 * @id cpp/linux/d974baa398f34393db76be45f7d4d04fbdbb4a0a/vmx-vcpu-run
 * @description linux-d974baa398f34393db76be45f7d4d04fbdbb4a0a-arch/x86/kvm/vmx.c-vmx_vcpu_run CVE-2014-3690
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(IfStmt target_3, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("unsigned long")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("read_cr4")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation()))
}

predicate func_2(Variable vvmx_7516, IfStmt target_3, ExprStmt target_4, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("unsigned long")
	and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="vmcs_host_cr4"
	and target_2.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="host_state"
	and target_2.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("vmcs_writel")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("unsigned long")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="vmcs_host_cr4"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="host_state"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvmx_7516
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("unsigned long")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_3.getLocation())
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Function func, IfStmt target_3) {
	target_3.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="guest_debug"
	and target_3.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("kvm_vcpu *")
	and target_3.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("vmx_set_interrupt_shadow")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kvm_vcpu *")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vvmx_7516, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("atomic_switch_perf_msrs")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvmx_7516
}

from Function func, Variable vvmx_7516, IfStmt target_3, ExprStmt target_4
where
not func_1(target_3, func)
and not func_2(vvmx_7516, target_3, target_4, func)
and func_3(func, target_3)
and func_4(vvmx_7516, target_4)
and vvmx_7516.getType().hasName("vcpu_vmx *")
and vvmx_7516.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
