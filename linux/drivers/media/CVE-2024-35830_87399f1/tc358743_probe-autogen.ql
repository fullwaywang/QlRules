/**
 * @name linux-87399f1ff92203d65f1febf5919429f4bb613a02-tc358743_probe
 * @id cpp/linux/87399f1ff92203d65f1febf5919429f4bb613a02/tc358743-probe
 * @description linux-87399f1ff92203d65f1febf5919429f4bb613a02-drivers/media/i2c/tc358743.c-tc358743_probe CVE-2024-35830
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsd_2022, Variable verr_2024, DoStmt target_2, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_2024
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("v4l2_async_register_subdev")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsd_2022
	and target_0.getLocation().isBefore(target_2.getLocation())
}

predicate func_1(Variable verr_2024, DoStmt target_2, IfStmt target_1) {
	target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=verr_2024
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_1.getThen().(GotoStmt).getName() ="err_hdl"
	and target_1.getLocation().isBefore(target_2.getLocation())
}

predicate func_2(Function func, DoStmt target_2) {
	target_2.getCondition().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__mutex_init")
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="confctl_mutex"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tc358743_state *")
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="&state->confctl_mutex"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("lock_class_key")
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vsd_2022, Variable verr_2024, ExprStmt target_0, IfStmt target_1, DoStmt target_2
where
func_0(vsd_2022, verr_2024, target_2, target_0)
and func_1(verr_2024, target_2, target_1)
and func_2(func, target_2)
and vsd_2022.getType().hasName("v4l2_subdev *")
and verr_2024.getType().hasName("int")
and vsd_2022.(LocalVariable).getFunction() = func
and verr_2024.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
