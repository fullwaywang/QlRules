/**
 * @name openssl-3118eb64934499d93db3230748a452351d1d9a65-BN_mod_sqrt
 * @id cpp/openssl/3118eb64934499d93db3230748a452351d1d9a65/bn-mod-sqrt
 * @description openssl-3118eb64934499d93db3230748a452351d1d9a65-crypto/bn/bn_sqrt.c-BN_mod_sqrt CVE-2022-0778
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable ve_24, Variable vi_24, ExprStmt target_14, EqualityOperation target_15) {
	exists(ForStmt target_0 |
		target_0.getInitialization() instanceof ExprStmt
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vi_24
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=ve_24
		and target_0.getUpdate() instanceof PostfixIncrExpr
		and target_0.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vi_24
		and target_0.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="1"
		and target_0.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0) instanceof IfStmt
		and target_0.getStmt().(BlockStmt).getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(0) instanceof IfStmt
		and target_0.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition() instanceof FunctionCall
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(SubExpr).getLeftOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_15.getAnOperand().(VariableAccess).getLocation()))
}

/*predicate func_3(EqualityOperation target_15, Function func) {
	exists(BreakStmt target_3 |
		target_3.getParent().(IfStmt).getCondition()=target_15
		and target_3.getEnclosingFunction() = func)
}

*/
predicate func_4(Variable ve_24, Variable vi_24, NotExpr target_16, EqualityOperation target_15, ExprStmt target_5, ExprStmt target_13) {
	exists(IfStmt target_4 |
		target_4.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vi_24
		and target_4.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=ve_24
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ERR_put_error")
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="3"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="121"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="111"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3) instanceof StringLiteral
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4) instanceof Literal
		and target_16.getOperand().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_4.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_4.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_15.getAnOperand().(VariableAccess).getLocation())
		and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_4.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_5(Variable vi_24, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_24
		and target_5.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_6(Parameter vp_13, Parameter vctx_13, Variable vb_23, Variable vt_23, IfStmt target_6) {
		target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("BN_mod_sqr")
		and target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vt_23
		and target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vb_23
		and target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vp_13
		and target_6.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vctx_13
}

predicate func_7(Variable vt_23, FunctionCall target_7) {
		target_7.getTarget().hasName("BN_is_one")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vt_23
}

predicate func_8(Variable vi_24, PostfixIncrExpr target_8) {
		target_8.getOperand().(VariableAccess).getTarget()=vi_24
}

predicate func_9(Parameter vp_13, Parameter vctx_13, Variable vt_23, IfStmt target_9) {
		target_9.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("BN_mod_mul")
		and target_9.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vt_23
		and target_9.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vt_23
		and target_9.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vt_23
		and target_9.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vp_13
		and target_9.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vctx_13
}

predicate func_10(Variable ve_24, Variable vi_24, BlockStmt target_17, VariableAccess target_10) {
		target_10.getTarget()=vi_24
		and target_10.getParent().(EQExpr).getAnOperand().(VariableAccess).getTarget()=ve_24
		and target_10.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_17
}

/*predicate func_11(Variable ve_24, Variable vi_24, BlockStmt target_17, VariableAccess target_11) {
		target_11.getTarget()=ve_24
		and target_11.getParent().(EQExpr).getAnOperand().(VariableAccess).getTarget()=vi_24
		and target_11.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_17
}

*/
predicate func_12(Variable ve_24, Variable vi_24, WhileStmt target_12) {
		target_12.getCondition().(NotExpr).getOperand() instanceof FunctionCall
		and target_12.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof PostfixIncrExpr
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vi_24
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=ve_24
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ERR_put_error")
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="3"
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="121"
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="111"
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3) instanceof StringLiteral
		and target_12.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4) instanceof Literal
		and target_12.getStmt().(BlockStmt).getStmt(2) instanceof IfStmt
}

predicate func_13(Function func, ExprStmt target_13) {
		target_13.getExpr() instanceof PostfixIncrExpr
		and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable ve_24, Variable vi_24, ExprStmt target_14) {
		target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_14.getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=ve_24
		and target_14.getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget()=vi_24
		and target_14.getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_15(Variable ve_24, Variable vi_24, EqualityOperation target_15) {
		target_15.getAnOperand().(VariableAccess).getTarget()=vi_24
		and target_15.getAnOperand().(VariableAccess).getTarget()=ve_24
}

predicate func_16(Variable ve_24, NotExpr target_16) {
		target_16.getOperand().(FunctionCall).getTarget().hasName("BN_rshift")
		and target_16.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("BIGNUM *")
		and target_16.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("BIGNUM *")
		and target_16.getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=ve_24
}

predicate func_17(Function func, BlockStmt target_17) {
		target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ERR_put_error")
		and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="3"
		and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="121"
		and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="111"
		and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3) instanceof StringLiteral
		and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4) instanceof Literal
		and target_17.getEnclosingFunction() = func
}

from Function func, Parameter vp_13, Parameter vctx_13, Variable vb_23, Variable vt_23, Variable ve_24, Variable vi_24, ExprStmt target_5, IfStmt target_6, FunctionCall target_7, PostfixIncrExpr target_8, IfStmt target_9, VariableAccess target_10, WhileStmt target_12, ExprStmt target_13, ExprStmt target_14, EqualityOperation target_15, NotExpr target_16, BlockStmt target_17
where
not func_0(ve_24, vi_24, target_14, target_15)
and not func_4(ve_24, vi_24, target_16, target_15, target_5, target_13)
and func_5(vi_24, target_5)
and func_6(vp_13, vctx_13, vb_23, vt_23, target_6)
and func_7(vt_23, target_7)
and func_8(vi_24, target_8)
and func_9(vp_13, vctx_13, vt_23, target_9)
and func_10(ve_24, vi_24, target_17, target_10)
and func_12(ve_24, vi_24, target_12)
and func_13(func, target_13)
and func_14(ve_24, vi_24, target_14)
and func_15(ve_24, vi_24, target_15)
and func_16(ve_24, target_16)
and func_17(func, target_17)
and vp_13.getType().hasName("const BIGNUM *")
and vctx_13.getType().hasName("BN_CTX *")
and vb_23.getType().hasName("BIGNUM *")
and vt_23.getType().hasName("BIGNUM *")
and ve_24.getType().hasName("int")
and vi_24.getType().hasName("int")
and vp_13.getFunction() = func
and vctx_13.getFunction() = func
and vb_23.(LocalVariable).getFunction() = func
and vt_23.(LocalVariable).getFunction() = func
and ve_24.(LocalVariable).getFunction() = func
and vi_24.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
