/**
 * @name v8-b8020e1973d7d3a50b17c076cd948f079e59f9e5-v8__internal____DefineAccessorProperty_
 * @id cpp/v8/b8020e1973d7d3a50b17c076cd948f079e59f9e5/v8internaldefineaccessorproperty
 * @description v8-b8020e1973d7d3a50b17c076cd948f079e59f9e5-src/api/api.cc-v8__internal____DefineAccessorProperty_ CVE-2023-2724
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vobject_71, Parameter vname_72, Parameter vgetter_73, Parameter vsetter_74, Parameter vattributes_75, BlockStmt target_1, FunctionCall target_0) {
	target_0.getTarget().hasName("DefineAccessor")
	and not target_0.getTarget().hasName("DefineOwnAccessorIgnoreAttributes")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vobject_71
	and target_0.getArgument(1).(VariableAccess).getTarget()=vname_72
	and target_0.getArgument(2).(VariableAccess).getTarget()=vgetter_73
	and target_0.getArgument(3).(VariableAccess).getTarget()=vsetter_74
	and target_0.getArgument(4).(VariableAccess).getTarget()=vattributes_75
	and target_0.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Function func, BlockStmt target_1) {
	target_1.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_1.getStmt(1).(ReturnStmt).getExpr().(ConstructorCall).getType() instanceof VoidType
	and target_1.getEnclosingFunction() = func
}

from Function func, Parameter vobject_71, Parameter vname_72, Parameter vgetter_73, Parameter vsetter_74, Parameter vattributes_75, FunctionCall target_0, BlockStmt target_1
where
func_0(vobject_71, vname_72, vgetter_73, vsetter_74, vattributes_75, target_1, target_0)
and func_1(func, target_1)
and vobject_71.getType().hasName("Handle<JSObject>")
and vname_72.getType().hasName("Handle<Name>")
and vgetter_73.getType().hasName("Handle<Object>")
and vsetter_74.getType().hasName("Handle<Object>")
and vattributes_75.getType().hasName("PropertyAttributes")
and vobject_71.getFunction() = func
and vname_72.getFunction() = func
and vgetter_73.getFunction() = func
and vsetter_74.getFunction() = func
and vattributes_75.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
