/**
 * @name linux-10081b0b0ed201f53e24bd92deb2e0f3c3e713d4-xe_exec_queue_create_ioctl
 * @id cpp/linux/10081b0b0ed201f53e24bd92deb2e0f3c3e713d4/xe-exec-queue-create-ioctl
 * @description linux-10081b0b0ed201f53e24bd92deb2e0f3c3e713d4-drivers/gpu/drm/xe/xe_exec_queue.c-xe_exec_queue_create_ioctl CVE-2024-46683
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v__key_635, FunctionCall target_3, DoStmt target_0) {
	exists(BlockStmt obj_0 | obj_0=target_0.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(0) |
					obj_3.getTarget().hasName("spinlock_check")
					and obj_3.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="lock"
				)
				and obj_2.getTarget().hasName("__raw_spin_lock_init")
				and obj_2.getArgument(1).(StringLiteral).getValue()="&q->lr.lock"
				and obj_2.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__key_635
			)
		)
	)
	and target_0.getCondition().(Literal).getValue()="0"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

/*predicate func_2(Variable vq_530, Variable v__key_635, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getArgument(0) |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="lr"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vq_530
					)
					and obj_3.getTarget().getName()="lock"
				)
			)
			and obj_1.getTarget().hasName("spinlock_check")
		)
		and obj_0.getTarget().hasName("__raw_spin_lock_init")
		and obj_0.getArgument(1).(StringLiteral).getValue()="&q->lr.lock"
		and obj_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__key_635
	)
}

*/
predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("xe_vm_in_preempt_fence_mode")
	and target_3.getArgument(0).(VariableAccess).getTarget().getType().hasName("xe_vm *")
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vq_530, Variable v__key_635, DoStmt target_0, FunctionCall target_3
where
func_0(v__key_635, target_3, target_0)
and func_3(func, target_3)
and vq_530.getType().hasName("xe_exec_queue *")
and v__key_635.getType().hasName("lock_class_key")
and vq_530.(LocalVariable).getFunction() = func
and v__key_635.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
