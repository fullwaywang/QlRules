/**
 * @name linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-regsafe
 * @id cpp/linux/c25b2ae136039ffa820c26138ed4a5e5f3ab3841/regsafe
 * @description linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-kernel/bpf/verifier.c-regsafe CVE-2022-23222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_4(Function func, SwitchCase target_4) {
	target_4.getExpr() instanceof EnumConstantAccess
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vrold_10594, LogicalAndExpr target_17) {
exists(FunctionCall target_5 |
	target_5.getTarget().hasName("base_type")
	and target_5.getArgument(0).(PointerFieldAccess).getTarget().getName()="type"
	and target_5.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrold_10594
	and target_5.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_17.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_6(Parameter vrold_10594, Parameter vrcur_10595, PointerFieldAccess target_11, LogicalAndExpr target_18, LogicalAndExpr target_19, EqualityOperation target_12) {
exists(IfStmt target_6 |
	target_6.getCondition().(FunctionCall).getTarget().hasName("type_may_be_null")
	and target_6.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="type"
	and target_6.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrold_10594
	and target_6.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("type_may_be_null")
	and target_6.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="type"
	and target_6.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcur_10595
	and target_6.getThen().(BlockStmt).getStmt(1) instanceof IfStmt
	and target_6.getThen().(BlockStmt).getStmt(2) instanceof ReturnStmt
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
	and target_18.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_6.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_19.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_6.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_7(Parameter vrcur_10595, ReturnStmt target_20, LogicalAndExpr target_19, EqualityOperation target_12) {
exists(NotExpr target_7 |
	target_7.getOperand().(FunctionCall).getTarget().hasName("type_may_be_null")
	and target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="type"
	and target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcur_10595
	and target_7.getParent().(IfStmt).getThen()=target_20
	and target_19.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

*/
predicate func_8(Parameter vrcur_10595, ReturnStmt target_20, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="type"
	and target_8.getQualifier().(VariableAccess).getTarget()=vrcur_10595
	and target_8.getParent().(NEExpr).getRightOperand() instanceof EnumConstantAccess
	and target_8.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_20
}

predicate func_9(Parameter vrold_10594, Parameter vrcur_10595, PointerFieldAccess target_11, IfStmt target_9) {
	target_9.getCondition().(FunctionCall).getTarget().hasName("memcmp")
	and target_9.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrold_10594
	and target_9.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrcur_10595
	and target_9.getCondition().(FunctionCall).getArgument(2).(BuiltInOperationBuiltInOffsetOf).getValue()="24"
	and target_9.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
}

predicate func_10(Parameter vrold_10594, Parameter vrcur_10595, Parameter vidmap_10595, PointerFieldAccess target_11, ReturnStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("check_ids")
	and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="id"
	and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrold_10594
	and target_10.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="id"
	and target_10.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcur_10595
	and target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vidmap_10595
	and target_10.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
}

predicate func_11(Parameter vrold_10594, PointerFieldAccess target_11) {
	target_11.getTarget().getName()="type"
	and target_11.getQualifier().(VariableAccess).getTarget()=vrold_10594
}

predicate func_12(Parameter vrcur_10595, ReturnStmt target_20, EqualityOperation target_12) {
	target_12.getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_12.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcur_10595
	and target_12.getParent().(IfStmt).getThen()=target_20
}

predicate func_17(Parameter vrold_10594, Parameter vrcur_10595, LogicalAndExpr target_17) {
	target_17.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="precise"
	and target_17.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrold_10594
	and target_17.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="precise"
	and target_17.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcur_10595
}

predicate func_18(Parameter vrold_10594, Parameter vrcur_10595, LogicalAndExpr target_18) {
	target_18.getLeftOperand().(FunctionCall).getTarget().hasName("range_within")
	and target_18.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrold_10594
	and target_18.getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrcur_10595
	and target_18.getRightOperand().(FunctionCall).getTarget().hasName("tnum_in")
	and target_18.getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="var_off"
	and target_18.getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrold_10594
	and target_18.getRightOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="var_off"
	and target_18.getRightOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcur_10595
}

predicate func_19(Parameter vrold_10594, Parameter vrcur_10595, LogicalAndExpr target_19) {
	target_19.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("memcmp")
	and target_19.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrold_10594
	and target_19.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrcur_10595
	and target_19.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(2).(BuiltInOperationBuiltInOffsetOf).getValue()="24"
	and target_19.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_19.getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("range_within")
	and target_19.getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrold_10594
	and target_19.getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrcur_10595
	and target_19.getRightOperand().(FunctionCall).getTarget().hasName("tnum_in")
	and target_19.getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="var_off"
	and target_19.getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrold_10594
	and target_19.getRightOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="var_off"
	and target_19.getRightOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcur_10595
}

predicate func_20(EqualityOperation target_12, Function func, ReturnStmt target_20) {
	target_20.getParent().(IfStmt).getCondition()=target_12
	and target_20.getEnclosingFunction() = func
}

from Function func, Parameter vrold_10594, Parameter vrcur_10595, Parameter vidmap_10595, SwitchCase target_4, PointerFieldAccess target_8, IfStmt target_9, ReturnStmt target_10, PointerFieldAccess target_11, EqualityOperation target_12, LogicalAndExpr target_17, LogicalAndExpr target_18, LogicalAndExpr target_19, ReturnStmt target_20
where
func_4(func, target_4)
and not func_5(vrold_10594, target_17)
and not func_6(vrold_10594, vrcur_10595, target_11, target_18, target_19, target_12)
and func_8(vrcur_10595, target_20, target_8)
and func_9(vrold_10594, vrcur_10595, target_11, target_9)
and func_10(vrold_10594, vrcur_10595, vidmap_10595, target_11, target_10)
and func_11(vrold_10594, target_11)
and func_12(vrcur_10595, target_20, target_12)
and func_17(vrold_10594, vrcur_10595, target_17)
and func_18(vrold_10594, vrcur_10595, target_18)
and func_19(vrold_10594, vrcur_10595, target_19)
and func_20(target_12, func, target_20)
and vrold_10594.getType().hasName("bpf_reg_state *")
and vrcur_10595.getType().hasName("bpf_reg_state *")
and vidmap_10595.getType().hasName("bpf_id_pair *")
and vrold_10594.getFunction() = func
and vrcur_10595.getFunction() = func
and vidmap_10595.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
