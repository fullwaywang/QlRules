/**
 * @name linux-a63d83f427f-proc_oom_score
 * @id cpp/linux/a63d83f427f/proc-oom-score
 * @description linux-a63d83f427f-fs/proc/base.c-proc_oom_score CVE-2011-2498
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtask_430, FunctionCall target_7) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("oom_badness")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vtask_430
		and target_0.getArgument(1) instanceof Literal
		and target_0.getArgument(2) instanceof Literal
		and target_0.getArgument(3).(AddExpr).getAnOperand().(VariableAccess).getType().hasName("unsigned long")
		and target_0.getArgument(3).(AddExpr).getAnOperand().(VariableAccess).getType().hasName("long")
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_7.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vtask_430, VariableAccess target_1) {
		target_1.getTarget()=vtask_430
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_4(Function func, DeclStmt target_4) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vuptime_433, Function func, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("ktime_get_ts")
		and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vuptime_433
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vuptime_433, Parameter vtask_430, FunctionCall target_6) {
		target_6.getTarget().hasName("badness")
		and target_6.getArgument(0).(VariableAccess).getTarget()=vtask_430
		and target_6.getArgument(1) instanceof Literal
		and target_6.getArgument(2) instanceof Literal
		and target_6.getArgument(3).(ValueFieldAccess).getTarget().getName()="tv_sec"
		and target_6.getArgument(3).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vuptime_433
		and target_6.getParent().(AssignExpr).getRValue() = target_6
		and target_6.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
}

predicate func_7(Parameter vtask_430, FunctionCall target_7) {
		target_7.getTarget().hasName("pid_alive")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vtask_430
}

from Function func, Variable vuptime_433, Parameter vtask_430, VariableAccess target_1, DeclStmt target_4, ExprStmt target_5, FunctionCall target_6, FunctionCall target_7
where
not func_0(vtask_430, target_7)
and func_1(vtask_430, target_1)
and func_4(func, target_4)
and func_5(vuptime_433, func, target_5)
and func_6(vuptime_433, vtask_430, target_6)
and func_7(vtask_430, target_7)
and vuptime_433.getType().hasName("timespec")
and vtask_430.getType().hasName("task_struct *")
and vuptime_433.(LocalVariable).getFunction() = func
and vtask_430.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
