/**
 * @name linux-2d8a041b7bfe1097af21441cb77d6af95f4f4680-do_ip_vs_get_ctl
 * @id cpp/linux/2d8a041b7bfe1097af21441cb77d6af95f4f4680/do-ip-vs-get-ctl
 * @description linux-2d8a041b7bfe1097af21441cb77d6af95f4f4680-net/netfilter/ipvs/ip_vs_ctl.c-do_ip_vs_get_ctl CVE-2012-6540
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vt_2760, ExprStmt target_1) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vt_2760
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="12"
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vt_2760, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("__ip_vs_get_timeouts")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vt_2760
}

from Function func, Variable vt_2760, ExprStmt target_1
where
not func_0(vt_2760, target_1)
and func_1(vt_2760, target_1)
and vt_2760.getType().hasName("ip_vs_timeout_user")
and vt_2760.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
