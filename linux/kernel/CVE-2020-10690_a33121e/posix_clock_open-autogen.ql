/**
 * @name linux-a33121e5487b424339636b25c35d3a180eaa5f5e-posix_clock_open
 * @id cpp/linux/a33121e5487b424339636b25c35d3a180eaa5f5e/posix-clock-open
 * @description linux-a33121e5487b424339636b25c35d3a180eaa5f5e-kernel/time/posix-clock.c-posix_clock_open CVE-2020-10690
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vclk_113, ExprStmt target_3) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("get_device")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclk_113
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vclk_113, VariableAccess target_1) {
	target_1.getTarget()=vclk_113
	and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vclk_113, FunctionCall target_2) {
	target_2.getTarget().hasName("kref_get")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="kref"
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclk_113
}

predicate func_3(Variable vclk_113, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="private_data"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("file *")
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vclk_113
}

from Function func, Variable vclk_113, VariableAccess target_1, FunctionCall target_2, ExprStmt target_3
where
not func_0(vclk_113, target_3)
and func_1(vclk_113, target_1)
and func_2(vclk_113, target_2)
and func_3(vclk_113, target_3)
and vclk_113.getType().hasName("posix_clock *")
and vclk_113.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
