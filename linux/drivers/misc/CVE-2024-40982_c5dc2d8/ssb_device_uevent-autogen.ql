/**
 * @name linux-c5dc2d8eb3981bae261ea7d1060a80868e886813-ssb_device_uevent
 * @id cpp/linux/c5dc2d8eb3981bae261ea7d1060a80868e886813/ssb-device-uevent
 * @description linux-c5dc2d8eb3981bae261ea7d1060a80868e886813-drivers/ssb/main.c-ssb_device_uevent CVE-2024-40982
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vssb_dev_344, ValueFieldAccess target_4, Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vssb_dev_344
		and obj_0.getRValue() instanceof FunctionCall
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vdev_342, FunctionCall target_1) {
	target_1.getTarget().hasName("dev_to_ssb_dev")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vdev_342
}

predicate func_2(Function func, Initializer target_2) {
	target_2.getExpr() instanceof FunctionCall
	and target_2.getExpr().getEnclosingFunction() = func
}

predicate func_4(Variable vssb_dev_344, ValueFieldAccess target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getQualifier() |
		obj_0.getTarget().getName()="id"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vssb_dev_344
	)
	and target_4.getTarget().getName()="vendor"
}

from Function func, Parameter vdev_342, Variable vssb_dev_344, FunctionCall target_1, Initializer target_2, ValueFieldAccess target_4
where
not func_0(vssb_dev_344, target_4, func)
and func_1(vdev_342, target_1)
and func_2(func, target_2)
and func_4(vssb_dev_344, target_4)
and vdev_342.getType().hasName("const device *")
and vssb_dev_344.getType().hasName("const ssb_device *")
and vdev_342.getFunction() = func
and vssb_dev_344.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
