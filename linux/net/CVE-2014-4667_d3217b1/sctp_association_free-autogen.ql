/**
 * @name linux-d3217b15a19a4779c39b212358a5c71d725822ee-sctp_association_free
 * @id cpp/linux/d3217b15a19a4779c39b212358a5c71d725822ee/sctp-association-free
 * @description linux-d3217b15a19a4779c39b212358a5c71d725822ee-net/sctp/associola.c-sctp_association_free CVE-2014-4667
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vasoc_324, BlockStmt target_3, AddressOfExpr target_4) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("list_empty")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="asocs"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_324
	and target_0.getParent().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="temp"
	and target_0.getParent().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_324
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_3
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vasoc_324, VariableAccess target_1) {
	target_1.getTarget()=vasoc_324
}

predicate func_2(Parameter vasoc_324, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="temp"
	and target_2.getQualifier().(VariableAccess).getTarget()=vasoc_324
}

predicate func_3(Parameter vasoc_324, BlockStmt target_3) {
	target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del")
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="asocs"
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_324
	and target_3.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("__sctp_style")
	and target_3.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_3.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("__sctp_sstate")
	and target_3.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_3.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sk_ack_backlog"
	and target_3.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
}

predicate func_4(Parameter vasoc_324, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="asocs"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_324
}

from Function func, Parameter vasoc_324, VariableAccess target_1, PointerFieldAccess target_2, BlockStmt target_3, AddressOfExpr target_4
where
not func_0(vasoc_324, target_3, target_4)
and func_1(vasoc_324, target_1)
and func_2(vasoc_324, target_2)
and func_3(vasoc_324, target_3)
and func_4(vasoc_324, target_4)
and vasoc_324.getType().hasName("sctp_association *")
and vasoc_324.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
