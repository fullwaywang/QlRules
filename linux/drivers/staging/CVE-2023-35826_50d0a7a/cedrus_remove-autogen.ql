/**
 * @name linux-50d0a7aea4809cef87979d4669911276aa23b71f-cedrus_remove
 * @id cpp/linux/50d0a7aea4809cef87979d4669911276aa23b71f/cedrus-remove
 * @description linux-50d0a7aea4809cef87979d4669911276aa23b71f-drivers/staging/media/sunxi/cedrus/cedrus.c-cedrus_remove CVE-2023-35826
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdev_548, IfStmt target_1, ValueFieldAccess target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("cancel_delayed_work_sync")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="watchdog_work"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_548
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vdev_548, IfStmt target_1) {
	target_1.getCondition().(FunctionCall).getTarget().hasName("media_devnode_is_registered")
	and target_1.getCondition().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="devnode"
	and target_1.getCondition().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="mdev"
	and target_1.getCondition().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_548
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("media_device_unregister")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mdev"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_548
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("v4l2_m2m_unregister_media_controller")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="m2m_dev"
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_548
}

predicate func_3(Variable vdev_548, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="devnode"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="mdev"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_548
}

from Function func, Variable vdev_548, IfStmt target_1, ValueFieldAccess target_3
where
not func_0(vdev_548, target_1, target_3, func)
and func_1(vdev_548, target_1)
and func_3(vdev_548, target_3)
and vdev_548.getType().hasName("cedrus_dev *")
and vdev_548.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
