/**
 * @name linux-a4270d6795b0580287453ea55974d948393e66ef-napi_frags_skb
 * @id cpp/linux/a4270d6795b0580287453ea55974d948393e66ef/napi-frags-skb
 * @description linux-a4270d6795b0580287453ea55974d948393e66ef-net/core/dev.c-napi_frags_skb CVE-2020-10720
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_5769, ExprStmt target_3, NotExpr target_4) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="data"
		and target_0.getQualifier().(VariableAccess).getTarget()=vskb_5769
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation())
		and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vskb_5769, VariableAccess target_1) {
		target_1.getTarget()=vskb_5769
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_2(Variable vskb_5769, FunctionCall target_2) {
		target_2.getTarget().hasName("skb_gro_header_fast")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vskb_5769
		and target_2.getArgument(1).(Literal).getValue()="0"
		and target_2.getParent().(AssignExpr).getRValue() = target_2
		and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("const ethhdr *")
}

predicate func_3(Variable vskb_5769, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("skb_gro_reset_offset")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_5769
}

predicate func_4(Variable vskb_5769, NotExpr target_4) {
		target_4.getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("skb_gro_header_hard")
		and target_4.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_5769
		and target_4.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vskb_5769, VariableAccess target_1, FunctionCall target_2, ExprStmt target_3, NotExpr target_4
where
not func_0(vskb_5769, target_3, target_4)
and func_1(vskb_5769, target_1)
and func_2(vskb_5769, target_2)
and func_3(vskb_5769, target_3)
and func_4(vskb_5769, target_4)
and vskb_5769.getType().hasName("sk_buff *")
and vskb_5769.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
