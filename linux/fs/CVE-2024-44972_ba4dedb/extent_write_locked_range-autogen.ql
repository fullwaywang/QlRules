/**
 * @name linux-ba4dedb71356638d8284e34724daca944be70368-extent_write_locked_range
 * @id cpp/linux/ba4dedb71356638d8284e34724daca944be70368/extent-write-locked-range
 * @description linux-ba4dedb71356638d8284e34724daca944be70368-fs/btrfs/extent_io.c-extent_write_locked_range CVE-2024-44972
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpage_2170, LogicalAndExpr target_2, ExprStmt target_0) {
	exists(ConditionalExpr obj_0 | obj_0=target_0.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getCondition() |
			exists(NotExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(NotExpr obj_3 | obj_3=obj_2.getOperand() |
					exists(FunctionCall obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().hasName("PageDirty")
						and obj_4.getArgument(0).(VariableAccess).getTarget()=vpage_2170
					)
				)
			)
			and obj_1.getTarget().hasName("__builtin_expect")
			and obj_1.getArgument(1) instanceof Literal
		)
		and obj_0.getThen() instanceof Literal
		and obj_0.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	)
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_1(Variable vpage_2170, LogicalAndExpr target_2, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("clear_page_dirty_for_io")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpage_2170
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vpage_2170, LogicalAndExpr target_2) {
	exists(EqualityOperation obj_0 | obj_0=target_2.getRightOperand() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vpage_2170
		and obj_0.getRightOperand().(VariableAccess).getTarget().getType().hasName("page *")
	)
	and target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("bool")
}

from Function func, Variable vpage_2170, ExprStmt target_0, ExprStmt target_1, LogicalAndExpr target_2
where
func_0(vpage_2170, target_2, target_0)
and func_1(vpage_2170, target_2, target_1)
and func_2(vpage_2170, target_2)
and vpage_2170.getType().hasName("page *")
and vpage_2170.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
