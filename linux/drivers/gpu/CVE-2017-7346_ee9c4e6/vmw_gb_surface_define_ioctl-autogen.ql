/**
 * @name linux-ee9c4e681ec4f58e42a83cb0c22a0289ade1aacf-vmw_gb_surface_define_ioctl
 * @id cpp/linux/ee9c4e681ec4f58e42a83cb0c22a0289ade1aacf/vmw-gb-surface-define-ioctl
 * @description linux-ee9c4e681ec4f58e42a83cb0c22a0289ade1aacf-drivers/gpu/drm/vmwgfx/vmwgfx_surface.c-vmw_gb_surface_define_ioctl CVE-2017-7346
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreq_1272, IfStmt target_1, EqualityOperation target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="mip_levels"
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="24"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("uint64_t")
	and target_1.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint64_t")
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ttm_round_pot")
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(FunctionCall).getArgument(0).(SizeofExprOperator).getValue()="552"
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getRightOperand().(Literal).getValue()="128"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vreq_1272, EqualityOperation target_2) {
	target_2.getLeftOperand().(PointerFieldAccess).getTarget().getName()="multisample_count"
	and target_2.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_2.getRightOperand().(Literal).getValue()="0"
}

predicate func_3(Variable vreq_1272, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vmw_surface_gb_priv_define")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("drm_device *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="svga3d_flags"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="format"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="drm_surface_flags"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(PointerFieldAccess).getTarget().getName()="mip_levels"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(PointerFieldAccess).getTarget().getName()="multisample_count"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(7).(PointerFieldAccess).getTarget().getName()="array_size"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(7).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(8).(PointerFieldAccess).getTarget().getName()="base_size"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(8).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1272
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(9).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("vmw_surface *")
}

from Function func, Variable vreq_1272, IfStmt target_1, EqualityOperation target_2, ExprStmt target_3
where
not func_0(vreq_1272, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vreq_1272, target_2)
and func_3(vreq_1272, target_3)
and vreq_1272.getType().hasName("drm_vmw_gb_surface_create_req *")
and vreq_1272.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
