/**
 * @name linux-462e635e5b73ba9a4c03913b77138cd57ce4b050-install_special_mapping
 * @id cpp/linux/462e635e5b73ba9a4c03913b77138cd57ce4b050/install-special-mapping
 * @description linux-462e635e5b73ba9a4c03913b77138cd57ce4b050-mm/mmap.c-install_special_mapping CVE-2010-4346
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="12"
		and not target_0.getValue()="0"
		and target_0.getParent().(UnaryMinusExpr).getParent().(ReturnStmt).getExpr() instanceof UnaryMinusExpr
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vvma_2465, ExprStmt target_12, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("security_file_mmap")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(Literal).getValue()="0"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1) instanceof Literal
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="0"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="vm_start"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_2465
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(Literal).getValue()="1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_12.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(VariableAccess).getType().hasName("int")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2)
}

predicate func_3(Function func) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_3.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_3)
}

predicate func_5(FunctionCall target_10, Function func) {
	exists(GotoStmt target_5 |
		target_5.getParent().(IfStmt).getCondition()=target_10
		and target_5.getEnclosingFunction() = func)
}

predicate func_7(Parameter vmm_2461, Variable vvma_2465, FunctionCall target_7) {
		target_7.getTarget().hasName("insert_vm_struct")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vmm_2461
		and target_7.getArgument(1).(VariableAccess).getTarget()=vvma_2465
		and target_7.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
}

predicate func_8(Variable vvma_2465, Variable vvm_area_cachep, FunctionCall target_10, ExprStmt target_8) {
		target_8.getExpr().(FunctionCall).getTarget().hasName("kmem_cache_free")
		and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvm_area_cachep
		and target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvma_2465
		and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_10(BlockStmt target_14, Function func, FunctionCall target_10) {
		target_10.getTarget().hasName("__builtin_expect")
		and target_10.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand() instanceof FunctionCall
		and target_10.getArgument(1) instanceof Literal
		and target_10.getParent().(IfStmt).getThen()=target_14
		and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, UnaryMinusExpr target_11) {
		target_11.getValue()="-12"
		and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vvma_2465, ExprStmt target_12) {
		target_12.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="vm_private_data"
		and target_12.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_2465
		and target_12.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("page **")
}

predicate func_14(Function func, BlockStmt target_14) {
		target_14.getStmt(0) instanceof ExprStmt
		and target_14.getStmt(1).(ReturnStmt).getExpr() instanceof UnaryMinusExpr
		and target_14.getEnclosingFunction() = func
}

from Function func, Parameter vmm_2461, Variable vvma_2465, Variable vvm_area_cachep, Literal target_0, FunctionCall target_7, ExprStmt target_8, FunctionCall target_10, UnaryMinusExpr target_11, ExprStmt target_12, BlockStmt target_14
where
func_0(func, target_0)
and not func_1(vvma_2465, target_12, func)
and not func_2(func)
and not func_3(func)
and not func_5(target_10, func)
and func_7(vmm_2461, vvma_2465, target_7)
and func_8(vvma_2465, vvm_area_cachep, target_10, target_8)
and func_10(target_14, func, target_10)
and func_11(func, target_11)
and func_12(vvma_2465, target_12)
and func_14(func, target_14)
and vmm_2461.getType().hasName("mm_struct *")
and vvma_2465.getType().hasName("vm_area_struct *")
and vvm_area_cachep.getType().hasName("kmem_cache *")
and vmm_2461.getFunction() = func
and vvma_2465.(LocalVariable).getFunction() = func
and not vvm_area_cachep.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
