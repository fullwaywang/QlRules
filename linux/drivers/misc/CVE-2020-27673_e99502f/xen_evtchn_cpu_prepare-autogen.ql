/**
 * @name linux-e99502f76271d6bc4e374fe368c50c67a1fd3070-xen_evtchn_cpu_prepare
 * @id cpp/linux/e99502f76271d6bc4e374fe368c50c67a1fd3070/xen-evtchn-cpu-prepare
 * @description linux-e99502f76271d6bc4e374fe368c50c67a1fd3070-xen_evtchn_cpu_prepare CVE-2020-27673
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcpu_1834, ExprStmt target_1, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("xen_cpu_init_eoi")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcpu_1834
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vcpu_1834, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="percpu_init"
		and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const evtchn_ops *")
		and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vcpu_1834
}

from Function func, Parameter vcpu_1834, ExprStmt target_1
where
not func_0(vcpu_1834, target_1, func)
and func_1(vcpu_1834, target_1)
and vcpu_1834.getType().hasName("unsigned int")
and vcpu_1834.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
