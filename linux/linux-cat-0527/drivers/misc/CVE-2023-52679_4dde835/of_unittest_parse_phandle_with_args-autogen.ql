/**
 * @name linux-4dde83569832f9377362e50f7748463340c5db6b-of_unittest_parse_phandle_with_args
 * @id cpp/linux/4dde83569832f9377362e50f7748463340c5db6b/of-unittest-parse-phandle-with-args
 * @description linux-4dde83569832f9377362e50f7748463340c5db6b-drivers/of/unittest.c-of_unittest_parse_phandle_with_args CVE-2023-52679
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vargs_393, Variable vrc_394, ValueFieldAccess target_1, ExprStmt target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vrc_394
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("of_node_put")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="np"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vargs_393
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vargs_393, ValueFieldAccess target_1) {
	target_1.getTarget().getName()="np"
	and target_1.getQualifier().(VariableAccess).getTarget()=vargs_393
}

predicate func_3(Variable vargs_393, Variable vrc_394, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("_printk")
	and target_3.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3### dt-test ### FAIL %s():%i index %i - data error on node %pOF rc=%i\n"
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_3.getExpr().(FunctionCall).getArgument(2) instanceof Literal
	and target_3.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(FunctionCall).getArgument(4).(ValueFieldAccess).getTarget().getName()="np"
	and target_3.getExpr().(FunctionCall).getArgument(4).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vargs_393
	and target_3.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vrc_394
}

from Function func, Variable vargs_393, Variable vrc_394, ValueFieldAccess target_1, ExprStmt target_3
where
not func_0(vargs_393, vrc_394, target_1, target_3)
and func_1(vargs_393, target_1)
and func_3(vargs_393, vrc_394, target_3)
and vargs_393.getType().hasName("of_phandle_args")
and vrc_394.getType().hasName("int")
and vargs_393.(LocalVariable).getFunction() = func
and vrc_394.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
