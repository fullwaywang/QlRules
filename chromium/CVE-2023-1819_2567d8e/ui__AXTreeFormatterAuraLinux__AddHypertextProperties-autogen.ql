/**
 * @name chromium-2567d8e42b1784ba1c535bda32cb235d237cdcc7-ui__AXTreeFormatterAuraLinux__AddHypertextProperties
 * @id cpp/chromium/2567d8e42b1784ba1c535bda32cb235d237cdcc7/uiaxtreeformatterauralinuxaddhypertextproperties
 * @description chromium-2567d8e42b1784ba1c535bda32cb235d237cdcc7-ui/accessibility/platform/inspect/ax_tree_formatter_auralinux.cc-ui__AXTreeFormatterAuraLinux__AddHypertextProperties CVE-2023-1819
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcharacter_text_194, Variable vutf8_offset_228, Initializer target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("g_utf8_substring")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcharacter_text_194
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vutf8_offset_228
		and obj_0.getArgument(2) instanceof AddExpr
	)
}

predicate func_6(Variable vcharacter_text_194, Variable vutf8_offset_228, PointerArithmeticOperation target_16, ExprStmt target_17, FunctionCall target_18, VariableAccess target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getParent() |
		exists(Initializer obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddExpr obj_3 | obj_3=obj_2.getArgument(2) |
					obj_3.getLeftOperand().(VariableAccess).getTarget()=vutf8_offset_228
					and obj_3.getRightOperand().(Literal).getValue()="1"
				)
				and obj_2.getTarget().hasName("g_utf8_substring")
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vutf8_offset_228
			)
		)
	)
	and target_6.getTarget()=vcharacter_text_194
	and target_16.getRightOperand().(VariableAccess).getLocation().isBefore(target_6.getLocation())
	and target_6.getLocation().isBefore(target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_18.getArgument(1).(VariableAccess).getLocation().isBefore(target_6.getParent().(FunctionCall).getParent().(Initializer).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

/*predicate func_7(Variable vcharacter_text_194, Variable vutf8_offset_228, PointerArithmeticOperation target_16, ExprStmt target_17, FunctionCall target_18, VariableAccess target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getParent() |
		exists(Initializer obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddExpr obj_3 | obj_3=obj_2.getArgument(2) |
					obj_3.getLeftOperand().(VariableAccess).getTarget()=vutf8_offset_228
					and obj_3.getRightOperand().(Literal).getValue()="1"
				)
				and obj_2.getTarget().hasName("g_utf8_substring")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vcharacter_text_194
			)
		)
	)
	and target_7.getTarget()=vutf8_offset_228
	and target_16.getRightOperand().(VariableAccess).getLocation().isBefore(target_7.getParent().(FunctionCall).getParent().(Initializer).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_7.getParent().(FunctionCall).getParent().(Initializer).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_18.getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getLocation())
}

*/
/*predicate func_8(Variable vcharacter_text_194, Variable vutf8_offset_228, AddExpr target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getParent() |
		exists(Initializer obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("g_utf8_substring")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vcharacter_text_194
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vutf8_offset_228
			)
		)
	)
	and target_8.getLeftOperand().(VariableAccess).getTarget()=vutf8_offset_228
	and target_8.getRightOperand().(Literal).getValue()="1"
}

*/
predicate func_9(Variable vchecky_bool_lol_234, SwitchStmt target_9) {
	exists(BlockStmt obj_0 | obj_0=target_9.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getTarget().hasName("__builtin_expect")
				and obj_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vchecky_bool_lol_234
				and obj_2.getArgument(1) instanceof Literal
			)
			and exists(ExprStmt obj_3 | obj_3=obj_1.getElse() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().hasName("DCheck")
					and obj_4.getArgument(0) instanceof StringLiteral
					and obj_4.getArgument(1) instanceof Literal
					and obj_4.getArgument(2).(StringLiteral).getValue()="std::string(character_substring) == \"\\uFFFC\""
				)
			)
		)
		and obj_0.getStmt(0).(SwitchCase).getExpr() instanceof Literal
		and obj_0.getStmt(1).(SwitchCase).toString() = "default: "
	)
	and target_9.getExpr() instanceof Literal
}

/*predicate func_10(Function func, SwitchCase target_10) {
	target_10.getExpr() instanceof Literal
	and target_10.getEnclosingFunction() = func
}

*/
/*predicate func_11(Function func, SwitchCase target_11) {
	target_11.toString() = "default: "
	and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_12(Variable vchecky_bool_lol_234, Literal target_19, IfStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getCondition() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vchecky_bool_lol_234
		and obj_0.getArgument(1) instanceof Literal
	)
	and exists(ExprStmt obj_1 | obj_1=target_12.getElse() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getTarget().hasName("DCheck")
			and obj_2.getArgument(0) instanceof StringLiteral
			and obj_2.getArgument(1) instanceof Literal
			and obj_2.getArgument(2).(StringLiteral).getValue()="std::string(character_substring) == \"\\uFFFC\""
		)
	)
	and target_12.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_19
}

*/
predicate func_13(Variable vcharacter_substring_232, ConstructorCall target_21, VariableAccess target_13) {
	target_13.getTarget()=vcharacter_substring_232
	and target_13.getLocation().isBefore(target_21.getArgument(0).(VariableAccess).getLocation())
}

predicate func_14(Variable vcharacter_substring_232, ConstructorCall target_22, ExprStmt target_15, VariableAccess target_14) {
	target_14.getTarget()=vcharacter_substring_232
	and target_22.getArgument(0).(VariableAccess).getLocation().isBefore(target_14.getLocation())
	and target_14.getLocation().isBefore(target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_15(Variable vcharacter_substring_232, ExprStmt target_15) {
	exists(FunctionCall obj_0 | obj_0=target_15.getExpr() |
		obj_0.getTarget().hasName("g_free")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcharacter_substring_232
	)
}

predicate func_16(Variable vcharacter_text_194, PointerArithmeticOperation target_16) {
	target_16.getLeftOperand().(VariableAccess).getTarget().getType().hasName("gchar *")
	and target_16.getRightOperand().(VariableAccess).getTarget()=vcharacter_text_194
}

predicate func_17(Variable vcharacter_text_194, ExprStmt target_17) {
	exists(FunctionCall obj_0 | obj_0=target_17.getExpr() |
		obj_0.getTarget().hasName("g_free")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcharacter_text_194
	)
}

predicate func_18(Variable vcharacter_text_194, Variable vutf8_offset_228, FunctionCall target_18) {
	target_18.getTarget().hasName("g_utf8_offset_to_pointer")
	and target_18.getArgument(0).(VariableAccess).getTarget()=vcharacter_text_194
	and target_18.getArgument(1).(VariableAccess).getTarget()=vutf8_offset_228
}

predicate func_21(Variable vcharacter_substring_232, ConstructorCall target_21) {
	target_21.getArgument(0).(VariableAccess).getTarget()=vcharacter_substring_232
}

predicate func_22(Variable vcharacter_substring_232, ConstructorCall target_22) {
	target_22.getArgument(0).(VariableAccess).getTarget()=vcharacter_substring_232
}

from Function func, Variable vcharacter_text_194, Variable vutf8_offset_228, Variable vcharacter_substring_232, Variable vchecky_bool_lol_234, Initializer target_0, VariableAccess target_6, SwitchStmt target_9, VariableAccess target_13, VariableAccess target_14, ExprStmt target_15, PointerArithmeticOperation target_16, ExprStmt target_17, FunctionCall target_18, ConstructorCall target_21, ConstructorCall target_22
where
func_0(vcharacter_text_194, vutf8_offset_228, target_0)
and func_6(vcharacter_text_194, vutf8_offset_228, target_16, target_17, target_18, target_6)
and func_9(vchecky_bool_lol_234, target_9)
and func_13(vcharacter_substring_232, target_21, target_13)
and func_14(vcharacter_substring_232, target_22, target_15, target_14)
and func_15(vcharacter_substring_232, target_15)
and func_16(vcharacter_text_194, target_16)
and func_17(vcharacter_text_194, target_17)
and func_18(vcharacter_text_194, vutf8_offset_228, target_18)
and func_21(vcharacter_substring_232, target_21)
and func_22(vcharacter_substring_232, target_22)
and vcharacter_text_194.getType().hasName("gchar *")
and vutf8_offset_228.getType().hasName("int")
and vcharacter_substring_232.getType().hasName("gchar *")
and vchecky_bool_lol_234.getType().hasName("const bool")
and vcharacter_text_194.(LocalVariable).getFunction() = func
and vutf8_offset_228.(LocalVariable).getFunction() = func
and vcharacter_substring_232.(LocalVariable).getFunction() = func
and vchecky_bool_lol_234.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
