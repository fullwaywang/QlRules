/**
 * @name linux-07d86ca93db7e5cdf4743564d98292042ec21af7-snd_usbmidi_create
 * @id cpp/linux/07d86ca93db7e5cdf4743564d98292042ec21af7/snd-usbmidi-create
 * @description linux-07d86ca93db7e5cdf4743564d98292042ec21af7-sound/usb/midi.c-snd_usbmidi_create CVE-2016-2384
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vumidi_2328, RelationalOperation target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("snd_usbmidi_free")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vumidi_2328
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_1(BlockStmt target_2, Function func, RelationalOperation target_1) {
	 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getGreaterOperand().(Literal).getValue()="0"
	and target_1.getParent().(IfStmt).getThen()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, BlockStmt target_2) {
	target_2.getStmt(0) instanceof ExprStmt
	and target_2.getStmt(1).(ReturnStmt).getExpr().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vumidi_2328, ExprStmt target_0, RelationalOperation target_1, BlockStmt target_2
where
func_0(vumidi_2328, target_1, target_0)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and vumidi_2328.getType().hasName("snd_usb_midi *")
and vumidi_2328.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
