/**
 * @name linux-0587102cf9f427c185bfdeb2cef41e13ee0264b1-ntty_ioctl_tiocgicount
 * @id cpp/linux/0587102cf9f427c185bfdeb2cef41e13ee0264b1/ntty-ioctl-tiocgicount
 * @description linux-0587102cf9f427c185bfdeb2cef41e13ee0264b1-drivers/char/nozomi.c-ntty_ioctl_tiocgicount CVE-2010-4076
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vicount_1810) {
	exists(PointerFieldAccess target_1 |
		target_1.getTarget().getName()="cts"
		and target_1.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_2(Variable vicount_1810) {
	exists(PointerFieldAccess target_2 |
		target_2.getTarget().getName()="dsr"
		and target_2.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_3(Variable vicount_1810) {
	exists(PointerFieldAccess target_3 |
		target_3.getTarget().getName()="rng"
		and target_3.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_4(Variable vicount_1810) {
	exists(PointerFieldAccess target_4 |
		target_4.getTarget().getName()="dcd"
		and target_4.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_5(Variable vicount_1810) {
	exists(PointerFieldAccess target_5 |
		target_5.getTarget().getName()="rx"
		and target_5.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_6(Variable vicount_1810) {
	exists(PointerFieldAccess target_6 |
		target_6.getTarget().getName()="tx"
		and target_6.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_7(Variable vicount_1810) {
	exists(PointerFieldAccess target_7 |
		target_7.getTarget().getName()="frame"
		and target_7.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_8(Variable vicount_1810) {
	exists(PointerFieldAccess target_8 |
		target_8.getTarget().getName()="overrun"
		and target_8.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_9(Variable vicount_1810) {
	exists(PointerFieldAccess target_9 |
		target_9.getTarget().getName()="parity"
		and target_9.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_10(Variable vicount_1810) {
	exists(PointerFieldAccess target_10 |
		target_10.getTarget().getName()="brk"
		and target_10.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_11(Variable vicount_1810) {
	exists(PointerFieldAccess target_11 |
		target_11.getTarget().getName()="buf_overrun"
		and target_11.getQualifier().(VariableAccess).getTarget()=vicount_1810)
}

predicate func_14(Variable vicount_1810, ValueFieldAccess target_14) {
		target_14.getTarget().getName()="cts"
		and target_14.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_14.getParent().(AssignExpr).getLValue() = target_14
		and target_14.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="cts"
		and target_14.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_15(Variable vicount_1810, ValueFieldAccess target_15) {
		target_15.getTarget().getName()="dsr"
		and target_15.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_15.getParent().(AssignExpr).getLValue() = target_15
		and target_15.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="dsr"
		and target_15.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_16(Variable vicount_1810, ValueFieldAccess target_16) {
		target_16.getTarget().getName()="rng"
		and target_16.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_16.getParent().(AssignExpr).getLValue() = target_16
		and target_16.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="rng"
		and target_16.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_17(Variable vicount_1810, ValueFieldAccess target_17) {
		target_17.getTarget().getName()="dcd"
		and target_17.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_17.getParent().(AssignExpr).getLValue() = target_17
		and target_17.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="dcd"
		and target_17.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_18(Variable vicount_1810, ValueFieldAccess target_18) {
		target_18.getTarget().getName()="rx"
		and target_18.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_18.getParent().(AssignExpr).getLValue() = target_18
		and target_18.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="rx"
		and target_18.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_19(Variable vicount_1810, ValueFieldAccess target_19) {
		target_19.getTarget().getName()="tx"
		and target_19.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_19.getParent().(AssignExpr).getLValue() = target_19
		and target_19.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="tx"
		and target_19.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_20(Variable vicount_1810, ValueFieldAccess target_20) {
		target_20.getTarget().getName()="frame"
		and target_20.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_20.getParent().(AssignExpr).getLValue() = target_20
		and target_20.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="frame"
		and target_20.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_21(Variable vicount_1810, ValueFieldAccess target_21) {
		target_21.getTarget().getName()="overrun"
		and target_21.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_21.getParent().(AssignExpr).getLValue() = target_21
		and target_21.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="overrun"
		and target_21.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_22(Variable vicount_1810, ValueFieldAccess target_22) {
		target_22.getTarget().getName()="parity"
		and target_22.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_22.getParent().(AssignExpr).getLValue() = target_22
		and target_22.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="parity"
		and target_22.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_23(Variable vicount_1810, ValueFieldAccess target_23) {
		target_23.getTarget().getName()="brk"
		and target_23.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_23.getParent().(AssignExpr).getLValue() = target_23
		and target_23.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="brk"
		and target_23.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_24(Variable vicount_1810, ValueFieldAccess target_24) {
		target_24.getTarget().getName()="buf_overrun"
		and target_24.getQualifier().(VariableAccess).getTarget()=vicount_1810
		and target_24.getParent().(AssignExpr).getLValue() = target_24
		and target_24.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="buf_overrun"
		and target_24.getParent().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const async_icount")
}

predicate func_25(Parameter vargp_1807, Variable vicount_1810, ConditionalExpr target_25) {
		target_25.getCondition().(FunctionCall).getTarget().hasName("copy_to_user")
		and target_25.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vargp_1807
		and target_25.getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vicount_1810
		and target_25.getCondition().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="80"
		and target_25.getThen().(UnaryMinusExpr).getValue()="-14"
		and target_25.getElse() instanceof Literal
}

from Function func, Parameter vargp_1807, Variable vicount_1810, ValueFieldAccess target_14, ValueFieldAccess target_15, ValueFieldAccess target_16, ValueFieldAccess target_17, ValueFieldAccess target_18, ValueFieldAccess target_19, ValueFieldAccess target_20, ValueFieldAccess target_21, ValueFieldAccess target_22, ValueFieldAccess target_23, ValueFieldAccess target_24, ConditionalExpr target_25
where
not func_1(vicount_1810)
and not func_2(vicount_1810)
and not func_3(vicount_1810)
and not func_4(vicount_1810)
and not func_5(vicount_1810)
and not func_6(vicount_1810)
and not func_7(vicount_1810)
and not func_8(vicount_1810)
and not func_9(vicount_1810)
and not func_10(vicount_1810)
and not func_11(vicount_1810)
and func_14(vicount_1810, target_14)
and func_15(vicount_1810, target_15)
and func_16(vicount_1810, target_16)
and func_17(vicount_1810, target_17)
and func_18(vicount_1810, target_18)
and func_19(vicount_1810, target_19)
and func_20(vicount_1810, target_20)
and func_21(vicount_1810, target_21)
and func_22(vicount_1810, target_22)
and func_23(vicount_1810, target_23)
and func_24(vicount_1810, target_24)
and func_25(vargp_1807, vicount_1810, target_25)
and vargp_1807.getType().hasName("void *")
and vicount_1810.getType().hasName("serial_icounter_struct")
and vargp_1807.getFunction() = func
and vicount_1810.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
