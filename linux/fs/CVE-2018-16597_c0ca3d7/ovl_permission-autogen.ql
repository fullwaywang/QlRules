/**
 * @name linux-c0ca3d70e8d3cf81e2255a217f7ca402f5ed0862-ovl_permission
 * @id cpp/linux/c0ca3d70e8d3cf81e2255a217f7ca402f5ed0862/ovl-permission
 * @description linux-c0ca3d70e8d3cf81e2255a217f7ca402f5ed0862-fs/overlayfs/inode.c-ovl_permission CVE-2018-16597
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_110, Parameter vmask_110, Variable verr_116, BitwiseAndExpr target_9, FunctionCall target_7, ReturnStmt target_10, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_116
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("generic_permission")
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_110
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmask_110
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_9.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getArgument(1).(VariableAccess).getLocation())
		and target_10.getExpr().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vinode_110, Function func) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("const cred *")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ovl_override_creds")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_110
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_3)
}

predicate func_4(Variable verr_116, Function func) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_116
		and target_4.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4)
}

predicate func_5(Function func) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(FunctionCall).getTarget().hasName("revert_creds")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("const cred *")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5)
}

predicate func_7(Parameter vmask_110, Variable vrealinode_115, FunctionCall target_7) {
		target_7.getTarget().hasName("__inode_permission")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vrealinode_115
		and target_7.getArgument(1).(VariableAccess).getTarget()=vmask_110
}

predicate func_9(Parameter vmask_110, BitwiseAndExpr target_9) {
		target_9.getLeftOperand().(VariableAccess).getTarget()=vmask_110
		and target_9.getRightOperand().(Literal).getValue()="2"
}

predicate func_10(Variable verr_116, ReturnStmt target_10) {
		target_10.getExpr().(VariableAccess).getTarget()=verr_116
}

from Function func, Parameter vinode_110, Parameter vmask_110, Variable vrealinode_115, Variable verr_116, FunctionCall target_7, BitwiseAndExpr target_9, ReturnStmt target_10
where
not func_0(vinode_110, vmask_110, verr_116, target_9, target_7, target_10, func)
and not func_3(vinode_110, func)
and not func_4(verr_116, func)
and not func_5(func)
and func_7(vmask_110, vrealinode_115, target_7)
and func_9(vmask_110, target_9)
and func_10(verr_116, target_10)
and vinode_110.getType().hasName("inode *")
and vmask_110.getType().hasName("int")
and vrealinode_115.getType().hasName("inode *")
and verr_116.getType().hasName("int")
and vinode_110.getFunction() = func
and vmask_110.getFunction() = func
and vrealinode_115.(LocalVariable).getFunction() = func
and verr_116.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
