commit 5d76ed4223403f90421782adb2f20a9ecbc93186
Author: Song Liu <song@kernel.org>
Date:   Thu Feb 3 16:40:57 2022 -0800

    perf: Fix list corruption in perf_cgroup_switch()
    
    commit 5f4e5ce638e6a490b976ade4a40017b40abb2da0 upstream.
    
    There's list corruption on cgrp_cpuctx_list. This happens on the
    following path:
    
      perf_cgroup_switch: list_for_each_entry(cgrp_cpuctx_list)
          cpu_ctx_sched_in
             ctx_sched_in
                ctx_pinned_sched_in
                  merge_sched_in
                      perf_cgroup_event_disable: remove the event from the list
    
    Use list_for_each_entry_safe() to allow removing an entry during
    iteration.
    
    Fixes: 058fe1c0440e ("perf/core: Make cgroup switch visit only cpuctxs with cgroup events")
    Signed-off-by: Song Liu <song@kernel.org>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20220204004057.2961252-1-song@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/kernel/events/core.c b/kernel/events/core.c
index 0736508d595b..54da9e12381f 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -716,7 +716,7 @@ static DEFINE_PER_CPU(struct list_head, cgrp_cpuctx_list);
  */
 static void perf_cgroup_switch(struct task_struct *task, int mode)
 {
-	struct perf_cpu_context *cpuctx;
+	struct perf_cpu_context *cpuctx, *tmp;
 	struct list_head *list;
 	unsigned long flags;
 
@@ -727,7 +727,7 @@ static void perf_cgroup_switch(struct task_struct *task, int mode)
 	local_irq_save(flags);
 
 	list = this_cpu_ptr(&cgrp_cpuctx_list);
-	list_for_each_entry(cpuctx, list, cgrp_cpuctx_entry) {
+	list_for_each_entry_safe(cpuctx, tmp, list, cgrp_cpuctx_entry) {
 		WARN_ON_ONCE(cpuctx->ctx.nr_cgroups == 0);
 
 		perf_ctx_lock(cpuctx, cpuctx->task_ctx);
