/**
 * @name linux-d42334578eba1390859012ebb91e1e556d51db49-exfat_find_dir_entry
 * @id cpp/linux/d42334578eba1390859012ebb91e1e556d51db49/exfat-find-dir-entry
 * @description linux-d42334578eba1390859012ebb91e1e556d51db49-fs/exfat/dir.c-exfat_find_dir_entry CVE-2023-4273
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vname_len_985, BlockStmt target_2, ExprStmt target_3, ExprStmt target_4) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof EqualityOperation
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vname_len_985
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="255"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vstep_985, BlockStmt target_2, EqualityOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vstep_985
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vstep_985, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vstep_985
}

predicate func_3(Variable vname_len_985, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vname_len_985
	and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_4(Variable vname_len_985, ExprStmt target_4) {
	target_4.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vname_len_985
	and target_4.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vstep_985, Variable vname_len_985, EqualityOperation target_1, BlockStmt target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vname_len_985, target_2, target_3, target_4)
and func_1(vstep_985, target_2, target_1)
and func_2(vstep_985, target_2)
and func_3(vname_len_985, target_3)
and func_4(vname_len_985, target_4)
and vstep_985.getType().hasName("int")
and vname_len_985.getType().hasName("int")
and vstep_985.(LocalVariable).getFunction() = func
and vname_len_985.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
