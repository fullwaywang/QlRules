/**
 * @name linux-934e1e4331859183a861f396d7dfaf33cb5afb02-bch_btree_check_thread
 * @id cpp/linux/934e1e4331859183a861f396d7dfaf33cb5afb02/bch-btree-check-thread
 * @description linux-934e1e4331859183a861f396d7dfaf33cb5afb02-drivers/md/bcache/btree.c-bch_btree_check_thread CVE-2024-39482
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vc_1926, Variable viter_1927, FunctionCall target_1) {
	exists(AddressOfExpr obj_0 | obj_0=target_1.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="root"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vc_1926
			)
			and obj_1.getTarget().getName()="keys"
		)
	)
	and target_1.getTarget().hasName("bch_btree_iter_init")
	and not target_1.getTarget().hasName("bch_btree_iter_stack_init")
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_1927
	and target_1.getArgument(2).(Literal).getValue()="0"
}

predicate func_2(Variable viter_1927, AddressOfExpr target_6, AddressOfExpr target_7) {
exists(ValueFieldAccess target_2 |
	target_2.getTarget().getName()="iter"
	and target_2.getQualifier().(VariableAccess).getTarget()=viter_1927
	and target_6.getOperand().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(VariableAccess).getLocation())
	and target_2.getQualifier().(VariableAccess).getLocation().isBefore(target_7.getOperand().(VariableAccess).getLocation())
)
}

predicate func_3(Variable viter_1927, AddressOfExpr target_7, AddressOfExpr target_8) {
exists(ValueFieldAccess target_3 |
	target_3.getTarget().getName()="iter"
	and target_3.getQualifier().(VariableAccess).getTarget()=viter_1927
	and target_7.getOperand().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
	and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_8.getOperand().(VariableAccess).getLocation())
)
}

predicate func_4(Variable vc_1926, Variable viter_1927, AddressOfExpr target_9, AddressOfExpr target_10, VariableAccess target_4) {
	exists(AddressOfExpr obj_0 | obj_0=target_4.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getParent() |
			exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
					exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(1) |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
							exists(PointerFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
								obj_6.getTarget().getName()="root"
								and obj_6.getQualifier().(VariableAccess).getTarget()=vc_1926
							)
							and obj_5.getTarget().getName()="keys"
						)
					)
					and obj_3.getTarget().hasName("bch_btree_iter_next_filter")
				)
			)
		)
	)
	and target_4.getTarget()=viter_1927
	and target_9.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_5(Variable vc_1926, Variable viter_1927, AddressOfExpr target_11, ExprStmt target_12, VariableAccess target_5) {
	exists(AddressOfExpr obj_0 | obj_0=target_5.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getParent() |
			exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
					exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(1) |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
							exists(PointerFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
								obj_6.getTarget().getName()="root"
								and obj_6.getQualifier().(VariableAccess).getTarget()=vc_1926
							)
							and obj_5.getTarget().getName()="keys"
						)
					)
					and obj_3.getTarget().hasName("bch_btree_iter_next_filter")
				)
			)
		)
	)
	and target_5.getTarget()=viter_1927
	and target_11.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_5.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_6(Variable viter_1927, AddressOfExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget()=viter_1927
}

predicate func_7(Variable vc_1926, Variable viter_1927, AddressOfExpr target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(1) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
							obj_5.getTarget().getName()="root"
							and obj_5.getQualifier().(VariableAccess).getTarget()=vc_1926
						)
						and obj_4.getTarget().getName()="keys"
					)
				)
				and obj_2.getTarget().hasName("bch_btree_iter_next_filter")
			)
		)
	)
	and target_7.getOperand().(VariableAccess).getTarget()=viter_1927
}

predicate func_8(Variable vc_1926, Variable viter_1927, AddressOfExpr target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(1) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
							obj_5.getTarget().getName()="root"
							and obj_5.getQualifier().(VariableAccess).getTarget()=vc_1926
						)
						and obj_4.getTarget().getName()="keys"
					)
				)
				and obj_2.getTarget().hasName("bch_btree_iter_next_filter")
			)
		)
	)
	and target_8.getOperand().(VariableAccess).getTarget()=viter_1927
}

predicate func_9(Variable vc_1926, AddressOfExpr target_9) {
	exists(PointerFieldAccess obj_0 | obj_0=target_9.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="root"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vc_1926
		)
		and obj_0.getTarget().getName()="keys"
	)
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_10(Variable vc_1926, Variable viter_1927, AddressOfExpr target_10) {
	exists(PointerFieldAccess obj_0 | obj_0=target_10.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="root"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vc_1926
		)
		and obj_0.getTarget().getName()="keys"
	)
	and exists(FunctionCall obj_2 | obj_2=target_10.getParent() |
		exists(AssignExpr obj_3 | obj_3=obj_2.getParent() |
			exists(FunctionCall obj_4 | obj_4=obj_3.getRValue() |
				obj_4.getTarget().hasName("bch_btree_iter_next_filter")
				and obj_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_1927
			)
		)
	)
}

predicate func_11(Variable vc_1926, Variable viter_1927, AddressOfExpr target_11) {
	exists(PointerFieldAccess obj_0 | obj_0=target_11.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="root"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vc_1926
		)
		and obj_0.getTarget().getName()="keys"
	)
	and exists(FunctionCall obj_2 | obj_2=target_11.getParent() |
		exists(AssignExpr obj_3 | obj_3=obj_2.getParent() |
			exists(FunctionCall obj_4 | obj_4=obj_3.getRValue() |
				obj_4.getTarget().hasName("bch_btree_iter_next_filter")
				and obj_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_1927
			)
		)
	)
}

predicate func_12(Variable vc_1926, ExprStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="root"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vc_1926
		)
		and obj_0.getTarget().hasName("btree_node_prefetch")
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("bkey *")
	)
}

from Function func, Variable vc_1926, Variable viter_1927, FunctionCall target_1, VariableAccess target_4, VariableAccess target_5, AddressOfExpr target_6, AddressOfExpr target_7, AddressOfExpr target_8, AddressOfExpr target_9, AddressOfExpr target_10, AddressOfExpr target_11, ExprStmt target_12
where
func_1(vc_1926, viter_1927, target_1)
and not func_2(viter_1927, target_6, target_7)
and not func_3(viter_1927, target_7, target_8)
and func_4(vc_1926, viter_1927, target_9, target_10, target_4)
and func_5(vc_1926, viter_1927, target_11, target_12, target_5)
and func_6(viter_1927, target_6)
and func_7(vc_1926, viter_1927, target_7)
and func_8(vc_1926, viter_1927, target_8)
and func_9(vc_1926, target_9)
and func_10(vc_1926, viter_1927, target_10)
and func_11(vc_1926, viter_1927, target_11)
and func_12(vc_1926, target_12)
and vc_1926.getType().hasName("cache_set *")
and viter_1927.getType().hasName("btree_iter")
and vc_1926.(LocalVariable).getFunction() = func
and viter_1927.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
