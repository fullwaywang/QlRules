/**
 * @name linux-8fde12ca79aff9b5ba951fce1a2641901b8d8e64-follow_page_pte
 * @id cpp/linux/8fde12ca79aff9b5ba951fce1a2641901b8d8e64/follow-page-pte
 * @description linux-8fde12ca79aff9b5ba951fce1a2641901b8d8e64-mm/gup.c-follow_page_pte CVE-2019-11487
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpage_83, BitwiseAndExpr target_4) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("try_get_page")
		and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_83
		and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpage_83
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-12"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4)
}

/*predicate func_1(Variable vpage_83, ExprStmt target_6) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(VariableAccess).getTarget()=vpage_83
		and target_1.getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
		and target_1.getRValue().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-12"
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getLValue().(VariableAccess).getLocation()))
}

*/
predicate func_2(Variable vpage_83, VariableAccess target_2) {
		target_2.getTarget()=vpage_83
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Variable vpage_83, LogicalAndExpr target_8, FunctionCall target_3) {
		target_3.getTarget().hasName("get_page")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vpage_83
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_4(ExprStmt target_9, Function func, BitwiseAndExpr target_4) {
		target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_4.getRightOperand().(Literal).getValue()="4"
		and target_4.getParent().(IfStmt).getThen()=target_9
		and target_4.getEnclosingFunction() = func
}

predicate func_6(Variable vpage_83, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("put_page")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_83
}

predicate func_8(Variable vpage_83, LogicalAndExpr target_8) {
		target_8.getAnOperand().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_8.getAnOperand().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
		and target_8.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("pte_dirty")
		and target_8.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("pte_t")
		and target_8.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageDirty")
		and target_8.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_83
}

predicate func_9(Function func, ExprStmt target_9) {
		target_9.getExpr() instanceof FunctionCall
		and target_9.getEnclosingFunction() = func
}

from Function func, Variable vpage_83, VariableAccess target_2, FunctionCall target_3, BitwiseAndExpr target_4, ExprStmt target_6, LogicalAndExpr target_8, ExprStmt target_9
where
not func_0(vpage_83, target_4)
and func_2(vpage_83, target_2)
and func_3(vpage_83, target_8, target_3)
and func_4(target_9, func, target_4)
and func_6(vpage_83, target_6)
and func_8(vpage_83, target_8)
and func_9(func, target_9)
and vpage_83.getType().hasName("page *")
and vpage_83.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
