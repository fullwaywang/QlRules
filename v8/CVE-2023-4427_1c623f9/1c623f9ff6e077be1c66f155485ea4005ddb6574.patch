commit 1c623f9ff6e077be1c66f155485ea4005ddb6574	1c623f9ff6e077be1c66f155485ea4005ddb6574
Author: Leszek Swirski <leszeks@chromium.org>
Date:   Thu Aug 10 18:04:59 2023 +0200

    [runtime] Recreate enum cache on map update
    
    If we had one before, we probably want one after too.
    
    Bug: chromium:1470668
    Change-Id: Ib83f7b9549b5686a16d35dd7114bf88b12d0a3a0
    Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4771019
    Auto-Submit: Leszek Swirski <leszeks@chromium.org>
    Commit-Queue: Tobias Tebbi <tebbi@chromium.org>
    Reviewed-by: Tobias Tebbi <tebbi@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#89488}

diff --git a/src/objects/map-updater.cc b/src/objects/map-updater.cc
index 7660fab201a..7a864d98800 100644
--- a/src/objects/map-updater.cc
+++ b/src/objects/map-updater.cc
@@ -12,6 +12,7 @@
 #include "src/handles/handles.h"
 #include "src/heap/parked-scope-inl.h"
 #include "src/objects/field-type.h"
+#include "src/objects/keys.h"
 #include "src/objects/objects-inl.h"
 #include "src/objects/objects.h"
 #include "src/objects/property-details.h"
@@ -1038,6 +1039,12 @@ MapUpdater::State MapUpdater::ConstructNewMap() {
   // the new descriptors to maintain descriptors sharing invariant.
   split_map->ReplaceDescriptors(isolate_, *new_descriptors);
 
+  // If the old descriptors had an enum cache, make sure the new ones do too.
+  if (old_descriptors_->enum_cache()->keys()->length() > 0) {
+    FastKeyAccumulator::InitializeFastPropertyEnumCache(
+        isolate_, new_map, new_map->NumberOfEnumerableProperties());
+  }
+
   if (has_integrity_level_transition_) {
     target_map_ = new_map;
     state_ = kAtIntegrityLevelSource;
