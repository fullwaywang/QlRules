/**
 * @name linux-d8861bab48b6c1fc3cdbcab8ff9d1eaea43afe7f-gfar_add_rx_frag
 * @id cpp/linux/d8861bab48b6c1fc3cdbcab8ff9d1eaea43afe7f/gfar-add-rx-frag
 * @description linux-d8861bab48b6c1fc3cdbcab8ff9d1eaea43afe7f-gfar_add_rx_frag CVE-2021-29264
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(FunctionCall target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
		and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(DoStmt).getCondition() instanceof Literal
		and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vsize_2383, FunctionCall target_2, ExprStmt target_3) {
	exists(IfStmt target_1 |
		target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vsize_2383
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(2)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getLocation()))
}

predicate func_2(Function func, FunctionCall target_2) {
		target_2.getTarget().hasName("__builtin_expect")
		and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bool")
		and target_2.getArgument(1).(Literal).getValue()="1"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vsize_2383, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("skb_add_rx_frag")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="nr_frags"
		and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("skb_end_pointer")
		and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("page *")
		and target_3.getExpr().(FunctionCall).getArgument(3).(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="page_offset"
		and target_3.getExpr().(FunctionCall).getArgument(3).(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("gfar_rx_buff *")
		and target_3.getExpr().(FunctionCall).getArgument(3).(AddExpr).getAnOperand().(Literal).getValue()="64"
		and target_3.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vsize_2383
		and target_3.getExpr().(FunctionCall).getArgument(5).(Literal).getValue()="2048"
}

from Function func, Variable vsize_2383, FunctionCall target_2, ExprStmt target_3
where
not func_0(target_2, func)
and not func_1(vsize_2383, target_2, target_3)
and func_2(func, target_2)
and func_3(vsize_2383, target_3)
and vsize_2383.getType().hasName("int")
and vsize_2383.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
