/**
 * @name linux-5d2bd7009f306c82afddd1ca4d9763ad8473c216-fpu_init
 * @id cpp/linux/5d2bd7009f306c82afddd1ca4d9763ad8473c216/fpu-init
 * @description linux-5d2bd7009f306c82afddd1ca4d9763ad8473c216-arch/x86/kernel/i387.c-fpu_init CVE-2018-3665
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("xsave_init")
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("eager_fpu_init")
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, AssignExpr target_2) {
	target_2.getLValue().(PointerFieldAccess).getTarget().getName()="status"
	and target_2.getLValue().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("current_thread_info")
	and target_2.getRValue().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, DoStmt target_3) {
	target_3.getCondition().(Literal).getValue()="0"
	and target_3.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_3.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_3.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="4294959103"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(Function func, AssignAndExpr target_4) {
	target_4.getLValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_4.getLValue().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_4.getRValue().(ComplementExpr).getValue()="4294959103"
	and target_4.getEnclosingFunction() = func
}

*/
from Function func, AssignExpr target_2, DoStmt target_3
where
not func_0(func)
and not func_1(func)
and func_2(func, target_2)
and func_3(func, target_3)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
