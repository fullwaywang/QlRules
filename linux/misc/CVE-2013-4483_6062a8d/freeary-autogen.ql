/**
 * @name linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-freeary
 * @id cpp/linux/6062a8dc0517bce23e3c2f7d2fea5e22411269a3/freeary
 * @description linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-ipc/sem.c-freeary CVE-2013-4483
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsma_790, FunctionCall target_0) {
	target_0.getTarget().hasName("ipc_unlock")
	and not target_0.getTarget().hasName("sem_unlock")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sem_perm"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_790
}

predicate func_2(Variable vsma_790, VariableAccess target_2) {
	target_2.getTarget()=vsma_790
	and target_2.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Variable vsma_790, ExprStmt target_4, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="sem_perm"
	and target_3.getQualifier().(VariableAccess).getTarget()=vsma_790
	and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignSubExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_4(Variable vsma_790, ExprStmt target_4) {
	target_4.getExpr().(AssignSubExpr).getLValue().(PointerFieldAccess).getTarget().getName()="used_sems"
	and target_4.getExpr().(AssignSubExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ipc_namespace *")
	and target_4.getExpr().(AssignSubExpr).getRValue().(PointerFieldAccess).getTarget().getName()="sem_nsems"
	and target_4.getExpr().(AssignSubExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_790
}

from Function func, Variable vsma_790, FunctionCall target_0, VariableAccess target_2, PointerFieldAccess target_3, ExprStmt target_4
where
func_0(vsma_790, target_0)
and func_2(vsma_790, target_2)
and func_3(vsma_790, target_4, target_3)
and func_4(vsma_790, target_4)
and vsma_790.getType().hasName("sem_array *")
and vsma_790.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
