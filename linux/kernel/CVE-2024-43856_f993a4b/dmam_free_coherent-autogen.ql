/**
 * @name linux-f993a4baf6b622232e4c190d34c220179e5d61eb-dmam_free_coherent
 * @id cpp/linux/f993a4baf6b622232e4c190d34c220179e5d61eb/dmam-free-coherent
 * @description linux-f993a4baf6b622232e4c190d34c220179e5d61eb-kernel/dma/mapping.c-dmam_free_coherent CVE-2024-43856
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func, ExprStmt target_0) {
	exists(StmtExpr obj_0 | obj_0=target_0.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(IfStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getCondition() |
					obj_3.getTarget().hasName("__builtin_expect")
					and obj_3.getArgument(1) instanceof Literal
				)
				and obj_2.getThen().(DoStmt).getCondition() instanceof Literal
			)
			and exists(ExprStmt obj_4 | obj_4=obj_1.getStmt(2) |
				exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
					obj_5.getTarget().hasName("__builtin_expect")
					and obj_5.getArgument(1) instanceof Literal
				)
			)
		)
	)
	and target_1.getLocation().isBefore(target_0.getLocation())
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("dma_free_coherent")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("device *")
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("size_t")
		and obj_0.getArgument(2).(VariableAccess).getTarget().getType().hasName("void *")
		and obj_0.getArgument(3).(VariableAccess).getTarget().getType().hasName("dma_addr_t")
	)
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_0, ExprStmt target_1
where
func_0(target_1, func, target_0)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
