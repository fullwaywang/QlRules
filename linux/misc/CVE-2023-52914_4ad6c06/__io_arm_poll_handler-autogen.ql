/**
 * @name linux-4ad6c063541665c407d17e1faf2fe4f04e947dcc-__io_arm_poll_handler
 * @id cpp/linux/4ad6c063541665c407d17e1faf2fe4f04e947dcc/--io-arm-poll-handler
 * @description linux-4ad6c063541665c407d17e1faf2fe4f04e947dcc-io_uring/poll.c-__io_arm_poll_handler CVE-2023-52914
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_558, FunctionCall target_0) {
	target_0.getTarget().hasName("io_poll_req_insert_locked")
	and not target_0.getTarget().hasName("io_poll_add_hash")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vreq_558
}

predicate func_1(Parameter vreq_558, FunctionCall target_1) {
	target_1.getTarget().hasName("io_poll_req_insert")
	and not target_1.getTarget().hasName("io_poll_add_hash")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vreq_558
}

predicate func_2(NotExpr target_4, Function func, ReturnStmt target_2) {
	target_2.getExpr().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getCondition()=target_4
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vreq_558, Function func, IfStmt target_3) {
	exists(BitwiseAndExpr obj_0 | obj_0=target_3.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="flags"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vreq_558
		)
	)
	and target_3.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and target_3.getElse().(ExprStmt).getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Parameter vreq_558, ReturnStmt target_2, NotExpr target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getOperand() |
		obj_0.getTarget().hasName("io_poll_can_finish_inline")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreq_558
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("io_poll_table *")
	)
	and target_4.getParent().(IfStmt).getThen()=target_2
}

from Function func, Parameter vreq_558, FunctionCall target_0, FunctionCall target_1, ReturnStmt target_2, IfStmt target_3, NotExpr target_4
where
func_0(vreq_558, target_0)
and func_1(vreq_558, target_1)
and func_2(target_4, func, target_2)
and func_3(vreq_558, func, target_3)
and func_4(vreq_558, target_2, target_4)
and vreq_558.getType().hasName("io_kiocb *")
and vreq_558.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
