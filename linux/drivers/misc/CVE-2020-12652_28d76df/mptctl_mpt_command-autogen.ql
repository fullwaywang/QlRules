/**
 * @name linux-28d76df18f0ad5bcf5fa48510b225f0ed262a99b-mptctl_mpt_command
 * @id cpp/linux/28d76df18f0ad5bcf5fa48510b225f0ed262a99b/mptctl-mpt-command
 * @description linux-28d76df18f0ad5bcf5fa48510b225f0ed262a99b-drivers/message/fusion/mptctl.c-mptctl_mpt_command CVE-2020-12652
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="1795"
		and not target_0.getValue()="1713"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3mptctl%s@%d::mptctl_mpt_command - Unable to read in mpt_ioctl_command struct @ %p\n"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="drivers/message/fusion/mptctl.c"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("mpt_ioctl_command *")
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vioc_1787, VariableAccess target_1) {
		target_1.getTarget()=vioc_1787
}

predicate func_2(Function func, DeclStmt target_2) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Function func, DeclStmt target_3) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vioc_1787, Variable viocnum_1788, Function func, IfStmt target_4) {
		target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=viocnum_1788
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mpt_verify_adapter")
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="iocnum"
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="hdr"
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vioc_1787
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vioc_1787
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="7mptctl%s::mptctl_mpt_command() @%d - ioc%d not found!\n"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="drivers/message/fusion/mptctl.c"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="1802"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=viocnum_1788
		and target_4.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

/*predicate func_5(Variable viocnum_1788, LogicalOrExpr target_7, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_5.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="7mptctl%s::mptctl_mpt_command() @%d - ioc%d not found!\n"
		and target_5.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="drivers/message/fusion/mptctl.c"
		and target_5.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="1802"
		and target_5.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=viocnum_1788
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

*/
/*predicate func_6(LogicalOrExpr target_7, Function func, ReturnStmt target_6) {
		target_6.getExpr().(UnaryMinusExpr).getValue()="-19"
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
		and target_6.getEnclosingFunction() = func
}

*/
predicate func_7(Function func, LogicalOrExpr target_7) {
		target_7.getAnOperand() instanceof RelationalOperation
		and target_7.getAnOperand() instanceof EqualityOperation
		and target_7.getEnclosingFunction() = func
}

from Function func, Variable vioc_1787, Variable viocnum_1788, Literal target_0, VariableAccess target_1, DeclStmt target_2, DeclStmt target_3, IfStmt target_4, LogicalOrExpr target_7
where
func_0(func, target_0)
and func_1(vioc_1787, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vioc_1787, viocnum_1788, func, target_4)
and func_7(func, target_7)
and vioc_1787.getType().hasName("MPT_ADAPTER *")
and viocnum_1788.getType().hasName("int")
and vioc_1787.(LocalVariable).getFunction() = func
and viocnum_1788.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
