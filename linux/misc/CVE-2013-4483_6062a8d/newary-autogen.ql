/**
 * @name linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-newary
 * @id cpp/linux/6062a8dc0517bce23e3c2f7d2fea5e22411269a3/newary
 * @description linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-ipc/sem.c-newary CVE-2013-4483
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofTypeOperator target_0) {
	target_0.getType() instanceof LongType
	and target_0.getValue()="24"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vsma_335, FunctionCall target_1) {
	target_1.getTarget().hasName("ipc_unlock")
	and not target_1.getTarget().hasName("__raw_spin_lock_init")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sem_perm"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_335
}

predicate func_2(Function func) {
exists(DoStmt target_2 |
	target_2.getCondition().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spinlock_check")
	and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="lock"
	and target_2.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__raw_spin_lock_init")
	and target_2.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="&(&sma->sem_base[i].lock)->rlock"
	and target_2.getEnclosingFunction() = func)
}

/*predicate func_3(Variable vi_340, AddressOfExpr target_10) {
exists(AddressOfExpr target_3 |
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="rlock"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="lock"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sem_base"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_340
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

*/
/*predicate func_5(Function func) {
exists(AddressOfExpr target_5 |
	target_5.getOperand().(VariableAccess).getType().hasName("lock_class_key")
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_5.getEnclosingFunction() = func)
}

*/
predicate func_6(Variable vsma_335, ExprStmt target_11) {
exists(FunctionCall target_6 |
	target_6.getTarget().hasName("sem_unlock")
	and target_6.getArgument(0).(VariableAccess).getTarget()=vsma_335
	and target_6.getArgument(1).(UnaryMinusExpr).getValue()="-1"
	and target_11.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_7(Variable vsma_335, Variable vi_340, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="sem_pending"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sem_base"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_335
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_340
}

predicate func_8(Variable vsma_335, VariableAccess target_8) {
	target_8.getTarget()=vsma_335
	and target_8.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_9(Variable vsma_335, ValueFieldAccess target_12, PointerFieldAccess target_9) {
	target_9.getTarget().getName()="sem_perm"
	and target_9.getQualifier().(VariableAccess).getTarget()=vsma_335
	and target_9.getQualifier().(VariableAccess).getLocation().isBefore(target_12.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_10(Variable vsma_335, Variable vi_340, AddressOfExpr target_10) {
	target_10.getOperand().(ValueFieldAccess).getTarget().getName()="sem_pending"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sem_base"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_335
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_340
}

predicate func_11(Variable vsma_335, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sem_ctime"
	and target_11.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_335
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_seconds")
}

predicate func_12(Variable vsma_335, ValueFieldAccess target_12) {
	target_12.getTarget().getName()="id"
	and target_12.getQualifier().(PointerFieldAccess).getTarget().getName()="sem_perm"
	and target_12.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsma_335
}

from Function func, Variable vsma_335, Variable vi_340, SizeofTypeOperator target_0, FunctionCall target_1, ExprStmt target_7, VariableAccess target_8, PointerFieldAccess target_9, AddressOfExpr target_10, ExprStmt target_11, ValueFieldAccess target_12
where
func_0(func, target_0)
and func_1(vsma_335, target_1)
and not func_2(func)
and not func_6(vsma_335, target_11)
and func_7(vsma_335, vi_340, target_7)
and func_8(vsma_335, target_8)
and func_9(vsma_335, target_12, target_9)
and func_10(vsma_335, vi_340, target_10)
and func_11(vsma_335, target_11)
and func_12(vsma_335, target_12)
and vsma_335.getType().hasName("sem_array *")
and vi_340.getType().hasName("int")
and vsma_335.(LocalVariable).getFunction() = func
and vi_340.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
