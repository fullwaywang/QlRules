/**
 * @name linux-7e0438f83dc769465ee663bb5dcf8cc154940712-tpm_add_char_device
 * @id cpp/linux/7e0438f83dc769465ee663bb5dcf8cc154940712/tpm-add-char-device
 * @description linux-7e0438f83dc769465ee663bb5dcf8cc154940712-drivers/char/tpm/tpm-chip.c-tpm_add_char_device CVE-2022-2977
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

/*predicate func_0(Parameter vchip_434, LogicalAndExpr target_20, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="cdevs"
	and target_0.getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_20.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation())
}

*/
/*predicate func_1(Parameter vchip_434, AddressOfExpr target_21, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="devs"
	and target_1.getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_21.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

*/
predicate func_2(Variable vrc_436, Parameter vchip_434, FunctionCall target_2) {
	target_2.getTarget().hasName("cdev_device_add")
	and not target_2.getTarget().hasName("tpm_devs_add")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cdevs"
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_2.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="devs"
	and target_2.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_436
}

predicate func_3(Variable vrc_436, Parameter vchip_434, FunctionCall target_3) {
	target_3.getTarget().hasName("_dev_err")
	and not target_3.getTarget().hasName("cdev_device_del")
	and target_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="devs"
	and target_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_3.getArgument(1).(StringLiteral).getValue()="unable to cdev_device_add() %s, major %d, minor %d, err=%d\n"
	and target_3.getArgument(2).(FunctionCall).getTarget().hasName("dev_name")
	and target_3.getArgument(2).(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and target_3.getArgument(3).(BinaryBitwiseOperation).getLeftOperand() instanceof ValueFieldAccess
	and target_3.getArgument(3).(BinaryBitwiseOperation).getRightOperand() instanceof Literal
	and target_3.getArgument(4).(BitwiseAndExpr).getLeftOperand() instanceof ValueFieldAccess
	and target_3.getArgument(4).(BitwiseAndExpr).getRightOperand() instanceof SubExpr
	and target_3.getArgument(5).(VariableAccess).getTarget()=vrc_436
}

predicate func_4(VariableAccess target_22, Function func) {
exists(GotoStmt target_4 |
	target_4.getName() ="err_del_cdev"
	and target_4.getParent().(IfStmt).getCondition()=target_22
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vrc_436, VariableAccess target_22, ReturnStmt target_5) {
	target_5.getExpr().(VariableAccess).getTarget()=vrc_436
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
}

predicate func_6(Parameter vchip_434, VariableAccess target_6) {
	target_6.getTarget()=vchip_434
	and target_6.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_7(Function func, StmtExpr target_7) {
	target_7.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_7.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getValue()="1"
	and target_7.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
	and target_7.getEnclosingFunction() = func
}

/*predicate func_8(Function func, DoStmt target_8) {
	target_8.getCondition() instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getValue()="1"
	and target_8.getEnclosingFunction() = func
}

*/
/*predicate func_9(Function func, IfStmt target_9) {
	target_9.getCondition().(LogicalAndExpr).getValue()="1"
	and target_9.getEnclosingFunction() = func
}

*/
predicate func_10(LogicalAndExpr target_23, Function func, DeclStmt target_10) {
	target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
	and target_10.getEnclosingFunction() = func
}

predicate func_11(LogicalAndExpr target_23, Function func, DeclStmt target_11) {
	target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
	and target_11.getEnclosingFunction() = func
}

/*predicate func_12(Function func, ExprStmt target_12) {
	target_12.getExpr() instanceof FunctionCall
	and target_12.getEnclosingFunction() = func
}

*/
predicate func_13(Parameter vchip_434, AddressOfExpr target_14, PointerFieldAccess target_13) {
	target_13.getTarget().getName()="devs"
	and target_13.getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_13.getQualifier().(VariableAccess).getLocation().isBefore(target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_14(Parameter vchip_434, AddressOfExpr target_21, AddressOfExpr target_14) {
	target_14.getOperand().(PointerFieldAccess).getTarget().getName()="devs"
	and target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_14.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("dev_name")
	and target_21.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_15(Parameter vchip_434, ValueFieldAccess target_15) {
	target_15.getTarget().getName()="devt"
	and target_15.getQualifier().(PointerFieldAccess).getTarget().getName()="devs"
	and target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_15.getParent().(RShiftExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_17(Parameter vchip_434, ExprStmt target_26, ValueFieldAccess target_17) {
	target_17.getTarget().getName()="devt"
	and target_17.getQualifier().(PointerFieldAccess).getTarget().getName()="devs"
	and target_17.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_17.getParent().(BitwiseAndExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_17.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_26.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_18(Function func, SubExpr target_18) {
	target_18.getValue()="1048575"
	and target_18.getParent().(BitwiseAndExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_18.getEnclosingFunction() = func
}

predicate func_19(Variable vrc_436, ReturnStmt target_5, VariableAccess target_19) {
	target_19.getTarget()=vrc_436
	and target_5.getExpr().(VariableAccess).getLocation().isBefore(target_19.getLocation())
}

predicate func_20(Parameter vchip_434, LogicalAndExpr target_20) {
	target_20.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_20.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_20.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("tpm_is_firmware_upgrade")
	and target_20.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchip_434
}

predicate func_21(Parameter vchip_434, AddressOfExpr target_21) {
	target_21.getOperand().(PointerFieldAccess).getTarget().getName()="devs"
	and target_21.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
	and target_21.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_22(Variable vrc_436, BlockStmt target_27, VariableAccess target_22) {
	target_22.getTarget()=vrc_436
	and target_22.getParent().(IfStmt).getThen()=target_27
}

predicate func_23(BlockStmt target_28, Function func, LogicalAndExpr target_23) {
	target_23.getValue()="1"
	and target_23.getParent().(IfStmt).getThen()=target_28
	and target_23.getEnclosingFunction() = func
}

predicate func_26(Parameter vchip_434, ExprStmt target_26) {
	target_26.getExpr().(FunctionCall).getTarget().hasName("idr_replace")
	and target_26.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("idr")
	and target_26.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vchip_434
	and target_26.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="dev_num"
	and target_26.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchip_434
}

predicate func_27(Function func, BlockStmt target_27) {
	target_27.getStmt(0).(ExprStmt).getExpr() instanceof StmtExpr
	and target_27.getStmt(1) instanceof ReturnStmt
	and target_27.getEnclosingFunction() = func
}

predicate func_28(LogicalAndExpr target_23, Function func, BlockStmt target_28) {
	target_28.getParent().(IfStmt).getCondition()=target_23
	and target_28.getEnclosingFunction() = func
}

from Function func, Variable vrc_436, Parameter vchip_434, FunctionCall target_2, FunctionCall target_3, ReturnStmt target_5, VariableAccess target_6, StmtExpr target_7, DeclStmt target_10, DeclStmt target_11, PointerFieldAccess target_13, AddressOfExpr target_14, ValueFieldAccess target_15, ValueFieldAccess target_17, SubExpr target_18, VariableAccess target_19, LogicalAndExpr target_20, AddressOfExpr target_21, VariableAccess target_22, LogicalAndExpr target_23, ExprStmt target_26, BlockStmt target_27, BlockStmt target_28
where
func_2(vrc_436, vchip_434, target_2)
and func_3(vrc_436, vchip_434, target_3)
and not func_4(target_22, func)
and func_5(vrc_436, target_22, target_5)
and func_6(vchip_434, target_6)
and func_7(func, target_7)
and func_10(target_23, func, target_10)
and func_11(target_23, func, target_11)
and func_13(vchip_434, target_14, target_13)
and func_14(vchip_434, target_21, target_14)
and func_15(vchip_434, target_15)
and func_17(vchip_434, target_26, target_17)
and func_18(func, target_18)
and func_19(vrc_436, target_5, target_19)
and func_20(vchip_434, target_20)
and func_21(vchip_434, target_21)
and func_22(vrc_436, target_27, target_22)
and func_23(target_28, func, target_23)
and func_26(vchip_434, target_26)
and func_27(func, target_27)
and func_28(target_23, func, target_28)
and vrc_436.getType().hasName("int")
and vchip_434.getType().hasName("tpm_chip *")
and vrc_436.(LocalVariable).getFunction() = func
and vchip_434.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
