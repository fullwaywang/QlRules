/**
 * @name linux-594e47957f3fe034645e6885393ce96c12286334-trace_drop_common
 * @id cpp/linux/594e47957f3fe034645e6885393ce96c12286334/trace-drop-common
 * @description linux-594e47957f3fe034645e6885393ce96c12286334-net/core/drop_monitor.c-trace_drop_common CVE-2024-40980
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdata_220, FunctionCall target_0) {
	exists(AddressOfExpr obj_0 | obj_0=target_0.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="lock"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdata_220
		)
	)
	and target_0.getTarget().hasName("spin_lock")
	and not target_0.getTarget().hasName("_raw_spin_lock")
}

predicate func_1(Variable vdata_220, Variable vflags_221, FunctionCall target_1) {
	exists(AddressOfExpr obj_0 | obj_0=target_1.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="lock"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdata_220
		)
	)
	and target_1.getTarget().hasName("spin_unlock_irqrestore")
	and not target_1.getTarget().hasName("_raw_spin_unlock_irqrestore")
	and target_1.getArgument(1).(VariableAccess).getTarget()=vflags_221
}

predicate func_2(Variable vdata_220, Variable vflags_221, ExprStmt target_4, AddressOfExpr target_5, ExprStmt target_6, Function func) {
exists(DoStmt target_2 |
	exists(BlockStmt obj_0 | obj_0=target_2.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="lock"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vdata_220
					)
				)
				and obj_2.getTarget().hasName("_raw_spin_unlock_irqrestore")
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vflags_221
			)
		)
		and obj_0.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(Literal).getValue()="1"
	)
	and target_2.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_4.getLocation())
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
)
}

predicate func_4(Function func, ExprStmt target_4) {
	target_4.getExpr() instanceof FunctionCall
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vdata_220, AddressOfExpr target_5) {
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getOperand() |
		obj_0.getTarget().getName()="send_timer"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vdata_220
	)
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("add_timer")
}

predicate func_6(Variable vflags_221, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vflags_221
		and obj_0.getRValue().(FunctionCall).getTarget().hasName("arch_local_irq_save")
	)
}

from Function func, Variable vdata_220, Variable vflags_221, FunctionCall target_0, FunctionCall target_1, ExprStmt target_4, AddressOfExpr target_5, ExprStmt target_6
where
func_0(vdata_220, target_0)
and func_1(vdata_220, vflags_221, target_1)
and not func_2(vdata_220, vflags_221, target_4, target_5, target_6, func)
and func_4(func, target_4)
and func_5(vdata_220, target_5)
and func_6(vflags_221, target_6)
and vdata_220.getType().hasName("per_cpu_dm_data *")
and vflags_221.getType().hasName("unsigned long")
and vdata_220.(LocalVariable).getFunction() = func
and vflags_221.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
