/**
 * @name linux-6845667146a28c09b5dfc401c1ad112374087944-qca_serdev_probe
 * @id cpp/linux/6845667146a28c09b5dfc401c1ad112374087944/qca-serdev-probe
 * @description linux-6845667146a28c09b5dfc401c1ad112374087944-drivers/bluetooth/hci_qca.c-qca_serdev_probe CVE-2023-23002
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vqcadev_2020, BlockStmt target_9, ExprStmt target_10) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("IS_ERR_OR_NULL")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="bt_en"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_0.getParent().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="soc_type"
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const qca_device_data *")
	and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_9
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vqcadev_2020, ExprStmt target_11, ExprStmt target_12) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("IS_ERR_OR_NULL")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="sw_ctrl"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_1.getParent().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="soc_type"
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const qca_device_data *")
	and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_11
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vqcadev_2020, BlockStmt target_13, ExprStmt target_14) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("IS_ERR_OR_NULL")
	and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="bt_en"
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_2.getParent().(IfStmt).getThen()=target_13
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vqcadev_2020, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="bt_en"
	and target_3.getQualifier().(VariableAccess).getTarget()=vqcadev_2020
}

predicate func_4(Variable vqcadev_2020, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="sw_ctrl"
	and target_4.getQualifier().(VariableAccess).getTarget()=vqcadev_2020
}

predicate func_5(Variable vqcadev_2020, BlockStmt target_13, PointerFieldAccess target_5) {
	target_5.getTarget().getName()="bt_en"
	and target_5.getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_5.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_13
}

predicate func_6(Variable vqcadev_2020, BlockStmt target_9, ExprStmt target_10, NotExpr target_6) {
	target_6.getOperand().(PointerFieldAccess).getTarget().getName()="bt_en"
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="soc_type"
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const qca_device_data *")
	and target_6.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_9
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_7(Variable vqcadev_2020, ExprStmt target_11, NotExpr target_7) {
	target_7.getOperand().(PointerFieldAccess).getTarget().getName()="sw_ctrl"
	and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_7.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="soc_type"
	and target_7.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const qca_device_data *")
	and target_7.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_11
}

predicate func_8(Variable vqcadev_2020, BlockStmt target_13, ExprStmt target_14, NotExpr target_8) {
	target_8.getOperand().(PointerFieldAccess).getTarget().getName()="bt_en"
	and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_8.getParent().(IfStmt).getThen()=target_13
	and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_9(Function func, BlockStmt target_9) {
	target_9.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_9.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_9.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="failed to acquire BT_EN gpio\n"
	and target_9.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bool")
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vqcadev_2020, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sw_ctrl"
	and target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("devm_gpiod_get_optional")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("serdev_device *")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(StringLiteral).getValue()="swctrl"
}

predicate func_11(Function func, ExprStmt target_11) {
	target_11.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_11.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_warn")
	and target_11.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_11.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="failed to acquire SW_CTRL gpio\n"
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vqcadev_2020, LogicalAndExpr target_15, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="susclk"
	and target_12.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("devm_clk_get_optional")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("serdev_device *")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
}

predicate func_13(Function func, BlockStmt target_13) {
	target_13.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_13.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_warn")
	and target_13.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="failed to acquire enable gpio\n"
	and target_13.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bool")
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vqcadev_2020, LogicalAndExpr target_15, ExprStmt target_14) {
	target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="susclk"
	and target_14.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqcadev_2020
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("devm_clk_get_optional")
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("serdev_device *")
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
}

predicate func_15(Function func, LogicalAndExpr target_15) {
	target_15.getLeftOperand().(VariableAccess).getTarget().getType().hasName("const qca_device_data *")
	and target_15.getRightOperand().(LogicalOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("qca_is_wcn399x")
	and target_15.getRightOperand().(LogicalOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="soc_type"
	and target_15.getRightOperand().(LogicalOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const qca_device_data *")
	and target_15.getRightOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("qca_is_wcn6750")
	and target_15.getRightOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="soc_type"
	and target_15.getRightOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const qca_device_data *")
	and target_15.getEnclosingFunction() = func
}

from Function func, Variable vqcadev_2020, PointerFieldAccess target_3, PointerFieldAccess target_4, PointerFieldAccess target_5, NotExpr target_6, NotExpr target_7, NotExpr target_8, BlockStmt target_9, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12, BlockStmt target_13, ExprStmt target_14, LogicalAndExpr target_15
where
not func_0(vqcadev_2020, target_9, target_10)
and not func_1(vqcadev_2020, target_11, target_12)
and not func_2(vqcadev_2020, target_13, target_14)
and func_3(vqcadev_2020, target_3)
and func_4(vqcadev_2020, target_4)
and func_5(vqcadev_2020, target_13, target_5)
and func_6(vqcadev_2020, target_9, target_10, target_6)
and func_7(vqcadev_2020, target_11, target_7)
and func_8(vqcadev_2020, target_13, target_14, target_8)
and func_9(func, target_9)
and func_10(vqcadev_2020, target_10)
and func_11(func, target_11)
and func_12(vqcadev_2020, target_15, target_12)
and func_13(func, target_13)
and func_14(vqcadev_2020, target_15, target_14)
and func_15(func, target_15)
and vqcadev_2020.getType().hasName("qca_serdev *")
and vqcadev_2020.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
