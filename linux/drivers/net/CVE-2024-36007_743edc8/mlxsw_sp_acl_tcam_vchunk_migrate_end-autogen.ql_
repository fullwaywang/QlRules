/**
 * @name linux-743edc8547a92b6192aa1f1b6bb78233fa21dc9b-mlxsw_sp_acl_tcam_vchunk_migrate_end
 * @id cpp/linux/743edc8547a92b6192aa1f1b6bb78233fa21dc9b/mlxsw-sp-acl-tcam-vchunk-migrate-end
 * @description linux-743edc8547a92b6192aa1f1b6bb78233fa21dc9b-drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c-mlxsw_sp_acl_tcam_vchunk_migrate_end CVE-2024-36007
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctx_1219) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("mlxsw_sp_acl_tcam_rehash_ctx_vchunk_reset")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vctx_1219)
}

predicate func_1(Parameter vctx_1219, VariableAccess target_1) {
	target_1.getTarget()=vctx_1219
}

predicate func_2(Parameter vctx_1219, AssignExpr target_2) {
	target_2.getLValue().(PointerFieldAccess).getTarget().getName()="current_vchunk"
	and target_2.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1219
	and target_2.getRValue().(Literal).getValue()="0"
}

from Function func, Parameter vctx_1219, VariableAccess target_1, AssignExpr target_2
where
not func_0(vctx_1219)
and func_1(vctx_1219, target_1)
and func_2(vctx_1219, target_2)
and vctx_1219.getType().hasName("mlxsw_sp_acl_tcam_rehash_ctx *")
and vctx_1219.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
