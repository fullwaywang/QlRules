/**
 * @name v8-5de0d32413a4322eee59def5aa6ae2e303245622-v8__internal__MarkCompactCollector__ProcessMarkingWorklist
 * @id cpp/v8/5de0d32413a4322eee59def5aa6ae2e303245622/v8internalmarkcompactcollectorprocessmarkingworklist
 * @description v8-5de0d32413a4322eee59def5aa6ae2e303245622-src/heap/mark-compact.cc-v8__internal__MarkCompactCollector__ProcessMarkingWorklist CVE-2023-4355
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("V8_Dcheck")
	and not target_0.getTarget().hasName("V8_Fatal")
	and target_0.getArgument(0) instanceof StringLiteral
	and target_0.getArgument(1) instanceof Literal
	and target_0.getArgument(2).(StringLiteral).getValue()="object->map(cage_base) == ReadOnlyRoots(isolate).one_pointer_filler_map() implies marking_state_->IsMarked(object)"
	and target_0.getEnclosingFunction() = func
}

/*predicate func_3(Variable vobject_2134, FunctionCall target_3) {
	target_3.getQualifier().(VariableAccess).getTarget()=vobject_2134
	and target_3.getParent().(FunctionCall).getParent().(FunctionCall).getParent().(NotExpr).getParent().(LogicalOrExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
}

*/
/*predicate func_4(Function func, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="marking_state_"
	and target_4.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_4.getParent().(FunctionCall).getParent().(LogicalOrExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_4.getEnclosingFunction() = func
}

*/
predicate func_5(Variable vobject_2134, Variable vcage_base_2140, BlockStmt target_13, FunctionCall target_5) {
	target_5.getTarget().hasName("IsFreeSpaceOrFiller")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vobject_2134
	and target_5.getArgument(1).(VariableAccess).getTarget()=vcage_base_2140
	and target_5.getParent().(IfStmt).getThen()=target_13
}

predicate func_6(Function func, IfStmt target_6) {
	target_6.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_6.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("IsMarked")
	and target_6.getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_6.getEnclosingFunction() = func
}

/*predicate func_7(Variable vobject_2134, Variable visolate_2138, Variable vcage_base_2140, LogicalOrExpr target_7) {
	target_7.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("operator==")
	and target_7.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("map")
	and target_7.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier() instanceof FunctionCall
	and target_7.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcage_base_2140
	and target_7.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("one_pointer_filler_map")
	and target_7.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_2138
	and target_7.getRightOperand().(FunctionCall).getTarget().hasName("IsMarked")
	and target_7.getRightOperand().(FunctionCall).getQualifier().(PointerFieldAccess).getTarget().getName()="marking_state_"
	and target_7.getRightOperand().(FunctionCall).getQualifier().(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_7.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vobject_2134
	and target_7.getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_7.getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
}

*/
predicate func_8(FunctionCall target_5, Function func, DoStmt target_8) {
	target_8.getCondition() instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_8.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_8.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_8.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="object->map(cage_base) != ReadOnlyRoots(isolate).one_pointer_filler_map() implies marking_state_->IsMarked(object)"
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_8.getEnclosingFunction() = func
}

/*predicate func_9(Function func, IfStmt target_9) {
	target_9.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_9.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("IsMarked")
	and target_9.getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="object->map(cage_base) != ReadOnlyRoots(isolate).one_pointer_filler_map() implies marking_state_->IsMarked(object)"
	and target_9.getEnclosingFunction() = func
}

*/
/*predicate func_10(Variable vobject_2134, Variable visolate_2138, Variable vcage_base_2140, NotExpr target_10) {
	target_10.getOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("operator!=")
	and target_10.getOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("map")
	and target_10.getOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vobject_2134
	and target_10.getOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcage_base_2140
	and target_10.getOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("one_pointer_filler_map")
	and target_10.getOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_2138
	and target_10.getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("IsMarked")
	and target_10.getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getQualifier().(PointerFieldAccess).getTarget().getName()="marking_state_"
	and target_10.getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getQualifier().(PointerFieldAccess).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_10.getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vobject_2134
	and target_10.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_10.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
}

*/
/*predicate func_11(FunctionCall target_14, Function func, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_11.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_11.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_11.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="object->map(cage_base) != ReadOnlyRoots(isolate).one_pointer_filler_map() implies marking_state_->IsMarked(object)"
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_11.getEnclosingFunction() = func
}

*/
predicate func_12(FunctionCall target_5, Function func, ContinueStmt target_12) {
	target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Function func, BlockStmt target_13) {
	target_13.getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_13.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0) instanceof IfStmt
	and target_13.getStmt(1) instanceof DoStmt
	and target_13.getStmt(2) instanceof ContinueStmt
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Function func, FunctionCall target_14) {
	target_14.getTarget().hasName("__builtin_expect")
	and target_14.getArgument(0) instanceof NotExpr
	and target_14.getArgument(1) instanceof Literal
	and target_14.getEnclosingFunction() = func
}

from Function func, Variable vobject_2134, Variable visolate_2138, Variable vcage_base_2140, FunctionCall target_0, FunctionCall target_5, IfStmt target_6, DoStmt target_8, ContinueStmt target_12, BlockStmt target_13, FunctionCall target_14
where
func_0(func, target_0)
and func_5(vobject_2134, vcage_base_2140, target_13, target_5)
and func_6(func, target_6)
and func_8(target_5, func, target_8)
and func_12(target_5, func, target_12)
and func_13(func, target_13)
and func_14(func, target_14)
and vobject_2134.getType().hasName("HeapObject")
and visolate_2138.getType().hasName("Isolate *const")
and vcage_base_2140.getType().hasName("PtrComprCageBase")
and vobject_2134.(LocalVariable).getFunction() = func
and visolate_2138.(LocalVariable).getFunction() = func
and vcage_base_2140.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
