/**
 * @name linux-387e6e9d110250946df4d4ebef9c2def5c7a4722-nfs_read_folio
 * @id cpp/linux/387e6e9d110250946df4d4ebef9c2def5c7a4722/nfs-read-folio
 * @description linux-387e6e9d110250946df4d4ebef9c2def5c7a4722-fs/nfs/read.c-nfs_read_folio CVE-2024-43826
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_5(Parameter vfolio_332, FunctionCall target_5) {
	target_5.getTarget().hasName("folio_size")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vfolio_332
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("task_io_account_read")
}

predicate func_6(Parameter vfolio_332, VariableAccess target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("trace_nfs_aop_readpage")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
			)
		)
	)
	and target_6.getTarget()=vfolio_332
}

predicate func_7(Parameter vfolio_332, LogicalAndExpr target_8, ExprStmt target_9, VariableAccess target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("trace_nfs_aop_readpage_done")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
				and obj_2.getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
			)
		)
	)
	and target_7.getTarget()=vfolio_332
	and target_8.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getLocation())
	and target_7.getLocation().isBefore(target_9.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_8(Parameter vfolio_332, LogicalAndExpr target_8) {
	exists(NotExpr obj_0 | obj_0=target_8.getLeftOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("folio_test_uptodate")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfolio_332
		)
	)
	and target_8.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_9(Parameter vfolio_332, ExprStmt target_9) {
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		obj_0.getTarget().hasName("folio_unlock")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vfolio_332
	)
}

from Function func, Parameter vfolio_332, FunctionCall target_5, VariableAccess target_6, VariableAccess target_7, LogicalAndExpr target_8, ExprStmt target_9
where
func_5(vfolio_332, target_5)
and func_6(vfolio_332, target_6)
and func_7(vfolio_332, target_8, target_9, target_7)
and func_8(vfolio_332, target_8)
and func_9(vfolio_332, target_9)
and vfolio_332.getType().hasName("folio *")
and vfolio_332.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
