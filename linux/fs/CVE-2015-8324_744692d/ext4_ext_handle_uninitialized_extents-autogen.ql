/**
 * @name linux-744692dc059845b2a3022119871846e74d4f6e11-ext4_ext_handle_uninitialized_extents
 * @id cpp/linux/744692dc059845b2a3022119871846e74d4f6e11/ext4-ext-handle-uninitialized-extents
 * @description linux-744692dc059845b2a3022119871846e74d4f6e11-fs/ext4/extents.c-ext4_ext_handle_uninitialized_extents CVE-2015-8324
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vflags_3053, BlockStmt target_9, ExprStmt target_10) {
exists(BitwiseAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vflags_3053
	and target_0.getRightOperand() instanceof Literal
	and target_0.getParent().(IfStmt).getThen()=target_9
	and target_0.getLeftOperand().(VariableAccess).getLocation().isBefore(target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vinode_3051, Parameter vbh_result_3054, EqualityOperation target_7, ExprStmt target_11, ExprStmt target_12, ExprStmt target_13) {
exists(IfStmt target_1 |
	target_1.getCondition().(FunctionCall).getTarget().hasName("ext4_should_dioread_nolock")
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_3051
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_buffer_uninit")
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbh_result_3054
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vflags_3053, BlockStmt target_14, BitwiseAndExpr target_15) {
exists(BitwiseAndExpr target_2 |
	target_2.getLeftOperand().(VariableAccess).getTarget()=vflags_3053
	and target_2.getRightOperand() instanceof Literal
	and target_2.getParent().(IfStmt).getThen()=target_14
	and target_2.getLeftOperand().(VariableAccess).getLocation().isBefore(target_15.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vflags_3053, BlockStmt target_9, VariableAccess target_3) {
	target_3.getTarget()=vflags_3053
	and target_3.getParent().(EQExpr).getRightOperand().(Literal).getValue()="8"
	and target_3.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_9
}

predicate func_5(Parameter vflags_3053, BlockStmt target_14, VariableAccess target_5) {
	target_5.getTarget()=vflags_3053
	and target_5.getParent().(EQExpr).getRightOperand().(Literal).getValue()="16"
	and target_5.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_14
}

predicate func_7(Parameter vflags_3053, BlockStmt target_9, EqualityOperation target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget()=vflags_3053
	and target_7.getRightOperand() instanceof Literal
	and target_7.getParent().(IfStmt).getThen()=target_9
}

predicate func_8(Parameter vflags_3053, BlockStmt target_14, EqualityOperation target_8) {
	target_8.getLeftOperand().(VariableAccess).getTarget()=vflags_3053
	and target_8.getRightOperand() instanceof Literal
	and target_8.getParent().(IfStmt).getThen()=target_14
}

predicate func_9(Parameter vinode_3051, Parameter vflags_3053, BlockStmt target_9) {
	target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_split_unwritten_extents")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("handle_t *")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinode_3051
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("ext4_ext_path *")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("ext4_lblk_t")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vflags_3053
}

predicate func_10(Parameter vinode_3051, Parameter vflags_3053, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_split_unwritten_extents")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("handle_t *")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinode_3051
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("ext4_ext_path *")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("ext4_lblk_t")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vflags_3053
}

predicate func_11(Parameter vinode_3051, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("ext4_set_inode_state")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_3051
}

predicate func_12(Parameter vinode_3051, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_convert_unwritten_extents_endio")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("handle_t *")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinode_3051
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("ext4_ext_path *")
}

predicate func_13(Parameter vbh_result_3054, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("set_buffer_unwritten")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbh_result_3054
}

predicate func_14(Parameter vinode_3051, BlockStmt target_14) {
	target_14.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_14.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_convert_unwritten_extents_endio")
	and target_14.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("handle_t *")
	and target_14.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinode_3051
	and target_14.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("ext4_ext_path *")
}

predicate func_15(Parameter vflags_3053, BitwiseAndExpr target_15) {
	target_15.getLeftOperand().(VariableAccess).getTarget()=vflags_3053
	and target_15.getRightOperand().(Literal).getValue()="2"
}

from Function func, Parameter vinode_3051, Parameter vflags_3053, Parameter vbh_result_3054, VariableAccess target_3, VariableAccess target_5, EqualityOperation target_7, EqualityOperation target_8, BlockStmt target_9, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12, ExprStmt target_13, BlockStmt target_14, BitwiseAndExpr target_15
where
not func_0(vflags_3053, target_9, target_10)
and not func_1(vinode_3051, vbh_result_3054, target_7, target_11, target_12, target_13)
and not func_2(vflags_3053, target_14, target_15)
and func_3(vflags_3053, target_9, target_3)
and func_5(vflags_3053, target_14, target_5)
and func_7(vflags_3053, target_9, target_7)
and func_8(vflags_3053, target_14, target_8)
and func_9(vinode_3051, vflags_3053, target_9)
and func_10(vinode_3051, vflags_3053, target_10)
and func_11(vinode_3051, target_11)
and func_12(vinode_3051, target_12)
and func_13(vbh_result_3054, target_13)
and func_14(vinode_3051, target_14)
and func_15(vflags_3053, target_15)
and vinode_3051.getType().hasName("inode *")
and vflags_3053.getType().hasName("int")
and vbh_result_3054.getType().hasName("buffer_head *")
and vinode_3051.getFunction() = func
and vflags_3053.getFunction() = func
and vbh_result_3054.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
