/**
 * @name linux-f71f01394f742fc4558b3f9f4c7ef4c4cf3b07c8-do_format
 * @id cpp/linux/f71f01394f742fc4558b3f9f4c7ef4c4cf3b07c8/do-format
 * @description linux-f71f01394f742fc4558b3f9f4c7ef4c4cf3b07c8-drivers/block/floppy.c-do_format CVE-2022-1652
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vformat_errors, VariableAccess target_0) {
	target_0.getTarget()=vformat_errors
	and target_0.getParent().(AssignExpr).getLValue() = target_0
	and target_0.getParent().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_1(Variable vcont, Variable vformat_cont, ExprStmt target_3, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcont
	and target_1.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vformat_cont
	and target_3.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vformat_errors, Variable verrors, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verrors
	and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vformat_errors
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vformat_errors, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vformat_errors
	and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Variable vformat_errors, Variable vcont, Variable vformat_cont, Variable verrors, VariableAccess target_0, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3
where
func_0(vformat_errors, target_0)
and func_1(vcont, vformat_cont, target_3, target_1)
and func_2(vformat_errors, verrors, func, target_2)
and func_3(vformat_errors, target_3)
and vformat_errors.getType().hasName("int")
and vcont.getType().hasName("const cont_t *")
and vformat_cont.getType().hasName("const cont_t")
and verrors.getType().hasName("int *")
and not vformat_errors.getParentScope+() = func
and not vcont.getParentScope+() = func
and not vformat_cont.getParentScope+() = func
and not verrors.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
