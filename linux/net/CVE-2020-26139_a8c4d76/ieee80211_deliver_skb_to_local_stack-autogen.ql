/**
 * @name linux-a8c4d76a8dd4fb9666fc8919a703d85fb8f44ed8-ieee80211_deliver_skb_to_local_stack
 * @id cpp/linux/a8c4d76a8dd4fb9666fc8919a703d85fb8f44ed8/ieee80211-deliver-skb-to-local-stack
 * @description linux-a8c4d76a8dd4fb9666fc8919a703d85fb8f44ed8-net/mac80211/rx.c-ieee80211_deliver_skb_to_local_stack CVE-2020-26139
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsdata_2552, FunctionCall target_1) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="protocol"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="control_port_protocol"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ether_addr_equal")
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ether_addr_copy")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="h_dest"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ethhdr *")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="addr"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vif"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsdata_2552
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1)
}

predicate func_1(Variable vsdata_2552, FunctionCall target_1) {
	target_1.getTarget().hasName("__builtin_expect")
	and target_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalAndExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="protocol"
	and target_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalAndExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="control_port_protocol"
	and target_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="control_port_over_nl80211"
	and target_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsdata_2552
	and target_1.getArgument(1).(Literal).getValue()="0"
}

from Function func, Variable vsdata_2552, FunctionCall target_1
where
not func_0(vsdata_2552, target_1)
and func_1(vsdata_2552, target_1)
and vsdata_2552.getType().hasName("ieee80211_sub_if_data *")
and vsdata_2552.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
