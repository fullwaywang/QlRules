/**
 * @name linux-eb4f139888f636614dab3bcce97ff61cefc4b3a7-amdgpu_device_init
 * @id cpp/linux/eb4f139888f636614dab3bcce97ff61cefc4b3a7/amdgpu-device-init
 * @description linux-eb4f139888f636614dab3bcce97ff61cefc4b3a7-drivers/gpu/drm/amd/amdgpu/amdgpu_device.c-amdgpu_device_init CVE-2024-35928
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vr_3896, NotExpr target_14, ReturnStmt target_15) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vr_3896
	and target_0.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_15.getExpr().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(NotExpr target_14, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="unmap_memory"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(VariableAccess target_16, Function func) {
exists(GotoStmt target_2 |
	target_2.getName() ="unmap_memory"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(VariableAccess target_17, Function func) {
exists(GotoStmt target_3 |
	target_3.getName() ="unmap_memory"
	and target_3.getParent().(IfStmt).getCondition()=target_17
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(VariableAccess target_18, Function func) {
exists(GotoStmt target_4 |
	target_4.getName() ="unmap_memory"
	and target_4.getParent().(IfStmt).getCondition()=target_18
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(VariableAccess target_19, Function func) {
exists(GotoStmt target_5 |
	target_5.getName() ="unmap_memory"
	and target_5.getParent().(IfStmt).getCondition()=target_19
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Parameter vadev_3891, ExprStmt target_20, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(FunctionCall).getTarget().hasName("iounmap")
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="rmmio"
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadev_3891
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getFollowingStmt() instanceof ReturnStmt
	and target_20.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_7(Function func, UnaryMinusExpr target_7) {
	target_7.getValue()="-12"
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vr_3896, VariableAccess target_16, ReturnStmt target_8) {
	target_8.getExpr().(VariableAccess).getTarget()=vr_3896
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
}

predicate func_9(NotExpr target_14, Function func, ReturnStmt target_9) {
	target_9.getExpr() instanceof UnaryMinusExpr
	and target_9.getParent().(IfStmt).getCondition()=target_14
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vr_3896, VariableAccess target_17, IfStmt target_21, ReturnStmt target_10) {
	target_10.getExpr().(VariableAccess).getTarget()=vr_3896
	and target_10.getParent().(IfStmt).getCondition()=target_17
	and target_21.getCondition().(VariableAccess).getLocation().isBefore(target_10.getExpr().(VariableAccess).getLocation())
}

predicate func_11(Variable vr_3896, VariableAccess target_18, IfStmt target_22, ReturnStmt target_11) {
	target_11.getExpr().(VariableAccess).getTarget()=vr_3896
	and target_11.getParent().(IfStmt).getCondition()=target_18
	and target_22.getCondition().(VariableAccess).getLocation().isBefore(target_11.getExpr().(VariableAccess).getLocation())
}

predicate func_12(Variable vr_3896, VariableAccess target_19, IfStmt target_23, ReturnStmt target_12) {
	target_12.getExpr().(VariableAccess).getTarget()=vr_3896
	and target_12.getParent().(IfStmt).getCondition()=target_19
	and target_23.getCondition().(VariableAccess).getLocation().isBefore(target_12.getExpr().(VariableAccess).getLocation())
}

predicate func_13(Variable vr_3896, ExprStmt target_24, Function func, ReturnStmt target_13) {
	target_13.getExpr().(VariableAccess).getTarget()=vr_3896
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
	and target_24.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_13.getExpr().(VariableAccess).getLocation())
}

predicate func_14(Parameter vadev_3891, NotExpr target_14) {
	target_14.getOperand().(PointerFieldAccess).getTarget().getName()="reset_domain"
	and target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadev_3891
}

predicate func_15(Variable vr_3896, VariableAccess target_25, ReturnStmt target_15) {
	target_15.getExpr().(VariableAccess).getTarget()=vr_3896
	and target_15.getParent().(IfStmt).getCondition()=target_25
}

predicate func_16(Variable vr_3896, BlockStmt target_26, VariableAccess target_16) {
	target_16.getTarget()=vr_3896
	and target_16.getParent().(IfStmt).getThen()=target_26
}

predicate func_17(Variable vr_3896, ReturnStmt target_10, VariableAccess target_17) {
	target_17.getTarget()=vr_3896
	and target_17.getParent().(IfStmt).getThen()=target_10
}

predicate func_18(Variable vr_3896, ReturnStmt target_11, VariableAccess target_18) {
	target_18.getTarget()=vr_3896
	and target_18.getParent().(IfStmt).getThen()=target_11
}

predicate func_19(Variable vr_3896, ReturnStmt target_12, VariableAccess target_19) {
	target_19.getTarget()=vr_3896
	and target_19.getParent().(IfStmt).getThen()=target_12
}

predicate func_20(Parameter vadev_3891, ExprStmt target_20) {
	target_20.getExpr().(FunctionCall).getTarget().hasName("amdgpu_vf_error_trans_all")
	and target_20.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vadev_3891
}

predicate func_21(Variable vr_3896, IfStmt target_21) {
	target_21.getCondition().(VariableAccess).getTarget()=vr_3896
	and target_21.getThen() instanceof ReturnStmt
}

predicate func_22(Variable vr_3896, IfStmt target_22) {
	target_22.getCondition().(VariableAccess).getTarget()=vr_3896
	and target_22.getThen() instanceof ReturnStmt
}

predicate func_23(Variable vr_3896, IfStmt target_23) {
	target_23.getCondition().(VariableAccess).getTarget()=vr_3896
	and target_23.getThen() instanceof ReturnStmt
}

predicate func_24(Variable vr_3896, ExprStmt target_24) {
	target_24.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vr_3896
	and target_24.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-11"
}

predicate func_25(Variable vr_3896, ReturnStmt target_15, VariableAccess target_25) {
	target_25.getTarget()=vr_3896
	and target_25.getParent().(IfStmt).getThen()=target_15
}

predicate func_26(Function func, BlockStmt target_26) {
	target_26.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_26.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_26.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_26.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="amdgpu: invalid lockup_timeout parameter syntax\n"
	and target_26.getStmt(1) instanceof ReturnStmt
	and target_26.getEnclosingFunction() = func
}

from Function func, Variable vr_3896, Parameter vadev_3891, UnaryMinusExpr target_7, ReturnStmt target_8, ReturnStmt target_9, ReturnStmt target_10, ReturnStmt target_11, ReturnStmt target_12, ReturnStmt target_13, NotExpr target_14, ReturnStmt target_15, VariableAccess target_16, VariableAccess target_17, VariableAccess target_18, VariableAccess target_19, ExprStmt target_20, IfStmt target_21, IfStmt target_22, IfStmt target_23, ExprStmt target_24, VariableAccess target_25, BlockStmt target_26
where
not func_0(vr_3896, target_14, target_15)
and not func_1(target_14, func)
and not func_2(target_16, func)
and not func_3(target_17, func)
and not func_4(target_18, func)
and not func_5(target_19, func)
and not func_6(vadev_3891, target_20, func)
and func_7(func, target_7)
and func_8(vr_3896, target_16, target_8)
and func_9(target_14, func, target_9)
and func_10(vr_3896, target_17, target_21, target_10)
and func_11(vr_3896, target_18, target_22, target_11)
and func_12(vr_3896, target_19, target_23, target_12)
and func_13(vr_3896, target_24, func, target_13)
and func_14(vadev_3891, target_14)
and func_15(vr_3896, target_25, target_15)
and func_16(vr_3896, target_26, target_16)
and func_17(vr_3896, target_10, target_17)
and func_18(vr_3896, target_11, target_18)
and func_19(vr_3896, target_12, target_19)
and func_20(vadev_3891, target_20)
and func_21(vr_3896, target_21)
and func_22(vr_3896, target_22)
and func_23(vr_3896, target_23)
and func_24(vr_3896, target_24)
and func_25(vr_3896, target_15, target_25)
and func_26(func, target_26)
and vr_3896.getType().hasName("int")
and vadev_3891.getType().hasName("amdgpu_device *")
and vr_3896.(LocalVariable).getFunction() = func
and vadev_3891.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
