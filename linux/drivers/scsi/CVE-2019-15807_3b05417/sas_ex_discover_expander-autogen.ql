/**
 * @name linux-3b0541791453fbe7f42867e310e0c9eb6295364d-sas_ex_discover_expander
 * @id cpp/linux/3b0541791453fbe7f42867e310e0c9eb6295364d/sas-ex-discover-expander
 * @description linux-3b0541791453fbe7f42867e310e0c9eb6295364d-drivers/scsi/libsas/sas_expander.c-sas_ex_discover_expander CVE-2019-15807
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vphy_955, VariableAccess target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("sas_port_delete")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="port"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vphy_955
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vphy_955, VariableAccess target_2) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="port"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vphy_955
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2)
}

predicate func_2(Variable vres_960, VariableAccess target_2) {
	target_2.getTarget()=vres_960
}

predicate func_3(Variable vphy_955, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("sas_ex_get_linkrate")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("domain_device *")
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("domain_device *")
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vphy_955
}

from Function func, Variable vphy_955, Variable vres_960, VariableAccess target_2, ExprStmt target_3
where
not func_0(vphy_955, target_2, target_3)
and not func_1(vphy_955, target_2)
and func_2(vres_960, target_2)
and func_3(vphy_955, target_3)
and vphy_955.getType().hasName("ex_phy *")
and vres_960.getType().hasName("int")
and vphy_955.(LocalVariable).getFunction() = func
and vres_960.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
