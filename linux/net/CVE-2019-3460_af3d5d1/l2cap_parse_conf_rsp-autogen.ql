/**
 * @name linux-af3d5d1c87664a4f150fcf3534c6567cb19909b0-l2cap_parse_conf_rsp
 * @id cpp/linux/af3d5d1c87664a4f150fcf3534c6567cb19909b0/l2cap-parse-conf-rsp
 * @description linux-af3d5d1c87664a4f150fcf3534c6567cb19909b0-net/bluetooth/l2cap_core.c-l2cap_parse_conf_rsp CVE-2019-3460
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(SwitchCase target_20, Function func, IfStmt target_0) {
	target_0.getCondition() instanceof EqualityOperation
	and target_0.getThen() instanceof ExprStmt
	and target_20.getLocation().isBefore(target_0.getLocation())
	and target_0.getEnclosingFunction() = func
}

predicate func_1(SwitchCase target_21, Function func, IfStmt target_1) {
	target_1.getCondition() instanceof EqualityOperation
	and target_1.getThen() instanceof BlockStmt
	and target_21.getLocation().isBefore(target_1.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable volen_3542, ExprStmt target_15) {
exists(EqualityOperation target_2 |
	target_2.getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_2.getRightOperand().(Literal).getValue()="2"
	and target_2.getParent().(IfStmt).getThen()=target_15)
}

predicate func_3(EqualityOperation target_18, Function func) {
exists(BreakStmt target_3 |
	target_3.getParent().(IfStmt).getCondition()=target_18
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Variable volen_3542, BlockStmt target_22, ExprStmt target_12) {
exists(EqualityOperation target_4 |
	target_4.getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_4.getRightOperand().(Literal).getValue()="2"
	and target_4.getParent().(IfStmt).getThen()=target_22
	and target_4.getLeftOperand().(VariableAccess).getLocation().isBefore(target_12.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_5(EqualityOperation target_19, Function func) {
exists(BreakStmt target_5 |
	target_5.getParent().(IfStmt).getCondition()=target_19
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Variable volen_3542, VariableAccess target_23, ExprStmt target_15) {
exists(IfStmt target_6 |
	target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_6.getCondition().(EqualityOperation).getRightOperand() instanceof SizeofExprOperator
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_23
	and target_15.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_7(Variable volen_3542, VariableAccess target_23, EqualityOperation target_19) {
exists(IfStmt target_7 |
	target_7.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_7.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="2"
	and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_23
	and target_7.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_19.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_8(Variable volen_3542, VariableAccess target_23, ExprStmt target_12) {
exists(IfStmt target_8 |
	target_8.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_8.getCondition().(EqualityOperation).getRightOperand() instanceof SizeofExprOperator
	and target_8.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_23
	and target_12.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_8.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_9(Variable volen_3542, VariableAccess target_23) {
exists(IfStmt target_9 |
	target_9.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_9.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_9.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_23)
}

/*predicate func_10(Function func, SizeofExprOperator target_10) {
	target_10.getValue()="9"
	and target_10.getEnclosingFunction() = func
}

*/
/*predicate func_11(Function func, SizeofExprOperator target_11) {
	target_11.getValue()="16"
	and target_11.getEnclosingFunction() = func
}

*/
predicate func_12(Variable volen_3542, Variable vval_3543, Variable vefs_3545, EqualityOperation target_19, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_12.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vefs_3545
	and target_12.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vval_3543
	and target_12.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=volen_3542
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
}

predicate func_13(Parameter vchan_3536, Variable vefs_3545, EqualityOperation target_19, IfStmt target_13) {
	target_13.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="local_stype"
	and target_13.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchan_3536
	and target_13.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_13.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="stype"
	and target_13.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vefs_3545
	and target_13.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_13.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="stype"
	and target_13.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vefs_3545
	and target_13.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="local_stype"
	and target_13.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchan_3536
	and target_13.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-111"
	and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
}

predicate func_14(Variable vptr_3540, Variable vendptr_3541, Variable vefs_3545, EqualityOperation target_19, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("l2cap_add_conf_opt")
	and target_14.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vptr_3540
	and target_14.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="6"
	and target_14.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="16"
	and target_14.getExpr().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vefs_3545
	and target_14.getExpr().(FunctionCall).getArgument(4).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vendptr_3541
	and target_14.getExpr().(FunctionCall).getArgument(4).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vptr_3540
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
}

predicate func_15(Variable volen_3542, Variable vval_3543, Variable vrfc_3544, EqualityOperation target_18, ExprStmt target_15) {
	target_15.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_15.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vrfc_3544
	and target_15.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vval_3543
	and target_15.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=volen_3542
	and target_15.getParent().(IfStmt).getCondition()=target_18
}

predicate func_16(Variable volen_3542, ExprStmt target_15, VariableAccess target_16) {
	target_16.getTarget()=volen_3542
	and target_16.getParent().(EQExpr).getRightOperand().(SizeofExprOperator).getValue()="9"
	and target_16.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_15
}

predicate func_17(Variable volen_3542, BlockStmt target_22, VariableAccess target_17) {
	target_17.getTarget()=volen_3542
	and target_17.getParent().(EQExpr).getRightOperand().(SizeofExprOperator).getValue()="16"
	and target_17.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_22
}

predicate func_18(Variable volen_3542, ExprStmt target_15, EqualityOperation target_18) {
	target_18.getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_18.getRightOperand() instanceof SizeofExprOperator
	and target_18.getParent().(IfStmt).getThen()=target_15
}

predicate func_19(Variable volen_3542, BlockStmt target_22, EqualityOperation target_19) {
	target_19.getLeftOperand().(VariableAccess).getTarget()=volen_3542
	and target_19.getRightOperand() instanceof SizeofExprOperator
	and target_19.getParent().(IfStmt).getThen()=target_22
}

predicate func_20(Function func, SwitchCase target_20) {
	target_20.getExpr().(Literal).getValue()="4"
	and target_20.getEnclosingFunction() = func
}

predicate func_21(Function func, SwitchCase target_21) {
	target_21.getExpr().(Literal).getValue()="6"
	and target_21.getEnclosingFunction() = func
}

predicate func_22(Function func, BlockStmt target_22) {
	target_22.getStmt(0) instanceof ExprStmt
	and target_22.getStmt(1) instanceof IfStmt
	and target_22.getStmt(2) instanceof ExprStmt
	and target_22.getEnclosingFunction() = func
}

predicate func_23(Variable vtype_3542, VariableAccess target_23) {
	target_23.getTarget()=vtype_3542
}

from Function func, Parameter vchan_3536, Variable vptr_3540, Variable vendptr_3541, Variable vtype_3542, Variable volen_3542, Variable vval_3543, Variable vrfc_3544, Variable vefs_3545, IfStmt target_0, IfStmt target_1, ExprStmt target_12, IfStmt target_13, ExprStmt target_14, ExprStmt target_15, VariableAccess target_16, VariableAccess target_17, EqualityOperation target_18, EqualityOperation target_19, SwitchCase target_20, SwitchCase target_21, BlockStmt target_22, VariableAccess target_23
where
func_0(target_20, func, target_0)
and func_1(target_21, func, target_1)
and not func_2(volen_3542, target_15)
and not func_3(target_18, func)
and not func_4(volen_3542, target_22, target_12)
and not func_5(target_19, func)
and not func_6(volen_3542, target_23, target_15)
and not func_7(volen_3542, target_23, target_19)
and not func_8(volen_3542, target_23, target_12)
and not func_9(volen_3542, target_23)
and func_12(volen_3542, vval_3543, vefs_3545, target_19, target_12)
and func_13(vchan_3536, vefs_3545, target_19, target_13)
and func_14(vptr_3540, vendptr_3541, vefs_3545, target_19, target_14)
and func_15(volen_3542, vval_3543, vrfc_3544, target_18, target_15)
and func_16(volen_3542, target_15, target_16)
and func_17(volen_3542, target_22, target_17)
and func_18(volen_3542, target_15, target_18)
and func_19(volen_3542, target_22, target_19)
and func_20(func, target_20)
and func_21(func, target_21)
and func_22(func, target_22)
and func_23(vtype_3542, target_23)
and vchan_3536.getType().hasName("l2cap_chan *")
and vptr_3540.getType().hasName("void *")
and vendptr_3541.getType().hasName("void *")
and vtype_3542.getType().hasName("int")
and volen_3542.getType().hasName("int")
and vval_3543.getType().hasName("unsigned long")
and vrfc_3544.getType().hasName("l2cap_conf_rfc")
and vefs_3545.getType().hasName("l2cap_conf_efs")
and vchan_3536.getFunction() = func
and vptr_3540.(LocalVariable).getFunction() = func
and vendptr_3541.(LocalVariable).getFunction() = func
and vtype_3542.(LocalVariable).getFunction() = func
and volen_3542.(LocalVariable).getFunction() = func
and vval_3543.(LocalVariable).getFunction() = func
and vrfc_3544.(LocalVariable).getFunction() = func
and vefs_3545.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
