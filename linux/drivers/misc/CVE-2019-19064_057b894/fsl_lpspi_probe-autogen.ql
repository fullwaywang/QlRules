/**
 * @name linux-057b8945f78f76d0b04eeb5c27cd9225e5e7ad86-fsl_lpspi_probe
 * @id cpp/linux/057b8945f78f76d0b04eeb5c27cd9225e5e7ad86/fsl-lpspi-probe
 * @description linux-057b8945f78f76d0b04eeb5c27cd9225e5e7ad86-drivers/spi/spi-fsl-lpspi.c-fsl_lpspi_probe CVE-2019-19064
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(RelationalOperation target_2, Function func) {
exists(GotoStmt target_0 |
	target_0.getName() ="out_controller_put"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vret_844, RelationalOperation target_2, ReturnStmt target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=vret_844
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vret_844, BlockStmt target_3, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vret_844
	and target_2.getGreaterOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Function func, BlockStmt target_3) {
	target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("fsl_lpspi_data *")
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="failed to enable clock\n"
	and target_3.getStmt(1) instanceof ReturnStmt
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vret_844, ReturnStmt target_1, RelationalOperation target_2, BlockStmt target_3
where
not func_0(target_2, func)
and func_1(vret_844, target_2, target_1)
and func_2(vret_844, target_3, target_2)
and func_3(func, target_3)
and vret_844.getType().hasName("int")
and vret_844.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
