/**
 * @name linux-b239a37d68e8bc59f9516444da222841e3b13ba9-amdtp_domain_stream_pcm_pointer
 * @id cpp/linux/b239a37d68e8bc59f9516444da222841e3b13ba9/amdtp-domain-stream-pcm-pointer
 * @description linux-b239a37d68e8bc59f9516444da222841e3b13ba9-sound/firewire/amdtp-stream.c-amdtp_domain_stream_pcm_pointer CVE-2024-42274
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vs_1751, ExprStmt target_2) {
exists(EqualityOperation target_0 |
	exists(AddressOfExpr obj_0 | obj_0=target_0.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="period_work"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vs_1751
		)
	)
	and target_0.getLeftOperand().(FunctionCall).getTarget().hasName("current_work")
	and target_0.getParent().(IfStmt).getThen()=target_2
)
}

predicate func_1(ExprStmt target_2, Function func, NotExpr target_1) {
	exists(BitwiseAndExpr obj_0 | obj_0=target_1.getOperand() |
		obj_0.getLeftOperand().(FunctionCall).getTarget().hasName("preempt_count")
		and obj_0.getRightOperand().(BinaryBitwiseOperation).getValue()="65280"
	)
	and target_1.getParent().(IfStmt).getThen()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="context"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("amdtp_stream *")
		)
		and obj_0.getTarget().hasName("fw_iso_context_flush_completions")
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, Parameter vs_1751, NotExpr target_1, ExprStmt target_2
where
not func_0(vs_1751, target_2)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and vs_1751.getType().hasName("amdtp_stream *")
and vs_1751.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
