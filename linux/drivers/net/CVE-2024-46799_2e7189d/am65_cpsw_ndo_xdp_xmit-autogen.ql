/**
 * @name linux-2e7189d2b1de51fc2567676cd4f96c0fe0960b9f-am65_cpsw_ndo_xdp_xmit
 * @id cpp/linux/2e7189d2b1de51fc2567676cd4f96c0fe0960b9f/am65-cpsw-ndo-xdp-xmit
 * @description linux-2e7189d2b1de51fc2567676cd4f96c0fe0960b9f-drivers/net/ethernet/ti/am65-cpsw-nuss.c-am65_cpsw_ndo_xdp_xmit CVE-2024-46799
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="tx_ch_num"
	and target_1.getQualifier().(VariableAccess).getType().hasName("am65_cpsw_common *")
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Parameter vndev_1918, PointerFieldAccess target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getQualifier() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().hasName("netdev_priv")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vndev_1918
		)
		and obj_0.getTarget().getName()="port"
	)
	and target_2.getTarget().getName()="common"
}

from Function func, Parameter vndev_1918, PointerFieldAccess target_2
where
not func_1(func)
and func_2(vndev_1918, target_2)
and vndev_1918.getType().hasName("net_device *")
and vndev_1918.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
