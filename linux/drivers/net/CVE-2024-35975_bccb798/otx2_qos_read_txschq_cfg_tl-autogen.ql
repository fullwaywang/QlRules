/**
 * @name linux-bccb798e07f8bb8b91212fe8ed1e421685449076-otx2_qos_read_txschq_cfg_tl
 * @id cpp/linux/bccb798e07f8bb8b91212fe8ed1e421685449076/otx2-qos-read-txschq-cfg-tl
 * @description linux-bccb798e07f8bb8b91212fe8ed1e421685449076-drivers/net/ethernet/marvell/octeontx2/nic/qos.c-otx2_qos_read_txschq_cfg_tl CVE-2024-35975
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcfg_376, Variable vnode_378, Variable vcnt_379, ExprStmt target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="schq_index_used"
	and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfg_376
	and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="level"
	and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnode_378
	and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vcnt_379
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vcfg_376, Variable vnode_378, ExprStmt target_1) {
	target_1.getExpr().(PostfixIncrExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="schq_contig"
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfg_376
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="level"
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnode_378
}

predicate func_2(Parameter vcfg_376, Variable vnode_378, Variable vcnt_379, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="schq_contig_list"
	and target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfg_376
	and target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="level"
	and target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnode_378
	and target_2.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vcnt_379
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="schq"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnode_378
}

from Function func, Parameter vcfg_376, Variable vnode_378, Variable vcnt_379, ExprStmt target_1, ExprStmt target_2
where
not func_0(vcfg_376, vnode_378, vcnt_379, target_1, target_2)
and func_1(vcfg_376, vnode_378, target_1)
and func_2(vcfg_376, vnode_378, vcnt_379, target_2)
and vcfg_376.getType().hasName("otx2_qos_cfg *")
and vnode_378.getType().hasName("otx2_qos_node *")
and vcnt_379.getType().hasName("int")
and vcfg_376.getFunction() = func
and vnode_378.(LocalVariable).getFunction() = func
and vcnt_379.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
