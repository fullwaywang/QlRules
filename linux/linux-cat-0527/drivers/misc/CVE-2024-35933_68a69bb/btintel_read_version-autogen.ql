/**
 * @name linux-68a69bb2ecafaacdb998a87783068fb51736f43b-btintel_read_version
 * @id cpp/linux/68a69bb2ecafaacdb998a87783068fb51736f43b/btintel-read-version
 * @description linux-68a69bb2ecafaacdb998a87783068fb51736f43b-drivers/bluetooth/btintel.c-btintel_read_version CVE-2024-35933
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_340, BlockStmt target_1, FunctionCall target_0) {
	target_0.getTarget().hasName("IS_ERR")
	and not target_0.getTarget().hasName("IS_ERR_OR_NULL")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vskb_340
	and target_0.getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Variable vskb_340, BlockStmt target_1) {
	target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bt_err")
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="%s: Reading Intel version information failed (%ld)\n"
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="name"
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hci_dev *")
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_340
}

from Function func, Variable vskb_340, FunctionCall target_0, BlockStmt target_1
where
func_0(vskb_340, target_1, target_0)
and func_1(vskb_340, target_1)
and vskb_340.getType().hasName("sk_buff *")
and vskb_340.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
