/**
 * @name v8-9c0d3a4e07ace8c5a8eb3bd5b672ec56403e652d-v8__internal__compiler__IsAnyStore_
 * @id cpp/v8/9c0d3a4e07ace8c5a8eb3bd5b672ec56403e652d/v8internalcompilerisanystore
 * @description v8-9c0d3a4e07ace8c5a8eb3bd5b672ec56403e652d-src/compiler/js-native-context-specialization.cc-v8__internal__compiler__IsAnyStore_ CVE-2022-4906
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmode_58, LogicalOrExpr target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof LogicalOrExpr
	and target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vmode_58
	and target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vmode_58, LogicalOrExpr target_1) {
	target_1.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vmode_58
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vmode_58
}

from Function func, Parameter vmode_58, LogicalOrExpr target_1
where
not func_0(vmode_58, target_1)
and func_1(vmode_58, target_1)
and vmode_58.getType().hasName("AccessMode")
and vmode_58.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
