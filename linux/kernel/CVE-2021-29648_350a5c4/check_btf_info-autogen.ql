/**
 * @name linux-350a5c4dd2452ea999cc5e1d4a8dbf12de2f97ef-check_btf_info
 * @id cpp/linux/350a5c4dd2452ea999cc5e1d4a8dbf12de2f97ef/check-btf-info
 * @description linux-350a5c4dd2452ea999cc5e1d4a8dbf12de2f97ef-kernel/bpf/verifier.c-check_btf_info CVE-2021-29648
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbtf_9047, ExprStmt target_1, FunctionCall target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("btf_is_kernel")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbtf_9047
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("btf_put")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbtf_9047
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-13"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vbtf_9047, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="btf"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="aux"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="prog"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vbtf_9047
}

predicate func_2(Variable vbtf_9047, FunctionCall target_2) {
	target_2.getTarget().hasName("PTR_ERR")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vbtf_9047
}

from Function func, Variable vbtf_9047, ExprStmt target_1, FunctionCall target_2
where
not func_0(vbtf_9047, target_1, target_2, func)
and func_1(vbtf_9047, target_1)
and func_2(vbtf_9047, target_2)
and vbtf_9047.getType().hasName("btf *")
and vbtf_9047.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
