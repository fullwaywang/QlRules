/**
 * @name linux-db8fd2cde93227e566a412cf53173ffa227998bc-mwifiex_pcie_alloc_cmdrsp_buf
 * @id cpp/linux/db8fd2cde93227e566a412cf53173ffa227998bc/mwifiex-pcie-alloc-cmdrsp-buf
 * @description linux-db8fd2cde93227e566a412cf53173ffa227998bc-drivers/net/wireless/marvell/mwifiex/pcie.c-mwifiex_pcie_alloc_cmdrsp_buf CVE-2019-19056
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_1021, FunctionCall target_2, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_1021
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(FunctionCall target_2, Function func, ReturnStmt target_1) {
		target_1.getExpr().(UnaryMinusExpr).getValue()="-1"
		and target_1.getParent().(IfStmt).getCondition()=target_2
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vskb_1021, FunctionCall target_2) {
		target_2.getTarget().hasName("mwifiex_map_pci_memory")
		and target_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("mwifiex_adapter *")
		and target_2.getArgument(1).(VariableAccess).getTarget()=vskb_1021
		and target_2.getArgument(2).(Literal).getValue()="2312"
}

predicate func_3(Variable vskb_1021, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cmdrsp_buf"
		and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("pcie_service_card *")
		and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vskb_1021
}

from Function func, Variable vskb_1021, ReturnStmt target_1, FunctionCall target_2, ExprStmt target_3
where
not func_0(vskb_1021, target_2, target_3)
and func_1(target_2, func, target_1)
and func_2(vskb_1021, target_2)
and func_3(vskb_1021, target_3)
and vskb_1021.getType().hasName("sk_buff *")
and vskb_1021.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
