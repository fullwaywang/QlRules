/**
 * @name linux-0558f33c06bb910e2879e355192227a8e8f0219d-sas_revalidate_domain
 * @id cpp/linux/0558f33c06bb910e2879e355192227a8e8f0219d/sas-revalidate-domain
 * @description linux-0558f33c06bb910e2879e355192227a8e8f0219d-drivers/scsi/libsas/sas_discover.c-sas_revalidate_domain CVE-2017-18232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vport_501, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("sas_destruct_devices")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vport_501
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vport_501, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("sas_destruct_ports")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vport_501
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_2(Variable vport_501, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("sas_probe_devices")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vport_501
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_3(Variable vport_501, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_3.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="7sas: done REVALIDATING DOMAIN on port %d, pid:%d, res 0x%x\n"
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="id"
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_501
	and target_3.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("task_pid_nr")
	and target_3.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("get_current")
	and target_3.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vport_501, ExprStmt target_3
where
not func_0(vport_501, target_3, func)
and not func_1(vport_501, func)
and not func_2(vport_501, func)
and func_3(vport_501, target_3)
and vport_501.getType().hasName("asd_sas_port *")
and vport_501.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
