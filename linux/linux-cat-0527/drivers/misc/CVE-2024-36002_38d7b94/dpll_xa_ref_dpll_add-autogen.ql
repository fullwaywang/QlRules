/**
 * @name linux-38d7b94e81d068b8d8c8392f421cfd2c3bbfd1a6-dpll_xa_ref_dpll_add
 * @id cpp/linux/38d7b94e81d068b8d8c8392f421cfd2c3bbfd1a6/dpll-xa-ref-dpll-add
 * @description linux-38d7b94e81d068b8d8c8392f421cfd2c3bbfd1a6-drivers/dpll/dpll_core.c-dpll_xa_ref_dpll_add CVE-2024-36002
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="32"
	and target_0.getEnclosingFunction() = func
}

predicate func_2(Variable vreg_151, IfStmt target_3, ExprStmt target_4, AddressOfExpr target_5, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cookie"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_151
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("void *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_3.getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Function func, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget().getType().hasName("bool")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("refcount_inc")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="refcount"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dpll_pin_ref *")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vreg_151, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="priv"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_151
	and target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("void *")
}

predicate func_5(Variable vreg_151, AddressOfExpr target_5) {
	target_5.getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_151
}

from Function func, Variable vreg_151, SizeofExprOperator target_0, IfStmt target_3, ExprStmt target_4, AddressOfExpr target_5
where
func_0(func, target_0)
and not func_2(vreg_151, target_3, target_4, target_5, func)
and func_3(func, target_3)
and func_4(vreg_151, target_4)
and func_5(vreg_151, target_5)
and vreg_151.getType().hasName("dpll_pin_registration *")
and vreg_151.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
