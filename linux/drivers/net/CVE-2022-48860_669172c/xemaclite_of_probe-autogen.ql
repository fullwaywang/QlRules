/**
 * @name linux-669172ce976608b25a2f76f3c65d47f042d125c9-xemaclite_of_probe
 * @id cpp/linux/669172ce976608b25a2f76f3c65d47f042d125c9/xemaclite-of-probe
 * @description linux-669172ce976608b25a2f76f3c65d47f042d125c9-drivers/net/ethernet/xilinx/xilinx_emaclite.c-xemaclite_of_probe CVE-2022-48860
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlp_1101, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="phy_node"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vlp_1101
		)
		and obj_0.getTarget().hasName("of_node_put")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("xemaclite_remove_ndev")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("net_device *")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vlp_1101, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(2) |
			obj_1.getTarget().getName()="mem_start"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getArgument(3) |
			obj_2.getTarget().getName()="base_addr"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vlp_1101
		)
		and exists(PointerFieldAccess obj_3 | obj_3=obj_0.getArgument(4) |
			obj_3.getTarget().getName()="irq"
			and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
		)
		and obj_0.getTarget().hasName("_dev_info")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("device *")
		and obj_0.getArgument(1).(StringLiteral).getValue()="Xilinx EmacLite at 0x%08X mapped to 0x%p, irq=%d\n"
	)
}

from Function func, Variable vlp_1101, ExprStmt target_1, ExprStmt target_2
where
not func_0(vlp_1101, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vlp_1101, target_2)
and vlp_1101.getType().hasName("net_local *")
and vlp_1101.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
