/**
 * @name linux-3cfc183052c3dbf8eae57b6c1685dab00ed3db4a-mxsfb_irq_disable
 * @id cpp/linux/3cfc183052c3dbf8eae57b6c1685dab00ed3db4a/mxsfb-irq-disable
 * @description linux-3cfc183052c3dbf8eae57b6c1685dab00ed3db4a-drivers/gpu/drm/mxsfb/mxsfb_drv.c-mxsfb_irq_disable CVE-2021-47471
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmxsfb_173) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("writel")
	and target_0.getArgument(0).(BinaryBitwiseOperation).getValue()="8192"
	and target_0.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="base"
	and target_0.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmxsfb_173
	and target_0.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="16"
	and target_0.getArgument(1).(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="8")
}

predicate func_1(Variable vmxsfb_173, ExprStmt target_5, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("writel")
	and target_1.getExpr().(FunctionCall).getArgument(0).(BinaryBitwiseOperation).getValue()="512"
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="base"
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmxsfb_173
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="16"
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="8"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_5.getLocation()))
}

predicate func_2(Variable vmxsfb_173, VariableAccess target_2) {
	target_2.getTarget()=vmxsfb_173
}

predicate func_3(Variable vmxsfb_173, VariableAccess target_3) {
	target_3.getTarget()=vmxsfb_173
	and target_3.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(VariableCall).getParent().(ExprStmt).getExpr() instanceof VariableCall
}

predicate func_4(Variable vmxsfb_173, VariableCall target_4) {
	target_4.getExpr().(PointerFieldAccess).getTarget().getName()="disable_vblank"
	and target_4.getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="funcs"
	and target_4.getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="crtc"
	and target_4.getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmxsfb_173
	and target_4.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="crtc"
	and target_4.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmxsfb_173
}

predicate func_5(Variable vmxsfb_173, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("mxsfb_disable_axi_clk")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmxsfb_173
}

from Function func, Variable vmxsfb_173, VariableAccess target_2, VariableAccess target_3, VariableCall target_4, ExprStmt target_5
where
not func_0(vmxsfb_173)
and not func_1(vmxsfb_173, target_5, func)
and func_2(vmxsfb_173, target_2)
and func_3(vmxsfb_173, target_3)
and func_4(vmxsfb_173, target_4)
and func_5(vmxsfb_173, target_5)
and vmxsfb_173.getType().hasName("mxsfb_drm_private *")
and vmxsfb_173.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
