/**
 * @name linux-181d8d2066c000ba0a0e6940a7ad80f1a0e68e9d-sctp_stream_init
 * @id cpp/linux/181d8d2066c000ba0a0e6940a7ad80f1a0e68e9d/sctp-stream-init
 * @description linux-181d8d2066c000ba0a0e6940a7ad80f1a0e68e9d-net/sctp/stream.c-sctp_stream_init CVE-2023-2177
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_14, Function func) {
exists(ReturnStmt target_0 |
	target_0.getExpr() instanceof Literal
	and target_0.getParent().(IfStmt).getCondition()=target_14
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(ExprStmt target_7, Function func) {
exists(ReturnStmt target_1 |
	target_1.getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_7.getLocation()))
}

predicate func_2(Parameter vstream_119, Parameter vincnt_119, Parameter vgfp_120, Variable vret_123, FunctionCall target_2) {
	target_2.getTarget().hasName("sctp_stream_alloc_in")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vstream_119
	and target_2.getArgument(1).(VariableAccess).getTarget()=vincnt_119
	and target_2.getArgument(2).(VariableAccess).getTarget()=vgfp_120
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_123
}

predicate func_3(Variable vret_123, Function func, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vret_123
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_5(VariableAccess target_15, Function func, GotoStmt target_5) {
	target_5.getName() ="out_err"
	and target_5.getParent().(IfStmt).getCondition()=target_15
	and target_5.getEnclosingFunction() = func
}

predicate func_6(NotExpr target_14, Function func, GotoStmt target_6) {
	target_6.getName() ="out"
	and target_6.getParent().(IfStmt).getCondition()=target_14
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vret_123, Function func, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_123
	and target_7.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vret_123, Function func, IfStmt target_8) {
	target_8.getCondition().(VariableAccess).getTarget()=vret_123
	and target_8.getThen().(GotoStmt).getName() ="in_err"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Function func, GotoStmt target_9) {
	target_9.getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Parameter vstream_119, Variable vsched_122, Function func, ExprStmt target_10) {
	target_10.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="free"
	and target_10.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsched_122
	and target_10.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vstream_119
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Parameter vstream_119, Function func, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("__genradix_free")
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tree"
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="in"
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstream_119
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Parameter vstream_119, Function func, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("__genradix_free")
	and target_12.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tree"
	and target_12.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="out"
	and target_12.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstream_119
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Parameter vstream_119, Function func, ExprStmt target_13) {
	target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="outcnt"
	and target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstream_119
	and target_13.getExpr().(AssignExpr).getRValue() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
}

predicate func_14(Parameter vincnt_119, NotExpr target_14) {
	target_14.getOperand().(VariableAccess).getTarget()=vincnt_119
}

predicate func_15(Variable vret_123, VariableAccess target_15) {
	target_15.getTarget()=vret_123
	and target_15.getParent().(IfStmt).getThen() instanceof GotoStmt
}

from Function func, Parameter vstream_119, Parameter vincnt_119, Parameter vgfp_120, Variable vsched_122, Variable vret_123, FunctionCall target_2, ReturnStmt target_3, GotoStmt target_5, GotoStmt target_6, ExprStmt target_7, IfStmt target_8, GotoStmt target_9, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12, ExprStmt target_13, NotExpr target_14, VariableAccess target_15
where
not func_0(target_14, func)
and not func_1(target_7, func)
and func_2(vstream_119, vincnt_119, vgfp_120, vret_123, target_2)
and func_3(vret_123, func, target_3)
and func_5(target_15, func, target_5)
and func_6(target_14, func, target_6)
and func_7(vret_123, func, target_7)
and func_8(vret_123, func, target_8)
and func_9(func, target_9)
and func_10(vstream_119, vsched_122, func, target_10)
and func_11(vstream_119, func, target_11)
and func_12(vstream_119, func, target_12)
and func_13(vstream_119, func, target_13)
and func_14(vincnt_119, target_14)
and func_15(vret_123, target_15)
and vstream_119.getType().hasName("sctp_stream *")
and vincnt_119.getType().hasName("__u16")
and vgfp_120.getType().hasName("gfp_t")
and vsched_122.getType().hasName("sctp_sched_ops *")
and vret_123.getType().hasName("int")
and vstream_119.getFunction() = func
and vincnt_119.getFunction() = func
and vgfp_120.getFunction() = func
and vsched_122.(LocalVariable).getFunction() = func
and vret_123.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
