/**
 * @name linux-93995bf4af2c5a99e2a87f0cd5ce547d31eb7630-nft_setelem_catchall_remove
 * @id cpp/linux/93995bf4af2c5a99e2a87f0cd5ce547d31eb7630/nft-setelem-catchall-remove
 * @description linux-93995bf4af2c5a99e2a87f0cd5ce547d31eb7630-nft_setelem_catchall_remove CVE-2023-6111
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcatchall_6527, FunctionCall target_0) {
		target_0.getTarget().hasName("list_del_rcu")
		and not target_0.getTarget().hasName("nft_setelem_catchall_destroy")
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcatchall_6527
}

predicate func_1(Variable vcatchall_6527, VariableAccess target_1) {
		target_1.getTarget()=vcatchall_6527
		and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vcatchall_6527, EqualityOperation target_10, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="list"
		and target_2.getQualifier().(VariableAccess).getTarget()=vcatchall_6527
		and target_10.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(VariableAccess).getLocation())
}

predicate func_3(Variable v___p_6532, EqualityOperation target_10, DoStmt target_3) {
		target_3.getCondition().(Literal).getValue()="0"
		and target_3.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=v___p_6532
		and target_3.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_3.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvfree_call_rcu")
		and target_3.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=v___p_6532
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

/*predicate func_5(Variable v___p_6532, IfStmt target_5) {
		target_5.getCondition().(VariableAccess).getTarget()=v___p_6532
		and target_5.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_5.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
		and target_5.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__compiletime_assert_1542")
		and target_5.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kvfree_call_rcu")
		and target_5.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rcu"
		and target_5.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=v___p_6532
		and target_5.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=v___p_6532
}

*/
/*predicate func_6(VariableAccess target_11, Function func, DoStmt target_6) {
		target_6.getCondition().(Literal).getValue()="0"
		and target_6.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
		and target_6.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__compiletime_assert_1542")
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
		and target_6.getEnclosingFunction() = func
}

*/
/*predicate func_8(Function func, IfStmt target_8) {
		target_8.getCondition().(NotExpr).getValue()="0"
		and target_8.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__compiletime_assert_1542")
		and target_8.getEnclosingFunction() = func
}

*/
/*predicate func_9(Variable v___p_6532, VariableAccess target_11, ExprStmt target_9) {
		target_9.getExpr().(FunctionCall).getTarget().hasName("kvfree_call_rcu")
		and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rcu"
		and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=v___p_6532
		and target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=v___p_6532
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

*/
predicate func_10(Variable vcatchall_6527, EqualityOperation target_10) {
		target_10.getAnOperand().(PointerFieldAccess).getTarget().getName()="elem"
		and target_10.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcatchall_6527
		and target_10.getAnOperand().(VariableAccess).getTarget().getType().hasName("nft_elem_priv *")
}

predicate func_11(Variable v___p_6532, BlockStmt target_12, VariableAccess target_11) {
		target_11.getTarget()=v___p_6532
		and target_11.getParent().(IfStmt).getThen()=target_12
}

predicate func_12(Function func, BlockStmt target_12) {
		target_12.getStmt(0) instanceof DoStmt
		and target_12.getStmt(1) instanceof ExprStmt
		and target_12.getEnclosingFunction() = func
}

from Function func, Variable vcatchall_6527, Variable v___p_6532, FunctionCall target_0, VariableAccess target_1, PointerFieldAccess target_2, DoStmt target_3, EqualityOperation target_10, VariableAccess target_11, BlockStmt target_12
where
func_0(vcatchall_6527, target_0)
and func_1(vcatchall_6527, target_1)
and func_2(vcatchall_6527, target_10, target_2)
and func_3(v___p_6532, target_10, target_3)
and func_10(vcatchall_6527, target_10)
and func_11(v___p_6532, target_12, target_11)
and func_12(func, target_12)
and vcatchall_6527.getType().hasName("nft_set_elem_catchall *")
and v___p_6532.getType().hasName("nft_set_elem_catchall *")
and vcatchall_6527.(LocalVariable).getFunction() = func
and v___p_6532.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
