/**
 * @name curl-0bf8b796a0ea98395b390c7807187982215f5c11-operate
 * @id cpp/curl/0bf8b796a0ea98395b390c7807187982215f5c11/operate
 * @description curl-0bf8b796a0ea98395b390c7807187982215f5c11-src/tool_operate.c-operate CVE-2023-23914
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vshare_2710, NotExpr target_1, ExprStmt target_2, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("curl_share_setopt")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vshare_2710
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(9)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(NotExpr target_1) {
		target_1.getOperand().(VariableAccess).getTarget().getType().hasName("CURLcode")
}

predicate func_2(Variable vshare_2710, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("curl_share_setopt")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vshare_2710
}

predicate func_3(Variable vshare_2710, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("CURLcode")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("run_all_transfers")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("GlobalConfig *")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vshare_2710
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("CURLcode")
}

from Function func, Variable vshare_2710, NotExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vshare_2710, target_1, target_2, target_3)
and func_1(target_1)
and func_2(vshare_2710, target_2)
and func_3(vshare_2710, target_3)
and vshare_2710.getType().hasName("CURLSH *")
and vshare_2710.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
