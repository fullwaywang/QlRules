/**
 * @name linux-c278c253f3d992c6994d08aa0efb2b6806ca396f-arc_emac_tx_clean
 * @id cpp/linux/c278c253f3d992c6994d08aa0efb2b6806ca396f/arc-emac-tx-clean
 * @description linux-c278c253f3d992c6994d08aa0efb2b6806ca396f-drivers/net/ethernet/arc/emac_main.c-arc_emac_tx_clean CVE-2016-10906
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_163, ExprStmt target_4) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand() instanceof LogicalOrExpr
		and target_0.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vskb_163
		and target_0.getParent().(IfStmt).getThen() instanceof BreakStmt
		and target_0.getAnOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtx_buff_162, ExprStmt target_5) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="skb"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtx_buff_162
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_5.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vtxbd_161, Variable vinfo_164, LogicalOrExpr target_2) {
		target_2.getAnOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vinfo_164
		and target_2.getAnOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="-2147483648"
		and target_2.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="data"
		and target_2.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtxbd_161
		and target_2.getParent().(IfStmt).getThen() instanceof BreakStmt
}

predicate func_4(Variable vskb_163, ExprStmt target_4) {
		target_4.getExpr().(AssignAddExpr).getLValue().(PointerFieldAccess).getTarget().getName()="tx_bytes"
		and target_4.getExpr().(AssignAddExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device_stats *")
		and target_4.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="len"
		and target_4.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_163
}

predicate func_5(Variable vtx_buff_162, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("dma_unmap_single_attrs")
		and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
		and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
		and target_5.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="addr"
		and target_5.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtx_buff_162
		and target_5.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="len"
		and target_5.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtx_buff_162
		and target_5.getExpr().(FunctionCall).getArgument(4).(Literal).getValue()="0"
}

from Function func, Variable vtxbd_161, Variable vtx_buff_162, Variable vskb_163, Variable vinfo_164, LogicalOrExpr target_2, ExprStmt target_4, ExprStmt target_5
where
not func_0(vskb_163, target_4)
and not func_1(vtx_buff_162, target_5)
and func_2(vtxbd_161, vinfo_164, target_2)
and func_4(vskb_163, target_4)
and func_5(vtx_buff_162, target_5)
and vtxbd_161.getType().hasName("arc_emac_bd *")
and vtx_buff_162.getType().hasName("buffer_state *")
and vskb_163.getType().hasName("sk_buff *")
and vinfo_164.getType().hasName("unsigned int")
and vtxbd_161.(LocalVariable).getFunction() = func
and vtx_buff_162.(LocalVariable).getFunction() = func
and vskb_163.(LocalVariable).getFunction() = func
and vinfo_164.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
