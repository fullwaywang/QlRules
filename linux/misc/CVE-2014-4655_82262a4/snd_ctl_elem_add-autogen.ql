/**
 * @name linux-82262a46627bebb0febcc26664746c25cef08563-snd_ctl_elem_add
 * @id cpp/linux/82262a46627bebb0febcc26664746c25cef08563/snd-ctl-elem-add
 * @description linux-82262a46627bebb0febcc26664746c25cef08563-sound/core/control.c-snd_ctl_elem_add CVE-2014-4655
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreplace_1148, IfStmt target_18, VariableAccess target_0) {
	target_0.getTarget()=vreplace_1148
	and vreplace_1148.getIndex() = 2
	and target_0.getLocation().isBefore(target_18.getCondition().(VariableAccess).getLocation())
}

predicate func_1(Variable vcard_1150, Variable v_kctl_1151, Variable verr_1155, FunctionCall target_1) {
	target_1.getTarget().hasName("snd_ctl_remove")
	and not target_1.getTarget().hasName("snd_ctl_remove_user_ctl")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vcard_1150
	and target_1.getArgument(1).(VariableAccess).getTarget()=v_kctl_1151
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
}

predicate func_2(Parameter vreplace_1148, ExprStmt target_21, IfStmt target_18, VariableAccess target_2) {
	target_2.getTarget()=vreplace_1148
	and vreplace_1148.getIndex() = 2
	and target_2.getParent().(IfStmt).getThen()=target_21
	and target_18.getCondition().(VariableAccess).getLocation().isBefore(target_2.getLocation())
}

predicate func_3(IfStmt target_22, Function func, IfStmt target_3) {
	target_3.getCondition() instanceof LogicalAndExpr
	and target_3.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_3.getLocation().isBefore(target_22.getLocation())
	and target_3.getEnclosingFunction() = func
}

predicate func_5(VariableAccess target_17, Function func) {
exists(ReturnStmt target_5 |
	target_5.getExpr().(VariableAccess).getType().hasName("int")
	and target_5.getParent().(IfStmt).getCondition()=target_17
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Variable vcard_1150, AddressOfExpr target_6) {
	target_6.getOperand().(PointerFieldAccess).getTarget().getName()="controls_rwsem"
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_1150
	and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_7(Variable vcard_1150, AddressOfExpr target_7) {
	target_7.getOperand().(PointerFieldAccess).getTarget().getName()="controls_rwsem"
	and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_1150
	and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Variable verr_1155, ReturnStmt target_23, RelationalOperation target_8) {
	 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
	and target_8.getLesserOperand().(VariableAccess).getTarget()=verr_1155
	and target_8.getGreaterOperand().(Literal).getValue()="0"
	and target_8.getParent().(IfStmt).getThen()=target_23
}

predicate func_9(Variable vcard_1150, ReturnStmt target_24, RelationalOperation target_9) {
	 (target_9 instanceof GEExpr or target_9 instanceof LEExpr)
	and target_9.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_count"
	and target_9.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_1150
	and target_9.getLesserOperand().(Literal).getValue()="32"
	and target_9.getParent().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_9.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_24
}

predicate func_10(Parameter vinfo_1148, AddressOfExpr target_10) {
	target_10.getOperand().(PointerFieldAccess).getTarget().getName()="id"
	and target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_1148
	and target_10.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_11(Parameter vreplace_1148, ExprStmt target_25, VariableAccess target_11) {
	target_11.getTarget()=vreplace_1148
	and target_11.getParent().(IfStmt).getThen()=target_25
}

predicate func_12(Parameter vreplace_1148, ReturnStmt target_24, LogicalAndExpr target_12) {
	target_12.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vreplace_1148
	and target_12.getRightOperand() instanceof RelationalOperation
	and target_12.getParent().(IfStmt).getThen()=target_24
}

predicate func_13(Function func, FunctionCall target_13) {
	target_13.getTarget().hasName("down_write")
	and target_13.getArgument(0) instanceof AddressOfExpr
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vcard_1150, Variable v_kctl_1151, Function func, ExprStmt target_14) {
	target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v_kctl_1151
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("snd_ctl_find_id")
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcard_1150
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1) instanceof AddressOfExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_15(Variable verr_1155, Function func, ExprStmt target_15) {
	target_15.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
	and target_15.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_17(Variable v_kctl_1151, BlockStmt target_26, ExprStmt target_14, ExprStmt target_25, VariableAccess target_17) {
	target_17.getTarget()=v_kctl_1151
	and target_17.getParent().(IfStmt).getThen()=target_26
	and target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_17.getLocation())
}

predicate func_18(Parameter vreplace_1148, Variable verr_1155, VariableAccess target_17, IfStmt target_18) {
	target_18.getCondition().(VariableAccess).getTarget()=vreplace_1148
	and target_18.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
	and target_18.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_18.getElse().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
	and target_18.getElse().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-16"
	and target_18.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_19(Parameter vreplace_1148, Variable verr_1155, VariableAccess target_17, IfStmt target_19) {
	target_19.getCondition().(VariableAccess).getTarget()=vreplace_1148
	and target_19.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
	and target_19.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-2"
	and target_19.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_20(Function func, ExprStmt target_20) {
	target_20.getExpr().(FunctionCall).getTarget().hasName("up_write")
	and target_20.getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
}

predicate func_21(Function func, ExprStmt target_21) {
	target_21.getExpr() instanceof AssignExpr
	and target_21.getEnclosingFunction() = func
}

predicate func_22(Parameter vinfo_1148, IfStmt target_22) {
	target_22.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="count"
	and target_22.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_1148
	and target_22.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="1"
	and target_22.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
}

predicate func_23(Variable verr_1155, RelationalOperation target_8, ReturnStmt target_23) {
	target_23.getExpr().(VariableAccess).getTarget()=verr_1155
	and target_23.getParent().(IfStmt).getCondition()=target_8
}

predicate func_24(LogicalAndExpr target_12, Function func, ReturnStmt target_24) {
	target_24.getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_24.getParent().(IfStmt).getCondition()=target_12
	and target_24.getEnclosingFunction() = func
}

predicate func_25(Function func, ExprStmt target_25) {
	target_25.getExpr() instanceof AssignExpr
	and target_25.getEnclosingFunction() = func
}

predicate func_26(Function func, BlockStmt target_26) {
	target_26.getStmt(0) instanceof IfStmt
	and target_26.getEnclosingFunction() = func
}

from Function func, Parameter vinfo_1148, Parameter vreplace_1148, Variable vcard_1150, Variable v_kctl_1151, Variable verr_1155, VariableAccess target_0, FunctionCall target_1, VariableAccess target_2, IfStmt target_3, AddressOfExpr target_6, AddressOfExpr target_7, RelationalOperation target_8, RelationalOperation target_9, AddressOfExpr target_10, VariableAccess target_11, LogicalAndExpr target_12, FunctionCall target_13, ExprStmt target_14, ExprStmt target_15, VariableAccess target_17, IfStmt target_18, IfStmt target_19, ExprStmt target_20, ExprStmt target_21, IfStmt target_22, ReturnStmt target_23, ReturnStmt target_24, ExprStmt target_25, BlockStmt target_26
where
func_0(vreplace_1148, target_18, target_0)
and func_1(vcard_1150, v_kctl_1151, verr_1155, target_1)
and func_2(vreplace_1148, target_21, target_18, target_2)
and func_3(target_22, func, target_3)
and not func_5(target_17, func)
and func_6(vcard_1150, target_6)
and func_7(vcard_1150, target_7)
and func_8(verr_1155, target_23, target_8)
and func_9(vcard_1150, target_24, target_9)
and func_10(vinfo_1148, target_10)
and func_11(vreplace_1148, target_25, target_11)
and func_12(vreplace_1148, target_24, target_12)
and func_13(func, target_13)
and func_14(vcard_1150, v_kctl_1151, func, target_14)
and func_15(verr_1155, func, target_15)
and func_17(v_kctl_1151, target_26, target_14, target_25, target_17)
and func_18(vreplace_1148, verr_1155, target_17, target_18)
and func_19(vreplace_1148, verr_1155, target_17, target_19)
and func_20(func, target_20)
and func_21(func, target_21)
and func_22(vinfo_1148, target_22)
and func_23(verr_1155, target_8, target_23)
and func_24(target_12, func, target_24)
and func_25(func, target_25)
and func_26(func, target_26)
and vinfo_1148.getType().hasName("snd_ctl_elem_info *")
and vreplace_1148.getType().hasName("int")
and vcard_1150.getType().hasName("snd_card *")
and v_kctl_1151.getType().hasName("snd_kcontrol *")
and verr_1155.getType().hasName("int")
and vinfo_1148.getFunction() = func
and vreplace_1148.getFunction() = func
and vcard_1150.(LocalVariable).getFunction() = func
and v_kctl_1151.(LocalVariable).getFunction() = func
and verr_1155.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
