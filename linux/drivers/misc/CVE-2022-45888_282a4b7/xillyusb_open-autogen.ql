/**
 * @name linux-282a4b71816b6076029017a7bab3a9dcee12a920-xillyusb_open
 * @id cpp/linux/282a4b71816b6076029017a7bab3a9dcee12a920/xillyusb-open
 * @description linux-282a4b71816b6076029017a7bab3a9dcee12a920-drivers/char/xillybus/xillyusb.c-xillyusb_open CVE-2022-45888
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vxdev_1233, IfStmt target_6, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("kref_get")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="kref"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxdev_1233
	and target_6.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(ExprStmt target_7, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_7.getLocation()))
}

predicate func_2(VariableAccess target_8, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(ExprStmt target_9, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_9.getLocation()))
}

predicate func_4(Variable vxdev_1233, ExprStmt target_10, AddressOfExpr target_11, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(FunctionCall).getTarget().hasName("kref_put")
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="kref"
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxdev_1233
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_10.getLocation())
	and target_11.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Variable vrc_1237, VariableAccess target_8, ReturnStmt target_5) {
	target_5.getExpr().(VariableAccess).getTarget()=vrc_1237
	and target_5.getParent().(IfStmt).getCondition()=target_8
}

predicate func_6(Function func, IfStmt target_6) {
	target_6.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="f_mode"
	and target_6.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("file *")
	and target_6.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_6.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="open_for_read"
	and target_6.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("xillyusb_channel *")
	and target_6.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="f_mode"
	and target_6.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("file *")
	and target_6.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
	and target_6.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="open_for_write"
	and target_6.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("xillyusb_channel *")
	and target_6.getThen().(GotoStmt).getName() ="unmutex_fail"
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vxdev_1233, Variable vrc_1237, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1237
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("xillybus_find_inode")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vxdev_1233
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_8(Variable vrc_1237, ReturnStmt target_5, VariableAccess target_8) {
	target_8.getTarget()=vrc_1237
	and target_8.getParent().(IfStmt).getThen()=target_5
}

predicate func_9(Function func, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="private_data"
	and target_9.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("file *")
	and target_9.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("xillyusb_channel *")
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("xillyusb_channel *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Variable vxdev_1233, AddressOfExpr target_11) {
	target_11.getOperand().(PointerFieldAccess).getTarget().getName()="kref"
	and target_11.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxdev_1233
}

from Function func, Variable vxdev_1233, Variable vrc_1237, ExprStmt target_0, ReturnStmt target_5, IfStmt target_6, ExprStmt target_7, VariableAccess target_8, ExprStmt target_9, ExprStmt target_10, AddressOfExpr target_11
where
func_0(vxdev_1233, target_6, target_0)
and not func_1(target_7, func)
and not func_2(target_8, func)
and not func_3(target_9, func)
and not func_4(vxdev_1233, target_10, target_11, func)
and func_5(vrc_1237, target_8, target_5)
and func_6(func, target_6)
and func_7(vxdev_1233, vrc_1237, target_7)
and func_8(vrc_1237, target_5, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(vxdev_1233, target_11)
and vxdev_1233.getType().hasName("xillyusb_dev *")
and vrc_1237.getType().hasName("int")
and vxdev_1233.(LocalVariable).getFunction() = func
and vrc_1237.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
