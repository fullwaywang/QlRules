/**
 * @name linux-8ef35c866f8862df074a49a93b0309725812dea8-crng_reseed
 * @id cpp/linux/8ef35c866f8862df074a49a93b0309725812dea8/crng-reseed
 * @description linux-8ef35c866f8862df074a49a93b0309725812dea8-drivers/char/random.c-crng_reseed CVE-2018-1108
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalAndExpr target_1, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("numa_crng_init")
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func, LogicalAndExpr target_1) {
		target_1.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("crng_state *")
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("crng_state")
		and target_1.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="2"
		and target_1.getEnclosingFunction() = func
}

from Function func, LogicalAndExpr target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
