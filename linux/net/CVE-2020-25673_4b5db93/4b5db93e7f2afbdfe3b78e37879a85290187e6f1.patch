commit 4b5db93e7f2afbdfe3b78e37879a85290187e6f1
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:13 2021 +0800

    nfc: Avoid endless loops caused by repeated llcp_sock_connect()
    
    When sock_wait_state() returns -EINPROGRESS, "sk->sk_state" is
     LLCP_CONNECTING. In this case, llcp_sock_connect() is repeatedly invoked,
     nfc_llcp_sock_link() will add sk to local->connecting_sockets twice.
     sk->sk_node->next will point to itself, that will make an endless loop
     and hang-up the system.
    To fix it, check whether sk->sk_state is LLCP_CONNECTING in
     llcp_sock_connect() to avoid repeated invoking.
    
    Fixes: b4011239a08e ("NFC: llcp: Fix non blocking sockets connections")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.11
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/nfc/llcp_sock.c b/net/nfc/llcp_sock.c
index 59172614b249..a3b46f888803 100644
--- a/net/nfc/llcp_sock.c
+++ b/net/nfc/llcp_sock.c
@@ -673,6 +673,10 @@ static int llcp_sock_connect(struct socket *sock, struct sockaddr *_addr,
 		ret = -EISCONN;
 		goto error;
 	}
+	if (sk->sk_state == LLCP_CONNECTING) {
+		ret = -EINPROGRESS;
+		goto error;
+	}
 
 	dev = nfc_get_device(addr->dev_idx);
 	if (dev == NULL) {
