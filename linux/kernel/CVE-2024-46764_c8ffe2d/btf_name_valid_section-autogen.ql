/**
 * @name linux-c8ffe2d4d37a05ce18c71b87421443c16f8475e5-btf_name_valid_section
 * @id cpp/linux/c8ffe2d4d37a05ce18c71b87421443c16f8475e5/btf-name-valid-section
 * @description linux-c8ffe2d4d37a05ce18c71b87421443c16f8475e5-kernel/bpf/btf.c-btf_name_valid_section CVE-2024-46764
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsrc_817, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vsrc_817
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
)
}

predicate func_1(Variable vsrc_817, ExprStmt target_2, LogicalAndExpr target_4, Function func, ExprStmt target_1) {
	target_1.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vsrc_817
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_2.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation())
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
}

predicate func_2(Variable vsrc_817, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(PointerArithmeticOperation obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vsrc_817
			and obj_1.getRightOperand().(Literal).getValue()="512"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("const char *")
	)
}

predicate func_4(Variable vsrc_817, LogicalAndExpr target_4) {
	exists(RelationalOperation obj_0 | obj_0=target_4.getRightOperand() |
		obj_0.getLesserOperand().(VariableAccess).getTarget()=vsrc_817
		and obj_0.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("const char *")
	)
	and target_4.getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vsrc_817
}

from Function func, Variable vsrc_817, ExprStmt target_1, ExprStmt target_2, LogicalAndExpr target_4
where
not func_0(vsrc_817, target_2, func)
and func_1(vsrc_817, target_2, target_4, func, target_1)
and func_2(vsrc_817, target_2)
and func_4(vsrc_817, target_4)
and vsrc_817.getType().hasName("const char *")
and vsrc_817.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
