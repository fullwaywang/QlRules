/**
 * @name linux-303911cfc5b95d33687d9046133ff184cf5043ff-usb_deregister_dev
 * @id cpp/linux/303911cfc5b95d33687d9046133ff184cf5043ff/usb-deregister-dev
 * @description linux-303911cfc5b95d33687d9046133ff184cf5043ff-drivers/usb/core/file.c-usb_deregister_dev CVE-2019-19537
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vusb_class, Parameter vintf_230, ExprStmt target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("device_destroy")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="class"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vusb_class
	and target_0.getExpr().(FunctionCall).getArgument(1).(BitwiseOrExpr).getLeftOperand().(BinaryBitwiseOperation).getValue()="188743680"
	and target_0.getExpr().(FunctionCall).getArgument(1).(BitwiseOrExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="minor"
	and target_0.getExpr().(FunctionCall).getArgument(1).(BitwiseOrExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vintf_230
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("up_write")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("rw_semaphore")
	and target_1.getEnclosingFunction() = func
}

from Function func, Variable vusb_class, Parameter vintf_230, ExprStmt target_0, ExprStmt target_1
where
func_0(vusb_class, vintf_230, target_1, target_0)
and func_1(func, target_1)
and vusb_class.getType().hasName("usb_class *")
and vintf_230.getType().hasName("usb_interface *")
and not vusb_class.getParentScope+() = func
and vintf_230.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
