/**
 * @name linux-15fab63e1e57be9fdb5eec1bbc5916e9825e9acb-fuse_dev_splice_write
 * @id cpp/linux/15fab63e1e57be9fdb5eec1bbc5916e9825e9acb/fuse-dev-splice-write
 * @description linux-15fab63e1e57be9fdb5eec1bbc5916e9825e9acb-fs/fuse/dev.c-fuse_dev_splice_write CVE-2019-11487
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(RelationalOperation target_5, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand() instanceof FunctionCall
	and target_0.getThen().(GotoStmt).getName() ="out_free"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vpipe_2006, Variable vibuf_2044, FunctionCall target_1) {
	target_1.getTarget().hasName("pipe_buf_get")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vpipe_2006
	and target_1.getArgument(1).(VariableAccess).getTarget()=vibuf_2044
}

predicate func_2(RelationalOperation target_6, Function func, GotoStmt target_2) {
	target_2.getName() ="out"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vpipe_2006, RelationalOperation target_6, ExprStmt target_7, NotExpr target_8, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("pipe_unlock")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpipe_2006
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_4(RelationalOperation target_5, Function func, ExprStmt target_4) {
	target_4.getExpr() instanceof FunctionCall
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vibuf_2044, RelationalOperation target_5) {
	 (target_5 instanceof GEExpr or target_5 instanceof LEExpr)
	and target_5.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_5.getLesserOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_5.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vibuf_2044
}

predicate func_6(BlockStmt target_9, Function func, RelationalOperation target_6) {
	 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
	and target_6.getLesserOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_6.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_6.getParent().(IfStmt).getThen()=target_9
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Parameter vpipe_2006, ExprStmt target_7) {
	target_7.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getTarget().getName()="len"
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="bufs"
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_2006
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(BitwiseAndExpr).getLeftOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="curbuf"
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(BitwiseAndExpr).getLeftOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(BitwiseAndExpr).getRightOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="buffers"
	and target_7.getExpr().(AssignAddExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(BitwiseAndExpr).getRightOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_8(Parameter vpipe_2006, NotExpr target_8) {
	target_8.getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_8.getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="buffers"
	and target_8.getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_2006
}

predicate func_9(Function func, BlockStmt target_9) {
	target_9.getStmt(0) instanceof ExprStmt
	and target_9.getStmt(1) instanceof GotoStmt
	and target_9.getEnclosingFunction() = func
}

from Function func, Parameter vpipe_2006, Variable vibuf_2044, FunctionCall target_1, GotoStmt target_2, ExprStmt target_3, ExprStmt target_4, RelationalOperation target_5, RelationalOperation target_6, ExprStmt target_7, NotExpr target_8, BlockStmt target_9
where
not func_0(target_5, func)
and func_1(vpipe_2006, vibuf_2044, target_1)
and func_2(target_6, func, target_2)
and func_3(vpipe_2006, target_6, target_7, target_8, target_3)
and func_4(target_5, func, target_4)
and func_5(vibuf_2044, target_5)
and func_6(target_9, func, target_6)
and func_7(vpipe_2006, target_7)
and func_8(vpipe_2006, target_8)
and func_9(func, target_9)
and vpipe_2006.getType().hasName("pipe_inode_info *")
and vibuf_2044.getType().hasName("pipe_buffer *")
and vpipe_2006.getFunction() = func
and vibuf_2044.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
