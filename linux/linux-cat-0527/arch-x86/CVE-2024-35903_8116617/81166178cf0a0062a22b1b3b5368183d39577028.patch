commit 81166178cf0a0062a22b1b3b5368183d39577028
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Apr 1 20:55:29 2024 +0200

    x86/bpf: Fix IP after emitting call depth accounting
    
    commit 9d98aa088386aee3db1b7b60b800c0fde0654a4a upstream.
    
    Adjust the IP passed to `emit_patch` so it calculates the correct offset
    for the CALL instruction if `x86_call_depth_emit_accounting` emits code.
    Otherwise we will skip some instructions and most likely crash.
    
    Fixes: b2e9dfe54be4 ("x86/bpf: Emit call depth accounting if required")
    Link: https://lore.kernel.org/lkml/20230105214922.250473-1-joanbrugueram@gmail.com/
    Co-developed-by: Joan Bruguera Micó <joanbrugueram@gmail.com>
    Signed-off-by: Joan Bruguera Micó <joanbrugueram@gmail.com>
    Signed-off-by: Uros Bizjak <ubizjak@gmail.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/r/20240401185821.224068-2-ubizjak@gmail.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/x86/net/bpf_jit_comp.c b/arch/x86/net/bpf_jit_comp.c
index 919f647c740f..df484885ccd4 100644
--- a/arch/x86/net/bpf_jit_comp.c
+++ b/arch/x86/net/bpf_jit_comp.c
@@ -466,7 +466,7 @@ static int emit_call(u8 **pprog, void *func, void *ip)
 static int emit_rsb_call(u8 **pprog, void *func, void *ip)
 {
 	OPTIMIZER_HIDE_VAR(func);
-	x86_call_depth_emit_accounting(pprog, func);
+	ip += x86_call_depth_emit_accounting(pprog, func);
 	return emit_patch(pprog, func, ip, 0xE8);
 }
 
