/**
 * @name linux-97113eb39fa7972722ff490b947d8af023e1f6a2-move_page_tables
 * @id cpp/linux/97113eb39fa7972722ff490b947d8af023e1f6a2/move-page-tables
 * @description linux-97113eb39fa7972722ff490b947d8af023e1f6a2-move_page_tables CVE-2022-41222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_2(Parameter vneed_rmap_locks_469, ExprStmt target_4, LogicalAndExpr target_5, VariableAccess target_2) {
		target_2.getTarget()=vneed_rmap_locks_469
		and target_2.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_2.getParent().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_2.getParent().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_2.getParent().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("pud_t *")
		and target_2.getParent().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("pud_t *")
		and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen() instanceof ContinueStmt
		and target_4.getExpr().(FunctionCall).getArgument(6).(VariableAccess).getLocation().isBefore(target_2.getLocation())
		and target_2.getLocation().isBefore(target_5.getAnOperand().(FunctionCall).getArgument(6).(VariableAccess).getLocation())
}

predicate func_3(Parameter vneed_rmap_locks_469, LogicalAndExpr target_5, ExprStmt target_6, VariableAccess target_3) {
		target_3.getTarget()=vneed_rmap_locks_469
		and target_3.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_3.getParent().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_3.getParent().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_3.getParent().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("pmd_t *")
		and target_3.getParent().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("pmd_t *")
		and target_3.getParent().(FunctionCall).getParent().(IfStmt).getThen() instanceof ContinueStmt
		and target_5.getAnOperand().(FunctionCall).getArgument(6).(VariableAccess).getLocation().isBefore(target_3.getLocation())
		and target_3.getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(7).(VariableAccess).getLocation())
}

predicate func_4(Parameter vneed_rmap_locks_469, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("move_pgt_entry")
		and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_4.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_4.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_4.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("pud_t *")
		and target_4.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("pud_t *")
		and target_4.getExpr().(FunctionCall).getArgument(6).(VariableAccess).getTarget()=vneed_rmap_locks_469
}

predicate func_5(Parameter vneed_rmap_locks_469, LogicalAndExpr target_5) {
		target_5.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(BinaryBitwiseOperation).getValue()="2097152"
		and target_5.getAnOperand().(FunctionCall).getTarget().hasName("move_pgt_entry")
		and target_5.getAnOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_5.getAnOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_5.getAnOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_5.getAnOperand().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("pmd_t *")
		and target_5.getAnOperand().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("pmd_t *")
		and target_5.getAnOperand().(FunctionCall).getArgument(6).(VariableAccess).getTarget()=vneed_rmap_locks_469
}

predicate func_6(Parameter vneed_rmap_locks_469, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("move_ptes")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_6.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("pmd_t *")
		and target_6.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_6.getExpr().(FunctionCall).getArgument(3).(AddExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_6.getExpr().(FunctionCall).getArgument(3).(AddExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_6.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_6.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("pmd_t *")
		and target_6.getExpr().(FunctionCall).getArgument(6).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_6.getExpr().(FunctionCall).getArgument(7).(VariableAccess).getTarget()=vneed_rmap_locks_469
}

from Function func, Parameter vneed_rmap_locks_469, VariableAccess target_2, VariableAccess target_3, ExprStmt target_4, LogicalAndExpr target_5, ExprStmt target_6
where
func_2(vneed_rmap_locks_469, target_4, target_5, target_2)
and func_3(vneed_rmap_locks_469, target_5, target_6, target_3)
and func_4(vneed_rmap_locks_469, target_4)
and func_5(vneed_rmap_locks_469, target_5)
and func_6(vneed_rmap_locks_469, target_6)
and vneed_rmap_locks_469.getType().hasName("bool")
and vneed_rmap_locks_469.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
