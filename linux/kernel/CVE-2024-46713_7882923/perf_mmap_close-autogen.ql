/**
 * @name linux-7882923f1cb88dc1a17f2bf0c81b1fc80d44db82-perf_mmap_close
 * @id cpp/linux/7882923f1cb88dc1a17f2bf0c81b1fc80d44db82/perf-mmap-close
 * @description linux-7882923f1cb88dc1a17f2bf0c81b1fc80d44db82-kernel/events/core.c-perf_mmap_close CVE-2024-46713
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrb_6084, AddressOfExpr target_4, SubExpr target_5) {
exists(PointerFieldAccess target_0 |
	target_0.getTarget().getName()="aux_mutex"
	and target_0.getQualifier().(VariableAccess).getTarget()=vrb_6084
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation())
	and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vrb_6084, AddressOfExpr target_6, AddressOfExpr target_7) {
exists(AddressOfExpr target_1 |
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getOperand() |
		obj_0.getTarget().getName()="aux_mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vrb_6084
	)
	and exists(FunctionCall obj_1 | obj_1=target_1.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("mutex_unlock")
				and obj_3.getArgument(0) instanceof AddressOfExpr
			)
		)
	)
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vevent_6083, Variable vrb_6084, PointerFieldAccess target_2) {
	exists(AddressOfExpr obj_0 | obj_0=target_2.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getParent() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRightOperand() |
					exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(0) |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
							obj_5.getTarget().getName()="aux_mmap_count"
							and obj_5.getQualifier().(VariableAccess).getTarget()=vrb_6084
						)
					)
					and obj_3.getTarget().hasName("atomic_dec_and_mutex_lock")
				)
			)
		)
	)
	and target_2.getTarget().getName()="mmap_mutex"
	and target_2.getQualifier().(VariableAccess).getTarget()=vevent_6083
}

predicate func_3(Variable vevent_6083, AddressOfExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="mmap_mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vevent_6083
	)
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

predicate func_4(Variable vrb_6084, AddressOfExpr target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getOperand() |
		obj_0.getTarget().getName()="aux_mmap_count"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vrb_6084
	)
}

predicate func_5(Variable vrb_6084, SubExpr target_5) {
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getLeftOperand() |
		obj_0.getTarget().getName()="aux_nr_pages"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vrb_6084
	)
	and exists(PointerFieldAccess obj_1 | obj_1=target_5.getRightOperand() |
		obj_1.getTarget().getName()="aux_mmap_locked"
		and obj_1.getQualifier().(VariableAccess).getTarget()=vrb_6084
	)
}

predicate func_6(Variable vrb_6084, AddressOfExpr target_6) {
	exists(PointerFieldAccess obj_0 | obj_0=target_6.getOperand() |
		obj_0.getTarget().getName()="aux_refcount"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vrb_6084
	)
}

predicate func_7(Variable vrb_6084, AddressOfExpr target_7) {
	exists(PointerFieldAccess obj_0 | obj_0=target_7.getOperand() |
		obj_0.getTarget().getName()="mmap_count"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vrb_6084
	)
}

from Function func, Variable vevent_6083, Variable vrb_6084, PointerFieldAccess target_2, AddressOfExpr target_3, AddressOfExpr target_4, SubExpr target_5, AddressOfExpr target_6, AddressOfExpr target_7
where
not func_0(vrb_6084, target_4, target_5)
and not func_1(vrb_6084, target_6, target_7)
and func_2(vevent_6083, vrb_6084, target_2)
and func_3(vevent_6083, target_3)
and func_4(vrb_6084, target_4)
and func_5(vrb_6084, target_5)
and func_6(vrb_6084, target_6)
and func_7(vrb_6084, target_7)
and vevent_6083.getType().hasName("perf_event *")
and vrb_6084.getType().hasName("perf_buffer *")
and vevent_6083.(LocalVariable).getFunction() = func
and vrb_6084.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
