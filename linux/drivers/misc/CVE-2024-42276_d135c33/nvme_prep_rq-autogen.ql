/**
 * @name linux-d135c3352f7c947a922da93c8e763ee6bc208b64-nvme_prep_rq
 * @id cpp/linux/d135c3352f7c947a922da93c8e763ee6bc208b64/nvme-prep-rq
 * @description linux-d135c3352f7c947a922da93c8e763ee6bc208b64-drivers/nvme/host/pci.c-nvme_prep_rq CVE-2024-42276
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_885, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getCondition() |
		obj_0.getTarget().hasName("blk_rq_nr_phys_segments")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreq_885
	)
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vdev_885, Parameter vreq_885, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("nvme_unmap_data")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdev_885
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vreq_885
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vreq_885, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("blk_mq_start_request")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreq_885
	)
}

from Function func, Parameter vdev_885, Parameter vreq_885, ExprStmt target_1, ExprStmt target_2
where
not func_0(vreq_885, target_1, target_2, func)
and func_1(vdev_885, vreq_885, func, target_1)
and func_2(vreq_885, target_2)
and vdev_885.getType().hasName("nvme_dev *")
and vreq_885.getType().hasName("request *")
and vdev_885.getFunction() = func
and vreq_885.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
