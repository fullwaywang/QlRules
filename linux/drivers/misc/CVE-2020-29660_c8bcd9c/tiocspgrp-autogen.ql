/**
 * @name linux-c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9-tiocspgrp
 * @id cpp/linux/c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9/tiocspgrp
 * @description linux-c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9-tiocspgrp CVE-2020-29660
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vretval_474, LogicalOrExpr target_4, ReturnStmt target_5) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vretval_474
		and target_0.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_5.getExpr().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(LogicalOrExpr target_4, Function func) {
	exists(GotoStmt target_1 |
		target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, UnaryMinusExpr target_2) {
		target_2.getValue()="-25"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(LogicalOrExpr target_4, Function func, ReturnStmt target_3) {
		target_3.getExpr() instanceof UnaryMinusExpr
		and target_3.getParent().(IfStmt).getCondition()=target_4
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, LogicalOrExpr target_4) {
		target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tty"
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="signal"
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="tty"
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="signal"
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("tty_struct *")
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="session"
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tty_struct *")
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("task_session")
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("get_current")
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vretval_474, VariableAccess target_6, ReturnStmt target_5) {
		target_5.getExpr().(VariableAccess).getTarget()=vretval_474
		and target_5.getParent().(IfStmt).getCondition()=target_6
}

predicate func_6(Variable vretval_474, ReturnStmt target_5, VariableAccess target_6) {
		target_6.getTarget()=vretval_474
		and target_6.getParent().(IfStmt).getThen()=target_5
}

from Function func, Variable vretval_474, UnaryMinusExpr target_2, ReturnStmt target_3, LogicalOrExpr target_4, ReturnStmt target_5, VariableAccess target_6
where
not func_0(vretval_474, target_4, target_5)
and not func_1(target_4, func)
and func_2(func, target_2)
and func_3(target_4, func, target_3)
and func_4(func, target_4)
and func_5(vretval_474, target_6, target_5)
and func_6(vretval_474, target_5, target_6)
and vretval_474.getType().hasName("int")
and vretval_474.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
