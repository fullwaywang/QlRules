/**
 * @name linux-112e66017bff7f2837030f34c2bc19501e9212d5-nested_vmx_check_guest_state
 * @id cpp/linux/112e66017bff7f2837030f34c2bc19501e9212d5/nested-vmx-check-guest-state
 * @description linux-112e66017bff7f2837030f34c2bc19501e9212d5-nested_vmx_check_guest_state CVE-2023-30456
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(Initializer target_0 |
		target_0.getExpr().(NotExpr).getOperand().(NotExpr).getOperand() instanceof BitwiseAndExpr
		and target_0.getExpr().getEnclosingFunction() = func)
}

predicate func_1(BlockStmt target_10, Function func) {
	exists(StmtExpr target_1 |
		target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getType().hasName("bool")
		and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("trace_kvm_nested_vmenter_failed")
		and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="(vmcs12->guest_cr0 & (X86_CR0_PG | X86_CR0_PE)) == X86_CR0_PG"
		and target_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(VariableAccess).getType().hasName("bool")
		and target_1.getParent().(IfStmt).getThen()=target_10
		and target_1.getEnclosingFunction() = func)
}

/*predicate func_2(Function func) {
	exists(FunctionCall target_2 |
		target_2.getTarget().hasName("trace_kvm_nested_vmenter_failed")
		and target_2.getArgument(0).(StringLiteral).getValue()="(vmcs12->guest_cr0 & (X86_CR0_PG | X86_CR0_PE)) == X86_CR0_PG"
		and target_2.getArgument(1).(Literal).getValue()="0"
		and target_2.getEnclosingFunction() = func)
}

*/
predicate func_3(LogicalAndExpr target_6, Function func) {
	exists(ReturnStmt target_3 |
		target_3.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_3.getParent().(IfStmt).getCondition()=target_6
		and target_3.getEnclosingFunction() = func)
}

predicate func_5(Function func) {
	exists(IfStmt target_5 |
		target_5.getCondition() instanceof LogicalAndExpr
		and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5)
}

predicate func_6(Parameter vvcpu_3021, Parameter vvmcs12_3022, BlockStmt target_10, LogicalAndExpr target_6) {
		target_6.getAnOperand().(ValueFieldAccess).getTarget().getName()="nested_run_pending"
		and target_6.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="nested"
		and target_6.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("to_vmx")
		and target_6.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3021
		and target_6.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="vm_entry_controls"
		and target_6.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvmcs12_3022
		and target_6.getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="32768"
		and target_6.getParent().(IfStmt).getThen()=target_10
}

predicate func_7(Parameter vvmcs12_3022, BitwiseAndExpr target_7) {
		target_7.getLeftOperand().(PointerFieldAccess).getTarget().getName()="vm_entry_controls"
		and target_7.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvmcs12_3022
		and target_7.getRightOperand().(Literal).getValue()="512"
}

predicate func_9(Variable via32e_3025, AssignExpr target_9) {
		target_9.getLValue().(VariableAccess).getTarget()=via32e_3025
		and target_9.getRValue().(EqualityOperation).getAnOperand() instanceof BitwiseAndExpr
		and target_9.getRValue().(EqualityOperation).getAnOperand() instanceof Literal
}

predicate func_10(Function func, BlockStmt target_10) {
		target_10.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
		and target_10.getStmt(1).(IfStmt).getCondition().(LogicalOrExpr).getAnOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("bool")
		and target_10.getStmt(1).(IfStmt).getCondition().(LogicalOrExpr).getAnOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(VariableAccess).getTarget().getType().hasName("bool")
		and target_10.getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vvcpu_3021, Parameter vvmcs12_3022, Variable via32e_3025, LogicalAndExpr target_6, BitwiseAndExpr target_7, AssignExpr target_9, BlockStmt target_10
where
not func_0(func)
and not func_1(target_10, func)
and not func_3(target_6, func)
and not func_5(func)
and func_6(vvcpu_3021, vvmcs12_3022, target_10, target_6)
and func_7(vvmcs12_3022, target_7)
and func_9(via32e_3025, target_9)
and func_10(func, target_10)
and vvcpu_3021.getType().hasName("kvm_vcpu *")
and vvmcs12_3022.getType().hasName("vmcs12 *")
and via32e_3025.getType().hasName("bool")
and vvcpu_3021.getFunction() = func
and vvmcs12_3022.getFunction() = func
and via32e_3025.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
