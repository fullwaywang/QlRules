/**
 * @name linux-6467cda18c9f9b5f2f9a0aa1e2861c653e41f382-vpu_dec_check_ap_inst
 * @id cpp/linux/6467cda18c9f9b5f2f9a0aa1e2861c653e41f382/vpu-dec-check-ap-inst
 * @description linux-6467cda18c9f9b5f2f9a0aa1e2861c653e41f382-drivers/media/platform/mediatek/vcodec/decoder/vdec_vpu_if.c-vpu_dec_check_ap_inst CVE-2024-35920
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdec_dev_75, BlockStmt target_2, PointerFieldAccess target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_ctx_lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdec_dev_75
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdec_dev_75, AddressOfExpr target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_ctx_lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdec_dev_75
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vdec_dev_75, BlockStmt target_2) {
	target_2.getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("mtk_vcodec_dec_ctx *")
	and target_2.getStmt(0).(ForStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("list_is_head")
	and target_2.getStmt(0).(ForStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_2.getStmt(0).(ForStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mtk_vcodec_dec_ctx *")
	and target_2.getStmt(0).(ForStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ctx_list"
	and target_2.getStmt(0).(ForStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdec_dev_75
	and target_2.getStmt(0).(ForStmt).getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("mtk_vcodec_dec_ctx *")
	and target_2.getStmt(0).(ForStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("IS_ERR_OR_NULL")
	and target_2.getStmt(0).(ForStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="vpu_inst"
	and target_2.getStmt(0).(ForStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("vdec_vpu_inst *")
}

predicate func_3(Parameter vdec_dev_75, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="next"
	and target_3.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ctx_list"
	and target_3.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdec_dev_75
}

predicate func_4(Parameter vdec_dev_75, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="ctx_list"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdec_dev_75
	and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("list_is_head")
	and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mtk_vcodec_dec_ctx *")
}

from Function func, Parameter vdec_dev_75, BlockStmt target_2, PointerFieldAccess target_3, AddressOfExpr target_4
where
not func_0(vdec_dev_75, target_2, target_3, func)
and not func_1(vdec_dev_75, target_4, func)
and func_2(vdec_dev_75, target_2)
and func_3(vdec_dev_75, target_3)
and func_4(vdec_dev_75, target_4)
and vdec_dev_75.getType().hasName("mtk_vcodec_dec_dev *")
and vdec_dev_75.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
