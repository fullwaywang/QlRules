/**
 * @name linux-7a49389771ae7666f4dc3426e2a4594bf23ae290-domain_dirty_limits
 * @id cpp/linux/7a49389771ae7666f4dc3426e2a4594bf23ae290/domain-dirty-limits
 * @description linux-7a49389771ae7666f4dc3426e2a4594bf23ae290-mm/page-writeback.c-domain_dirty_limits CVE-2024-42131
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vthresh_401, Variable vbg_thresh_402, ExprStmt target_2, IfStmt target_0) {
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=vbg_thresh_402
		and obj_0.getLesserOperand().(VariableAccess).getTarget()=vthresh_401
	)
	and exists(ExprStmt obj_1 | obj_1=target_0.getThen() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
			exists(DivExpr obj_3 | obj_3=obj_2.getRValue() |
				obj_3.getLeftOperand().(VariableAccess).getTarget()=vthresh_401
				and obj_3.getRightOperand().(Literal).getValue()="2"
			)
			and obj_2.getLValue().(VariableAccess).getTarget()=vbg_thresh_402
		)
	)
	and target_0.getLocation().isBefore(target_2.getLocation())
}

predicate func_1(Variable vthresh_401, IfStmt target_3, ExprStmt target_4, ExprStmt target_5, Function func) {
exists(IfStmt target_1 |
	exists(RelationalOperation obj_0 | obj_0=target_1.getCondition() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=vthresh_401
		and obj_0.getLesserOperand().(ComplementExpr).getValue()="4294967295"
	)
	and exists(ExprStmt obj_1 | obj_1=target_1.getThen() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getLValue().(VariableAccess).getTarget()=vthresh_401
			and obj_2.getRValue().(ComplementExpr).getValue()="4294967295"
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_4.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_1.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_2(Function func, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("task_struct *")
		and obj_0.getRValue().(FunctionCall).getTarget().hasName("get_current")
	)
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vbg_thresh_402, IfStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getCondition() |
		obj_0.getTarget().hasName("rt_task")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
	)
	and exists(BlockStmt obj_1 | obj_1=target_3.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignAddExpr obj_3 | obj_3=obj_2.getExpr() |
				exists(AddExpr obj_4 | obj_4=obj_3.getRValue() |
					exists(DivExpr obj_5 | obj_5=obj_4.getLeftOperand() |
						obj_5.getLeftOperand().(VariableAccess).getTarget()=vbg_thresh_402
						and obj_5.getRightOperand().(Literal).getValue()="4"
					)
					and exists(DivExpr obj_6 | obj_6=obj_4.getRightOperand() |
						obj_6.getLeftOperand().(ValueFieldAccess).getTarget().getName()="dirty_limit"
						and obj_6.getRightOperand().(Literal).getValue()="32"
					)
				)
				and obj_3.getLValue().(VariableAccess).getTarget()=vbg_thresh_402
			)
		)
	)
}

predicate func_4(Variable vthresh_401, Variable vbg_thresh_402, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(DivExpr obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vthresh_401
			and obj_1.getRightOperand().(Literal).getValue()="2"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vbg_thresh_402
	)
}

predicate func_5(Variable vthresh_401, ExprStmt target_5) {
	exists(AssignAddExpr obj_0 | obj_0=target_5.getExpr() |
		exists(AddExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(DivExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getLeftOperand().(VariableAccess).getTarget()=vthresh_401
				and obj_2.getRightOperand().(Literal).getValue()="4"
			)
			and exists(DivExpr obj_3 | obj_3=obj_1.getRightOperand() |
				exists(ValueFieldAccess obj_4 | obj_4=obj_3.getLeftOperand() |
					obj_4.getTarget().getName()="dirty_limit"
					and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("wb_domain")
				)
				and obj_3.getRightOperand().(Literal).getValue()="32"
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vthresh_401
	)
}

from Function func, Variable vthresh_401, Variable vbg_thresh_402, IfStmt target_0, ExprStmt target_2, IfStmt target_3, ExprStmt target_4, ExprStmt target_5
where
func_0(vthresh_401, vbg_thresh_402, target_2, target_0)
and not func_1(vthresh_401, target_3, target_4, target_5, func)
and func_2(func, target_2)
and func_3(vbg_thresh_402, target_3)
and func_4(vthresh_401, vbg_thresh_402, target_4)
and func_5(vthresh_401, target_5)
and vthresh_401.getType().hasName("unsigned long")
and vbg_thresh_402.getType().hasName("unsigned long")
and vthresh_401.(LocalVariable).getFunction() = func
and vbg_thresh_402.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
