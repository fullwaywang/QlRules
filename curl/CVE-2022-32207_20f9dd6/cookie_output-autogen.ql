/**
 * @name curl-20f9dd6bae50b-cookie_output
 * @id cpp/curl/20f9dd6bae50b/cookie-output
 * @description curl-20f9dd6bae50b-lib/cookie.c-cookie_output CVE-2022-32207
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrandsuffix_1644, Parameter vdata_1622, ReturnStmt target_15, FunctionCall target_0) {
		target_0.getTarget().hasName("Curl_rand_hex")
		and not target_0.getTarget().hasName("Curl_fopen")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vdata_1622
		and target_0.getArgument(1).(VariableAccess).getTarget()=vrandsuffix_1644
		and target_0.getArgument(2).(SizeofExprOperator).getValue()="9"
		and target_0.getParent().(IfStmt).getThen()=target_15
}

predicate func_1(Parameter vfilename_1623, Variable vout_1626, Variable vtempstore_1628, Variable verror_1629, Parameter vdata_1622, NotExpr target_20, FunctionCall target_7, ExprStmt target_21, NotExpr target_22, NotExpr target_24) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(VariableAccess).getTarget()=verror_1629
		and target_1.getRValue().(FunctionCall).getTarget().hasName("Curl_fopen")
		and target_1.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_1622
		and target_1.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfilename_1623
		and target_1.getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vout_1626
		and target_1.getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtempstore_1628
		and target_20.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_1.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getArgument(1).(VariableAccess).getLocation())
		and target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
		and target_1.getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_22.getOperand().(VariableAccess).getLocation())
		and target_1.getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_24.getOperand().(VariableAccess).getLocation()))
}

/*predicate func_2(Variable vout_1626, Variable vrandsuffix_1644, Parameter vdata_1622, ReturnStmt target_15, ExprStmt target_21, NotExpr target_22) {
	exists(AddressOfExpr target_2 |
		target_2.getOperand().(VariableAccess).getTarget()=vout_1626
		and target_2.getParent().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_1622
		and target_2.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrandsuffix_1644
		and target_2.getParent().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="9"
		and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_15
		and target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getOperand().(VariableAccess).getLocation())
		and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_22.getOperand().(VariableAccess).getLocation()))
}

*/
/*predicate func_3(Variable vtempstore_1628, Variable vrandsuffix_1644, Parameter vdata_1622, ReturnStmt target_15, NotExpr target_24) {
	exists(AddressOfExpr target_3 |
		target_3.getOperand().(VariableAccess).getTarget()=vtempstore_1628
		and target_3.getParent().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_1622
		and target_3.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrandsuffix_1644
		and target_3.getParent().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="9"
		and target_3.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_15
		and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_24.getOperand().(VariableAccess).getLocation()))
}

*/
predicate func_5(Variable vtempstore_1628, BlockStmt target_26, ExprStmt target_18) {
	exists(LogicalAndExpr target_5 |
		target_5.getAnOperand().(VariableAccess).getTarget()=vtempstore_1628
		and target_5.getAnOperand() instanceof FunctionCall
		and target_5.getParent().(IfStmt).getThen()=target_26
		and target_5.getAnOperand().(VariableAccess).getLocation().isBefore(target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_6(Variable verror_1629, NotExpr target_22, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_1629
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
}

predicate func_7(Parameter vfilename_1623, Variable vtempstore_1628, BlockStmt target_26, FunctionCall target_7) {
		target_7.getTarget().hasName("Curl_rename")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vtempstore_1628
		and target_7.getArgument(1).(VariableAccess).getTarget()=vfilename_1623
		and target_7.getParent().(IfStmt).getThen()=target_26
}

predicate func_8(Parameter vfilename_1623, VariableAccess target_8) {
		target_8.getTarget()=vfilename_1623
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_9(Variable vtempstore_1628, VariableAccess target_9) {
		target_9.getTarget()=vtempstore_1628
		and target_9.getParent().(AssignExpr).getLValue() = target_9
		and target_9.getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_10(Variable vtempstore_1628, ReturnStmt target_28, VariableAccess target_10) {
		target_10.getTarget()=vtempstore_1628
		and target_10.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_28
}

predicate func_11(Variable vout_1626, VariableAccess target_11) {
		target_11.getTarget()=vout_1626
		and target_11.getParent().(AssignExpr).getLValue() = target_11
		and target_11.getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_12(NotExpr target_22, Function func, GotoStmt target_12) {
		target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
		and target_12.getEnclosingFunction() = func
}

predicate func_13(NotExpr target_20, Function func, DeclStmt target_13) {
		target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
		and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vrandsuffix_1644, VariableAccess target_14) {
		target_14.getTarget()=vrandsuffix_1644
		and target_14.getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
}

predicate func_15(FunctionCall target_0, Function func, ReturnStmt target_15) {
		target_15.getExpr().(Literal).getValue()="2"
		and target_15.getParent().(IfStmt).getCondition()=target_0
		and target_15.getEnclosingFunction() = func
}

predicate func_16(Parameter vfilename_1623, Variable vtempstore_1628, Variable vrandsuffix_1644, AssignExpr target_16) {
		target_16.getLValue().(VariableAccess).getTarget()=vtempstore_1628
		and target_16.getRValue().(FunctionCall).getTarget().hasName("curl_maprintf")
		and target_16.getRValue().(FunctionCall).getArgument(0).(StringLiteral).getValue()="%s.%s.tmp"
		and target_16.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfilename_1623
		and target_16.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vrandsuffix_1644
}

predicate func_17(Variable vtempstore_1628, NotExpr target_20, IfStmt target_17) {
		target_17.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vtempstore_1628
		and target_17.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
}

predicate func_18(Variable vout_1626, Variable vtempstore_1628, NotExpr target_20, ExprStmt target_18) {
		target_18.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vout_1626
		and target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fopen")
		and target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtempstore_1628
		and target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(StringLiteral).getValue()="w"
		and target_18.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
}

predicate func_19(Variable vout_1626, NotExpr target_20, IfStmt target_19) {
		target_19.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vout_1626
		and target_19.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
		and target_19.getThen().(BlockStmt).getStmt(1) instanceof GotoStmt
		and target_19.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
}

predicate func_20(Parameter vfilename_1623, NotExpr target_20) {
		target_20.getOperand().(FunctionCall).getTarget().hasName("strcmp")
		and target_20.getOperand().(FunctionCall).getArgument(0).(StringLiteral).getValue()="-"
		and target_20.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfilename_1623
}

predicate func_21(Variable vout_1626, ExprStmt target_21) {
		target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vout_1626
		and target_21.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("FILE *")
}

predicate func_22(Variable vout_1626, NotExpr target_22) {
		target_22.getOperand().(VariableAccess).getTarget()=vout_1626
}

predicate func_24(Variable vtempstore_1628, NotExpr target_24) {
		target_24.getOperand().(VariableAccess).getTarget()=vtempstore_1628
}

predicate func_26(Variable vtempstore_1628, Variable verror_1629, BlockStmt target_26) {
		target_26.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("unlink")
		and target_26.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtempstore_1628
		and target_26.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_1629
}

predicate func_28(ReturnStmt target_28) {
		target_28.getExpr() instanceof EnumConstantAccess
}

from Function func, Parameter vfilename_1623, Variable vout_1626, Variable vtempstore_1628, Variable verror_1629, Variable vrandsuffix_1644, Parameter vdata_1622, FunctionCall target_0, ExprStmt target_6, FunctionCall target_7, VariableAccess target_8, VariableAccess target_9, VariableAccess target_10, VariableAccess target_11, GotoStmt target_12, DeclStmt target_13, VariableAccess target_14, ReturnStmt target_15, AssignExpr target_16, IfStmt target_17, ExprStmt target_18, IfStmt target_19, NotExpr target_20, ExprStmt target_21, NotExpr target_22, NotExpr target_24, BlockStmt target_26, ReturnStmt target_28
where
func_0(vrandsuffix_1644, vdata_1622, target_15, target_0)
and not func_1(vfilename_1623, vout_1626, vtempstore_1628, verror_1629, vdata_1622, target_20, target_7, target_21, target_22, target_24)
and not func_5(vtempstore_1628, target_26, target_18)
and func_6(verror_1629, target_22, target_6)
and func_7(vfilename_1623, vtempstore_1628, target_26, target_7)
and func_8(vfilename_1623, target_8)
and func_9(vtempstore_1628, target_9)
and func_10(vtempstore_1628, target_28, target_10)
and func_11(vout_1626, target_11)
and func_12(target_22, func, target_12)
and func_13(target_20, func, target_13)
and func_14(vrandsuffix_1644, target_14)
and func_15(target_0, func, target_15)
and func_16(vfilename_1623, vtempstore_1628, vrandsuffix_1644, target_16)
and func_17(vtempstore_1628, target_20, target_17)
and func_18(vout_1626, vtempstore_1628, target_20, target_18)
and func_19(vout_1626, target_20, target_19)
and func_20(vfilename_1623, target_20)
and func_21(vout_1626, target_21)
and func_22(vout_1626, target_22)
and func_24(vtempstore_1628, target_24)
and func_26(vtempstore_1628, verror_1629, target_26)
and func_28(target_28)
and vfilename_1623.getType().hasName("const char *")
and vout_1626.getType().hasName("FILE *")
and vtempstore_1628.getType().hasName("char *")
and verror_1629.getType().hasName("CURLcode")
and vrandsuffix_1644.getType().hasName("unsigned char[9]")
and vdata_1622.getType().hasName("Curl_easy *")
and vfilename_1623.getFunction() = func
and vout_1626.(LocalVariable).getFunction() = func
and vtempstore_1628.(LocalVariable).getFunction() = func
and verror_1629.(LocalVariable).getFunction() = func
and vrandsuffix_1644.(LocalVariable).getFunction() = func
and vdata_1622.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
