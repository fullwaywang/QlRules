/**
 * @name linux-946e51f2bf37f1656916eb75bd0742ba33983c28-dcache_dir_lseek
 * @id cpp/linux/946e51f2bf37f1656916eb75bd0742ba33983c28/dcache-dir-lseek
 * @description linux-946e51f2bf37f1656916eb75bd0742ba33983c28-fs/libfs.c-dcache_dir_lseek CVE-2014-8559
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcursor_112) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="d_child"
		and target_0.getQualifier().(VariableAccess).getTarget()=vcursor_112)
}

predicate func_1(Variable vcursor_112) {
	exists(PointerFieldAccess target_1 |
		target_1.getTarget().getName()="d_child"
		and target_1.getQualifier().(VariableAccess).getTarget()=vcursor_112)
}

predicate func_2(Function func, PointerDereferenceExpr target_2) {
		target_2.getOperand().(Literal).getValue()="0"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vcursor_112, VariableAccess target_3) {
		target_3.getTarget()=vcursor_112
		and target_3.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del")
		and target_3.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand() instanceof ValueFieldAccess
}

predicate func_4(Variable vcursor_112, VariableAccess target_4) {
		target_4.getTarget()=vcursor_112
		and target_4.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
		and target_4.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand() instanceof ValueFieldAccess
		and target_4.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("list_head *")
}

predicate func_5(Variable vcursor_112, ValueFieldAccess target_5) {
		target_5.getTarget().getName()="d_child"
		and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="d_u"
		and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcursor_112
		and target_5.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del")
}

predicate func_6(Function func, ValueFieldAccess target_6) {
		target_6.getTarget().getName()="d_u"
		and target_6.getQualifier() instanceof PointerDereferenceExpr
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vcursor_112, ValueFieldAccess target_7) {
		target_7.getTarget().getName()="d_child"
		and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="d_u"
		and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcursor_112
		and target_7.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
		and target_7.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("list_head *")
}

from Function func, Variable vcursor_112, PointerDereferenceExpr target_2, VariableAccess target_3, VariableAccess target_4, ValueFieldAccess target_5, ValueFieldAccess target_6, ValueFieldAccess target_7
where
not func_0(vcursor_112)
and not func_1(vcursor_112)
and func_2(func, target_2)
and func_3(vcursor_112, target_3)
and func_4(vcursor_112, target_4)
and func_5(vcursor_112, target_5)
and func_6(func, target_6)
and func_7(vcursor_112, target_7)
and vcursor_112.getType().hasName("dentry *")
and vcursor_112.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
