/**
 * @name linux-eddb7732119d53400f48a02536a84c509692faa8-a2mp_chan_recv_cb
 * @id cpp/linux/eddb7732119d53400f48a02536a84c509692faa8/a2mp-chan-recv-cb
 * @description linux-eddb7732119d53400f48a02536a84c509692faa8-a2mp_chan_recv_cb CVE-2020-12352
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrej_676, VariableAccess target_1) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vrej_676
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="2"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1)
}

predicate func_1(Variable verr_600, BlockStmt target_3, VariableAccess target_1) {
		target_1.getTarget()=verr_600
		and target_1.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Variable vrej_676, BlockStmt target_3) {
		target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="reason"
		and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vrej_676
		and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_3.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("a2mp_cmd *")
		and target_3.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="data"
		and target_3.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
}

from Function func, Variable verr_600, Variable vrej_676, VariableAccess target_1, BlockStmt target_3
where
not func_0(vrej_676, target_1)
and func_1(verr_600, target_3, target_1)
and func_3(vrej_676, target_3)
and verr_600.getType().hasName("int")
and vrej_676.getType().hasName("a2mp_cmd_rej")
and verr_600.(LocalVariable).getFunction() = func
and vrej_676.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
