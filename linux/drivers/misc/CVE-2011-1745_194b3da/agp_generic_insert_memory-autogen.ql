/**
 * @name linux-194b3da873fd334ef183806db751473512af29ce-agp_generic_insert_memory
 * @id cpp/linux/194b3da873fd334ef183806db751473512af29ce/agp-generic-insert-memory
 * @description linux-194b3da873fd334ef183806db751473512af29ce-drivers/char/agp/generic.c-agp_generic_insert_memory CVE-2011-1745
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vj_1050, Parameter vpg_start_1046, Parameter vmem_1046, ExprStmt target_45, PointerArithmeticOperation target_63, RelationalOperation target_6, NotExpr target_65, VariableAccess target_0) {
		target_0.getTarget()=vj_1050
		and target_0.getParent().(LTExpr).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vpg_start_1046
		and target_0.getParent().(LTExpr).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_0.getParent().(LTExpr).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_45.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getLocation())
		and target_0.getLocation().isBefore(target_63.getAnOperand().(VariableAccess).getLocation())
		and target_6.getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getParent().(LTExpr).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getParent().(LTExpr).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_65.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_1(Variable vnum_entries_1048) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("agp_num_entries")
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048)
}

predicate func_2(Variable vnum_entries_1048, Parameter vmem_1046, ExprStmt target_43, ExprStmt target_53) {
	exists(AddExpr target_2 |
		target_2.getAnOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_2.getAnOperand().(VariableAccess).getType().hasName("off_t")
		and target_2.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget()=vnum_entries_1048
		and target_2.getParent().(LTExpr).getGreaterOperand() instanceof Literal
		and target_2.getParent().(LTExpr).getParent().(IfStmt).getThen()=target_43
		and target_53.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Function func, UnaryMinusExpr target_4) {
		target_4.getValue()="-22"
		and target_4.getEnclosingFunction() = func
}

predicate func_5(PointerFieldAccess target_67, Function func, ReturnStmt target_5) {
		target_5.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_5.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vnum_entries_1048, Parameter vpg_start_1046, Parameter vmem_1046, ReturnStmt target_68, RelationalOperation target_6) {
		 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
		and target_6.getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vpg_start_1046
		and target_6.getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_6.getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_6.getLesserOperand().(VariableAccess).getTarget()=vnum_entries_1048
		and target_6.getParent().(IfStmt).getThen()=target_68
}

predicate func_7(Variable vbridge_1052, PointerFieldAccess target_7) {
		target_7.getTarget().getName()="scratch_page"
		and target_7.getQualifier().(VariableAccess).getTarget()=vbridge_1052
}

predicate func_8(Variable vi_1049, Parameter vmem_1046, BlockStmt target_69, PointerFieldAccess target_8) {
		target_8.getTarget().getName()="page_count"
		and target_8.getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_8.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget()=vi_1049
		and target_8.getParent().(LTExpr).getParent().(ForStmt).getStmt()=target_69
}

predicate func_9(Variable vi_1049, PostfixIncrExpr target_9) {
		target_9.getOperand().(VariableAccess).getTarget()=vi_1049
}

predicate func_11(Variable vj_1050, Parameter vpg_start_1046, VariableAccess target_11) {
		target_11.getTarget()=vpg_start_1046
		and target_11.getParent().(AssignExpr).getRValue() = target_11
		and target_11.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vj_1050
}

/*predicate func_12(Variable vi_1049, Parameter vmem_1046, BlockStmt target_69, VariableAccess target_12) {
		target_12.getTarget()=vi_1049
		and target_12.getParent().(LTExpr).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_12.getParent().(LTExpr).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_12.getParent().(LTExpr).getParent().(ForStmt).getStmt()=target_69
}

*/
predicate func_14(Variable vj_1050, Parameter vpg_start_1046, VariableAccess target_14) {
		target_14.getTarget()=vpg_start_1046
		and target_14.getParent().(AssignExpr).getRValue() = target_14
		and target_14.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vj_1050
}

predicate func_15(Variable vi_1049, Parameter vmem_1046, VariableAccess target_15) {
		target_15.getTarget()=vi_1049
		and target_15.getParent().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="pages"
		and target_15.getParent().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
}

predicate func_16(Function func, DeclStmt target_16) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_16
}

predicate func_18(Function func, DeclStmt target_18) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_18
}

predicate func_19(Function func, DeclStmt target_19) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_19
}

predicate func_20(Variable vtemp_1051, Variable vbridge_1052, Function func, ExprStmt target_20) {
		target_20.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtemp_1051
		and target_20.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="current_size"
		and target_20.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
}

predicate func_21(Variable vtemp_1051, Variable vbridge_1052, Variable vnum_entries_1048, Function func, SwitchStmt target_21) {
		target_21.getExpr().(PointerFieldAccess).getTarget().getName()="size_type"
		and target_21.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_21.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_21.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_21.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_21.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_21.getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_21.getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_21.getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_21.getStmt().(BlockStmt).getStmt(7).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_21.getStmt().(BlockStmt).getStmt(7).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_21.getStmt().(BlockStmt).getStmt(7).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_21.getStmt().(BlockStmt).getStmt(10).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_21.getStmt().(BlockStmt).getStmt(10).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_21.getStmt().(BlockStmt).getStmt(10).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_21.getStmt().(BlockStmt).getStmt(13) instanceof ReturnStmt
		and target_21.getStmt().(BlockStmt).getStmt(15).(SwitchCase).toString() = "default: "
		and target_21.getStmt().(BlockStmt).getStmt(16).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_21.getStmt().(BlockStmt).getStmt(16).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_21
}

/*predicate func_23(Variable vtemp_1051, Variable vnum_entries_1048, PointerFieldAccess target_67, ExprStmt target_23) {
		target_23.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_23.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_23.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_23.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
}

*/
/*predicate func_24(Variable vtemp_1051, ExprStmt target_20, ExprStmt target_27, PointerFieldAccess target_24) {
		target_24.getTarget().getName()="num_entries"
		and target_24.getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_20.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_24.getQualifier().(VariableAccess).getLocation())
		and target_24.getQualifier().(VariableAccess).getLocation().isBefore(target_27.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

*/
/*predicate func_25(PointerFieldAccess target_67, Function func, BreakStmt target_25) {
		target_25.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_25.getEnclosingFunction() = func
}

*/
predicate func_27(Variable vtemp_1051, Variable vnum_entries_1048, PointerFieldAccess target_67, ExprStmt target_27) {
		target_27.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_27.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_27.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_27.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
}

/*predicate func_28(PointerFieldAccess target_67, Function func, BreakStmt target_28) {
		target_28.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_28.getEnclosingFunction() = func
}

*/
/*predicate func_30(Variable vtemp_1051, Variable vnum_entries_1048, ExprStmt target_27, ExprStmt target_33, AssignExpr target_30) {
		target_30.getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_30.getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_30.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_27.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_30.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_30.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_33.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

*/
/*predicate func_31(PointerFieldAccess target_67, Function func, BreakStmt target_31) {
		target_31.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_31.getEnclosingFunction() = func
}

*/
predicate func_33(Variable vtemp_1051, Variable vnum_entries_1048, PointerFieldAccess target_67, ExprStmt target_33) {
		target_33.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_33.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_33.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtemp_1051
		and target_33.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
}

/*predicate func_34(PointerFieldAccess target_67, Function func, BreakStmt target_34) {
		target_34.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_34.getEnclosingFunction() = func
}

*/
/*predicate func_36(PointerFieldAccess target_67, Function func, BreakStmt target_36) {
		target_36.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_36.getEnclosingFunction() = func
}

*/
/*predicate func_37(Function func, SwitchCase target_37) {
		target_37.toString() = "default: "
		and target_37.getEnclosingFunction() = func
}

*/
/*predicate func_38(Variable vnum_entries_1048, PointerFieldAccess target_67, ExprStmt target_33, ExprStmt target_38) {
		target_38.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_38.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_38.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_33.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_38.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
}

*/
/*predicate func_39(PointerFieldAccess target_67, Function func, BreakStmt target_39) {
		target_39.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_67
		and target_39.getEnclosingFunction() = func
}

*/
predicate func_40(Variable vagp_memory_reserved, Variable vnum_entries_1048, AssignSubExpr target_40) {
		target_40.getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_40.getRValue().(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vagp_memory_reserved
		and target_40.getRValue().(DivExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="4096"
}

predicate func_41(Variable vnum_entries_1048, ExprStmt target_43, VariableAccess target_41) {
		target_41.getTarget()=vnum_entries_1048
		and target_41.getParent().(LTExpr).getGreaterOperand().(Literal).getValue()="0"
		and target_41.getParent().(LTExpr).getParent().(IfStmt).getThen()=target_43
}

predicate func_43(Variable vnum_entries_1048, RelationalOperation target_72, RelationalOperation target_6, ExprStmt target_43) {
		target_43.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnum_entries_1048
		and target_43.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_43.getParent().(IfStmt).getCondition()=target_72
		and target_43.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_6.getLesserOperand().(VariableAccess).getLocation())
}

predicate func_44(Function func, IfStmt target_44) {
		target_44.getCondition() instanceof RelationalOperation
		and target_44.getThen().(ReturnStmt).getExpr() instanceof UnaryMinusExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_44
}

predicate func_45(Variable vj_1050, Parameter vpg_start_1046, Function func, ExprStmt target_45) {
		target_45.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vj_1050
		and target_45.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vpg_start_1046
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_45
}

predicate func_46(Variable vj_1050, Parameter vpg_start_1046, Parameter vmem_1046, Function func, WhileStmt target_46) {
		target_46.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vj_1050
		and target_46.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vpg_start_1046
		and target_46.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_46.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_46.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("readl")
		and target_46.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("readl")
		and target_46.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="scratch_page"
		and target_46.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
		and target_46.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vj_1050
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_46
}

/*predicate func_47(Variable vj_1050, Variable vbridge_1052, IfStmt target_47) {
		target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("readl")
		and target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vj_1050
		and target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("readl")
		and target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vj_1050
		and target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="scratch_page"
		and target_47.getCondition().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_47.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
}

*/
/*predicate func_48(Variable vj_1050, Variable vbridge_1052, NotExpr target_48) {
		target_48.getOperand().(FunctionCall).getTarget().hasName("readl")
		and target_48.getOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_48.getOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_48.getOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vj_1050
}

*/
/*predicate func_49(Variable vj_1050, Variable vbridge_1052, EqualityOperation target_49) {
		target_49.getAnOperand().(FunctionCall).getTarget().hasName("readl")
		and target_49.getAnOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_49.getAnOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_49.getAnOperand().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vj_1050
		and target_49.getAnOperand().(PointerFieldAccess).getTarget().getName()="scratch_page"
		and target_49.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
}

*/
/*predicate func_50(Variable vj_1050, ExprStmt target_50) {
		target_50.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vj_1050
}

*/
predicate func_51(Variable vbridge_1052, Parameter vmem_1046, Function func, IfStmt target_51) {
		target_51.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="is_flushed"
		and target_51.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_51.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="cache_flush"
		and target_51.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_51.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_51.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="is_flushed"
		and target_51.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_51
}

/*predicate func_52(Variable vbridge_1052, VariableCall target_52) {
		target_52.getExpr().(PointerFieldAccess).getTarget().getName()="cache_flush"
		and target_52.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_52.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
}

*/
predicate func_53(Parameter vmem_1046, ExprStmt target_53) {
		target_53.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="is_flushed"
		and target_53.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
}

predicate func_54(Variable vj_1050, Variable vi_1049, Parameter vpg_start_1046, CommaExpr target_54) {
		target_54.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1049
		and target_54.getLeftOperand().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_54.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vj_1050
		and target_54.getRightOperand().(AssignExpr).getRValue().(VariableAccess).getTarget()=vpg_start_1046
}

predicate func_56(Variable vi_1049, Parameter vmem_1046, BlockStmt target_69, RelationalOperation target_56) {
		 (target_56 instanceof GTExpr or target_56 instanceof LTExpr)
		and target_56.getLesserOperand().(VariableAccess).getTarget()=vi_1049
		and target_56.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_56.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_56.getParent().(ForStmt).getStmt()=target_69
}

predicate func_57(Variable vj_1050, CommaExpr target_57) {
		target_57.getLeftOperand() instanceof PostfixIncrExpr
		and target_57.getRightOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vj_1050
}

predicate func_58(Variable vj_1050, Variable vbridge_1052, Variable vmask_type_1053, Variable vi_1049, ExprStmt target_58) {
		target_58.getExpr().(FunctionCall).getTarget().hasName("writel")
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="mask_memory"
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(0).(VariableAccess).getTarget()=vbridge_1052
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="pages"
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1049
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="18446719884453740544"
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
		and target_58.getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(2).(VariableAccess).getTarget()=vmask_type_1053
		and target_58.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_58.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_58.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vj_1050
}

/*predicate func_59(Variable vbridge_1052, Variable vmask_type_1053, Variable vi_1049, Parameter vmem_1046, VariableCall target_59) {
		target_59.getExpr().(PointerFieldAccess).getTarget().getName()="mask_memory"
		and target_59.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_59.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_59.getArgument(0).(VariableAccess).getTarget()=vbridge_1052
		and target_59.getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="pages"
		and target_59.getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
		and target_59.getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1049
		and target_59.getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="18446719884453740544"
		and target_59.getArgument(1).(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
		and target_59.getArgument(2).(VariableAccess).getTarget()=vmask_type_1053
}

*/
/*predicate func_60(Variable vj_1050, Variable vbridge_1052, Variable vmask_type_1053, CommaExpr target_57, PointerArithmeticOperation target_73, PointerFieldAccess target_74, EqualityOperation target_75, VariableAccess target_60) {
		target_60.getTarget()=vj_1050
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("writel")
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="mask_memory"
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(0).(VariableAccess).getTarget()=vbridge_1052
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(BinaryBitwiseOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="18446719884453740544"
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(2).(VariableAccess).getTarget()=vmask_type_1053
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_57.getRightOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_60.getLocation())
		and target_60.getLocation().isBefore(target_73.getLeftOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getLocation())
		and target_74.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_75.getAnOperand().(VariableAccess).getLocation().isBefore(target_60.getParent().(PointerAddExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableCall).getArgument(2).(VariableAccess).getLocation())
}

*/
predicate func_61(Variable vj_1050, Variable vbridge_1052, Function func, ExprStmt target_61) {
		target_61.getExpr().(FunctionCall).getTarget().hasName("readl")
		and target_61.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_61.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_61.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vj_1050
		and target_61.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_61
}

/*predicate func_62(Variable vj_1050, PointerArithmeticOperation target_76, VariableAccess target_62) {
		target_62.getTarget()=vj_1050
		and target_62.getParent().(PointerAddExpr).getParent().(PointerSubExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("readl")
		and target_62.getParent().(PointerAddExpr).getParent().(PointerSubExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_62.getParent().(PointerAddExpr).getParent().(PointerSubExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="1"
		and target_76.getAnOperand().(VariableAccess).getLocation().isBefore(target_62.getLocation())
}

*/
predicate func_63(Variable vj_1050, Variable vbridge_1052, PointerArithmeticOperation target_63) {
		target_63.getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_63.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_63.getAnOperand().(VariableAccess).getTarget()=vj_1050
		and target_63.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_65(Parameter vmem_1046, NotExpr target_65) {
		target_65.getOperand().(PointerFieldAccess).getTarget().getName()="is_flushed"
		and target_65.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1046
}

predicate func_67(Variable vbridge_1052, PointerFieldAccess target_67) {
		target_67.getTarget().getName()="size_type"
		and target_67.getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_67.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
}

predicate func_68(RelationalOperation target_6, Function func, ReturnStmt target_68) {
		target_68.getExpr() instanceof UnaryMinusExpr
		and target_68.getParent().(IfStmt).getCondition()=target_6
		and target_68.getEnclosingFunction() = func
}

predicate func_69(Function func, BlockStmt target_69) {
		target_69.getStmt(0) instanceof ExprStmt
		and target_69.getEnclosingFunction() = func
}

predicate func_72(Variable vnum_entries_1048, RelationalOperation target_72) {
		 (target_72 instanceof GTExpr or target_72 instanceof LTExpr)
		and target_72.getLesserOperand().(VariableAccess).getTarget()=vnum_entries_1048
		and target_72.getGreaterOperand() instanceof Literal
}

predicate func_73(Variable vj_1050, Variable vbridge_1052, PointerArithmeticOperation target_73) {
		target_73.getLeftOperand().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_73.getLeftOperand().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_73.getLeftOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vj_1050
		and target_73.getRightOperand().(Literal).getValue()="1"
}

predicate func_74(Variable vbridge_1052, PointerFieldAccess target_74) {
		target_74.getTarget().getName()="cache_flush"
		and target_74.getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_74.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
}

predicate func_75(Variable vmask_type_1053, EqualityOperation target_75) {
		target_75.getAnOperand().(VariableAccess).getTarget()=vmask_type_1053
		and target_75.getAnOperand().(Literal).getValue()="0"
}

predicate func_76(Variable vj_1050, Variable vbridge_1052, PointerArithmeticOperation target_76) {
		target_76.getAnOperand().(PointerFieldAccess).getTarget().getName()="gatt_table"
		and target_76.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbridge_1052
		and target_76.getAnOperand().(VariableAccess).getTarget()=vj_1050
		and target_76.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("writel")
		and target_76.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof VariableCall
}

from Function func, Variable vagp_memory_reserved, Variable vj_1050, Variable vtemp_1051, Variable vbridge_1052, Variable vmask_type_1053, Variable vnum_entries_1048, Variable vi_1049, Parameter vpg_start_1046, Parameter vmem_1046, VariableAccess target_0, UnaryMinusExpr target_4, ReturnStmt target_5, RelationalOperation target_6, PointerFieldAccess target_7, PointerFieldAccess target_8, PostfixIncrExpr target_9, VariableAccess target_11, VariableAccess target_14, VariableAccess target_15, DeclStmt target_16, DeclStmt target_18, DeclStmt target_19, ExprStmt target_20, SwitchStmt target_21, ExprStmt target_27, ExprStmt target_33, AssignSubExpr target_40, VariableAccess target_41, ExprStmt target_43, IfStmt target_44, ExprStmt target_45, WhileStmt target_46, IfStmt target_51, ExprStmt target_53, CommaExpr target_54, RelationalOperation target_56, CommaExpr target_57, ExprStmt target_58, ExprStmt target_61, PointerArithmeticOperation target_63, NotExpr target_65, PointerFieldAccess target_67, ReturnStmt target_68, BlockStmt target_69, RelationalOperation target_72, PointerArithmeticOperation target_73, PointerFieldAccess target_74, EqualityOperation target_75, PointerArithmeticOperation target_76
where
func_0(vj_1050, vpg_start_1046, vmem_1046, target_45, target_63, target_6, target_65, target_0)
and not func_1(vnum_entries_1048)
and not func_2(vnum_entries_1048, vmem_1046, target_43, target_53)
and func_4(func, target_4)
and func_5(target_67, func, target_5)
and func_6(vnum_entries_1048, vpg_start_1046, vmem_1046, target_68, target_6)
and func_7(vbridge_1052, target_7)
and func_8(vi_1049, vmem_1046, target_69, target_8)
and func_9(vi_1049, target_9)
and func_11(vj_1050, vpg_start_1046, target_11)
and func_14(vj_1050, vpg_start_1046, target_14)
and func_15(vi_1049, vmem_1046, target_15)
and func_16(func, target_16)
and func_18(func, target_18)
and func_19(func, target_19)
and func_20(vtemp_1051, vbridge_1052, func, target_20)
and func_21(vtemp_1051, vbridge_1052, vnum_entries_1048, func, target_21)
and func_27(vtemp_1051, vnum_entries_1048, target_67, target_27)
and func_33(vtemp_1051, vnum_entries_1048, target_67, target_33)
and func_40(vagp_memory_reserved, vnum_entries_1048, target_40)
and func_41(vnum_entries_1048, target_43, target_41)
and func_43(vnum_entries_1048, target_72, target_6, target_43)
and func_44(func, target_44)
and func_45(vj_1050, vpg_start_1046, func, target_45)
and func_46(vj_1050, vpg_start_1046, vmem_1046, func, target_46)
and func_51(vbridge_1052, vmem_1046, func, target_51)
and func_53(vmem_1046, target_53)
and func_54(vj_1050, vi_1049, vpg_start_1046, target_54)
and func_56(vi_1049, vmem_1046, target_69, target_56)
and func_57(vj_1050, target_57)
and func_58(vj_1050, vbridge_1052, vmask_type_1053, vi_1049, target_58)
and func_61(vj_1050, vbridge_1052, func, target_61)
and func_63(vj_1050, vbridge_1052, target_63)
and func_65(vmem_1046, target_65)
and func_67(vbridge_1052, target_67)
and func_68(target_6, func, target_68)
and func_69(func, target_69)
and func_72(vnum_entries_1048, target_72)
and func_73(vj_1050, vbridge_1052, target_73)
and func_74(vbridge_1052, target_74)
and func_75(vmask_type_1053, target_75)
and func_76(vj_1050, vbridge_1052, target_76)
and vagp_memory_reserved.getType().hasName("int")
and vj_1050.getType().hasName("off_t")
and vtemp_1051.getType().hasName("void *")
and vbridge_1052.getType().hasName("agp_bridge_data *")
and vmask_type_1053.getType().hasName("int")
and vnum_entries_1048.getType().hasName("int")
and vi_1049.getType().hasName("size_t")
and vpg_start_1046.getType().hasName("off_t")
and vmem_1046.getType().hasName("agp_memory *")
and not vagp_memory_reserved.getParentScope+() = func
and vj_1050.(LocalVariable).getFunction() = func
and vtemp_1051.(LocalVariable).getFunction() = func
and vbridge_1052.(LocalVariable).getFunction() = func
and vmask_type_1053.(LocalVariable).getFunction() = func
and vnum_entries_1048.(LocalVariable).getFunction() = func
and vi_1049.(LocalVariable).getFunction() = func
and vpg_start_1046.getFunction() = func
and vmem_1046.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
