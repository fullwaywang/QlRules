/**
 * @name linux-83e197a8414c0ba545e7e3916ce05f836f349273-snd_seq_timer_open
 * @id cpp/linux/83e197a8414c0ba545e7e3916ce05f836f349273/snd-seq-timer-open
 * @description linux-83e197a8414c0ba545e7e3916ce05f836f349273-sound/core/seq/seq_timer.c-snd_seq_timer_open CVE-2021-47281
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtmr_261, Variable verr_263, ExprStmt target_2, AddressOfExpr target_3, ReturnStmt target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(PointerFieldAccess).getTarget().getName()="timeri"
	and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmr_261
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_263
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-16"
	and target_0.getElse() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getExpr().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vt_260, Variable verr_263, ExprStmt target_5, ExprStmt target_2, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=verr_263
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("snd_timer_close")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vt_260
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("snd_timer_instance_free")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vt_260
	and target_1.getThen().(BlockStmt).getStmt(2).(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_263
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_5.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vt_260, Variable vtmr_261, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="timeri"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmr_261
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vt_260
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vtmr_261, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmr_261
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_lock_irq")
}

predicate func_4(Variable verr_263, ReturnStmt target_4) {
	target_4.getExpr().(VariableAccess).getTarget()=verr_263
}

predicate func_5(Variable vtmr_261, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irq")
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmr_261
}

from Function func, Variable vt_260, Variable vtmr_261, Variable verr_263, ExprStmt target_2, AddressOfExpr target_3, ReturnStmt target_4, ExprStmt target_5
where
not func_0(vtmr_261, verr_263, target_2, target_3, target_4, func)
and not func_1(vt_260, verr_263, target_5, target_2, func)
and func_2(vt_260, vtmr_261, func, target_2)
and func_3(vtmr_261, target_3)
and func_4(verr_263, target_4)
and func_5(vtmr_261, target_5)
and vt_260.getType().hasName("snd_timer_instance *")
and vtmr_261.getType().hasName("snd_seq_timer *")
and verr_263.getType().hasName("int")
and vt_260.(LocalVariable).getFunction() = func
and vtmr_261.(LocalVariable).getFunction() = func
and verr_263.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
