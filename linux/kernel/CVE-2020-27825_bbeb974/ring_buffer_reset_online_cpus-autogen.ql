/**
 * @name linux-bbeb97464eefc65f506084fd9f18f21653e01137-ring_buffer_reset_online_cpus
 * @id cpp/linux/bbeb97464eefc65f506084fd9f18f21653e01137/ring-buffer-reset-online-cpus
 * @description linux-bbeb97464eefc65f506084fd9f18f21653e01137-kernel/trace/ring_buffer.c-ring_buffer_reset_online_cpus CVE-2020-27825
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuffer_4887, ForStmt target_2, CommaExpr target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mutex"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4887
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vbuffer_4887, ExprStmt target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mutex"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4887
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_4.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vbuffer_4887, ForStmt target_2) {
	target_2.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_2.getCondition().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getCondition().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("cpumask_next_and")
	and target_2.getCondition().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getCondition().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="cpumask"
	and target_2.getCondition().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4887
	and target_2.getCondition().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("cpumask")
	and target_2.getCondition().(CommaExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getCondition().(CommaExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ring_buffer_per_cpu *")
	and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="buffers"
	and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4887
	and target_2.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_inc")
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="resize_disabled"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ring_buffer_per_cpu *")
}

predicate func_3(Parameter vbuffer_4887, CommaExpr target_3) {
	target_3.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("cpumask_next_and")
	and target_3.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="cpumask"
	and target_3.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4887
	and target_3.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("cpumask")
	and target_3.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_4(Parameter vbuffer_4887, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ring_buffer_per_cpu *")
	and target_4.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="buffers"
	and target_4.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4887
	and target_4.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vbuffer_4887, ForStmt target_2, CommaExpr target_3, ExprStmt target_4
where
not func_0(vbuffer_4887, target_2, target_3, func)
and not func_1(vbuffer_4887, target_4, func)
and func_2(vbuffer_4887, target_2)
and func_3(vbuffer_4887, target_3)
and func_4(vbuffer_4887, target_4)
and vbuffer_4887.getType().hasName("trace_buffer *")
and vbuffer_4887.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
