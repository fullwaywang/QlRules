commit 3b57d3e90b4ce28a23dd7029add35ce9834600a9	3b57d3e90b4ce28a23dd7029add35ce9834600a9
Author: Jan Keitel <jkeitel@google.com>
Date:   Tue Jul 25 09:43:30 2023 +0000

    Enforce time threshold before accepting KeyboardAccessory suggestions.
    
    This CL enforces the same minimum time between showing the Autofill
    suggestions and being able to accept them that is used elsewhere
    (Desktop, legacy Autofill popup).
    
    Bug: 1465230
    Change-Id: I97e606fed01e377eb815ec2b60e18e3d767246b2
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4705215
    Commit-Queue: Jan Keitel <jkeitel@google.com>
    Reviewed-by: Jihad Hanna <jihadghanna@google.com>
    Reviewed-by: Bruno Braga <brunobraga@google.com>
    Reviewed-by: Adem Derinel <derinel@google.com>
    Reviewed-by: Christoph Schwering <schwering@google.com>
    Cr-Commit-Position: refs/heads/main@{#1174728}

diff --git a/chrome/browser/ui/android/autofill/autofill_keyboard_accessory_view.cc b/chrome/browser/ui/android/autofill/autofill_keyboard_accessory_view.cc
index b2b1c23f76fdb..965d90d637d95 100644
--- a/chrome/browser/ui/android/autofill/autofill_keyboard_accessory_view.cc
+++ b/chrome/browser/ui/android/autofill/autofill_keyboard_accessory_view.cc
@@ -4,7 +4,9 @@
 
 #include "chrome/browser/ui/android/autofill/autofill_keyboard_accessory_view.h"
 
+#include <string>
 #include <utility>
+#include <vector>
 
 #include "base/android/jni_android.h"
 #include "base/android/jni_string.h"
@@ -19,6 +21,7 @@
 #include "chrome/browser/ui/android/autofill/autofill_accessibility_utils.h"
 #include "chrome/browser/ui/autofill/autofill_popup_controller.h"
 #include "components/autofill/core/browser/ui/suggestion.h"
+#include "components/autofill/core/common/autofill_features.h"
 #include "components/autofill/core/common/autofill_payments_features.h"
 #include "ui/android/view_android.h"
 #include "ui/android/window_android.h"
@@ -130,7 +133,12 @@ void AutofillKeyboardAccessoryView::SuggestionSelected(
     JNIEnv* env,
     const JavaParamRef<jobject>& obj,
     jint list_index) {
-  controller_->AcceptSuggestionWithoutThreshold(list_index);
+  if (base::FeatureList::IsEnabled(
+          features::kAutofillKeyboardAccessoryAcceptanceDelayThreshold)) {
+    controller_->AcceptSuggestion(list_index);
+  } else {
+    controller_->AcceptSuggestionWithoutThreshold(list_index);
+  }
 }
 
 void AutofillKeyboardAccessoryView::DeletionRequested(
diff --git a/chrome/browser/ui/autofill/autofill_keyboard_accessory_adapter.cc b/chrome/browser/ui/autofill/autofill_keyboard_accessory_adapter.cc
index d2e4659250586..c105a76ebce18 100644
--- a/chrome/browser/ui/autofill/autofill_keyboard_accessory_adapter.cc
+++ b/chrome/browser/ui/autofill/autofill_keyboard_accessory_adapter.cc
@@ -115,9 +115,9 @@ AutofillKeyboardAccessoryAdapter::GetWeakPtr() {
 // AutofillPopupController implementation.
 
 void AutofillKeyboardAccessoryAdapter::AcceptSuggestion(int index) {
-  // Suggestions inside the keyboard accessory adapter are accepted without
-  // requiring a minimum time threshold.
-  NOTREACHED();
+  if (controller_) {
+    controller_->AcceptSuggestion(OffsetIndexFor(index));
+  }
 }
 
 void AutofillKeyboardAccessoryAdapter::AcceptSuggestionWithoutThreshold(
diff --git a/chrome/browser/ui/autofill/autofill_popup_controller_impl.cc b/chrome/browser/ui/autofill/autofill_popup_controller_impl.cc
index aaa485211ae29..5b44b93f4d456 100644
--- a/chrome/browser/ui/autofill/autofill_popup_controller_impl.cc
+++ b/chrome/browser/ui/autofill/autofill_popup_controller_impl.cc
@@ -13,6 +13,7 @@
 #include "base/functional/bind.h"
 #include "base/i18n/rtl.h"
 #include "base/memory/weak_ptr.h"
+#include "base/metrics/histogram_functions.h"
 #include "base/strings/utf_string_conversions.h"
 #include "base/task/sequenced_task_runner.h"
 #include "base/time/time.h"
@@ -305,9 +306,14 @@ void AutofillPopupControllerImpl::AcceptSuggestion(int index) {
   // Ignore clicks immediately after the popup was shown. This is to prevent
   // users accidentally accepting suggestions (crbug.com/1279268).
   DCHECK(!time_view_shown_.is_null());
-  if ((base::TimeTicks::Now() - time_view_shown_ <
-       kIgnoreEarlyClicksOnPopupDuration) &&
+  const base::TimeDelta time_elapsed =
+      base::TimeTicks::Now() - time_view_shown_;
+  if ((time_elapsed < kIgnoreEarlyClicksOnPopupDuration) &&
       !disable_threshold_for_testing_) {
+    base::UmaHistogramCustomTimes(
+        "Autofill.Popup.AcceptanceDelayThresholdNotMet", time_elapsed,
+        base::Milliseconds(0), kIgnoreEarlyClicksOnPopupDuration,
+        /*buckets=*/50);
     return;
   }
 
diff --git a/chrome/browser/ui/autofill/autofill_popup_controller_unittest.cc b/chrome/browser/ui/autofill/autofill_popup_controller_unittest.cc
index a9c5af2e852cb..57e02d2401ade 100644
--- a/chrome/browser/ui/autofill/autofill_popup_controller_unittest.cc
+++ b/chrome/browser/ui/autofill/autofill_popup_controller_unittest.cc
@@ -579,6 +579,7 @@ TEST_F(AutofillPopupControllerUnitTest, SelectInvalidSuggestion) {
 }
 
 TEST_F(AutofillPopupControllerUnitTest, AcceptSuggestionRespectsTimeout) {
+  base::HistogramTester histogram_tester;
   ShowSuggestions({PopupItemId::kAddressEntry});
 
   // Calls before the threshold are ignored.
@@ -590,18 +591,25 @@ TEST_F(AutofillPopupControllerUnitTest, AcceptSuggestionRespectsTimeout) {
   EXPECT_CALL(*delegate(), DidAcceptSuggestion);
   task_environment()->FastForwardBy(base::Milliseconds(400));
   popup_controller().AcceptSuggestion(0);
+
+  histogram_tester.ExpectTotalCount(
+      "Autofill.Popup.AcceptanceDelayThresholdNotMet", 2);
 }
 
 TEST_F(AutofillPopupControllerUnitTest, AcceptSuggestionWithoutThreshold) {
+  base::HistogramTester histogram_tester;
   ShowSuggestions({PopupItemId::kAddressEntry});
 
   // Calls are accepted immediately.
   EXPECT_CALL(*delegate(), DidAcceptSuggestion).Times(1);
   popup_controller().AcceptSuggestionWithoutThreshold(0);
+  histogram_tester.ExpectTotalCount(
+      "Autofill.Popup.AcceptanceDelayThresholdNotMet", 0);
 }
 
 TEST_F(AutofillPopupControllerUnitTest,
        AcceptSuggestionTimeoutIsUpdatedOnPopupMove) {
+  base::HistogramTester histogram_tester;
   ShowSuggestions({PopupItemId::kAddressEntry});
 
   // Calls before the threshold are ignored.
@@ -610,6 +618,8 @@ TEST_F(AutofillPopupControllerUnitTest,
   task_environment()->FastForwardBy(base::Milliseconds(100));
   popup_controller().AcceptSuggestion(0);
 
+  histogram_tester.ExpectTotalCount(
+      "Autofill.Popup.AcceptanceDelayThresholdNotMet", 2);
   task_environment()->FastForwardBy(base::Milliseconds(400));
   // Show the suggestions again (simulating, e.g., a click somewhere slightly
   // different).
@@ -617,11 +627,15 @@ TEST_F(AutofillPopupControllerUnitTest,
 
   EXPECT_CALL(*delegate(), DidAcceptSuggestion).Times(0);
   popup_controller().AcceptSuggestion(0);
+  histogram_tester.ExpectTotalCount(
+      "Autofill.Popup.AcceptanceDelayThresholdNotMet", 3);
 
   EXPECT_CALL(*delegate(), DidAcceptSuggestion);
   // After waiting, suggestions are accepted again.
   task_environment()->FastForwardBy(base::Milliseconds(500));
   popup_controller().AcceptSuggestion(0);
+  histogram_tester.ExpectTotalCount(
+      "Autofill.Popup.AcceptanceDelayThresholdNotMet", 3);
 }
 
 #if BUILDFLAG(IS_ANDROID)
diff --git a/components/autofill/core/common/autofill_features.cc b/components/autofill/core/common/autofill_features.cc
index e6961df0d05a9..aebef7a86131f 100644
--- a/components/autofill/core/common/autofill_features.cc
+++ b/components/autofill/core/common/autofill_features.cc
@@ -642,6 +642,13 @@ BASE_FEATURE(kAutofillKeyboardAccessory,
              "AutofillKeyboardAccessory_LAUNCHED",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+// When enabled, Autofill suggestions from keyboard accessory chips are only
+// accepted if at least 500ms have passed between showing the accessory and
+// interacting with the accessory chip.
+BASE_FEATURE(kAutofillKeyboardAccessoryAcceptanceDelayThreshold,
+             "AutofillKeyboardAccessoryAcceptanceDelayThreshold",
+             base::FEATURE_ENABLED_BY_DEFAULT);
+
 // Controls whether the touch to fill surface is shown for credit cards on
 // Android.
 BASE_FEATURE(kAutofillTouchToFillForCreditCardsAndroid,
diff --git a/components/autofill/core/common/autofill_features.h b/components/autofill/core/common/autofill_features.h
index 9ff671459bc76..8f6e6222bb501 100644
--- a/components/autofill/core/common/autofill_features.h
+++ b/components/autofill/core/common/autofill_features.h
@@ -229,6 +229,8 @@ BASE_DECLARE_FEATURE(kAutofillVirtualCardsOnTouchToFillAndroid);
 #if BUILDFLAG(IS_ANDROID)
 COMPONENT_EXPORT(AUTOFILL) BASE_DECLARE_FEATURE(kAutofillKeyboardAccessory);
 COMPONENT_EXPORT(AUTOFILL)
+BASE_DECLARE_FEATURE(kAutofillKeyboardAccessoryAcceptanceDelayThreshold);
+COMPONENT_EXPORT(AUTOFILL)
 BASE_DECLARE_FEATURE(kAutofillTouchToFillForCreditCardsAndroid);
 COMPONENT_EXPORT(AUTOFILL)
 BASE_DECLARE_FEATURE(kAutofillVirtualViewStructureAndroid);
diff --git a/tools/metrics/histograms/metadata/autofill/histograms.xml b/tools/metrics/histograms/metadata/autofill/histograms.xml
index 3fe7123d61e7c..5ce6d0f634f30 100644
--- a/tools/metrics/histograms/metadata/autofill/histograms.xml
+++ b/tools/metrics/histograms/metadata/autofill/histograms.xml
@@ -3408,6 +3408,18 @@ chromium-metrics-reviews@google.com.
   </token>
 </histogram>
 
+<histogram name="Autofill.Popup.AcceptanceDelayThresholdNotMet" units="ms"
+    expires_after="2024-04-01">
+  <owner>jkeitel@google.com</owner>
+  <owner>brunobraga@google.com</owner>
+  <owner>derinel@google.com</owner>
+  <summary>
+    Records instances in which the user attempted to accept an Autofill
+    suggestion within less than the acceptance threshold (500ms). For those
+    cases, it measures how long the user took to interact.
+  </summary>
+</histogram>
+
 <histogram name="Autofill.PopupHidingReason" enum="AutofillPopupHidingReason"
     expires_after="2024-01-14">
   <owner>koerber@google.com</owner>
