/**
 * @name linux-f8d4f44df056c5b504b0d49683fb7279218fd207-ep_insert
 * @id cpp/linux/f8d4f44df056c5b504b0d49683fb7279218fd207/ep-insert
 * @description linux-f8d4f44df056c5b504b0d49683fb7279218fd207-fs/eventpoll.c-ep_insert CVE-2021-39634
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vepi_1497, Variable vepq_1498, ExprStmt target_6, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="epi"
	and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vepq_1498
	and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vepi_1497
	and target_0.getLocation().isBefore(target_6.getLocation())
}

predicate func_1(Variable vepq_1498, ExprStmt target_6, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("init_poll_funcptr")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="pt"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vepq_1498
	and target_1.getLocation().isBefore(target_6.getLocation())
}

predicate func_2(Variable vrevents_1495, Variable vepi_1497, Variable vepq_1498, ExprStmt target_6, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrevents_1495
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ep_item_poll")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vepi_1497
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="pt"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vepq_1498
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="1"
	and target_2.getLocation().isBefore(target_6.getLocation())
}

predicate func_3(Variable verror_1494, ExprStmt target_6, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_1494
	and target_3.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_3.getLocation().isBefore(target_6.getLocation())
}

predicate func_4(Variable vepi_1497, ExprStmt target_6, IfStmt target_4) {
	target_4.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="nwait"
	and target_4.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vepi_1497
	and target_4.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_4.getThen().(GotoStmt).getName() ="error_unregister"
	and target_4.getLocation().isBefore(target_6.getLocation())
}

predicate func_5(Variable vepi_1497, Parameter vep_1491, ExprStmt target_7, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("ep_unregister_pollwait")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vep_1491
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vepi_1497
	and target_7.getLocation().isBefore(target_5.getLocation())
}

predicate func_6(Function func, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="f_lock"
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("file *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable vepi_1497, Parameter vep_1491, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("rb_erase_cached")
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="rbn"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vepi_1497
	and target_7.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rbr"
	and target_7.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vep_1491
}

from Function func, Variable verror_1494, Variable vrevents_1495, Variable vepi_1497, Variable vepq_1498, Parameter vep_1491, ExprStmt target_0, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, IfStmt target_4, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7
where
func_0(vepi_1497, vepq_1498, target_6, target_0)
and func_1(vepq_1498, target_6, target_1)
and func_2(vrevents_1495, vepi_1497, vepq_1498, target_6, target_2)
and func_3(verror_1494, target_6, target_3)
and func_4(vepi_1497, target_6, target_4)
and func_5(vepi_1497, vep_1491, target_7, target_5)
and func_6(func, target_6)
and func_7(vepi_1497, vep_1491, target_7)
and verror_1494.getType().hasName("int")
and vrevents_1495.getType().hasName("__poll_t")
and vepi_1497.getType().hasName("epitem *")
and vepq_1498.getType().hasName("ep_pqueue")
and vep_1491.getType().hasName("eventpoll *")
and verror_1494.(LocalVariable).getFunction() = func
and vrevents_1495.(LocalVariable).getFunction() = func
and vepi_1497.(LocalVariable).getFunction() = func
and vepq_1498.(LocalVariable).getFunction() = func
and vep_1491.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
