/**
 * @name openssl-68595c0c2886e7942a14f98c17a55a88afb6c292-aesni_cbc_hmac_sha256_cipher
 * @id cpp/openssl/68595c0c2886e7942a14f98c17a55a88afb6c292/aesni-cbc-hmac-sha256-cipher
 * @description openssl-68595c0c2886e7942a14f98c17a55a88afb6c292-crypto/evp/e_aes_cbc_hmac_sha256.c-aesni_cbc_hmac_sha256_cipher CVE-2016-2107
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmaxpad_568, Variable vpad_568, Variable vret_569, EqualityOperation target_1, ExprStmt target_2, PointerArithmeticOperation target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_7) {
	exists(ExprStmt target_0 |
		//target_0.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vret_569
		target_0.getAChild*().(FunctionCall).getTarget().hasName("constant_time_ge")
		and target_0.getAChild*().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmaxpad_568
		and target_0.getAChild*().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpad_568
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(12)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getLocation())
		and target_0.getLocation().isBefore(target_3.getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation())
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getLocation())
		and target_0.getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(AddExpr).getAnOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation())
		and target_0.getLocation().isBefore(target_7.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Function func, EqualityOperation target_1) {
		target_1.getAnOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_1.getAnOperand().(UnaryMinusExpr).getValue()="18446744073709551615"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vmaxpad_568, ExprStmt target_2) {
		target_2.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vmaxpad_568
		and target_2.getExpr().(AssignAndExpr).getRValue().(Literal).getValue()="255"
}

predicate func_3(Variable vmaxpad_568, PointerArithmeticOperation target_3) {
		target_3.getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_3.getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_3.getLeftOperand().(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="1"
		and target_3.getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vmaxpad_568
		and target_3.getRightOperand().(Literal).getValue()="32"
}

predicate func_4(Variable vpad_568, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpad_568
		and target_4.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_4.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_4.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(SubExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_5(Variable vpad_568, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_5.getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_5.getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(AddExpr).getAnOperand().(AddExpr).getAnOperand().(Literal).getValue()="32"
		and target_5.getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(AddExpr).getAnOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vpad_568
		and target_5.getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
}

predicate func_7(Variable vret_569, ExprStmt target_7) {
		target_7.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vret_569
		and target_7.getExpr().(AssignAndExpr).getRValue().(VariableAccess).getTarget().getType().hasName("size_t")
}

from Function func, Variable vmaxpad_568, Variable vpad_568, Variable vret_569, EqualityOperation target_1, ExprStmt target_2, PointerArithmeticOperation target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_7
where
not func_0(vmaxpad_568, vpad_568, vret_569, target_1, target_2, target_3, target_4, target_5, target_7)
and func_1(func, target_1)
and func_2(vmaxpad_568, target_2)
and func_3(vmaxpad_568, target_3)
and func_4(vpad_568, target_4)
and func_5(vpad_568, target_5)
and func_7(vret_569, target_7)
and vmaxpad_568.getType().hasName("unsigned int")
and vpad_568.getType().hasName("unsigned int")
and vret_569.getType().hasName("int")
and vmaxpad_568.(LocalVariable).getFunction() = func
and vpad_568.(LocalVariable).getFunction() = func
and vret_569.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
