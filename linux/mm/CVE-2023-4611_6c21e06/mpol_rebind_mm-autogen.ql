/**
 * @name linux-6c21e066f9256ea1df6f88768f6ae1080b7cf509-mpol_rebind_mm
 * @id cpp/linux/6c21e066f9256ea1df6f88768f6ae1080b7cf509/mpol-rebind-mm
 * @description linux-6c21e066f9256ea1df6f88768f6ae1080b7cf509-mm/mempolicy.c-mpol_rebind_mm CVE-2023-4611
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvma_383, EqualityOperation target_2, ExprStmt target_1) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("vma_start_write")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_383
	and target_2.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vnew_381, Variable vvma_383, EqualityOperation target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("mpol_rebind_policy")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="vm_policy"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_383
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnew_381
	and target_1.getParent().(WhileStmt).getCondition()=target_2
}

predicate func_2(Variable vvma_383, EqualityOperation target_2) {
	target_2.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vvma_383
	and target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vma_next")
	and target_2.getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("vma_iterator")
	and target_2.getRightOperand().(Literal).getValue()="0"
}

from Function func, Parameter vnew_381, Variable vvma_383, ExprStmt target_1, EqualityOperation target_2
where
not func_0(vvma_383, target_2, target_1)
and func_1(vnew_381, vvma_383, target_2, target_1)
and func_2(vvma_383, target_2)
and vnew_381.getType().hasName("nodemask_t *")
and vvma_383.getType().hasName("vm_area_struct *")
and vnew_381.getFunction() = func
and vvma_383.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
