/**
 * @name linux-a096ccca6e503a5c575717ff8a36ace27510ab0a-tun_chr_open
 * @id cpp/linux/a096ccca6e503a5c575717ff8a36ace27510ab0a/tun-chr-open
 * @description linux-a096ccca6e503a5c575717ff8a36ace27510ab0a-drivers/net/tun.c-tun_chr_open CVE-2023-1076
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtfile_3430, FunctionCall target_0) {
	target_0.getTarget().hasName("sock_init_data")
	and not target_0.getTarget().hasName("sock_init_data_uid")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="socket"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtfile_3430
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sk"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtfile_3430
}

predicate func_1(Parameter vinode_3427) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="i_uid"
	and target_1.getQualifier().(VariableAccess).getTarget()=vinode_3427)
}

from Function func, Variable vtfile_3430, Parameter vinode_3427, FunctionCall target_0
where
func_0(vtfile_3430, target_0)
and not func_1(vinode_3427)
and vtfile_3430.getType().hasName("tun_file *")
and vinode_3427.getType().hasName("inode *")
and vtfile_3430.(LocalVariable).getFunction() = func
and vinode_3427.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
