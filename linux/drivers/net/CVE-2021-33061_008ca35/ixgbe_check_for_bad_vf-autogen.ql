/**
 * @name linux-008ca35f6e87be1d60b6af3d1ae247c6d5c2531d-ixgbe_check_for_bad_vf
 * @id cpp/linux/008ca35f6e87be1d60b6af3d1ae247c6d5c2531d/ixgbe-check-for-bad-vf
 * @description linux-008ca35f6e87be1d60b6af3d1ae247c6d5c2531d-drivers/net/ethernet/intel/ixgbe/ixgbe_main.c-ixgbe_check_for_bad_vf CVE-2021-33061
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vadapter_7616, Variable vvf_7620, LogicalAndExpr target_2, ValueFieldAccess target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("ixgbe_bad_vf_abort")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vadapter_7616
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvf_7620
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vvfdev_7640, LogicalAndExpr target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("pcie_flr")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvfdev_7640
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, LogicalAndExpr target_2) {
	target_2.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("u16")
	and target_2.getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="65535"
	and target_2.getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("u16")
	and target_2.getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="8192"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vadapter_7616, Variable vvf_7620, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="vfdev"
	and target_3.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="vfinfo"
	and target_3.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadapter_7616
	and target_3.getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vvf_7620
}

from Function func, Parameter vadapter_7616, Variable vvf_7620, Variable vvfdev_7640, ExprStmt target_1, LogicalAndExpr target_2, ValueFieldAccess target_3
where
not func_0(vadapter_7616, vvf_7620, target_2, target_3)
and func_1(vvfdev_7640, target_2, target_1)
and func_2(func, target_2)
and func_3(vadapter_7616, vvf_7620, target_3)
and vadapter_7616.getType().hasName("ixgbe_adapter *")
and vvf_7620.getType().hasName("unsigned int")
and vvfdev_7640.getType().hasName("pci_dev *")
and vadapter_7616.getFunction() = func
and vvf_7620.(LocalVariable).getFunction() = func
and vvfdev_7640.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
