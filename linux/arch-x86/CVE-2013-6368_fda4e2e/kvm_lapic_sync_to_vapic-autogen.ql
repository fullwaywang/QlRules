/**
 * @name linux-fda4e2e85589191b123d31cdc21fd33ee70f50fd-kvm_lapic_sync_to_vapic
 * @id cpp/linux/fda4e2e85589191b123d31cdc21fd33ee70f50fd/kvm-lapic-sync-to-vapic
 * @description linux-fda4e2e85589191b123d31cdc21fd33ee70f50fd-arch/x86/kvm/lapic.c-kvm_lapic_sync_to_vapic CVE-2013-6368
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdata_1738, Parameter vvcpu_1736, ExprStmt target_13, ExprStmt target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("kvm_write_guest_cached")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="kvm"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_1736
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="vapic_cache"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier() instanceof ValueFieldAccess
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdata_1738
	and target_0.getArgument(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getArgument(3).(SizeofTypeOperator).getValue()="4"
	and target_13.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_1736, ValueFieldAccess target_1) {
	target_1.getTarget().getName()="apic"
	and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_1736
}

predicate func_2(Parameter vvcpu_1736, VariableAccess target_2) {
	target_2.getTarget()=vvcpu_1736
}

predicate func_3(Function func, DeclStmt target_3) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vvapic_1741, AssignExpr target_4) {
	target_4.getLValue().(VariableAccess).getTarget()=vvapic_1741
	and target_4.getRValue().(FunctionCall).getTarget().hasName("kmap_atomic")
	and target_4.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="vapic_page"
	and target_4.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier() instanceof ValueFieldAccess
}

predicate func_5(Variable vdata_1738, Variable vvapic_1741, Function func, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vvapic_1741
	and target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="vapic_addr"
	and target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="apic"
	and target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getRightOperand().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="4095"
	and target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vdata_1738
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vvapic_1741, Variable v__cond_1759, Function func, DoStmt target_6) {
	target_6.getCondition() instanceof Literal
	and target_6.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_6.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_1759
	and target_6.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(DoStmt).getCondition() instanceof Literal
	and target_6.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__kunmap_atomic")
	and target_6.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvapic_1741
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

/*predicate func_7(Variable v__cond_1759, DoStmt target_7) {
	target_7.getCondition() instanceof Literal
	and target_7.getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_1759
	and target_7.getStmt().(BlockStmt).getStmt(3).(DoStmt).getCondition() instanceof Literal
}

*/
/*predicate func_10(Variable v__cond_1759, IfStmt target_10) {
	target_10.getCondition().(VariableAccess).getTarget()=v__cond_1759
}

*/
/*predicate func_11(Function func, DoStmt target_11) {
	target_11.getCondition() instanceof Literal
	and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_12(Variable vvapic_1741, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("__kunmap_atomic")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvapic_1741
}

*/
predicate func_13(Variable vdata_1738, ExprStmt target_13) {
	target_13.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdata_1738
	and target_13.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("u32")
	and target_13.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(HexLiteral).getValue()="255"
	and target_13.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_13.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(HexLiteral).getValue()="240"
	and target_13.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="8"
	and target_13.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_13.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="24"
}

from Function func, Variable vdata_1738, Variable vvapic_1741, Variable v__cond_1759, Parameter vvcpu_1736, ValueFieldAccess target_1, VariableAccess target_2, DeclStmt target_3, AssignExpr target_4, ExprStmt target_5, DoStmt target_6, ExprStmt target_13
where
not func_0(vdata_1738, vvcpu_1736, target_13, target_5)
and func_1(vvcpu_1736, target_1)
and func_2(vvcpu_1736, target_2)
and func_3(func, target_3)
and func_4(vvapic_1741, target_4)
and func_5(vdata_1738, vvapic_1741, func, target_5)
and func_6(vvapic_1741, v__cond_1759, func, target_6)
and func_13(vdata_1738, target_13)
and vdata_1738.getType().hasName("u32")
and vvapic_1741.getType().hasName("void *")
and v__cond_1759.getType().hasName("bool")
and vvcpu_1736.getType().hasName("kvm_vcpu *")
and vdata_1738.(LocalVariable).getFunction() = func
and vvapic_1741.(LocalVariable).getFunction() = func
and v__cond_1759.(LocalVariable).getFunction() = func
and vvcpu_1736.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
