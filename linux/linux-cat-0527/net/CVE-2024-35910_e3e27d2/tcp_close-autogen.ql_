/**
 * @name linux-e3e27d2b446deb1f643758a0c4731f5c22492810-tcp_close
 * @id cpp/linux/e3e27d2b446deb1f643758a0c4731f5c22492810/tcp-close
 * @description linux-e3e27d2b446deb1f643758a0c4731f5c22492810-net/ipv4/tcp.c-tcp_close CVE-2024-35910
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_2715, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getTarget().getName()="skc_net_refcnt"
	and target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_2715
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("inet_csk_clear_xmit_timers_sync")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_2715
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_2715, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("sock_put")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_2715
}

predicate func_2(Parameter vsk_2715, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("release_sock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_2715
}

from Function func, Parameter vsk_2715, ExprStmt target_1, ExprStmt target_2
where
not func_0(vsk_2715, target_1, target_2, func)
and func_1(vsk_2715, target_1)
and func_2(vsk_2715, target_2)
and vsk_2715.getType().hasName("sock *")
and vsk_2715.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
