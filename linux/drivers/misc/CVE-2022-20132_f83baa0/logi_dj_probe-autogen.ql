/**
 * @name linux-f83baa0cb6cfc92ebaf7f9d3a99d7e34f2e77a8a-logi_dj_probe
 * @id cpp/linux/f83baa0cb6cfc92ebaf7f9d3a99d7e34f2e77a8a/logi-dj-probe
 * @description linux-f83baa0cb6cfc92ebaf7f9d3a99d7e34f2e77a8a-drivers/hid/hid-logitech-dj.c-logi_dj_probe CVE-2022-20132
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vusb_hid_driver, Parameter vhdev_1742, BlockStmt target_2, FunctionCall target_0) {
	target_0.getTarget().hasName("hid_is_using_ll_driver")
	and not target_0.getTarget().hasName("hid_is_usb")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vhdev_1742
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vusb_hid_driver
	and target_0.getParent().(IfStmt).getThen()=target_2
}

predicate func_1(Variable vusb_hid_driver, VariableAccess target_1) {
	target_1.getTarget()=vusb_hid_driver
	and target_1.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition() instanceof FunctionCall
}

predicate func_2(Parameter vhdev_1742, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("usb_interface *")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_2.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("usb_interface *")
	and target_2.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getTarget().getName()="bInterfaceNumber"
	and target_2.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="desc"
	and target_2.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="altsetting"
	and target_2.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="quirks"
	and target_2.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdev_1742
	and target_2.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="2048"
	and target_2.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("hid_hw_start")
	and target_2.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhdev_1742
	and target_2.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="45"
}

from Function func, Variable vusb_hid_driver, Parameter vhdev_1742, FunctionCall target_0, VariableAccess target_1, BlockStmt target_2
where
func_0(vusb_hid_driver, vhdev_1742, target_2, target_0)
and func_1(vusb_hid_driver, target_1)
and func_2(vhdev_1742, target_2)
and vusb_hid_driver.getType().hasName("hid_ll_driver")
and vhdev_1742.getType().hasName("hid_device *")
and not vusb_hid_driver.getParentScope+() = func
and vhdev_1742.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
