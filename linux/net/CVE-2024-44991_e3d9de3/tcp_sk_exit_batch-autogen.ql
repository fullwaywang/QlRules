/**
 * @name linux-e3d9de3742f4d5c47ae35f888d3023a5b54fcd2f-tcp_sk_exit_batch
 * @id cpp/linux/e3d9de3742f4d5c47ae35f888d3023a5b54fcd2f/tcp-sk-exit-batch
 * @description linux-e3d9de3742f4d5c47ae35f888d3023a5b54fcd2f-net/ipv4/tcp_ipv4.c-tcp_sk_exit_batch CVE-2024-44991
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("mutex_lock_nested")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
)
}

predicate func_1(Function func) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("mutex_unlock")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_2(Function func, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("tcp_twsk_purge")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("list_head *")
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, ExprStmt target_2
where
not func_0(target_2, func)
and not func_1(func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
