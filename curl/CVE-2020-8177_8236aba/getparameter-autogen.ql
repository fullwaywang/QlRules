/**
 * @name curl-8236aba58542c5f-getparameter
 * @id cpp/curl/8236aba58542c5f/getparameter
 * @description curl-8236aba58542c5f-src/tool_getparam.c-getparameter CVE-2020-8177
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vglobal_507, Parameter vconfig_508, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, AddressOfExpr target_4, ExprStmt target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(PointerFieldAccess).getTarget().getName()="content_disposition"
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconfig_508
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("warnf")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vglobal_507
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="--include and --remote-header-name cannot be combined.\n"
		and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_1
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vletter_510, VariableAccess target_1) {
		target_1.getTarget()=vletter_510
}

predicate func_2(Parameter vglobal_507, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("warnf")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vglobal_507
		and target_2.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Failed to open %s!\n"
		and target_2.getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("char *")
		and target_2.getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
}

predicate func_3(Parameter vglobal_507, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("warnf")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vglobal_507
		and target_3.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="--include and --remote-header-name cannot be combined.\n"
}

predicate func_4(Parameter vconfig_508, AddressOfExpr target_4) {
		target_4.getOperand().(PointerFieldAccess).getTarget().getName()="headers"
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconfig_508
}

predicate func_5(Parameter vconfig_508, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="show_headers"
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconfig_508
		and target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("bool")
}

from Function func, Parameter vglobal_507, Parameter vconfig_508, Variable vletter_510, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, AddressOfExpr target_4, ExprStmt target_5
where
not func_0(vglobal_507, vconfig_508, target_1, target_2, target_3, target_4, target_5)
and func_1(vletter_510, target_1)
and func_2(vglobal_507, target_2)
and func_3(vglobal_507, target_3)
and func_4(vconfig_508, target_4)
and func_5(vconfig_508, target_5)
and vglobal_507.getType().hasName("GlobalConfig *")
and vconfig_508.getType().hasName("OperationConfig *")
and vletter_510.getType().hasName("char")
and vglobal_507.getFunction() = func
and vconfig_508.getFunction() = func
and vletter_510.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
