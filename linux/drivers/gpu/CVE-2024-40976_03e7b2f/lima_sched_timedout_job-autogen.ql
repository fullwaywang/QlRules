/**
 * @name linux-03e7b2f7ae4c0ae5fb8e4e2454ba4008877f196a-lima_sched_timedout_job
 * @id cpp/linux/03e7b2f7ae4c0ae5fb8e4e2454ba4008877f196a/lima-sched-timedout-job
 * @description linux-03e7b2f7ae4c0ae5fb8e4e2454ba4008877f196a-drivers/gpu/drm/lima/lima_sched.c-lima_sched_timedout_job CVE-2024-40976
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpipe_418, IfStmt target_1, NotExpr target_2, Function func) {
exists(ExprStmt target_0 |
	exists(VariableCall obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().getName()="task_mask_irq"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpipe_418
		)
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpipe_418
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vpipe_418, IfStmt target_1) {
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="error"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpipe_418
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_1.getThen() |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			obj_3.getTarget().hasName("__drm_err")
			and obj_3.getArgument(0).(StringLiteral).getValue()="lima job timeout\n"
		)
	)
}

predicate func_2(Variable vpipe_418, NotExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="error"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpipe_418
	)
}

from Function func, Variable vpipe_418, IfStmt target_1, NotExpr target_2
where
not func_0(vpipe_418, target_1, target_2, func)
and func_1(vpipe_418, target_1)
and func_2(vpipe_418, target_2)
and vpipe_418.getType().hasName("lima_sched_pipe *")
and vpipe_418.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
