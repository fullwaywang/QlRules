/**
 * @name linux-67bcecd780609f471260a8c83fb0ae15f27734ce-__ocfs2_journal_access
 * @id cpp/linux/67bcecd780609f471260a8c83fb0ae15f27734ce/--ocfs2-journal-access
 * @description linux-67bcecd780609f471260a8c83fb0ae15f27734ce-fs/ocfs2/journal.c-__ocfs2_journal_access CVE-2024-40951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="5526"
	and not target_0.getValue()="5527"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="5527"
	and not target_1.getValue()="5528"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="5528"
	and not target_2.getValue()="5529"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(FunctionCall target_4, Function func) {
exists(DoStmt target_3 |
	exists(BlockStmt obj_0 | obj_0=target_3.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(AsmStmt obj_3 | obj_3=obj_2.getStmt(0) |
					exists(SizeofTypeOperator obj_4 | obj_4=obj_3.getChild(3) |
						obj_4.getType() instanceof LongType
						and obj_4.getValue()="12"
					)
					and obj_3.getChild(0) instanceof StringLiteral
					and obj_3.getChild(1) instanceof Literal
					and obj_3.getChild(2) instanceof Literal
				)
			)
			and obj_1.getCondition() instanceof Literal
		)
		and obj_0.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="5529"
		and obj_0.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_unreachable")
	)
	and target_3.getCondition() instanceof Literal
	and target_3.getParent().(IfStmt).getCondition()=target_4
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(Function func, FunctionCall target_4) {
	target_4.getTarget().hasName("__builtin_expect")
	and target_4.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("buffer_head *")
	and target_4.getArgument(1) instanceof Literal
	and target_4.getEnclosingFunction() = func
}

from Function func, Literal target_0, Literal target_1, Literal target_2, FunctionCall target_4
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and not func_3(target_4, func)
and func_4(func, target_4)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
