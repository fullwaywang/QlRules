/**
 * @name linux-c70222752228a62135cee3409dccefd494a24646-ems_usb_start_xmit
 * @id cpp/linux/c70222752228a62135cee3409dccefd494a24646/ems-usb-start-xmit
 * @description linux-c70222752228a62135cee3409dccefd494a24646-ems_usb_start_xmit CVE-2022-28390
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_736, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_0) {
		target_0.getExpr().(FunctionCall).getTarget().hasName("consume_skb")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_736
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_1(Function func, FunctionCall target_1) {
		target_1.getTarget().hasName("__builtin_expect")
		and target_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getArgument(1).(Literal).getValue()="0"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vskb_736, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("can_put_echo_skb")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_736
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("net_device *")
		and target_2.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="echo_index"
		and target_2.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ems_tx_urb_context *")
		and target_2.getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
}

predicate func_3(Parameter vskb_736, Function func, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("consume_skb")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_736
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

from Function func, Parameter vskb_736, ExprStmt target_0, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3
where
func_0(vskb_736, target_1, target_2, target_3, target_0)
and func_1(func, target_1)
and func_2(vskb_736, target_2)
and func_3(vskb_736, func, target_3)
and vskb_736.getType().hasName("sk_buff *")
and vskb_736.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
