/**
 * @name linux-951b6a0717db97ce420547222647bcc40bf1eacd-rfcomm_sock_bind
 * @id cpp/linux/951b6a0717db97ce420547222647bcc40bf1eacd/rfcomm-sock-bind
 * @description linux-951b6a0717db97ce420547222647bcc40bf1eacd-net/bluetooth/rfcomm/sock.c-rfcomm_sock_bind CVE-2015-8956
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vaddr_335, Initializer target_0) {
	target_0.getExpr().(VariableAccess).getTarget()=vaddr_335
}

predicate func_1(Variable vsa_1_337, Initializer target_1) {
	target_1.getExpr().(PointerFieldAccess).getTarget().getName()="rc_channel"
	and target_1.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_2(Variable vsa_1_337, Variable vchan_339, BlockStmt target_25, VariableAccess target_2) {
	target_2.getTarget()=vchan_339
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_339
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_25
}

/*predicate func_3(Variable vsa_1_337, Variable vchan_339, VariableAccess target_3) {
	target_3.getTarget()=vchan_339
	and target_3.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
	and target_3.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
	and target_3.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

*/
predicate func_4(Parameter vaddr_335, DoStmt target_26, IfStmt target_4) {
	target_4.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vaddr_335
	and target_4.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sa_family"
	and target_4.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_335
	and target_4.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="31"
	and target_4.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_26.getLocation().isBefore(target_4.getLocation())
}

predicate func_6(Variable vsa_1_337, DoStmt target_26, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsa_1_337
	and target_6.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_6.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="10"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getLocation().isBefore(target_26.getLocation()))
}

predicate func_7(DoStmt target_26, Function func) {
exists(ExprStmt target_7 |
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_7.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getThen().(VariableAccess).getType().hasName("unsigned int")
	and target_7.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getElse().(VariableAccess).getType().hasName("unsigned int")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
	and target_7.getLocation().isBefore(target_26.getLocation()))
}

predicate func_9(Function func) {
exists(SizeofExprOperator target_9 |
	target_9.getValue()="10"
	and target_9.getEnclosingFunction() = func)
}

predicate func_10(Parameter vaddr_335, Variable vsa_1_337, DoStmt target_26, LogicalOrExpr target_27, Function func) {
exists(ExprStmt target_10 |
	target_10.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsa_1_337
	and target_10.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vaddr_335
	and target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("int")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
	and target_10.getLocation().isBefore(target_26.getLocation())
	and target_10.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_27.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_11(Variable vsa_1_337, AddressOfExpr target_28) {
exists(ValueFieldAccess target_11 |
	target_11.getTarget().getName()="rc_bdaddr"
	and target_11.getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_11.getQualifier().(VariableAccess).getLocation().isBefore(target_28.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_12(Variable vsa_1_337, AddressOfExpr target_28) {
exists(ValueFieldAccess target_12 |
	target_12.getTarget().getName()="rc_channel"
	and target_12.getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_28.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getQualifier().(VariableAccess).getLocation()))
}

predicate func_13(Variable vsa_1_337) {
exists(ValueFieldAccess target_13 |
	target_13.getTarget().getName()="rc_channel"
	and target_13.getQualifier().(VariableAccess).getTarget()=vsa_1_337)
}

predicate func_14(Variable vsa_1_337, AddressOfExpr target_29) {
exists(ValueFieldAccess target_14 |
	target_14.getTarget().getName()="rc_bdaddr"
	and target_14.getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_14.getQualifier().(VariableAccess).getLocation().isBefore(target_29.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_15(Variable vsa_1_337, AddressOfExpr target_29, AddressOfExpr target_30) {
exists(ValueFieldAccess target_15 |
	target_15.getTarget().getName()="rc_bdaddr"
	and target_15.getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_29.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_15.getQualifier().(VariableAccess).getLocation())
	and target_15.getQualifier().(VariableAccess).getLocation().isBefore(target_30.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_16(Variable vsa_1_337, AddressOfExpr target_30) {
exists(ValueFieldAccess target_16 |
	target_16.getTarget().getName()="rc_channel"
	and target_16.getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_30.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_16.getQualifier().(VariableAccess).getLocation()))
}

predicate func_18(Parameter vaddr_335, VariableAccess target_18) {
	target_18.getTarget()=vaddr_335
}

predicate func_20(Variable vsa_1_337, VariableAccess target_20) {
	target_20.getTarget()=vsa_1_337
}

predicate func_21(Variable vsa_1_337, PointerFieldAccess target_21) {
	target_21.getTarget().getName()="rc_bdaddr"
	and target_21.getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_22(Variable vsa_1_337, PointerFieldAccess target_22) {
	target_22.getTarget().getName()="rc_bdaddr"
	and target_22.getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_23(Variable vsa_1_337, PointerFieldAccess target_23) {
	target_23.getTarget().getName()="rc_bdaddr"
	and target_23.getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

predicate func_24(Variable vchan_339, LogicalAndExpr target_31, VariableAccess target_24) {
	target_24.getTarget()=vchan_339
	and target_24.getParent().(AssignExpr).getRValue() = target_24
	and target_24.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="channel"
	and target_24.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
	and target_31.getLeftOperand().(VariableAccess).getLocation().isBefore(target_24.getLocation())
}

predicate func_25(Function func, BlockStmt target_25) {
	target_25.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_25.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-98"
	and target_25.getEnclosingFunction() = func
}

predicate func_26(Function func, DoStmt target_26) {
	target_26.getCondition() instanceof Literal
	and target_26.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_26.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_26.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_26.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_26.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="sk %p %pMR\n"
	and target_26.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_26.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
	and target_26.getEnclosingFunction() = func
}

predicate func_27(Parameter vaddr_335, LogicalOrExpr target_27) {
	target_27.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vaddr_335
	and target_27.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sa_family"
	and target_27.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_335
	and target_27.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="31"
}

predicate func_28(Variable vsa_1_337, AddressOfExpr target_28) {
	target_28.getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
	and target_28.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="sk %p %pMR\n"
	and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("sock *")
}

predicate func_29(Variable vsa_1_337, Variable vchan_339, AddressOfExpr target_29) {
	target_29.getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
	and target_29.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_29.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
	and target_29.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_339
}

predicate func_30(Variable vsa_1_337, AddressOfExpr target_30) {
	target_30.getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
	and target_30.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
	and target_30.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bacpy")
	and target_30.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="src"
	and target_30.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
}

predicate func_31(Variable vsa_1_337, Variable vchan_339, LogicalAndExpr target_31) {
	target_31.getLeftOperand().(VariableAccess).getTarget()=vchan_339
	and target_31.getRightOperand().(FunctionCall).getTarget().hasName("__rfcomm_get_listen_sock_by_addr")
	and target_31.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_339
	and target_31.getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rc_bdaddr"
	and target_31.getRightOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsa_1_337
}

from Function func, Parameter vaddr_335, Variable vsa_1_337, Variable vchan_339, Initializer target_0, Initializer target_1, VariableAccess target_2, IfStmt target_4, VariableAccess target_18, VariableAccess target_20, PointerFieldAccess target_21, PointerFieldAccess target_22, PointerFieldAccess target_23, VariableAccess target_24, BlockStmt target_25, DoStmt target_26, LogicalOrExpr target_27, AddressOfExpr target_28, AddressOfExpr target_29, AddressOfExpr target_30, LogicalAndExpr target_31
where
func_0(vaddr_335, target_0)
and func_1(vsa_1_337, target_1)
and func_2(vsa_1_337, vchan_339, target_25, target_2)
and func_4(vaddr_335, target_26, target_4)
and not func_6(vsa_1_337, target_26, func)
and not func_7(target_26, func)
and not func_9(func)
and not func_10(vaddr_335, vsa_1_337, target_26, target_27, func)
and not func_11(vsa_1_337, target_28)
and not func_12(vsa_1_337, target_28)
and not func_13(vsa_1_337)
and not func_14(vsa_1_337, target_29)
and not func_15(vsa_1_337, target_29, target_30)
and not func_16(vsa_1_337, target_30)
and func_18(vaddr_335, target_18)
and func_20(vsa_1_337, target_20)
and func_21(vsa_1_337, target_21)
and func_22(vsa_1_337, target_22)
and func_23(vsa_1_337, target_23)
and func_24(vchan_339, target_31, target_24)
and func_25(func, target_25)
and func_26(func, target_26)
and func_27(vaddr_335, target_27)
and func_28(vsa_1_337, target_28)
and func_29(vsa_1_337, vchan_339, target_29)
and func_30(vsa_1_337, target_30)
and func_31(vsa_1_337, vchan_339, target_31)
and vaddr_335.getType().hasName("sockaddr *")
and vsa_1_337.getType().hasName("sockaddr_rc *")
and vchan_339.getType().hasName("int")
and vaddr_335.getFunction() = func
and vsa_1_337.(LocalVariable).getFunction() = func
and vchan_339.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
