/**
 * @name linux-3a9b557f44ea8f216aab515a7db20e23f0eb51b9-smb2_lock
 * @id cpp/linux/3a9b557f44ea8f216aab515a7db20e23f0eb51b9/smb2-lock
 * @description linux-3a9b557f44ea8f216aab515a7db20e23f0eb51b9-fs/ksmbd/smb2pdu.c-smb2_lock CVE-2023-1193
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vwork_6795, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_lock")
	and not target_0.getTarget().hasName("release_async_work")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="request_lock"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="conn"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_6795
}

predicate func_1(ExprStmt target_7, Function func, ExprStmt target_1) {
	target_1.getExpr() instanceof FunctionCall
	and target_1.getLocation().isBefore(target_7.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vwork_6795, VariableAccess target_2) {
	target_2.getTarget()=vwork_6795
	and target_2.getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Parameter vwork_6795, AddressOfExpr target_8, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="request_lock"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="conn"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_6795
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_4(Parameter vwork_6795, EqualityOperation target_9, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cancel_fn"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_6795
	and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_5(Variable vargv_7016, EqualityOperation target_9, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vargv_7016
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_6(Parameter vwork_6795, EqualityOperation target_9, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="request_lock"
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="conn"
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_6795
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_7(EqualityOperation target_9, Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="f_lock"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ksmbd_file *")
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Parameter vwork_6795, AddressOfExpr target_8) {
	target_8.getOperand().(PointerFieldAccess).getTarget().getName()="fp_entry"
	and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_6795
	and target_8.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del")
}

predicate func_9(Function func, EqualityOperation target_9) {
	target_9.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_9.getRightOperand().(Literal).getValue()="1"
	and target_9.getEnclosingFunction() = func
}

from Function func, Variable vargv_7016, Parameter vwork_6795, FunctionCall target_0, ExprStmt target_1, VariableAccess target_2, PointerFieldAccess target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7, AddressOfExpr target_8, EqualityOperation target_9
where
func_0(vwork_6795, target_0)
and func_1(target_7, func, target_1)
and func_2(vwork_6795, target_2)
and func_3(vwork_6795, target_8, target_3)
and func_4(vwork_6795, target_9, target_4)
and func_5(vargv_7016, target_9, target_5)
and func_6(vwork_6795, target_9, target_6)
and func_7(target_9, func, target_7)
and func_8(vwork_6795, target_8)
and func_9(func, target_9)
and vargv_7016.getType().hasName("void **")
and vwork_6795.getType().hasName("ksmbd_work *")
and vargv_7016.(LocalVariable).getFunction() = func
and vwork_6795.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
