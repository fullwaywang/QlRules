/**
 * @name cpython-79f89e6e5a659846d1068e8b1bd8e491ccdef861-siftup
 * @id cpp/cpython/79f89e6e5a659846d1068e8b1bd8e491ccdef861/siftup
 * @description cpython-79f89e6e5a659846d1068e8b1bd8e491ccdef861-Modules/_heapqmodule.c-siftup CVE-2022-48560
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("_Py_INCREF")
		and target_0.getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(RelationalOperation target_9, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("_Py_INCREF")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vcmp_64, RelationalOperation target_9, RelationalOperation target_11) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcmp_64
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PyObject_RichCompareBool")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("PyObject *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_11.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_5(RelationalOperation target_9, Function func) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(FunctionCall).getTarget().hasName("_Py_DECREF")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_5
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_5.getEnclosingFunction() = func)
}

predicate func_6(RelationalOperation target_9, Function func) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(FunctionCall).getTarget().hasName("_Py_DECREF")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("PyObject *")
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_6
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_6.getEnclosingFunction() = func)
}

predicate func_7(Variable varr_63, Variable vchildpos_62, ArrayExpr target_7) {
		target_7.getArrayBase().(VariableAccess).getTarget()=varr_63
		and target_7.getArrayOffset().(VariableAccess).getTarget()=vchildpos_62
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PyObject_RichCompareBool")
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=varr_63
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ArrayExpr).getArrayOffset().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vchildpos_62
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ArrayExpr).getArrayOffset().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

/*predicate func_8(Variable varr_63, Variable vchildpos_62, ArrayExpr target_8) {
		target_8.getArrayBase().(VariableAccess).getTarget()=varr_63
		and target_8.getArrayOffset().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vchildpos_62
		and target_8.getArrayOffset().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PyObject_RichCompareBool")
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=varr_63
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vchildpos_62
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

*/
predicate func_9(Variable vchildpos_62, RelationalOperation target_9) {
		 (target_9 instanceof GTExpr or target_9 instanceof LTExpr)
		and target_9.getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vchildpos_62
		and target_9.getLesserOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_9.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("Py_ssize_t")
}

predicate func_11(Variable vcmp_64, RelationalOperation target_11) {
		 (target_11 instanceof GTExpr or target_11 instanceof LTExpr)
		and target_11.getLesserOperand().(VariableAccess).getTarget()=vcmp_64
		and target_11.getGreaterOperand().(Literal).getValue()="0"
}

from Function func, Variable varr_63, Variable vcmp_64, Variable vchildpos_62, ArrayExpr target_7, RelationalOperation target_9, RelationalOperation target_11
where
not func_0(func)
and not func_1(target_9, func)
and not func_2(vcmp_64, target_9, target_11)
and not func_5(target_9, func)
and not func_6(target_9, func)
and func_7(varr_63, vchildpos_62, target_7)
and func_9(vchildpos_62, target_9)
and func_11(vcmp_64, target_11)
and varr_63.getType().hasName("PyObject **")
and vcmp_64.getType().hasName("int")
and vchildpos_62.getType().hasName("Py_ssize_t")
and varr_63.(LocalVariable).getFunction() = func
and vcmp_64.(LocalVariable).getFunction() = func
and vchildpos_62.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
