/**
 * @name linux-fe9a5ca7e370e613a9a75a13008a3845ea759d6e-do_check
 * @id cpp/linux/fe9a5ca7e370e613a9a75a13008a3845ea759d6e/do-check
 * @description linux-fe9a5ca7e370e613a9a75a13008a3845ea759d6e-do_check CVE-2021-33624
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter venv_10545, ArrayExpr target_8, ExprStmt target_9) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("sanitize_mark_insn_seen")
		and target_0.getArgument(0).(VariableAccess).getTarget()=venv_10545
		and target_8.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
		and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter venv_10545, ExprStmt target_10) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("sanitize_mark_insn_seen")
		and target_1.getArgument(0).(VariableAccess).getTarget()=venv_10545
		and target_10.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter venv_10545, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="insn_aux_data"
		and target_2.getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_2.getParent().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="insn_idx"
		and target_2.getParent().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
}

/*predicate func_3(Parameter venv_10545, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="insn_idx"
		and target_3.getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_3.getParent().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="insn_aux_data"
		and target_3.getParent().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
}

*/
predicate func_4(Parameter venv_10545, VariableAccess target_4) {
		target_4.getTarget()=venv_10545
}

predicate func_5(Parameter venv_10545, VariableAccess target_5) {
		target_5.getTarget()=venv_10545
}

predicate func_6(Parameter venv_10545, ExprStmt target_11, ExprStmt target_9, AssignExpr target_6) {
		target_6.getLValue().(ValueFieldAccess).getTarget().getName()="seen"
		and target_6.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="insn_aux_data"
		and target_6.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_6.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="insn_idx"
		and target_6.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_6.getRValue().(PointerFieldAccess).getTarget().getName()="pass_cnt"
		and target_6.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_6.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_9.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_7(Parameter venv_10545, ExprStmt target_10, ExprStmt target_12, AssignExpr target_7) {
		target_7.getLValue().(ValueFieldAccess).getTarget().getName()="seen"
		and target_7.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="insn_aux_data"
		and target_7.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_7.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="insn_idx"
		and target_7.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_7.getRValue().(PointerFieldAccess).getTarget().getName()="pass_cnt"
		and target_7.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_10.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_7.getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_8(Parameter venv_10545, ArrayExpr target_8) {
		target_8.getArrayBase().(PointerFieldAccess).getTarget().getName()="insn_aux_data"
		and target_8.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_8.getArrayOffset().(PointerFieldAccess).getTarget().getName()="insn_idx"
		and target_8.getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
}

predicate func_9(Parameter venv_10545, ExprStmt target_9) {
		target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_9.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="insn_idx"
		and target_9.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
}

predicate func_10(Parameter venv_10545, EqualityOperation target_13, ExprStmt target_10) {
		target_10.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="insn_idx"
		and target_10.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_10545
		and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_13
}

predicate func_11(Parameter venv_10545, ExprStmt target_11) {
		target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("cur_regs")
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_10545
}

predicate func_12(Parameter venv_10545, ExprStmt target_12) {
		target_12.getExpr().(FunctionCall).getTarget().hasName("verbose")
		and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_10545
		and target_12.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="invalid BPF_LD mode\n"
}

predicate func_13(Function func, EqualityOperation target_13) {
		target_13.getAnOperand().(VariableAccess).getTarget().getType().hasName("u8")
		and target_13.getAnOperand().(Literal).getValue()="0"
		and target_13.getEnclosingFunction() = func
}

from Function func, Parameter venv_10545, PointerFieldAccess target_2, VariableAccess target_4, VariableAccess target_5, AssignExpr target_6, AssignExpr target_7, ArrayExpr target_8, ExprStmt target_9, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12, EqualityOperation target_13
where
not func_0(venv_10545, target_8, target_9)
and not func_1(venv_10545, target_10)
and func_2(venv_10545, target_2)
and func_4(venv_10545, target_4)
and func_5(venv_10545, target_5)
and func_6(venv_10545, target_11, target_9, target_6)
and func_7(venv_10545, target_10, target_12, target_7)
and func_8(venv_10545, target_8)
and func_9(venv_10545, target_9)
and func_10(venv_10545, target_13, target_10)
and func_11(venv_10545, target_11)
and func_12(venv_10545, target_12)
and func_13(func, target_13)
and venv_10545.getType().hasName("bpf_verifier_env *")
and venv_10545.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
