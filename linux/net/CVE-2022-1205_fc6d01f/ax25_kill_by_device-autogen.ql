/**
 * @name linux-fc6d01ff9ef03b66d4a3a23b46fc3c3d8cf92009-ax25_kill_by_device
 * @id cpp/linux/fc6d01ff9ef03b66d4a3a23b46fc3c3d8cf92009/ax25-kill-by-device
 * @description linux-fc6d01ff9ef03b66d4a3a23b46fc3c3d8cf92009-net/ax25/af_ax25.c-ax25_kill_by_device CVE-2022-1205
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vs_79, IfStmt target_2, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("ax25_disconnect")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_79
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="101"
	and target_2.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vs_79, ExprStmt target_3, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("ax25_disconnect")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_79
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="101"
	and target_3.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Function func, IfStmt target_2) {
	target_2.getCondition().(PointerFieldAccess).getTarget().getName()="sk_socket"
	and target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_put_track")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_tracker"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vs_79, NotExpr target_4, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ax25_dev"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_79
	and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_4(Function func, NotExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget().getType().hasName("sock *")
	and target_4.getEnclosingFunction() = func
}

from Function func, Variable vs_79, ExprStmt target_0, ExprStmt target_1, IfStmt target_2, ExprStmt target_3, NotExpr target_4
where
func_0(vs_79, target_2, target_0)
and func_1(vs_79, target_3, target_1)
and func_2(func, target_2)
and func_3(vs_79, target_4, target_3)
and func_4(func, target_4)
and vs_79.getType().hasName("ax25_cb *")
and vs_79.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
