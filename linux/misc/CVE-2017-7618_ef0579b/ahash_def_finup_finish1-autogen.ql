/**
 * @name linux-ef0579b64e93188710d48667cb5e014926af9f1b-ahash_def_finup_finish1
 * @id cpp/linux/ef0579b64e93188710d48667cb5e014926af9f1b/ahash-def-finup-finish1
 * @description linux-ef0579b64e93188710d48667cb5e014926af9f1b-crypto/ahash.c-ahash_def_finup_finish1 CVE-2017-7618
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_386, Parameter verr_386, FunctionCall target_0) {
	target_0.getTarget().hasName("ahash_def_finup_finish2")
	and not target_0.getTarget().hasName("ahash_restore_req")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vreq_386
	and target_0.getArgument(1).(VariableAccess).getTarget()=verr_386
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="512"
	and not target_1.getValue()="115"
	and target_1.getParent().(ComplementExpr).getParent().(AssignAndExpr).getRValue() instanceof ComplementExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vreq_386, Parameter verr_386, ExprStmt target_7, PointerFieldAccess target_8, IfStmt target_9, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=verr_386
	and target_2.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-115"
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=verr_386
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-16"
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ahash_request_flags")
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_386
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1024"
	and target_2.getThen() instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_7.getLocation())
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_9.getCondition().(VariableAccess).getLocation().isBefore(target_2.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_3(Parameter verr_386, ExprStmt target_10, ExprStmt target_7, Function func) {
exists(ReturnStmt target_3 |
	target_3.getExpr().(VariableAccess).getTarget()=verr_386
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_10.getLocation())
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation()))
}

predicate func_4(Parameter verr_386, Function func, ReturnStmt target_4) {
	target_4.getExpr().(VariableAccess).getTarget()=verr_386
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Parameter vreq_386, VariableAccess target_5) {
	target_5.getTarget()=vreq_386
}

predicate func_6(Parameter vreq_386, Function func, ExprStmt target_6) {
	target_6.getExpr().(AssignAndExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flags"
	and target_6.getExpr().(AssignAndExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
	and target_6.getExpr().(AssignAndExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_386
	and target_6.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="4294966783"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Parameter vreq_386, Parameter verr_386, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_386
	and target_7.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="final"
	and target_7.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("crypto_ahash_reqtfm")
	and target_7.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_386
	and target_7.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vreq_386
}

predicate func_8(Parameter vreq_386, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="final"
	and target_8.getQualifier().(FunctionCall).getTarget().hasName("crypto_ahash_reqtfm")
	and target_8.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_386
}

predicate func_9(Parameter verr_386, IfStmt target_9) {
	target_9.getCondition().(VariableAccess).getTarget()=verr_386
	and target_9.getThen().(GotoStmt).getName() ="out"
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr() instanceof FunctionCall
	and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vreq_386, Parameter verr_386, FunctionCall target_0, Literal target_1, ReturnStmt target_4, VariableAccess target_5, ExprStmt target_6, ExprStmt target_7, PointerFieldAccess target_8, IfStmt target_9, ExprStmt target_10
where
func_0(vreq_386, verr_386, target_0)
and func_1(func, target_1)
and not func_2(vreq_386, verr_386, target_7, target_8, target_9, func)
and not func_3(verr_386, target_10, target_7, func)
and func_4(verr_386, func, target_4)
and func_5(vreq_386, target_5)
and func_6(vreq_386, func, target_6)
and func_7(vreq_386, verr_386, target_7)
and func_8(vreq_386, target_8)
and func_9(verr_386, target_9)
and func_10(func, target_10)
and vreq_386.getType().hasName("ahash_request *")
and verr_386.getType().hasName("int")
and vreq_386.getFunction() = func
and verr_386.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
