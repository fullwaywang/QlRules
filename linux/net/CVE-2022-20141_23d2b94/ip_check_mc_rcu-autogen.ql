/**
 * @name linux-23d2b94043ca8835bd1e67749020e839f396a1c2-ip_check_mc_rcu
 * @id cpp/linux/23d2b94043ca8835bd1e67749020e839f396a1c2/ip-check-mc-rcu
 * @description linux-23d2b94043ca8835bd1e67749020e839f396a1c2-ip_check_mc_rcu CVE-2022-20141
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vim_2691, VariableAccess target_2, IfStmt target_3, ExprStmt target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("spin_lock_bh")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vim_2691
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getCondition().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vim_2691, VariableAccess target_2, ExprStmt target_5) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_bh")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vim_2691
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_5.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vsrc_addr_2689, BlockStmt target_6, VariableAccess target_2) {
		target_2.getTarget()=vsrc_addr_2689
		and target_2.getParent().(IfStmt).getThen()=target_6
}

predicate func_3(Parameter vsrc_addr_2689, Variable vim_2691, IfStmt target_3) {
		target_3.getCondition().(VariableAccess).getTarget()=vim_2691
		and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(VariableAccess).getTarget()=vsrc_addr_2689
		and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ForStmt).getCondition().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ForStmt).getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ForStmt).getUpdate().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="sf_next"
		and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_4(Variable vim_2691, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="sources"
		and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vim_2691
}

predicate func_5(Variable vim_2691, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sfcount"
		and target_5.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vim_2691
		and target_5.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
		and target_5.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
}

predicate func_6(Parameter vsrc_addr_2689, Variable vim_2691, BlockStmt target_6) {
		target_6.getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_6.getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="sources"
		and target_6.getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vim_2691
		and target_6.getStmt(0).(ForStmt).getCondition().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_6.getStmt(0).(ForStmt).getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_6.getStmt(0).(ForStmt).getUpdate().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="sf_next"
		and target_6.getStmt(0).(ForStmt).getUpdate().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_6.getStmt(0).(ForStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sf_inaddr"
		and target_6.getStmt(0).(ForStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ip_sf_list *")
		and target_6.getStmt(0).(ForStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vsrc_addr_2689
}

from Function func, Parameter vsrc_addr_2689, Variable vim_2691, VariableAccess target_2, IfStmt target_3, ExprStmt target_4, ExprStmt target_5, BlockStmt target_6
where
not func_0(vim_2691, target_2, target_3, target_4)
and not func_1(vim_2691, target_2, target_5)
and func_2(vsrc_addr_2689, target_6, target_2)
and func_3(vsrc_addr_2689, vim_2691, target_3)
and func_4(vim_2691, target_4)
and func_5(vim_2691, target_5)
and func_6(vsrc_addr_2689, vim_2691, target_6)
and vsrc_addr_2689.getType().hasName("__be32")
and vim_2691.getType().hasName("ip_mc_list *")
and vsrc_addr_2689.getFunction() = func
and vim_2691.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
