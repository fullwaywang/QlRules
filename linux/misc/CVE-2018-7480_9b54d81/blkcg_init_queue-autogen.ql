/**
 * @name linux-9b54d816e00425c3a517514e0d677bb3cec49258-blkcg_init_queue
 * @id cpp/linux/9b54d816e00425c3a517514e0d677bb3cec49258/blkcg-init-queue
 * @description linux-9b54d816e00425c3a517514e0d677bb3cec49258-block/blk-cgroup.c-blkcg_init_queue CVE-2018-7480
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vblkg_1058, FunctionCall target_2, ReturnStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vblkg_1058
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_1(Variable vnew_blkg_1058, FunctionCall target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("blkg_free")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_blkg_1058
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vblkg_1058, FunctionCall target_2) {
	target_2.getTarget().hasName("IS_ERR")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vblkg_1058
}

from Function func, Variable vnew_blkg_1058, Variable vblkg_1058, ReturnStmt target_0, ExprStmt target_1, FunctionCall target_2
where
func_0(vblkg_1058, target_2, target_0)
and func_1(vnew_blkg_1058, target_2, target_1)
and func_2(vblkg_1058, target_2)
and vnew_blkg_1058.getType().hasName("blkcg_gq *")
and vblkg_1058.getType().hasName("blkcg_gq *")
and vnew_blkg_1058.(LocalVariable).getFunction() = func
and vblkg_1058.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
