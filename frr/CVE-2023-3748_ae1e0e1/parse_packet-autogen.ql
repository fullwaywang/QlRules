/**
 * @name frr-ae1e0e1fed77716bc06f181ad68c4433fb5523d0-parse_packet
 * @id cpp/frr/ae1e0e1fed77716bc06f181ad68c4433fb5523d0/parse-packet
 * @description frr-ae1e0e1fed77716bc06f181ad68c4433fb5523d0-babeld/message.c-parse_packet CVE-2023-3748
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BitwiseAndExpr target_6, Function func) {
	exists(GotoStmt target_0 |
		target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(BitwiseAndExpr target_7, Function func) {
	exists(GotoStmt target_1 |
		target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(EqualityOperation target_8, Function func) {
	exists(GotoStmt target_2 |
		target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(BitwiseAndExpr target_6, Function func, ContinueStmt target_3) {
		target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_3.getEnclosingFunction() = func
}

predicate func_4(BitwiseAndExpr target_7, Function func, ContinueStmt target_4) {
		target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
		and target_4.getEnclosingFunction() = func
}

predicate func_5(EqualityOperation target_8, Function func, ContinueStmt target_5) {
		target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, BitwiseAndExpr target_6) {
		target_6.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned short")
		and target_6.getRightOperand().(ComplementExpr).getValue()="-32769"
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, BitwiseAndExpr target_7) {
		target_7.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned short")
		and target_7.getRightOperand().(Literal).getValue()="32768"
		and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, EqualityOperation target_8) {
		target_8.getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned short")
		and target_8.getAnOperand().(Literal).getValue()="0"
		and target_8.getEnclosingFunction() = func
}

from Function func, ContinueStmt target_3, ContinueStmt target_4, ContinueStmt target_5, BitwiseAndExpr target_6, BitwiseAndExpr target_7, EqualityOperation target_8
where
not func_0(target_6, func)
and not func_1(target_7, func)
and not func_2(target_8, func)
and func_3(target_6, func, target_3)
and func_4(target_7, func, target_4)
and func_5(target_8, func, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
and func_8(func, target_8)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
