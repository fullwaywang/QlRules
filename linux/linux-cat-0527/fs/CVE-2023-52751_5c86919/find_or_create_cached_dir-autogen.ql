/**
 * @name linux-5c86919455c1edec99ebd3338ad213b59271a71b-find_or_create_cached_dir
 * @id cpp/linux/5c86919455c1edec99ebd3338ad213b59271a71b/find-or-create-cached-dir
 * @description linux-5c86919455c1edec99ebd3338ad213b59271a71b-fs/smb/client/cached_dir.c-find_or_create_cached_dir CVE-2023-52751
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcfid_25, BlockStmt target_2, NotExpr target_3, NotExpr target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="time"
	and target_0.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfid_25
	and target_0.getRightOperand() instanceof NotExpr
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vcfid_25, BlockStmt target_2, NotExpr target_1) {
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="has_lease"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfid_25
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(NotExpr target_1, Function func, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cfid_list_lock"
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("cached_fids *")
	and target_2.getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getCondition()=target_1
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vcfid_25, NotExpr target_3) {
	target_3.getOperand().(FunctionCall).getTarget().hasName("strcmp")
	and target_3.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="path"
	and target_3.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfid_25
	and target_3.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
}

from Function func, Variable vcfid_25, NotExpr target_1, BlockStmt target_2, NotExpr target_3
where
not func_0(vcfid_25, target_2, target_3, target_1)
and func_1(vcfid_25, target_2, target_1)
and func_2(target_1, func, target_2)
and func_3(vcfid_25, target_3)
and vcfid_25.getType().hasName("cached_fid *")
and vcfid_25.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
