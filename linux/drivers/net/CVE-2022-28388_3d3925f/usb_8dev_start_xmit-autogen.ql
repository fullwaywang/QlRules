/**
 * @name linux-3d3925ff6433f98992685a9679613a2cc97f3ce2-usb_8dev_start_xmit
 * @id cpp/linux/3d3925ff6433f98992685a9679613a2cc97f3ce2/usb-8dev-start-xmit
 * @description linux-3d3925ff6433f98992685a9679613a2cc97f3ce2-drivers/net/can/usb/usb_8dev.c-usb_8dev_start_xmit CVE-2022-28388
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vurb_601, LabelStmt target_8, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("usb_free_urb")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_601
	and target_8.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vstats_598, FunctionCall target_9, ExprStmt target_11) {
exists(ExprStmt target_1 |
	target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tx_dropped"
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstats_598
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_11.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vnetdev_595, Variable vcontext_602, Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("can_free_echo_skb")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_595
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="echo_index"
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcontext_602
	and target_2.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vurb_601, Function func, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("usb_unanchor_urb")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_601
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vpriv_597, Variable vurb_601, Variable vbuf_603, Variable vsize_605, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("usb_free_coherent")
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="udev"
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_597
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsize_605
	and target_4.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vbuf_603
	and target_4.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="transfer_dma"
	and target_4.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vurb_601
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vpriv_597, Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("atomic_dec")
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="active_tx_urbs"
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_597
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Parameter vnetdev_595, Variable verr_604, Function func, IfStmt target_6) {
	target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=verr_604
	and target_6.getCondition().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-19"
	and target_6.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("netif_device_detach")
	and target_6.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_595
	and target_6.getElse().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("netdev_warn")
	and target_6.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_595
	and target_6.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="failed tx_urb %d\n"
	and target_6.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=verr_604
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(FunctionCall target_9, Function func, GotoStmt target_7) {
	target_7.getName() ="failed"
	and target_7.getParent().(IfStmt).getCondition()=target_9
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, LabelStmt target_8) {
	target_8.getName() ="nomembuf"
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable verr_604, FunctionCall target_9) {
	target_9.getTarget().hasName("__builtin_expect")
	and target_9.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_604
	and target_9.getArgument(1).(Literal).getValue()="0"
}

predicate func_11(Variable vstats_598, ExprStmt target_11) {
	target_11.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tx_dropped"
	and target_11.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstats_598
}

from Function func, Parameter vnetdev_595, Variable vpriv_597, Variable vstats_598, Variable vurb_601, Variable vcontext_602, Variable vbuf_603, Variable verr_604, Variable vsize_605, ExprStmt target_0, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5, IfStmt target_6, GotoStmt target_7, LabelStmt target_8, FunctionCall target_9, ExprStmt target_11
where
func_0(vurb_601, target_8, target_0)
and not func_1(vstats_598, target_9, target_11)
and func_2(vnetdev_595, vcontext_602, func, target_2)
and func_3(vurb_601, func, target_3)
and func_4(vpriv_597, vurb_601, vbuf_603, vsize_605, func, target_4)
and func_5(vpriv_597, func, target_5)
and func_6(vnetdev_595, verr_604, func, target_6)
and func_7(target_9, func, target_7)
and func_8(func, target_8)
and func_9(verr_604, target_9)
and func_11(vstats_598, target_11)
and vnetdev_595.getType().hasName("net_device *")
and vpriv_597.getType().hasName("usb_8dev_priv *")
and vstats_598.getType().hasName("net_device_stats *")
and vurb_601.getType().hasName("urb *")
and vcontext_602.getType().hasName("usb_8dev_tx_urb_context *")
and vbuf_603.getType().hasName("u8 *")
and verr_604.getType().hasName("int")
and vsize_605.getType().hasName("size_t")
and vnetdev_595.getFunction() = func
and vpriv_597.(LocalVariable).getFunction() = func
and vstats_598.(LocalVariable).getFunction() = func
and vurb_601.(LocalVariable).getFunction() = func
and vcontext_602.(LocalVariable).getFunction() = func
and vbuf_603.(LocalVariable).getFunction() = func
and verr_604.(LocalVariable).getFunction() = func
and vsize_605.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
