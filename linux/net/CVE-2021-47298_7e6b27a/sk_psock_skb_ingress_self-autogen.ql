/**
 * @name linux-7e6b27a69167f97c56b5437871d29e9722c3e470-sk_psock_skb_ingress_self
 * @id cpp/linux/7e6b27a69167f97c56b5437871d29e9722c3e470/sk-psock-skb-ingress-self
 * @description linux-7e6b27a69167f97c56b5437871d29e9722c3e470-net/core/skmsg.c-sk_psock_skb_ingress_self CVE-2021-47298
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_0.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_1(Variable vmsg_560, ExprStmt target_4, FunctionCall target_3, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_560
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(3).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vpsock_558, Parameter vskb_558, Variable vmsg_560, Variable vsk_561, FunctionCall target_3) {
	target_3.getTarget().hasName("sk_psock_skb_ingress_enqueue")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vskb_558
	and target_3.getArgument(1).(VariableAccess).getTarget()=vpsock_558
	and target_3.getArgument(2).(VariableAccess).getTarget()=vsk_561
	and target_3.getArgument(3).(VariableAccess).getTarget()=vmsg_560
}

predicate func_4(Variable vmsg_560, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("sk_msg_init")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsg_560
}

from Function func, Parameter vpsock_558, Parameter vskb_558, Variable vmsg_560, Variable vsk_561, FunctionCall target_3, ExprStmt target_4
where
not func_0(func)
and not func_1(vmsg_560, target_4, target_3, func)
and func_3(vpsock_558, vskb_558, vmsg_560, vsk_561, target_3)
and func_4(vmsg_560, target_4)
and vpsock_558.getType().hasName("sk_psock *")
and vskb_558.getType().hasName("sk_buff *")
and vmsg_560.getType().hasName("sk_msg *")
and vsk_561.getType().hasName("sock *")
and vpsock_558.getFunction() = func
and vskb_558.getFunction() = func
and vmsg_560.(LocalVariable).getFunction() = func
and vsk_561.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
