/**
 * @name linux-b76b46902c2d0395488c8412e1116c2486cdfcb2-alloc_hugetlb_folio
 * @id cpp/linux/b76b46902c2d0395488c8412e1116c2486cdfcb2/alloc-hugetlb-folio
 * @description linux-b76b46902c2d0395488c8412e1116c2486cdfcb2-mm/hugetlb.c-alloc_hugetlb_folio CVE-2024-36000
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhugetlb_lock, VariableAccess target_3, AddressOfExpr target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("spin_lock_irq")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vhugetlb_lock
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vhugetlb_lock, VariableAccess target_3) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irq")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vhugetlb_lock
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3)
}

predicate func_2(Variable vh_3152, Variable vfolio_3153, VariableAccess target_3, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("hugetlb_cgroup_uncharge_folio_rsvd")
	and target_2.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("hstate_index")
	and target_2.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vh_3152
	and target_2.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("pages_per_huge_page")
	and target_2.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vh_3152
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vfolio_3153
	and target_2.getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Variable vdeferred_reserve_3159, ExprStmt target_2, VariableAccess target_3) {
	target_3.getTarget()=vdeferred_reserve_3159
	and target_3.getParent().(IfStmt).getThen()=target_2
}

predicate func_4(Variable vhugetlb_lock, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vhugetlb_lock
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irq")
}

from Function func, Variable vh_3152, Variable vfolio_3153, Variable vdeferred_reserve_3159, Variable vhugetlb_lock, ExprStmt target_2, VariableAccess target_3, AddressOfExpr target_4
where
not func_0(vhugetlb_lock, target_3, target_4)
and not func_1(vhugetlb_lock, target_3)
and func_2(vh_3152, vfolio_3153, target_3, target_2)
and func_3(vdeferred_reserve_3159, target_2, target_3)
and func_4(vhugetlb_lock, target_4)
and vh_3152.getType().hasName("hstate *")
and vfolio_3153.getType().hasName("folio *")
and vdeferred_reserve_3159.getType().hasName("bool")
and vhugetlb_lock.getType().hasName("spinlock_t")
and vh_3152.(LocalVariable).getFunction() = func
and vfolio_3153.(LocalVariable).getFunction() = func
and vdeferred_reserve_3159.(LocalVariable).getFunction() = func
and not vhugetlb_lock.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
