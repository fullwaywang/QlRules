/**
 * @name linux-28ebeb8db77035e058a510ce9bd17c2b9a009dba-usbtest_disconnect
 * @id cpp/linux/28ebeb8db77035e058a510ce9bd17c2b9a009dba/usbtest-disconnect
 * @description linux-28ebeb8db77035e058a510ce9bd17c2b9a009dba-drivers/usb/misc/usbtest.c-usbtest_disconnect CVE-2020-15393
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdev_2872, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="buf"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_2872
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vdev_2872, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_2872
}

from Function func, Variable vdev_2872, ExprStmt target_1
where
not func_0(vdev_2872, target_1, func)
and func_1(vdev_2872, target_1)
and vdev_2872.getType().hasName("usbtest_dev *")
and vdev_2872.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
