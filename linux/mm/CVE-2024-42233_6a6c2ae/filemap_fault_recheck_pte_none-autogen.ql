/**
 * @name linux-6a6c2aec1a89506595801b4cf7e8eef035f33748-filemap_fault_recheck_pte_none
 * @id cpp/linux/6a6c2aec1a89506595801b4cf7e8eef035f33748/filemap-fault-recheck-pte-none
 * @description linux-6a6c2aec1a89506595801b4cf7e8eef035f33748-mm/filemap.c-filemap_fault_recheck_pte_none CVE-2024-42233
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvmf_3184, FunctionCall target_0) {
	exists(PointerFieldAccess obj_0 | obj_0=target_0.getArgument(0) |
		obj_0.getTarget().getName()="pmd"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvmf_3184
	)
	and exists(ValueFieldAccess obj_1 | obj_1=target_0.getArgument(1) |
		exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
			obj_2.getTarget().getName()="(unknown field)"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vvmf_3184
		)
		and obj_1.getTarget().getName()="address"
	)
	and exists(AssignExpr obj_3 | obj_3=target_0.getParent() |
		obj_3.getRValue() = target_0
		and obj_3.getLValue().(VariableAccess).getTarget().getType().hasName("pte_t *")
	)
	and target_0.getTarget().hasName("pte_offset_map")
	and not target_0.getTarget().hasName("pte_offset_map_nolock")
}

predicate func_1(Variable vvma_3186, NotExpr target_3) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="vm_mm"
	and target_1.getQualifier().(VariableAccess).getTarget()=vvma_3186
	and target_3.getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Parameter vvmf_3184, ValueFieldAccess target_4, ExprStmt target_5) {
exists(AddressOfExpr target_2 |
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="ptl"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvmf_3184
	)
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_3(Variable vvma_3186, NotExpr target_3) {
	exists(BitwiseAndExpr obj_0 | obj_0=target_3.getOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="(unknown field)"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvma_3186
			)
			and obj_1.getTarget().getName()="vm_flags"
		)
		and obj_0.getRightOperand().(Literal).getValue()="8192"
	)
}

predicate func_4(Parameter vvmf_3184, ValueFieldAccess target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getQualifier() |
		obj_0.getTarget().getName()="(unknown field)"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvmf_3184
	)
	and target_4.getTarget().getName()="address"
}

predicate func_5(Parameter vvmf_3184, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="ptl"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vvmf_3184
		)
		and obj_0.getTarget().hasName("spin_lock")
	)
}

from Function func, Parameter vvmf_3184, Variable vvma_3186, FunctionCall target_0, NotExpr target_3, ValueFieldAccess target_4, ExprStmt target_5
where
func_0(vvmf_3184, target_0)
and not func_1(vvma_3186, target_3)
and not func_2(vvmf_3184, target_4, target_5)
and func_3(vvma_3186, target_3)
and func_4(vvmf_3184, target_4)
and func_5(vvmf_3184, target_5)
and vvmf_3184.getType().hasName("vm_fault *")
and vvma_3186.getType().hasName("vm_area_struct *")
and vvmf_3184.getFunction() = func
and vvma_3186.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
