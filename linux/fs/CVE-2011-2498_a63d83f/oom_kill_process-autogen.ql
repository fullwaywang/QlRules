/**
 * @name linux-a63d83f427f-oom_kill_process
 * @id cpp/linux/a63d83f427f/oom-kill-process
 * @description linux-a63d83f427f-mm/oom_kill.c-oom_kill_process CVE-2011-2498
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

/*predicate func_2(Function func, StringLiteral target_2) {
		target_2.getValue()="<3>%s: Kill process %d (%s) score %lu or sacrifice child\n"
		and not target_2.getValue()="<3>%s: Kill process %d (%s) score %d or sacrifice child\n"
		and target_2.getEnclosingFunction() = func
}

*/
predicate func_3(Parameter vpoints_471, VariableAccess target_3) {
		target_3.getTarget()=vpoints_471
		and vpoints_471.getIndex() = 3
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="<3>%s: Kill process %d (%s) score %lu or sacrifice child\n"
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("task_pid_nr")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="comm"
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("task_struct *")
}

predicate func_5(Parameter vmem_471, Parameter vnodemask_472, Variable vchild_475, Variable vchild_points_507, ExprStmt target_12, FunctionCall target_13, ValueFieldAccess target_14, ExprStmt target_15) {
	exists(AssignExpr target_5 |
		target_5.getLValue().(VariableAccess).getTarget()=vchild_points_507
		and target_5.getRValue().(FunctionCall).getTarget().hasName("oom_badness")
		and target_5.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchild_475
		and target_5.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmem_471
		and target_5.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnodemask_472
		and target_5.getRValue().(FunctionCall).getArgument(3).(VariableAccess).getType().hasName("unsigned long")
		and target_12.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_5.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_5.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_13.getArgument(1).(VariableAccess).getLocation())
		and target_14.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_5.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_15.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_6(Variable vchild_475, VariableAccess target_6) {
		target_6.getTarget()=vchild_475
		and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_7(Parameter vmem_471, VariableAccess target_7) {
		target_7.getTarget()=vmem_471
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_8(Parameter vnodemask_472, VariableAccess target_8) {
		target_8.getTarget()=vnodemask_472
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_9(Function func, DeclStmt target_9) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Variable vuptime_478, Function func, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("ktime_get_ts")
		and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vuptime_478
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Parameter vmem_471, Parameter vnodemask_472, Variable vchild_475, Variable vuptime_478, Variable vchild_points_507, AssignExpr target_11) {
		target_11.getLValue().(VariableAccess).getTarget()=vchild_points_507
		and target_11.getRValue().(FunctionCall).getTarget().hasName("badness")
		and target_11.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchild_475
		and target_11.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmem_471
		and target_11.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnodemask_472
		and target_11.getRValue().(FunctionCall).getArgument(3).(ValueFieldAccess).getTarget().getName()="tv_sec"
		and target_11.getRValue().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vuptime_478
}

predicate func_12(Parameter vmem_471, ExprStmt target_12) {
		target_12.getExpr().(FunctionCall).getTarget().hasName("boost_dying_task_prio")
		and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
		and target_12.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmem_471
}

predicate func_13(Parameter vmem_471, FunctionCall target_13) {
		target_13.getTarget().hasName("oom_kill_task")
		and target_13.getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
		and target_13.getArgument(1).(VariableAccess).getTarget()=vmem_471
}

predicate func_14(Variable vchild_475, ValueFieldAccess target_14) {
		target_14.getTarget().getName()="next"
		and target_14.getQualifier().(PointerFieldAccess).getTarget().getName()="sibling"
		and target_14.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchild_475
}

predicate func_15(Variable vchild_475, ExprStmt target_15) {
		target_15.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("task_struct *")
		and target_15.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vchild_475
}

from Function func, Parameter vpoints_471, Parameter vmem_471, Parameter vnodemask_472, Variable vchild_475, Variable vuptime_478, Variable vchild_points_507, VariableAccess target_3, VariableAccess target_6, VariableAccess target_7, VariableAccess target_8, DeclStmt target_9, ExprStmt target_10, AssignExpr target_11, ExprStmt target_12, FunctionCall target_13, ValueFieldAccess target_14, ExprStmt target_15
where
func_3(vpoints_471, target_3)
and not func_5(vmem_471, vnodemask_472, vchild_475, vchild_points_507, target_12, target_13, target_14, target_15)
and func_6(vchild_475, target_6)
and func_7(vmem_471, target_7)
and func_8(vnodemask_472, target_8)
and func_9(func, target_9)
and func_10(vuptime_478, func, target_10)
and func_11(vmem_471, vnodemask_472, vchild_475, vuptime_478, vchild_points_507, target_11)
and func_12(vmem_471, target_12)
and func_13(vmem_471, target_13)
and func_14(vchild_475, target_14)
and func_15(vchild_475, target_15)
and vpoints_471.getType().hasName("unsigned long")
and vmem_471.getType().hasName("mem_cgroup *")
and vnodemask_472.getType().hasName("nodemask_t *")
and vchild_475.getType().hasName("task_struct *")
and vuptime_478.getType().hasName("timespec")
and vchild_points_507.getType().hasName("unsigned long")
and vpoints_471.getFunction() = func
and vmem_471.getFunction() = func
and vnodemask_472.getFunction() = func
and vchild_475.(LocalVariable).getFunction() = func
and vuptime_478.(LocalVariable).getFunction() = func
and vchild_points_507.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
