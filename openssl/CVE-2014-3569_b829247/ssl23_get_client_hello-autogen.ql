/**
 * @name openssl-b82924741b4bd590da890619be671f4635e46c2b-ssl23_get_client_hello
 * @id cpp/openssl/b82924741b4bd590da890619be671f4635e46c2b/ssl23-get-client-hello
 * @description openssl-b82924741b4bd590da890619be671f4635e46c2b-ssl/s23_srvr.c-ssl23_get_client_hello CVE-2014-3569
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(AssignExpr target_0 |
		target_0.getLValue().(VariableAccess).getType().hasName("const SSL_METHOD *")
		and target_0.getRValue() instanceof FunctionCall
		and target_0.getEnclosingFunction() = func)
}

predicate func_2(Parameter vs_233, LogicalOrExpr target_6, ExprStmt target_7) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="method"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_233
		and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("const SSL_METHOD *")
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vs_233, FunctionCall target_4) {
		target_4.getTarget().hasName("ssl23_get_server_method")
		and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="version"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_233
		and target_4.getParent().(AssignExpr).getRValue() = target_4
		and target_4.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="method"
		and target_4.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_233
}

predicate func_5(Parameter vs_233, ExprStmt target_8, NotExpr target_9, PointerFieldAccess target_5) {
		target_5.getTarget().getName()="method"
		and target_5.getQualifier().(VariableAccess).getTarget()=vs_233
		and target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getQualifier().(VariableAccess).getLocation())
		and target_5.getQualifier().(VariableAccess).getLocation().isBefore(target_9.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_6(Function func, LogicalOrExpr target_6) {
		target_6.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="2"
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="3"
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Parameter vs_233, EqualityOperation target_10, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="handshake_func"
		and target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_233
		and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ssl_accept"
		and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="method"
		and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_233
		and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_8(Parameter vs_233, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="method"
		and target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_233
		and target_8.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_9(Parameter vs_233, NotExpr target_9) {
		target_9.getOperand().(FunctionCall).getTarget().hasName("ssl_init_wbio_buffer")
		and target_9.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_233
		and target_9.getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="1"
}

predicate func_10(Function func, EqualityOperation target_10) {
		target_10.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_10.getAnOperand().(Literal).getValue()="1"
		and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vs_233, FunctionCall target_4, PointerFieldAccess target_5, LogicalOrExpr target_6, ExprStmt target_7, ExprStmt target_8, NotExpr target_9, EqualityOperation target_10
where
not func_0(func)
and not func_2(vs_233, target_6, target_7)
and func_4(vs_233, target_4)
and func_5(vs_233, target_8, target_9, target_5)
and func_6(func, target_6)
and func_7(vs_233, target_10, target_7)
and func_8(vs_233, target_8)
and func_9(vs_233, target_9)
and func_10(func, target_10)
and vs_233.getType().hasName("SSL *")
and vs_233.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
