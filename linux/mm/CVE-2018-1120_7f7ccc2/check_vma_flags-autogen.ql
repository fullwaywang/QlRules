/**
 * @name linux-7f7ccc2ccc2e70c6054685f5e3522efa81556830-check_vma_flags
 * @id cpp/linux/7f7ccc2ccc2e70c6054685f5e3522efa81556830/check-vma-flags
 * @description linux-7f7ccc2ccc2e70c6054685f5e3522efa81556830-mm/gup.c-check_vma_flags CVE-2018-1120
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvma_538, Parameter vgup_flags_538, IfStmt target_1, NotExpr target_2, BitwiseAndExpr target_3, NotExpr target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vgup_flags_538
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="32768"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("vma_is_anonymous")
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_538
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vgup_flags_538, IfStmt target_1) {
	target_1.getCondition().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("vm_flags_t")
	and target_1.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
	and target_1.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("is_cow_mapping")
	and target_1.getElse().(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("vm_flags_t")
	and target_1.getElse().(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_1.getElse().(IfStmt).getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vgup_flags_538
	and target_1.getElse().(IfStmt).getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="16"
	and target_1.getElse().(IfStmt).getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_1.getElse().(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("vm_flags_t")
	and target_1.getElse().(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="16"
	and target_1.getElse().(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
}

predicate func_2(Parameter vvma_538, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("arch_vma_access_permitted")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_538
	and target_2.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Parameter vgup_flags_538, BitwiseAndExpr target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget()=vgup_flags_538
	and target_3.getRightOperand().(Literal).getValue()="8192"
}

predicate func_4(Parameter vgup_flags_538, ReturnStmt target_5, NotExpr target_4) {
	target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vgup_flags_538
	and target_4.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="16"
	and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(NotExpr target_4, Function func, ReturnStmt target_5) {
	target_5.getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_5.getParent().(IfStmt).getCondition()=target_4
	and target_5.getEnclosingFunction() = func
}

from Function func, Parameter vvma_538, Parameter vgup_flags_538, IfStmt target_1, NotExpr target_2, BitwiseAndExpr target_3, NotExpr target_4, ReturnStmt target_5
where
not func_0(vvma_538, vgup_flags_538, target_1, target_2, target_3, target_4, func)
and func_1(vgup_flags_538, target_1)
and func_2(vvma_538, target_2)
and func_3(vgup_flags_538, target_3)
and func_4(vgup_flags_538, target_5, target_4)
and func_5(target_4, func, target_5)
and vvma_538.getType().hasName("vm_area_struct *")
and vgup_flags_538.getType().hasName("unsigned long")
and vvma_538.getFunction() = func
and vgup_flags_538.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
