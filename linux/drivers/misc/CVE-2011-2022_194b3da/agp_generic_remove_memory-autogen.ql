/**
 * @name linux-194b3da873fd334ef183806db751473512af29ce-agp_generic_remove_memory
 * @id cpp/linux/194b3da873fd334ef183806db751473512af29ce/agp-generic-remove-memory
 * @description linux-194b3da873fd334ef183806db751473512af29ce-drivers/char/agp/generic.c-agp_generic_remove_memory CVE-2011-2022
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("agp_num_entries")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1)
}

predicate func_2(Parameter vpg_start_1129, Parameter vmem_1129, ExprStmt target_3, EqualityOperation target_4, RelationalOperation target_5, Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vpg_start_1129
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1129
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vpg_start_1129
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1129
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vpg_start_1129
		and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vpg_start_1129, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vpg_start_1129
}

predicate func_4(Parameter vmem_1129, EqualityOperation target_4) {
		target_4.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_4.getAnOperand().(PointerFieldAccess).getTarget().getName()="type"
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1129
}

predicate func_5(Parameter vpg_start_1129, Parameter vmem_1129, RelationalOperation target_5) {
		 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
		and target_5.getLesserOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_5.getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="page_count"
		and target_5.getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmem_1129
		and target_5.getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vpg_start_1129
}

from Function func, Parameter vpg_start_1129, Parameter vmem_1129, ExprStmt target_3, EqualityOperation target_4, RelationalOperation target_5
where
not func_1(func)
and not func_2(vpg_start_1129, vmem_1129, target_3, target_4, target_5, func)
and func_3(vpg_start_1129, target_3)
and func_4(vmem_1129, target_4)
and func_5(vpg_start_1129, vmem_1129, target_5)
and vpg_start_1129.getType().hasName("off_t")
and vmem_1129.getType().hasName("agp_memory *")
and vpg_start_1129.getFunction() = func
and vmem_1129.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
