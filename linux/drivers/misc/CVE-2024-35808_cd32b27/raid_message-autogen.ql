/**
 * @name linux-cd32b27a66db8776d8b8e82ec7d7dde97a8693b0-raid_message
 * @id cpp/linux/cd32b27a66db8776d8b8e82ec7d7dde97a8693b0/raid-message
 * @description linux-cd32b27a66db8776d8b8e82ec7d7dde97a8693b0-drivers/md/dm-raid.c-raid_message CVE-2024-35808
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmddev_3721, FunctionCall target_0) {
	target_0.getTarget().hasName("md_reap_sync_thread")
	and not target_0.getTarget().hasName("md_frozen_sync_thread")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vmddev_3721
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("set_bit")
	and not target_1.getTarget().hasName("mddev_unlock")
	and target_1.getArgument(1) instanceof AddressOfExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, FunctionCall target_2) {
	target_2.getTarget().hasName("strcasecmp")
	and not target_2.getTarget().hasName("mddev_lock")
	and target_2.getArgument(0) instanceof ArrayExpr
	and target_2.getArgument(1).(StringLiteral).getValue()="frozen"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("set_bit")
	and not target_3.getTarget().hasName("md_idle_sync_thread")
	and target_3.getArgument(1) instanceof AddressOfExpr
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vmddev_3721) {
exists(AssignExpr target_4 |
	target_4.getLValue().(VariableAccess).getType().hasName("int")
	and target_4.getRValue().(FunctionCall).getTarget().hasName("mddev_lock")
	and target_4.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmddev_3721)
}

predicate func_6(LogicalOrExpr target_21, Function func) {
exists(ReturnStmt target_6 |
	target_6.getExpr().(VariableAccess).getType().hasName("int")
	and target_6.getParent().(IfStmt).getCondition()=target_21
	and target_6.getEnclosingFunction() = func)
}

predicate func_8(Variable vmddev_3721, PointerFieldAccess target_22, IfStmt target_23) {
exists(ExprStmt target_8 |
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mddev_lock")
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmddev_3721
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_8
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
	and target_23.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_9(PointerFieldAccess target_22, Function func) {
exists(IfStmt target_9 |
	target_9.getCondition().(VariableAccess).getType().hasName("int")
	and target_9.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_9
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
	and target_9.getEnclosingFunction() = func)
}

predicate func_10(Variable vmddev_3721, PointerFieldAccess target_22, AddressOfExpr target_16) {
exists(ExprStmt target_10 |
	target_10.getExpr().(FunctionCall).getTarget().hasName("md_idle_sync_thread")
	and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmddev_3721
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_10
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
	and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_12(Variable vmddev_3721, PointerFieldAccess target_22) {
exists(ExprStmt target_12 |
	target_12.getExpr().(FunctionCall).getTarget().hasName("mddev_unlock")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmddev_3721
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_12
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22)
}

predicate func_13(Variable vmddev_3721, AddressOfExpr target_13) {
	target_13.getOperand().(PointerFieldAccess).getTarget().getName()="recovery"
	and target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmddev_3721
	and target_13.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

/*predicate func_14(Variable vmddev_3721, PointerFieldAccess target_14) {
	target_14.getTarget().getName()="recovery"
	and target_14.getQualifier().(VariableAccess).getTarget()=vmddev_3721
	and target_14.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("clear_bit")
}

*/
predicate func_15(Parameter vargv_3717, ArrayExpr target_15) {
	target_15.getArrayBase().(VariableAccess).getTarget()=vargv_3717
	and target_15.getArrayOffset().(Literal).getValue()="0"
	and target_15.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_16(Variable vmddev_3721, AddressOfExpr target_16) {
	target_16.getOperand().(PointerFieldAccess).getTarget().getName()="recovery"
	and target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmddev_3721
	and target_16.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_17(Variable vmddev_3721, NotExpr target_24, ExprStmt target_17) {
	target_17.getExpr().(FunctionCall).getTarget().hasName("clear_bit")
	and target_17.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="recovery"
	and target_17.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmddev_3721
	and target_17.getParent().(IfStmt).getCondition()=target_24
}

predicate func_18(Parameter vargv_3717, BlockStmt target_25, NotExpr target_18) {
	target_18.getOperand().(FunctionCall).getTarget().hasName("strcasecmp")
	and target_18.getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vargv_3717
	and target_18.getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_18.getOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()="idle"
	and target_18.getParent().(LogicalOrExpr).getRightOperand() instanceof NotExpr
	and target_18.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_25
}

predicate func_19(Parameter vargv_3717, Variable vmddev_3721, LogicalOrExpr target_21, IfStmt target_19) {
	target_19.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("decipher_sync_action")
	and target_19.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmddev_3721
	and target_19.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="recovery"
	and target_19.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmddev_3721
	and target_19.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
	and target_19.getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("strcasecmp")
	and target_19.getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vargv_3717
	and target_19.getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_19.getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()="resync"
	and target_19.getElse().(IfStmt).getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("strcasecmp")
	and target_19.getElse().(IfStmt).getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vargv_3717
	and target_19.getElse().(IfStmt).getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_19.getElse().(IfStmt).getElse().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()="recover"
	and target_19.getElse().(IfStmt).getElse().(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_19.getElse().(IfStmt).getElse().(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="recovery"
	and target_19.getElse().(IfStmt).getElse().(IfStmt).getElse().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("strcasecmp")
	and target_19.getParent().(IfStmt).getCondition()=target_21
}

predicate func_20(Variable vmddev_3721, BlockStmt target_26, VariableAccess target_20) {
	target_20.getTarget()=vmddev_3721
	and target_20.getParent().(PointerFieldAccess).getParent().(IfStmt).getThen()=target_26
}

predicate func_21(BlockStmt target_25, Function func, LogicalOrExpr target_21) {
	target_21.getLeftOperand() instanceof NotExpr
	and target_21.getRightOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_21.getParent().(IfStmt).getThen()=target_25
	and target_21.getEnclosingFunction() = func
}

predicate func_22(Variable vmddev_3721, PointerFieldAccess target_22) {
	target_22.getTarget().getName()="sync_thread"
	and target_22.getQualifier().(VariableAccess).getTarget()=vmddev_3721
}

predicate func_23(Variable vmddev_3721, IfStmt target_23) {
	target_23.getCondition().(PointerFieldAccess).getTarget().getName()="sync_thread"
	and target_23.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmddev_3721
	and target_23.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_23.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_24(Parameter vargv_3717, ExprStmt target_27, NotExpr target_24) {
	target_24.getOperand().(FunctionCall).getTarget().hasName("strcasecmp")
	and target_24.getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vargv_3717
	and target_24.getOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_24.getOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()="frozen"
	and target_24.getParent().(IfStmt).getThen()=target_27
}

predicate func_25(Variable vmddev_3721, BlockStmt target_25) {
	target_25.getStmt(0).(IfStmt).getCondition().(PointerFieldAccess).getTarget().getName()="sync_thread"
	and target_25.getStmt(0).(IfStmt).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmddev_3721
	and target_25.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_25.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_26(Function func, BlockStmt target_26) {
	target_26.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_26.getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
	and target_26.getEnclosingFunction() = func
}

predicate func_27(Function func, ExprStmt target_27) {
	target_27.getExpr() instanceof FunctionCall
	and target_27.getEnclosingFunction() = func
}

from Function func, Parameter vargv_3717, Variable vmddev_3721, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, FunctionCall target_3, AddressOfExpr target_13, ArrayExpr target_15, AddressOfExpr target_16, ExprStmt target_17, NotExpr target_18, IfStmt target_19, VariableAccess target_20, LogicalOrExpr target_21, PointerFieldAccess target_22, IfStmt target_23, NotExpr target_24, BlockStmt target_25, BlockStmt target_26, ExprStmt target_27
where
func_0(vmddev_3721, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and not func_4(vmddev_3721)
and not func_6(target_21, func)
and not func_8(vmddev_3721, target_22, target_23)
and not func_9(target_22, func)
and not func_10(vmddev_3721, target_22, target_16)
and not func_12(vmddev_3721, target_22)
and func_13(vmddev_3721, target_13)
and func_15(vargv_3717, target_15)
and func_16(vmddev_3721, target_16)
and func_17(vmddev_3721, target_24, target_17)
and func_18(vargv_3717, target_25, target_18)
and func_19(vargv_3717, vmddev_3721, target_21, target_19)
and func_20(vmddev_3721, target_26, target_20)
and func_21(target_25, func, target_21)
and func_22(vmddev_3721, target_22)
and func_23(vmddev_3721, target_23)
and func_24(vargv_3717, target_27, target_24)
and func_25(vmddev_3721, target_25)
and func_26(func, target_26)
and func_27(func, target_27)
and vargv_3717.getType().hasName("char **")
and vmddev_3721.getType().hasName("mddev *")
and vargv_3717.getFunction() = func
and vmddev_3721.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
