/**
 * @name linux-8605330aac5a5785630aec8f64378a54891937cc-sock_queue_err_skb
 * @id cpp/linux/8605330aac5a5785630aec8f64378a54891937cc/sock-queue-err-skb
 * @description linux-8605330aac5a5785630aec8f64378a54891937cc-net/core/skbuff.c-sock_queue_err_skb CVE-2017-7277
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_3700, ExprStmt target_1, ExprStmt target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("skb_set_err_queue")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_3700
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vskb_3700, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("atomic_add")
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="truesize"
		and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_3700
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="rmem_alloc"
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sock *")
}

predicate func_2(Parameter vskb_3700, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("skb_dst_force")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_3700
}

from Function func, Parameter vskb_3700, ExprStmt target_1, ExprStmt target_2
where
not func_0(vskb_3700, target_1, target_2, func)
and func_1(vskb_3700, target_1)
and func_2(vskb_3700, target_2)
and vskb_3700.getType().hasName("sk_buff *")
and vskb_3700.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
