/**
 * @name linux-a3a858ff18a72a8d388e31ab0d98f7e944841a62-sk_receive_skb
 * @id cpp/linux/a3a858ff18a72a8d388e31ab0d98f7e944841a62/sk-receive-skb
 * @description linux-a3a858ff18a72a8d388e31ab0d98f7e944841a62-net/core/sock.c-sk_receive_skb CVE-2010-4251
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_321, Parameter vsk_321, BlockStmt target_1, FunctionCall target_0) {
		target_0.getTarget().hasName("sk_add_backlog_limited")
		and not target_0.getTarget().hasName("sk_add_backlog")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vsk_321
		and target_0.getArgument(1).(VariableAccess).getTarget()=vskb_321
		and target_0.getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Parameter vsk_321, BlockStmt target_1) {
		target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
		and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="slock"
		and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
		and target_1.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_321
		and target_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_inc")
		and target_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sk_drops"
		and target_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_321
}

from Function func, Parameter vskb_321, Parameter vsk_321, FunctionCall target_0, BlockStmt target_1
where
func_0(vskb_321, vsk_321, target_1, target_0)
and func_1(vsk_321, target_1)
and vskb_321.getType().hasName("sk_buff *")
and vsk_321.getType().hasName("sock *")
and vskb_321.getFunction() = func
and vsk_321.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
