/**
 * @name linux-6d98741dbd1309a6f2d7cffbb10a8f036ec3ca06-tasdev_load_calibrated_data
 * @id cpp/linux/6d98741dbd1309a6f2d7cffbb10a8f036ec3ca06/tasdev-load-calibrated-data
 * @description linux-6d98741dbd1309a6f2d7cffbb10a8f036ec3ca06-sound/soc/codecs/tas2781-fmwlib.c-tasdev_load_calibrated_data CVE-2024-42278
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcal_2186, AddressOfExpr target_2) {
exists(NotExpr target_0 |
	target_0.getOperand().(VariableAccess).getTarget()=vcal_2186
	and target_0.getParent().(IfStmt).getThen() instanceof ReturnStmt
	and target_0.getOperand().(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vcal_2186, VariableAccess target_1) {
	target_1.getTarget()=vcal_2186
	and target_1.getParent().(IfStmt).getThen() instanceof ReturnStmt
}

predicate func_2(Variable vcal_2186, AddressOfExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="dev_data"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcal_2186
	)
}

from Function func, Variable vcal_2186, VariableAccess target_1, AddressOfExpr target_2
where
not func_0(vcal_2186, target_2)
and func_1(vcal_2186, target_1)
and func_2(vcal_2186, target_2)
and vcal_2186.getType().hasName("tasdevice_calibration *")
and vcal_2186.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
