/**
 * @name linux-ef0a0e616b2789bb804a0ce5e161db03170a85b6-xhci_configure_endpoint
 * @id cpp/linux/ef0a0e616b2789bb804a0ce5e161db03170a85b6/xhci-configure-endpoint
 * @description linux-ef0a0e616b2789bb804a0ce5e161db03170a85b6-drivers/usb/host/xhci.c-xhci_configure_endpoint CVE-2024-45006
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctx_change_2757, Parameter vxhci_2754, BlockStmt target_2, NotExpr target_3) {
exists(LogicalAndExpr target_0 |
	exists(LogicalAndExpr obj_0 | obj_0=target_0.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRightOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(2) |
				obj_2.getTarget().getName()="in_ctx"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("xhci_command *")
			)
			and obj_1.getTarget().hasName("xhci_reserve_bandwidth")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vxhci_2754
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("xhci_virt_device *")
		)
		and obj_0.getLeftOperand() instanceof BitwiseAndExpr
		and obj_0.getParent().(IfStmt).getThen()=target_2
	)
	and target_0.getLeftOperand() instanceof BitwiseAndExpr
	and target_0.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vctx_change_2757
	and target_0.getRightOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vxhci_2754, BlockStmt target_2, BitwiseAndExpr target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getLeftOperand() |
		obj_0.getTarget().getName()="quirks"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vxhci_2754
	)
	and exists(LogicalAndExpr obj_1 | obj_1=target_1.getParent() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getRightOperand() |
			exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArgument(2) |
				obj_3.getTarget().getName()="in_ctx"
				and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("xhci_command *")
			)
			and obj_2.getTarget().hasName("xhci_reserve_bandwidth")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vxhci_2754
			and obj_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("xhci_virt_device *")
		)
		and obj_1.getParent().(IfStmt).getThen()=target_2
	)
	and target_1.getRightOperand().(BinaryBitwiseOperation).getValue()="256"
}

predicate func_2(Parameter vxhci_2754, BlockStmt target_2) {
	exists(IfStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getCondition() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().getName()="quirks"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vxhci_2754
			)
			and obj_1.getRightOperand().(BinaryBitwiseOperation).getValue()="32"
		)
		and exists(ExprStmt obj_3 | obj_3=obj_0.getThen() |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("xhci_free_host_resources")
				and obj_4.getArgument(0).(VariableAccess).getTarget()=vxhci_2754
				and obj_4.getArgument(1).(VariableAccess).getTarget().getType().hasName("xhci_input_control_ctx *")
			)
		)
	)
}

predicate func_3(Parameter vctx_change_2757, ExprStmt target_4, NotExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vctx_change_2757
	and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Parameter vxhci_2754, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(2) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="in_ctx"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("xhci_command *")
				)
				and obj_2.getTarget().getName()="dma"
			)
			and exists(PointerFieldAccess obj_4 | obj_4=obj_1.getArgument(3) |
				obj_4.getTarget().getName()="slot_id"
				and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("usb_device *")
			)
			and obj_1.getTarget().hasName("xhci_queue_configure_endpoint")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vxhci_2754
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("xhci_command *")
			and obj_1.getArgument(4).(VariableAccess).getTarget().getType().hasName("bool")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

from Function func, Parameter vctx_change_2757, Parameter vxhci_2754, BitwiseAndExpr target_1, BlockStmt target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(vctx_change_2757, vxhci_2754, target_2, target_3)
and func_1(vxhci_2754, target_2, target_1)
and func_2(vxhci_2754, target_2)
and func_3(vctx_change_2757, target_4, target_3)
and func_4(vxhci_2754, target_4)
and vctx_change_2757.getType().hasName("bool")
and vxhci_2754.getType().hasName("xhci_hcd *")
and vctx_change_2757.getFunction() = func
and vxhci_2754.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
