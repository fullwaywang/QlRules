/**
 * @name linux-6513a81e9325d712f1bfb9a1d7b750134e49ff18-CIFSSMBWrite2
 * @id cpp/linux/6513a81e9325d712f1bfb9a1d7b750134e49ff18/cifssmbwrite2
 * @description linux-6513a81e9325d712f1bfb9a1d7b750134e49ff18-fs/cifs/cifssmb.c-CIFSSMBWrite2 CVE-2010-2248
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcount_1533, Parameter vnbytes_1534, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vnbytes_1534
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vcount_1533
		and target_0.getThen().(ExprStmt).getExpr().(AssignAndExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vnbytes_1534
		and target_0.getThen().(ExprStmt).getExpr().(AssignAndExpr).getRValue().(HexLiteral).getValue()="65535"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(4)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_3.getExpr().(AssignAddExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, EqualityOperation target_1) {
		target_1.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getAnOperand().(Literal).getValue()="0"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vcount_1533, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ByteCount"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("smb_com_writex_req *")
		and target_2.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vcount_1533
		and target_2.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(Literal).getValue()="5"
}

predicate func_3(Parameter vnbytes_1534, ExprStmt target_3) {
		target_3.getExpr().(AssignAddExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vnbytes_1534
		and target_3.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="Count"
		and target_3.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("WRITE_RSP *")
}

from Function func, Parameter vcount_1533, Parameter vnbytes_1534, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vcount_1533, vnbytes_1534, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vcount_1533, target_2)
and func_3(vnbytes_1534, target_3)
and vcount_1533.getType().hasName("const unsigned int")
and vnbytes_1534.getType().hasName("unsigned int *")
and vcount_1533.getFunction() = func
and vnbytes_1534.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
