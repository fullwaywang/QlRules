/**
 * @name linux-1033990ac5b2ab6cee93734cb6d301aa3a35bcaa-sctp_sendmsg_to_asoc
 * @id cpp/linux/1033990ac5b2ab6cee93734cb6d301aa3a35bcaa/sctp-sendmsg-to-asoc
 * @description linux-1033990ac5b2ab6cee93734cb6d301aa3a35bcaa-net/sctp/socket.c-sctp_sendmsg_to_asoc CVE-2019-3874
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_1882, BlockStmt target_4, FunctionCall target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("sk_under_memory_pressure")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsk_1882
	and target_0.getParent().(IfStmt).getThen()=target_4
	and target_5.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vsk_1882, RelationalOperation target_3, ExprStmt target_6) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("sk_mem_reclaim")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1882
	and target_1.getParent().(IfStmt).getCondition()=target_3
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable verr_1889, Parameter vmsg_len_1878, Variable vsk_1882, Variable vtimeo_1888, Parameter vasoc_1877, IfStmt target_7, ExprStmt target_8, ExprStmt target_9, ExprStmt target_6, RelationalOperation target_3, FunctionCall target_11, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(LogicalOrExpr).getLeftOperand() instanceof RelationalOperation
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sk_wmem_schedule")
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1882
	and target_2.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmsg_len_1878
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtimeo_1888
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sock_sndtimeo")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1882
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="msg_flags"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getRightOperand().(Literal).getValue()="64"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1889
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sctp_wait_for_sndbuf")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vasoc_1877
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtimeo_1888
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vmsg_len_1878
	and target_2.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=verr_1889
	and target_2.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(GotoStmt).getName() ="err"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_7.getLocation())
	and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_2.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_11.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vasoc_1877, BlockStmt target_4, RelationalOperation target_3) {
	 (target_3 instanceof GEExpr or target_3 instanceof LEExpr)
	and target_3.getLesserOperand().(FunctionCall).getTarget().hasName("sctp_wspace")
	and target_3.getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vasoc_1877
	and target_3.getGreaterOperand().(Literal).getValue()="0"
	and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Variable vsk_1882, Variable vtimeo_1888, BlockStmt target_4) {
	target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtimeo_1888
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sock_sndtimeo")
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1882
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="msg_flags"
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("msghdr *")
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getRightOperand().(Literal).getValue()="64"
}

predicate func_5(Variable vsk_1882, FunctionCall target_5) {
	target_5.getTarget().hasName("sock_net")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vsk_1882
}

predicate func_6(Variable vsk_1882, Variable vtimeo_1888, RelationalOperation target_3, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtimeo_1888
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sock_sndtimeo")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1882
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="msg_flags"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("msghdr *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getRightOperand().(Literal).getValue()="64"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_7(Variable verr_1889, Parameter vasoc_1877, IfStmt target_7) {
	target_7.getCondition().(FunctionCall).getTarget().hasName("__sctp_state")
	and target_7.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vasoc_1877
	and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1889
	and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sctp_primitive_ASSOCIATE")
	and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vasoc_1877
	and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

predicate func_8(Variable verr_1889, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1889
	and target_8.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-90"
}

predicate func_9(Variable verr_1889, Parameter vmsg_len_1878, Variable vtimeo_1888, Parameter vasoc_1877, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1889
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sctp_wait_for_sndbuf")
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vasoc_1877
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtimeo_1888
	and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vmsg_len_1878
}

predicate func_11(Parameter vasoc_1877, FunctionCall target_11) {
	target_11.getTarget().hasName("__sctp_state")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vasoc_1877
}

from Function func, Variable verr_1889, Parameter vmsg_len_1878, Variable vsk_1882, Variable vtimeo_1888, Parameter vasoc_1877, RelationalOperation target_3, BlockStmt target_4, FunctionCall target_5, ExprStmt target_6, IfStmt target_7, ExprStmt target_8, ExprStmt target_9, FunctionCall target_11
where
not func_0(vsk_1882, target_4, target_5)
and not func_1(vsk_1882, target_3, target_6)
and not func_2(verr_1889, vmsg_len_1878, vsk_1882, vtimeo_1888, vasoc_1877, target_7, target_8, target_9, target_6, target_3, target_11, func)
and func_3(vasoc_1877, target_4, target_3)
and func_4(vsk_1882, vtimeo_1888, target_4)
and func_5(vsk_1882, target_5)
and func_6(vsk_1882, vtimeo_1888, target_3, target_6)
and func_7(verr_1889, vasoc_1877, target_7)
and func_8(verr_1889, target_8)
and func_9(verr_1889, vmsg_len_1878, vtimeo_1888, vasoc_1877, target_9)
and func_11(vasoc_1877, target_11)
and verr_1889.getType().hasName("int")
and vmsg_len_1878.getType().hasName("size_t")
and vsk_1882.getType().hasName("sock *")
and vtimeo_1888.getType().hasName("long")
and vasoc_1877.getType().hasName("sctp_association *")
and verr_1889.(LocalVariable).getFunction() = func
and vmsg_len_1878.getFunction() = func
and vsk_1882.(LocalVariable).getFunction() = func
and vtimeo_1888.(LocalVariable).getFunction() = func
and vasoc_1877.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
