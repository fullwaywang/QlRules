/**
 * @name linux-aa838896d87af561a33ecefea1caa4c15a68bc47-runtime_pm_show
 * @id cpp/linux/aa838896d87af561a33ecefea1caa4c15a68bc47/runtime-pm-show
 * @description linux-aa838896d87af561a33ecefea1caa4c15a68bc47-drivers/base/core.c-runtime_pm_show CVE-2022-20166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_285, Variable vlink_287, FunctionCall target_0) {
	target_0.getTarget().hasName("sprintf")
	and not target_0.getTarget().hasName("sysfs_emit")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_285
	and target_0.getArgument(1).(StringLiteral).getValue()="%d\n"
	and target_0.getArgument(2).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getArgument(2).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vlink_287
	and target_0.getArgument(2).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="4"
}

from Function func, Parameter vbuf_285, Variable vlink_287, FunctionCall target_0
where
func_0(vbuf_285, vlink_287, target_0)
and vbuf_285.getType().hasName("char *")
and vlink_287.getType().hasName("device_link *")
and vbuf_285.getFunction() = func
and vlink_287.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
