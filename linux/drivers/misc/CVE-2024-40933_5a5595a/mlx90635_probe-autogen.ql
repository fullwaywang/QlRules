/**
 * @name linux-5a5595ae8cc7cdaa1a10b56a26ddbe3429245c6c-mlx90635_probe
 * @id cpp/linux/5a5595ae8cc7cdaa1a10b56a26ddbe3429245c6c/mlx90635-probe
 * @description linux-5a5595ae8cc7cdaa1a10b56a26ddbe3429245c6c-drivers/iio/temperature/mlx90635.c-mlx90635_probe CVE-2024-40933
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vregmap_936, ReturnStmt target_3, FunctionCall target_4, FunctionCall target_5, VariableAccess target_0) {
	target_0.getTarget()=vregmap_936
	and target_0.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_3
	and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getLocation())
	and target_0.getLocation().isBefore(target_5.getArgument(0).(VariableAccess).getLocation())
}

predicate func_1(Variable vregmap_936, FunctionCall target_6, ExprStmt target_7, VariableAccess target_1) {
	target_1.getTarget()=vregmap_936
	and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_6.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getLocation())
	and target_1.getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
}

predicate func_2(Function func, StringLiteral target_2) {
	target_2.getValue()="failed to allocate regmap\n"
	and not target_2.getValue()="failed to allocate EEPROM regmap\n"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vregmap_936, FunctionCall target_6, ReturnStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="dev"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("i2c_client *")
			)
		)
		and exists(FunctionCall obj_3 | obj_3=obj_0.getArgument(1) |
			obj_3.getTarget().hasName("PTR_ERR")
			and obj_3.getArgument(0).(VariableAccess).getTarget()=vregmap_936
		)
		and obj_0.getTarget().hasName("dev_err_probe")
		and obj_0.getArgument(2) instanceof StringLiteral
	)
	and target_3.getParent().(IfStmt).getCondition()=target_6
}

predicate func_4(Variable vregmap_936, FunctionCall target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getParent() |
		exists(ReturnStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="dev"
						and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("i2c_client *")
					)
				)
				and obj_2.getTarget().hasName("dev_err_probe")
				and obj_2.getArgument(2).(StringLiteral).getValue()="failed to allocate regmap\n"
			)
		)
	)
	and target_4.getTarget().hasName("PTR_ERR")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vregmap_936
}

predicate func_5(Variable vregmap_936, FunctionCall target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getParent() |
		exists(ReturnStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="dev"
						and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("i2c_client *")
					)
				)
				and obj_2.getTarget().hasName("dev_err_probe")
				and obj_2.getArgument(2) instanceof StringLiteral
			)
		)
	)
	and target_5.getTarget().hasName("PTR_ERR")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vregmap_936
}

predicate func_6(Variable vregmap_936, ReturnStmt target_3, FunctionCall target_6) {
	target_6.getTarget().hasName("IS_ERR")
	and target_6.getArgument(0).(VariableAccess).getTarget()=vregmap_936
	and target_6.getParent().(IfStmt).getThen()=target_3
}

predicate func_7(Variable vregmap_936, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="regmap"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("mlx90635_data *")
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vregmap_936
	)
}

from Function func, Variable vregmap_936, VariableAccess target_0, VariableAccess target_1, StringLiteral target_2, ReturnStmt target_3, FunctionCall target_4, FunctionCall target_5, FunctionCall target_6, ExprStmt target_7
where
func_0(vregmap_936, target_3, target_4, target_5, target_0)
and func_1(vregmap_936, target_6, target_7, target_1)
and func_2(func, target_2)
and func_3(vregmap_936, target_6, target_3)
and func_4(vregmap_936, target_4)
and func_5(vregmap_936, target_5)
and func_6(vregmap_936, target_3, target_6)
and func_7(vregmap_936, target_7)
and vregmap_936.getType().hasName("regmap *")
and vregmap_936.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
