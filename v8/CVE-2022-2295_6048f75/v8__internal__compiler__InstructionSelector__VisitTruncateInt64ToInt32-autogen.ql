/**
 * @name v8-6048f754931e0971cab58fb0de785482d175175b-v8__internal__compiler__InstructionSelector__VisitTruncateInt64ToInt32
 * @id cpp/v8/6048f754931e0971cab58fb0de785482d175175b/v8internalcompilerinstructionselectorvisittruncateint64toint32
 * @description v8-6048f754931e0971cab58fb0de785482d175175b-src/compiler/backend/x64/instruction-selector-x64.cc-v8__internal__compiler__InstructionSelector__VisitTruncateInt64ToInt32 CVE-2022-2295
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnode_1815, Variable vvalue_1820, BlockStmt target_1, FunctionCall target_0) {
	target_0.getTarget().hasName("CanCoverTransitively")
	and not target_0.getTarget().hasName("CanCover")
	and target_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_0.getArgument(0).(VariableAccess).getTarget()=vnode_1815
	and target_0.getArgument(1).(VariableAccess).getTarget()=vvalue_1820
	and target_0.getArgument(2).(FunctionCall).getTarget().hasName("InputAt")
	and target_0.getArgument(2).(FunctionCall).getQualifier().(VariableAccess).getTarget()=vvalue_1820
	and target_0.getArgument(2).(FunctionCall).getArgument(0).(Literal).getValue()="0"
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("TryMatchLoadWord64AndShiftRight")
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(ThisExpr).getType() instanceof PointerType
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvalue_1820
	and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Parameter vnode_1815, BlockStmt target_1) {
	target_1.getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("EmitIdentity")
	and target_1.getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_1.getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnode_1815
}

from Function func, Parameter vnode_1815, Variable vvalue_1820, FunctionCall target_0, BlockStmt target_1
where
func_0(vnode_1815, vvalue_1820, target_1, target_0)
and func_1(vnode_1815, target_1)
and vnode_1815.getType().hasName("Node *")
and vvalue_1820.getType().hasName("Node *")
and vnode_1815.getFunction() = func
and vvalue_1820.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
