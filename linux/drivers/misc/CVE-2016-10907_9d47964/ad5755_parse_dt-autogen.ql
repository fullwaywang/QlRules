/**
 * @name linux-9d47964bfd471f0dd4c89f28556aec68bffa0020-ad5755_parse_dt
 * @id cpp/linux/9d47964bfd471f0dd4c89f28556aec68bffa0020/ad5755-parse-dt
 * @description linux-9d47964bfd471f0dd4c89f28556aec68bffa0020-drivers/iio/dac/ad5755.c-ad5755_parse_dt CVE-2016-10907
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdevnr_613, BlockStmt target_4, ExprStmt target_5) {
exists(RelationalOperation target_0 |
	 (target_0 instanceof GEExpr or target_0 instanceof LEExpr)
	and target_0.getGreaterOperand().(VariableAccess).getTarget()=vdevnr_613
	and target_0.getLesserOperand() instanceof Literal
	and target_0.getParent().(IfStmt).getThen()=target_4
	and target_0.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

predicate func_1(Variable vdevnr_613, BlockStmt target_4, VariableAccess target_1) {
	target_1.getTarget()=vdevnr_613
	and target_1.getParent().(GTExpr).getLesserOperand().(Literal).getValue()="4"
	and target_1.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable vdevnr_613, BlockStmt target_4, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getGreaterOperand().(VariableAccess).getTarget()=vdevnr_613
	and target_3.getLesserOperand() instanceof Literal
	and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Function func, BlockStmt target_4) {
	target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_err")
	and target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("device *")
	and target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="There is to many channels defined in DT\n"
	and target_4.getStmt(1).(GotoStmt).getName() ="error_out"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vdevnr_613, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="mode"
	and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="dac"
	and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ad5755_platform_data *")
	and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vdevnr_613
	and target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vdevnr_613, VariableAccess target_1, RelationalOperation target_3, BlockStmt target_4, ExprStmt target_5
where
not func_0(vdevnr_613, target_4, target_5)
and func_1(vdevnr_613, target_4, target_1)
and func_3(vdevnr_613, target_4, target_3)
and func_4(func, target_4)
and func_5(vdevnr_613, target_5)
and vdevnr_613.getType().hasName("int")
and vdevnr_613.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
