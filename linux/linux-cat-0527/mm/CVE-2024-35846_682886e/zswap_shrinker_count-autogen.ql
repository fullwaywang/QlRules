/**
 * @name linux-682886ec69d22363819a83ddddd5d66cb5c791e1-zswap_shrinker_count
 * @id cpp/linux/682886ec69d22363819a83ddddd5d66cb5c791e1/zswap-shrinker-count
 * @description linux-682886ec69d22363819a83ddddd5d66cb5c791e1-mm/zswap.c-zswap_shrinker_count CVE-2024-35846
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnr_backing_1321, Variable vnr_stored_1321, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("mem_cgroup_disabled")
	and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_0.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
	and target_0.getThen().(BlockStmt).getStmt(2) instanceof ExprStmt
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnr_backing_1321
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getType().hasName("u64")
	and target_0.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
	and target_0.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnr_stored_1321
	and target_0.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("atomic_read")
	and target_0.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("atomic_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vmemcg_1319, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("mem_cgroup_flush_stats")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmemcg_1319
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vmemcg_1319, Variable vnr_backing_1321, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnr_backing_1321
	and target_2.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(FunctionCall).getTarget().hasName("memcg_page_state")
	and target_2.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmemcg_1319
	and target_2.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vmemcg_1319, Variable vnr_stored_1321, Function func, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnr_stored_1321
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("memcg_page_state")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmemcg_1319
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

from Function func, Variable vmemcg_1319, Variable vnr_backing_1321, Variable vnr_stored_1321, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vnr_backing_1321, vnr_stored_1321, target_1, func)
and func_1(vmemcg_1319, func, target_1)
and func_2(vmemcg_1319, vnr_backing_1321, func, target_2)
and func_3(vmemcg_1319, vnr_stored_1321, func, target_3)
and vmemcg_1319.getType().hasName("mem_cgroup *")
and vnr_backing_1321.getType().hasName("unsigned long")
and vnr_stored_1321.getType().hasName("unsigned long")
and vmemcg_1319.(LocalVariable).getFunction() = func
and vnr_backing_1321.(LocalVariable).getFunction() = func
and vnr_stored_1321.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
