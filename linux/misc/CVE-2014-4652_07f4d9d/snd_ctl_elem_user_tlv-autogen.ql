/**
 * @name linux-07f4d9d74a04aa7c72c5dae0ef97565f28f17b92-snd_ctl_elem_user_tlv
 * @id cpp/linux/07f4d9d74a04aa7c72c5dae0ef97565f28f17b92/snd-ctl-elem-user-tlv
 * @description linux-07f4d9d74a04aa7c72c5dae0ef97565f28f17b92-sound/core/control.c-snd_ctl_elem_user_tlv CVE-2014-4652
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vue_1058, RelationalOperation target_19, ExprStmt target_21) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_21.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vue_1058, RelationalOperation target_19, ExprStmt target_22) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(9)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
		and target_22.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vue_1058, RelationalOperation target_19, LogicalOrExpr target_11) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_11.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(FunctionCall target_15, Function func) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_3.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(FunctionCall target_15, Function func) {
	exists(GotoStmt target_4 |
		target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_4
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(LogicalOrExpr target_11, Function func) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_5.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_5
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
		and target_5.getEnclosingFunction() = func)
}

predicate func_6(LogicalOrExpr target_11, Function func) {
	exists(GotoStmt target_6 |
		target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_6
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
		and target_6.getEnclosingFunction() = func)
}

predicate func_7(RelationalOperation target_13, Function func) {
	exists(ExprStmt target_7 |
		target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_7.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and target_7.getParent().(IfStmt).getCondition()=target_13
		and target_7.getEnclosingFunction() = func)
}

predicate func_8(Variable vue_1058, RelationalOperation target_19, FunctionCall target_15) {
	exists(ExprStmt target_8 |
		target_8.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_lock"
		and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="card"
		and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_8.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(6)=target_8
		and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
		and target_15.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_9(RelationalOperation target_19, Function func) {
	exists(IfStmt target_9 |
		target_9.getCondition().(VariableAccess).getType().hasName("int")
		and target_9.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(7)=target_9
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
		and target_9.getEnclosingFunction() = func)
}

predicate func_11(Variable vue_1058, ReturnStmt target_23, LogicalOrExpr target_11) {
		target_11.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
		and target_11.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_11.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tlv_data"
		and target_11.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_11.getParent().(IfStmt).getThen()=target_23
}

predicate func_12(Function func, UnaryMinusExpr target_12) {
		target_12.getValue()="-6"
		and target_12.getEnclosingFunction() = func
}

predicate func_13(Parameter vsize_1055, Variable vue_1058, ReturnStmt target_17, RelationalOperation target_13) {
		 (target_13 instanceof GTExpr or target_13 instanceof LTExpr)
		and target_13.getLesserOperand().(VariableAccess).getTarget()=vsize_1055
		and target_13.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
		and target_13.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_13.getParent().(IfStmt).getThen()=target_17
}

predicate func_14(Function func, UnaryMinusExpr target_14) {
		target_14.getValue()="-28"
		and target_14.getEnclosingFunction() = func
}

predicate func_15(Parameter vtlv_1056, Variable vue_1058, ReturnStmt target_18, FunctionCall target_15) {
		target_15.getTarget().hasName("copy_to_user")
		and target_15.getArgument(0).(VariableAccess).getTarget()=vtlv_1056
		and target_15.getArgument(1).(PointerFieldAccess).getTarget().getName()="tlv_data"
		and target_15.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_15.getArgument(2).(PointerFieldAccess).getTarget().getName()="tlv_data_size"
		and target_15.getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_15.getParent().(IfStmt).getThen()=target_18
}

predicate func_16(Function func, UnaryMinusExpr target_16) {
		target_16.getValue()="-14"
		and target_16.getEnclosingFunction() = func
}

predicate func_17(RelationalOperation target_13, Function func, ReturnStmt target_17) {
		target_17.getExpr() instanceof UnaryMinusExpr
		and target_17.getParent().(IfStmt).getCondition()=target_13
		and target_17.getEnclosingFunction() = func
}

predicate func_18(FunctionCall target_15, Function func, ReturnStmt target_18) {
		target_18.getExpr() instanceof UnaryMinusExpr
		and target_18.getParent().(IfStmt).getCondition()=target_15
		and target_18.getEnclosingFunction() = func
}

predicate func_19(Function func, RelationalOperation target_19) {
		 (target_19 instanceof GTExpr or target_19 instanceof LTExpr)
		and target_19.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_19.getLesserOperand().(Literal).getValue()="0"
		and target_19.getEnclosingFunction() = func
}

predicate func_21(Parameter vsize_1055, Variable vue_1058, ExprStmt target_21) {
		target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_21.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
		and target_21.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_21.getExpr().(AssignExpr).getRValue().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vsize_1055
}

predicate func_22(Parameter vsize_1055, Variable vue_1058, ExprStmt target_22) {
		target_22.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="tlv_data_size"
		and target_22.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vue_1058
		and target_22.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vsize_1055
}

predicate func_23(Function func, ReturnStmt target_23) {
		target_23.getExpr() instanceof UnaryMinusExpr
		and target_23.getEnclosingFunction() = func
}

from Function func, Parameter vsize_1055, Parameter vtlv_1056, Variable vue_1058, LogicalOrExpr target_11, UnaryMinusExpr target_12, RelationalOperation target_13, UnaryMinusExpr target_14, FunctionCall target_15, UnaryMinusExpr target_16, ReturnStmt target_17, ReturnStmt target_18, RelationalOperation target_19, ExprStmt target_21, ExprStmt target_22, ReturnStmt target_23
where
not func_0(vue_1058, target_19, target_21)
and not func_1(vue_1058, target_19, target_22)
and not func_2(vue_1058, target_19, target_11)
and not func_3(target_15, func)
and not func_4(target_15, func)
and not func_5(target_11, func)
and not func_6(target_11, func)
and not func_7(target_13, func)
and not func_8(vue_1058, target_19, target_15)
and not func_9(target_19, func)
and func_11(vue_1058, target_23, target_11)
and func_12(func, target_12)
and func_13(vsize_1055, vue_1058, target_17, target_13)
and func_14(func, target_14)
and func_15(vtlv_1056, vue_1058, target_18, target_15)
and func_16(func, target_16)
and func_17(target_13, func, target_17)
and func_18(target_15, func, target_18)
and func_19(func, target_19)
and func_21(vsize_1055, vue_1058, target_21)
and func_22(vsize_1055, vue_1058, target_22)
and func_23(func, target_23)
and vsize_1055.getType().hasName("unsigned int")
and vtlv_1056.getType().hasName("unsigned int *")
and vue_1058.getType().hasName("user_element *")
and vsize_1055.getFunction() = func
and vtlv_1056.getFunction() = func
and vue_1058.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
