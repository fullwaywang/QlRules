/**
 * @name linux-56cd26b618855c9af48c8301aa6754ced8dd0beb-serial_ir_init_module
 * @id cpp/linux/56cd26b618855c9af48c8301aa6754ced8dd0beb/serial-ir-init-module
 * @description linux-56cd26b618855c9af48c8301aa6754ced8dd0beb-drivers/media/rc/serial_ir.c-serial_ir_init_module CVE-2019-19543
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vresult_776, FunctionCall target_0) {
	target_0.getTarget().hasName("serial_ir_init")
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_776
}

predicate func_1(Function func, DeclStmt target_1) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vresult_776, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_776
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vresult_776, Function func, IfStmt target_3) {
	target_3.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vresult_776
	and target_3.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("serial_ir_exit")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vresult_776, Function func, ReturnStmt target_6) {
	target_6.getExpr().(VariableAccess).getTarget()=vresult_776
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

from Function func, Variable vresult_776, FunctionCall target_0, DeclStmt target_1, ExprStmt target_2, IfStmt target_3, ExprStmt target_5, ReturnStmt target_6
where
func_0(vresult_776, target_0)
and func_1(func, target_1)
and func_2(vresult_776, func, target_2)
and func_3(vresult_776, func, target_3)
and func_5(func, target_5)
and func_6(vresult_776, func, target_6)
and vresult_776.getType().hasName("int")
and vresult_776.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
