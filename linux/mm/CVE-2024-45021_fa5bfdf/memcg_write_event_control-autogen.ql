/**
 * @name linux-fa5bfdf6cb5846a00e712d630a43e3cf55ccb411-memcg_write_event_control
 * @id cpp/linux/fa5bfdf6cb5846a00e712d630a43e3cf55ccb411/memcg-write-event-control
 * @description linux-fa5bfdf6cb5846a00e712d630a43e3cf55ccb411-mm/memcontrol.c-memcg_write_event_control CVE-2024-45021
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ReturnStmt target_5, Function func) {
exists(EqualityOperation target_0 |
	target_0.getLeftOperand() instanceof PointerDereferenceExpr
	and target_0.getRightOperand() instanceof CharLiteral
	and target_0.getParent().(IfStmt).getThen()=target_5
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Parameter vbuf_4121, Variable vendp_4132, LogicalAndExpr target_9, ExprStmt target_10, AddressOfExpr target_11) {
exists(ExprStmt target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vbuf_4121
		and obj_0.getRValue().(VariableAccess).getTarget()=vendp_4132
	)
	and target_1.getParent().(IfStmt).getCondition()=target_9
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_11.getOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
)
}

predicate func_2(LogicalAndExpr target_9, Function func) {
exists(IfStmt target_2 |
	exists(EqualityOperation obj_0 | obj_0=target_2.getCondition() |
		obj_0.getLeftOperand() instanceof PointerDereferenceExpr
		and obj_0.getRightOperand() instanceof CharLiteral
	)
	and target_2.getThen() instanceof ExprStmt
	and target_2.getElse() instanceof ReturnStmt
	and target_2.getParent().(IfStmt).getCondition()=target_9
	and target_2.getEnclosingFunction() = func
)
}

predicate func_3(Variable vendp_4132, PointerDereferenceExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vendp_4132
}

predicate func_4(Variable vendp_4132, PointerDereferenceExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vendp_4132
}

predicate func_5(LogicalAndExpr target_9, Function func, ReturnStmt target_5) {
	target_5.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_5.getParent().(IfStmt).getCondition()=target_9
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Parameter vbuf_4121, Variable vendp_4132, Function func, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(PointerArithmeticOperation obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vendp_4132
			and obj_1.getRightOperand().(Literal).getValue()="1"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vbuf_4121
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_9(ReturnStmt target_5, Function func, LogicalAndExpr target_9) {
	exists(EqualityOperation obj_0 | obj_0=target_9.getLeftOperand() |
		obj_0.getLeftOperand() instanceof PointerDereferenceExpr
		and obj_0.getRightOperand() instanceof CharLiteral
	)
	and exists(EqualityOperation obj_1 | obj_1=target_9.getRightOperand() |
		obj_1.getLeftOperand() instanceof PointerDereferenceExpr
		and obj_1.getRightOperand() instanceof CharLiteral
	)
	and target_9.getParent().(IfStmt).getThen()=target_5
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Parameter vbuf_4121, Variable vendp_4132, ExprStmt target_10) {
	exists(AssignExpr obj_0 | obj_0=target_10.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("simple_strtoul")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vbuf_4121
			and obj_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vendp_4132
			and obj_1.getArgument(2).(Literal).getValue()="10"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
	)
}

predicate func_11(Parameter vbuf_4121, Variable vendp_4132, AddressOfExpr target_11) {
	exists(FunctionCall obj_0 | obj_0=target_11.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("simple_strtoul")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vbuf_4121
				and obj_2.getArgument(2).(Literal).getValue()="10"
			)
		)
	)
	and target_11.getOperand().(VariableAccess).getTarget()=vendp_4132
}

from Function func, Parameter vbuf_4121, Variable vendp_4132, PointerDereferenceExpr target_3, PointerDereferenceExpr target_4, ReturnStmt target_5, ExprStmt target_6, LogicalAndExpr target_9, ExprStmt target_10, AddressOfExpr target_11
where
not func_0(target_5, func)
and not func_1(vbuf_4121, vendp_4132, target_9, target_10, target_11)
and not func_2(target_9, func)
and func_3(vendp_4132, target_3)
and func_4(vendp_4132, target_4)
and func_5(target_9, func, target_5)
and func_6(vbuf_4121, vendp_4132, func, target_6)
and func_9(target_5, func, target_9)
and func_10(vbuf_4121, vendp_4132, target_10)
and func_11(vbuf_4121, vendp_4132, target_11)
and vbuf_4121.getType().hasName("char *")
and vendp_4132.getType().hasName("char *")
and vbuf_4121.getFunction() = func
and vendp_4132.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
