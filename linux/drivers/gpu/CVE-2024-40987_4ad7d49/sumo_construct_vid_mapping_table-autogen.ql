/**
 * @name linux-4ad7d49059358ceadd352b4e2511425bdb68f400-sumo_construct_vid_mapping_table
 * @id cpp/linux/4ad7d49059358ceadd352b4e2511425bdb68f400/sumo-construct-vid-mapping-table
 * @description linux-4ad7d49059358ceadd352b4e2511425bdb68f400-drivers/gpu/drm/amd/amdgpu/kv_dpm.c-sumo_construct_vid_mapping_table CVE-2024-40987
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtable_161, Variable vi_163, EqualityOperation target_1, ExprStmt target_2) {
exists(IfStmt target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getGreaterOperand() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getArrayBase().(VariableAccess).getTarget()=vtable_161
				and obj_2.getArrayOffset().(VariableAccess).getTarget()=vi_163
			)
			and obj_1.getTarget().getName()="usVoltageIndex"
		)
		and obj_0.getLesserOperand().(Literal).getValue()="4"
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_4.getCondition()=target_1
		)
	)
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vtable_161, Variable vi_163, EqualityOperation target_1) {
	exists(ValueFieldAccess obj_0 | obj_0=target_1.getLeftOperand() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getArrayBase().(VariableAccess).getTarget()=vtable_161
			and obj_1.getArrayOffset().(VariableAccess).getTarget()=vi_163
		)
		and obj_0.getTarget().getName()="ulSupportedSCLK"
	)
	and target_1.getRightOperand().(Literal).getValue()="0"
}

predicate func_2(Parameter vtable_161, Variable vi_163, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					obj_3.getTarget().getName()="entries"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("sumo_vid_mapping_table *")
				)
				and exists(ValueFieldAccess obj_4 | obj_4=obj_2.getArrayOffset() |
					exists(ArrayExpr obj_5 | obj_5=obj_4.getQualifier() |
						obj_5.getArrayBase().(VariableAccess).getTarget()=vtable_161
						and obj_5.getArrayOffset().(VariableAccess).getTarget()=vi_163
					)
					and obj_4.getTarget().getName()="usVoltageIndex"
				)
			)
			and obj_1.getTarget().getName()="vid_7bit"
		)
		and exists(ValueFieldAccess obj_6 | obj_6=obj_0.getRValue() |
			exists(ArrayExpr obj_7 | obj_7=obj_6.getQualifier() |
				obj_7.getArrayBase().(VariableAccess).getTarget()=vtable_161
				and obj_7.getArrayOffset().(VariableAccess).getTarget()=vi_163
			)
			and obj_6.getTarget().getName()="usVoltageID"
		)
	)
}

from Function func, Parameter vtable_161, Variable vi_163, EqualityOperation target_1, ExprStmt target_2
where
not func_0(vtable_161, vi_163, target_1, target_2)
and func_1(vtable_161, vi_163, target_1)
and func_2(vtable_161, vi_163, target_2)
and vtable_161.getType().hasName("ATOM_AVAILABLE_SCLK_LIST *")
and vi_163.getType().hasName("u32")
and vtable_161.getFunction() = func
and vi_163.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
