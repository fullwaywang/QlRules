/**
 * @name linux-2555283eb40df89945557273121e9393ef9b542b-anon_vma_clone
 * @id cpp/linux/2555283eb40df89945557273121e9393ef9b542b/anon-vma-clone
 * @description linux-2555283eb40df89945557273121e9393ef9b542b-anon_vma_clone CVE-2022-42703
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vanon_vma_284, LogicalAndExpr target_9, ExprStmt target_10) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="num_children"
		and target_0.getQualifier().(VariableAccess).getTarget()=vanon_vma_284
		and target_9.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation())
		and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdst_278, Parameter vsrc_278, Variable vanon_vma_284, ExprStmt target_10, ExprStmt target_11) {
	exists(EqualityOperation target_1 |
		target_1.getAnOperand().(PointerFieldAccess).getTarget().getName()="num_active_vmas"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vanon_vma_284
		and target_1.getAnOperand().(Literal).getValue()="0"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_278
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsrc_278
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof EqualityOperation
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="degree"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vanon_vma_284
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="2"
		and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_10
		and target_11.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vdst_278, IfStmt target_12, ExprStmt target_13) {
	exists(PostfixIncrExpr target_2 |
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="num_active_vmas"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_278
		and target_12.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vdst_278, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="anon_vma"
		and target_3.getQualifier().(VariableAccess).getTarget()=vdst_278
}

predicate func_4(Variable vanon_vma_284, VariableAccess target_4) {
		target_4.getTarget()=vanon_vma_284
}

predicate func_5(Variable vanon_vma_284, VariableAccess target_5) {
		target_5.getTarget()=vanon_vma_284
}

predicate func_6(Parameter vsrc_278, Variable vanon_vma_284, EqualityOperation target_6) {
		target_6.getAnOperand().(VariableAccess).getTarget()=vanon_vma_284
		and target_6.getAnOperand().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsrc_278
}

predicate func_7(Variable vanon_vma_284, PointerFieldAccess target_7) {
		target_7.getTarget().getName()="degree"
		and target_7.getQualifier().(VariableAccess).getTarget()=vanon_vma_284
}

predicate func_8(Parameter vdst_278, PostfixIncrExpr target_8) {
		target_8.getOperand().(PointerFieldAccess).getTarget().getName()="degree"
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_278
}

predicate func_9(Parameter vdst_278, Parameter vsrc_278, Variable vanon_vma_284, LogicalAndExpr target_9) {
		target_9.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_9.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_278
		and target_9.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_9.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsrc_278
		and target_9.getAnOperand().(LogicalAndExpr).getAnOperand() instanceof EqualityOperation
		and target_9.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="degree"
		and target_9.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vanon_vma_284
		and target_9.getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="2"
}

predicate func_10(Parameter vdst_278, Variable vanon_vma_284, ExprStmt target_10) {
		target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_278
		and target_10.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vanon_vma_284
}

predicate func_11(Parameter vdst_278, Variable vanon_vma_284, ExprStmt target_11) {
		target_11.getExpr().(FunctionCall).getTarget().hasName("anon_vma_chain_link")
		and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdst_278
		and target_11.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("anon_vma_chain *")
		and target_11.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vanon_vma_284
}

predicate func_12(Parameter vdst_278, IfStmt target_12) {
		target_12.getCondition().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_12.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_278
		and target_12.getThen().(ExprStmt).getExpr() instanceof PostfixIncrExpr
}

predicate func_13(Parameter vdst_278, ExprStmt target_13) {
		target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="anon_vma"
		and target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_278
		and target_13.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Parameter vdst_278, Parameter vsrc_278, Variable vanon_vma_284, PointerFieldAccess target_3, VariableAccess target_4, VariableAccess target_5, EqualityOperation target_6, PointerFieldAccess target_7, PostfixIncrExpr target_8, LogicalAndExpr target_9, ExprStmt target_10, ExprStmt target_11, IfStmt target_12, ExprStmt target_13
where
not func_0(vanon_vma_284, target_9, target_10)
and not func_1(vdst_278, vsrc_278, vanon_vma_284, target_10, target_11)
and not func_2(vdst_278, target_12, target_13)
and func_3(vdst_278, target_3)
and func_4(vanon_vma_284, target_4)
and func_5(vanon_vma_284, target_5)
and func_6(vsrc_278, vanon_vma_284, target_6)
and func_7(vanon_vma_284, target_7)
and func_8(vdst_278, target_8)
and func_9(vdst_278, vsrc_278, vanon_vma_284, target_9)
and func_10(vdst_278, vanon_vma_284, target_10)
and func_11(vdst_278, vanon_vma_284, target_11)
and func_12(vdst_278, target_12)
and func_13(vdst_278, target_13)
and vdst_278.getType().hasName("vm_area_struct *")
and vsrc_278.getType().hasName("vm_area_struct *")
and vanon_vma_284.getType().hasName("anon_vma *")
and vdst_278.getFunction() = func
and vsrc_278.getFunction() = func
and vanon_vma_284.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
