/**
 * @name linux-7c9cbd0b5e38a1672fcd137894ace3b042dfbf69-l2cap_parse_conf_rsp
 * @id cpp/linux/7c9cbd0b5e38a1672fcd137894ace3b042dfbf69/l2cap-parse-conf-rsp
 * @description linux-7c9cbd0b5e38a1672fcd137894ace3b042dfbf69-net/bluetooth/l2cap_core.c-l2cap_parse_conf_rsp CVE-2019-3459
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vlen_3543, ExprStmt target_1) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_3543
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_1.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vlen_3543, ExprStmt target_1) {
		target_1.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vlen_3543
		and target_1.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getTarget().hasName("l2cap_get_conf_opt")
		and target_1.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("void *")
		and target_1.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
}

from Function func, Parameter vlen_3543, ExprStmt target_1
where
not func_0(vlen_3543, target_1)
and func_1(vlen_3543, target_1)
and vlen_3543.getType().hasName("int")
and vlen_3543.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
