/**
 * @name linux-073931017b49d9458aa351605b43a7e34598caef-jffs2_set_acl
 * @id cpp/linux/073931017b49d9458aa351605b43a7e34598caef/jffs2-set-acl
 * @description linux-073931017b49d9458aa351605b43a7e34598caef-fs/jffs2/acl.c-jffs2_set_acl CVE-2016-7097
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vacl_228, Variable vrc_230, Variable vmode_236, FunctionCall target_0) {
	target_0.getTarget().hasName("posix_acl_equiv_mode")
	and not target_0.getTarget().hasName("posix_acl_update_mode")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vacl_228
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmode_236
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_230
}

predicate func_1(Parameter vacl_228, ConditionalExpr target_8) {
exists(AddressOfExpr target_1 |
	target_1.getOperand().(VariableAccess).getTarget()=vacl_228
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_8.getCondition().(VariableAccess).getLocation()))
}

predicate func_2(Variable vrc_230, ReturnStmt target_9, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vrc_230
	and target_2.getGreaterOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_9
}

predicate func_3(Parameter vinode_228, VariableAccess target_3) {
	target_3.getTarget()=vinode_228
}

predicate func_4(Variable vrc_230, ExprStmt target_10, VariableAccess target_4) {
	target_4.getTarget()=vrc_230
	and target_4.getParent().(EQExpr).getRightOperand() instanceof Literal
	and target_4.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_10
}

predicate func_5(Parameter vacl_228, VariableAccess target_5) {
	target_5.getTarget()=vacl_228
	and target_5.getParent().(AssignExpr).getLValue() = target_5
	and target_5.getParent().(AssignExpr).getRValue() instanceof Literal
}

predicate func_6(Parameter vinode_228, Initializer target_6) {
	target_6.getExpr().(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_6.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_228
}

predicate func_7(Parameter vacl_228, Variable vrc_230, VariableAccess target_11, IfStmt target_7) {
	target_7.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vrc_230
	and target_7.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_7.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vacl_228
	and target_7.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

predicate func_8(Parameter vacl_228, ConditionalExpr target_8) {
	target_8.getCondition().(VariableAccess).getTarget()=vacl_228
	and target_8.getThen().(UnaryMinusExpr).getValue()="-13"
	and target_8.getElse().(Literal).getValue()="0"
}

predicate func_9(Variable vrc_230, RelationalOperation target_2, ReturnStmt target_9) {
	target_9.getExpr().(VariableAccess).getTarget()=vrc_230
	and target_9.getParent().(IfStmt).getCondition()=target_2
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr() instanceof AssignExpr
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Parameter vacl_228, BlockStmt target_12, VariableAccess target_11) {
	target_11.getTarget()=vacl_228
	and target_11.getParent().(IfStmt).getThen()=target_12
}

predicate func_12(Parameter vinode_228, Variable vrc_230, Variable vmode_236, BlockStmt target_12) {
	target_12.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_230
	and target_12.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_12.getStmt(2).(IfStmt).getCondition() instanceof RelationalOperation
	and target_12.getStmt(2).(IfStmt).getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=vrc_230
	and target_12.getStmt(3).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_12.getStmt(3).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_228
	and target_12.getStmt(3).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vmode_236
	and target_12.getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ia_valid"
	and target_12.getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("iattr")
	and target_12.getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getValue()="65"
	and target_12.getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ia_mode"
	and target_12.getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("iattr")
	and target_12.getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vmode_236
}

from Function func, Parameter vinode_228, Parameter vacl_228, Variable vrc_230, Variable vmode_236, FunctionCall target_0, RelationalOperation target_2, VariableAccess target_3, VariableAccess target_4, VariableAccess target_5, Initializer target_6, IfStmt target_7, ConditionalExpr target_8, ReturnStmt target_9, ExprStmt target_10, VariableAccess target_11, BlockStmt target_12
where
func_0(vacl_228, vrc_230, vmode_236, target_0)
and not func_1(vacl_228, target_8)
and func_2(vrc_230, target_9, target_2)
and func_3(vinode_228, target_3)
and func_4(vrc_230, target_10, target_4)
and func_5(vacl_228, target_5)
and func_6(vinode_228, target_6)
and func_7(vacl_228, vrc_230, target_11, target_7)
and func_8(vacl_228, target_8)
and func_9(vrc_230, target_2, target_9)
and func_10(func, target_10)
and func_11(vacl_228, target_12, target_11)
and func_12(vinode_228, vrc_230, vmode_236, target_12)
and vinode_228.getType().hasName("inode *")
and vacl_228.getType().hasName("posix_acl *")
and vrc_230.getType().hasName("int")
and vmode_236.getType().hasName("umode_t")
and vinode_228.getFunction() = func
and vacl_228.getFunction() = func
and vrc_230.(LocalVariable).getFunction() = func
and vmode_236.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
