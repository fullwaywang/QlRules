/**
 * @name linux-b27d47950e481f292c0a5ad57357edb9d95d03ba-xennet_init_queue
 * @id cpp/linux/b27d47950e481f292c0a5ad57357edb9d95d03ba/xennet-init-queue
 * @description linux-b27d47950e481f292c0a5ad57357edb9d95d03ba-drivers/net/xen-netfront.c-xennet_init_queue CVE-2021-28712
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(DoStmt target_1, Function func) {
exists(DoStmt target_0 |
	target_0.getCondition().(Literal).getValue()="0"
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__raw_spin_lock_init")
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rx_cons_lock"
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="&queue->rx_cons_lock"
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, DoStmt target_1) {
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("init_timer_key")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rx_refill_timer"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("netfront_queue *")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(StringLiteral).getValue()="(&queue->rx_refill_timer)"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("lock_class_key")
	and target_1.getEnclosingFunction() = func
}

from Function func, DoStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
