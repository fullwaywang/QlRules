/**
 * @name linux-5ec7d18d1813a5bead0b495045606c93873aecbb-sctp_sock_dump
 * @id cpp/linux/5ec7d18d1813a5bead0b495045606c93873aecbb/sctp-sock-dump
 * @description linux-5ec7d18d1813a5bead0b495045606c93873aecbb-net/sctp/diag.c-sctp_sock_dump CVE-2022-20154
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vep_295, Parameter vtsp_293, ExprStmt target_3, ValueFieldAccess target_4, PointerFieldAccess target_5, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vep_295
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="ep"
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="asoc"
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtsp_293
	and target_0.getThen().(GotoStmt).getName() ="release"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation())
	and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_5.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vtsp_293, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="ep"
	and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="asoc"
	and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtsp_293
}

predicate func_2(Function func, DeclStmt target_2) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vep_295, ValueFieldAccess target_4) {
	target_4.getTarget().getName()="sk"
	and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="base"
	and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vep_295
}

predicate func_5(Variable vep_295, PointerFieldAccess target_5) {
	target_5.getTarget().getName()="next"
	and target_5.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="asocs"
	and target_5.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vep_295
}

from Function func, Variable vep_295, Parameter vtsp_293, PointerFieldAccess target_1, DeclStmt target_2, ExprStmt target_3, ValueFieldAccess target_4, PointerFieldAccess target_5
where
not func_0(vep_295, vtsp_293, target_3, target_4, target_5, func)
and func_1(vtsp_293, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vep_295, target_4)
and func_5(vep_295, target_5)
and vep_295.getType().hasName("sctp_endpoint *")
and vtsp_293.getType().hasName("sctp_transport *")
and vep_295.(LocalVariable).getFunction() = func
and vtsp_293.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
