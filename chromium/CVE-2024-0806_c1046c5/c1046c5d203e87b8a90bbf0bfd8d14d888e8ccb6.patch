commit c1046c5d203e87b8a90bbf0bfd8d14d888e8ccb6	c1046c5d203e87b8a90bbf0bfd8d14d888e8ccb6
Author: Viktor Semeniuk <vsemeniuk@google.com>
Date:   Mon Dec 4 10:20:30 2023 +0000

    Cancel authentication when PasswordsPrivateDelegate is destroyed
    
    This CL prevents retaining scoped_ptr when triggering authentication.
    When the tab containing PasswordsPrivateDelegate is closed, any ongoing
    authentication is automatically canceled.
    
    Fixed: 1505176
    Change-Id: I66c85e2a08ff0559a288173fc528405723643e88
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5070036
    Reviewed-by: Mohamed Amir Yosef <mamir@chromium.org>
    Commit-Queue: Viktor Semeniuk <vsemeniuk@google.com>
    Cr-Commit-Position: refs/heads/main@{#1232623}

diff --git a/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.cc b/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.cc
index 89b234865825f..cba5afda0542c 100644
--- a/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.cc
+++ b/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.cc
@@ -324,6 +324,10 @@ PasswordsPrivateDelegateImpl::PasswordsPrivateDelegateImpl(Profile* profile)
 PasswordsPrivateDelegateImpl::~PasswordsPrivateDelegateImpl() {
   saved_passwords_presenter_.RemoveObserver(this);
   install_manager_observation_.Reset();
+  if (device_authenticator_) {
+    device_authenticator_->Cancel();
+  }
+  device_authenticator_.reset();
 }
 
 #if BUILDFLAG(IS_MAC) || BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS)
@@ -1063,11 +1067,10 @@ void PasswordsPrivateDelegateImpl::OnSyncShutdown(syncer::SyncService* sync) {
   sync_service_observation_.Reset();
 }
 
-bool PasswordsPrivateDelegateImpl::OnReauthCompleted(bool authenticated) {
+void PasswordsPrivateDelegateImpl::OnReauthCompleted(bool authenticated) {
   device_authenticator_.reset();
 
   auth_timeout_handler_.OnUserReauthenticationResult(authenticated);
-  return authenticated;
 }
 
 void PasswordsPrivateDelegateImpl::ExecuteFunction(base::OnceClosure callback) {
@@ -1148,11 +1151,19 @@ void PasswordsPrivateDelegateImpl::AuthenticateUser(
   device_authenticator_ =
       GetDeviceAuthenticator(web_contents, auth_validity_period);
 
-  AuthResultIntermediateCallback on_reauth_completed =
-      base::BindOnce(&PasswordsPrivateDelegateImpl::OnReauthCompleted, this);
+  AuthResultCallback on_reauth_completed =
+      base::BindOnce(&PasswordsPrivateDelegateImpl::OnReauthCompleted,
+                     weak_ptr_factory_.GetWeakPtr());
+
+  auto pass_through = base::BindOnce(
+      [](AuthResultCallback callback, bool auth_result) {
+        std::move(callback).Run(auth_result);
+        return auth_result;
+      },
+      std::move(callback));
 
   device_authenticator_->AuthenticateWithMessage(
-      message, std::move(on_reauth_completed).Then(std::move(callback)));
+      message, std::move(pass_through).Then(std::move(on_reauth_completed)));
 #endif
 }
 
diff --git a/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.h b/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.h
index ee302a722a866..58724555f2eed 100644
--- a/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.h
+++ b/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl.h
@@ -60,7 +60,6 @@ class PasswordsPrivateDelegateImpl
       public web_app::WebAppInstallManagerObserver {
  public:
   using AuthResultCallback = base::OnceCallback<void(bool)>;
-  using AuthResultIntermediateCallback = base::OnceCallback<bool(bool)>;
 
   explicit PasswordsPrivateDelegateImpl(Profile* profile);
 
@@ -245,7 +244,7 @@ class PasswordsPrivateDelegateImpl
       api::passwords_private::PlaintextReason reason);
 
   // Callback for biometric authentication after authentication check.
-  bool OnReauthCompleted(bool authenticated);
+  void OnReauthCompleted(bool authenticated);
 
   // Invokes PasswordsPrivateEventRouter::OnPasswordManagerAuthTimeout().
   void OsReauthTimeoutCall();
diff --git a/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl_unittest.cc b/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl_unittest.cc
index 14b583e7982f0..fc0b043c82253 100644
--- a/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl_unittest.cc
+++ b/chrome/browser/extensions/api/passwords_private/passwords_private_delegate_impl_unittest.cc
@@ -1821,6 +1821,31 @@ TEST_F(PasswordsPrivateDelegateImplMockTaskEnvironmentTest,
   std::move(auth_result_callback).Run(true);
 }
 
+TEST_F(PasswordsPrivateDelegateImplMockTaskEnvironmentTest,
+       DestroyingDelegateWhileExportOngoing) {
+  content::WebContents* web_contents_ptr =
+      web_contents_factory().CreateWebContents(profile());
+  auto delegate = CreateDelegate();
+
+  auto biometric_authenticator =
+      std::make_unique<device_reauth::MockDeviceAuthenticator>();
+  auto* biometric_authenticator_ptr = biometric_authenticator.get();
+
+  device_reauth::DeviceAuthenticator::AuthenticateCallback auth_result_callback;
+
+  delegate->SetDeviceAuthenticatorForTesting(
+      std::move(biometric_authenticator));
+
+  EXPECT_CALL(*biometric_authenticator_ptr, AuthenticateWithMessage);
+  base::MockCallback<base::OnceCallback<void(const std::string&)>> callback;
+  delegate->ExportPasswords(callback.Get(), web_contents_ptr);
+
+  // Simulate destroying delegate while authentication is still ongoing. It
+  // should trigger cancelation of ongoing authentication.
+  EXPECT_CALL(*biometric_authenticator_ptr, Cancel);
+  delegate.reset();
+}
+
 #endif
 
 class PasswordsPrivateDelegateImplFetchFamilyMembersTest
