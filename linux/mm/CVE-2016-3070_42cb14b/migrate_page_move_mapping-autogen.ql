/**
 * @name linux-42cb14b110a5698ccf26ce59c4441722605a3743-migrate_page_move_mapping
 * @id cpp/linux/42cb14b110a5698ccf26ce59c4441722605a3743/migrate-page-move-mapping
 * @description linux-42cb14b110a5698ccf26ce59c4441722605a3743-mm/migrate.c-migrate_page_move_mapping CVE-2016-3070
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmapping_311, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_unlock_irq")
	and not target_0.getTarget().hasName("spin_unlock")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tree_lock"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmapping_311
}

predicate func_1(Parameter vpage_312, FunctionCall target_1) {
	target_1.getTarget().hasName("__dec_zone_page_state")
	and not target_1.getTarget().hasName("ClearPageDirty")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_1.getArgument(1) instanceof EnumConstantAccess
}

predicate func_2(Parameter vnewpage_312, FunctionCall target_2) {
	target_2.getTarget().hasName("__inc_zone_page_state")
	and not target_2.getTarget().hasName("SetPageDirty")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vnewpage_312
	and target_2.getArgument(1) instanceof EnumConstantAccess
}

predicate func_3(Parameter vpage_312, FunctionCall target_3) {
	target_3.getTarget().hasName("__dec_zone_page_state")
	and not target_3.getTarget().hasName("__dec_zone_state")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_3.getArgument(1) instanceof EnumConstantAccess
}

predicate func_4(Parameter vnewpage_312, FunctionCall target_4) {
	target_4.getTarget().hasName("__inc_zone_page_state")
	and not target_4.getTarget().hasName("__inc_zone_state")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vnewpage_312
	and target_4.getArgument(1) instanceof EnumConstantAccess
}

predicate func_5(ExprStmt target_25, Function func, ExprStmt target_5) {
	target_5.getExpr() instanceof FunctionCall
	and target_25.getLocation().isBefore(target_5.getLocation())
	and target_5.getEnclosingFunction() = func
}

predicate func_6(ExprStmt target_25, Function func, ExprStmt target_6) {
	target_6.getExpr() instanceof FunctionCall
	and target_25.getLocation().isBefore(target_6.getLocation())
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Parameter vpage_312, ExprStmt target_26, IfStmt target_7) {
	target_7.getCondition().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageSwapCache")
	and target_7.getCondition().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_7.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("PageSwapBacked")
	and target_7.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_7.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
	and target_7.getLocation().isBefore(target_26.getLocation())
}

predicate func_8(Parameter vpage_312, LogicalAndExpr target_27) {
exists(AssignExpr target_8 |
	target_8.getLValue().(VariableAccess).getType().hasName("zone *")
	and target_8.getRValue().(FunctionCall).getTarget().hasName("page_zone")
	and target_8.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_8.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_27.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_9(Parameter vnewpage_312) {
exists(AssignExpr target_9 |
	target_9.getLValue().(VariableAccess).getType().hasName("zone *")
	and target_9.getRValue().(FunctionCall).getTarget().hasName("page_zone")
	and target_9.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewpage_312)
}

predicate func_10(Parameter vpage_312, ExprStmt target_26, Function func) {
exists(ExprStmt target_10 |
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PageDirty")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
	and target_10.getLocation().isBefore(target_26.getLocation()))
}

predicate func_13(Parameter vmapping_311, Parameter vpage_312, AddressOfExpr target_29, LogicalAndExpr target_27, Function func) {
exists(IfStmt target_13 |
	target_13.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("zone *")
	and target_13.getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getType().hasName("zone *")
	and target_13.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dec_zone_state")
	and target_13.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("zone *")
	and target_13.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof EnumConstantAccess
	and target_13.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__inc_zone_state")
	and target_13.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("zone *")
	and target_13.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof EnumConstantAccess
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("PageSwapBacked")
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageSwapCache")
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dec_zone_state")
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("zone *")
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof EnumConstantAccess
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__inc_zone_state")
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("zone *")
	and target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof EnumConstantAccess
	and target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getType().hasName("int")
	and target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("mapping_cap_account_dirty")
	and target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmapping_311
	and target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dec_zone_state")
	and target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("zone *")
	and target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__inc_zone_state")
	and target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("zone *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
	and target_13.getFollowingStmt() instanceof ReturnStmt
	and target_29.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_13.getThen().(BlockStmt).getStmt(3).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_27.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_13.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_16(Function func) {
exists(DoStmt target_16 |
	target_16.getCondition().(Literal).getValue()="0"
	and target_16.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("trace_hardirqs_on")
	and target_16.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("arch_local_irq_enable")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_16
	and target_16.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_17(Parameter vpage_312, VariableAccess target_17) {
	target_17.getTarget()=vpage_312
	and target_17.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_19(Parameter vnewpage_312, VariableAccess target_19) {
	target_19.getTarget()=vnewpage_312
	and target_19.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_21(Parameter vpage_312, VariableAccess target_21) {
	target_21.getTarget()=vpage_312
	and target_21.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_23(Parameter vnewpage_312, VariableAccess target_23) {
	target_23.getTarget()=vnewpage_312
	and target_23.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_25(Parameter vpage_312, ExprStmt target_25) {
	target_25.getExpr().(FunctionCall).getTarget().hasName("page_unfreeze_refs")
	and target_25.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_25.getExpr().(FunctionCall).getArgument(1).(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_25.getExpr().(FunctionCall).getArgument(1).(SubExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_26(Function func, ExprStmt target_26) {
	target_26.getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_26
}

predicate func_27(Parameter vpage_312, LogicalAndExpr target_27) {
	target_27.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageSwapCache")
	and target_27.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
	and target_27.getRightOperand().(FunctionCall).getTarget().hasName("PageSwapBacked")
	and target_27.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_312
}

predicate func_29(Parameter vmapping_311, AddressOfExpr target_29) {
	target_29.getOperand().(PointerFieldAccess).getTarget().getName()="tree_lock"
	and target_29.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmapping_311
	and target_29.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

from Function func, Parameter vmapping_311, Parameter vnewpage_312, Parameter vpage_312, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, FunctionCall target_3, FunctionCall target_4, ExprStmt target_5, ExprStmt target_6, IfStmt target_7, VariableAccess target_17, VariableAccess target_19, VariableAccess target_21, VariableAccess target_23, ExprStmt target_25, ExprStmt target_26, LogicalAndExpr target_27, AddressOfExpr target_29
where
func_0(vmapping_311, target_0)
and func_1(vpage_312, target_1)
and func_2(vnewpage_312, target_2)
and func_3(vpage_312, target_3)
and func_4(vnewpage_312, target_4)
and func_5(target_25, func, target_5)
and func_6(target_25, func, target_6)
and func_7(vpage_312, target_26, target_7)
and not func_8(vpage_312, target_27)
and not func_9(vnewpage_312)
and not func_10(vpage_312, target_26, func)
and not func_13(vmapping_311, vpage_312, target_29, target_27, func)
and not func_16(func)
and func_17(vpage_312, target_17)
and func_19(vnewpage_312, target_19)
and func_21(vpage_312, target_21)
and func_23(vnewpage_312, target_23)
and func_25(vpage_312, target_25)
and func_26(func, target_26)
and func_27(vpage_312, target_27)
and func_29(vmapping_311, target_29)
and vmapping_311.getType().hasName("address_space *")
and vnewpage_312.getType().hasName("page *")
and vpage_312.getType().hasName("page *")
and vmapping_311.getFunction() = func
and vnewpage_312.getFunction() = func
and vpage_312.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
