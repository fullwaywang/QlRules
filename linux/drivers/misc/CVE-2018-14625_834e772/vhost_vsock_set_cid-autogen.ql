/**
 * @name linux-834e772c8db0c6a275d75315d90aba4ebbb1e249-vhost_vsock_set_cid
 * @id cpp/linux/834e772c8db0c6a275d75315d90aba4ebbb1e249/vhost-vsock-set-cid
 * @description linux-834e772c8db0c6a275d75315d90aba4ebbb1e249-drivers/vhost/vsock.c-vhost_vsock_set_cid CVE-2018-14625
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vguest_cid_616, FunctionCall target_0) {
	target_0.getTarget().hasName("__vhost_vsock_get")
	and not target_0.getTarget().hasName("vhost_vsock_get")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vguest_cid_616
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("vhost_vsock *")
}

predicate func_1(Parameter vvsock_616, ExprStmt target_3, LogicalAndExpr target_4, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(PointerFieldAccess).getTarget().getName()="guest_cid"
	and target_1.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvsock_616
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("hash_del_rcu")
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="hash"
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvsock_616
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_4.getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getLocation().isBefore(target_1.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vvsock_616, Parameter vguest_cid_616, ExprStmt target_5, ExprStmt target_3, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("hlist_add_head_rcu")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="hash"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvsock_616
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getType().hasName("hlist_head[256]")
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ConditionalExpr).getCondition().(RelationalOperation).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("hash_32_generic")
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vguest_cid_616
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("hash_64_generic")
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vguest_cid_616
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_5.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vvsock_616, Parameter vguest_cid_616, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="guest_cid"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvsock_616
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vguest_cid_616
}

predicate func_4(Parameter vvsock_616, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("vhost_vsock *")
	and target_4.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("vhost_vsock *")
	and target_4.getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vvsock_616
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_bh")
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("spinlock_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

from Function func, Parameter vvsock_616, Parameter vguest_cid_616, FunctionCall target_0, ExprStmt target_3, LogicalAndExpr target_4, ExprStmt target_5
where
func_0(vguest_cid_616, target_0)
and not func_1(vvsock_616, target_3, target_4, func)
and not func_2(vvsock_616, vguest_cid_616, target_5, target_3, func)
and func_3(vvsock_616, vguest_cid_616, target_3)
and func_4(vvsock_616, target_4)
and func_5(func, target_5)
and vvsock_616.getType().hasName("vhost_vsock *")
and vguest_cid_616.getType().hasName("u64")
and vvsock_616.getFunction() = func
and vguest_cid_616.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
