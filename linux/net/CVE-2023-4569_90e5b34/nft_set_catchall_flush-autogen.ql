/**
 * @name linux-90e5b3462efa37b8bba82d7c4e63683856e188af-nft_set_catchall_flush
 * @id cpp/linux/90e5b3462efa37b8bba82d7c4e63683856e188af/nft-set-catchall-flush
 * @description linux-90e5b3462efa37b8bba82d7c4e63683856e188af-net/netfilter/nf_tables_api.c-nft_set_catchall_flush CVE-2023-4569
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vset_7077, Variable vext_7082, Parameter vctx_7076, ExprStmt target_1, NotExpr target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("nft_set_elem_change_active")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="net"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_7076
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vset_7077
	and target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vext_7082
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vset_7077, Parameter vctx_7076, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__nft_set_catchall_flush")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctx_7076
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vset_7077
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("nft_set_elem")
}

predicate func_2(Variable vext_7082, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("nft_set_elem_active")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vext_7082
	and target_2.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u8")
}

from Function func, Parameter vset_7077, Variable vext_7082, Parameter vctx_7076, ExprStmt target_1, NotExpr target_2
where
not func_0(vset_7077, vext_7082, vctx_7076, target_1, target_2)
and func_1(vset_7077, vctx_7076, target_1)
and func_2(vext_7082, target_2)
and vset_7077.getType().hasName("nft_set *")
and vext_7082.getType().hasName("nft_set_ext *")
and vctx_7076.getType().hasName("const nft_ctx *")
and vset_7077.getFunction() = func
and vext_7082.(LocalVariable).getFunction() = func
and vctx_7076.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
