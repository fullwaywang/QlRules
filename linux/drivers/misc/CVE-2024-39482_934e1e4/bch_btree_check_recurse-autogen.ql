/**
 * @name linux-934e1e4331859183a861f396d7dfaf33cb5afb02-bch_btree_check_recurse
 * @id cpp/linux/934e1e4331859183a861f396d7dfaf33cb5afb02/bch-btree-check-recurse
 * @description linux-934e1e4331859183a861f396d7dfaf33cb5afb02-drivers/md/bcache/btree.c-bch_btree_check_recurse CVE-2024-39482
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vb_1884, Variable viter_1888, FunctionCall target_1) {
	exists(AddressOfExpr obj_0 | obj_0=target_1.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="keys"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vb_1884
		)
	)
	and target_1.getTarget().hasName("bch_btree_iter_init")
	and not target_1.getTarget().hasName("bch_btree_iter_stack_init")
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_1888
	and target_1.getArgument(2).(Literal).getValue()="0"
}

predicate func_2(Parameter vb_1884, Variable viter_1888, FunctionCall target_2) {
	exists(AddressOfExpr obj_0 | obj_0=target_2.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="keys"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vb_1884
		)
	)
	and target_2.getTarget().hasName("bch_btree_iter_init")
	and not target_2.getTarget().hasName("bch_btree_iter_stack_init")
	and target_2.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_1888
	and target_2.getArgument(2).(Literal).getValue()="0"
}

predicate func_3(Function func) {
exists(PointerFieldAccess target_3 |
	target_3.getTarget().getName()="iter"
	and target_3.getQualifier() instanceof AddressOfExpr
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(Parameter vb_1884, Variable viter_1888, AddressOfExpr target_7, AddressOfExpr target_8) {
exists(AddressOfExpr target_4 |
	exists(ValueFieldAccess obj_0 | obj_0=target_4.getOperand() |
		obj_0.getTarget().getName()="iter"
		and obj_0.getQualifier().(VariableAccess).getTarget()=viter_1888
	)
	and exists(FunctionCall obj_1 | obj_1=target_4.getParent() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(1) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
						obj_5.getTarget().getName()="keys"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vb_1884
					)
				)
				and obj_3.getTarget().hasName("bch_btree_iter_next_filter")
				and obj_3.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_1888
			)
		)
	)
	and target_7.getOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getOperand().(VariableAccess).getLocation())
)
}

predicate func_5(Parameter vb_1884, Variable viter_1888, AddressOfExpr target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(1) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="keys"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vb_1884
					)
				)
				and obj_2.getTarget().hasName("bch_btree_iter_next_filter")
			)
		)
	)
	and target_5.getOperand().(VariableAccess).getTarget()=viter_1888
}

predicate func_6(Parameter vb_1884, Variable viter_1888, AddressOfExpr target_9, ExprStmt target_10, VariableAccess target_6) {
	exists(AddressOfExpr obj_0 | obj_0=target_6.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getParent() |
			exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
					exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(1) |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
							obj_5.getTarget().getName()="keys"
							and obj_5.getQualifier().(VariableAccess).getTarget()=vb_1884
						)
					)
					and obj_3.getTarget().hasName("bch_btree_iter_next_filter")
				)
			)
		)
	)
	and target_6.getTarget()=viter_1888
	and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_6.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_7(Variable viter_1888, AddressOfExpr target_7) {
	target_7.getOperand().(VariableAccess).getTarget()=viter_1888
	and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Variable viter_1888, AddressOfExpr target_8) {
	target_8.getOperand().(VariableAccess).getTarget()=viter_1888
}

predicate func_9(Parameter vb_1884, AddressOfExpr target_9) {
	exists(PointerFieldAccess obj_0 | obj_0=target_9.getOperand() |
		obj_0.getTarget().getName()="keys"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vb_1884
	)
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_10(Parameter vb_1884, ExprStmt target_10) {
	exists(FunctionCall obj_0 | obj_0=target_10.getExpr() |
		obj_0.getTarget().hasName("btree_node_prefetch")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vb_1884
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("bkey *")
	)
}

from Function func, Parameter vb_1884, Variable viter_1888, FunctionCall target_1, FunctionCall target_2, AddressOfExpr target_5, VariableAccess target_6, AddressOfExpr target_7, AddressOfExpr target_8, AddressOfExpr target_9, ExprStmt target_10
where
func_1(vb_1884, viter_1888, target_1)
and func_2(vb_1884, viter_1888, target_2)
and not func_3(func)
and not func_4(vb_1884, viter_1888, target_7, target_8)
and func_5(vb_1884, viter_1888, target_5)
and func_6(vb_1884, viter_1888, target_9, target_10, target_6)
and func_7(viter_1888, target_7)
and func_8(viter_1888, target_8)
and func_9(vb_1884, target_9)
and func_10(vb_1884, target_10)
and vb_1884.getType().hasName("btree *")
and viter_1888.getType().hasName("btree_iter")
and vb_1884.getFunction() = func
and viter_1888.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
