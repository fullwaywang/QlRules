/**
 * @name curl-364f174724ef115-pop3_state_capa_resp
 * @id cpp/curl/364f174724ef115/pop3-state-capa-resp
 * @description curl-364f174724ef115-lib/pop3.c-pop3_state_capa_resp CVE-2021-22946
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpop3code_681, BlockStmt target_13, EqualityOperation target_4) {
	exists(EqualityOperation target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vpop3code_681
		and target_0.getAnOperand().(CharLiteral).getValue()="43"
		and target_0.getParent().(IfStmt).getThen()=target_13
		and target_4.getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(ExprStmt target_14, Function func) {
	exists(LogicalOrExpr target_1 |
		target_1.getAnOperand().(NotExpr).getOperand() instanceof ValueFieldAccess
		and target_1.getAnOperand() instanceof ValueFieldAccess
		and target_1.getParent().(IfStmt).getThen()=target_14
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(ExprStmt target_15, Function func) {
	exists(RelationalOperation target_2 |
		 (target_2 instanceof GEExpr or target_2 instanceof LEExpr)
		and target_2.getLesserOperand() instanceof ValueFieldAccess
		and target_2.getGreaterOperand() instanceof EnumConstantAccess
		and target_2.getParent().(IfStmt).getThen()=target_15
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Parameter vdata_681, ValueFieldAccess target_3) {
		target_3.getTarget().getName()="use_ssl"
		and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="set"
		and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_681
}

predicate func_4(Parameter vpop3code_681, BlockStmt target_16, EqualityOperation target_4) {
		target_4.getAnOperand().(VariableAccess).getTarget()=vpop3code_681
		and target_4.getAnOperand().(CharLiteral).getValue()="43"
		and target_4.getParent().(IfStmt).getThen()=target_16
}

predicate func_5(Parameter vdata_681, ValueFieldAccess target_5) {
		target_5.getTarget().getName()="use_ssl"
		and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="set"
		and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_681
}

predicate func_6(Variable vconn_685, ValueFieldAccess target_6) {
		target_6.getTarget().getName()="use"
		and target_6.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="ssl"
		and target_6.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_685
		and target_6.getQualifier().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
}

predicate func_7(Variable vpop3c_686, ExprStmt target_14, PointerFieldAccess target_7) {
		target_7.getTarget().getName()="tls_supported"
		and target_7.getQualifier().(VariableAccess).getTarget()=vpop3c_686
		and target_7.getParent().(IfStmt).getThen()=target_14
}

predicate func_8(Variable vresult_684, Variable vconn_685, Parameter vdata_681, LogicalAndExpr target_17, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_684
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pop3_perform_authentication")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_681
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vconn_685
		and target_8.getParent().(IfStmt).getCondition()=target_17
}

predicate func_9(Variable vpop3c_686, EqualityOperation target_4, ExprStmt target_9) {
		target_9.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="authtypes"
		and target_9.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpop3c_686
		and target_9.getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="1"
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_11(ExprStmt target_15, Function func, EqualityOperation target_11) {
		target_11.getAnOperand() instanceof ValueFieldAccess
		and target_11.getAnOperand() instanceof EnumConstantAccess
		and target_11.getParent().(IfStmt).getThen()=target_15
		and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vresult_684, Variable vconn_685, Parameter vdata_681, EqualityOperation target_4, ExprStmt target_8, ReturnStmt target_18, ExprStmt target_12) {
		target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_684
		and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pop3_perform_authentication")
		and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_681
		and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vconn_685
		and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
		and target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_18.getExpr().(VariableAccess).getLocation())
}

predicate func_13(Variable vresult_684, Variable vconn_685, Variable vpop3c_686, Parameter vdata_681, BlockStmt target_13) {
		target_13.getStmt(0).(IfStmt).getCondition().(PointerFieldAccess).getTarget().getName()="tls_supported"
		and target_13.getStmt(0).(IfStmt).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpop3c_686
		and target_13.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_684
		and target_13.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pop3_perform_starttls")
		and target_13.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_681
		and target_13.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vconn_685
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getCondition() instanceof EqualityOperation
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_684
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pop3_perform_authentication")
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_681
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vconn_685
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("Curl_failf")
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_681
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="STLS not supported."
		and target_13.getStmt(0).(IfStmt).getElse().(IfStmt).getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_684
}

predicate func_14(Variable vresult_684, Variable vconn_685, Parameter vdata_681, ExprStmt target_14) {
		target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_684
		and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pop3_perform_starttls")
		and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_681
		and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vconn_685
}

predicate func_15(Variable vresult_684, Variable vconn_685, Parameter vdata_681, ExprStmt target_15) {
		target_15.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_684
		and target_15.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pop3_perform_authentication")
		and target_15.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_681
		and target_15.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vconn_685
}

predicate func_16(BlockStmt target_16) {
		target_16.getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand() instanceof ValueFieldAccess
		and target_16.getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand() instanceof ValueFieldAccess
		and target_16.getStmt(0).(IfStmt).getThen() instanceof BlockStmt
		and target_16.getStmt(0).(IfStmt).getElse() instanceof ExprStmt
}

predicate func_17(LogicalAndExpr target_17) {
		target_17.getAnOperand() instanceof ValueFieldAccess
		and target_17.getAnOperand().(NotExpr).getOperand() instanceof ValueFieldAccess
}

predicate func_18(Variable vresult_684, ReturnStmt target_18) {
		target_18.getExpr().(VariableAccess).getTarget()=vresult_684
}

from Function func, Parameter vpop3code_681, Variable vresult_684, Variable vconn_685, Variable vpop3c_686, Parameter vdata_681, ValueFieldAccess target_3, EqualityOperation target_4, ValueFieldAccess target_5, ValueFieldAccess target_6, PointerFieldAccess target_7, ExprStmt target_8, ExprStmt target_9, EqualityOperation target_11, ExprStmt target_12, BlockStmt target_13, ExprStmt target_14, ExprStmt target_15, BlockStmt target_16, LogicalAndExpr target_17, ReturnStmt target_18
where
not func_0(vpop3code_681, target_13, target_4)
and not func_1(target_14, func)
and not func_2(target_15, func)
and func_3(vdata_681, target_3)
and func_4(vpop3code_681, target_16, target_4)
and func_5(vdata_681, target_5)
and func_6(vconn_685, target_6)
and func_7(vpop3c_686, target_14, target_7)
and func_8(vresult_684, vconn_685, vdata_681, target_17, target_8)
and func_9(vpop3c_686, target_4, target_9)
and func_11(target_15, func, target_11)
and func_12(vresult_684, vconn_685, vdata_681, target_4, target_8, target_18, target_12)
and func_13(vresult_684, vconn_685, vpop3c_686, vdata_681, target_13)
and func_14(vresult_684, vconn_685, vdata_681, target_14)
and func_15(vresult_684, vconn_685, vdata_681, target_15)
and func_16(target_16)
and func_17(target_17)
and func_18(vresult_684, target_18)
and vpop3code_681.getType().hasName("int")
and vresult_684.getType().hasName("CURLcode")
and vconn_685.getType().hasName("connectdata *")
and vpop3c_686.getType().hasName("pop3_conn *")
and vdata_681.getType().hasName("Curl_easy *")
and vpop3code_681.getFunction() = func
and vresult_684.(LocalVariable).getFunction() = func
and vconn_685.(LocalVariable).getFunction() = func
and vpop3c_686.(LocalVariable).getFunction() = func
and vdata_681.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
