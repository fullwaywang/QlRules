/**
 * @name linux-0bb88f3f7e8d506f3efe46d694964117e20efbfc-vsock_stream_connect
 * @id cpp/linux/0bb88f3f7e8d506f3efe46d694964117e20efbfc/vsock-stream-connect
 * @description linux-0bb88f3f7e8d506f3efe46d694964117e20efbfc-net/vmw_vsock/af_vsock.c-vsock_stream_connect CVE-2022-48786
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvsk_1125, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("vsock_remove_connected")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvsk_1125
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(4)=target_0
			and obj_2.getCondition()=target_1
		)
	)
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("signal_pending")
	and target_1.getArgument(0).(FunctionCall).getTarget().hasName("get_current")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vvsk_1125, FunctionCall target_1, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("vsock_transport_cancel_pkt")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvsk_1125
	)
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_3(Variable vvsk_1125, EqualityOperation target_4, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("vsock_transport_cancel_pkt")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvsk_1125
	)
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_4(Function func, EqualityOperation target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("long")
	and target_4.getRightOperand().(Literal).getValue()="0"
	and target_4.getEnclosingFunction() = func
}

from Function func, Variable vvsk_1125, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3, EqualityOperation target_4
where
not func_0(vvsk_1125, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vvsk_1125, target_1, target_2)
and func_3(vvsk_1125, target_4, target_3)
and func_4(func, target_4)
and vvsk_1125.getType().hasName("vsock_sock *")
and vvsk_1125.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
