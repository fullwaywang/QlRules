/**
 * @name linux-7a5f01828edf152c144d27cf63de446fdf2dc222-stop_kthread
 * @id cpp/linux/7a5f01828edf152c144d27cf63de446fdf2dc222/stop-kthread
 * @description linux-7a5f01828edf152c144d27cf63de446fdf2dc222-kernel/trace/trace_osnoise.c-stop_kthread CVE-2024-46788
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcpu_1944, BlockStmt target_4, ExprStmt target_5, ExprStmt target_6) {
exists(LogicalAndExpr target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getLeftOperand() |
		obj_0.getTarget().hasName("cpumask_test_and_clear_cpu")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcpu_1944
		and obj_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("cpumask")
	)
	and exists(NotExpr obj_1 | obj_1=target_0.getRightOperand() |
		exists(StmtExpr obj_2 | obj_2=obj_1.getOperand() |
			exists(BlockStmt obj_3 | obj_3=obj_2.getStmt() |
				exists(IfStmt obj_4 | obj_4=obj_3.getStmt(1) |
					exists(FunctionCall obj_5 | obj_5=obj_4.getCondition() |
						obj_5.getTarget().hasName("__builtin_expect")
						and obj_5.getArgument(1) instanceof Literal
					)
					and obj_4.getThen().(DoStmt).getCondition() instanceof Literal
				)
				and exists(ExprStmt obj_6 | obj_6=obj_3.getStmt(2) |
					exists(FunctionCall obj_7 | obj_7=obj_6.getExpr() |
						obj_7.getTarget().hasName("__builtin_expect")
						and obj_7.getArgument(1) instanceof Literal
					)
				)
			)
		)
	)
	and target_0.getParent().(IfStmt).getThen()=target_4
	and target_5.getExpr().(AddExpr).getRightOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AddExpr).getRightOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation())
)
}

predicate func_1(ConditionalExpr target_2, Function func) {
exists(IfStmt target_1 |
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(StmtExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(IfStmt obj_3 | obj_3=obj_2.getStmt(1) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getCondition() |
						obj_4.getTarget().hasName("__builtin_expect")
						and obj_4.getArgument(1) instanceof Literal
					)
					and obj_3.getThen().(DoStmt).getCondition() instanceof Literal
				)
				and exists(ExprStmt obj_5 | obj_5=obj_2.getStmt(2) |
					exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
						obj_6.getTarget().hasName("__builtin_expect")
						and obj_6.getArgument(1) instanceof Literal
					)
				)
			)
		)
	)
	and target_1.getThen() instanceof BlockStmt
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Variable vosnoise_options, BlockStmt target_4, ConditionalExpr target_2) {
	exists(LogicalAndExpr obj_0 | obj_0=target_2.getCondition() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRightOperand() |
					obj_3.getTarget().hasName("__builtin_constant_p")
					and obj_3.getArgument(0).(EqualityOperation).getRightOperand().(Literal).getValue()="0"
				)
				and obj_2.getLeftOperand().(Literal).getValue()="1"
			)
			and exists(EqualityOperation obj_4 | obj_4=obj_1.getRightOperand() |
				obj_4.getLeftOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vosnoise_options
				and obj_4.getRightOperand().(Literal).getValue()="0"
			)
		)
		and exists(FunctionCall obj_5 | obj_5=obj_0.getRightOperand() |
			obj_5.getTarget().hasName("__builtin_constant_p")
			and obj_5.getArgument(0).(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vosnoise_options
		)
	)
	and exists(FunctionCall obj_6 | obj_6=target_2.getThen() |
		obj_6.getTarget().hasName("const_test_bit")
		and obj_6.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vosnoise_options
	)
	and exists(FunctionCall obj_7 | obj_7=target_2.getElse() |
		obj_7.getTarget().hasName("_test_bit")
		and obj_7.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vosnoise_options
	)
	and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable vkthread_1946, ConditionalExpr target_2, BlockStmt target_3) {
	exists(ExprStmt obj_0 | obj_0=target_3.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="thread_pid"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vkthread_1946
			)
			and obj_1.getTarget().hasName("kill_pid")
			and obj_1.getArgument(1).(Literal).getValue()="9"
			and obj_1.getArgument(2).(Literal).getValue()="1"
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_3.getStmt(1) |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			obj_4.getTarget().hasName("put_task_struct")
			and obj_4.getArgument(0).(VariableAccess).getTarget()=vkthread_1946
		)
	)
	and target_3.getParent().(IfStmt).getCondition()=target_2
}

predicate func_4(Variable vkthread_1946, BlockStmt target_4) {
	exists(ExprStmt obj_0 | obj_0=target_4.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("kthread_stop")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vkthread_1946
		)
	)
}

predicate func_5(Parameter vcpu_1944, ExprStmt target_5) {
	exists(AddExpr obj_0 | obj_0=target_5.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getRightOperand() |
			obj_1.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
			and obj_1.getArrayOffset().(VariableAccess).getTarget()=vcpu_1944
		)
		and obj_0.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	)
}

predicate func_6(Parameter vcpu_1944, ExprStmt target_6) {
	exists(AddExpr obj_0 | obj_0=target_6.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getRightOperand() |
			obj_1.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
			and obj_1.getArrayOffset().(VariableAccess).getTarget()=vcpu_1944
		)
		and obj_0.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	)
}

from Function func, Parameter vcpu_1944, Variable vkthread_1946, Variable vosnoise_options, ConditionalExpr target_2, BlockStmt target_3, BlockStmt target_4, ExprStmt target_5, ExprStmt target_6
where
not func_0(vcpu_1944, target_4, target_5, target_6)
and not func_1(target_2, func)
and func_2(vosnoise_options, target_4, target_2)
and func_3(vkthread_1946, target_2, target_3)
and func_4(vkthread_1946, target_4)
and func_5(vcpu_1944, target_5)
and func_6(vcpu_1944, target_6)
and vcpu_1944.getType().hasName("unsigned int")
and vkthread_1946.getType().hasName("task_struct *")
and vosnoise_options.getType().hasName("unsigned long")
and vcpu_1944.getFunction() = func
and vkthread_1946.(LocalVariable).getFunction() = func
and not vosnoise_options.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
