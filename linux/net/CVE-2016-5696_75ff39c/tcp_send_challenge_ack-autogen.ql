/**
 * @name linux-75ff39ccc1bd5d3c455b6822ab09e533c551f758-tcp_send_challenge_ack
 * @id cpp/linux/75ff39ccc1bd5d3c455b6822ab09e533c551f758/tcp-send-challenge-ack
 * @description linux-75ff39ccc1bd5d3c455b6822ab09e533c551f758-net/ipv4/tcp_input.c-tcp_send_challenge_ack CVE-2016-5696
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vchallenge_count_3459) {
exists(StmtExpr target_1 |
	target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__write_once_size")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vchallenge_count_3459
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="4"
	and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>"))
}

/*predicate func_2(Variable vchallenge_count_3459, RelationalOperation target_14) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("__write_once_size")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vchallenge_count_3459
	and target_2.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_2.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and target_2.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="4"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14)
}

*/
/*predicate func_3(RelationalOperation target_14, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and target_3.getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_3.getEnclosingFunction() = func)
}

*/
predicate func_4(IfStmt target_15, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("u32")
	and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(Literal).getValue()="1"
	and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__read_once_size")
	and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getElse().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__read_once_size_nocheck")
	and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and target_4.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_15.getLocation()))
}

predicate func_5(BlockStmt target_16, Function func) {
exists(RelationalOperation target_5 |
	 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
	and target_5.getGreaterOperand().(VariableAccess).getType().hasName("u32")
	and target_5.getLesserOperand() instanceof Literal
	and target_5.getParent().(IfStmt).getThen()=target_16
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Variable vchallenge_count_3459, RelationalOperation target_14) {
exists(ExprStmt target_6 |
	target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__write_once_size")
	and target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vchallenge_count_3459
	and target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="4"
	and target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and target_6.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("union <unnamed>")
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_6
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14)
}

predicate func_7(Parameter vsk_3455, RelationalOperation target_14, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("tcp_send_ack")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_3455
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
}

predicate func_8(Variable v__vpp_verify_3476, RelationalOperation target_14, DoStmt target_8) {
	target_8.getCondition().(Literal).getValue()="0"
	and target_8.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_8.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__vpp_verify_3476
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getExpr().(SizeofExprOperator).getValue()="8"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="1"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(3).(SwitchCase).getExpr().(Literal).getValue()="2"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(4).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(6).(SwitchCase).getExpr().(Literal).getValue()="4"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(7).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(9).(SwitchCase).getExpr().(Literal).getValue()="8"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(10).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(12).(SwitchCase).toString() = "default: "
	and target_8.getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(13).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__bad_size_call_parameter")
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
}

predicate func_9(Variable vchallenge_count_3459, VariableAccess target_9) {
	target_9.getTarget()=vchallenge_count_3459
}

predicate func_10(Variable vchallenge_count_3459, VariableAccess target_10) {
	target_10.getTarget()=vchallenge_count_3459
	and target_10.getParent().(AssignExpr).getLValue() = target_10
	and target_10.getParent().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_12(Variable vsysctl_tcp_challenge_ack_limit, BlockStmt target_16, VariableAccess target_12) {
	target_12.getTarget()=vsysctl_tcp_challenge_ack_limit
	and target_12.getParent().(LEExpr).getLesserOperand() instanceof PrefixIncrExpr
	and target_12.getParent().(LEExpr).getParent().(IfStmt).getThen()=target_16
}

predicate func_13(Variable vchallenge_count_3459, AssignExpr target_13) {
	target_13.getLValue().(VariableAccess).getTarget()=vchallenge_count_3459
	and target_13.getRValue() instanceof Literal
}

predicate func_14(Variable vchallenge_count_3459, Variable vsysctl_tcp_challenge_ack_limit, BlockStmt target_16, RelationalOperation target_14) {
	 (target_14 instanceof GEExpr or target_14 instanceof LEExpr)
	and target_14.getLesserOperand().(PrefixIncrExpr).getOperand().(VariableAccess).getTarget()=vchallenge_count_3459
	and target_14.getGreaterOperand().(VariableAccess).getTarget()=vsysctl_tcp_challenge_ack_limit
	and target_14.getParent().(IfStmt).getThen()=target_16
}

predicate func_15(Function func, IfStmt target_15) {
	target_15.getCondition() instanceof RelationalOperation
	and target_15.getThen().(BlockStmt).getStmt(0) instanceof DoStmt
	and target_15.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Function func, BlockStmt target_16) {
	target_16.getStmt(0) instanceof DoStmt
	and target_16.getStmt(1) instanceof ExprStmt
	and target_16.getEnclosingFunction() = func
}

from Function func, Parameter vsk_3455, Variable vchallenge_count_3459, Variable vsysctl_tcp_challenge_ack_limit, Variable v__vpp_verify_3476, ExprStmt target_7, DoStmt target_8, VariableAccess target_9, VariableAccess target_10, VariableAccess target_12, AssignExpr target_13, RelationalOperation target_14, IfStmt target_15, BlockStmt target_16
where
not func_1(vchallenge_count_3459)
and not func_4(target_15, func)
and not func_5(target_16, func)
and not func_6(vchallenge_count_3459, target_14)
and func_7(vsk_3455, target_14, target_7)
and func_8(v__vpp_verify_3476, target_14, target_8)
and func_9(vchallenge_count_3459, target_9)
and func_10(vchallenge_count_3459, target_10)
and func_12(vsysctl_tcp_challenge_ack_limit, target_16, target_12)
and func_13(vchallenge_count_3459, target_13)
and func_14(vchallenge_count_3459, vsysctl_tcp_challenge_ack_limit, target_16, target_14)
and func_15(func, target_15)
and func_16(func, target_16)
and vsk_3455.getType().hasName("sock *")
and vchallenge_count_3459.getType().hasName("unsigned int")
and vsysctl_tcp_challenge_ack_limit.getType().hasName("int")
and v__vpp_verify_3476.getType().hasName("const void *")
and vsk_3455.getFunction() = func
and vchallenge_count_3459.(LocalVariable).getFunction() = func
and not vsysctl_tcp_challenge_ack_limit.getParentScope+() = func
and v__vpp_verify_3476.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
