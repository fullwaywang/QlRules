/**
 * @name linux-de9f869616dd95e95c00bdd6b0fcd3421e8a4323-insn_get_code_seg_params
 * @id cpp/linux/de9f869616dd95e95c00bdd6b0fcd3421e8a4323/insn-get-code-seg-params
 * @description linux-de9f869616dd95e95c00bdd6b0fcd3421e8a4323-arch/x86/lib/insn-eval.c-insn_get_code_seg_params CVE-2019-13233
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vdesc_744, IfStmt target_12, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdesc_744
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="8"
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_12.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vdesc_744, Variable vsel_745, ReturnStmt target_13, ExprStmt target_7, NotExpr target_14) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("get_desc")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdesc_744
	and target_2.getArgument(1).(VariableAccess).getTarget()=vsel_745
	and target_2.getParent().(NotExpr).getOperand().(VariableAccess).getTarget()=vdesc_744
	and target_2.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_13
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_14.getOperand().(VariableAccess).getLocation()))
}

predicate func_3(Variable vdesc_744, NotExpr target_14, NotExpr target_15) {
exists(ValueFieldAccess target_3 |
	target_3.getTarget().getName()="type"
	and target_3.getQualifier().(VariableAccess).getTarget()=vdesc_744
	and target_14.getOperand().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
	and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_15.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vdesc_744, NotExpr target_15, BitwiseOrExpr target_16) {
exists(ValueFieldAccess target_4 |
	target_4.getTarget().getName()="l"
	and target_4.getQualifier().(VariableAccess).getTarget()=vdesc_744
	and target_15.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(VariableAccess).getLocation())
	and target_4.getQualifier().(VariableAccess).getLocation().isBefore(target_16.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Variable vdesc_744, BitwiseOrExpr target_16) {
exists(ValueFieldAccess target_5 |
	target_5.getTarget().getName()="d"
	and target_5.getQualifier().(VariableAccess).getTarget()=vdesc_744
	and target_16.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getQualifier().(VariableAccess).getLocation()))
}

predicate func_6(Variable vsel_745, VariableAccess target_6) {
	target_6.getTarget()=vsel_745
	and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_7(Variable vdesc_744, Variable vsel_745, Function func, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdesc_744
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_desc")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsel_745
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vdesc_744, ReturnStmt target_13, VariableAccess target_8) {
	target_8.getTarget()=vdesc_744
	and target_8.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_13
}

predicate func_9(Variable vdesc_744, PointerFieldAccess target_9) {
	target_9.getTarget().getName()="type"
	and target_9.getQualifier().(VariableAccess).getTarget()=vdesc_744
}

predicate func_10(Variable vdesc_744, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="l"
	and target_10.getQualifier().(VariableAccess).getTarget()=vdesc_744
}

predicate func_11(Variable vdesc_744, PointerFieldAccess target_11) {
	target_11.getTarget().getName()="d"
	and target_11.getQualifier().(VariableAccess).getTarget()=vdesc_744
}

predicate func_12(Variable vdesc_744, IfStmt target_12) {
	target_12.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vdesc_744
	and target_12.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
}

predicate func_13(NotExpr target_14, Function func, ReturnStmt target_13) {
	target_13.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_13.getParent().(IfStmt).getCondition()=target_14
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vdesc_744, NotExpr target_14) {
	target_14.getOperand().(VariableAccess).getTarget()=vdesc_744
}

predicate func_15(Variable vdesc_744, NotExpr target_15) {
	target_15.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_15.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdesc_744
	and target_15.getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="8"
}

predicate func_16(Variable vdesc_744, BitwiseOrExpr target_16) {
	target_16.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="l"
	and target_16.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdesc_744
	and target_16.getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="1"
	and target_16.getRightOperand().(PointerFieldAccess).getTarget().getName()="d"
	and target_16.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdesc_744
}

from Function func, Variable vdesc_744, Variable vsel_745, IfStmt target_1, VariableAccess target_6, ExprStmt target_7, VariableAccess target_8, PointerFieldAccess target_9, PointerFieldAccess target_10, PointerFieldAccess target_11, IfStmt target_12, ReturnStmt target_13, NotExpr target_14, NotExpr target_15, BitwiseOrExpr target_16
where
func_1(vdesc_744, target_12, target_1)
and not func_2(vdesc_744, vsel_745, target_13, target_7, target_14)
and not func_3(vdesc_744, target_14, target_15)
and not func_4(vdesc_744, target_15, target_16)
and not func_5(vdesc_744, target_16)
and func_6(vsel_745, target_6)
and func_7(vdesc_744, vsel_745, func, target_7)
and func_8(vdesc_744, target_13, target_8)
and func_9(vdesc_744, target_9)
and func_10(vdesc_744, target_10)
and func_11(vdesc_744, target_11)
and func_12(vdesc_744, target_12)
and func_13(target_14, func, target_13)
and func_14(vdesc_744, target_14)
and func_15(vdesc_744, target_15)
and func_16(vdesc_744, target_16)
and vdesc_744.getType().hasName("desc_struct *")
and vsel_745.getType().hasName("short")
and vdesc_744.(LocalVariable).getFunction() = func
and vsel_745.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
