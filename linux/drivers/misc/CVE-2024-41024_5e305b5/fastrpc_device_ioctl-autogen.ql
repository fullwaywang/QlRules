/**
 * @name linux-5e305b5986dc52122a9368a1461f0c13e1de3fd6-fastrpc_device_ioctl
 * @id cpp/linux/5e305b5986dc52122a9368a1461f0c13e1de3fd6/fastrpc-device-ioctl
 * @description linux-5e305b5986dc52122a9368a1461f0c13e1de3fd6-drivers/misc/fastrpc.c-fastrpc_device_ioctl CVE-2024-41024
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfl_2093, Variable verr_2095, VariableAccess target_9, ExprStmt target_10, ExprStmt target_6) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("is_attach_rejected")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfl_2093
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2095
	)
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable verr_2095, VariableAccess target_9) {
exists(IfStmt target_1 |
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_2095
	and target_1.getThen() instanceof ExprStmt
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
)
}

predicate func_2(Variable vfl_2093, Variable verr_2095, VariableAccess target_9, ExprStmt target_6, ExprStmt target_7) {
exists(ExprStmt target_2 |
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("is_attach_rejected")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfl_2093
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2095
	)
	and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_3(Variable verr_2095, VariableAccess target_9) {
exists(IfStmt target_3 |
	target_3.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_2095
	and target_3.getThen() instanceof ExprStmt
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
)
}

predicate func_4(Variable vfl_2093, Variable verr_2095, VariableAccess target_9, ExprStmt target_7, ExprStmt target_8) {
exists(ExprStmt target_4 |
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("is_attach_rejected")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfl_2093
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2095
	)
	and target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_5(Variable verr_2095, VariableAccess target_9) {
exists(IfStmt target_5 |
	target_5.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_2095
	and target_5.getThen() instanceof ExprStmt
	and target_5.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
)
}

predicate func_6(Variable vfl_2093, Variable verr_2095, VariableAccess target_9, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("fastrpc_init_attach")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfl_2093
			and obj_1.getArgument(1).(Literal).getValue()="0"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2095
	)
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
}

predicate func_7(Variable vfl_2093, Variable verr_2095, VariableAccess target_9, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("fastrpc_init_attach")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfl_2093
			and obj_1.getArgument(1).(Literal).getValue()="2"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2095
	)
	and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
}

predicate func_8(Variable vfl_2093, Variable vargp_2094, Variable verr_2095, VariableAccess target_9, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("fastrpc_init_create_static_process")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfl_2093
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vargp_2094
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2095
	)
	and target_8.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_9
}

predicate func_9(Parameter vcmd_2090, VariableAccess target_9) {
	target_9.getTarget()=vcmd_2090
}

predicate func_10(Variable vfl_2093, Variable vargp_2094, Variable verr_2095, ExprStmt target_10) {
	exists(AssignExpr obj_0 | obj_0=target_10.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("fastrpc_invoke")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vfl_2093
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vargp_2094
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2095
	)
}

from Function func, Parameter vcmd_2090, Variable vfl_2093, Variable vargp_2094, Variable verr_2095, ExprStmt target_6, ExprStmt target_7, ExprStmt target_8, VariableAccess target_9, ExprStmt target_10
where
not func_0(vfl_2093, verr_2095, target_9, target_10, target_6)
and not func_1(verr_2095, target_9)
and not func_2(vfl_2093, verr_2095, target_9, target_6, target_7)
and not func_3(verr_2095, target_9)
and not func_4(vfl_2093, verr_2095, target_9, target_7, target_8)
and not func_5(verr_2095, target_9)
and func_6(vfl_2093, verr_2095, target_9, target_6)
and func_7(vfl_2093, verr_2095, target_9, target_7)
and func_8(vfl_2093, vargp_2094, verr_2095, target_9, target_8)
and func_9(vcmd_2090, target_9)
and func_10(vfl_2093, vargp_2094, verr_2095, target_10)
and vcmd_2090.getType().hasName("unsigned int")
and vfl_2093.getType().hasName("fastrpc_user *")
and vargp_2094.getType().hasName("char *")
and verr_2095.getType().hasName("int")
and vcmd_2090.getFunction() = func
and vfl_2093.(LocalVariable).getFunction() = func
and vargp_2094.(LocalVariable).getFunction() = func
and verr_2095.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
