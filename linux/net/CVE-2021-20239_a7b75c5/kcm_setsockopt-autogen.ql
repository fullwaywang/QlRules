/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-kcm_setsockopt
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/kcm-setsockopt
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/kcm/kcmsock.c-kcm_setsockopt CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, UnaryMinusExpr target_0) {
	target_0.getValue()="-22"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter voptval_1268, Variable vval_1271, ReturnStmt target_11, AsmStmt target_8, ExprStmt target_12) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("copy_from_sockptr")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vval_1271
	and target_1.getArgument(1).(VariableAccess).getTarget()=voptval_1268
	and target_1.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_1.getParent().(IfStmt).getThen()=target_11
	and target_1.getArgument(1).(VariableAccess).getLocation().isBefore(target_8.getChild(3).(VariableAccess).getLocation())
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getLocation()))
}

predicate func_2(Variable vval_1271, Variable v__val_gu_1280, VariableAccess target_2) {
	target_2.getTarget()=vval_1271
	and target_2.getParent().(AssignExpr).getLValue() = target_2
	and target_2.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1280
}

predicate func_3(Parameter voptval_1268, Variable vval_1271, Variable v__ret_gu_1280, Variable v__val_gu_1280, Variable vcurrent_stack_pointer, ReturnStmt target_11, StmtExpr target_3) {
	target_3.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(Literal).getValue()="0"
	and target_3.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_3.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_3.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(0).(VariableAccess).getTarget()=v__ret_gu_1280
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(1).(VariableAccess).getTarget()=v__val_gu_1280
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(3).(VariableAccess).getTarget()=voptval_1268
	and target_3.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(4).(SizeofExprOperator).getValue()="4"
	and target_3.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vval_1271
	and target_3.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1280
	and target_3.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_3.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_1280
	and target_3.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getParent().(IfStmt).getThen()=target_11
}

/*predicate func_6(Function func, ExprStmt target_6) {
	target_6.getExpr().(Literal).getValue()="0"
	and target_6.getEnclosingFunction() = func
}

*/
/*predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_7.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_7.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(Parameter voptval_1268, Variable v__ret_gu_1280, Variable v__val_gu_1280, Variable vcurrent_stack_pointer, AsmStmt target_8) {
	target_8.getChild(0).(VariableAccess).getTarget()=v__ret_gu_1280
	and target_8.getChild(1).(VariableAccess).getTarget()=v__val_gu_1280
	and target_8.getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_8.getChild(3).(VariableAccess).getTarget()=voptval_1268
	and target_8.getChild(4).(SizeofExprOperator).getValue()="4"
}

/*predicate func_9(Variable vval_1271, Variable v__val_gu_1280, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vval_1271
	and target_9.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1280
}

*/
/*predicate func_10(Variable v__ret_gu_1280, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_1280
	and target_10.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

*/
predicate func_11(StmtExpr target_3, Function func, ReturnStmt target_11) {
	target_11.getExpr() instanceof UnaryMinusExpr
	and target_11.getParent().(IfStmt).getCondition()=target_3
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vval_1271, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getTarget()=vval_1271
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
}

from Function func, Parameter voptval_1268, Variable vval_1271, Variable v__ret_gu_1280, Variable v__val_gu_1280, Variable vcurrent_stack_pointer, UnaryMinusExpr target_0, VariableAccess target_2, StmtExpr target_3, AsmStmt target_8, ReturnStmt target_11, ExprStmt target_12
where
func_0(func, target_0)
and not func_1(voptval_1268, vval_1271, target_11, target_8, target_12)
and func_2(vval_1271, v__val_gu_1280, target_2)
and func_3(voptval_1268, vval_1271, v__ret_gu_1280, v__val_gu_1280, vcurrent_stack_pointer, target_11, target_3)
and func_8(voptval_1268, v__ret_gu_1280, v__val_gu_1280, vcurrent_stack_pointer, target_8)
and func_11(target_3, func, target_11)
and func_12(vval_1271, target_12)
and voptval_1268.getType().hasName("char *")
and vval_1271.getType().hasName("int")
and v__ret_gu_1280.getType().hasName("int")
and v__val_gu_1280.getType().hasName("unsigned int")
and vcurrent_stack_pointer.getType().hasName("unsigned long")
and voptval_1268.getFunction() = func
and vval_1271.(LocalVariable).getFunction() = func
and v__ret_gu_1280.(LocalVariable).getFunction() = func
and v__val_gu_1280.(LocalVariable).getFunction() = func
and not vcurrent_stack_pointer.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
