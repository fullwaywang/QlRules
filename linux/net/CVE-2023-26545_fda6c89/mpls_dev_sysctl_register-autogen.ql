/**
 * @name linux-fda6c89fe3d9aca073495a664e1d5aea28cd4377-mpls_dev_sysctl_register
 * @id cpp/linux/fda6c89fe3d9aca073495a664e1d5aea28cd4377/mpls-dev-sysctl-register
 * @description linux-fda6c89fe3d9aca073495a664e1d5aea28cd4377-net/mpls/af_mpls.c-mpls_dev_sysctl_register CVE-2023-26545
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmdev_1399, ExprStmt target_1, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sysctl"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_1399
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vmdev_1399, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("mpls_netconf_notify_devconf")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
		and target_1.getExpr().(FunctionCall).getArgument(2).(UnaryMinusExpr).getValue()="-1"
		and target_1.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vmdev_1399
}

from Function func, Parameter vmdev_1399, ExprStmt target_1
where
not func_0(vmdev_1399, target_1, func)
and func_1(vmdev_1399, target_1)
and vmdev_1399.getType().hasName("mpls_dev *")
and vmdev_1399.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
