/**
 * @name linux-bcd0f93353326954817a4f9fa55ec57fb38acbb0-pep_sock_accept
 * @id cpp/linux/bcd0f93353326954817a4f9fa55ec57fb38acbb0/pep-sock-accept
 * @description linux-bcd0f93353326954817a4f9fa55ec57fb38acbb0-pep_sock_accept CVE-2021-45095
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_762, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("__sock_put")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_762
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_770, BlockStmt target_4, VariableAccess target_1) {
		target_1.getTarget()=verr_770
		and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Parameter vsk_762, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="listener"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("pep_sock *")
		and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vsk_762
}

predicate func_3(Parameter vsk_762, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("release_sock")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_762
}

predicate func_4(Function func, BlockStmt target_4) {
		target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("sock_put")
		and target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_4.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_4.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_4.getEnclosingFunction() = func
}

from Function func, Parameter vsk_762, Variable verr_770, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vsk_762, target_1, target_2, target_3)
and func_1(verr_770, target_4, target_1)
and func_2(vsk_762, target_2)
and func_3(vsk_762, target_3)
and func_4(func, target_4)
and vsk_762.getType().hasName("sock *")
and verr_770.getType().hasName("int")
and vsk_762.getFunction() = func
and verr_770.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
