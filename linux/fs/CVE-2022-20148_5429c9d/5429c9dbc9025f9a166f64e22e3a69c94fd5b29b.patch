commit 5429c9dbc9025f9a166f64e22e3a69c94fd5b29b
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Thu Nov 4 16:22:01 2021 +0800

    f2fs: fix UAF in f2fs_available_free_memory
    
    if2fs_fill_super
    -> f2fs_build_segment_manager
       -> create_discard_cmd_control
          -> f2fs_start_discard_thread
    
    It invokes kthread_run to create a thread and run issue_discard_thread.
    
    However, if f2fs_build_node_manager fails, the control flow goes to
    free_nm and calls f2fs_destroy_node_manager. This function will free
    sbi->nm_info. However, if issue_discard_thread accesses sbi->nm_info
    after the deallocation, but before the f2fs_stop_discard_thread, it will
    cause UAF(Use-after-free).
    
    -> f2fs_destroy_segment_manager
       -> destroy_discard_cmd_control
          -> f2fs_stop_discard_thread
    
    Fix this by stopping discard thread before f2fs_destroy_node_manager.
    
    Note that, the commit d6d2b491a82e1 introduces the call of
    f2fs_available_free_memory into issue_discard_thread.
    
    Cc: stable@vger.kernel.org
    Fixes: d6d2b491a82e ("f2fs: allow to change discard policy based on cached discard cmds")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

diff --git a/fs/f2fs/super.c b/fs/f2fs/super.c
index 75f706b91ebf..60cb2ede4fdd 100644
--- a/fs/f2fs/super.c
+++ b/fs/f2fs/super.c
@@ -4385,6 +4385,8 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 free_stats:
 	f2fs_destroy_stats(sbi);
 free_nm:
+	/* stop discard thread before destroying node manager */
+	f2fs_stop_discard_thread(sbi);
 	f2fs_destroy_node_manager(sbi);
 free_sm:
 	f2fs_destroy_segment_manager(sbi);
