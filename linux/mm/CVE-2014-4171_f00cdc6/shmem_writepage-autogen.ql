/**
 * @name linux-f00cdc6df7d7cfcabb5b740911e6788cb0802bdb-shmem_writepage
 * @id cpp/linux/f00cdc6df7d7cfcabb5b740911e6788cb0802bdb/shmem-writepage
 * @description linux-f00cdc6df7d7cfcabb5b740911e6788cb0802bdb-mm/shmem.c-shmem_writepage CVE-2014-4171
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vshmem_falloc_758, LogicalAndExpr target_2) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vshmem_falloc_758
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mode"
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshmem_falloc_758
		and target_0.getAnOperand().(VariableAccess).getLocation().isBefore(target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vshmem_falloc_758, VariableAccess target_1) {
		target_1.getTarget()=vshmem_falloc_758
}

predicate func_2(Variable vshmem_falloc_758, LogicalAndExpr target_2) {
		target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget()=vshmem_falloc_758
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="start"
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshmem_falloc_758
		and target_2.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="next"
		and target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshmem_falloc_758
}

from Function func, Variable vshmem_falloc_758, VariableAccess target_1, LogicalAndExpr target_2
where
not func_0(vshmem_falloc_758, target_2)
and func_1(vshmem_falloc_758, target_1)
and func_2(vshmem_falloc_758, target_2)
and vshmem_falloc_758.getType().hasName("shmem_falloc *")
and vshmem_falloc_758.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
