/**
 * @name linux-dee1f973ca341c266229faa5a1a5bb268bed3531-ext4_split_unwritten_extents
 * @id cpp/linux/dee1f973ca341c266229faa5a1a5bb268bed3531/ext4-split-unwritten-extents
 * @description linux-dee1f973ca341c266229faa5a1a5bb268bed3531-fs/ext4/extents.c-ext4_split_unwritten_extents CVE-2012-4508
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vflags_3299, Variable vsplit_flag_3305, ExprStmt target_1, ExprStmt target_2, FunctionCall target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_3299
	and target_0.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="16"
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vsplit_flag_3305
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="16"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getLocation())
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getLocation().isBefore(target_3.getArgument(4).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vflags_3299, ExprStmt target_1) {
	target_1.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vflags_3299
	and target_1.getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="8"
}

predicate func_2(Variable vsplit_flag_3305, ExprStmt target_2) {
	target_2.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vsplit_flag_3305
	and target_2.getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="4"
}

predicate func_3(Parameter vflags_3299, Variable vsplit_flag_3305, FunctionCall target_3) {
	target_3.getTarget().hasName("ext4_split_extent")
	and target_3.getArgument(0).(VariableAccess).getTarget().getType().hasName("handle_t *")
	and target_3.getArgument(1).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_3.getArgument(2).(VariableAccess).getTarget().getType().hasName("ext4_ext_path *")
	and target_3.getArgument(3).(VariableAccess).getTarget().getType().hasName("ext4_map_blocks *")
	and target_3.getArgument(4).(VariableAccess).getTarget()=vsplit_flag_3305
	and target_3.getArgument(5).(VariableAccess).getTarget()=vflags_3299
}

from Function func, Parameter vflags_3299, Variable vsplit_flag_3305, ExprStmt target_1, ExprStmt target_2, FunctionCall target_3
where
not func_0(vflags_3299, vsplit_flag_3305, target_1, target_2, target_3, func)
and func_1(vflags_3299, target_1)
and func_2(vsplit_flag_3305, target_2)
and func_3(vflags_3299, vsplit_flag_3305, target_3)
and vflags_3299.getType().hasName("int")
and vsplit_flag_3305.getType().hasName("int")
and vflags_3299.getFunction() = func
and vsplit_flag_3305.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
