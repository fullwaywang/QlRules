/**
 * @name linux-45d006c2c7ed7baf1fa258fa7b5bc9923d3a983e-ipv6_gso_segment
 * @id cpp/linux/45d006c2c7ed7baf1fa258fa7b5bc9923d3a983e/ipv6-gso-segment
 * @description linux-45d006c2c7ed7baf1fa258fa7b5bc9923d3a983e-net/ipv6/ip6_offload.c-ipv6_gso_segment CVE-2022-48936
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsegs_61, Parameter vskb_58, Variable vnhoff_70, FunctionCall target_1, ExprStmt target_2, FunctionCall target_3, ExprStmt target_4, ExprStmt target_5) {
exists(IfStmt target_0 |
	exists(ExprStmt obj_0 | obj_0=target_0.getThen() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="network_header"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vskb_58
			)
			and exists(PointerArithmeticOperation obj_3 | obj_3=obj_1.getRValue() |
				exists(PointerArithmeticOperation obj_4 | obj_4=obj_3.getLeftOperand() |
					exists(FunctionCall obj_5 | obj_5=obj_4.getLeftOperand() |
						obj_5.getTarget().hasName("skb_mac_header")
						and obj_5.getArgument(0).(VariableAccess).getTarget()=vskb_58
					)
					and obj_4.getRightOperand().(VariableAccess).getTarget()=vnhoff_70
				)
				and exists(PointerFieldAccess obj_6 | obj_6=obj_3.getRightOperand() |
					obj_6.getTarget().getName()="head"
					and obj_6.getQualifier().(VariableAccess).getTarget()=vskb_58
				)
			)
		)
	)
	and exists(BlockStmt obj_7 | obj_7=target_0.getParent() |
		exists(IfStmt obj_8 | obj_8=obj_7.getParent() |
			obj_8.getThen().(BlockStmt).getStmt(2)=target_0
			and obj_8.getCondition()=target_1
		)
	)
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vsegs_61
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation())
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, FunctionCall target_1) {
	exists(NotExpr obj_0 | obj_0=target_1.getArgument(0) |
		exists(NotExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getRightOperand() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="callbacks"
						and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("const net_offload *")
					)
					and obj_3.getTarget().getName()="gso_segment"
				)
				and obj_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("const net_offload *")
			)
		)
	)
	and target_1.getTarget().hasName("__builtin_expect")
	and target_1.getArgument(1).(Literal).getValue()="1"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vsegs_61, Parameter vskb_58, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(VariableCall obj_1 | obj_1=obj_0.getRValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getExpr() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="callbacks"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("const net_offload *")
				)
				and obj_2.getTarget().getName()="gso_segment"
			)
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vskb_58
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("netdev_features_t")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vsegs_61
	)
}

predicate func_3(Variable vsegs_61, FunctionCall target_3) {
	target_3.getTarget().hasName("IS_ERR_OR_NULL")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vsegs_61
}

predicate func_4(Parameter vskb_58, Variable vnhoff_70, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(PointerArithmeticOperation obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("skb_network_header")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vskb_58
			)
			and exists(FunctionCall obj_3 | obj_3=obj_1.getRightOperand() |
				obj_3.getTarget().hasName("skb_mac_header")
				and obj_3.getArgument(0).(VariableAccess).getTarget()=vskb_58
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vnhoff_70
	)
}

predicate func_5(Parameter vskb_58, Variable vnhoff_70, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(PointerArithmeticOperation obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("skb_mac_header")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vskb_58
			)
			and obj_1.getRightOperand().(VariableAccess).getTarget()=vnhoff_70
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("ipv6hdr *")
	)
}

from Function func, Variable vsegs_61, Parameter vskb_58, Variable vnhoff_70, FunctionCall target_1, ExprStmt target_2, FunctionCall target_3, ExprStmt target_4, ExprStmt target_5
where
not func_0(vsegs_61, vskb_58, vnhoff_70, target_1, target_2, target_3, target_4, target_5)
and func_1(func, target_1)
and func_2(vsegs_61, vskb_58, target_2)
and func_3(vsegs_61, target_3)
and func_4(vskb_58, vnhoff_70, target_4)
and func_5(vskb_58, vnhoff_70, target_5)
and vsegs_61.getType().hasName("sk_buff *")
and vskb_58.getType().hasName("sk_buff *")
and vnhoff_70.getType().hasName("int")
and vsegs_61.(LocalVariable).getFunction() = func
and vskb_58.getFunction() = func
and vnhoff_70.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
