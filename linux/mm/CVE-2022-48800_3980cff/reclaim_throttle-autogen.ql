/**
 * @name linux-3980cff6349687f73d5109f156f23cb261c24164-reclaim_throttle
 * @id cpp/linux/3980cff6349687f73d5109f156f23cb261c24164/reclaim-throttle
 * @description linux-3980cff6349687f73d5109f156f23cb261c24164-mm/vmscan.c-reclaim_throttle CVE-2022-48800
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalAndExpr target_2, Function func) {
exists(ExprStmt target_0 |
	exists(StmtExpr obj_0 | obj_0=target_0.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getTarget().hasName("__might_resched")
					and obj_3.getArgument(0) instanceof StringLiteral
					and obj_3.getArgument(1) instanceof Literal
					and obj_3.getArgument(2) instanceof Literal
				)
			)
			and obj_1.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_cond_resched")
		)
	)
	and exists(BlockStmt obj_4 | obj_4=target_0.getParent() |
		exists(IfStmt obj_5 | obj_5=obj_4.getParent() |
			obj_5.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_5.getCondition()=target_2
		)
	)
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(LogicalAndExpr target_2, Function func, ReturnStmt target_1) {
	target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, LogicalAndExpr target_2) {
	exists(BitwiseAndExpr obj_0 | obj_0=target_2.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="flags"
			and obj_1.getQualifier().(FunctionCall).getTarget().hasName("get_current")
		)
		and obj_0.getRightOperand().(BitwiseOrExpr).getValue()="2097168"
	)
	and target_2.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("current_is_kswapd")
	and target_2.getEnclosingFunction() = func
}

from Function func, ReturnStmt target_1, LogicalAndExpr target_2
where
not func_0(target_2, func)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
