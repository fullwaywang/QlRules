/**
 * @name linux-d50f2ab6f050311dbf7b8f5501b25f0bf64a439b-ext4_fill_flex_info
 * @id cpp/linux/d50f2ab6f050311dbf7b8f5501b25f0bf64a439b/ext4-fill-flex-info
 * @description linux-d50f2ab6f050311dbf7b8f5501b25f0bf64a439b-fs/ext4/super.c-ext4_fill_flex_info CVE-2012-2100
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vgroups_per_flex_2009, ExprStmt target_5, ExprStmt target_6, Literal target_1) {
		target_1.getValue()="2"
		and not target_1.getValue()="1"
		and target_1.getParent().(LTExpr).getParent().(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vgroups_per_flex_2009
		and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getParent().(LTExpr).getParent().(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_1.getParent().(LTExpr).getParent().(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(SubExpr).getLeftOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation())
}

predicate func_2(Variable vsbi_2005, BlockStmt target_7) {
	exists(LogicalOrExpr target_2 |
		target_2.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="s_log_groups_per_flex"
		and target_2.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2005
		and target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="1"
		and target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="s_log_groups_per_flex"
		and target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2005
		and target_2.getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="31"
		and target_2.getParent().(IfStmt).getThen()=target_7)
}

/*predicate func_3(Variable vsbi_2005, ExprStmt target_8) {
	exists(PointerFieldAccess target_3 |
		target_3.getTarget().getName()="s_log_groups_per_flex"
		and target_3.getQualifier().(VariableAccess).getTarget()=vsbi_2005
		and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

*/
predicate func_4(Variable vgroups_per_flex_2009, BlockStmt target_7, ExprStmt target_5, ExprStmt target_6, VariableAccess target_4) {
		target_4.getTarget()=vgroups_per_flex_2009
		and target_4.getParent().(LTExpr).getGreaterOperand() instanceof Literal
		and target_4.getParent().(LTExpr).getParent().(IfStmt).getThen()=target_7
		and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_4.getLocation())
		and target_4.getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(SubExpr).getLeftOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation())
}

predicate func_5(Variable vgroups_per_flex_2009, Variable vsbi_2005, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vgroups_per_flex_2009
		and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(Literal).getValue()="1"
		and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="s_log_groups_per_flex"
		and target_5.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2005
}

predicate func_6(Variable vgroups_per_flex_2009, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ext4_group_t")
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(SubExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="s_groups_count"
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(SubExpr).getLeftOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vgroups_per_flex_2009
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(BinaryBitwiseOperation).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="s_reserved_gdt_blocks"
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(BinaryBitwiseOperation).getLeftOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(BinaryBitwiseOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="s_desc_per_block_bits"
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getLeftOperand().(AddExpr).getAnOperand().(BinaryBitwiseOperation).getRightOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
		and target_6.getExpr().(AssignExpr).getRValue().(DivExpr).getRightOperand().(VariableAccess).getTarget()=vgroups_per_flex_2009
}

predicate func_7(Variable vsbi_2005, BlockStmt target_7) {
		target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s_log_groups_per_flex"
		and target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2005
		and target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_7.getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="1"
}

predicate func_8(Variable vsbi_2005, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s_log_groups_per_flex"
		and target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2005
		and target_8.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Variable vgroups_per_flex_2009, Variable vsbi_2005, Literal target_1, VariableAccess target_4, ExprStmt target_5, ExprStmt target_6, BlockStmt target_7, ExprStmt target_8
where
func_1(vgroups_per_flex_2009, target_5, target_6, target_1)
and not func_2(vsbi_2005, target_7)
and func_4(vgroups_per_flex_2009, target_7, target_5, target_6, target_4)
and func_5(vgroups_per_flex_2009, vsbi_2005, target_5)
and func_6(vgroups_per_flex_2009, target_6)
and func_7(vsbi_2005, target_7)
and func_8(vsbi_2005, target_8)
and vgroups_per_flex_2009.getType().hasName("int")
and vsbi_2005.getType().hasName("ext4_sb_info *")
and vgroups_per_flex_2009.(LocalVariable).getFunction() = func
and vsbi_2005.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
