/**
 * @name linux-8c7188b23474cca017b3ef354c4a58456f68303a-rds_sendmsg
 * @id cpp/linux/8c7188b23474cca017b3ef354c4a58456f68303a/rds-sendmsg
 * @description linux-8c7188b23474cca017b3ef354c4a58456f68303a-net/rds/send.c-rds_sendmsg CVE-2015-7990
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_981, IfStmt target_3, ExprStmt target_4, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_981
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation())
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vsk_981, LogicalOrExpr target_5) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("release_sock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_981
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5)
}

predicate func_2(Variable vsk_981, IfStmt target_6, FunctionCall target_7, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("release_sock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_981
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_6.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Function func, IfStmt target_3) {
	target_3.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("__be32")
	and target_3.getCondition().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_3.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="rs_bound_addr"
	and target_3.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("rds_sock *")
	and target_3.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-107"
	and target_3.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vsk_981, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("release_sock")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_981
}

predicate func_5(Function func, LogicalOrExpr target_5) {
	target_5.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("__be32")
	and target_5.getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_5.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="rs_bound_addr"
	and target_5.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("rds_sock *")
	and target_5.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, IfStmt target_6) {
	target_6.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_6.getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getTarget().hasName("rds_sk_sndbuf")
	and target_6.getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("rds_sock *")
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-90"
	and target_6.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vsk_981, FunctionCall target_7) {
	target_7.getTarget().hasName("sk_sleep")
	and target_7.getArgument(0).(VariableAccess).getTarget()=vsk_981
	and target_7.getParent().(FunctionCall).getParent().(Initializer).getExpr().(FunctionCall).getTarget().hasName("prepare_to_wait_event")
	and target_7.getParent().(FunctionCall).getParent().(Initializer).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("wait_queue_t")
	and target_7.getParent().(FunctionCall).getParent().(Initializer).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="1"
}

from Function func, Variable vsk_981, IfStmt target_3, ExprStmt target_4, LogicalOrExpr target_5, IfStmt target_6, FunctionCall target_7
where
not func_0(vsk_981, target_3, target_4, func)
and not func_1(vsk_981, target_5)
and not func_2(vsk_981, target_6, target_7, func)
and func_3(func, target_3)
and func_4(vsk_981, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
and func_7(vsk_981, target_7)
and vsk_981.getType().hasName("sock *")
and vsk_981.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
