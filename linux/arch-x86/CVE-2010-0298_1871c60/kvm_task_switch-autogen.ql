/**
 * @name linux-1871c6020d7308afb99127bba51f04548e7ca84e-kvm_task_switch
 * @id cpp/linux/1871c6020d7308afb99127bba51f04548e7ca84e/kvm-task-switch
 * @description linux-1871c6020d7308afb99127bba51f04548e7ca84e-arch/x86/kvm/x86.c-kvm_task_switch CVE-2010-0298
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vold_tss_base_4964, Parameter vvcpu_4958, ExprStmt target_4, ExprStmt target_5, ValueFieldAccess target_6, FunctionCall target_7) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("kvm_mmu_gva_to_gpa_write")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vvcpu_4958
		and target_0.getArgument(1).(VariableAccess).getTarget()=vold_tss_base_4964
		and target_0.getArgument(2).(Literal).getValue()="0"
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vold_tss_base_4964
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getArgument(1).(VariableAccess).getLocation())
		and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getLocation())
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
		and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_4958, VariableAccess target_1) {
		target_1.getTarget()=vvcpu_4958
		and target_1.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_2(Variable vold_tss_base_4964, VariableAccess target_2) {
		target_2.getTarget()=vold_tss_base_4964
		and target_2.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_3(Variable vold_tss_base_4964, Parameter vvcpu_4958, VariableCall target_3) {
		target_3.getExpr().(ValueFieldAccess).getTarget().getName()="gva_to_gpa"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="mmu"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4958
		and target_3.getArgument(0).(VariableAccess).getTarget()=vvcpu_4958
		and target_3.getArgument(1).(VariableAccess).getTarget()=vold_tss_base_4964
}

predicate func_4(Variable vold_tss_base_4964, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vold_tss_base_4964
		and target_4.getExpr().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_5(Variable vold_tss_base_4964, Parameter vvcpu_4958, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvm_task_switch_32")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_4958
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u16")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u16")
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vold_tss_base_4964
		and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("desc_struct")
}

predicate func_6(Parameter vvcpu_4958, ValueFieldAccess target_6) {
		target_6.getTarget().getName()="mmu"
		and target_6.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4958
}

predicate func_7(Parameter vvcpu_4958, FunctionCall target_7) {
		target_7.getTarget().hasName("load_guest_segment_descriptor")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vvcpu_4958
		and target_7.getArgument(1).(VariableAccess).getTarget().getType().hasName("u16")
		and target_7.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("desc_struct")
}

from Function func, Variable vold_tss_base_4964, Parameter vvcpu_4958, VariableAccess target_1, VariableAccess target_2, VariableCall target_3, ExprStmt target_4, ExprStmt target_5, ValueFieldAccess target_6, FunctionCall target_7
where
not func_0(vold_tss_base_4964, vvcpu_4958, target_4, target_5, target_6, target_7)
and func_1(vvcpu_4958, target_1)
and func_2(vold_tss_base_4964, target_2)
and func_3(vold_tss_base_4964, vvcpu_4958, target_3)
and func_4(vold_tss_base_4964, target_4)
and func_5(vold_tss_base_4964, vvcpu_4958, target_5)
and func_6(vvcpu_4958, target_6)
and func_7(vvcpu_4958, target_7)
and vold_tss_base_4964.getType().hasName("u32")
and vvcpu_4958.getType().hasName("kvm_vcpu *")
and vold_tss_base_4964.(LocalVariable).getFunction() = func
and vvcpu_4958.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
