/**
 * @name linux-1fc29bacedeabb278080e31bb9c1ecb49f143c3b-build_unc_path_to_root
 * @id cpp/linux/1fc29bacedeabb278080e31bb9c1ecb49f143c3b/build-unc-path-to-root
 * @description linux-1fc29bacedeabb278080e31bb9c1ecb49f143c3b-fs/cifs/connect.c-build_unc_path_to_root CVE-2013-4247
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpos_3270, ExprStmt target_4) {
	exists(PointerArithmeticOperation target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vpos_3270
		and target_0.getAnOperand().(Literal).getValue()="1"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("strncpy")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpos_3270
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="prepath"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const smb_vol *")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_0.getAnOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vpos_3270, VariableAccess target_1) {
		target_1.getTarget()=vpos_3270
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("strncpy")
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="prepath"
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const smb_vol *")
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_2(Variable vpos_3270, PostfixIncrExpr target_2) {
		target_2.getOperand().(VariableAccess).getTarget()=vpos_3270
}

predicate func_4(Variable vpos_3270, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("strncpy")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpos_3270
		and target_4.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="prepath"
		and target_4.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const smb_vol *")
		and target_4.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vpos_3270, VariableAccess target_1, PostfixIncrExpr target_2, ExprStmt target_4
where
not func_0(vpos_3270, target_4)
and func_1(vpos_3270, target_1)
and func_2(vpos_3270, target_2)
and func_4(vpos_3270, target_4)
and vpos_3270.getType().hasName("char *")
and vpos_3270.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
