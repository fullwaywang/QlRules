/**
 * @name linux-a1078e821b605813b63bf6bca414a85f804d5c66-balloon_init
 * @id cpp/linux/a1078e821b605813b63bf6bca414a85f804d5c66/balloon-init
 * @description linux-a1078e821b605813b63bf6bca414a85f804d5c66-drivers/xen/balloon.c-balloon_init CVE-2019-17351
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vxen_start_info, Variable vxen_released_pages, Initializer target_0) {
	target_0.getExpr().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="nr_pages"
	and target_0.getExpr().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxen_start_info
	and target_0.getExpr().(SubExpr).getRightOperand().(VariableAccess).getTarget()=vxen_released_pages
}

predicate func_1(Variable vmax_pfn, Initializer target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=vmax_pfn
}

predicate func_2(Variable v__UNIQUE_ID___x512_700, Variable v__UNIQUE_ID___y513_700, VariableAccess target_2) {
	target_2.getTarget()=v__UNIQUE_ID___x512_700
	and target_2.getParent().(LTExpr).getGreaterOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___y513_700
}

/*predicate func_3(Variable v__UNIQUE_ID___x512_700, Variable v__UNIQUE_ID___y513_700, VariableAccess target_3) {
	target_3.getTarget()=v__UNIQUE_ID___y513_700
	and target_3.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___x512_700
}

*/
predicate func_4(Variable v__UNIQUE_ID___x512_700, VariableAccess target_4) {
	target_4.getTarget()=v__UNIQUE_ID___x512_700
}

predicate func_5(Variable v__UNIQUE_ID___y513_700, VariableAccess target_5) {
	target_5.getTarget()=v__UNIQUE_ID___y513_700
}

predicate func_6(Function func, Literal target_6) {
	target_6.getValue()="0"
	and not target_6.getValue()="4"
	and target_6.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="max_retry_count"
	and target_6.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("balloon_stats")
	and target_6.getEnclosingFunction() = func
}

from Function func, Variable vxen_start_info, Variable vxen_released_pages, Variable vmax_pfn, Variable v__UNIQUE_ID___x512_700, Variable v__UNIQUE_ID___y513_700, Initializer target_0, Initializer target_1, VariableAccess target_2, VariableAccess target_4, VariableAccess target_5, Literal target_6
where
func_0(vxen_start_info, vxen_released_pages, target_0)
and func_1(vmax_pfn, target_1)
and func_2(v__UNIQUE_ID___x512_700, v__UNIQUE_ID___y513_700, target_2)
and func_4(v__UNIQUE_ID___x512_700, target_4)
and func_5(v__UNIQUE_ID___y513_700, target_5)
and func_6(func, target_6)
and vxen_start_info.getType().hasName("start_info *")
and vxen_released_pages.getType().hasName("unsigned long")
and vmax_pfn.getType().hasName("unsigned long")
and v__UNIQUE_ID___x512_700.getType().hasName("unsigned long")
and v__UNIQUE_ID___y513_700.getType().hasName("unsigned long")
and not vxen_start_info.getParentScope+() = func
and not vxen_released_pages.getParentScope+() = func
and not vmax_pfn.getParentScope+() = func
and v__UNIQUE_ID___x512_700.(LocalVariable).getFunction() = func
and v__UNIQUE_ID___y513_700.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
