/**
 * @name linux-15fab63e1e57be9fdb5eec1bbc5916e9825e9acb-splice_pipe_to_pipe
 * @id cpp/linux/15fab63e1e57be9fdb5eec1bbc5916e9825e9acb/splice-pipe-to-pipe
 * @description linux-15fab63e1e57be9fdb5eec1bbc5916e9825e9acb-fs/splice.c-splice_pipe_to_pipe CVE-2019-11487
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_1517, RelationalOperation target_3, ExprStmt target_4, ExprStmt target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand() instanceof FunctionCall
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vret_1517
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1517
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

/*predicate func_1(Variable vret_1517, ExprStmt target_5) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(VariableAccess).getTarget()=vret_1517
		and target_1.getRValue().(UnaryMinusExpr).getValue()="-14"
		and target_1.getLValue().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation()))
}

*/
predicate func_2(Variable vibuf_1516, Parameter vipipe_1512, FunctionCall target_2) {
		target_2.getTarget().hasName("pipe_buf_get")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vipipe_1512
		and target_2.getArgument(1).(VariableAccess).getTarget()=vibuf_1516
}

predicate func_3(Variable vibuf_1516, RelationalOperation target_3) {
		 (target_3 instanceof GEExpr or target_3 instanceof LEExpr)
		and target_3.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_3.getLesserOperand().(PointerFieldAccess).getTarget().getName()="len"
		and target_3.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vibuf_1516
}

predicate func_4(Variable vret_1517, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1517
		and target_4.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-11"
}

predicate func_5(Variable vret_1517, ExprStmt target_5) {
		target_5.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vret_1517
		and target_5.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="len"
		and target_5.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("pipe_buffer *")
}

from Function func, Variable vibuf_1516, Variable vret_1517, Parameter vipipe_1512, FunctionCall target_2, RelationalOperation target_3, ExprStmt target_4, ExprStmt target_5
where
not func_0(vret_1517, target_3, target_4, target_5)
and func_2(vibuf_1516, vipipe_1512, target_2)
and func_3(vibuf_1516, target_3)
and func_4(vret_1517, target_4)
and func_5(vret_1517, target_5)
and vibuf_1516.getType().hasName("pipe_buffer *")
and vret_1517.getType().hasName("int")
and vipipe_1512.getType().hasName("pipe_inode_info *")
and vibuf_1516.(LocalVariable).getFunction() = func
and vret_1517.(LocalVariable).getFunction() = func
and vipipe_1512.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
