commit fe4214a07e0b53d2af711f57519e33739c5df23f
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jan 20 10:10:25 2022 +0000

    block: fix memory leak in disk_register_independent_access_ranges
    
    [ Upstream commit 83114df32ae779df57e0af99a8ba6c3968b2ba3d ]
    
    kobject_init_and_add() takes reference even when it fails.
    According to the doc of kobject_init_and_add()
    
       If this function returns an error, kobject_put() must be called to
       properly clean up the memory associated with the object.
    
    Fix this issue by adding kobject_put().
    Callback function blk_ia_ranges_sysfs_release() in kobject_put()
    can handle the pointer "iars" properly.
    
    Fixes: a2247f19ee1c ("block: Add independent access ranges support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Link: https://lore.kernel.org/r/20220120101025.22411-1-linmq006@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/block/blk-ia-ranges.c b/block/blk-ia-ranges.c
index b925f3db3ab7..18c68d8b9138 100644
--- a/block/blk-ia-ranges.c
+++ b/block/blk-ia-ranges.c
@@ -144,7 +144,7 @@ int disk_register_independent_access_ranges(struct gendisk *disk,
 				   &q->kobj, "%s", "independent_access_ranges");
 	if (ret) {
 		q->ia_ranges = NULL;
-		kfree(iars);
+		kobject_put(&iars->kobj);
 		return ret;
 	}
 
