/**
 * @name linux-0926f91083f34d047abc74f1ca4fa6a9c161f7db-mlx4_register_mac
 * @id cpp/linux/0926f91083f34d047abc74f1ca4fa6a9c161f7db/mlx4-register-mac
 * @description linux-0926f91083f34d047abc74f1ca4fa6a9c161f7db-drivers/net/mlx4/port.c-mlx4_register_mac CVE-2010-5332
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_96, Variable vfree_97, DoStmt target_1, ExprStmt target_3, ExprStmt target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vfree_97
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_96
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_0.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation()))
}

predicate func_1(Variable vfree_97, DoStmt target_1) {
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_printk")
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="<7>"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Free MAC index is %d\n"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vfree_97
}

predicate func_3(Variable vfree_97, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfree_97
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_4(Variable vfree_97, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("dev_printk")
	and target_4.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="<7>"
	and target_4.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_4.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="pdev"
	and target_4.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mlx4_dev *")
	and target_4.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Free MAC index is %d\n"
	and target_4.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vfree_97
}

from Function func, Variable verr_96, Variable vfree_97, DoStmt target_1, ExprStmt target_3, ExprStmt target_4
where
not func_0(verr_96, vfree_97, target_1, target_3, target_4, func)
and func_1(vfree_97, target_1)
and func_3(vfree_97, target_3)
and func_4(vfree_97, target_4)
and verr_96.getType().hasName("int")
and vfree_97.getType().hasName("int")
and verr_96.(LocalVariable).getFunction() = func
and vfree_97.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
