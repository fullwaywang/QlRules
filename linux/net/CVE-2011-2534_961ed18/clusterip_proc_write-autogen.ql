/**
 * @name linux-961ed183a9fd080cf306c659b8736007e44065a5-clusterip_proc_write
 * @id cpp/linux/961ed183a9fd080cf306c659b8736007e44065a5/clusterip-proc-write
 * @description linux-961ed183a9fd080cf306c659b8736007e44065a5-net/ipv4/netfilter/ipt_CLUSTERIP.c-clusterip_proc_write CVE-2011-2534
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsize_660, ReturnStmt target_6) {
	exists(RelationalOperation target_0 |
		 (target_0 instanceof GTExpr or target_0 instanceof LTExpr)
		and target_0.getGreaterOperand().(VariableAccess).getTarget()=vsize_660
		and target_0.getLesserOperand() instanceof Literal
		and target_0.getParent().(IfStmt).getThen()=target_6)
}

predicate func_1(FunctionCall target_7, Function func) {
	exists(ReturnStmt target_1 |
		target_1.getExpr().(UnaryMinusExpr).getValue()="-5"
		and target_1.getParent().(IfStmt).getCondition()=target_7
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vbuffer_664, Parameter vinput_659, Parameter vsize_660, Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(FunctionCall).getTarget().hasName("copy_from_user")
		and target_2.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbuffer_664
		and target_2.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinput_659
		and target_2.getCondition().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vsize_660
		and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2)
}

predicate func_4(Variable vbuffer_664, Parameter vsize_660, FunctionCall target_7, EqualityOperation target_9, ReturnStmt target_10, Function func) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vbuffer_664
		and target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vsize_660
		and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
		and target_7.getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getLocation())
		and target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_9.getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_10.getExpr().(VariableAccess).getLocation()))
}

predicate func_6(Function func, ReturnStmt target_6) {
		target_6.getExpr().(UnaryMinusExpr).getValue()="-14"
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vbuffer_664, Parameter vinput_659, FunctionCall target_7) {
		target_7.getTarget().hasName("copy_from_user")
		and target_7.getArgument(0).(VariableAccess).getTarget()=vbuffer_664
		and target_7.getArgument(1).(VariableAccess).getTarget()=vinput_659
		and target_7.getArgument(2) instanceof Literal
}

predicate func_9(Variable vbuffer_664, EqualityOperation target_9) {
		target_9.getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbuffer_664
		and target_9.getAnOperand().(CharLiteral).getValue()="43"
}

predicate func_10(Parameter vsize_660, ReturnStmt target_10) {
		target_10.getExpr().(VariableAccess).getTarget()=vsize_660
}

from Function func, Variable vbuffer_664, Parameter vinput_659, Parameter vsize_660, ReturnStmt target_6, FunctionCall target_7, EqualityOperation target_9, ReturnStmt target_10
where
not func_0(vsize_660, target_6)
and not func_1(target_7, func)
and not func_2(vbuffer_664, vinput_659, vsize_660, func)
and not func_4(vbuffer_664, vsize_660, target_7, target_9, target_10, func)
and func_6(func, target_6)
and func_7(vbuffer_664, vinput_659, target_7)
and func_9(vbuffer_664, target_9)
and func_10(vsize_660, target_10)
and vbuffer_664.getType().hasName("char[11]")
and vinput_659.getType().hasName("const char *")
and vsize_660.getType().hasName("size_t")
and vbuffer_664.(LocalVariable).getFunction() = func
and vinput_659.getFunction() = func
and vsize_660.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
