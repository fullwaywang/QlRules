/**
 * @name linux-c8e252586f8d5de906385d8cf6385fee289a825e-fill_thread_core_info
 * @id cpp/linux/c8e252586f8d5de906385d8cf6385fee289a825e/fill-thread-core-info
 * @description linux-c8e252586f8d5de906385d8cf6385fee289a825e-fs/binfmt_elf.c-fill_thread_core_info CVE-2012-1097
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vregset_1422, BlockStmt target_2, LogicalAndExpr target_3) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(PointerFieldAccess).getTarget().getName()="core_note_type"
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_0.getAnOperand().(PointerFieldAccess).getTarget().getName()="get"
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="core_note_type"
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="active"
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="active"
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="task"
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("elf_thread_core_info *")
		and target_0.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vregset_1422
		and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_2
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vregset_1422, BlockStmt target_2, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="core_note_type"
		and target_1.getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="active"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="active"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="task"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("elf_thread_core_info *")
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vregset_1422
		and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vregset_1422, BlockStmt target_2) {
		target_2.getStmt(3).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_2.getStmt(3).(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("void *")
		and target_2.getStmt(3).(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_2.getStmt(3).(IfStmt).getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="get"
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="task"
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("elf_thread_core_info *")
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vregset_1422
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(Literal).getValue()="0"
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("size_t")
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("void *")
		and target_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(5).(Literal).getValue()="0"
}

predicate func_3(Variable vregset_1422, LogicalAndExpr target_3) {
		target_3.getAnOperand().(PointerFieldAccess).getTarget().getName()="core_note_type"
		and target_3.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="active"
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="active"
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_1422
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="task"
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("elf_thread_core_info *")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vregset_1422
}

from Function func, Variable vregset_1422, PointerFieldAccess target_1, BlockStmt target_2, LogicalAndExpr target_3
where
not func_0(vregset_1422, target_2, target_3)
and func_1(vregset_1422, target_2, target_1)
and func_2(vregset_1422, target_2)
and func_3(vregset_1422, target_3)
and vregset_1422.getType().hasName("const user_regset *")
and vregset_1422.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
