/**
 * @name linux-ea174a91893956450510945a0c5d1a10b5323656-smb2_sess_setup
 * @id cpp/linux/ea174a91893956450510945a0c5d1a10b5323656/smb2-sess-setup
 * @description linux-ea174a91893956450510945a0c5d1a10b5323656-smb2_sess_setup CVE-2023-32247
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsess_1618, VariableAccess target_1, LogicalAndExpr target_2, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="last_active"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_1618
		and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("unsigned long")
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsess_1618, BlockStmt target_4, VariableAccess target_1) {
		target_1.getTarget()=vsess_1618
		and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vsess_1618, LogicalAndExpr target_2) {
		target_2.getAnOperand().(PointerFieldAccess).getTarget().getName()="user"
		and target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_1618
		and target_2.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_2.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="user"
		and target_2.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_1618
		and target_2.getAnOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="32"
}

predicate func_3(Variable vsess_1618, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="state"
		and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_1618
		and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_4(Variable vsess_1618, BlockStmt target_4) {
		target_4.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="user"
		and target_4.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_1618
		and target_4.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_4.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="user"
		and target_4.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_1618
		and target_4.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="32"
		and target_4.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bool")
}

from Function func, Variable vsess_1618, VariableAccess target_1, LogicalAndExpr target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vsess_1618, target_1, target_2, target_3)
and func_1(vsess_1618, target_4, target_1)
and func_2(vsess_1618, target_2)
and func_3(vsess_1618, target_3)
and func_4(vsess_1618, target_4)
and vsess_1618.getType().hasName("ksmbd_session *")
and vsess_1618.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
