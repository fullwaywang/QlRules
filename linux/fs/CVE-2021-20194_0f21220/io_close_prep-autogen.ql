/**
 * @name linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-io_close_prep
 * @id cpp/linux/0f2122045b946241a9e549c2a76cea54fa58a7ff/io-close-prep
 * @description linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-fs/io_uring.c-io_close_prep CVE-2021-20194
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_3962, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="(unknown field)"
	and target_0.getQualifier().(VariableAccess).getTarget()=vreq_3962
}

predicate func_1(Variable vio_uring_fops, Parameter vreq_3962, ReturnStmt target_3, LogicalAndExpr target_1) {
	target_1.getLeftOperand().(ValueFieldAccess).getTarget().getName()="file"
	and target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_3962
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="f_op"
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="file"
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_3962
	and target_1.getRightOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vio_uring_fops
	and target_1.getParent().(LogicalOrExpr).getRightOperand() instanceof EqualityOperation
	and target_1.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Parameter vreq_3962, ReturnStmt target_3, LogicalOrExpr target_2) {
	target_2.getLeftOperand() instanceof LogicalAndExpr
	and target_2.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="fd"
	and target_2.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="close"
	and target_2.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_3962
	and target_2.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="ring_fd"
	and target_2.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ctx"
	and target_2.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_3962
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(LogicalOrExpr target_2, Function func, ReturnStmt target_3) {
	target_3.getExpr().(UnaryMinusExpr).getValue()="-9"
	and target_3.getParent().(IfStmt).getCondition()=target_2
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vio_uring_fops, Parameter vreq_3962, PointerFieldAccess target_0, LogicalAndExpr target_1, LogicalOrExpr target_2, ReturnStmt target_3
where
func_0(vreq_3962, target_0)
and func_1(vio_uring_fops, vreq_3962, target_3, target_1)
and func_2(vreq_3962, target_3, target_2)
and func_3(target_2, func, target_3)
and vio_uring_fops.getType().hasName("const file_operations")
and vreq_3962.getType().hasName("io_kiocb *")
and not vio_uring_fops.getParentScope+() = func
and vreq_3962.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
