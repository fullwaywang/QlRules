/**
 * @name linux-ffcfb8db540ff879c2a85bf7e404954281443414-atalk_sendmsg
 * @id cpp/linux/ffcfb8db540ff879c2a85bf7e404954281443414/atalk-sendmsg
 * @description linux-ffcfb8db540ff879c2a85bf7e404954281443414-net/appletalk/ddp.c-atalk_sendmsg CVE-2009-2903
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb2_1653, Variable vusat_1548, Variable vdev_1553, ExprStmt target_6, FunctionCall target_0) {
		target_0.getTarget().hasName("aarp_send_ddp")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vdev_1553
		and target_0.getArgument(1).(VariableAccess).getTarget()=vskb2_1653
		and target_0.getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sat_addr"
		and target_0.getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vusat_1548
		and target_0.getArgument(3).(Literal).getValue()="0"
		and target_0.getParent().(EQExpr).getAnOperand() instanceof UnaryMinusExpr
		and target_0.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_1(Variable vusat_1548, Variable vskb_1552, Variable vdev_1553, ExprStmt target_7, FunctionCall target_1) {
		target_1.getTarget().hasName("aarp_send_ddp")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vdev_1553
		and target_1.getArgument(1).(VariableAccess).getTarget()=vskb_1552
		and target_1.getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sat_addr"
		and target_1.getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vusat_1548
		and target_1.getArgument(3).(Literal).getValue()="0"
		and target_1.getParent().(EQExpr).getAnOperand() instanceof UnaryMinusExpr
		and target_1.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_7
}

predicate func_2(Variable vskb2_1653, VariableAccess target_8, IfStmt target_2) {
		target_2.getCondition().(EqualityOperation).getAnOperand() instanceof FunctionCall
		and target_2.getCondition().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
		and target_2.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb2_1653
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

/*predicate func_3(Variable vskb2_1653, FunctionCall target_3) {
		target_3.getTarget().hasName("kfree_skb")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vskb2_1653
}

*/
predicate func_4(Variable vskb_1552, LogicalOrExpr target_9, IfStmt target_4) {
		target_4.getCondition().(EqualityOperation).getAnOperand() instanceof FunctionCall
		and target_4.getCondition().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
		and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_1552
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

/*predicate func_5(Variable vskb_1552, FunctionCall target_5) {
		target_5.getTarget().hasName("kfree_skb")
		and target_5.getArgument(0).(VariableAccess).getTarget()=vskb_1552
}

*/
predicate func_6(Function func, ExprStmt target_6) {
		target_6.getExpr() instanceof FunctionCall
		and target_6.getEnclosingFunction() = func
}

predicate func_7(EqualityOperation target_11, Function func, ExprStmt target_7) {
		target_7.getExpr() instanceof FunctionCall
		and target_7.getParent().(IfStmt).getCondition()=target_11
		and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vskb2_1653, BlockStmt target_12, VariableAccess target_8) {
		target_8.getTarget()=vskb2_1653
		and target_8.getParent().(IfStmt).getThen()=target_12
}

predicate func_9(Variable vdev_1553, LogicalOrExpr target_9) {
		target_9.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_9.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1553
		and target_9.getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="8"
		and target_9.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_11(Function func, EqualityOperation target_11) {
		target_11.getAnOperand() instanceof FunctionCall
		and target_11.getAnOperand() instanceof UnaryMinusExpr
		and target_11.getEnclosingFunction() = func
}

predicate func_12(Function func, BlockStmt target_12) {
		target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
		and target_12.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_12.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("sock *")
		and target_12.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("sock_flag")
		and target_12.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_12.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_12.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="<7>SK %p: send out(copy).\n"
		and target_12.getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sock *")
		and target_12.getEnclosingFunction() = func
}

from Function func, Variable vskb2_1653, Variable vusat_1548, Variable vskb_1552, Variable vdev_1553, FunctionCall target_0, FunctionCall target_1, IfStmt target_2, IfStmt target_4, ExprStmt target_6, ExprStmt target_7, VariableAccess target_8, LogicalOrExpr target_9, EqualityOperation target_11, BlockStmt target_12
where
func_0(vskb2_1653, vusat_1548, vdev_1553, target_6, target_0)
and func_1(vusat_1548, vskb_1552, vdev_1553, target_7, target_1)
and func_2(vskb2_1653, target_8, target_2)
and func_4(vskb_1552, target_9, target_4)
and func_6(func, target_6)
and func_7(target_11, func, target_7)
and func_8(vskb2_1653, target_12, target_8)
and func_9(vdev_1553, target_9)
and func_11(func, target_11)
and func_12(func, target_12)
and vskb2_1653.getType().hasName("sk_buff *")
and vusat_1548.getType().hasName("sockaddr_at *")
and vskb_1552.getType().hasName("sk_buff *")
and vdev_1553.getType().hasName("net_device *")
and vskb2_1653.(LocalVariable).getFunction() = func
and vusat_1548.(LocalVariable).getFunction() = func
and vskb_1552.(LocalVariable).getFunction() = func
and vdev_1553.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
