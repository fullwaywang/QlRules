/**
 * @name linux-9034c87d61be8cff989017740a91701ac8195a1d-event_enable_read
 * @id cpp/linux/9034c87d61be8cff989017740a91701ac8195a1d/event-enable-read
 * @description linux-9034c87d61be8cff989017740a91701ac8195a1d-kernel/trace/trace_events.c-event_enable_read CVE-2023-52879
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vflags_1363, ReturnStmt target_2, ExprStmt target_3, LogicalAndExpr target_4) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_1363
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_4.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vfile_1362, ReturnStmt target_2, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vfile_1362
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(UnaryMinusExpr).getValue()="-19"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vfile_1362, Variable vflags_1363, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vflags_1363
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_1362
}

predicate func_4(Variable vflags_1363, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_1363
	and target_4.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_1363
}

from Function func, Variable vfile_1362, Variable vflags_1363, NotExpr target_1, ReturnStmt target_2, ExprStmt target_3, LogicalAndExpr target_4
where
not func_0(vflags_1363, target_2, target_3, target_4)
and func_1(vfile_1362, target_2, target_1)
and func_2(func, target_2)
and func_3(vfile_1362, vflags_1363, target_3)
and func_4(vflags_1363, target_4)
and vfile_1362.getType().hasName("trace_event_file *")
and vflags_1363.getType().hasName("unsigned long")
and vfile_1362.(LocalVariable).getFunction() = func
and vflags_1363.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
