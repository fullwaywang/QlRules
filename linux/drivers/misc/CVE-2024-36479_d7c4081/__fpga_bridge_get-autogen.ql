/**
 * @name linux-d7c4081c54a1d4068de9440957303a76f9e5c95b-__fpga_bridge_get
 * @id cpp/linux/d7c4081c54a1d4068de9440957303a76f9e5c95b/--fpga-bridge-get
 * @description linux-d7c4081c54a1d4068de9440957303a76f9e5c95b-drivers/fpga/fpga-bridge.c-__fpga_bridge_get CVE-2024-36479
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_58, VariableAccess target_0) {
	target_0.getTarget()=vdev_58
	and vdev_58.getIndex() = 0
}

predicate func_1(Parameter vdev_58, PointerFieldAccess target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getQualifier() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="parent"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdev_58
		)
		and obj_0.getTarget().getName()="driver"
	)
	and target_1.getTarget().getName()="owner"
}

predicate func_3(NotExpr target_14, Function func) {
exists(ReturnStmt target_3 |
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("ERR_PTR")
		and obj_0.getArgument(0) instanceof UnaryMinusExpr
	)
	and exists(BlockStmt obj_1 | obj_1=target_3.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(1)=target_3
			and obj_2.getCondition()=target_14
		)
	)
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(Function func, UnaryMinusExpr target_4) {
	target_4.getValue()="-19"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vret_62, UnaryMinusExpr target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getParent() |
		obj_0.getRValue() = target_5
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_62
	)
	and target_5.getValue()="-16"
}

predicate func_6(Variable vbridge_61, Function func, ExprStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vbridge_61
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Function func, DeclStmt target_7) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vret_62, NotExpr target_14, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vret_62
		and obj_0.getRValue() instanceof UnaryMinusExpr
	)
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
}

predicate func_9(NotExpr target_14, Function func, GotoStmt target_9) {
	target_9.getName() ="err_dev"
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Parameter vdev_58, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="parent"
	and target_10.getQualifier().(VariableAccess).getTarget()=vdev_58
}

predicate func_11(NotExpr target_15, Function func, GotoStmt target_11) {
	target_11.getName() ="err_ll_mod"
	and target_11.getParent().(IfStmt).getCondition()=target_15
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Parameter vdev_58, Function func, ExprStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getExpr() |
		obj_0.getTarget().hasName("put_device")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdev_58
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Variable vret_62, VariableAccess target_13) {
	target_13.getTarget()=vret_62
	and target_13.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("ERR_PTR")
}

predicate func_14(Variable vbridge_61, NotExpr target_14) {
	exists(FunctionCall obj_0 | obj_0=target_14.getOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vbridge_61
			)
		)
		and obj_0.getTarget().hasName("mutex_trylock")
	)
}

predicate func_15(Parameter vdev_58, NotExpr target_15) {
	exists(FunctionCall obj_0 | obj_0=target_15.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="parent"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vdev_58
				)
				and obj_2.getTarget().getName()="driver"
			)
			and obj_1.getTarget().getName()="owner"
		)
		and obj_0.getTarget().hasName("try_module_get")
	)
}

from Function func, Variable vbridge_61, Variable vret_62, Parameter vdev_58, VariableAccess target_0, PointerFieldAccess target_1, UnaryMinusExpr target_4, UnaryMinusExpr target_5, ExprStmt target_6, DeclStmt target_7, ExprStmt target_8, GotoStmt target_9, PointerFieldAccess target_10, GotoStmt target_11, ExprStmt target_12, VariableAccess target_13, NotExpr target_14, NotExpr target_15
where
func_0(vdev_58, target_0)
and func_1(vdev_58, target_1)
and not func_3(target_14, func)
and func_4(func, target_4)
and func_5(vret_62, target_5)
and func_6(vbridge_61, func, target_6)
and func_7(func, target_7)
and func_8(vret_62, target_14, target_8)
and func_9(target_14, func, target_9)
and func_10(vdev_58, target_10)
and func_11(target_15, func, target_11)
and func_12(vdev_58, func, target_12)
and func_13(vret_62, target_13)
and func_14(vbridge_61, target_14)
and func_15(vdev_58, target_15)
and vbridge_61.getType().hasName("fpga_bridge *")
and vret_62.getType().hasName("int")
and vdev_58.getType().hasName("device *")
and vbridge_61.(LocalVariable).getFunction() = func
and vret_62.(LocalVariable).getFunction() = func
and vdev_58.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
