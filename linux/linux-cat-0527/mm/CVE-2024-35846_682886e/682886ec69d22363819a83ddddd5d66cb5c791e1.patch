commit 682886ec69d22363819a83ddddd5d66cb5c791e1
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Thu Apr 18 08:26:28 2024 -0400

    mm: zswap: fix shrinker NULL crash with cgroup_disable=memory
    
    Christian reports a NULL deref in zswap that he bisected down to the zswap
    shrinker.  The issue also cropped up in the bug trackers of libguestfs [1]
    and the Red Hat bugzilla [2].
    
    The problem is that when memcg is disabled with the boot time flag, the
    zswap shrinker might get called with sc->memcg == NULL.  This is okay in
    many places, like the lruvec operations.  But it crashes in
    memcg_page_state() - which is only used due to the non-node accounting of
    cgroup's the zswap memory to begin with.
    
    Nhat spotted that the memcg can be NULL in the memcg-disabled case, and I
    was then able to reproduce the crash locally as well.
    
    [1] https://github.com/libguestfs/libguestfs/issues/139
    [2] https://bugzilla.redhat.com/show_bug.cgi?id=2275252
    
    Link: https://lkml.kernel.org/r/20240418124043.GC1055428@cmpxchg.org
    Link: https://lkml.kernel.org/r/20240417143324.GA1055428@cmpxchg.org
    Fixes: b5ba474f3f51 ("zswap: shrink zswap pool based on memory pressure")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reported-by: Christian Heusel <christian@heusel.eu>
    Debugged-by: Nhat Pham <nphamcs@gmail.com>
    Suggested-by: Nhat Pham <nphamcs@gmail.com>
    Tested-by: Christian Heusel <christian@heusel.eu>
    Acked-by: Yosry Ahmed <yosryahmed@google.com>
    Cc: Chengming Zhou <chengming.zhou@linux.dev>
    Cc: Dan Streetman <ddstreet@ieee.org>
    Cc: Richard W.M. Jones <rjones@redhat.com>
    Cc: Seth Jennings <sjenning@redhat.com>
    Cc: Vitaly Wool <vitaly.wool@konsulko.com>
    Cc: <stable@vger.kernel.org>    [v6.8]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

diff --git a/mm/zswap.c b/mm/zswap.c
index caed028945b0..6f8850c44b61 100644
--- a/mm/zswap.c
+++ b/mm/zswap.c
@@ -1331,15 +1331,22 @@ static unsigned long zswap_shrinker_count(struct shrinker *shrinker,
 	if (!gfp_has_io_fs(sc->gfp_mask))
 		return 0;
 
-#ifdef CONFIG_MEMCG_KMEM
-	mem_cgroup_flush_stats(memcg);
-	nr_backing = memcg_page_state(memcg, MEMCG_ZSWAP_B) >> PAGE_SHIFT;
-	nr_stored = memcg_page_state(memcg, MEMCG_ZSWAPPED);
-#else
-	/* use pool stats instead of memcg stats */
-	nr_backing = zswap_pool_total_size >> PAGE_SHIFT;
-	nr_stored = atomic_read(&zswap_nr_stored);
-#endif
+	/*
+	 * For memcg, use the cgroup-wide ZSWAP stats since we don't
+	 * have them per-node and thus per-lruvec. Careful if memcg is
+	 * runtime-disabled: we can get sc->memcg == NULL, which is ok
+	 * for the lruvec, but not for memcg_page_state().
+	 *
+	 * Without memcg, use the zswap pool-wide metrics.
+	 */
+	if (!mem_cgroup_disabled()) {
+		mem_cgroup_flush_stats(memcg);
+		nr_backing = memcg_page_state(memcg, MEMCG_ZSWAP_B) >> PAGE_SHIFT;
+		nr_stored = memcg_page_state(memcg, MEMCG_ZSWAPPED);
+	} else {
+		nr_backing = zswap_pool_total_size >> PAGE_SHIFT;
+		nr_stored = atomic_read(&zswap_nr_stored);
+	}
 
 	if (!nr_stored)
 		return 0;
