/**
 * @name linux-f15f29fd4779be8a418b66e9d52979bb6d6c2325-nf_tables_delrule
 * @id cpp/linux/f15f29fd4779be8a418b66e9d52979bb6d6c2325/nf-tables-delrule
 * @description linux-f15f29fd4779be8a418b66e9d52979bb6d6c2325-net/netfilter/nf_tables_api.c-nf_tables_delrule CVE-2023-5197
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchain_4056, ReturnStmt target_2, FunctionCall target_0) {
	target_0.getTarget().hasName("nft_chain_is_bound")
	and not target_0.getTarget().hasName("nft_chain_binding")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vchain_4056
	and target_0.getParent().(IfStmt).getThen()=target_2
}

predicate func_1(Variable vchain_4056, FunctionCall target_1) {
	target_1.getTarget().hasName("nft_chain_is_bound")
	and not target_1.getTarget().hasName("nft_chain_binding")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vchain_4056
	and target_1.getParent().(IfStmt).getThen() instanceof ContinueStmt
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(UnaryMinusExpr).getValue()="-95"
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vchain_4056, FunctionCall target_0, FunctionCall target_1, ReturnStmt target_2
where
func_0(vchain_4056, target_2, target_0)
and func_1(vchain_4056, target_1)
and func_2(func, target_2)
and vchain_4056.getType().hasName("nft_chain *")
and vchain_4056.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
