/**
 * @name linux-47c29d69212911f50bdcdd0564b5999a559010d4-bq24190_remove
 * @id cpp/linux/47c29d69212911f50bdcdd0564b5999a559010d4/bq24190-remove
 * @description linux-47c29d69212911f50bdcdd0564b5999a559010d4-drivers/power/supply/bq24190_charger.c-bq24190_remove CVE-2023-33288
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbdi_1906, ExprStmt target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("cancel_delayed_work_sync")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="input_current_limit_work"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbdi_1906
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vbdi_1906, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pm_runtime_resume_and_get")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbdi_1906
}

from Function func, Variable vbdi_1906, ExprStmt target_2
where
not func_0(vbdi_1906, target_2, func)
and func_2(vbdi_1906, target_2)
and vbdi_1906.getType().hasName("bq24190_dev_info *")
and vbdi_1906.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
