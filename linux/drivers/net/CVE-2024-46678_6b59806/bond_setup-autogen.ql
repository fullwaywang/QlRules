/**
 * @name linux-6b598069164ac1bb60996d6ff94e7f9169dbd2d3-bond_setup
 * @id cpp/linux/6b598069164ac1bb60996d6ff94e7f9169dbd2d3/bond-setup
 * @description linux-6b598069164ac1bb60996d6ff94e7f9169dbd2d3-drivers/net/bonding/bond_main.c-bond_setup CVE-2024-46678
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v__key_5944, FunctionCall target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getArgument(0) |
		obj_0.getTarget().hasName("spinlock_check")
		and obj_0.getArgument(0) instanceof AddressOfExpr
	)
	and target_0.getTarget().hasName("__raw_spin_lock_init")
	and not target_0.getTarget().hasName("__mutex_init")
	and target_0.getArgument(1).(StringLiteral).getValue()="&bond->ipsec_lock"
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v__key_5944
}

predicate func_1(Variable vbond_5916, AddressOfExpr target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getOperand() |
		obj_0.getTarget().getName()="ipsec_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vbond_5916
	)
	and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

from Function func, Variable vbond_5916, Variable v__key_5944, FunctionCall target_0, AddressOfExpr target_1
where
func_0(v__key_5944, target_0)
and func_1(vbond_5916, target_1)
and vbond_5916.getType().hasName("bonding *")
and v__key_5944.getType().hasName("lock_class_key")
and vbond_5916.(LocalVariable).getFunction() = func
and v__key_5944.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
