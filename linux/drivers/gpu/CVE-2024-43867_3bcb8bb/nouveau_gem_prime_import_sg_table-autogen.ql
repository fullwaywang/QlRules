/**
 * @name linux-3bcb8bba72ce89667fa863054956267c450c47ef-nouveau_gem_prime_import_sg_table
 * @id cpp/linux/3bcb8bba72ce89667fa863054956267c450c47ef/nouveau-gem-prime-import-sg-table
 * @description linux-3bcb8bba72ce89667fa863054956267c450c47ef-drivers/gpu/drm/nouveau/nouveau_prime.c-nouveau_gem_prime_import_sg_table CVE-2024-43867
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnvbo_64, AddressOfExpr target_3, AddressOfExpr target_4) {
exists(FunctionCall target_0 |
	exists(AddressOfExpr obj_0 | obj_0=target_0.getArgument(0) |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="bo"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vnvbo_64
			)
			and obj_1.getTarget().getName()="base"
		)
	)
	and target_0.getTarget().hasName("drm_gem_object_release")
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vnvbo_64, VariableAccess target_5, AddressOfExpr target_4, ExprStmt target_6) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vnvbo_64
	)
	and exists(BlockStmt obj_1 | obj_1=target_1.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(1)=target_1
			and obj_2.getCondition()=target_5
		)
	)
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Variable vnvbo_64, FunctionCall target_2) {
	target_2.getTarget().hasName("nouveau_bo_ref")
	and target_2.getArgument(0).(Literal).getValue()="0"
	and target_2.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vnvbo_64
}

predicate func_3(Variable vnvbo_64, AddressOfExpr target_3) {
	exists(ValueFieldAccess obj_0 | obj_0=target_3.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="bo"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vnvbo_64
		)
		and obj_0.getTarget().getName()="base"
	)
	and exists(FunctionCall obj_2 | obj_2=target_3.getParent() |
		exists(AssignExpr obj_3 | obj_3=obj_2.getParent() |
			exists(FunctionCall obj_4 | obj_4=obj_3.getRValue() |
				obj_4.getTarget().hasName("drm_gem_object_init")
				and obj_4.getArgument(0).(VariableAccess).getTarget().getType().hasName("drm_device *")
				and obj_4.getArgument(2).(VariableAccess).getTarget().getType().hasName("u64")
			)
		)
	)
}

predicate func_4(Variable vnvbo_64, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vnvbo_64
}

predicate func_5(Variable vret_69, BlockStmt target_7, VariableAccess target_5) {
	target_5.getTarget()=vret_69
	and target_5.getParent().(IfStmt).getThen()=target_7
}

predicate func_6(Variable vnvbo_64, Variable vret_69, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("nouveau_bo_init")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vnvbo_64
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("u64")
			and obj_1.getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
			and obj_1.getArgument(3).(VariableAccess).getTarget().getType().hasName("u32")
			and obj_1.getArgument(4).(VariableAccess).getTarget().getType().hasName("sg_table *")
			and obj_1.getArgument(5).(VariableAccess).getTarget().getType().hasName("dma_resv *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_69
	)
}

predicate func_7(Function func, BlockStmt target_7) {
	exists(ExprStmt obj_0 | obj_0=target_7.getStmt(1) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("ERR_PTR")
				and obj_2.getArgument(0).(UnaryMinusExpr).getValue()="-12"
			)
			and obj_1.getLValue().(VariableAccess).getTarget().getType().hasName("drm_gem_object *")
		)
	)
	and target_7.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_7.getStmt(2).(GotoStmt).getName() ="unlock"
	and target_7.getEnclosingFunction() = func
}

from Function func, Variable vnvbo_64, Variable vret_69, FunctionCall target_2, AddressOfExpr target_3, AddressOfExpr target_4, VariableAccess target_5, ExprStmt target_6, BlockStmt target_7
where
not func_0(vnvbo_64, target_3, target_4)
and not func_1(vnvbo_64, target_5, target_4, target_6)
and func_2(vnvbo_64, target_2)
and func_3(vnvbo_64, target_3)
and func_4(vnvbo_64, target_4)
and func_5(vret_69, target_7, target_5)
and func_6(vnvbo_64, vret_69, target_6)
and func_7(func, target_7)
and vnvbo_64.getType().hasName("nouveau_bo *")
and vret_69.getType().hasName("int")
and vnvbo_64.(LocalVariable).getFunction() = func
and vret_69.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
