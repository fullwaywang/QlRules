/**
 * @name linux-7882923f1cb88dc1a17f2bf0c81b1fc80d44db82-ring_buffer_init
 * @id cpp/linux/7882923f1cb88dc1a17f2bf0c81b1fc80d44db82/ring-buffer-init
 * @description linux-7882923f1cb88dc1a17f2bf0c81b1fc80d44db82-kernel/events/ring_buffer.c-ring_buffer_init CVE-2024-46713
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrb_309, ExprStmt target_1, Function func) {
exists(DoStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="aux_mutex"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vrb_309
					)
				)
				and obj_2.getTarget().hasName("__mutex_init")
				and obj_2.getArgument(1).(StringLiteral).getValue()="&rb->aux_mutex"
				and obj_2.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
			)
		)
	)
	and target_0.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vrb_309, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="paused"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vrb_309
		)
		and obj_0.getRValue().(Literal).getValue()="1"
	)
}

from Function func, Parameter vrb_309, ExprStmt target_1
where
not func_0(vrb_309, target_1, func)
and func_1(vrb_309, target_1)
and vrb_309.getType().hasName("perf_buffer *")
and vrb_309.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
