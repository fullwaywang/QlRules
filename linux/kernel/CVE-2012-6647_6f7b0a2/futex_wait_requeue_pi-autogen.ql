/**
 * @name linux-6f7b0a2a5c0fb03be7c25bd1745baa50582348ef-futex_wait_requeue_pi
 * @id cpp/linux/6f7b0a2a5c0fb03be7c25bd1745baa50582348ef/futex-wait-requeue-pi
 * @description linux-6f7b0a2a5c0fb03be7c25bd1745baa50582348ef-kernel/futex.c-futex_wait_requeue_pi CVE-2012-6647
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vuaddr2_2265, Parameter vuaddr_2263, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vuaddr_2263
	and target_0.getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vuaddr2_2265
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vuaddr2_2265, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_futex_key")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vuaddr2_2265
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("futex_key")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="1"
}

predicate func_3(Parameter vuaddr_2263, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("futex_wait_setup")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vuaddr_2263
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("futex_q")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("futex_hash_bucket *")
}

from Function func, Parameter vuaddr2_2265, Parameter vuaddr_2263, IfStmt target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vuaddr2_2265, vuaddr_2263, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vuaddr2_2265, target_2)
and func_3(vuaddr_2263, target_3)
and vuaddr2_2265.getType().hasName("u32 *")
and vuaddr_2263.getType().hasName("u32 *")
and vuaddr2_2265.getFunction() = func
and vuaddr_2263.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
