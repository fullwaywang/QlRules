/**
 * @name curl-8c7ee9083d0d71-post_per_transfer
 * @id cpp/curl/8c7ee9083d0d71/post-per-transfer
 * @description curl-8c7ee9083d0d71-src/tool_operate.c-post_per_transfer CVE-2022-27778
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
		target_0.getValue()="Removing output file: %s"
		and not target_0.getValue()="Removing output file: %s\n"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vper_332, ValueFieldAccess target_5, ExprStmt target_6, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="outfile"
		and target_1.getQualifier().(VariableAccess).getTarget()=vper_332
		and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(VariableAccess).getLocation())
		and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_2(Parameter vper_332, ExprStmt target_7, ExprStmt target_8, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="outfile"
		and target_2.getQualifier().(VariableAccess).getTarget()=vper_332
		and target_7.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(VariableAccess).getLocation())
		and target_2.getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_5(Parameter vper_332, ValueFieldAccess target_5) {
		target_5.getTarget().getName()="out"
		and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="progressbar"
		and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vper_332
}

predicate func_6(Parameter vper_332, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("unlink")
		and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="outfile"
		and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vper_332
}

predicate func_7(Parameter vper_332, ExprStmt target_7) {
		target_7.getExpr().(FunctionCall).getTarget().hasName("notef")
		and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("GlobalConfig *")
		and target_7.getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
		and target_7.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="outfile"
		and target_7.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vper_332
}

predicate func_8(Parameter vper_332, ExprStmt target_8) {
		target_8.getExpr().(FunctionCall).getTarget().hasName("ourWriteOut")
		and target_8.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="writeout"
		and target_8.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("OperationConfig *")
		and target_8.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vper_332
		and target_8.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("CURLcode")
}

from Function func, Parameter vper_332, StringLiteral target_0, PointerFieldAccess target_1, PointerFieldAccess target_2, ValueFieldAccess target_5, ExprStmt target_6, ExprStmt target_7, ExprStmt target_8
where
func_0(func, target_0)
and func_1(vper_332, target_5, target_6, target_1)
and func_2(vper_332, target_7, target_8, target_2)
and func_5(vper_332, target_5)
and func_6(vper_332, target_6)
and func_7(vper_332, target_7)
and func_8(vper_332, target_8)
and vper_332.getType().hasName("per_transfer *")
and vper_332.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
