/**
 * @name v8-6ee30110784ce616191dee2f3970249d57a77891-v8__internal__WasmInstanceObject__New
 * @id cpp/v8/6ee30110784ce616191dee2f3970249d57a77891/v8internalwasminstanceobjectnew
 * @description v8-6ee30110784ce616191dee2f3970249d57a77891-src/wasm/wasm-objects.cc-v8__internal__WasmInstanceObject__New CVE-2023-2033
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter visolate_1125, ConstructorCall target_4) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("cast")
	and target_0.getArgument(0).(FunctionCall).getTarget().hasName("empty_byte_array")
	and target_0.getArgument(0).(FunctionCall).getQualifier().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_1125
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_indirect_function_table_sig_ids")
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("Handle<WasmInstanceObject>")
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof Literal
	and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(FunctionCall).getQualifier().(ConstructorCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter visolate_1125, OverloadedPointerDereferenceExpr target_5) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("cast")
	and target_1.getArgument(0).(FunctionCall).getTarget().hasName("empty_byte_array")
	and target_1.getArgument(0).(FunctionCall).getQualifier().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_1125
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_indirect_function_table_targets")
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("Handle<WasmInstanceObject>")
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof Literal
	and target_1.getArgument(0).(FunctionCall).getQualifier().(ConstructorCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Parameter visolate_1125, ConstructorCall target_4) {
	target_4.getArgument(0).(VariableAccess).getTarget()=visolate_1125
}

predicate func_5(Parameter visolate_1125, OverloadedPointerDereferenceExpr target_5) {
	target_5.getQualifier().(FunctionCall).getTarget().hasName("native_context")
	and target_5.getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=visolate_1125
}

from Function func, Parameter visolate_1125, ConstructorCall target_4, OverloadedPointerDereferenceExpr target_5
where
not func_0(visolate_1125, target_4)
and not func_1(visolate_1125, target_5)
and func_4(visolate_1125, target_4)
and func_5(visolate_1125, target_5)
and visolate_1125.getType().hasName("Isolate *")
and visolate_1125.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
