/**
 * @name openssl-b9a73f5481fb8d5aac535622759cb0f632f39914-OBJ_obj2txt
 * @id cpp/openssl/b9a73f5481fb8d5aac535622759cb0f632f39914/obj-obj2txt
 * @description openssl-b9a73f5481fb8d5aac535622759cb0f632f39914-crypto/objects/obj_dat.c-OBJ_obj2txt CVE-2014-3508
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_439, BlockStmt target_15, ExprStmt target_8) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vbuf_439
		and target_0.getAnOperand() instanceof RelationalOperation
		and target_0.getParent().(IfStmt).getThen()=target_15
		and target_0.getAnOperand().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getLocation()))
}

predicate func_1(Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition() instanceof LogicalOrExpr
		and target_1.getThen() instanceof ReturnStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1)
}

predicate func_2(Parameter vbuf_len_439, Parameter vbuf_439, BlockStmt target_16, ExprStmt target_17, LogicalAndExpr target_7) {
	exists(LogicalAndExpr target_2 |
		target_2.getAnOperand().(VariableAccess).getTarget()=vbuf_439
		and target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vbuf_len_439
		and target_2.getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="1"
		and target_2.getParent().(IfStmt).getThen()=target_16
		and target_17.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
		and target_2.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_7.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vbuf_439, LogicalOrExpr target_6, ExprStmt target_8, IfStmt target_18) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbuf_439
		and target_3.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_8.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_3.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_18.getCondition().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vbuf_len_439, BlockStmt target_19, ExprStmt target_11, RelationalOperation target_12) {
	exists(RelationalOperation target_4 |
		 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
		and target_4.getGreaterOperand().(VariableAccess).getTarget()=vbuf_len_439
		and target_4.getLesserOperand().(Literal).getValue()="1"
		and target_4.getParent().(IfStmt).getThen()=target_19
		and target_11.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getGreaterOperand().(VariableAccess).getLocation())
		and target_4.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_12.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_5(Parameter vbuf_439, LogicalAndExpr target_7, ExprStmt target_10, IfStmt target_20) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbuf_439
		and target_5.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_5
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
		and target_10.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_20.getCondition().(VariableAccess).getLocation()))
}

predicate func_6(Parameter va_439, BlockStmt target_15, LogicalOrExpr target_6) {
		target_6.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=va_439
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="data"
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=va_439
		and target_6.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_6.getParent().(IfStmt).getThen()=target_15
}

predicate func_7(Parameter vbuf_len_439, Parameter vbuf_439, BlockStmt target_16, LogicalAndExpr target_7) {
		target_7.getAnOperand().(VariableAccess).getTarget()=vbuf_439
		and target_7.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vbuf_len_439
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
		and target_7.getParent().(IfStmt).getThen()=target_16
}

predicate func_8(Parameter vbuf_439, LogicalOrExpr target_6, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vbuf_439
		and target_8.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
		and target_8.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
		and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_9(LogicalOrExpr target_6, Function func, ReturnStmt target_9) {
		target_9.getExpr().(Literal).getValue()="0"
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vi_441, Parameter vbuf_439, LogicalAndExpr target_7, ExprStmt target_10) {
		target_10.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vbuf_439
		and target_10.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vi_441
		and target_10.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(CharLiteral).getValue()="48"
		and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_11(Parameter vbuf_len_439, LogicalAndExpr target_7, ExprStmt target_11) {
		target_11.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vbuf_len_439
		and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_12(Parameter vbuf_len_439, BlockStmt target_19, RelationalOperation target_12) {
		 (target_12 instanceof GTExpr or target_12 instanceof LTExpr)
		and target_12.getGreaterOperand().(VariableAccess).getTarget()=vbuf_len_439
		and target_12.getLesserOperand().(Literal).getValue()="0"
		and target_12.getParent().(IfStmt).getThen()=target_19
}

predicate func_13(Parameter vbuf_439, RelationalOperation target_12, ExprStmt target_13) {
		target_13.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vbuf_439
		and target_13.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="46"
		and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
}

predicate func_14(Parameter vbuf_len_439, RelationalOperation target_12, ExprStmt target_14) {
		target_14.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vbuf_len_439
		and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
}

predicate func_15(Function func, BlockStmt target_15) {
		target_15.getStmt(0) instanceof ExprStmt
		and target_15.getStmt(1) instanceof ReturnStmt
		and target_15.getEnclosingFunction() = func
}

predicate func_16(Function func, BlockStmt target_16) {
		target_16.getStmt(0) instanceof ExprStmt
		and target_16.getStmt(1) instanceof ExprStmt
		and target_16.getEnclosingFunction() = func
}

predicate func_17(Parameter vbuf_len_439, Parameter vbuf_439, ExprStmt target_17) {
		target_17.getExpr().(FunctionCall).getTarget().hasName("BUF_strlcpy")
		and target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbuf_439
		and target_17.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
		and target_17.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vbuf_len_439
}

predicate func_18(Parameter vbuf_len_439, Parameter vbuf_439, IfStmt target_18) {
		target_18.getCondition().(VariableAccess).getTarget()=vbuf_439
		and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("BUF_strlcpy")
		and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbuf_439
		and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
		and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vbuf_len_439
}

predicate func_19(Function func, BlockStmt target_19) {
		target_19.getStmt(0) instanceof ExprStmt
		and target_19.getStmt(1) instanceof ExprStmt
		and target_19.getEnclosingFunction() = func
}

predicate func_20(Parameter vbuf_len_439, Parameter vbuf_439, IfStmt target_20) {
		target_20.getCondition().(VariableAccess).getTarget()=vbuf_439
		and target_20.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition() instanceof RelationalOperation
		and target_20.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen() instanceof BlockStmt
		and target_20.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("BUF_strlcpy")
		and target_20.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbuf_439
		and target_20.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("char *")
		and target_20.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vbuf_len_439
}

from Function func, Parameter vbuf_len_439, Parameter va_439, Variable vi_441, Parameter vbuf_439, LogicalOrExpr target_6, LogicalAndExpr target_7, ExprStmt target_8, ReturnStmt target_9, ExprStmt target_10, ExprStmt target_11, RelationalOperation target_12, ExprStmt target_13, ExprStmt target_14, BlockStmt target_15, BlockStmt target_16, ExprStmt target_17, IfStmt target_18, BlockStmt target_19, IfStmt target_20
where
not func_0(vbuf_439, target_15, target_8)
and not func_1(func)
and not func_2(vbuf_len_439, vbuf_439, target_16, target_17, target_7)
and not func_3(vbuf_439, target_6, target_8, target_18)
and not func_4(vbuf_len_439, target_19, target_11, target_12)
and not func_5(vbuf_439, target_7, target_10, target_20)
and func_6(va_439, target_15, target_6)
and func_7(vbuf_len_439, vbuf_439, target_16, target_7)
and func_8(vbuf_439, target_6, target_8)
and func_9(target_6, func, target_9)
and func_10(vi_441, vbuf_439, target_7, target_10)
and func_11(vbuf_len_439, target_7, target_11)
and func_12(vbuf_len_439, target_19, target_12)
and func_13(vbuf_439, target_12, target_13)
and func_14(vbuf_len_439, target_12, target_14)
and func_15(func, target_15)
and func_16(func, target_16)
and func_17(vbuf_len_439, vbuf_439, target_17)
and func_18(vbuf_len_439, vbuf_439, target_18)
and func_19(func, target_19)
and func_20(vbuf_len_439, vbuf_439, target_20)
and vbuf_len_439.getType().hasName("int")
and va_439.getType().hasName("const ASN1_OBJECT *")
and vi_441.getType().hasName("int")
and vbuf_439.getType().hasName("char *")
and vbuf_len_439.getFunction() = func
and va_439.getFunction() = func
and vi_441.(LocalVariable).getFunction() = func
and vbuf_439.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
