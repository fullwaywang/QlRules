/**
 * @name linux-4d8df8cbb9156b0a0ab3f802b80cb5db57acc0bf-ib_prctl_set
 * @id cpp/linux/4d8df8cbb9156b0a0ab3f802b80cb5db57acc0bf/ib-prctl-set
 * @description linux-4d8df8cbb9156b0a0ab3f802b80cb5db57acc0bf-arch/x86/kernel/cpu/bugs.c-ib_prctl_set CVE-2020-10768
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vspectre_v2_user_ibpb, Variable vspectre_v2_user_stibp, Parameter vtask_1169, ReturnStmt target_2, LogicalAndExpr target_3, LogicalOrExpr target_1, ExprStmt target_4) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_ibpb
		and target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_stibp
		and target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_stibp
		and target_0.getAnOperand().(FunctionCall).getTarget().hasName("task_spec_ib_force_disable")
		and target_0.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_1169
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_3.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vspectre_v2_user_ibpb, Variable vspectre_v2_user_stibp, ReturnStmt target_2, LogicalOrExpr target_1) {
		target_1.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_ibpb
		and target_1.getAnOperand().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_stibp
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_stibp
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(LogicalOrExpr target_1, Function func, ReturnStmt target_2) {
		target_2.getExpr().(UnaryMinusExpr).getValue()="-1"
		and target_2.getParent().(IfStmt).getCondition()=target_1
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vspectre_v2_user_ibpb, Variable vspectre_v2_user_stibp, ReturnStmt target_5, LogicalAndExpr target_3) {
		target_3.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_ibpb
		and target_3.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vspectre_v2_user_stibp
		and target_3.getParent().(IfStmt).getThen()=target_5
}

predicate func_4(Parameter vtask_1169, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("task_clear_spec_ib_disable")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_1169
}

predicate func_5(LogicalAndExpr target_3, Function func, ReturnStmt target_5) {
		target_5.getExpr().(Literal).getValue()="0"
		and target_5.getParent().(IfStmt).getCondition()=target_3
		and target_5.getEnclosingFunction() = func
}

from Function func, Variable vspectre_v2_user_ibpb, Variable vspectre_v2_user_stibp, Parameter vtask_1169, LogicalOrExpr target_1, ReturnStmt target_2, LogicalAndExpr target_3, ExprStmt target_4, ReturnStmt target_5
where
not func_0(vspectre_v2_user_ibpb, vspectre_v2_user_stibp, vtask_1169, target_2, target_3, target_1, target_4)
and func_1(vspectre_v2_user_ibpb, vspectre_v2_user_stibp, target_2, target_1)
and func_2(target_1, func, target_2)
and func_3(vspectre_v2_user_ibpb, vspectre_v2_user_stibp, target_5, target_3)
and func_4(vtask_1169, target_4)
and func_5(target_3, func, target_5)
and vspectre_v2_user_ibpb.getType().hasName("spectre_v2_user_mitigation")
and vspectre_v2_user_stibp.getType().hasName("spectre_v2_user_mitigation")
and vtask_1169.getType().hasName("task_struct *")
and not vspectre_v2_user_ibpb.getParentScope+() = func
and not vspectre_v2_user_stibp.getParentScope+() = func
and vtask_1169.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
