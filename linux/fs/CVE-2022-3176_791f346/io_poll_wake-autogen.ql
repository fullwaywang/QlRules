/**
 * @name linux-791f3465c4afde02d7f16cf7424ca87070b69396-io_poll_wake
 * @id cpp/linux/791f3465c4afde02d7f16cf7424ca87070b69396/io-poll-wake
 * @description linux-791f3465c4afde02d7f16cf7424ca87070b69396-fs/io_uring.c-io_poll_wake CVE-2022-3176
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreq_5616, Variable vmask_5619, IfStmt target_1, FunctionCall target_3, LogicalAndExpr target_5, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vmask_5619
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="16384"
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("io_poll_mark_cancelled")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_5616
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("io_poll_execute")
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_5616
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del_init")
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="entry"
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="wait"
	and target_0.getThen().(BlockStmt).getStmt(3).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(3).(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(3).(DoStmt).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(4).(ReturnStmt).getExpr().(Literal).getValue()="1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vmask_5619, IfStmt target_1) {
	target_1.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vmask_5619
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vmask_5619
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="events"
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("io_poll_iocb *")
	and target_1.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
}

predicate func_3(Variable vreq_5616, FunctionCall target_3) {
	target_3.getTarget().hasName("io_poll_get_ownership")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vreq_5616
}

predicate func_5(Variable vmask_5619, LogicalAndExpr target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vmask_5619
	and target_5.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vmask_5619
	and target_5.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="events"
	and target_5.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("io_poll_iocb *")
}

from Function func, Variable vreq_5616, Variable vmask_5619, IfStmt target_1, FunctionCall target_3, LogicalAndExpr target_5
where
not func_0(vreq_5616, vmask_5619, target_1, target_3, target_5, func)
and func_1(vmask_5619, target_1)
and func_3(vreq_5616, target_3)
and func_5(vmask_5619, target_5)
and vreq_5616.getType().hasName("io_kiocb *")
and vmask_5619.getType().hasName("__poll_t")
and vreq_5616.(LocalVariable).getFunction() = func
and vmask_5619.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
