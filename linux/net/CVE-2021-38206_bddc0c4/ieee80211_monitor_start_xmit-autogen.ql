/**
 * @name linux-bddc0c411a45d3718ac535a070f349be8eca8d48-ieee80211_monitor_start_xmit
 * @id cpp/linux/bddc0c411a45d3718ac535a070f349be8eca8d48/ieee80211-monitor-start-xmit
 * @description linux-bddc0c411a45d3718ac535a070f349be8eca8d48-net/mac80211/tx.c-ieee80211_monitor_start_xmit CVE-2021-38206
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_2224, Parameter vskb_2223, ExprStmt target_2, IfStmt target_0) {
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ieee80211_parse_tx_radiotap")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_2223
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdev_2224
	and target_0.getThen().(GotoStmt).getName() ="fail"
	and target_0.getLocation().isBefore(target_2.getLocation())
}

predicate func_1(Parameter vskb_2223, ExprStmt target_2, FunctionCall target_3, NotExpr target_4, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ieee80211_validate_radiotap_len")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_2223
	and target_1.getThen().(GotoStmt).getName() ="fail"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vskb_2223, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u16")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ieee80211_get_radiotap_len")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="data"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_2223
}

predicate func_3(Parameter vskb_2223, FunctionCall target_3) {
	target_3.getTarget().hasName("IEEE80211_SKB_CB")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vskb_2223
}

predicate func_4(Parameter vdev_2224, Parameter vskb_2223, NotExpr target_4) {
	target_4.getOperand().(FunctionCall).getTarget().hasName("ieee80211_parse_tx_radiotap")
	and target_4.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_2223
	and target_4.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdev_2224
}

from Function func, Parameter vdev_2224, Parameter vskb_2223, IfStmt target_0, ExprStmt target_2, FunctionCall target_3, NotExpr target_4
where
func_0(vdev_2224, vskb_2223, target_2, target_0)
and not func_1(vskb_2223, target_2, target_3, target_4, func)
and func_2(vskb_2223, target_2)
and func_3(vskb_2223, target_3)
and func_4(vdev_2224, vskb_2223, target_4)
and vdev_2224.getType().hasName("net_device *")
and vskb_2223.getType().hasName("sk_buff *")
and vdev_2224.getFunction() = func
and vskb_2223.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
