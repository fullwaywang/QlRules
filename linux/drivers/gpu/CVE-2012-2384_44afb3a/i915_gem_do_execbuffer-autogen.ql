/**
 * @name linux-44afb3a04391a74309d16180d1e4f8386fdfa745-i915_gem_do_execbuffer
 * @id cpp/linux/44afb3a04391a74309d16180d1e4f8386fdfa745/i915-gem-do-execbuffer
 * @description linux-44afb3a04391a74309d16180d1e4f8386fdfa745-drivers/gpu/drm/i915/i915_gem_execbuffer.c-i915_gem_do_execbuffer CVE-2012-2384
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vargs_1052, Variable v__func__, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="num_cliprects"
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vargs_1052
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(DivExpr).getValue()="536870911"
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("drm_ut_debug_printk")
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="1"
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="drm"
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=v__func__
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(StringLiteral).getValue()="execbuf with %u cliprects\n"
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="num_cliprects"
		and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vargs_1052, EqualityOperation target_1) {
		target_1.getAnOperand().(PointerFieldAccess).getTarget().getName()="num_cliprects"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vargs_1052
		and target_1.getAnOperand().(Literal).getValue()="0"
}

predicate func_2(Variable v__func__, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("drm_ut_debug_printk")
		and target_2.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="1"
		and target_2.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="drm"
		and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=v__func__
		and target_2.getExpr().(FunctionCall).getArgument(3).(StringLiteral).getValue()="clip rectangles are only valid with the render ring\n"
}

predicate func_3(Variable v__func__, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("drm_ut_debug_printk")
		and target_3.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="1"
		and target_3.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="drm"
		and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=v__func__
		and target_3.getExpr().(FunctionCall).getArgument(3).(StringLiteral).getValue()="Invalid object handle %d at index %d\n"
		and target_3.getExpr().(FunctionCall).getArgument(4).(ValueFieldAccess).getTarget().getName()="handle"
		and target_3.getExpr().(FunctionCall).getArgument(4).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("drm_i915_gem_exec_object2 *")
		and target_3.getExpr().(FunctionCall).getArgument(4).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vargs_1052, Variable v__func__, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vargs_1052, v__func__, target_1, target_2, target_3)
and func_1(vargs_1052, target_1)
and func_2(v__func__, target_2)
and func_3(v__func__, target_3)
and vargs_1052.getType().hasName("drm_i915_gem_execbuffer2 *")
and v__func__.getType() instanceof ArrayType
and vargs_1052.getFunction() = func
and not v__func__.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
