/**
 * @name linux-07e6124a1a46b4b5a9b3cacc0c306b50da87abf5-set_selection_kernel
 * @id cpp/linux/07e6124a1a46b4b5a9b3cacc0c306b50da87abf5/set-selection-kernel
 * @description linux-07e6124a1a46b4b5a9b3cacc0c306b50da87abf5-drivers/tty/vt/selection.c-set_selection_kernel CVE-2020-8648
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(IfStmt target_18, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and target_1.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_18.getLocation()))
}

predicate func_2(PointerFieldAccess target_19, Function func) {
exists(GotoStmt target_2 |
	target_2.getName() ="unlock"
	and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_19
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(PointerFieldAccess target_19, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_19
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(PointerFieldAccess target_19, Function func) {
exists(GotoStmt target_4 |
	target_4.getName() ="unlock"
	and target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_19
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(EqualityOperation target_20, Function func) {
exists(GotoStmt target_5 |
	target_5.getName() ="unlock"
	and target_5.getParent().(IfStmt).getCondition()=target_20
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(NotExpr target_21, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_6
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_21
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(NotExpr target_21, Function func) {
exists(GotoStmt target_7 |
	target_7.getName() ="unlock"
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_7
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_21
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(Function func) {
exists(ExprStmt target_8 |
	target_8.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
	and target_8.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_10(Function func, UnaryMinusExpr target_10) {
	target_10.getValue()="-22"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, UnaryMinusExpr target_11) {
	target_11.getValue()="-12"
	and target_11.getEnclosingFunction() = func
}

predicate func_14(PointerFieldAccess target_19, Function func, ReturnStmt target_14) {
	target_14.getExpr() instanceof UnaryMinusExpr
	and target_14.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_19
	and target_14.getEnclosingFunction() = func
}

predicate func_15(EqualityOperation target_20, Function func, ReturnStmt target_15) {
	target_15.getExpr() instanceof Literal
	and target_15.getParent().(IfStmt).getCondition()=target_20
	and target_15.getEnclosingFunction() = func
}

predicate func_16(NotExpr target_21, Function func, ReturnStmt target_16) {
	target_16.getExpr() instanceof UnaryMinusExpr
	and target_16.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_21
	and target_16.getEnclosingFunction() = func
}

predicate func_17(Function func, ReturnStmt target_17) {
	target_17.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
}

predicate func_18(Function func, IfStmt target_18) {
	target_18.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("vc_data *")
	and target_18.getCondition().(EqualityOperation).getRightOperand().(ValueFieldAccess).getTarget().getName()="d"
	and target_18.getCondition().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_18.getCondition().(EqualityOperation).getRightOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_18.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("clear_selection")
	and target_18.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("vc_data *")
	and target_18.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="d"
	and target_18.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_18.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_18.getEnclosingFunction() = func
}

predicate func_19(Function func, PointerFieldAccess target_19) {
	target_19.getTarget().getName()="sel_mode"
	and target_19.getQualifier().(VariableAccess).getTarget().getType().hasName("tiocl_selection *")
	and target_19.getEnclosingFunction() = func
}

predicate func_20(ReturnStmt target_15, Function func, EqualityOperation target_20) {
	target_20.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_20.getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_20.getParent().(IfStmt).getThen()=target_15
	and target_20.getEnclosingFunction() = func
}

predicate func_21(Function func, NotExpr target_21) {
	target_21.getOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_21.getEnclosingFunction() = func
}

from Function func, UnaryMinusExpr target_10, UnaryMinusExpr target_11, ReturnStmt target_14, ReturnStmt target_15, ReturnStmt target_16, ReturnStmt target_17, IfStmt target_18, PointerFieldAccess target_19, EqualityOperation target_20, NotExpr target_21
where
not func_1(target_18, func)
and not func_2(target_19, func)
and not func_3(target_19, func)
and not func_4(target_19, func)
and not func_5(target_20, func)
and not func_6(target_21, func)
and not func_7(target_21, func)
and not func_8(func)
and func_10(func, target_10)
and func_11(func, target_11)
and func_14(target_19, func, target_14)
and func_15(target_20, func, target_15)
and func_16(target_21, func, target_16)
and func_17(func, target_17)
and func_18(func, target_18)
and func_19(func, target_19)
and func_20(target_15, func, target_20)
and func_21(func, target_21)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
