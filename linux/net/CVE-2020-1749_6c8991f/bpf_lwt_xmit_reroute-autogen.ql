/**
 * @name linux-6c8991f41546c3c472503dff1ea9daaddf9331c2-bpf_lwt_xmit_reroute
 * @id cpp/linux/6c8991f41546c3c472503dff1ea9daaddf9331c2/bpf-lwt-xmit-reroute
 * @description linux-6c8991f41546c3c472503dff1ea9daaddf9331c2-net/core/lwt_bpf.c-bpf_lwt_xmit_reroute CVE-2020-1749
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vipv6_stub, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="ipv6_dst_lookup"
	and target_0.getQualifier().(VariableAccess).getTarget()=vipv6_stub
}

predicate func_1(Variable vdst_179, Variable vnet_182, Variable vipv6_stub, FunctionCall target_9) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getTarget()=vdst_179
	and target_1.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup_flow"
	and target_1.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
	and target_1.getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vnet_182
	and target_1.getRValue().(VariableCall).getArgument(1) instanceof ValueFieldAccess
	and target_1.getRValue().(VariableCall).getArgument(2) instanceof AddressOfExpr
	and target_1.getRValue().(VariableCall).getArgument(3).(Literal).getValue()="0"
	and target_1.getLValue().(VariableAccess).getLocation().isBefore(target_9.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vskb_175, ValueFieldAccess target_2) {
	target_2.getTarget().getName()="sk"
	and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_175
}

predicate func_3(Variable verr_180, FunctionCall target_3) {
	target_3.getTarget().hasName("__builtin_expect")
	and target_3.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_180
	and target_3.getArgument(1).(Literal).getValue()="0"
	and target_3.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_4(Variable vfl6_223, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vfl6_223
	and target_4.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_5(Variable vnet_182, VariableAccess target_5) {
	target_5.getTarget()=vnet_182
	and target_5.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_6(Variable vdst_179, VariableAccess target_6) {
	target_6.getTarget()=vdst_179
	and target_6.getParent().(AddressOfExpr).getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_7(Variable vdst_179, Variable verr_180, Variable vnet_182, Variable vipv6_stub, AssignExpr target_7) {
	target_7.getLValue().(VariableAccess).getTarget()=verr_180
	and target_7.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup"
	and target_7.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
	and target_7.getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vnet_182
	and target_7.getRValue().(VariableCall).getArgument(1) instanceof ValueFieldAccess
	and target_7.getRValue().(VariableCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdst_179
	and target_7.getRValue().(VariableCall).getArgument(3) instanceof AddressOfExpr
}

predicate func_8(VariableAccess target_10, Function func, IfStmt target_8) {
	target_8.getCondition() instanceof FunctionCall
	and target_8.getThen().(GotoStmt).getName() ="err"
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vdst_179, FunctionCall target_9) {
	target_9.getTarget().hasName("IS_ERR")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vdst_179
}

predicate func_10(Variable vipv4_183, VariableAccess target_10) {
	target_10.getTarget()=vipv4_183
}

from Function func, Parameter vskb_175, Variable vdst_179, Variable verr_180, Variable vnet_182, Variable vipv4_183, Variable vfl6_223, Variable vipv6_stub, PointerFieldAccess target_0, ValueFieldAccess target_2, FunctionCall target_3, AddressOfExpr target_4, VariableAccess target_5, VariableAccess target_6, AssignExpr target_7, IfStmt target_8, FunctionCall target_9, VariableAccess target_10
where
func_0(vipv6_stub, target_0)
and not func_1(vdst_179, vnet_182, vipv6_stub, target_9)
and func_2(vskb_175, target_2)
and func_3(verr_180, target_3)
and func_4(vfl6_223, target_4)
and func_5(vnet_182, target_5)
and func_6(vdst_179, target_6)
and func_7(vdst_179, verr_180, vnet_182, vipv6_stub, target_7)
and func_8(target_10, func, target_8)
and func_9(vdst_179, target_9)
and func_10(vipv4_183, target_10)
and vskb_175.getType().hasName("sk_buff *")
and vdst_179.getType().hasName("dst_entry *")
and verr_180.getType().hasName("int")
and vnet_182.getType().hasName("net *")
and vipv4_183.getType().hasName("bool")
and vfl6_223.getType().hasName("flowi6")
and vipv6_stub.getType().hasName("const ipv6_stub *")
and vskb_175.getFunction() = func
and vdst_179.(LocalVariable).getFunction() = func
and verr_180.(LocalVariable).getFunction() = func
and vnet_182.(LocalVariable).getFunction() = func
and vipv4_183.(LocalVariable).getFunction() = func
and vfl6_223.(LocalVariable).getFunction() = func
and not vipv6_stub.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
