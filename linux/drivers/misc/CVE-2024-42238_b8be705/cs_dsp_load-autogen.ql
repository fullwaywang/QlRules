/**
 * @name linux-b8be70566b33abbd0180105070b4c67cfef8c44f-cs_dsp_load
 * @id cpp/linux/b8be70566b33abbd0180105070b4c67cfef8c44f/cs-dsp-load
 * @description linux-b8be70566b33abbd0180105070b4c67cfef8c44f-drivers/firmware/cirrus/cs_dsp.c-cs_dsp_load CVE-2024-42238
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_1302, ExprStmt target_5, ExprStmt target_6) {
exists(IfStmt target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		obj_0.getGreaterOperand() instanceof SizeofExprOperator
		and obj_0.getLesserOperand() instanceof SubExpr
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLValue().(VariableAccess).getTarget()=vret_1302
				and obj_3.getRValue().(UnaryMinusExpr).getValue()="-75"
			)
		)
		and obj_1.getStmt(1).(GotoStmt).getName() ="out_fw"
	)
	and target_0.getLocation().isBefore(target_5.getLocation())
	and target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, SizeofExprOperator target_1) {
	target_1.getValue()="8"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vfirmware_1287, Variable vpos_1292, SubExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getLeftOperand() |
		obj_0.getTarget().getName()="size"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfirmware_1287
	)
	and target_2.getRightOperand().(VariableAccess).getTarget()=vpos_1292
}

predicate func_3(Parameter vfirmware_1287, Variable vpos_1292, RelationalOperation target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getGreaterOperand() |
		obj_0.getTarget().getName()="size"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfirmware_1287
	)
	and  (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget()=vpos_1292
	and target_3.getParent().(LogicalAndExpr).getRightOperand() instanceof RelationalOperation
}

predicate func_4(Function func, LogicalAndExpr target_4) {
	exists(RelationalOperation obj_0 | obj_0=target_4.getRightOperand() |
		obj_0.getLesserOperand() instanceof SizeofExprOperator
		and obj_0.getGreaterOperand() instanceof SubExpr
	)
	and target_4.getLeftOperand() instanceof RelationalOperation
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vfirmware_1287, Variable vpos_1292, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					obj_3.getTarget().getName()="data"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vfirmware_1287
				)
				and obj_2.getArrayOffset().(VariableAccess).getTarget()=vpos_1292
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("const wmfw_region *")
	)
}

predicate func_6(Variable vret_1302, EqualityOperation target_7, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vret_1302
		and obj_0.getRValue().(UnaryMinusExpr).getValue()="-75"
	)
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_7(Variable vpos_1292, EqualityOperation target_7) {
	exists(PointerFieldAccess obj_0 | obj_0=target_7.getLeftOperand() |
		obj_0.getTarget().getName()="len"
		and obj_0.getQualifier().(VariableAccess).getTarget().getType().hasName("const wmfw_header *")
	)
	and target_7.getRightOperand().(VariableAccess).getTarget()=vpos_1292
}

from Function func, Parameter vfirmware_1287, Variable vpos_1292, Variable vret_1302, SizeofExprOperator target_1, SubExpr target_2, RelationalOperation target_3, LogicalAndExpr target_4, ExprStmt target_5, ExprStmt target_6, EqualityOperation target_7
where
not func_0(vret_1302, target_5, target_6)
and func_1(func, target_1)
and func_2(vfirmware_1287, vpos_1292, target_2)
and func_3(vfirmware_1287, vpos_1292, target_3)
and func_4(func, target_4)
and func_5(vfirmware_1287, vpos_1292, target_5)
and func_6(vret_1302, target_7, target_6)
and func_7(vpos_1292, target_7)
and vfirmware_1287.getType().hasName("const firmware *")
and vpos_1292.getType().hasName("unsigned int")
and vret_1302.getType().hasName("int")
and vfirmware_1287.getFunction() = func
and vpos_1292.(LocalVariable).getFunction() = func
and vret_1302.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
