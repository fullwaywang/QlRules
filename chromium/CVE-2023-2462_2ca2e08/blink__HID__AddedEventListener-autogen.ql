/**
 * @name chromium-2ca2e08e92a6bc67d23517c4ae8efbd0cfa2e8fe-blink__HID__AddedEventListener
 * @id cpp/chromium/2ca2e08e92a6bc67d23517c4ae8efbd0cfa2e8fe/blinkhidaddedeventlistener
 * @description chromium-2ca2e08e92a6bc67d23517c4ae8efbd0cfa2e8fe-third_party/blink/renderer/modules/hid/hid.cc-blink__HID__AddedEventListener CVE-2023-2462
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcontext_127, FunctionCall target_0) {
	target_0.getTarget().hasName("IsFeatureEnabled")
	and not target_0.getTarget().hasName("ShouldBlockHidServiceCall")
	and target_0.getQualifier().(VariableAccess).getTarget()=vcontext_127
}

predicate func_1(Function func) {
exists(FunctionCall target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getQualifier() |
		obj_0.getTarget().hasName("GetSupplementable")
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	)
	and target_1.getTarget().hasName("DomWindow")
	and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
	and target_1.getEnclosingFunction() = func
)
}

predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("GetExecutionContext")
	and target_3.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, DeclStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vcontext_127, LogicalOrExpr target_5) {
	target_5.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vcontext_127
	and target_5.getRightOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_5.getParent().(IfStmt).getThen().(BlockStmt).getStmt(0) instanceof ReturnStmt
}

from Function func, Variable vcontext_127, FunctionCall target_0, FunctionCall target_3, DeclStmt target_4, LogicalOrExpr target_5
where
func_0(vcontext_127, target_0)
and not func_1(func)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(vcontext_127, target_5)
and vcontext_127.getType().hasName("ExecutionContext *")
and vcontext_127.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
