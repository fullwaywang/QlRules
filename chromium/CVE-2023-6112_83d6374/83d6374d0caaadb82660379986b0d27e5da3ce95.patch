commit 83d6374d0caaadb82660379986b0d27e5da3ce95	83d6374d0caaadb82660379986b0d27e5da3ce95
Author: Yoshisato Yanagisawa <yyanagisawa@chromium.org>
Date:   Tue Nov 7 02:56:57 2023 +0000

    Use WeakPointer for the loader fallback callback.
    
    `MaybeStartLoader` binds an unretained pointer to
    `FallbackToNonInterceptedRequest`, which is passed through a series of
    objects until it reaches `ServiceWorkerMainResourceLoader`.
    
    When "network" or "cache" is selected as a ServiceWorker static
    routing API's source and caused the network fallback, the unretained
    pointer can be released and may cause use-after-free.
    
    This CL changes the unretained pointer to a weak pointer to avoid that.
    For the consistency of the function call, both of the callbacks
    starts to use weak pointers.
    
    Bug: 1499298
    Change-Id: I7e7c93fa389ab35584703f30bfc722eadeca81dd
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5004329
    Reviewed-by: Shunya Shishido <sisidovski@chromium.org>
    Reviewed-by: Minoru Chikamune <chikamune@chromium.org>
    Reviewed-by: Takashi Toyoshima <toyoshim@chromium.org>
    Commit-Queue: Yoshisato Yanagisawa <yyanagisawa@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1220697}

diff --git a/content/browser/loader/navigation_url_loader_impl.cc b/content/browser/loader/navigation_url_loader_impl.cc
index 6bdfbcad70836..29d041731c143 100644
--- a/content/browser/loader/navigation_url_loader_impl.cc
+++ b/content/browser/loader/navigation_url_loader_impl.cc
@@ -665,10 +665,10 @@ void NavigationURLLoaderImpl::MaybeStartLoader(
     next_interceptor->MaybeCreateLoader(
         *resource_request_, browser_context_,
         base::BindOnce(&NavigationURLLoaderImpl::MaybeStartLoader,
-                       base::Unretained(this), next_interceptor),
+                       weak_factory_.GetWeakPtr(), next_interceptor),
         base::BindOnce(
             &NavigationURLLoaderImpl::FallbackToNonInterceptedRequest,
-            base::Unretained(this)));
+            weak_factory_.GetWeakPtr()));
     return;
   }
 
