/**
 * @name linux-8dbcb3a8cfdf8ff5afce62dad50790278ff0d3b7-pac1934_read_raw
 * @id cpp/linux/8dbcb3a8cfdf8ff5afce62dad50790278ff0d3b7/pac1934-read-raw
 * @description linux-8dbcb3a8cfdf8ff5afce62dad50790278ff0d3b7-drivers/iio/adc/pac1934.c-pac1934_read_raw CVE-2024-38631
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchannel_788, ExprStmt target_1, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=vchannel_788
		and obj_0.getLesserOperand().(Literal).getValue()="4"
	)
	and exists(ExprStmt obj_1 | obj_1=target_0.getThen() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
			exists(SubExpr obj_3 | obj_3=obj_2.getRValue() |
				obj_3.getLeftOperand().(VariableAccess).getTarget()=vchannel_788
				and obj_3.getRightOperand().(Literal).getValue()="4"
			)
			and obj_2.getLValue().(VariableAccess).getTarget()=vchannel_788
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("pac1934_retrieve_data")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("pac1934_chip_info *")
			and obj_1.getArgument(1).(Literal).getValue()="1000"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vchannel_788, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="chip_reg_data"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("pac1934_chip_info *")
				)
				and obj_2.getTarget().getName()="vbus"
			)
			and obj_1.getArrayOffset().(VariableAccess).getTarget()=vchannel_788
		)
		and obj_0.getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int *")
	)
}

from Function func, Variable vchannel_788, ExprStmt target_1, ExprStmt target_3
where
not func_0(vchannel_788, target_1, target_3, func)
and func_1(func, target_1)
and func_3(vchannel_788, target_3)
and vchannel_788.getType().hasName("int")
and vchannel_788.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
