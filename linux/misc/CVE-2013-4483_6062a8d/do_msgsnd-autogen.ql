/**
 * @name linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-do_msgsnd
 * @id cpp/linux/6062a8dc0517bce23e3c2f7d2fea5e22411269a3/do-msgsnd
 * @description linux-6062a8dc0517bce23e3c2f7d2fea5e22411269a3-ipc/msg.c-do_msgsnd CVE-2013-4483
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_645, ExprStmt target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand() instanceof FunctionCall
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_645
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-43"
	and target_0.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out_unlock_free"
	and target_0.getLocation().isBefore(target_3.getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

/*predicate func_1(Variable verr_645, ExprStmt target_4) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getTarget()=verr_645
	and target_1.getRValue().(UnaryMinusExpr).getValue()="-43"
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getLValue().(VariableAccess).getLocation()))
}

*/
predicate func_2(Variable vmsq_643, FunctionCall target_2) {
	target_2.getTarget().hasName("ipc_rcu_getref")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vmsq_643
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr() instanceof FunctionCall
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable verr_645, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_645
	and target_4.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-11"
}

from Function func, Variable vmsq_643, Variable verr_645, FunctionCall target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(verr_645, target_3, target_4)
and func_2(vmsq_643, target_2)
and func_3(func, target_3)
and func_4(verr_645, target_4)
and vmsq_643.getType().hasName("msg_queue *")
and verr_645.getType().hasName("int")
and vmsq_643.(LocalVariable).getFunction() = func
and verr_645.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
