/**
 * @name linux-b166a20b07382b8bc1dcee2a448715c9c2c81b5b-sctp_destroy_sock
 * @id cpp/linux/b166a20b07382b8bc1dcee2a448715c9c2c81b5b/sctp-destroy-sock
 * @description linux-b166a20b07382b8bc1dcee2a448715c9c2c81b5b-net/sctp/socket.c-sctp_destroy_sock CVE-2021-23133
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_5017, PointerFieldAccess target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("spin_lock_bh")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="addr_wq_lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sctp"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("sock_net")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_5017
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_5017, PointerFieldAccess target_2, ExprStmt target_4) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_bh")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="addr_wq_lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sctp"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("sock_net")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_5017
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Function func, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="do_auto_asconf"
	and target_2.getQualifier().(VariableAccess).getTarget().getType().hasName("sctp_sock *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vsk_5017, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sctp_sock *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sctp_sk")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_5017
}

predicate func_4(Parameter vsk_5017, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("sk_sockets_allocated_dec")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_5017
}

from Function func, Parameter vsk_5017, PointerFieldAccess target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vsk_5017, target_2, target_3)
and not func_1(vsk_5017, target_2, target_4)
and func_2(func, target_2)
and func_3(vsk_5017, target_3)
and func_4(vsk_5017, target_4)
and vsk_5017.getType().hasName("sock *")
and vsk_5017.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
