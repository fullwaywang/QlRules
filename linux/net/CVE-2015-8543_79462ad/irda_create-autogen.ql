/**
 * @name linux-79462ad02e861803b3840cc782248c7359451cd9-irda_create
 * @id cpp/linux/79462ad02e861803b3840cc782248c7359451cd9/irda-create
 * @description linux-79462ad02e861803b3840cc782248c7359451cd9-net/irda/af_irda.c-irda_create CVE-2015-8543
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vprotocol_1083, IfStmt target_1, SwitchStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vprotocol_1083
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vprotocol_1083
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(ComplementExpr).getValue()="255"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("net *")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("net")
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-97"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vprotocol_1083, SwitchStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=vprotocol_1083
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ops"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("socket *")
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const proto_ops")
	and target_2.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="max_data_size"
	and target_2.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("irda_sock *")
	and target_2.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getValue()="381"
}

from Function func, Parameter vprotocol_1083, IfStmt target_1, SwitchStmt target_2
where
not func_0(vprotocol_1083, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vprotocol_1083, target_2)
and vprotocol_1083.getType().hasName("int")
and vprotocol_1083.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
