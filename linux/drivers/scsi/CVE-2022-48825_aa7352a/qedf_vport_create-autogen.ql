/**
 * @name linux-aa7352aa155e19815b41f09f114fe9f110fde4d8-qedf_vport_create
 * @id cpp/linux/aa7352aa155e19815b41f09f114fe9f110fde4d8/qedf-vport-create
 * @description linux-aa7352aa155e19815b41f09f114fe9f110fde4d8-drivers/scsi/qedf/qedf_main.c-qedf_vport_create CVE-2022-48825
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(DoStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(1) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("__init_work")
						and obj_4.getArgument(1).(Literal).getValue()="0"
					)
				)
				and exists(ExprStmt obj_5 | obj_5=obj_2.getStmt(3) |
					exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
						obj_6.getTarget().hasName("lockdep_init_map")
						and obj_6.getArgument(1).(StringLiteral).getValue()="(work_completion)(&(&vport_qedf->stag_work)->work)"
						and obj_6.getArgument(3).(Literal).getValue()="0"
					)
				)
				and obj_2.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="data"
				and obj_2.getStmt(4).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
				and obj_2.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="func"
			)
			and obj_1.getCondition().(Literal).getValue()="0"
		)
		and exists(DoStmt obj_7 | obj_7=obj_0.getStmt(1) |
			exists(BlockStmt obj_8 | obj_8=obj_7.getStmt() |
				exists(ExprStmt obj_9 | obj_9=obj_8.getStmt(1) |
					exists(FunctionCall obj_10 | obj_10=obj_9.getExpr() |
						obj_10.getTarget().hasName("init_timer_key")
						and obj_10.getArgument(3).(StringLiteral).getValue()="&(&vport_qedf->stag_work)->timer"
					)
				)
			)
			and obj_7.getCondition().(Literal).getValue()="0"
		)
	)
	and target_0.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("qedf_vport_libfc_config")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("fc_vport *")
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("fc_lport *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
