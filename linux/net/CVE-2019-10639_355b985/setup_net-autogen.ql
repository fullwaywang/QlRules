/**
 * @name linux-355b98553789b646ed97ad801a619ff898471b92-setup_net
 * @id cpp/linux/355b98553789b646ed97ad801a619ff898471b92/setup-net
 * @description linux-355b98553789b646ed97ad801a619ff898471b92-net/core/net_namespace.c-setup_net CVE-2019-10639
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnet_298, ExprStmt target_1, AddressOfExpr target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("get_random_bytes")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="hash_mix"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_298
	and target_0.getExpr().(FunctionCall).getArgument(1).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getExpr().(FunctionCall).getArgument(1).(SizeofTypeOperator).getValue()="4"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vnet_298, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dev_base_seq"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_298
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_2(Parameter vnet_298, AddressOfExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="passive"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_298
}

from Function func, Parameter vnet_298, ExprStmt target_1, AddressOfExpr target_2
where
not func_0(vnet_298, target_1, target_2, func)
and func_1(vnet_298, target_1)
and func_2(vnet_298, target_2)
and vnet_298.getType().hasName("net *")
and vnet_298.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
