/**
 * @name linux-abe067dc3a662eef7d5cddbbc41ed50a0b68b0af-vhost_task_fn
 * @id cpp/linux/abe067dc3a662eef7d5cddbbc41ed50a0b68b0af/vhost-task-fn
 * @description linux-abe067dc3a662eef7d5cddbbc41ed50a0b68b0af-kernel/vhost_task.c-vhost_task_fn CVE-2024-42135
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("clear_ti_thread_flag")
	and not target_1.getTarget().hasName("mutex_lock_nested")
	and target_1.getArgument(0).(FunctionCall).getTarget().hasName("get_current")
	and target_1.getArgument(1).(Literal).getValue()="2"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(VariableAccess target_15, Function func) {
exists(BreakStmt target_2 |
	target_2.getParent().(IfStmt).getCondition()=target_15
	and target_2.getEnclosingFunction() = func
)
}

predicate func_3(Variable vvtsk_25, EqualityOperation target_16) {
exists(AddressOfExpr target_3 |
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="exit_mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvtsk_25
	)
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_16.getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_4(Variable vvtsk_25, ExprStmt target_17, Function func) {
exists(IfStmt target_4 |
	exists(NotExpr obj_0 | obj_0=target_4.getCondition() |
		exists(ConditionalExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getCondition() |
				exists(LogicalAndExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					exists(LogicalAndExpr obj_4 | obj_4=obj_3.getLeftOperand() |
						obj_4.getLeftOperand().(Literal).getValue()="1"
						and obj_4.getRightOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
					)
					and obj_3.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
				)
				and obj_2.getRightOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
			)
			and exists(FunctionCall obj_5 | obj_5=obj_1.getThen() |
				exists(AddressOfExpr obj_6 | obj_6=obj_5.getArgument(1) |
					exists(PointerFieldAccess obj_7 | obj_7=obj_6.getOperand() |
						obj_7.getTarget().getName()="flags"
						and obj_7.getQualifier().(VariableAccess).getTarget()=vvtsk_25
					)
				)
				and obj_5.getTarget().hasName("const_test_bit")
			)
			and exists(FunctionCall obj_8 | obj_8=obj_1.getElse() |
				exists(AddressOfExpr obj_9 | obj_9=obj_8.getArgument(1) |
					exists(PointerFieldAccess obj_10 | obj_10=obj_9.getOperand() |
						obj_10.getTarget().getName()="flags"
						and obj_10.getQualifier().(VariableAccess).getTarget()=vvtsk_25
					)
				)
				and obj_8.getTarget().hasName("_test_bit")
			)
		)
	)
	and exists(BlockStmt obj_11 | obj_11=target_4.getThen() |
		exists(ExprStmt obj_12 | obj_12=obj_11.getStmt(0) |
			exists(FunctionCall obj_13 | obj_13=obj_12.getExpr() |
				exists(AddressOfExpr obj_14 | obj_14=obj_13.getArgument(1) |
					exists(PointerFieldAccess obj_15 | obj_15=obj_14.getOperand() |
						obj_15.getTarget().getName()="flags"
						and obj_15.getQualifier().(VariableAccess).getTarget()=vvtsk_25
					)
				)
				and obj_13.getTarget().hasName("set_bit")
			)
		)
		and exists(ExprStmt obj_16 | obj_16=obj_11.getStmt(1) |
			exists(VariableCall obj_17 | obj_17=obj_16.getExpr() |
				exists(PointerFieldAccess obj_18 | obj_18=obj_17.getExpr() |
					obj_18.getTarget().getName()="handle_sigkill"
					and obj_18.getQualifier().(VariableAccess).getTarget()=vvtsk_25
				)
				and exists(PointerFieldAccess obj_19 | obj_19=obj_17.getArgument(0) |
					obj_19.getTarget().getName()="data"
					and obj_19.getQualifier().(VariableAccess).getTarget()=vvtsk_25
				)
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_17.getLocation())
)
}

/*predicate func_6(Variable vvtsk_25, Variable vdead_26, BlockStmt target_18) {
exists(LogicalAndExpr target_6 |
	exists(LogicalAndExpr obj_0 | obj_0=target_6.getLeftOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRightOperand() |
			exists(EqualityOperation obj_2 | obj_2=obj_1.getArgument(0) |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="flags"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vvtsk_25
					)
				)
				and obj_2.getRightOperand().(Literal).getValue()="0"
			)
			and obj_1.getTarget().hasName("__builtin_constant_p")
		)
		and obj_0.getLeftOperand().(Literal).getValue()="1"
	)
	and exists(EqualityOperation obj_5 | obj_5=target_6.getRightOperand() |
		exists(AddressOfExpr obj_6 | obj_6=obj_5.getLeftOperand() |
			exists(PointerFieldAccess obj_7 | obj_7=obj_6.getOperand() |
				obj_7.getTarget().getName()="flags"
				and obj_7.getQualifier().(VariableAccess).getTarget()=vvtsk_25
			)
		)
		and obj_5.getRightOperand().(Literal).getValue()="0"
	)
	and exists(LogicalAndExpr obj_8 | obj_8=target_6.getParent() |
		obj_8.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vdead_26
		and obj_8.getRightOperand() instanceof FunctionCall
		and obj_8.getParent().(IfStmt).getThen()=target_18
	)
)
}

*/
/*predicate func_7(Variable vvtsk_25, Variable vdead_26, BlockStmt target_18) {
exists(FunctionCall target_7 |
	exists(PointerDereferenceExpr obj_0 | obj_0=target_7.getArgument(0) |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="flags"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvtsk_25
			)
		)
	)
	and exists(LogicalAndExpr obj_3 | obj_3=target_7.getParent() |
		obj_3.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vdead_26
		and obj_3.getRightOperand() instanceof FunctionCall
		and obj_3.getParent().(IfStmt).getThen()=target_18
	)
	and target_7.getTarget().hasName("__builtin_constant_p")
)
}

*/
/*predicate func_8(Variable vvtsk_25) {
exists(VariableCall target_8 |
	exists(PointerFieldAccess obj_0 | obj_0=target_8.getExpr() |
		obj_0.getTarget().getName()="handle_sigkill"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvtsk_25
	)
	and exists(PointerFieldAccess obj_1 | obj_1=target_8.getArgument(0) |
		obj_1.getTarget().getName()="data"
		and obj_1.getQualifier().(VariableAccess).getTarget()=vvtsk_25
	)
)
}

*/
predicate func_9(Variable vvtsk_25, ExprStmt target_17, AddressOfExpr target_20, Function func) {
exists(ExprStmt target_9 |
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="exit_mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvtsk_25
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
	and target_9.getLocation().isBefore(target_17.getLocation())
	and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_20.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_10(Variable vdead_26, BlockStmt target_18, FunctionCall target_10) {
	exists(LogicalAndExpr obj_0 | obj_0=target_10.getParent() |
		obj_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vdead_26
		and obj_0.getParent().(IfStmt).getThen()=target_18
	)
	and target_10.getTarget().hasName("signal_pending")
	and target_10.getArgument(0).(FunctionCall).getTarget().hasName("get_current")
}

predicate func_11(Variable vdead_26, Variable vksig_32, FunctionCall target_11) {
	exists(AssignExpr obj_0 | obj_0=target_11.getParent() |
		obj_0.getRValue() = target_11
		and obj_0.getLValue().(VariableAccess).getTarget()=vdead_26
	)
	and target_11.getTarget().hasName("get_signal")
	and target_11.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vksig_32
}

predicate func_12(Function func, DeclStmt target_12) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Variable vdead_26, DeclStmt target_12, VariableAccess target_13) {
	target_13.getTarget()=vdead_26
}

predicate func_14(Variable vdead_26, AssignExpr target_14) {
	target_14.getLValue().(VariableAccess).getTarget()=vdead_26
	and target_14.getRValue() instanceof FunctionCall
}

predicate func_15(Variable vdead_26, ExprStmt target_21, VariableAccess target_15) {
	target_15.getTarget()=vdead_26
	and target_15.getParent().(IfStmt).getThen()=target_21
}

predicate func_16(Variable vvtsk_25, EqualityOperation target_16) {
	exists(AddressOfExpr obj_0 | obj_0=target_16.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="flags"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vvtsk_25
		)
	)
	and target_16.getRightOperand().(Literal).getValue()="0"
	and target_16.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
}

predicate func_17(Variable vvtsk_25, ExprStmt target_17) {
	exists(FunctionCall obj_0 | obj_0=target_17.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="exited"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvtsk_25
			)
		)
		and obj_0.getTarget().hasName("complete")
	)
}

predicate func_18(Variable vdead_26, BlockStmt target_18) {
	exists(IfStmt obj_0 | obj_0=target_18.getStmt(2) |
		obj_0.getCondition().(VariableAccess).getTarget()=vdead_26
		and obj_0.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	)
	and target_18.getStmt(1).(ExprStmt).getExpr() instanceof AssignExpr
}

predicate func_20(Variable vvtsk_25, AddressOfExpr target_20) {
	exists(PointerFieldAccess obj_0 | obj_0=target_20.getOperand() |
		obj_0.getTarget().getName()="exited"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvtsk_25
	)
}

predicate func_21(Function func, ExprStmt target_21) {
	target_21.getExpr() instanceof FunctionCall
	and target_21.getEnclosingFunction() = func
}

from Function func, Variable vvtsk_25, Variable vdead_26, Variable vksig_32, FunctionCall target_1, FunctionCall target_10, FunctionCall target_11, DeclStmt target_12, VariableAccess target_13, AssignExpr target_14, VariableAccess target_15, EqualityOperation target_16, ExprStmt target_17, BlockStmt target_18, AddressOfExpr target_20, ExprStmt target_21
where
func_1(func, target_1)
and not func_2(target_15, func)
and not func_3(vvtsk_25, target_16)
and not func_4(vvtsk_25, target_17, func)
and not func_9(vvtsk_25, target_17, target_20, func)
and func_10(vdead_26, target_18, target_10)
and func_11(vdead_26, vksig_32, target_11)
and func_12(func, target_12)
and func_13(vdead_26, target_12, target_13)
and func_14(vdead_26, target_14)
and func_15(vdead_26, target_21, target_15)
and func_16(vvtsk_25, target_16)
and func_17(vvtsk_25, target_17)
and func_18(vdead_26, target_18)
and func_20(vvtsk_25, target_20)
and func_21(func, target_21)
and vvtsk_25.getType().hasName("vhost_task *")
and vdead_26.getType().hasName("bool")
and vksig_32.getType().hasName("ksignal")
and vvtsk_25.(LocalVariable).getFunction() = func
and vdead_26.(LocalVariable).getFunction() = func
and vksig_32.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
