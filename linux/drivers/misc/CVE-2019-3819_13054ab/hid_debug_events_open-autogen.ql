/**
 * @name linux-13054abbaa4f1fd4e6f3b4b63439ec033b4c8035-hid_debug_events_open
 * @id cpp/linux/13054abbaa4f1fd4e6f3b4b63439ec033b4c8035/hid-debug-events-open
 * @description linux-13054abbaa4f1fd4e6f3b4b63439ec033b4c8035-drivers/hid/hid-debug.c-hid_debug_events_open CVE-2019-3819
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofTypeOperator target_0) {
	target_0.getType() instanceof LongType
	and target_0.getValue()="208"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, UnaryMinusExpr target_1) {
	target_1.getValue()="-12"
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("__kfifo_int_must_check_helper")
	and target_2.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(EqualityOperation).getValue()="1"
	and target_2.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("__kfifo_alloc")
	and target_2.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("__kfifo *")
	and target_2.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getThen().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getThen().(FunctionCall).getArgument(3) instanceof BitwiseOrExpr
	and target_2.getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getElse().(UnaryMinusExpr).getValue()="-22"
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getEnclosingFunction() = func)
}

/*predicate func_3(NotExpr target_10, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(ConditionalExpr).getCondition().(EqualityOperation).getValue()="1"
	and target_3.getExpr().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("__kfifo_alloc")
	and target_3.getExpr().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("__kfifo *")
	and target_3.getExpr().(ConditionalExpr).getThen().(FunctionCall).getArgument(1) instanceof Literal
	and target_3.getExpr().(ConditionalExpr).getThen().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="1"
	and target_3.getExpr().(ConditionalExpr).getThen().(FunctionCall).getArgument(3) instanceof BitwiseOrExpr
	and target_3.getExpr().(ConditionalExpr).getElse().(UnaryMinusExpr).getValue()="-22"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_3.getEnclosingFunction() = func)
}

*/
predicate func_5(Variable vlist_1078, NotExpr target_10, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vlist_1078
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_6(Function func, BitwiseOrExpr target_6) {
	target_6.getValue()="6291648"
	and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vlist_1078, VariableAccess target_7) {
	target_7.getTarget()=vlist_1078
}

predicate func_8(NotExpr target_10, Function func, GotoStmt target_8) {
	target_8.getName() ="out"
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_8.getEnclosingFunction() = func
}

predicate func_10(Variable vlist_1078, BlockStmt target_11, NotExpr target_10) {
	target_10.getOperand().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="hid_debug_buf"
	and target_10.getOperand().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vlist_1078
	and target_10.getOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kzalloc")
	and target_10.getOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0) instanceof Literal
	and target_10.getOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1) instanceof BitwiseOrExpr
	and target_10.getParent().(IfStmt).getThen()=target_11
}

predicate func_11(Function func, BlockStmt target_11) {
	target_11.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_11.getStmt(1) instanceof ExprStmt
	and target_11.getStmt(2) instanceof GotoStmt
	and target_11.getEnclosingFunction() = func
}

from Function func, Variable vlist_1078, SizeofTypeOperator target_0, UnaryMinusExpr target_1, ExprStmt target_5, BitwiseOrExpr target_6, VariableAccess target_7, GotoStmt target_8, NotExpr target_10, BlockStmt target_11
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(func)
and func_5(vlist_1078, target_10, target_5)
and func_6(func, target_6)
and func_7(vlist_1078, target_7)
and func_8(target_10, func, target_8)
and func_10(vlist_1078, target_11, target_10)
and func_11(func, target_11)
and vlist_1078.getType().hasName("hid_debug_list *")
and vlist_1078.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
