/**
 * @name linux-a3a858ff18a72a8d388e31ab0d98f7e944841a62-sk_add_backlog
 * @id cpp/linux/a3a858ff18a72a8d388e31ab0d98f7e944841a62/sk-add-backlog
 * @description linux-a3a858ff18a72a8d388e31ab0d98f7e944841a62-include/net/sock.h-sk_add_backlog CVE-2010-4251
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_595, BlockStmt target_20) {
	exists(RelationalOperation target_0 |
		 (target_0 instanceof GEExpr or target_0 instanceof LEExpr)
		and target_0.getGreaterOperand().(ValueFieldAccess).getTarget().getName()="len"
		and target_0.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_0.getGreaterOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
		and target_0.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("int")
		and target_0.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("int")
		and target_0.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("int")
		and target_0.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
		and target_0.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getThen().(VariableAccess).getType().hasName("int")
		and target_0.getLesserOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(ConditionalExpr).getElse().(VariableAccess).getType().hasName("int")
		and target_0.getParent().(IfStmt).getThen()=target_20)
}

/*predicate func_1(Function func) {
	exists(EqualityOperation target_1 |
		target_1.getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("int")
		and target_1.getAnOperand().(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("int")
		and target_1.getEnclosingFunction() = func)
}

*/
/*predicate func_2(Function func) {
	exists(ConditionalExpr target_2 |
		target_2.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("int")
		and target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
		and target_2.getThen().(VariableAccess).getType().hasName("int")
		and target_2.getElse().(VariableAccess).getType().hasName("int")
		and target_2.getEnclosingFunction() = func)
}

*/
predicate func_3(Function func) {
	exists(UnaryMinusExpr target_3 |
		target_3.getValue()="-105"
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(Parameter vsk_595, Parameter vskb_595, ValueFieldAccess target_22) {
	exists(FunctionCall target_4 |
		target_4.getTarget().hasName("__sk_add_backlog")
		and target_4.getArgument(0).(VariableAccess).getTarget()=vsk_595
		and target_4.getArgument(1).(VariableAccess).getTarget()=vskb_595
		and target_22.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_5(Parameter vsk_595, Parameter vskb_595, ValueFieldAccess target_22) {
	exists(AssignAddExpr target_5 |
		target_5.getLValue().(ValueFieldAccess).getTarget().getName()="len"
		and target_5.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_5.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
		and target_5.getRValue().(PointerFieldAccess).getTarget().getName()="truesize"
		and target_5.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_595
		and target_5.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_22.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_6(Function func) {
	exists(ReturnStmt target_6 |
		target_6.getExpr() instanceof Literal
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6)
}

predicate func_7(Parameter vsk_595, PointerFieldAccess target_7) {
		target_7.getTarget().getName()="sk_backlog"
		and target_7.getQualifier().(VariableAccess).getTarget()=vsk_595
}

predicate func_8(Parameter vsk_595, PointerFieldAccess target_8) {
		target_8.getTarget().getName()="sk_backlog"
		and target_8.getQualifier().(VariableAccess).getTarget()=vsk_595
}

predicate func_9(Parameter vsk_595, PointerFieldAccess target_9) {
		target_9.getTarget().getName()="sk_backlog"
		and target_9.getQualifier().(VariableAccess).getTarget()=vsk_595
}

predicate func_10(Parameter vsk_595, VariableAccess target_10) {
		target_10.getTarget()=vsk_595
}

predicate func_11(Parameter vskb_595, VariableAccess target_11) {
		target_11.getTarget()=vskb_595
}

predicate func_12(Parameter vskb_595, VariableAccess target_12) {
		target_12.getTarget()=vskb_595
		and target_12.getParent().(AssignExpr).getRValue() = target_12
		and target_12.getParent().(AssignExpr).getLValue() instanceof ValueFieldAccess
}

predicate func_13(Parameter vsk_595, VariableAccess target_13) {
		target_13.getTarget()=vsk_595
}

predicate func_15(Parameter vsk_595, BlockStmt target_20, NotExpr target_15) {
		target_15.getOperand().(ValueFieldAccess).getTarget().getName()="tail"
		and target_15.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_15.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
		and target_15.getParent().(IfStmt).getThen()=target_20
}

predicate func_16(Parameter vsk_595, Parameter vskb_595, AssignExpr target_16) {
		target_16.getLValue().(ValueFieldAccess).getTarget().getName()="head"
		and target_16.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_16.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
		and target_16.getRValue().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="tail"
		and target_16.getRValue().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_16.getRValue().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
		and target_16.getRValue().(AssignExpr).getRValue().(VariableAccess).getTarget()=vskb_595
}

predicate func_17(Parameter vsk_595, Parameter vskb_595, AssignExpr target_17) {
		target_17.getLValue().(PointerFieldAccess).getTarget().getName()="next"
		and target_17.getLValue().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="tail"
		and target_17.getLValue().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_17.getLValue().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
		and target_17.getRValue().(VariableAccess).getTarget()=vskb_595
}

predicate func_18(Parameter vsk_595, Parameter vskb_595, ValueFieldAccess target_22, AssignExpr target_18) {
		target_18.getLValue().(ValueFieldAccess).getTarget().getName()="tail"
		and target_18.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_18.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
		and target_18.getRValue().(VariableAccess).getTarget()=vskb_595
		and target_22.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_18.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_19(Parameter vskb_595, AssignExpr target_19) {
		target_19.getLValue().(PointerFieldAccess).getTarget().getName()="next"
		and target_19.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_595
		and target_19.getRValue() instanceof Literal
}

predicate func_20(Function func, BlockStmt target_20) {
		target_20.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
		and target_20.getEnclosingFunction() = func
}

predicate func_22(Parameter vsk_595, ValueFieldAccess target_22) {
		target_22.getTarget().getName()="tail"
		and target_22.getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_22.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_595
}

from Function func, Parameter vsk_595, Parameter vskb_595, PointerFieldAccess target_7, PointerFieldAccess target_8, PointerFieldAccess target_9, VariableAccess target_10, VariableAccess target_11, VariableAccess target_12, VariableAccess target_13, NotExpr target_15, AssignExpr target_16, AssignExpr target_17, AssignExpr target_18, AssignExpr target_19, BlockStmt target_20, ValueFieldAccess target_22
where
not func_0(vsk_595, target_20)
and not func_3(func)
and not func_4(vsk_595, vskb_595, target_22)
and not func_5(vsk_595, vskb_595, target_22)
and not func_6(func)
and func_7(vsk_595, target_7)
and func_8(vsk_595, target_8)
and func_9(vsk_595, target_9)
and func_10(vsk_595, target_10)
and func_11(vskb_595, target_11)
and func_12(vskb_595, target_12)
and func_13(vsk_595, target_13)
and func_15(vsk_595, target_20, target_15)
and func_16(vsk_595, vskb_595, target_16)
and func_17(vsk_595, vskb_595, target_17)
and func_18(vsk_595, vskb_595, target_22, target_18)
and func_19(vskb_595, target_19)
and func_20(func, target_20)
and func_22(vsk_595, target_22)
and vsk_595.getType().hasName("sock *")
and vskb_595.getType().hasName("sk_buff *")
and vsk_595.getFunction() = func
and vskb_595.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
