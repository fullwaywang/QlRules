/**
 * @name linux-90f62cf30a78721641e08737bda787552428061e-do_setlink
 * @id cpp/linux/90f62cf30a78721641e08737bda787552428061e/do-setlink
 * @description linux-90f62cf30a78721641e08737bda787552428061e-net/core/rtnetlink.c-do_setlink CVE-2014-0181
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnet_1405, BlockStmt target_2, FunctionCall target_0) {
	target_0.getTarget().hasName("ns_capable")
	and not target_0.getTarget().hasName("netlink_ns_capable")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_1405
	and target_0.getArgument(1).(Literal).getValue()="12"
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_2.getStmt(1).(GotoStmt).getName() ="errout"
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vnet_1405, FunctionCall target_0, BlockStmt target_2
where
func_0(vnet_1405, target_2, target_0)
and func_2(func, target_2)
and vnet_1405.getType().hasName("net *")
and vnet_1405.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
