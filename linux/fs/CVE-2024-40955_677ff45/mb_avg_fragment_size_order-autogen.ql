/**
 * @name linux-677ff4589f1501578fa903a25bb14831d0607992-mb_avg_fragment_size_order
 * @id cpp/linux/677ff4589f1501578fa903a25bb14831d0607992/mb-avg-fragment-size-order
 * @description linux-677ff4589f1501578fa903a25bb14831d0607992-fs/ext4/mballoc.c-mb_avg_fragment_size_order CVE-2024-40955
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsb_821, Variable vorder_823, ReturnStmt target_1, Function func) {
exists(IfStmt target_0 |
	exists(StmtExpr obj_0 | obj_0=target_0.getCondition() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(IfStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getCondition() |
					obj_3.getTarget().hasName("__builtin_expect")
					and obj_3.getArgument(1) instanceof Literal
				)
				and obj_2.getThen().(DoStmt).getCondition() instanceof Literal
			)
			and exists(ExprStmt obj_4 | obj_4=obj_1.getStmt(2) |
				exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
					obj_5.getTarget().hasName("__builtin_expect")
					and obj_5.getArgument(1) instanceof Literal
				)
			)
		)
	)
	and exists(ExprStmt obj_6 | obj_6=target_0.getThen() |
		exists(AssignExpr obj_7 | obj_7=obj_6.getExpr() |
			exists(SubExpr obj_8 | obj_8=obj_7.getRValue() |
				exists(AddExpr obj_9 | obj_9=obj_8.getLeftOperand() |
					exists(PointerFieldAccess obj_10 | obj_10=obj_9.getLeftOperand() |
						obj_10.getTarget().getName()="s_blocksize_bits"
						and obj_10.getQualifier().(VariableAccess).getTarget()=vsb_821
					)
					and obj_9.getRightOperand().(Literal).getValue()="2"
				)
				and obj_8.getRightOperand().(Literal).getValue()="1"
			)
			and obj_7.getLValue().(VariableAccess).getTarget()=vorder_823
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getExpr().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vorder_823, ReturnStmt target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=vorder_823
}

from Function func, Parameter vsb_821, Variable vorder_823, ReturnStmt target_1
where
not func_0(vsb_821, vorder_823, target_1, func)
and func_1(vorder_823, target_1)
and vsb_821.getType().hasName("super_block *")
and vorder_823.getType().hasName("int")
and vsb_821.getFunction() = func
and vorder_823.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
