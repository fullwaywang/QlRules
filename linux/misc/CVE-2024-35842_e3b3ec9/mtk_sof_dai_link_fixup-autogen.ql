/**
 * @name linux-e3b3ec967a7d93b9010a5af9a2394c8b5c8f31ed-mtk_sof_dai_link_fixup
 * @id cpp/linux/e3b3ec967a7d93b9010a5af9a2394c8b5c8f31ed/mtk-sof-dai-link-fixup
 * @description linux-e3b3ec967a7d93b9010a5af9a2394c8b5c8f31ed-sound/soc/mediatek/common/mtk-dsp-sof-common.c-mtk_sof_dai_link_fixup CVE-2024-35842
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vconn_25, FunctionCall target_1) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(PointerFieldAccess).getTarget().getName()="normal_link"
	and target_0.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_25
	and target_0.getRightOperand() instanceof FunctionCall
	and target_0.getParent().(IfStmt).getThen() instanceof ContinueStmt
	and target_0.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vrtd_13, Variable vconn_25, FunctionCall target_1) {
	target_1.getTarget().hasName("strcmp")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="name"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="dai_link"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrtd_13
	and target_1.getArgument(1).(PointerFieldAccess).getTarget().getName()="normal_link"
	and target_1.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_25
	and target_1.getParent().(IfStmt).getThen() instanceof ContinueStmt
}

from Function func, Parameter vrtd_13, Variable vconn_25, FunctionCall target_1
where
not func_0(vconn_25, target_1)
and func_1(vrtd_13, vconn_25, target_1)
and vrtd_13.getType().hasName("snd_soc_pcm_runtime *")
and vconn_25.getType().hasName("const sof_conn_stream *")
and vrtd_13.getFunction() = func
and vconn_25.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
