/**
 * @name linux-10081b0b0ed201f53e24bd92deb2e0f3c3e713d4-xe_preempt_fence_arm
 * @id cpp/linux/10081b0b0ed201f53e24bd92deb2e0f3c3e713d4/xe-preempt-fence-arm
 * @description linux-10081b0b0ed201f53e24bd92deb2e0f3c3e713d4-drivers/gpu/drm/xe/xe_preempt_fence.c-xe_preempt_fence_arm CVE-2024-46683
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_3, Function func) {
exists(DoStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(0) |
					obj_3.getTarget().hasName("spinlock_check")
					and obj_3.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
				)
				and obj_2.getTarget().hasName("__raw_spin_lock_init")
				and obj_2.getArgument(1).(StringLiteral).getValue()="&pfence->lock"
				and obj_2.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
			)
		)
	)
	and target_0.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation())
)
}

predicate func_1(Parameter vpfence_126, AddressOfExpr target_4, AddressOfExpr target_5) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="lock"
	and target_1.getQualifier().(VariableAccess).getTarget()=vpfence_126
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(VariableAccess).getLocation())
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Parameter vq_126, Parameter vpfence_126, ValueFieldAccess target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getQualifier() |
		obj_0.getTarget().getName()="lr"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vq_126
	)
	and exists(AddressOfExpr obj_1 | obj_1=target_2.getParent() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getParent() |
			exists(ExprStmt obj_3 | obj_3=obj_2.getParent() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					exists(AddressOfExpr obj_5 | obj_5=obj_4.getArgument(0) |
						exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
							obj_6.getTarget().getName()="base"
							and obj_6.getQualifier().(VariableAccess).getTarget()=vpfence_126
						)
					)
					and obj_4.getTarget().hasName("dma_fence_init")
					and obj_4.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const dma_fence_ops")
					and obj_4.getArgument(3).(VariableAccess).getTarget().getType().hasName("u64")
					and obj_4.getArgument(4).(VariableAccess).getTarget().getType().hasName("u32")
				)
			)
		)
	)
	and target_2.getTarget().getName()="lock"
}

predicate func_3(Parameter vpfence_126, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="base"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpfence_126
			)
		)
		and obj_0.getTarget().hasName("dma_fence_init")
		and obj_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const dma_fence_ops")
		and obj_0.getArgument(2).(AddressOfExpr).getOperand() instanceof ValueFieldAccess
		and obj_0.getArgument(3).(VariableAccess).getTarget().getType().hasName("u64")
		and obj_0.getArgument(4).(VariableAccess).getTarget().getType().hasName("u32")
	)
}

predicate func_4(Parameter vpfence_126, AddressOfExpr target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getOperand() |
		obj_0.getTarget().getName()="base"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpfence_126
	)
	and exists(FunctionCall obj_1 | obj_1=target_4.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("dma_fence_init")
				and obj_3.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const dma_fence_ops")
				and obj_3.getArgument(2).(AddressOfExpr).getOperand() instanceof ValueFieldAccess
				and obj_3.getArgument(3).(VariableAccess).getTarget().getType().hasName("u64")
				and obj_3.getArgument(4).(VariableAccess).getTarget().getType().hasName("u32")
			)
		)
	)
}

predicate func_5(Parameter vpfence_126, AddressOfExpr target_5) {
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getOperand() |
		obj_0.getTarget().getName()="base"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpfence_126
	)
}

from Function func, Parameter vq_126, Parameter vpfence_126, ValueFieldAccess target_2, ExprStmt target_3, AddressOfExpr target_4, AddressOfExpr target_5
where
not func_0(target_3, func)
and not func_1(vpfence_126, target_4, target_5)
and func_2(vq_126, vpfence_126, target_2)
and func_3(vpfence_126, target_3)
and func_4(vpfence_126, target_4)
and func_5(vpfence_126, target_5)
and vq_126.getType().hasName("xe_exec_queue *")
and vpfence_126.getType().hasName("xe_preempt_fence *")
and vq_126.getFunction() = func
and vpfence_126.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
