/**
 * @name linux-c377411f2494a931ff7facdbb3a6839b1266bcf6-sk_receive_skb
 * @id cpp/linux/c377411f2494a931ff7facdbb3a6839b1266bcf6/sk-receive-skb
 * @description linux-c377411f2494a931ff7facdbb3a6839b1266bcf6-net/core/sock.c-sk_receive_skb CVE-2010-4805
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_321, Parameter vskb_321, FunctionCall target_3, AddressOfExpr target_4, ExprStmt target_5, ExprStmt target_6, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("sk_rcvqueues_full")
		and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_321
		and target_0.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_321
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_inc")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sk_drops"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_321
		and target_0.getThen().(BlockStmt).getStmt(1) instanceof GotoStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_0.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Function func, GotoStmt target_2) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Parameter vsk_321, Parameter vskb_321, FunctionCall target_3) {
		target_3.getTarget().hasName("sk_filter")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vsk_321
		and target_3.getArgument(1).(VariableAccess).getTarget()=vskb_321
}

predicate func_4(Parameter vsk_321, AddressOfExpr target_4) {
		target_4.getOperand().(ValueFieldAccess).getTarget().getName()="slock"
		and target_4.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
		and target_4.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_321
		and target_4.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

predicate func_5(Parameter vskb_321, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dev"
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_321
		and target_5.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_6(Parameter vsk_321, Parameter vskb_321, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sk_backlog_rcv")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_321
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_321
}

from Function func, Parameter vsk_321, Parameter vskb_321, GotoStmt target_2, FunctionCall target_3, AddressOfExpr target_4, ExprStmt target_5, ExprStmt target_6
where
not func_0(vsk_321, vskb_321, target_3, target_4, target_5, target_6, func)
and func_2(func, target_2)
and func_3(vsk_321, vskb_321, target_3)
and func_4(vsk_321, target_4)
and func_5(vskb_321, target_5)
and func_6(vsk_321, vskb_321, target_6)
and vsk_321.getType().hasName("sock *")
and vskb_321.getType().hasName("sk_buff *")
and vsk_321.getFunction() = func
and vskb_321.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
