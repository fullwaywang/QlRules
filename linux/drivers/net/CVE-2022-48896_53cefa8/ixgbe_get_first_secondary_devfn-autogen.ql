/**
 * @name linux-53cefa802f070d46c0c518f4865be2c749818a18-ixgbe_get_first_secondary_devfn
 * @id cpp/linux/53cefa802f070d46c0c518f4865be2c749818a18/ixgbe-get-first-secondary-devfn
 * @description linux-53cefa802f070d46c0c518f4865be2c749818a18-drivers/net/ethernet/intel/ixgbe/ixgbe_phy.c-ixgbe_get_first_secondary_devfn CVE-2022-48896
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrp_pdev_848, LogicalAndExpr target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("pci_dev_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vrp_pdev_848
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_2.getCondition()=target_2
		)
	)
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vrp_pdev_848, Function func) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("pci_dev_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vrp_pdev_848
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_2(Variable vrp_pdev_848, LogicalAndExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getRightOperand() |
		obj_0.getTarget().getName()="subordinate"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vrp_pdev_848
	)
	and target_2.getLeftOperand().(VariableAccess).getTarget()=vrp_pdev_848
}

predicate func_3(Variable vrp_pdev_848, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="subordinate"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vrp_pdev_848
			)
			and obj_1.getTarget().getName()="number"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

from Function func, Variable vrp_pdev_848, LogicalAndExpr target_2, ExprStmt target_3
where
not func_0(vrp_pdev_848, target_2, target_3)
and not func_1(vrp_pdev_848, func)
and func_2(vrp_pdev_848, target_2)
and func_3(vrp_pdev_848, target_3)
and vrp_pdev_848.getType().hasName("pci_dev *")
and vrp_pdev_848.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
