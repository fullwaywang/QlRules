/**
 * @name linux-4ac7249ea5a0ceef9f8269f63f33cc873c3fac61-nfsd4_get_nfs4_acl
 * @id cpp/linux/4ac7249ea5a0ceef9f8269f63f33cc873c3fac61/nfsd4-get-nfs4-acl
 * @description linux-4ac7249ea5a0ceef9f8269f63f33cc873c3fac61-fs/nfsd/acl.h-nfsd4_get_nfs4_acl CVE-2016-1237
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, UnaryMinusExpr target_0) {
		target_0.getValue()="-61"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vdentry_584, Variable vpacl_588, FunctionCall target_1) {
		target_1.getTarget().hasName("_get_posix_acl")
		and not target_1.getTarget().hasName("get_acl")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vdentry_584
		and target_1.getArgument(1).(StringLiteral).getValue()="system.posix_acl_access"
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpacl_588
}

predicate func_2(Parameter vdentry_584, Variable vdpacl_588, FunctionCall target_2) {
		target_2.getTarget().hasName("_get_posix_acl")
		and not target_2.getTarget().hasName("get_acl")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vdentry_584
		and target_2.getArgument(1).(StringLiteral).getValue()="system.posix_acl_default"
		and target_2.getParent().(AssignExpr).getRValue() = target_2
		and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdpacl_588
}

predicate func_3(Function func, Literal target_3) {
		target_3.getValue()="61"
		and not target_3.getValue()="32768"
		and target_3.getParent().(UnaryMinusExpr).getParent().(EQExpr).getAnOperand() instanceof UnaryMinusExpr
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable verror_587, VariableAccess target_4) {
		target_4.getTarget()=verror_587
		and target_4.getParent().(AssignExpr).getLValue() = target_4
		and target_4.getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_5(Parameter vacl_584, Variable vpacl_588, Variable vdpacl_588, Variable vflags_589, FunctionCall target_5) {
		target_5.getTarget().hasName("nfs4_acl_posix_to_nfsv4")
		and not target_5.getTarget().hasName("nfs4_acl_new")
		and target_5.getArgument(0).(VariableAccess).getTarget()=vpacl_588
		and target_5.getArgument(1).(VariableAccess).getTarget()=vdpacl_588
		and target_5.getArgument(2).(VariableAccess).getTarget()=vflags_589
		and target_5.getParent().(AssignExpr).getRValue() = target_5
		and target_5.getParent().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vacl_584
}

predicate func_6(Variable verror_587, VariableAccess target_6) {
		target_6.getTarget()=verror_587
		and target_6.getParent().(AssignExpr).getLValue() = target_6
		and target_6.getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_7(Function func, Literal target_7) {
		target_7.getValue()="0"
		and not target_7.getValue()="2"
		and target_7.getParent().(AssignExpr).getParent().(ExprStmt).getExpr() instanceof AssignExpr
		and target_7.getEnclosingFunction() = func
}

predicate func_9(Variable vpacl_588, BlockStmt target_51, FunctionCall target_39) {
	exists(NotExpr target_9 |
		target_9.getOperand().(VariableAccess).getTarget()=vpacl_588
		and target_9.getParent().(IfStmt).getThen()=target_51
		and target_39.getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getOperand().(VariableAccess).getLocation()))
}

predicate func_10(LogicalAndExpr target_43, Function func) {
	exists(ReturnStmt target_10 |
		target_10.getExpr() instanceof FunctionCall
		and target_10.getParent().(IfStmt).getCondition()=target_43
		and target_10.getEnclosingFunction() = func)
}

predicate func_11(Variable vpacl_588, ExprStmt target_52, ExprStmt target_53) {
	exists(AssignAddExpr target_11 |
		target_11.getLValue().(VariableAccess).getType().hasName("int")
		and target_11.getRValue().(MulExpr).getLeftOperand().(Literal).getValue()="2"
		and target_11.getRValue().(MulExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="a_count"
		and target_11.getRValue().(MulExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpacl_588
		and target_52.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_11.getRValue().(MulExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_11.getRValue().(MulExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_53.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_14(Variable vdpacl_588, ExprStmt target_22) {
	exists(AssignAddExpr target_14 |
		target_14.getLValue().(VariableAccess).getType().hasName("int")
		and target_14.getRValue().(MulExpr).getLeftOperand().(Literal).getValue()="2"
		and target_14.getRValue().(MulExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="a_count"
		and target_14.getRValue().(MulExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdpacl_588
		and target_22.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_14.getRValue().(MulExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_16(Variable vpacl_588, Variable vflags_589, ExprStmt target_21, ExprStmt target_56) {
	exists(FunctionCall target_16 |
		target_16.getTarget().hasName("_posix_to_nfsv4_one")
		and target_16.getArgument(0).(VariableAccess).getTarget()=vpacl_588
		and target_16.getArgument(1) instanceof PointerDereferenceExpr
		and target_16.getArgument(2).(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_589
		and target_16.getArgument(2).(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="4294967294"
		and target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_16.getArgument(0).(VariableAccess).getLocation())
		and target_56.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_16.getArgument(2).(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_17(Parameter vacl_584, Variable vdpacl_588, Variable vflags_589, PointerDereferenceExpr target_24, FunctionCall target_44, Function func) {
	exists(IfStmt target_17 |
		target_17.getCondition().(VariableAccess).getTarget()=vdpacl_588
		and target_17.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_posix_to_nfsv4_one")
		and target_17.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdpacl_588
		and target_17.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vacl_584
		and target_17.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(BitwiseOrExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_589
		and target_17.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(BitwiseOrExpr).getRightOperand().(Literal).getValue()="1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
		and target_24.getOperand().(VariableAccess).getLocation().isBefore(target_17.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_44.getArgument(0).(VariableAccess).getLocation().isBefore(target_17.getCondition().(VariableAccess).getLocation()))
}

/*predicate func_18(Parameter vacl_584, Variable vdpacl_588, Variable vflags_589, PointerDereferenceExpr target_24) {
	exists(FunctionCall target_18 |
		target_18.getTarget().hasName("_posix_to_nfsv4_one")
		and target_18.getArgument(0).(VariableAccess).getTarget()=vdpacl_588
		and target_18.getArgument(1).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vacl_584
		and target_18.getArgument(2).(BitwiseOrExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_589
		and target_18.getArgument(2).(BitwiseOrExpr).getRightOperand().(Literal).getValue()="1"
		and target_24.getOperand().(VariableAccess).getLocation().isBefore(target_18.getArgument(1).(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation()))
}

*/
predicate func_19(Variable vpacl_588, ExprStmt target_21, FunctionCall target_19) {
		target_19.getTarget().hasName("IS_ERR")
		and target_19.getArgument(0).(VariableAccess).getTarget()=vpacl_588
		and target_19.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("PTR_ERR")
		and target_19.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpacl_588
		and target_19.getParent().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand() instanceof UnaryMinusExpr
		and target_19.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_21
}

/*predicate func_20(Variable vpacl_588, FunctionCall target_20) {
		target_20.getTarget().hasName("PTR_ERR")
		and target_20.getArgument(0).(VariableAccess).getTarget()=vpacl_588
}

*/
predicate func_21(Variable vinode_586, Variable vpacl_588, LogicalAndExpr target_38, ExprStmt target_21) {
		target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpacl_588
		and target_21.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("posix_acl_from_mode")
		and target_21.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_mode"
		and target_21.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_586
		and target_21.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="208"
		and target_21.getParent().(IfStmt).getCondition()=target_38
}

predicate func_22(Variable vdpacl_588, LogicalAndExpr target_43, ExprStmt target_22) {
		target_22.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdpacl_588
		and target_22.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_22.getParent().(IfStmt).getCondition()=target_43
}

predicate func_23(Parameter vacl_584, BlockStmt target_60, PointerDereferenceExpr target_23) {
		target_23.getOperand().(VariableAccess).getTarget()=vacl_584
		and target_23.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_60
}

predicate func_24(Parameter vacl_584, PointerDereferenceExpr target_24) {
		target_24.getOperand().(VariableAccess).getTarget()=vacl_584
		and target_24.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_25(Variable vpacl_588, BlockStmt target_51, VariableAccess target_25) {
		target_25.getTarget()=vpacl_588
		and target_25.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_51
}

predicate func_26(Variable vdpacl_588, VariableAccess target_26) {
		target_26.getTarget()=vdpacl_588
		and target_26.getParent().(AssignExpr).getLValue() = target_26
		and target_26.getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_27(Variable vdpacl_588, VariableAccess target_27) {
		target_27.getTarget()=vdpacl_588
		and target_27.getParent().(FunctionCall).getParent().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
}

predicate func_28(Parameter vacl_584, VariableAccess target_28) {
		target_28.getTarget()=vacl_584
}

predicate func_29(Variable vpacl_588, VariableAccess target_29) {
		target_29.getTarget()=vpacl_588
		and target_29.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_31(Variable vdpacl_588, VariableAccess target_31) {
		target_31.getTarget()=vdpacl_588
		and target_31.getParent().(FunctionCall).getParent().(EQExpr).getAnOperand() instanceof FunctionCall
}

predicate func_32(Variable vdpacl_588, BlockStmt target_61, VariableAccess target_32) {
		target_32.getTarget()=vdpacl_588
		and target_32.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_61
}

predicate func_33(Variable vdpacl_588, VariableAccess target_33) {
		target_33.getTarget()=vdpacl_588
		and target_33.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_35(Variable vpacl_588, VariableAccess target_35) {
		target_35.getTarget()=vpacl_588
		and target_35.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_36(Variable vflags_589, VariableAccess target_36) {
		target_36.getTarget()=vflags_589
		and target_36.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_37(FunctionCall target_39, Function func, GotoStmt target_37) {
		target_37.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_39
		and target_37.getEnclosingFunction() = func
}

predicate func_38(ExprStmt target_21, Function func, LogicalAndExpr target_38) {
		target_38.getAnOperand() instanceof FunctionCall
		and target_38.getAnOperand().(EqualityOperation).getAnOperand() instanceof FunctionCall
		and target_38.getAnOperand().(EqualityOperation).getAnOperand() instanceof UnaryMinusExpr
		and target_38.getParent().(IfStmt).getThen()=target_21
		and target_38.getEnclosingFunction() = func
}

predicate func_39(Variable vpacl_588, BlockStmt target_51, ExprStmt target_21, FunctionCall target_39) {
		target_39.getTarget().hasName("IS_ERR")
		and target_39.getArgument(0).(VariableAccess).getTarget()=vpacl_588
		and target_39.getParent().(IfStmt).getThen()=target_51
		and target_21.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_39.getArgument(0).(VariableAccess).getLocation())
}

predicate func_40(Variable verror_587, Variable vpacl_588, FunctionCall target_39, FunctionCall target_40) {
		target_40.getTarget().hasName("PTR_ERR")
		and target_40.getArgument(0).(VariableAccess).getTarget()=vpacl_588
		and target_40.getParent().(AssignExpr).getRValue() = target_40
		and target_40.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_587
		and target_39.getArgument(0).(VariableAccess).getLocation().isBefore(target_40.getArgument(0).(VariableAccess).getLocation())
}

predicate func_41(Variable vpacl_588, VariableAccess target_41) {
		target_41.getTarget()=vpacl_588
		and target_41.getParent().(AssignExpr).getLValue() = target_41
		and target_41.getParent().(AssignExpr).getRValue() instanceof Literal
}

predicate func_42(Variable vdpacl_588, AssignExpr target_42) {
		target_42.getLValue().(VariableAccess).getTarget()=vdpacl_588
		and target_42.getRValue() instanceof FunctionCall
}

predicate func_43(Variable vdpacl_588, ExprStmt target_22, LogicalAndExpr target_43) {
		target_43.getAnOperand().(FunctionCall).getTarget().hasName("IS_ERR")
		and target_43.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdpacl_588
		and target_43.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("PTR_ERR")
		and target_43.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdpacl_588
		and target_43.getAnOperand().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-61"
		and target_43.getParent().(IfStmt).getThen()=target_22
}

predicate func_44(Variable vdpacl_588, BlockStmt target_61, ExprStmt target_22, FunctionCall target_44) {
		target_44.getTarget().hasName("IS_ERR")
		and target_44.getArgument(0).(VariableAccess).getTarget()=vdpacl_588
		and target_44.getParent().(IfStmt).getThen()=target_61
		and target_22.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_44.getArgument(0).(VariableAccess).getLocation())
}

predicate func_45(Variable verror_587, Variable vdpacl_588, AssignExpr target_45) {
		target_45.getLValue().(VariableAccess).getTarget()=verror_587
		and target_45.getRValue().(FunctionCall).getTarget().hasName("PTR_ERR")
		and target_45.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdpacl_588
}

predicate func_46(Variable vdpacl_588, AssignExpr target_46) {
		target_46.getLValue().(VariableAccess).getTarget()=vdpacl_588
		and target_46.getRValue() instanceof Literal
}

predicate func_47(FunctionCall target_44, Function func, GotoStmt target_47) {
		target_47.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_44
		and target_47.getEnclosingFunction() = func
}

predicate func_48(BlockStmt target_60, Function func, FunctionCall target_48) {
		target_48.getTarget().hasName("IS_ERR")
		and target_48.getArgument(0) instanceof PointerDereferenceExpr
		and target_48.getParent().(IfStmt).getThen()=target_60
		and target_48.getEnclosingFunction() = func
}

predicate func_49(Variable verror_587, AssignExpr target_49) {
		target_49.getLValue().(VariableAccess).getTarget()=verror_587
		and target_49.getRValue().(FunctionCall).getTarget().hasName("PTR_ERR")
		and target_49.getRValue().(FunctionCall).getArgument(0) instanceof PointerDereferenceExpr
}

predicate func_50(Parameter vacl_584, FunctionCall target_48, ExprStmt target_50) {
		target_50.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vacl_584
		and target_50.getExpr().(AssignExpr).getRValue() instanceof Literal
		and target_50.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_48
}

predicate func_51(Variable verror_587, Variable vpacl_588, BlockStmt target_51) {
		target_51.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_587
		and target_51.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and target_51.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpacl_588
		and target_51.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof Literal
		and target_51.getStmt(2) instanceof GotoStmt
}

predicate func_52(Variable vpacl_588, ExprStmt target_52) {
		target_52.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpacl_588
		and target_52.getExpr().(AssignExpr).getRValue() instanceof Literal
}

predicate func_53(Variable vpacl_588, ExprStmt target_53) {
		target_53.getExpr().(FunctionCall).getTarget().hasName("posix_acl_release")
		and target_53.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpacl_588
}

predicate func_56(Variable vflags_589, ExprStmt target_56) {
		target_56.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vflags_589
		and target_56.getExpr().(AssignExpr).getRValue().(Literal).getValue()="2"
}

predicate func_60(Function func, BlockStmt target_60) {
		target_60.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
		and target_60.getStmt(1) instanceof ExprStmt
		and target_60.getEnclosingFunction() = func
}

predicate func_61(Function func, BlockStmt target_61) {
		target_61.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
		and target_61.getStmt(1).(ExprStmt).getExpr() instanceof AssignExpr
		and target_61.getStmt(2) instanceof GotoStmt
		and target_61.getEnclosingFunction() = func
}

from Function func, Parameter vdentry_584, Parameter vacl_584, Variable vinode_586, Variable verror_587, Variable vpacl_588, Variable vdpacl_588, Variable vflags_589, UnaryMinusExpr target_0, FunctionCall target_1, FunctionCall target_2, Literal target_3, VariableAccess target_4, FunctionCall target_5, VariableAccess target_6, Literal target_7, FunctionCall target_19, ExprStmt target_21, ExprStmt target_22, PointerDereferenceExpr target_23, PointerDereferenceExpr target_24, VariableAccess target_25, VariableAccess target_26, VariableAccess target_27, VariableAccess target_28, VariableAccess target_29, VariableAccess target_31, VariableAccess target_32, VariableAccess target_33, VariableAccess target_35, VariableAccess target_36, GotoStmt target_37, LogicalAndExpr target_38, FunctionCall target_39, FunctionCall target_40, VariableAccess target_41, AssignExpr target_42, LogicalAndExpr target_43, FunctionCall target_44, AssignExpr target_45, AssignExpr target_46, GotoStmt target_47, FunctionCall target_48, AssignExpr target_49, ExprStmt target_50, BlockStmt target_51, ExprStmt target_52, ExprStmt target_53, ExprStmt target_56, BlockStmt target_60, BlockStmt target_61
where
func_0(func, target_0)
and func_1(vdentry_584, vpacl_588, target_1)
and func_2(vdentry_584, vdpacl_588, target_2)
and func_3(func, target_3)
and func_4(verror_587, target_4)
and func_5(vacl_584, vpacl_588, vdpacl_588, vflags_589, target_5)
and func_6(verror_587, target_6)
and func_7(func, target_7)
and not func_9(vpacl_588, target_51, target_39)
and not func_10(target_43, func)
and not func_11(vpacl_588, target_52, target_53)
and not func_14(vdpacl_588, target_22)
and not func_16(vpacl_588, vflags_589, target_21, target_56)
and not func_17(vacl_584, vdpacl_588, vflags_589, target_24, target_44, func)
and func_19(vpacl_588, target_21, target_19)
and func_21(vinode_586, vpacl_588, target_38, target_21)
and func_22(vdpacl_588, target_43, target_22)
and func_23(vacl_584, target_60, target_23)
and func_24(vacl_584, target_24)
and func_25(vpacl_588, target_51, target_25)
and func_26(vdpacl_588, target_26)
and func_27(vdpacl_588, target_27)
and func_28(vacl_584, target_28)
and func_29(vpacl_588, target_29)
and func_31(vdpacl_588, target_31)
and func_32(vdpacl_588, target_61, target_32)
and func_33(vdpacl_588, target_33)
and func_35(vpacl_588, target_35)
and func_36(vflags_589, target_36)
and func_37(target_39, func, target_37)
and func_38(target_21, func, target_38)
and func_39(vpacl_588, target_51, target_21, target_39)
and func_40(verror_587, vpacl_588, target_39, target_40)
and func_41(vpacl_588, target_41)
and func_42(vdpacl_588, target_42)
and func_43(vdpacl_588, target_22, target_43)
and func_44(vdpacl_588, target_61, target_22, target_44)
and func_45(verror_587, vdpacl_588, target_45)
and func_46(vdpacl_588, target_46)
and func_47(target_44, func, target_47)
and func_48(target_60, func, target_48)
and func_49(verror_587, target_49)
and func_50(vacl_584, target_48, target_50)
and func_51(verror_587, vpacl_588, target_51)
and func_52(vpacl_588, target_52)
and func_53(vpacl_588, target_53)
and func_56(vflags_589, target_56)
and func_60(func, target_60)
and func_61(func, target_61)
and vdentry_584.getType().hasName("dentry *")
and vacl_584.getType().hasName("nfs4_acl **")
and vinode_586.getType().hasName("inode *")
and verror_587.getType().hasName("int")
and vpacl_588.getType().hasName("posix_acl *")
and vdpacl_588.getType().hasName("posix_acl *")
and vflags_589.getType().hasName("unsigned int")
and vdentry_584.getFunction() = func
and vacl_584.getFunction() = func
and vinode_586.(LocalVariable).getFunction() = func
and verror_587.(LocalVariable).getFunction() = func
and vpacl_588.(LocalVariable).getFunction() = func
and vdpacl_588.(LocalVariable).getFunction() = func
and vflags_589.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
