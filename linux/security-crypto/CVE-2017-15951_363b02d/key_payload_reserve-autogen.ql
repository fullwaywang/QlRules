/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-key_payload_reserve
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/key-payload-reserve
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/key.c-key_payload_reserve CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="3"
	and not target_0.getValue()="2"
	and target_0.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_0.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key *")
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="3"
	and not target_1.getValue()="2"
	and target_1.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_1.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key *")
	and target_1.getEnclosingFunction() = func
}

from Function func, Literal target_0, Literal target_1
where
func_0(func, target_0)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
