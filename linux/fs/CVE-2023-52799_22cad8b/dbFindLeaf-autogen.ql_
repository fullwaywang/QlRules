/**
 * @name linux-22cad8bc1d36547cdae0eef316c47d917ce3147c-dbFindLeaf
 * @id cpp/linux/22cad8bc1d36547cdae0eef316c47d917ce3147c/dbfindleaf
 * @description linux-22cad8bc1d36547cdae0eef316c47d917ce3147c-fs/jfs/jfs_dmap.c-dbFindLeaf CVE-2023-52799
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_0.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getType().hasName("bool")
	and target_0.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(AddExpr).getValue()="1365"
	and target_0.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(AddExpr).getValue()="341"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(Variable vn_2938, Variable vx_2938, IfStmt target_3, PostfixIncrExpr target_4, RelationalOperation target_5, ExprStmt target_6) {
exists(IfStmt target_1 |
	target_1.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vx_2938
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vn_2938
	and target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-28"
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_1.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getLocation())
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getLocation().isBefore(target_5.getGreaterOperand().(ArrayExpr).getArrayOffset().(AddExpr).getRightOperand().(VariableAccess).getLocation())
	and target_6.getExpr().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_2(Function func, IfStmt target_2) {
	target_2.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="stree"
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="t2"
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dmtree_t *")
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-28"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vn_2938, Variable vx_2938, IfStmt target_3) {
	target_3.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="stree"
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="t2"
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dmtree_t *")
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayOffset().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vx_2938
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayOffset().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vn_2938
}

predicate func_4(Variable vn_2938, PostfixIncrExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vn_2938
}

predicate func_5(Variable vn_2938, Variable vx_2938, RelationalOperation target_5) {
	 (target_5 instanceof GEExpr or target_5 instanceof LEExpr)
	and target_5.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getGreaterOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="stree"
	and target_5.getGreaterOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="t2"
	and target_5.getGreaterOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dmtree_t *")
	and target_5.getGreaterOperand().(ArrayExpr).getArrayOffset().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vx_2938
	and target_5.getGreaterOperand().(ArrayExpr).getArrayOffset().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vn_2938
}

predicate func_6(Variable vn_2938, Variable vx_2938, ExprStmt target_6) {
	target_6.getExpr().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vx_2938
	and target_6.getExpr().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getExpr().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vn_2938
	and target_6.getExpr().(CommaExpr).getRightOperand().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Variable vn_2938, Variable vx_2938, IfStmt target_2, IfStmt target_3, PostfixIncrExpr target_4, RelationalOperation target_5, ExprStmt target_6
where
not func_0(target_2, func)
and not func_1(vn_2938, vx_2938, target_3, target_4, target_5, target_6)
and func_2(func, target_2)
and func_3(vn_2938, vx_2938, target_3)
and func_4(vn_2938, target_4)
and func_5(vn_2938, vx_2938, target_5)
and func_6(vn_2938, vx_2938, target_6)
and vn_2938.getType().hasName("int")
and vx_2938.getType().hasName("int")
and vn_2938.(LocalVariable).getFunction() = func
and vx_2938.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
