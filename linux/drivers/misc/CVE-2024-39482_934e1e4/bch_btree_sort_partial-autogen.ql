/**
 * @name linux-934e1e4331859183a861f396d7dfaf33cb5afb02-bch_btree_sort_partial
 * @id cpp/linux/934e1e4331859183a861f396d7dfaf33cb5afb02/bch-btree-sort-partial
 * @description linux-934e1e4331859183a861f396d7dfaf33cb5afb02-drivers/md/bcache/bset.c-bch_btree_sort_partial CVE-2024-39482
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable viter_1296, Parameter vb_1292, Parameter vstart_1292, FunctionCall target_1) {
	exists(AddressOfExpr obj_0 | obj_0=target_1.getArgument(3) |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				obj_2.getTarget().getName()="set"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vb_1292
			)
			and obj_1.getArrayOffset().(VariableAccess).getTarget()=vstart_1292
		)
	)
	and target_1.getTarget().hasName("__bch_btree_iter_init")
	and not target_1.getTarget().hasName("__bch_btree_iter_stack_init")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vb_1292
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_1296
	and target_1.getArgument(2).(Literal).getValue()="0"
}

predicate func_2(Variable viter_1296, AddressOfExpr target_4, AddressOfExpr target_5) {
exists(ValueFieldAccess target_2 |
	target_2.getTarget().getName()="iter"
	and target_2.getQualifier().(VariableAccess).getTarget()=viter_1296
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(VariableAccess).getLocation())
	and target_2.getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(VariableAccess).getLocation())
)
}

predicate func_3(Variable viter_1296, Parameter vb_1292, Parameter vstart_1292, NotExpr target_7, ExprStmt target_8, VariableAccess target_3) {
	exists(AddressOfExpr obj_0 | obj_0=target_3.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getParent() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getTarget().hasName("__btree_sort")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=vb_1292
					and obj_3.getArgument(2).(VariableAccess).getTarget()=vstart_1292
					and obj_3.getArgument(3).(VariableAccess).getTarget().getType().hasName("size_t")
					and obj_3.getArgument(5).(VariableAccess).getTarget().getType().hasName("bset_sort_state *")
					and obj_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
				)
			)
		)
	)
	and target_3.getTarget()=viter_1296
	and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
}

predicate func_4(Variable viter_1296, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=viter_1296
}

predicate func_5(Variable viter_1296, AddressOfExpr target_5) {
	target_5.getOperand().(VariableAccess).getTarget()=viter_1296
}

predicate func_7(Parameter vb_1292, NotExpr target_7) {
	exists(NotExpr obj_0 | obj_0=target_7.getOperand() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(RelationalOperation obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
				and obj_2.getLesserOperand() instanceof Literal
			)
			and exists(EqualityOperation obj_3 | obj_3=obj_1.getRightOperand() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getLeftOperand() |
					obj_4.getTarget().hasName("bch_count_data")
					and obj_4.getArgument(0).(VariableAccess).getTarget()=vb_1292
				)
				and obj_3.getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
			)
		)
	)
}

predicate func_8(Parameter vstart_1292, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and obj_0.getRValue().(VariableAccess).getTarget()=vstart_1292
	)
}

from Function func, Variable viter_1296, Parameter vb_1292, Parameter vstart_1292, FunctionCall target_1, VariableAccess target_3, AddressOfExpr target_4, AddressOfExpr target_5, NotExpr target_7, ExprStmt target_8
where
func_1(viter_1296, vb_1292, vstart_1292, target_1)
and not func_2(viter_1296, target_4, target_5)
and func_3(viter_1296, vb_1292, vstart_1292, target_7, target_8, target_3)
and func_4(viter_1296, target_4)
and func_5(viter_1296, target_5)
and func_7(vb_1292, target_7)
and func_8(vstart_1292, target_8)
and viter_1296.getType().hasName("btree_iter")
and vb_1292.getType().hasName("btree_keys *")
and vstart_1292.getType().hasName("unsigned int")
and viter_1296.(LocalVariable).getFunction() = func
and vb_1292.getFunction() = func
and vstart_1292.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
