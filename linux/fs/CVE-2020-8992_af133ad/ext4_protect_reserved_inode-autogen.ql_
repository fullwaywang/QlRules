/**
 * @name linux-af133ade9a40794a37104ecbcc2827c0ea373a3c-ext4_protect_reserved_inode
 * @id cpp/linux/af133ade9a40794a37104ecbcc2827c0ea373a3c/ext4-protect-reserved-inode
 * @description linux-af133ade9a40794a37104ecbcc2827c0ea373a3c-fs/ext4/block_validity.c-ext4_protect_reserved_inode CVE-2020-8992
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("___might_sleep")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof Literal
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_cond_resched")
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="m_lblk"
	and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
