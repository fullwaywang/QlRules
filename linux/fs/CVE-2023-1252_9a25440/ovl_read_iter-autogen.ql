/**
 * @name linux-9a254403760041528bc8f69fe2f5e1ef86950991-ovl_read_iter
 * @id cpp/linux/9a254403760041528bc8f69fe2f5e1ef86950991/ovl-read-iter
 * @description linux-9a254403760041528bc8f69fe2f5e1ef86950991-fs/overlayfs/file.c-ovl_read_iter CVE-2023-1252
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vaio_req_310, FunctionCall target_2, ExprStmt target_3, AddressOfExpr target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("refcount_set")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ref"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaio_req_310
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="2"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(9)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vaio_req_310, FunctionCall target_2, AddressOfExpr target_4, ExprStmt target_5) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("ovl_aio_put")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vaio_req_310
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(11)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Function func, FunctionCall target_2) {
	target_2.getTarget().hasName("is_sync_kiocb")
	and target_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("kiocb *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vaio_req_310, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ki_complete"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="iocb"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaio_req_310
}

predicate func_4(Variable vaio_req_310, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="iocb"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaio_req_310
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vfs_iocb_iter_read")
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="file"
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("fd")
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("iov_iter *")
}

predicate func_5(Variable vaio_req_310, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("ovl_aio_cleanup_handler")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vaio_req_310
}

from Function func, Variable vaio_req_310, FunctionCall target_2, ExprStmt target_3, AddressOfExpr target_4, ExprStmt target_5
where
not func_0(vaio_req_310, target_2, target_3, target_4)
and not func_1(vaio_req_310, target_2, target_4, target_5)
and func_2(func, target_2)
and func_3(vaio_req_310, target_3)
and func_4(vaio_req_310, target_4)
and func_5(vaio_req_310, target_5)
and vaio_req_310.getType().hasName("ovl_aio_req *")
and vaio_req_310.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
