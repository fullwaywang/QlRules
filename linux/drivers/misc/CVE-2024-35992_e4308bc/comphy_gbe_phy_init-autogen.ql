/**
 * @name linux-e4308bc22b9d46cf33165c9dfaeebcf29cd56f04-comphy_gbe_phy_init
 * @id cpp/linux/e4308bc22b9d46cf33165c9dfaeebcf29cd56f04/comphy-gbe-phy-init
 * @description linux-e4308bc22b9d46cf33165c9dfaeebcf29cd56f04-drivers/phy/marvell/phy-mvebu-a3700-comphy.c-comphy_gbe_phy_init CVE-2024-35992
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfix_idx_602, BlockStmt target_5) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand() instanceof RelationalOperation
	and target_0.getParent().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="addr"
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vfix_idx_602
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_5)
}

predicate func_1(Parameter vis_1gbps_600, Variable vfix_idx_602, BlockStmt target_5, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vis_1gbps_600
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="addr"
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vfix_idx_602
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_2(Variable vfix_idx_602, ExprStmt target_3, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vfix_idx_602
	and target_2.getGreaterOperand().(AddExpr).getValue()="25"
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Variable vfix_idx_602, RelationalOperation target_2, ExprStmt target_3) {
	target_3.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vfix_idx_602
	and target_3.getParent().(IfStmt).getCondition()=target_2
}

predicate func_4(LogicalAndExpr target_6, Function func, IfStmt target_4) {
	target_4.getCondition() instanceof RelationalOperation
	and target_4.getThen() instanceof ExprStmt
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vfix_idx_602, BlockStmt target_5) {
	target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u16")
	and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="value"
	and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vfix_idx_602
	and target_5.getStmt(1) instanceof IfStmt
}

predicate func_6(Variable vfix_idx_602, LogicalAndExpr target_6) {
	target_6.getLeftOperand() instanceof NotExpr
	and target_6.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="addr"
	and target_6.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_6.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vfix_idx_602
	and target_6.getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vis_1gbps_600, Variable vfix_idx_602, NotExpr target_1, RelationalOperation target_2, ExprStmt target_3, IfStmt target_4, BlockStmt target_5, LogicalAndExpr target_6
where
not func_0(vfix_idx_602, target_5)
and func_1(vis_1gbps_600, vfix_idx_602, target_5, target_1)
and func_2(vfix_idx_602, target_3, target_2)
and func_3(vfix_idx_602, target_2, target_3)
and func_4(target_6, func, target_4)
and func_5(vfix_idx_602, target_5)
and func_6(vfix_idx_602, target_6)
and vis_1gbps_600.getType().hasName("bool")
and vfix_idx_602.getType().hasName("int")
and vis_1gbps_600.getFunction() = func
and vfix_idx_602.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
