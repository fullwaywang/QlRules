/**
 * @name linux-29b0589a865b6f66d141d79b2dd1373e4e50fe17-ene_remove
 * @id cpp/linux/29b0589a865b6f66d141d79b2dd1373e4e50fe17/ene-remove
 * @description linux-29b0589a865b6f66d141d79b2dd1373e4e50fe17-drivers/media/rc/ene_ir.c-ene_remove CVE-2023-1118
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdev_1106, ExprStmt target_2, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("rc_unregister_device")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="rdev"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1106
	and target_2.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vdev_1106, ExprStmt target_3, AddressOfExpr target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("del_timer_sync")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tx_sim_timer"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1106
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vdev_1106, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("__release_region")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("resource")
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="hw_io"
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1106
	and target_2.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="4"
}

predicate func_3(Variable vdev_1106, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("ene_rx_disable")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_1106
}

predicate func_4(Variable vdev_1106, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="hw_lock"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1106
	and target_4.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

from Function func, Variable vdev_1106, ExprStmt target_0, ExprStmt target_2, ExprStmt target_3, AddressOfExpr target_4
where
func_0(vdev_1106, target_2, target_0)
and not func_1(vdev_1106, target_3, target_4, func)
and func_2(vdev_1106, target_2)
and func_3(vdev_1106, target_3)
and func_4(vdev_1106, target_4)
and vdev_1106.getType().hasName("ene_device *")
and vdev_1106.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
