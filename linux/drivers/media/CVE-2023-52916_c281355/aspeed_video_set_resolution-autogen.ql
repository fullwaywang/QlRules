/**
 * @name linux-c281355068bc258fd619c5aefd978595bede7bfe-aspeed_video_set_resolution
 * @id cpp/linux/c281355068bc258fd619c5aefd978595bede7bfe/aspeed-video-set-resolution
 * @description linux-c281355068bc258fd619c5aefd978595bede7bfe-drivers/media/platform/aspeed/aspeed-video.c-aspeed_video_set_resolution CVE-2023-52916
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vact_1131, NotExpr target_4) {
exists(BitwiseAndExpr target_0 |
	exists(AddExpr obj_0 | obj_0=target_0.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="height"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vact_1131
		)
		and obj_0.getRightOperand().(SubExpr).getValue()="7"
	)
	and target_0.getRightOperand().(ComplementExpr).getValue()="4294967288"
	and target_0.getLeftOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vact_1131, BitwiseOrExpr target_5) {
exists(BitwiseAndExpr target_1 |
	exists(AddExpr obj_0 | obj_0=target_1.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="height"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vact_1131
		)
		and obj_0.getRightOperand().(SubExpr).getValue()="7"
	)
	and target_1.getRightOperand().(ComplementExpr).getValue()="4294967288"
	and target_1.getLeftOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vact_1131, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="height"
	and target_2.getQualifier().(VariableAccess).getTarget()=vact_1131
}

predicate func_3(Variable vact_1131, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="height"
	and target_3.getQualifier().(VariableAccess).getTarget()=vact_1131
}

predicate func_4(Variable vact_1131, NotExpr target_4) {
	exists(EqualityOperation obj_0 | obj_0=target_4.getOperand() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().getName()="width"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vact_1131
			)
			and obj_1.getRightOperand().(SubExpr).getValue()="63"
		)
		and obj_0.getRightOperand().(Literal).getValue()="0"
	)
}

predicate func_5(Variable vact_1131, BitwiseOrExpr target_5) {
	exists(BinaryBitwiseOperation obj_0 | obj_0=target_5.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="width"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vact_1131
		)
		and obj_0.getRightOperand().(Literal).getValue()="16"
	)
	and exists(PointerFieldAccess obj_2 | obj_2=target_5.getRightOperand() |
		obj_2.getTarget().getName()="height"
		and obj_2.getQualifier().(VariableAccess).getTarget()=vact_1131
	)
	and exists(FunctionCall obj_3 | obj_3=target_5.getParent() |
		exists(ExprStmt obj_4 | obj_4=obj_3.getParent() |
			exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
				obj_5.getTarget().hasName("aspeed_video_write")
				and obj_5.getArgument(0).(VariableAccess).getTarget().getType().hasName("aspeed_video *")
				and obj_5.getArgument(1).(Literal).getValue()="48"
			)
		)
	)
}

from Function func, Variable vact_1131, PointerFieldAccess target_2, PointerFieldAccess target_3, NotExpr target_4, BitwiseOrExpr target_5
where
not func_0(vact_1131, target_4)
and not func_1(vact_1131, target_5)
and func_2(vact_1131, target_2)
and func_3(vact_1131, target_3)
and func_4(vact_1131, target_4)
and func_5(vact_1131, target_5)
and vact_1131.getType().hasName("v4l2_bt_timings *")
and vact_1131.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
