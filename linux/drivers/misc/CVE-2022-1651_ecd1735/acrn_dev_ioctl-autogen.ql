/**
 * @name linux-ecd1735f14d6ac868ae5d8b7a2bf193fa11f388b-acrn_dev_ioctl
 * @id cpp/linux/ecd1735f14d6ac868ae5d8b7a2bf193fa11f388b/acrn-dev-ioctl
 * @description linux-ecd1735f14d6ac868ae5d8b7a2bf193fa11f388b-acrn_dev_ioctl CVE-2022-1651
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvm_param_111, EqualityOperation target_12, ExprStmt target_13) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvm_param_111
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_13.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Variable vcpu_regs_112, ArrayExpr target_14, ValueFieldAccess target_15) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcpu_regs_112
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vcpu_regs_112, ArrayExpr target_16, ValueFieldAccess target_17) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcpu_regs_112
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_17.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vcpu_regs_112, ArrayExpr target_18, ValueFieldAccess target_19) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcpu_regs_112
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_4
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_19.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Variable vcpu_regs_112, BitwiseOrExpr target_20, ValueFieldAccess target_21, FunctionCall target_22) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcpu_regs_112
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_5
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
		and target_21.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_22.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_6(BitwiseOrExpr target_20, Function func) {
	exists(ReturnStmt target_6 |
		target_6.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_6
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
		and target_6.getEnclosingFunction() = func)
}

/*predicate func_7(Function func, UnaryMinusExpr target_7) {
		target_7.getValue()="-22"
		and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(ArrayExpr target_14, Function func, ReturnStmt target_8) {
		target_8.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_8.getParent().(IfStmt).getCondition()=target_14
		and target_8.getEnclosingFunction() = func
}

predicate func_9(ArrayExpr target_16, Function func, ReturnStmt target_9) {
		target_9.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_9.getParent().(IfStmt).getCondition()=target_16
		and target_9.getEnclosingFunction() = func
}

predicate func_10(ArrayExpr target_18, Function func, ReturnStmt target_10) {
		target_10.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_10.getParent().(IfStmt).getCondition()=target_18
		and target_10.getEnclosingFunction() = func
}

predicate func_11(BitwiseOrExpr target_20, Function func, ReturnStmt target_11) {
		target_11.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_11.getParent().(IfStmt).getCondition()=target_20
		and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vvm_param_111, EqualityOperation target_12) {
		target_12.getAnOperand().(BitwiseOrExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="reserved0"
		and target_12.getAnOperand().(BitwiseOrExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvm_param_111
		and target_12.getAnOperand().(BitwiseOrExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="reserved1"
		and target_12.getAnOperand().(BitwiseOrExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvm_param_111
		and target_12.getAnOperand().(Literal).getValue()="0"
}

predicate func_13(Variable vvm_param_111, ExprStmt target_13) {
		target_13.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("acrn_vm *")
		and target_13.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("acrn_vm_create")
		and target_13.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("acrn_vm *")
		and target_13.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvm_param_111
}

predicate func_14(Variable vcpu_regs_112, ArrayExpr target_14) {
		target_14.getArrayBase().(PointerFieldAccess).getTarget().getName()="reserved"
		and target_14.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
		and target_14.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_15(Variable vcpu_regs_112, ValueFieldAccess target_15) {
		target_15.getTarget().getName()="reserved_32"
		and target_15.getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
}

predicate func_16(Variable vcpu_regs_112, ArrayExpr target_16) {
		target_16.getArrayBase().(ValueFieldAccess).getTarget().getName()="reserved_32"
		and target_16.getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_16.getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
		and target_16.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_17(Variable vcpu_regs_112, ValueFieldAccess target_17) {
		target_17.getTarget().getName()="reserved_64"
		and target_17.getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_17.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
}

predicate func_18(Variable vcpu_regs_112, ArrayExpr target_18) {
		target_18.getArrayBase().(ValueFieldAccess).getTarget().getName()="reserved_64"
		and target_18.getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_18.getArrayBase().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
		and target_18.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_19(Variable vcpu_regs_112, ValueFieldAccess target_19) {
		target_19.getTarget().getName()="gdt"
		and target_19.getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_19.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
}

predicate func_20(Variable vcpu_regs_112, BitwiseOrExpr target_20) {
		target_20.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="reserved"
		and target_20.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="gdt"
		and target_20.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_20.getLeftOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
		and target_20.getLeftOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
		and target_20.getRightOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="reserved"
		and target_20.getRightOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="idt"
		and target_20.getRightOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_20.getRightOperand().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
		and target_20.getRightOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_21(Variable vcpu_regs_112, ValueFieldAccess target_21) {
		target_21.getTarget().getName()="idt"
		and target_21.getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu_regs"
		and target_21.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcpu_regs_112
}

predicate func_22(Variable vcpu_regs_112, FunctionCall target_22) {
		target_22.getTarget().hasName("virt_to_phys")
		and target_22.getArgument(0).(VariableAccess).getTarget()=vcpu_regs_112
}

from Function func, Variable vvm_param_111, Variable vcpu_regs_112, ReturnStmt target_8, ReturnStmt target_9, ReturnStmt target_10, ReturnStmt target_11, EqualityOperation target_12, ExprStmt target_13, ArrayExpr target_14, ValueFieldAccess target_15, ArrayExpr target_16, ValueFieldAccess target_17, ArrayExpr target_18, ValueFieldAccess target_19, BitwiseOrExpr target_20, ValueFieldAccess target_21, FunctionCall target_22
where
not func_0(vvm_param_111, target_12, target_13)
and not func_2(vcpu_regs_112, target_14, target_15)
and not func_3(vcpu_regs_112, target_16, target_17)
and not func_4(vcpu_regs_112, target_18, target_19)
and not func_5(vcpu_regs_112, target_20, target_21, target_22)
and not func_6(target_20, func)
and func_8(target_14, func, target_8)
and func_9(target_16, func, target_9)
and func_10(target_18, func, target_10)
and func_11(target_20, func, target_11)
and func_12(vvm_param_111, target_12)
and func_13(vvm_param_111, target_13)
and func_14(vcpu_regs_112, target_14)
and func_15(vcpu_regs_112, target_15)
and func_16(vcpu_regs_112, target_16)
and func_17(vcpu_regs_112, target_17)
and func_18(vcpu_regs_112, target_18)
and func_19(vcpu_regs_112, target_19)
and func_20(vcpu_regs_112, target_20)
and func_21(vcpu_regs_112, target_21)
and func_22(vcpu_regs_112, target_22)
and vvm_param_111.getType().hasName("acrn_vm_creation *")
and vcpu_regs_112.getType().hasName("acrn_vcpu_regs *")
and vvm_param_111.(LocalVariable).getFunction() = func
and vcpu_regs_112.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
