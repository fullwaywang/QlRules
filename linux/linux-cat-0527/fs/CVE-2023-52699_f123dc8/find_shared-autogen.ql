/**
 * @name linux-f123dc86388cb669c3d6322702dc441abc35c31e-find_shared
 * @id cpp/linux/f123dc86388cb669c3d6322702dc441abc35c31e/find-shared
 * @description linux-f123dc86388cb669c3d6322702dc441abc35c31e-fs/sysv/itree.c-find_shared CVE-2023-52699
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_282, Parameter voffsets_284, Parameter vchain_285, Variable vpartial_288, Variable vk_289, Variable verr_289, ExprStmt target_1, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpartial_288
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_branch")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_282
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vk_289
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=voffsets_284
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vchain_285
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=verr_289
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("_raw_write_lock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("rwlock_t")
	and target_1.getEnclosingFunction() = func
}

from Function func, Parameter vinode_282, Parameter voffsets_284, Parameter vchain_285, Variable vpartial_288, Variable vk_289, Variable verr_289, ExprStmt target_0, ExprStmt target_1
where
func_0(vinode_282, voffsets_284, vchain_285, vpartial_288, vk_289, verr_289, target_1, target_0)
and func_1(func, target_1)
and vinode_282.getType().hasName("inode *")
and voffsets_284.getType().hasName("int[]")
and vchain_285.getType().hasName("Indirect[]")
and vpartial_288.getType().hasName("Indirect *")
and vk_289.getType().hasName("int")
and verr_289.getType().hasName("int")
and vinode_282.getFunction() = func
and voffsets_284.getFunction() = func
and vchain_285.getFunction() = func
and vpartial_288.(LocalVariable).getFunction() = func
and vk_289.(LocalVariable).getFunction() = func
and verr_289.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
