/**
 * @name linux-a0f90c8815706981c483a652a6aefca51a5e191c-vmw_execbuf_copy_fence_user
 * @id cpp/linux/a0f90c8815706981c483a652a6aefca51a5e191c/vmw-execbuf-copy-fence-user
 * @description linux-a0f90c8815706981c483a652a6aefca51a5e191c-drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c-vmw_execbuf_copy_fence_user CVE-2022-22942
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BlockStmt target_7, Function func, UnaryMinusExpr target_0) {
	target_0.getValue()="-1"
	and target_0.getParent().(NEExpr).getLeftOperand() instanceof ValueFieldAccess
	and target_0.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_7
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="1"
	and not target_1.getValue()="0"
	and target_1.getParent().(UnaryMinusExpr).getParent().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vret_3884, NotExpr target_8) {
exists(ConditionalExpr target_2 |
	target_2.getCondition().(VariableAccess).getTarget()=vret_3884
	and target_2.getThen().(UnaryMinusExpr).getValue()="-14"
	and target_2.getElse().(Literal).getValue()="0"
	and target_8.getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_2.getCondition().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vsync_file_3887, LogicalAndExpr target_9, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget()=vsync_file_3887
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fput")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="file"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsync_file_3887
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_4(Variable vfence_rep_3889, LogicalAndExpr target_9, IfStmt target_4) {
	target_4.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="fd"
	and target_4.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfence_rep_3889
	and target_4.getCondition().(EqualityOperation).getRightOperand() instanceof UnaryMinusExpr
	and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_unused_fd")
	and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="fd"
	and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfence_rep_3889
	and target_4.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="fd"
	and target_4.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfence_rep_3889
	and target_4.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

/*predicate func_5(Variable vfence_rep_3889, EqualityOperation target_10, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("put_unused_fd")
	and target_5.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="fd"
	and target_5.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfence_rep_3889
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

*/
/*predicate func_6(Variable vfence_rep_3889, EqualityOperation target_10, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="fd"
	and target_6.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfence_rep_3889
	and target_6.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

*/
predicate func_7(Function func, BlockStmt target_7) {
	target_7.getStmt(0) instanceof ExprStmt
	and target_7.getStmt(1) instanceof ExprStmt
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Parameter vret_3884, NotExpr target_8) {
	target_8.getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vret_3884
	and target_8.getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
}

predicate func_9(Parameter vret_3884, Variable vfence_rep_3889, LogicalAndExpr target_9) {
	target_9.getLeftOperand().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_9.getLeftOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vret_3884
	and target_9.getLeftOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_9.getLeftOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_9.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="error"
	and target_9.getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfence_rep_3889
	and target_9.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
}

predicate func_10(Function func, EqualityOperation target_10) {
	target_10.getLeftOperand() instanceof ValueFieldAccess
	and target_10.getRightOperand() instanceof UnaryMinusExpr
	and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vret_3884, Parameter vsync_file_3887, Variable vfence_rep_3889, UnaryMinusExpr target_0, Literal target_1, IfStmt target_3, IfStmt target_4, BlockStmt target_7, NotExpr target_8, LogicalAndExpr target_9, EqualityOperation target_10
where
func_0(target_7, func, target_0)
and func_1(func, target_1)
and not func_2(vret_3884, target_8)
and func_3(vsync_file_3887, target_9, target_3)
and func_4(vfence_rep_3889, target_9, target_4)
and func_7(func, target_7)
and func_8(vret_3884, target_8)
and func_9(vret_3884, vfence_rep_3889, target_9)
and func_10(func, target_10)
and vret_3884.getType().hasName("int")
and vsync_file_3887.getType().hasName("sync_file *")
and vfence_rep_3889.getType().hasName("drm_vmw_fence_rep")
and vret_3884.getFunction() = func
and vsync_file_3887.getFunction() = func
and vfence_rep_3889.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
