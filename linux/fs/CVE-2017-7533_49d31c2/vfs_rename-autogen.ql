/**
 * @name linux-49d31c2f389acfe83417083e1208422b4091cd9-vfs_rename
 * @id cpp/linux/49d31c2f389acfe83417083e1208422b4091cd9/vfs-rename
 * @description linux-49d31c2f389acfe83417083e1208422b4091cd9-fs/namei.c-vfs_rename CVE-2017-7533
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vold_name_4365, FunctionCall target_1) {
		target_1.getTarget().hasName("fsnotify_oldname_free")
		and not target_1.getTarget().hasName("take_dentry_name_snapshot")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vold_name_4365
}

predicate func_2(Variable vold_name_4365) {
	exists(AddressOfExpr target_2 |
		target_2.getOperand().(VariableAccess).getTarget()=vold_name_4365
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall)
}

predicate func_3(Variable vold_name_4365, ExprStmt target_10) {
	exists(ValueFieldAccess target_3 |
		target_3.getTarget().getName()="name"
		and target_3.getQualifier().(VariableAccess).getTarget()=vold_name_4365
		and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_4(Variable vold_name_4365, ExprStmt target_10) {
	exists(FunctionCall target_4 |
		target_4.getTarget().hasName("release_dentry_name_snapshot")
		and target_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vold_name_4365
		and target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_5(Parameter vold_dentry_4359, VariableAccess target_5) {
		target_5.getTarget()=vold_dentry_4359
		and target_5.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_6(Variable vold_name_4365, Parameter vold_dentry_4359, AssignExpr target_6) {
		target_6.getLValue().(VariableAccess).getTarget()=vold_name_4365
		and target_6.getRValue().(FunctionCall).getTarget().hasName("fsnotify_oldname_init")
		and target_6.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="name"
		and target_6.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="d_name"
		and target_6.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vold_dentry_4359
}

predicate func_7(Variable vold_name_4365, Parameter vold_dentry_4359, ExprStmt target_11, ValueFieldAccess target_12, VariableAccess target_7) {
		target_7.getTarget()=vold_name_4365
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fsnotify_move")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("inode *")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("bool")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="2"
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getThen().(VariableAccess).getTarget().getType().hasName("inode *")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getElse().(Literal).getValue()="0"
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vold_dentry_4359
		and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(5).(VariableAccess).getLocation())
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(5).(VariableAccess).getLocation().isBefore(target_12.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_10(Variable vold_name_4365, Parameter vold_dentry_4359, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("fsnotify_move")
		and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
		and target_10.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("inode *")
		and target_10.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vold_name_4365
		and target_10.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("bool")
		and target_10.getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_10.getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="2"
		and target_10.getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getThen().(VariableAccess).getTarget().getType().hasName("inode *")
		and target_10.getExpr().(FunctionCall).getArgument(4).(ConditionalExpr).getElse().(Literal).getValue()="0"
		and target_10.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vold_dentry_4359
}

predicate func_11(Parameter vold_dentry_4359, ExprStmt target_11) {
		target_11.getExpr().(FunctionCall).getTarget().hasName("d_exchange")
		and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_dentry_4359
		and target_11.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("dentry *")
}

predicate func_12(Parameter vold_dentry_4359, ValueFieldAccess target_12) {
		target_12.getTarget().getName()="name"
		and target_12.getQualifier().(PointerFieldAccess).getTarget().getName()="d_name"
		and target_12.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vold_dentry_4359
}

from Function func, Variable vold_name_4365, Parameter vold_dentry_4359, FunctionCall target_1, VariableAccess target_5, AssignExpr target_6, VariableAccess target_7, ExprStmt target_10, ExprStmt target_11, ValueFieldAccess target_12
where
func_1(vold_name_4365, target_1)
and not func_2(vold_name_4365)
and not func_3(vold_name_4365, target_10)
and not func_4(vold_name_4365, target_10)
and func_5(vold_dentry_4359, target_5)
and func_6(vold_name_4365, vold_dentry_4359, target_6)
and func_7(vold_name_4365, vold_dentry_4359, target_11, target_12, target_7)
and func_10(vold_name_4365, vold_dentry_4359, target_10)
and func_11(vold_dentry_4359, target_11)
and func_12(vold_dentry_4359, target_12)
and vold_name_4365.getType().hasName("const unsigned char *")
and vold_dentry_4359.getType().hasName("dentry *")
and vold_name_4365.(LocalVariable).getFunction() = func
and vold_dentry_4359.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
