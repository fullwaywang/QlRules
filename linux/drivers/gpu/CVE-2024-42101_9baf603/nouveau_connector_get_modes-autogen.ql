/**
 * @name linux-9baf60323efa992b7c915094529f0a1882c34e7e-nouveau_connector_get_modes
 * @id cpp/linux/9baf60323efa992b7c915094529f0a1882c34e7e/nouveau-connector-get-modes
 * @description linux-9baf60323efa992b7c915094529f0a1882c34e7e-drivers/gpu/drm/nouveau/nouveau_connector.c-nouveau_connector_get_modes CVE-2024-42101
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmode_934, LogicalAndExpr target_1, ExprStmt target_2, ExprStmt target_3) {
exists(IfStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(2)=target_0
			and obj_1.getCondition()=target_1
		)
	)
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vmode_934
	and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
)
}

predicate func_1(Function func, LogicalAndExpr target_1) {
	exists(EqualityOperation obj_0 | obj_0=target_1.getLeftOperand() |
		obj_0.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
		and obj_0.getRightOperand().(Literal).getValue()="0"
	)
	and exists(PointerFieldAccess obj_1 | obj_1=target_1.getRightOperand() |
		obj_1.getTarget().getName()="native_mode"
		and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("nouveau_connector *")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vmode_934, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(1) |
				obj_2.getTarget().getName()="native_mode"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("nouveau_connector *")
			)
			and obj_1.getTarget().hasName("drm_mode_duplicate")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("drm_device *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vmode_934
	)
}

predicate func_3(Variable vmode_934, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("drm_mode_probed_add")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("drm_connector *")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vmode_934
	)
}

from Function func, Variable vmode_934, LogicalAndExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vmode_934, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vmode_934, target_2)
and func_3(vmode_934, target_3)
and vmode_934.getType().hasName("drm_display_mode *")
and vmode_934.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
