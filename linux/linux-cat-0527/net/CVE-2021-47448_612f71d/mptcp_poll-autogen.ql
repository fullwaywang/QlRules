/**
 * @name linux-612f71d7328c14369924384ad2170aae2a6abd92-mptcp_poll
 * @id cpp/linux/612f71d7328c14369924384ad2170aae2a6abd92/mptcp-poll
 * @description linux-612f71d7328c14369924384ad2170aae2a6abd92-net/mptcp/protocol.c-mptcp_poll CVE-2021-47448
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmsk_3414, ExprStmt target_3) {
exists(ConditionalExpr target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("test_bit")
	and target_0.getCondition().(FunctionCall).getArgument(0).(Literal).getValue()="0"
	and target_0.getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsk_3414
	and target_0.getThen().(BitwiseOrExpr).getValue()="65"
	and target_0.getElse().(Literal).getValue()="0"
	and target_0.getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignOrExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vmsk_3414, VariableAccess target_1) {
	target_1.getTarget()=vmsk_3414
	and target_1.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vmsk_3414, ExprStmt target_3, FunctionCall target_2) {
	target_2.getTarget().hasName("mptcp_check_readable")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vmsk_3414
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignOrExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_3(Variable vmsk_3414, ExprStmt target_3) {
	target_3.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget().getType().hasName("__poll_t")
	and target_3.getExpr().(AssignOrExpr).getRValue().(FunctionCall).getTarget().hasName("mptcp_check_readable")
	and target_3.getExpr().(AssignOrExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmsk_3414
}

from Function func, Variable vmsk_3414, VariableAccess target_1, FunctionCall target_2, ExprStmt target_3
where
not func_0(vmsk_3414, target_3)
and func_1(vmsk_3414, target_1)
and func_2(vmsk_3414, target_3, target_2)
and func_3(vmsk_3414, target_3)
and vmsk_3414.getType().hasName("mptcp_sock *")
and vmsk_3414.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
