/**
 * @name linux-2a017fd82c5402b3c8df5e3d6e5165d9e6147dc1-parse_hid_report_descriptor
 * @id cpp/linux/2a017fd82c5402b3c8df5e3d6e5165d9e6147dc1/parse-hid-report-descriptor
 * @description linux-2a017fd82c5402b3c8df5e3d6e5165d9e6147dc1-drivers/input/tablet/gtco.c-parse_hid_report_descriptor CVE-2019-13631
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmaintype_223, ExprStmt target_9, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmaintype_223
	and target_0.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="69"
	and target_0.getLocation().isBefore(target_9.getLocation())
}

predicate func_3(Variable vindent_225, Variable vddev_202, VariableAccess target_10, ExprStmt target_12, ExprStmt target_13) {
exists(IfStmt target_3 |
	target_3.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vindent_225
	and target_3.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="10"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_202
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Collection level %d would exceed limit of %d\n"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vindent_225
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddExpr).getRightOperand().(Literal).getValue()="1"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="10"
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_10
	and target_12.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

/*predicate func_4(Variable vindent_225, Variable vddev_202, RelationalOperation target_14, RelationalOperation target_15, ExprStmt target_12, ExprStmt target_13) {
exists(ExprStmt target_4 |
	target_4.getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_202
	and target_4.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Collection level %d would exceed limit of %d\n"
	and target_4.getExpr().(FunctionCall).getArgument(2).(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vindent_225
	and target_4.getExpr().(FunctionCall).getArgument(2).(AddExpr).getRightOperand().(Literal).getValue()="1"
	and target_4.getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="10"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_4
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_15.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(2).(AddExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_12.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

*/
/*predicate func_5(RelationalOperation target_14, Function func) {
exists(BreakStmt target_5 |
	target_5.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_5
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
	and target_5.getEnclosingFunction() = func)
}

*/
predicate func_6(Variable vindent_225, Variable vddev_202, VariableAccess target_10, RelationalOperation target_16, ExprStmt target_9, ExprStmt target_17, ExprStmt target_18) {
exists(IfStmt target_6 |
	target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vindent_225
	and target_6.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_202
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Collection level already at zero\n"
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_10
	and target_16.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_9.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getLocation())
	and target_17.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_18.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_9(Variable vindent_225, ExprStmt target_9) {
	target_9.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vindent_225
}

predicate func_10(Variable vtag_208, VariableAccess target_10) {
	target_10.getTarget()=vtag_208
}

predicate func_12(Variable vddev_202, Variable vtag_208, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("__dynamic_dev_dbg")
	and target_12.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_12.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vddev_202
	and target_12.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="%sGLOBALTAG:%s(%d) SIZE: %d Data: 0x%x\n"
	and target_12.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("char[10]")
	and target_12.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("char[12]")
	and target_12.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vtag_208
	and target_12.getExpr().(FunctionCall).getArgument(6).(VariableAccess).getTarget().getType().hasName("__u8")
	and target_12.getExpr().(FunctionCall).getArgument(7).(VariableAccess).getTarget().getType().hasName("__u32")
}

predicate func_13(Variable vddev_202, Variable vtag_208, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("__dynamic_dev_dbg")
	and target_13.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vddev_202
	and target_13.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="%sGLOBALTAG: ILLEGAL TAG:%d SIZE: %d\n"
	and target_13.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("char[10]")
	and target_13.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vtag_208
	and target_13.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("__u8")
}

predicate func_14(Variable vtag_208, RelationalOperation target_14) {
	 (target_14 instanceof GTExpr or target_14 instanceof LTExpr)
	and target_14.getLesserOperand().(VariableAccess).getTarget()=vtag_208
	and target_14.getGreaterOperand().(Literal).getValue()="12"
}

predicate func_15(Variable vindent_225, ExprStmt target_19, RelationalOperation target_15) {
	 (target_15 instanceof GTExpr or target_15 instanceof LTExpr)
	and target_15.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_15.getGreaterOperand().(VariableAccess).getTarget()=vindent_225
	and target_15.getParent().(ForStmt).getStmt()=target_19
}

predicate func_16(Variable vindent_225, ExprStmt target_20, RelationalOperation target_16) {
	 (target_16 instanceof GTExpr or target_16 instanceof LTExpr)
	and target_16.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_16.getGreaterOperand().(VariableAccess).getTarget()=vindent_225
	and target_16.getParent().(ForStmt).getStmt()=target_20
}

predicate func_17(Variable vddev_202, ExprStmt target_17) {
	target_17.getExpr().(FunctionCall).getTarget().hasName("__dynamic_dev_dbg")
	and target_17.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_17.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vddev_202
	and target_17.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="<<<<<<======\n"
}

predicate func_18(Variable vmaintype_223, Variable vddev_202, Variable vtag_208, ExprStmt target_18) {
	target_18.getExpr().(FunctionCall).getTarget().hasName("__dynamic_dev_dbg")
	and target_18.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_18.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vddev_202
	and target_18.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="%sMAINTAG:(%d) %c SIZE: %d Data: %s 0x%x\n"
	and target_18.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("char[10]")
	and target_18.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vtag_208
	and target_18.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vmaintype_223
	and target_18.getExpr().(FunctionCall).getArgument(6).(VariableAccess).getTarget().getType().hasName("__u8")
	and target_18.getExpr().(FunctionCall).getArgument(7).(VariableAccess).getTarget().getType().hasName("char[12]")
	and target_18.getExpr().(FunctionCall).getArgument(8).(VariableAccess).getTarget().getType().hasName("__u8")
}

predicate func_19(Function func, ExprStmt target_19) {
	target_19.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("char[10]")
	and target_19.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_19.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="45"
	and target_19.getEnclosingFunction() = func
}

predicate func_20(Function func, ExprStmt target_20) {
	target_20.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("char[10]")
	and target_20.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_20.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="45"
	and target_20.getEnclosingFunction() = func
}

from Function func, Variable vmaintype_223, Variable vindent_225, Variable vddev_202, Variable vtag_208, ExprStmt target_0, ExprStmt target_9, VariableAccess target_10, ExprStmt target_12, ExprStmt target_13, RelationalOperation target_14, RelationalOperation target_15, RelationalOperation target_16, ExprStmt target_17, ExprStmt target_18, ExprStmt target_19, ExprStmt target_20
where
func_0(vmaintype_223, target_9, target_0)
and not func_3(vindent_225, vddev_202, target_10, target_12, target_13)
and not func_6(vindent_225, vddev_202, target_10, target_16, target_9, target_17, target_18)
and func_9(vindent_225, target_9)
and func_10(vtag_208, target_10)
and func_12(vddev_202, vtag_208, target_12)
and func_13(vddev_202, vtag_208, target_13)
and func_14(vtag_208, target_14)
and func_15(vindent_225, target_19, target_15)
and func_16(vindent_225, target_20, target_16)
and func_17(vddev_202, target_17)
and func_18(vmaintype_223, vddev_202, vtag_208, target_18)
and func_19(func, target_19)
and func_20(func, target_20)
and vmaintype_223.getType().hasName("char")
and vindent_225.getType().hasName("int")
and vddev_202.getType().hasName("device *")
and vtag_208.getType().hasName("__u8")
and vmaintype_223.(LocalVariable).getFunction() = func
and vindent_225.(LocalVariable).getFunction() = func
and vddev_202.(LocalVariable).getFunction() = func
and vtag_208.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
