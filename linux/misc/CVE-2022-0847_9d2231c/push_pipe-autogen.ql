/**
 * @name linux-9d2231c5d74e13b2a0546fee6737ee4446017903-push_pipe
 * @id cpp/linux/9d2231c5d74e13b2a0546fee6737ee4446017903/push-pipe
 * @description linux-9d2231c5d74e13b2a0546fee6737ee4446017903-lib/iov_iter.c-push_pipe CVE-2022-0847
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbuf_574, ExprStmt target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_574
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vbuf_574, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="page"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_574
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("page *")
}

predicate func_2(Variable vbuf_574, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ops"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_574
	and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const pipe_buf_operations")
}

from Function func, Variable vbuf_574, ExprStmt target_1, ExprStmt target_2
where
not func_0(vbuf_574, target_1, target_2)
and func_1(vbuf_574, target_1)
and func_2(vbuf_574, target_2)
and vbuf_574.getType().hasName("pipe_buffer *")
and vbuf_574.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
