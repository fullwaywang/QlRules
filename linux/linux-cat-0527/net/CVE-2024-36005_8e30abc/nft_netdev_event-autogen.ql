/**
 * @name linux-8e30abc9ace4f0add4cd761dfdbfaebae5632dd2-nft_netdev_event
 * @id cpp/linux/8e30abc9ace4f0add4cd761dfdbfaebae5632dd2/nft-netdev-event
 * @description linux-8e30abc9ace4f0add4cd761dfdbfaebae5632dd2-net/netfilter/nft_chain_filter.c-nft_netdev_event CVE-2024-36005
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctx_322, RelationalOperation target_2, FunctionCall target_3, ExprStmt target_1) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="table"
	and target_0.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="chain"
	and target_0.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_322
	and target_0.getThen() instanceof ExprStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vctx_322, Variable vfound_325, RelationalOperation target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("nf_unregister_net_hook")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="net"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_322
	and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ops"
	and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfound_325
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getLesserOperand().(Literal).getValue()="1"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vctx_322, FunctionCall target_3) {
	target_3.getTarget().hasName("nft_base_chain")
	and target_3.getArgument(0).(PointerFieldAccess).getTarget().getName()="chain"
	and target_3.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_322
}

from Function func, Parameter vctx_322, Variable vfound_325, ExprStmt target_1, RelationalOperation target_2, FunctionCall target_3
where
not func_0(vctx_322, target_2, target_3, target_1)
and func_1(vctx_322, vfound_325, target_2, target_1)
and func_2(func, target_2)
and func_3(vctx_322, target_3)
and vctx_322.getType().hasName("nft_ctx *")
and vfound_325.getType().hasName("nft_hook *")
and vctx_322.getFunction() = func
and vfound_325.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
