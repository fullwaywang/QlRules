/**
 * @name linux-cef31d9af908243421258f1df35a4a644604efbe-good_sigevent
 * @id cpp/linux/cef31d9af908243421258f1df35a4a644604efbe/good-sigevent
 * @description linux-cef31d9af908243421258f1df35a4a644604efbe-kernel/time/posix-timers.c-good_sigevent CVE-2017-18344
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="4"
	and not target_0.getValue()="0"
	and target_0.getParent().(ComplementExpr).getParent().(BitwiseAndExpr).getRightOperand() instanceof ComplementExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="4"
	and not target_1.getValue()="2"
	and target_1.getParent().(ComplementExpr).getParent().(BitwiseAndExpr).getRightOperand() instanceof ComplementExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vrtn_435, Parameter vevent_433, IfStmt target_16, ValueFieldAccess target_18, Function func) {
exists(SwitchStmt target_2 |
	target_2.getExpr().(PointerFieldAccess).getTarget().getName()="sigev_notify"
	and target_2.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
	and target_2.getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr().(BitwiseOrExpr).getValue()="4"
	and target_2.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr() instanceof AssignExpr
	and target_2.getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vrtn_435
	and target_2.getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand() instanceof NotExpr
	and target_2.getStmt().(BlockStmt).getStmt(2).(IfStmt).getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(3).(SwitchCase).getExpr().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(4).(SwitchCase).getExpr().(Literal).getValue()="2"
	and target_2.getStmt().(BlockStmt).getStmt(5).(IfStmt).getCondition() instanceof LogicalOrExpr
	and target_2.getStmt().(BlockStmt).getStmt(5).(IfStmt).getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(6).(SwitchCase).getExpr() instanceof Literal
	and target_2.getStmt().(BlockStmt).getStmt(7) instanceof ReturnStmt
	and target_2.getStmt().(BlockStmt).getStmt(8).(SwitchCase).toString() = "default: "
	and target_2.getStmt().(BlockStmt).getStmt(9).(ReturnStmt).getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_16.getLocation())
	and target_2.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_18.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vevent_433, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="sigev_notify"
	and target_4.getQualifier().(VariableAccess).getTarget()=vevent_433
}

predicate func_5(Variable vrtn_435, Parameter vevent_433, AssignExpr target_5) {
	target_5.getLValue().(VariableAccess).getTarget()=vrtn_435
	and target_5.getRValue().(FunctionCall).getTarget().hasName("find_task_by_vpid")
	and target_5.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="_tid"
	and target_5.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="_sigev_un"
	and target_5.getRValue().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
}

predicate func_6(Variable vrtn_435, NotExpr target_6) {
	target_6.getOperand().(FunctionCall).getTarget().hasName("same_thread_group")
	and target_6.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrtn_435
	and target_6.getOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("get_current")
}

predicate func_7(Parameter vevent_433, ReturnStmt target_19, LogicalOrExpr target_7) {
	target_7.getLeftOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="sigev_signo"
	and target_7.getLeftOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
	and target_7.getLeftOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_7.getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="sigev_signo"
	and target_7.getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
	and target_7.getRightOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="64"
	and target_7.getParent().(LogicalAndExpr).getLeftOperand() instanceof EqualityOperation
	and target_7.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_19
}

predicate func_8(Variable vrtn_435, Function func, ReturnStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("task_pid")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrtn_435
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_12(Parameter vevent_433, ReturnStmt target_20, LogicalAndExpr target_12) {
	target_12.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sigev_notify"
	and target_12.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
	and target_12.getLeftOperand().(BitwiseAndExpr).getRightOperand() instanceof Literal
	and target_12.getRightOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand() instanceof AssignExpr
	and target_12.getRightOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand() instanceof NotExpr
	and target_12.getRightOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sigev_notify"
	and target_12.getRightOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
	and target_12.getRightOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="-5"
	and target_12.getRightOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand() instanceof Literal
	and target_12.getParent().(IfStmt).getThen()=target_20
}

/*predicate func_13(Function func, LogicalOrExpr target_13) {
	target_13.getLeftOperand().(NotExpr).getOperand() instanceof AssignExpr
	and target_13.getRightOperand() instanceof NotExpr
	and target_13.getEnclosingFunction() = func
}

*/
/*predicate func_14(Parameter vevent_433, EqualityOperation target_14) {
	target_14.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sigev_notify"
	and target_14.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
	and target_14.getLeftOperand().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="-5"
	and target_14.getRightOperand() instanceof Literal
}

*/
predicate func_15(Parameter vevent_433, ReturnStmt target_19, LogicalAndExpr target_15) {
	target_15.getLeftOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sigev_notify"
	and target_15.getLeftOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
	and target_15.getLeftOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="-5"
	and target_15.getLeftOperand().(EqualityOperation).getRightOperand() instanceof Literal
	and target_15.getRightOperand() instanceof LogicalOrExpr
	and target_15.getParent().(IfStmt).getThen()=target_19
}

predicate func_16(Function func, IfStmt target_16) {
	target_16.getCondition() instanceof LogicalAndExpr
	and target_16.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and target_16.getEnclosingFunction() = func
}

predicate func_18(Parameter vevent_433, ValueFieldAccess target_18) {
	target_18.getTarget().getName()="_tid"
	and target_18.getQualifier().(PointerFieldAccess).getTarget().getName()="_sigev_un"
	and target_18.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_433
}

predicate func_19(LogicalAndExpr target_15, Function func, ReturnStmt target_19) {
	target_19.getExpr().(Literal).getValue()="0"
	and target_19.getParent().(IfStmt).getCondition()=target_15
	and target_19.getEnclosingFunction() = func
}

predicate func_20(LogicalAndExpr target_12, Function func, ReturnStmt target_20) {
	target_20.getExpr().(Literal).getValue()="0"
	and target_20.getParent().(IfStmt).getCondition()=target_12
	and target_20.getEnclosingFunction() = func
}

from Function func, Variable vrtn_435, Parameter vevent_433, Literal target_0, Literal target_1, PointerFieldAccess target_4, AssignExpr target_5, NotExpr target_6, LogicalOrExpr target_7, ReturnStmt target_8, LogicalAndExpr target_12, LogicalAndExpr target_15, IfStmt target_16, ValueFieldAccess target_18, ReturnStmt target_19, ReturnStmt target_20
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(vrtn_435, vevent_433, target_16, target_18, func)
and func_4(vevent_433, target_4)
and func_5(vrtn_435, vevent_433, target_5)
and func_6(vrtn_435, target_6)
and func_7(vevent_433, target_19, target_7)
and func_8(vrtn_435, func, target_8)
and func_12(vevent_433, target_20, target_12)
and func_15(vevent_433, target_19, target_15)
and func_16(func, target_16)
and func_18(vevent_433, target_18)
and func_19(target_15, func, target_19)
and func_20(target_12, func, target_20)
and vrtn_435.getType().hasName("task_struct *")
and vevent_433.getType().hasName("sigevent_t *")
and vrtn_435.(LocalVariable).getFunction() = func
and vevent_433.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
