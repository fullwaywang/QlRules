/**
 * @name linux-ffdde5932042600c6807d46c1550b28b0db6a3bc-crypto_report
 * @id cpp/linux/ffdde5932042600c6807d46c1550b28b0db6a3bc/crypto-report
 * @description linux-ffdde5932042600c6807d46c1550b28b0db6a3bc-crypto/crypto_user_base.c-crypto_report CVE-2019-19062
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_190, VariableAccess target_2, ExprStmt target_3, FunctionCall target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_190
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_192, VariableAccess target_2, ReturnStmt target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=verr_192
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable verr_192, VariableAccess target_2) {
	target_2.getTarget()=verr_192
}

predicate func_3(Variable vskb_190, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="out_skb"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("crypto_dump_info")
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vskb_190
}

predicate func_4(Variable vskb_190, FunctionCall target_4) {
	target_4.getTarget().hasName("nlmsg_unicast")
	and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="crypto_nlsk"
	and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net *")
	and target_4.getArgument(1).(VariableAccess).getTarget()=vskb_190
	and target_4.getArgument(2).(ValueFieldAccess).getTarget().getName()="portid"
	and target_4.getArgument(2).(ValueFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cb"
	and target_4.getArgument(2).(ValueFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
}

from Function func, Variable vskb_190, Variable verr_192, ReturnStmt target_1, VariableAccess target_2, ExprStmt target_3, FunctionCall target_4
where
not func_0(vskb_190, target_2, target_3, target_4)
and func_1(verr_192, target_2, target_1)
and func_2(verr_192, target_2)
and func_3(vskb_190, target_3)
and func_4(vskb_190, target_4)
and vskb_190.getType().hasName("sk_buff *")
and verr_192.getType().hasName("int")
and vskb_190.(LocalVariable).getFunction() = func
and verr_192.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
