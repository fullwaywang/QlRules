/**
 * @name linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-__ptrace_may_access
 * @id cpp/linux/bfedb589252c01fa505ac9f6f2a3d5d68d707ef4/--ptrace-may-access
 * @description linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-kernel/ptrace.c-__ptrace_may_access CVE-2015-8709
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vtask_220) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getType().hasName("mm_struct *")
	and target_1.getRValue().(PointerFieldAccess).getTarget().getName()="mm"
	and target_1.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_220)
}

predicate func_5(Parameter vtask_220, ExprStmt target_35, PointerFieldAccess target_5) {
	target_5.getTarget().getName()="mm"
	and target_5.getQualifier().(VariableAccess).getTarget()=vtask_220
	and target_5.getParent().(IfStmt).getThen()=target_35
}

predicate func_6(LogicalAndExpr target_36, Function func, ReturnStmt target_6) {
	target_6.getExpr().(UnaryMinusExpr).getValue()="-1"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_36
	and target_6.getEnclosingFunction() = func
}

predicate func_8(Function func, AsmStmt target_8) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Parameter vtask_220, Variable vdumpable_223, AssignExpr target_9) {
	target_9.getLValue().(VariableAccess).getTarget()=vdumpable_223
	and target_9.getRValue().(FunctionCall).getTarget().hasName("get_dumpable")
	and target_9.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="mm"
	and target_9.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_220
}

/*predicate func_10(Parameter vtask_220, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="mm"
	and target_10.getQualifier().(VariableAccess).getTarget()=vtask_220
}

*/
predicate func_11(Function func, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("rcu_read_lock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Parameter vmode_220, Variable vdumpable_223, Function func, IfStmt target_12) {
	target_12.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vdumpable_223
	and target_12.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_12.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ptrace_has_cap")
	and target_12.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_12.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmode_220
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and target_12.getThen().(BlockStmt).getStmt(1) instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

/*predicate func_13(Variable vdumpable_223, VariableAccess target_13) {
	target_13.getTarget()=vdumpable_223
}

*/
/*predicate func_14(Parameter vmode_220, Variable v________p1_279, FunctionCall target_37, FunctionCall target_38, StmtExpr target_14) {
	target_14.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_14.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(VariableAccess).getTarget()=v________p1_279
	and target_14.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ptrace_has_cap")
	and target_14.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_14.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmode_220
	and target_37.getArgument(1).(VariableAccess).getLocation().isBefore(target_14.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_14.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_38.getArgument(1).(VariableAccess).getLocation())
}

*/
/*predicate func_18(Parameter vtask_220, Variable v__u_279, ExprStmt target_35, IfStmt target_18) {
	target_18.getCondition().(Literal).getValue()="1"
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__read_once_size")
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="real_cred"
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_220
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v__u_279
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
	and target_18.getElse().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__read_once_size_nocheck")
	and target_18.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="real_cred"
	and target_18.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_220
	and target_18.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_18.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v__u_279
	and target_18.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
}

*/
/*predicate func_19(Variable v__u_279, ExprStmt target_19) {
	target_19.getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and target_19.getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v__u_279
}

*/
/*predicate func_21(Function func, DoStmt target_21) {
	target_21.getCondition() instanceof Literal
	and target_21.getEnclosingFunction() = func
}

*/
/*predicate func_22(Variable v_________p1_279, ExprStmt target_22) {
	target_22.getExpr().(VariableAccess).getTarget()=v_________p1_279
}

*/
/*predicate func_23(Variable v__warned_279, DoStmt target_23) {
	target_23.getCondition() instanceof Literal
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__warned_279
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand() instanceof Literal
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("rcu_read_lock_held")
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_279
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lockdep_rcu_suspicious")
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_23.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
}

*/
/*predicate func_25(Variable v__warned_279, IfStmt target_25) {
	target_25.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_25.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__warned_279
	and target_25.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand() instanceof Literal
	and target_25.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("rcu_read_lock_held")
	and target_25.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_279
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lockdep_rcu_suspicious")
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_25.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
}

*/
/*predicate func_26(Function func, FunctionCall target_26) {
	target_26.getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_26.getParent().(LogicalAndExpr).getParent().(LogicalAndExpr).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ptrace_has_cap")
	and target_26.getEnclosingFunction() = func
}

*/
/*predicate func_27(Variable v__warned_279, NotExpr target_27) {
	target_27.getOperand().(VariableAccess).getTarget()=v__warned_279
	and target_27.getParent().(LogicalAndExpr).getParent().(LogicalAndExpr).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ptrace_has_cap")
}

*/
/*predicate func_28(Variable v__warned_279, LogicalAndExpr target_39, ExprStmt target_28) {
	target_28.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_279
	and target_28.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_39
}

*/
/*predicate func_29(LogicalAndExpr target_39, Function func, ExprStmt target_29) {
	target_29.getExpr().(FunctionCall).getTarget().hasName("lockdep_rcu_suspicious")
	and target_29.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_29.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_29.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
	and target_29.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_39
	and target_29.getEnclosingFunction() = func
}

*/
/*predicate func_31(Variable v________p1_279, ExprStmt target_31) {
	target_31.getExpr().(VariableAccess).getTarget()=v________p1_279
}

*/
/*predicate func_32(LogicalAndExpr target_36, Function func, ExprStmt target_32) {
	target_32.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and target_32.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_36
	and target_32.getEnclosingFunction() = func
}

*/
predicate func_33(Function func, ExprStmt target_33) {
	target_33.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_33
}

predicate func_35(Function func, ExprStmt target_35) {
	target_35.getExpr() instanceof AssignExpr
	and target_35.getEnclosingFunction() = func
}

predicate func_36(Parameter vmode_220, Variable vdumpable_223, LogicalAndExpr target_36) {
	target_36.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vdumpable_223
	and target_36.getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_36.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ptrace_has_cap")
	and target_36.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_36.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier() instanceof StmtExpr
	and target_36.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmode_220
}

predicate func_37(Parameter vmode_220, FunctionCall target_37) {
	target_37.getTarget().hasName("ptrace_has_cap")
	and target_37.getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_37.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const cred *")
	and target_37.getArgument(1).(VariableAccess).getTarget()=vmode_220
}

predicate func_38(Parameter vtask_220, Parameter vmode_220, FunctionCall target_38) {
	target_38.getTarget().hasName("security_ptrace_access_check")
	and target_38.getArgument(0).(VariableAccess).getTarget()=vtask_220
	and target_38.getArgument(1).(VariableAccess).getTarget()=vmode_220
}

predicate func_39(BlockStmt target_40, Function func, LogicalAndExpr target_39) {
	target_39.getLeftOperand().(LogicalAndExpr).getLeftOperand() instanceof FunctionCall
	and target_39.getLeftOperand().(LogicalAndExpr).getRightOperand() instanceof NotExpr
	and target_39.getRightOperand() instanceof NotExpr
	and target_39.getParent().(IfStmt).getThen()=target_40
	and target_39.getEnclosingFunction() = func
}

predicate func_40(LogicalAndExpr target_39, Function func, BlockStmt target_40) {
	target_40.getStmt(0) instanceof ExprStmt
	and target_40.getStmt(1) instanceof ExprStmt
	and target_40.getParent().(IfStmt).getCondition()=target_39
	and target_40.getEnclosingFunction() = func
}

from Function func, Parameter vtask_220, Parameter vmode_220, Variable vdumpable_223, Variable v________p1_279, Variable v_________p1_279, Variable v__u_279, Variable v__warned_279, PointerFieldAccess target_5, ReturnStmt target_6, AsmStmt target_8, AssignExpr target_9, ExprStmt target_11, IfStmt target_12, ExprStmt target_33, ExprStmt target_35, LogicalAndExpr target_36, FunctionCall target_37, FunctionCall target_38, LogicalAndExpr target_39, BlockStmt target_40
where
not func_1(vtask_220)
and func_5(vtask_220, target_35, target_5)
and func_6(target_36, func, target_6)
and func_8(func, target_8)
and func_9(vtask_220, vdumpable_223, target_9)
and func_11(func, target_11)
and func_12(vmode_220, vdumpable_223, func, target_12)
and func_33(func, target_33)
and func_35(func, target_35)
and func_36(vmode_220, vdumpable_223, target_36)
and func_37(vmode_220, target_37)
and func_38(vtask_220, vmode_220, target_38)
and func_39(target_40, func, target_39)
and func_40(target_39, func, target_40)
and vtask_220.getType().hasName("task_struct *")
and vmode_220.getType().hasName("unsigned int")
and vdumpable_223.getType().hasName("int")
and v________p1_279.getType().hasName("cred *")
and v_________p1_279.getType().hasName("const cred *")
and v__u_279.getType().hasName("union <unnamed>")
and v__warned_279.getType().hasName("bool")
and vtask_220.getFunction() = func
and vmode_220.getFunction() = func
and vdumpable_223.(LocalVariable).getFunction() = func
and v________p1_279.(LocalVariable).getFunction() = func
and v_________p1_279.(LocalVariable).getFunction() = func
and v__u_279.(LocalVariable).getFunction() = func
and v__warned_279.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
