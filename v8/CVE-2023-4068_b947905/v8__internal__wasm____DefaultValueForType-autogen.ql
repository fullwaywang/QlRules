/**
 * @name v8-b947905d27518b7764607708ec9f74ac3ea94b6b-v8__internal__wasm____DefaultValueForType
 * @id cpp/v8/b947905d27518b7764607708ec9f74ac3ea94b6b/v8internalwasmdefaultvaluefortype
 * @description v8-b947905d27518b7764607708ec9f74ac3ea94b6b-src/wasm/constant-expression-interface.cc-v8__internal__wasm____DefaultValueForType CVE-2023-4068
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter visolate_185, Parameter vtype_185, FunctionCall target_3, FunctionCall target_4, ConstructorCall target_5) {
exists(ConditionalExpr target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("operator==")
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vtype_185
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("const ValueType")
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("operator==")
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vtype_185
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("const ValueType")
	and target_0.getThen().(FunctionCall).getTarget().hasName("cast")
	and target_0.getThen().(FunctionCall).getArgument(0) instanceof FunctionCall
	and target_0.getElse().(FunctionCall).getTarget().hasName("cast")
	and target_0.getElse().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("wasm_null")
	and target_0.getElse().(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("factory")
	and target_0.getElse().(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=visolate_185
	and target_0.getParent().(ConstructorCall).getParent().(ReturnStmt).getExpr().(ConstructorCall).getArgument(0) instanceof ConstructorCall
	and target_0.getParent().(ConstructorCall).getParent().(ReturnStmt).getExpr().(ConstructorCall).getArgument(1).(VariableAccess).getTarget()=vtype_185
	and target_0.getElse().(FunctionCall).getArgument(0).(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
	and target_4.getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter visolate_185, FunctionCall target_1) {
	target_1.getTarget().hasName("null_value")
	and target_1.getQualifier().(FunctionCall).getTarget().hasName("factory")
	and target_1.getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=visolate_185
	and target_1.getParent().(ConstructorCall).getParent().(ConstructorCall).getArgument(0) instanceof ConstructorCall
}

predicate func_2(Function func, ConstructorCall target_2) {
	target_2.getArgument(0) instanceof FunctionCall
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter visolate_185, FunctionCall target_3) {
	target_3.getTarget().hasName("factory")
	and target_3.getQualifier().(VariableAccess).getTarget()=visolate_185
}

predicate func_4(Parameter vtype_185, FunctionCall target_4) {
	target_4.getTarget().hasName("kind")
	and target_4.getQualifier().(VariableAccess).getTarget()=vtype_185
}

predicate func_5(Parameter vtype_185, ConstructorCall target_5) {
	target_5.getArgument(0) instanceof ConstructorCall
	and target_5.getArgument(1).(VariableAccess).getTarget()=vtype_185
}

from Function func, Parameter visolate_185, Parameter vtype_185, FunctionCall target_1, ConstructorCall target_2, FunctionCall target_3, FunctionCall target_4, ConstructorCall target_5
where
not func_0(visolate_185, vtype_185, target_3, target_4, target_5)
and func_1(visolate_185, target_1)
and func_2(func, target_2)
and func_3(visolate_185, target_3)
and func_4(vtype_185, target_4)
and func_5(vtype_185, target_5)
and visolate_185.getType().hasName("Isolate *")
and vtype_185.getType().hasName("ValueType")
and visolate_185.getFunction() = func
and vtype_185.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
