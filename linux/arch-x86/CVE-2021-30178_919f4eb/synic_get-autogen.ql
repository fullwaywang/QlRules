/**
 * @name linux-919f4ebc598701670e80e31573a58f1f2d2bf918-synic_get
 * @id cpp/linux/919f4ebc598701670e80e31573a58f1f2d2bf918/synic-get
 * @description linux-919f4ebc598701670e80e31573a58f1f2d2bf918-arch/x86/kvm/hyperv.c-synic_get CVE-2021-30178
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvcpu_158, ReturnStmt target_2, ExprStmt target_3, NotExpr target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("to_hv_vcpu")
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_158
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vvcpu_158, ReturnStmt target_2, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vvcpu_158
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vvcpu_158, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vvcpu_158
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_vcpu_by_vpidx")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kvm *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
}

from Function func, Variable vvcpu_158, NotExpr target_1, ReturnStmt target_2, ExprStmt target_3
where
not func_0(vvcpu_158, target_2, target_3, target_1)
and func_1(vvcpu_158, target_2, target_1)
and func_2(func, target_2)
and func_3(vvcpu_158, target_3)
and vvcpu_158.getType().hasName("kvm_vcpu *")
and vvcpu_158.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
