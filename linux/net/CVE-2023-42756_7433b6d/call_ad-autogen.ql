/**
 * @name linux-7433b6d2afd512d04398c73aa984d1e285be125b-call_ad
 * @id cpp/linux/7433b6d2afd512d04398c73aa984d1e285be125b/call-ad
 * @description linux-7433b6d2afd512d04398c73aa984d1e285be125b-net/netfilter/ipset/ip_set_core.c-call_ad CVE-2023-42756
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vset_1687, FunctionCall target_0) {
		target_0.getTarget().hasName("__ip_set_get")
		and not target_0.getTarget().hasName("__ip_set_get_netlink")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vset_1687
}

predicate func_1(Parameter vset_1687, FunctionCall target_1) {
		target_1.getTarget().hasName("__ip_set_put")
		and not target_1.getTarget().hasName("__ip_set_put_netlink")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vset_1687
}

from Function func, Parameter vset_1687, FunctionCall target_0, FunctionCall target_1
where
func_0(vset_1687, target_0)
and func_1(vset_1687, target_1)
and vset_1687.getType().hasName("ip_set *")
and vset_1687.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
