/**
 * @name linux-bce1305c0ece3dc549663605e567655dd701752c-hid_report_raw_event
 * @id cpp/linux/bce1305c0ece3dc549663605e567655dd701752c/hid-report-raw-event
 * @description linux-bce1305c0ece3dc549663605e567655dd701752c-drivers/hid/hid-core.c-hid_report_raw_event CVE-2022-20565
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreport_1726, NotExpr target_3, ExprStmt target_4) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("hid_compute_report_size")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vreport_1726
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u32")
		and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
		and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vreport_1726, VariableAccess target_1) {
		target_1.getTarget()=vreport_1726
}

predicate func_2(Variable vreport_1726, AddExpr target_2) {
		target_2.getAnOperand().(BinaryBitwiseOperation).getLeftOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="size"
		and target_2.getAnOperand().(BinaryBitwiseOperation).getLeftOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreport_1726
		and target_2.getAnOperand().(BinaryBitwiseOperation).getLeftOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
		and target_2.getAnOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="3"
		and target_2.getAnOperand().(Literal).getValue()="1"
		and target_2.getParent().(AssignExpr).getRValue() = target_2
		and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u32")
}

predicate func_3(Variable vreport_1726, NotExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget()=vreport_1726
}

predicate func_4(Variable vreport_1726, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_4.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="7%s: report %d is too short, (%d < %d)\n"
		and target_4.getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
		and target_4.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="id"
		and target_4.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreport_1726
		and target_4.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("u32")
		and target_4.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("u32")
}

from Function func, Variable vreport_1726, VariableAccess target_1, AddExpr target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(vreport_1726, target_3, target_4)
and func_1(vreport_1726, target_1)
and func_2(vreport_1726, target_2)
and func_3(vreport_1726, target_3)
and func_4(vreport_1726, target_4)
and vreport_1726.getType().hasName("hid_report *")
and vreport_1726.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
