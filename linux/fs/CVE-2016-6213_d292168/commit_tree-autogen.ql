/**
 * @name linux-d29216842a85c7970c536108e093963f02714498-commit_tree
 * @id cpp/linux/d29216842a85c7970c536108e093963f02714498/commit-tree
 * @description linux-d29216842a85c7970c536108e093963f02714498-fs/namespace.c-commit_tree CVE-2016-6213
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vn_892, ExprStmt target_2, ValueFieldAccess target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignAddExpr).getLValue().(PointerFieldAccess).getTarget().getName()="mounts"
	and target_0.getExpr().(AssignAddExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vn_892
	and target_0.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="pending_mounts"
	and target_0.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vn_892
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignAddExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vn_892, ExprStmt target_2, ExprStmt target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="pending_mounts"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vn_892
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("attach_shadowed")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("mount *")
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("mount *")
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("mount *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vn_892, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="prev"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="list"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vn_892
}

predicate func_4(Variable vn_892, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("touch_mnt_namespace")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vn_892
}

from Function func, Variable vn_892, ExprStmt target_2, ValueFieldAccess target_3, ExprStmt target_4
where
not func_0(vn_892, target_2, target_3, func)
and not func_1(vn_892, target_2, target_4, func)
and func_2(func, target_2)
and func_3(vn_892, target_3)
and func_4(vn_892, target_4)
and vn_892.getType().hasName("mnt_namespace *")
and vn_892.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
