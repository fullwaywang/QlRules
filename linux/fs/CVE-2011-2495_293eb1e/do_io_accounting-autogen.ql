/**
 * @name linux-293eb1e7772b25a93647c798c7b89bf26c2da2e0-do_io_accounting
 * @id cpp/linux/293eb1e7772b25a93647c798c7b89bf26c2da2e0/do-io-accounting
 * @description linux-293eb1e7772b25a93647c798c7b89bf26c2da2e0-fs/proc/base.c-do_io_accounting CVE-2011-2495
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtask_2705, NotExpr target_10, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mutex_lock_killable_nested")
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cred_guard_mutex"
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="signal"
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_2705
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(VariableAccess).getType().hasName("int")
		and target_1.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1)
}

predicate func_3(NotExpr target_10, Function func) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_3.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(NotExpr target_10, Function func) {
	exists(GotoStmt target_4 |
		target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_4
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Function func) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_5.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5)
}

predicate func_6(Parameter vtask_2705, ExprStmt target_11, Function func) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cred_guard_mutex"
		and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="signal"
		and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_2705
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
		and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_8(Function func, UnaryMinusExpr target_8) {
		target_8.getValue()="-13"
		and target_8.getEnclosingFunction() = func
}

predicate func_9(Parameter vbuffer_2705, Variable vacct_2707, FunctionCall target_9) {
		target_9.getTarget().hasName("sprintf")
		and target_9.getArgument(0).(VariableAccess).getTarget()=vbuffer_2705
		and target_9.getArgument(1).(StringLiteral).getValue()="rchar: %llu\nwchar: %llu\nsyscr: %llu\nsyscw: %llu\nread_bytes: %llu\nwrite_bytes: %llu\ncancelled_write_bytes: %llu\n"
		and target_9.getArgument(2).(ValueFieldAccess).getTarget().getName()="rchar"
		and target_9.getArgument(2).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_2707
		and target_9.getArgument(3).(ValueFieldAccess).getTarget().getName()="wchar"
		and target_9.getArgument(3).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_2707
		and target_9.getArgument(4).(ValueFieldAccess).getTarget().getName()="syscr"
		and target_9.getArgument(4).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_2707
		and target_9.getArgument(5).(ValueFieldAccess).getTarget().getName()="syscw"
		and target_9.getArgument(5).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_2707
		and target_9.getArgument(6).(ValueFieldAccess).getTarget().getName()="read_bytes"
		and target_9.getArgument(6).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_2707
		and target_9.getArgument(7).(ValueFieldAccess).getTarget().getName()="write_bytes"
		and target_9.getArgument(7).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_2707
		and target_9.getArgument(8).(ValueFieldAccess).getTarget().getName()="cancelled_write_bytes"
		and target_9.getArgument(8).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_2707
}

predicate func_10(Parameter vtask_2705, NotExpr target_10) {
		target_10.getOperand().(FunctionCall).getTarget().hasName("ptrace_may_access")
		and target_10.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_2705
		and target_10.getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="1"
}

predicate func_11(Parameter vtask_2705, ExprStmt target_11) {
		target_11.getExpr().(FunctionCall).getTarget().hasName("unlock_task_sighand")
		and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_2705
		and target_11.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
}

from Function func, Parameter vbuffer_2705, Variable vacct_2707, Parameter vtask_2705, UnaryMinusExpr target_8, FunctionCall target_9, NotExpr target_10, ExprStmt target_11
where
not func_0(vtask_2705, target_10, func)
and not func_1(func)
and not func_3(target_10, func)
and not func_4(target_10, func)
and not func_5(func)
and not func_6(vtask_2705, target_11, func)
and func_8(func, target_8)
and func_9(vbuffer_2705, vacct_2707, target_9)
and func_10(vtask_2705, target_10)
and func_11(vtask_2705, target_11)
and vbuffer_2705.getType().hasName("char *")
and vacct_2707.getType().hasName("task_io_accounting")
and vtask_2705.getType().hasName("task_struct *")
and vbuffer_2705.getFunction() = func
and vacct_2707.(LocalVariable).getFunction() = func
and vtask_2705.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
