/**
 * @name curl-058f98dc3fe595f21dc26-hashkey
 * @id cpp/curl/058f98dc3fe595f21dc26/hashkey
 * @description curl-058f98dc3fe595f21dc26-lib/conncache.c-hashkey CVE-2022-27775
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
		target_0.getValue()="%ld%s"
		and not target_0.getValue()="%u/%ld/%s"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vconn_135, ExprStmt target_2) {
	exists(PointerFieldAccess target_1 |
		target_1.getTarget().getName()="scope_id"
		and target_1.getQualifier().(VariableAccess).getTarget()=vconn_135
		and target_2.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vconn_135, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("const char *")
		and target_2.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="name"
		and target_2.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="host"
		and target_2.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_135
}

from Function func, Parameter vconn_135, StringLiteral target_0, ExprStmt target_2
where
func_0(func, target_0)
and not func_1(vconn_135, target_2)
and func_2(vconn_135, target_2)
and vconn_135.getType().hasName("connectdata *")
and vconn_135.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
