/**
 * @name libwebp-a486d800b60d0af4cc0836bf7ed8f21e12-EncodeAlphaInternal
 * @id cpp/libwebp/a486d800b60d0af4cc0836bf7ed8f21e12/EncodeAlphaInternal
 * @description libwebp-a486d800b60d0af4cc0836bf7ed8f21e12-src/enc/alpha_enc.c-EncodeAlphaInternal CVE-2023-1999
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vresult_113, AddressOfExpr target_3) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("memset")
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="bw"
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vresult_113
		and target_0.getArgument(1).(Literal).getValue()="0"
		and target_0.getArgument(2).(SizeofExprOperator).getValue()="48"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vok_114, ExprStmt target_4, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(NotExpr).getOperand() instanceof FunctionCall
		and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vok_114
		and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and (func.getEntryPoint().(BlockStmt).getStmt(19)=target_1 or func.getEntryPoint().(BlockStmt).getStmt(19).getFollowingStmt()=target_1)
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vresult_113, Variable voutput_size_120, FunctionCall target_2) {
		target_2.getTarget().hasName("VP8BitWriterInit")
		and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="bw"
		and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vresult_113
		and target_2.getArgument(1).(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_2.getArgument(1).(AddExpr).getAnOperand().(VariableAccess).getTarget()=voutput_size_120
}

predicate func_3(Parameter vresult_113, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="stats"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vresult_113
}

predicate func_4(Variable vok_114, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vok_114
		and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

from Function func, Parameter vresult_113, Variable vok_114, Variable voutput_size_120, FunctionCall target_2, AddressOfExpr target_3, ExprStmt target_4
where
not func_0(vresult_113, target_3)
and not func_1(vok_114, target_4, func)
and func_2(vresult_113, voutput_size_120, target_2)
and func_3(vresult_113, target_3)
and func_4(vok_114, target_4)
and vresult_113.getType().hasName("FilterTrial *")
and vok_114.getType().hasName("int")
and voutput_size_120.getType().hasName("size_t")
and vresult_113.getFunction() = func
and vok_114.(LocalVariable).getFunction() = func
and voutput_size_120.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
