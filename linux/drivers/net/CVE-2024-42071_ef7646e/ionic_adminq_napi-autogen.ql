/**
 * @name linux-ef7646ed49fff962e97b276f4ab91327a67eeb5a-ionic_adminq_napi
 * @id cpp/linux/ef7646ed49fff962e97b276f4ab91327a67eeb5a/ionic-adminq-napi
 * @description linux-ef7646ed49fff962e97b276f4ab91327a67eeb5a-drivers/net/ethernet/pensando/ionic/ionic_lif.c-ionic_adminq_napi CVE-2024-42071
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbudget_1162, ExprStmt target_1, LogicalAndExpr target_2) {
exists(NotExpr target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
							obj_5.getTarget().getName()="hwstamp_txq"
							and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("ionic_lif *")
						)
						and obj_4.getTarget().getName()="cq"
					)
				)
				and obj_2.getTarget().hasName("ionic_tx_cq_service")
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vbudget_1162
			)
		)
	)
	and target_0.getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vbudget_1162
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getOperand().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vbudget_1162, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="hwstamp_txq"
						and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("ionic_lif *")
					)
					and obj_3.getTarget().getName()="cq"
				)
			)
			and obj_1.getTarget().hasName("ionic_tx_cq_service")
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vbudget_1162
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_2(Parameter vbudget_1162, LogicalAndExpr target_2) {
	exists(RelationalOperation obj_0 | obj_0=target_2.getLeftOperand() |
		obj_0.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and obj_0.getGreaterOperand().(VariableAccess).getTarget()=vbudget_1162
	)
	and exists(FunctionCall obj_1 | obj_1=target_2.getRightOperand() |
		obj_1.getTarget().hasName("napi_complete_done")
		and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("napi_struct *")
		and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	)
}

from Function func, Parameter vbudget_1162, ExprStmt target_1, LogicalAndExpr target_2
where
not func_0(vbudget_1162, target_1, target_2)
and func_1(vbudget_1162, target_1)
and func_2(vbudget_1162, target_2)
and vbudget_1162.getType().hasName("int")
and vbudget_1162.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
