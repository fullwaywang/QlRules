/**
 * @name linux-9f898fc2c31fbf0ac5ecd289f528a716464cb005-bcmasp_netif_deinit
 * @id cpp/linux/9f898fc2c31fbf0ac5ecd289f528a716464cb005/bcmasp-netif-deinit
 * @description linux-9f898fc2c31fbf0ac5ecd289f528a716464cb005-drivers/net/ethernet/broadcom/asp2/bcmasp_intf.c-bcmasp_netif_deinit CVE-2024-35858
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vintf_871, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("bcmasp_tx_reclaim")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vintf_871
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vintf_871, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("umac_enable_set")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vintf_871
	and target_1.getExpr().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="1"
	and target_1.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

predicate func_2(Variable vintf_871, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("tx_spb_dma_wl")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vintf_871
	and target_2.getExpr().(FunctionCall).getArgument(1).(HexLiteral).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="32"
}

from Function func, Variable vintf_871, ExprStmt target_1, ExprStmt target_2
where
not func_0(vintf_871, target_1, target_2, func)
and func_1(vintf_871, target_1)
and func_2(vintf_871, target_2)
and vintf_871.getType().hasName("bcmasp_intf *")
and vintf_871.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
