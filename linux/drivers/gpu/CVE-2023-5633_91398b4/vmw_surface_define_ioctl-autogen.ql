/**
 * @name linux-91398b413d03660fd5828f7b4abc64e884b98069-vmw_surface_define_ioctl
 * @id cpp/linux/91398b413d03660fd5828f7b4abc64e884b98069/vmw-surface-define-ioctl
 * @description linux-91398b413d03660fd5828f7b4abc64e884b98069-drivers/gpu/drm/vmwgfx/vmwgfx_surface.c-vmw_surface_define_ioctl CVE-2023-5633
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbackup_handle_858, Parameter vfile_priv_722, Variable vdev_priv_724, Variable vres_728, FunctionCall target_0) {
	target_0.getTarget().hasName("vmw_gem_object_create_with_handle")
	and not target_0.getTarget().hasName("vmw_gem_object_create")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vdev_priv_724
	and target_0.getArgument(1).(VariableAccess).getTarget()=vfile_priv_722
	and target_0.getArgument(2).(PointerFieldAccess).getTarget().getName()="guest_memory_size"
	and target_0.getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_728
	and target_0.getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vbackup_handle_858
	and target_0.getArgument(4).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="guest_memory_bo"
	and target_0.getArgument(4).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_728
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_2(Function func) {
exists(AddressOfExpr target_2 |
	target_2.getOperand().(VariableAccess).getType().hasName("vmw_bo_params")
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vres_728, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="guest_memory_size"
	and target_3.getQualifier().(VariableAccess).getTarget()=vres_728
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_5(Variable vbackup_handle_858, VariableAccess target_5) {
	target_5.getTarget()=vbackup_handle_858
	and target_5.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_6(Variable vres_728, LogicalAndExpr target_8, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("vmw_bo_reference")
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="guest_memory_bo"
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_728
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_7(Variable vbackup_handle_858, Parameter vfile_priv_722, LogicalAndExpr target_8, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("drm_gem_handle_delete")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_priv_722
	and target_7.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vbackup_handle_858
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_8(Variable vdev_priv_724, LogicalAndExpr target_8) {
	target_8.getLeftOperand().(PointerFieldAccess).getTarget().getName()="has_mob"
	and target_8.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_priv_724
	and target_8.getRightOperand().(PointerFieldAccess).getTarget().getName()="shareable"
	and target_8.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("drm_vmw_surface_create_req *")
}

from Function func, Variable vbackup_handle_858, Parameter vfile_priv_722, Variable vdev_priv_724, Variable vres_728, FunctionCall target_0, PointerFieldAccess target_3, VariableAccess target_5, ExprStmt target_6, ExprStmt target_7, LogicalAndExpr target_8
where
func_0(vbackup_handle_858, vfile_priv_722, vdev_priv_724, vres_728, target_0)
and not func_2(func)
and func_3(vres_728, target_3)
and func_5(vbackup_handle_858, target_5)
and func_6(vres_728, target_8, target_6)
and func_7(vbackup_handle_858, vfile_priv_722, target_8, target_7)
and func_8(vdev_priv_724, target_8)
and vbackup_handle_858.getType().hasName("uint32_t")
and vfile_priv_722.getType().hasName("drm_file *")
and vdev_priv_724.getType().hasName("vmw_private *")
and vres_728.getType().hasName("vmw_resource *")
and vbackup_handle_858.(LocalVariable).getFunction() = func
and vfile_priv_722.getFunction() = func
and vdev_priv_724.(LocalVariable).getFunction() = func
and vres_728.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
