/**
 * @name linux-fecf31ee395b0295f2d7260aa29946b7605f7c85-nft_set_desc_concat_parse
 * @id cpp/linux/fecf31ee395b0295f2d7260aa29946b7605f7c85/nft-set-desc-concat-parse
 * @description linux-fecf31ee395b0295f2d7260aa29946b7605f7c85-net/netfilter/nf_tables_api.c-nft_set_desc_concat_parse CVE-2022-1972
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="8"
	and not target_0.getValue()="0"
	and target_0.getParent().(MulExpr).getParent().(DivExpr).getLeftOperand() instanceof MulExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="32"
	and not target_1.getValue()="22"
	and target_1.getParent().(DivExpr).getParent().(GTExpr).getGreaterOperand() instanceof DivExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vdesc_4243, ExprStmt target_10, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="field_count"
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdesc_4243
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(AddExpr).getValue()="16"
	and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-7"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_10.getLocation()))
}

predicate func_3(Variable vlen_4246, ReturnStmt target_11) {
exists(LogicalOrExpr target_3 |
	target_3.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vlen_4246
	and target_3.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vlen_4246
	and target_3.getRightOperand().(RelationalOperation).getLesserOperand().(ComplementExpr).getValue()="255"
	and target_3.getParent().(IfStmt).getThen()=target_11)
}

/*predicate func_5(ReturnStmt target_11, Function func) {
exists(ComplementExpr target_5 |
	target_5.getValue()="255"
	and target_5.getParent().(GTExpr).getGreaterOperand() instanceof DivExpr
	and target_5.getParent().(GTExpr).getLesserOperand() instanceof AddExpr
	and target_5.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_11
	and target_5.getEnclosingFunction() = func)
}

*/
predicate func_6(RelationalOperation target_13, Function func) {
exists(ReturnStmt target_6 |
	target_6.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_6.getParent().(IfStmt).getCondition()=target_13
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Variable vlen_4246, VariableAccess target_7) {
	target_7.getTarget()=vlen_4246
}

predicate func_8(Variable vlen_4246, ReturnStmt target_11, DivExpr target_8) {
	target_8.getLeftOperand().(MulExpr).getLeftOperand().(VariableAccess).getTarget()=vlen_4246
	and target_8.getLeftOperand().(MulExpr).getRightOperand() instanceof Literal
	and target_8.getRightOperand() instanceof Literal
	and target_8.getParent().(GTExpr).getLesserOperand().(AddExpr).getValue()="16"
	and target_8.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_11
}

/*predicate func_9(Variable vlen_4246, ReturnStmt target_11, AddExpr target_9) {
	target_9.getValue()="16"
	and target_9.getParent().(GTExpr).getGreaterOperand().(DivExpr).getLeftOperand().(MulExpr).getLeftOperand().(VariableAccess).getTarget()=vlen_4246
	and target_9.getParent().(GTExpr).getGreaterOperand().(DivExpr).getLeftOperand().(MulExpr).getRightOperand() instanceof Literal
	and target_9.getParent().(GTExpr).getGreaterOperand().(DivExpr).getRightOperand() instanceof Literal
	and target_9.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_11
}

*/
predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nla_parse_nested_deprecated")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("nlattr *[2]")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SubExpr).getValue()="1"
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("const nlattr *")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(Literal).getValue()="0"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, ReturnStmt target_11) {
	target_11.getExpr().(UnaryMinusExpr).getValue()="-7"
	and target_11.getEnclosingFunction() = func
}

predicate func_13(Function func, RelationalOperation target_13) {
	 (target_13 instanceof GTExpr or target_13 instanceof LTExpr)
	and target_13.getGreaterOperand() instanceof DivExpr
	and target_13.getLesserOperand() instanceof AddExpr
	and target_13.getEnclosingFunction() = func
}

from Function func, Parameter vdesc_4243, Variable vlen_4246, Literal target_0, Literal target_1, VariableAccess target_7, DivExpr target_8, ExprStmt target_10, ReturnStmt target_11, RelationalOperation target_13
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(vdesc_4243, target_10, func)
and not func_3(vlen_4246, target_11)
and not func_6(target_13, func)
and func_7(vlen_4246, target_7)
and func_8(vlen_4246, target_11, target_8)
and func_10(func, target_10)
and func_11(func, target_11)
and func_13(func, target_13)
and vdesc_4243.getType().hasName("nft_set_desc *")
and vlen_4246.getType().hasName("u32")
and vdesc_4243.getFunction() = func
and vlen_4246.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
