/**
 * @name linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-mvneta_ethtool_get_stats
 * @id cpp/linux/ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed/mvneta-ethtool-get-stats
 * @description linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-drivers/net/ethernet/marvell/mvneta.c-mvneta_ethtool_get_stats CVE-2023-52780
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpp_4927, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="bm_priv"
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpp_4927
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdata_4925, Variable vpp_4927, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("mvneta_ethtool_pp_stats")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpp_4927
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdata_4925
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vdata_4925, Variable vpp_4927, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vdata_4925
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="ethtool_stats"
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpp_4927
	and target_2.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vdata_4925, Variable vpp_4927, ExprStmt target_1, ExprStmt target_2
where
not func_0(vpp_4927, target_1, target_2, func)
and func_1(vdata_4925, vpp_4927, func, target_1)
and func_2(vdata_4925, vpp_4927, target_2)
and vdata_4925.getType().hasName("u64 *")
and vpp_4927.getType().hasName("mvneta_port *")
and vdata_4925.getFunction() = func
and vpp_4927.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
