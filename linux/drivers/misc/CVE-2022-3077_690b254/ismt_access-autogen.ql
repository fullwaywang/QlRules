/**
 * @name linux-690b2549b19563ec5ad53e5c82f6a944d910086e-ismt_access
 * @id cpp/linux/690b2549b19563ec5ad53e5c82f6a944d910086e/ismt-access
 * @description linux-690b2549b19563ec5ad53e5c82f6a944d910086e-drivers/i2c/busses/i2c-ismt.c-ismt_access CVE-2022-3077
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdata_396, VariableAccess target_1, AddressOfExpr target_2, ExprStmt target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="block"
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_396
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="32"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_1
	and target_2.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsize_396, VariableAccess target_1) {
	target_1.getTarget()=vsize_396
}

predicate func_2(Parameter vdata_396, AddressOfExpr target_2) {
	target_2.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="block"
	and target_2.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_396
	and target_2.getOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("u8 *")
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("u8")
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SubExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_3(Parameter vdata_396, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="wr_len_cmd"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ismt_desc *")
	and target_3.getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="block"
	and target_3.getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_396
	and target_3.getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
	and target_3.getExpr().(AssignExpr).getRValue().(AddExpr).getRightOperand().(Literal).getValue()="1"
}

from Function func, Parameter vsize_396, Parameter vdata_396, VariableAccess target_1, AddressOfExpr target_2, ExprStmt target_3
where
not func_0(vdata_396, target_1, target_2, target_3)
and func_1(vsize_396, target_1)
and func_2(vdata_396, target_2)
and func_3(vdata_396, target_3)
and vsize_396.getType().hasName("int")
and vdata_396.getType().hasName("i2c_smbus_data *")
and vsize_396.getFunction() = func
and vdata_396.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
