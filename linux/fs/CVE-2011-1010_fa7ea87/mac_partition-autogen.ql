/**
 * @name linux-fa7ea87a057958a8b7926c1a60a3ca6d696328ed-mac_partition
 * @id cpp/linux/fa7ea87a057958a8b7926c1a60a3ca6d696328ed/mac-partition
 * @description linux-fa7ea87a057958a8b7926c1a60a3ca6d696328ed-fs/partitions/mac.c-mac_partition CVE-2011-1010
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vblk_35, VariableAccess target_0) {
		target_0.getTarget()=vblk_35
		and target_0.getParent().(AssignExpr).getLValue() = target_0
		and target_0.getParent().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_1(Variable vblk_35, Variable vblocks_in_map_35, BlockStmt target_18, ExprStmt target_19, VariableAccess target_1) {
		target_1.getTarget()=vblk_35
		and target_1.getParent().(LEExpr).getGreaterOperand().(VariableAccess).getTarget()=vblocks_in_map_35
		and target_1.getParent().(LEExpr).getParent().(ForStmt).getStmt()=target_18
		and target_19.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getParent().(LEExpr).getGreaterOperand().(VariableAccess).getLocation())
}

predicate func_2(Variable vblk_35, PrefixIncrExpr target_16, VariableAccess target_2) {
		target_2.getTarget()=vblk_35
		and target_16.getOperand().(VariableAccess).getLocation().isBefore(target_2.getLocation())
}

predicate func_3(Function func, Literal target_3) {
		target_3.getValue()="1"
		and not target_3.getValue()="0"
		and target_3.getParent() instanceof Initializer
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vblocks_in_map_35, Variable vsect_33, AddressOfExpr target_21, ExprStmt target_22, Function func) {
	exists(IfStmt target_4 |
		target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vblocks_in_map_35
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vblocks_in_map_35
		and target_4.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="256"
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_dev_sector")
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsect_33
		and target_4.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
		and target_21.getOperand().(VariableAccess).getLocation().isBefore(target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_4.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_22.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

/*predicate func_5(Variable vsect_33, AddressOfExpr target_21, ExprStmt target_22) {
	exists(FunctionCall target_5 |
		target_5.getTarget().hasName("put_dev_sector")
		and target_5.getArgument(0).(VariableAccess).getTarget()=vsect_33
		and target_21.getOperand().(VariableAccess).getLocation().isBefore(target_5.getArgument(0).(VariableAccess).getLocation())
		and target_5.getArgument(0).(VariableAccess).getLocation().isBefore(target_22.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

*/
predicate func_7(Variable vsect_33, ExprStmt target_7) {
		target_7.getExpr().(FunctionCall).getTarget().hasName("put_dev_sector")
		and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsect_33
}

predicate func_8(Variable vdata_34, Variable vpos_65, Parameter vstate_30, Variable vsect_33, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdata_34
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("read_part_sector")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vstate_30
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vpos_65
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(DivExpr).getRightOperand().(Literal).getValue()="512"
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsect_33
}

predicate func_9(Variable vdata_34, IfStmt target_9) {
		target_9.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vdata_34
		and target_9.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
}

predicate func_10(Variable vdata_34, Variable vpart_41, Variable vpos_65, ExprStmt target_10) {
		target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpart_41
		and target_10.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vdata_34
		and target_10.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(RemExpr).getLeftOperand().(VariableAccess).getTarget()=vpos_65
		and target_10.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(RemExpr).getRightOperand().(Literal).getValue()="512"
}

predicate func_11(Variable vpart_41, IfStmt target_11) {
		target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="signature"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="signature"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="255"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="8"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="signature"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="65280"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="8"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("__fswab16")
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="signature"
		and target_11.getCondition().(EqualityOperation).getAnOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_11.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="20557"
}

predicate func_12(Variable vsecsize_36, Variable vpart_41, Parameter vstate_30, Variable vslot_32, ExprStmt target_12) {
		target_12.getExpr().(FunctionCall).getTarget().hasName("put_partition")
		and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vstate_30
		and target_12.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vslot_32
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getLeftOperand().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getLeftOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="start_block"
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getLeftOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getLeftOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="24"
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getLeftOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("__fswab32")
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getLeftOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="start_block"
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getLeftOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getRightOperand().(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vsecsize_36
		and target_12.getExpr().(FunctionCall).getArgument(2).(MulExpr).getRightOperand().(DivExpr).getRightOperand().(Literal).getValue()="512"
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getLeftOperand().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getLeftOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="block_count"
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getLeftOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getLeftOperand().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="24"
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getLeftOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("__fswab32")
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getLeftOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="block_count"
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getLeftOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getRightOperand().(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vsecsize_36
		and target_12.getExpr().(FunctionCall).getArgument(3).(MulExpr).getRightOperand().(DivExpr).getRightOperand().(Literal).getValue()="512"
}

predicate func_13(Variable vpart_41, Parameter vstate_30, Variable vslot_32, IfStmt target_13) {
		target_13.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("strnicmp")
		and target_13.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="type"
		and target_13.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_13.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Linux_RAID"
		and target_13.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(Literal).getValue()="10"
		and target_13.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flags"
		and target_13.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="parts"
		and target_13.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vstate_30
		and target_13.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vslot_32
		and target_13.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_14(Variable vslot_32, PrefixIncrExpr target_14) {
		target_14.getOperand().(VariableAccess).getTarget()=vslot_32
}

predicate func_15(Function func, DeclStmt target_15) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_16(Variable vblk_35, PrefixIncrExpr target_16) {
		target_16.getOperand().(VariableAccess).getTarget()=vblk_35
}

predicate func_18(Function func, BlockStmt target_18) {
		target_18.getStmt(1) instanceof ExprStmt
		and target_18.getStmt(2) instanceof ExprStmt
		and target_18.getStmt(3) instanceof IfStmt
		and target_18.getStmt(4) instanceof ExprStmt
		and target_18.getStmt(5) instanceof IfStmt
		and target_18.getEnclosingFunction() = func
}

predicate func_19(Variable vblocks_in_map_35, Variable vpart_41, ExprStmt target_19) {
		target_19.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vblocks_in_map_35
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="map_count"
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="8"
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="map_count"
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="4278190080"
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="24"
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("__fswab32")
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="map_count"
		and target_19.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpart_41
}

predicate func_21(Variable vpos_65, Parameter vstate_30, Variable vsect_33, AddressOfExpr target_21) {
		target_21.getOperand().(VariableAccess).getTarget()=vsect_33
		and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("read_part_sector")
		and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vstate_30
		and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vpos_65
		and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(DivExpr).getRightOperand().(Literal).getValue()="512"
}

predicate func_22(Variable vsect_33, Function func, ExprStmt target_22) {
		target_22.getExpr().(FunctionCall).getTarget().hasName("put_dev_sector")
		and target_22.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsect_33
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_22
}

from Function func, Variable vdata_34, Variable vblk_35, Variable vblocks_in_map_35, Variable vsecsize_36, Variable vpart_41, Variable vpos_65, Parameter vstate_30, Variable vslot_32, Variable vsect_33, VariableAccess target_0, VariableAccess target_1, VariableAccess target_2, Literal target_3, ExprStmt target_7, ExprStmt target_8, IfStmt target_9, ExprStmt target_10, IfStmt target_11, ExprStmt target_12, IfStmt target_13, PrefixIncrExpr target_14, DeclStmt target_15, PrefixIncrExpr target_16, BlockStmt target_18, ExprStmt target_19, AddressOfExpr target_21, ExprStmt target_22
where
func_0(vblk_35, target_0)
and func_1(vblk_35, vblocks_in_map_35, target_18, target_19, target_1)
and func_2(vblk_35, target_16, target_2)
and func_3(func, target_3)
and not func_4(vblocks_in_map_35, vsect_33, target_21, target_22, func)
and func_7(vsect_33, target_7)
and func_8(vdata_34, vpos_65, vstate_30, vsect_33, target_8)
and func_9(vdata_34, target_9)
and func_10(vdata_34, vpart_41, vpos_65, target_10)
and func_11(vpart_41, target_11)
and func_12(vsecsize_36, vpart_41, vstate_30, vslot_32, target_12)
and func_13(vpart_41, vstate_30, vslot_32, target_13)
and func_14(vslot_32, target_14)
and func_15(func, target_15)
and func_16(vblk_35, target_16)
and func_18(func, target_18)
and func_19(vblocks_in_map_35, vpart_41, target_19)
and func_21(vpos_65, vstate_30, vsect_33, target_21)
and func_22(vsect_33, func, target_22)
and vdata_34.getType().hasName("unsigned char *")
and vblk_35.getType().hasName("int")
and vblocks_in_map_35.getType().hasName("int")
and vsecsize_36.getType().hasName("unsigned int")
and vpart_41.getType().hasName("mac_partition *")
and vpos_65.getType().hasName("int")
and vstate_30.getType().hasName("parsed_partitions *")
and vslot_32.getType().hasName("int")
and vsect_33.getType().hasName("Sector")
and vdata_34.(LocalVariable).getFunction() = func
and vblk_35.(LocalVariable).getFunction() = func
and vblocks_in_map_35.(LocalVariable).getFunction() = func
and vsecsize_36.(LocalVariable).getFunction() = func
and vpart_41.(LocalVariable).getFunction() = func
and vpos_65.(LocalVariable).getFunction() = func
and vstate_30.getFunction() = func
and vslot_32.(LocalVariable).getFunction() = func
and vsect_33.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
