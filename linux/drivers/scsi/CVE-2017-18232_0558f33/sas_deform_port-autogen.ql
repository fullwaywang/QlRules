/**
 * @name linux-0558f33c06bb910e2879e355192227a8e8f0219d-sas_deform_port
 * @id cpp/linux/0558f33c06bb910e2879e355192227a8e8f0219d/sas-deform-port
 * @description linux-0558f33c06bb910e2879e355192227a8e8f0219d-drivers/scsi/libsas/sas_port.c-sas_deform_port CVE-2017-18232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vport_208, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("sas_destruct_devices")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vport_208
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vport_208, EqualityOperation target_1) {
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="num_phys"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_208
	and target_1.getRightOperand().(Literal).getValue()="1"
}

predicate func_2(Variable vport_208, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("sas_unregister_domain_devices")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vport_208
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Variable vport_208, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("sas_port_delete")
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="port"
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_208
}

from Function func, Variable vport_208, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vport_208, target_1, target_2, target_3)
and func_1(vport_208, target_1)
and func_2(vport_208, target_2)
and func_3(vport_208, target_3)
and vport_208.getType().hasName("asd_sas_port *")
and vport_208.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
