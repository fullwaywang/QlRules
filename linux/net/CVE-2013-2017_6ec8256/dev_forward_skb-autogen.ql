/**
 * @name linux-6ec82562ffc6f297d0de36d65776cff8e5704867-dev_forward_skb
 * @id cpp/linux/6ec82562ffc6f297d0de36d65776cff8e5704867/dev-forward-skb
 * @description linux-6ec82562ffc6f297d0de36d65776cff8e5704867-net/core/dev.c-dev_forward_skb CVE-2013-2017
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ReturnStmt target_3, Function func) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand() instanceof RelationalOperation
	and target_0.getParent().(IfStmt).getThen()=target_3
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vskb_1464, NotExpr target_2, ExprStmt target_6, RelationalOperation target_4) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_1464
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vdev_1464, ReturnStmt target_3, NotExpr target_2) {
	target_2.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_2.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1464
	and target_2.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(NotExpr target_2, Function func, ReturnStmt target_3) {
	target_3.getExpr().(Literal).getValue()="1"
	and target_3.getParent().(IfStmt).getCondition()=target_2
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vdev_1464, Parameter vskb_1464, ReturnStmt target_7, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_4.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1464
	and target_4.getLesserOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="mtu"
	and target_4.getLesserOperand().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1464
	and target_4.getLesserOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="hard_header_len"
	and target_4.getLesserOperand().(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_1464
	and target_4.getParent().(IfStmt).getThen()=target_7
}

predicate func_5(Function func, IfStmt target_5) {
	target_5.getCondition() instanceof RelationalOperation
	and target_5.getThen().(ReturnStmt).getExpr().(Literal).getValue()="1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Parameter vskb_1464, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("skb_orphan")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_1464
}

predicate func_7(Function func, ReturnStmt target_7) {
	target_7.getExpr() instanceof Literal
	and target_7.getEnclosingFunction() = func
}

from Function func, Parameter vdev_1464, Parameter vskb_1464, NotExpr target_2, ReturnStmt target_3, RelationalOperation target_4, IfStmt target_5, ExprStmt target_6, ReturnStmt target_7
where
not func_0(target_3, func)
and not func_1(vskb_1464, target_2, target_6, target_4)
and func_2(vdev_1464, target_3, target_2)
and func_3(target_2, func, target_3)
and func_4(vdev_1464, vskb_1464, target_7, target_4)
and func_5(func, target_5)
and func_6(vskb_1464, target_6)
and func_7(func, target_7)
and vdev_1464.getType().hasName("net_device *")
and vskb_1464.getType().hasName("sk_buff *")
and vdev_1464.getFunction() = func
and vskb_1464.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
