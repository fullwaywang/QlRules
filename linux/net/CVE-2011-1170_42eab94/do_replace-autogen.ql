/**
 * @name linux-42eab94fff18cb1091d3501cd284d6bd6cc9c143-do_replace
 * @id cpp/linux/42eab94fff18cb1091d3501cd284d6bd6cc9c143/do-replace
 * @description linux-42eab94fff18cb1091d3501cd284d6bd6cc9c143-net/ipv4/netfilter/arp_tables.c-do_replace CVE-2011-1170
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtmp_1058, RelationalOperation target_1, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="name"
		and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmp_1058
		and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(SubExpr).getValue()="31"
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getGreaterOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtmp_1058, RelationalOperation target_1) {
		 (target_1 instanceof GEExpr or target_1 instanceof LEExpr)
		and target_1.getGreaterOperand().(ValueFieldAccess).getTarget().getName()="num_counters"
		and target_1.getGreaterOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmp_1058
		and target_1.getLesserOperand().(DivExpr).getValue()="134217727"
}

from Function func, Variable vtmp_1058, RelationalOperation target_1
where
not func_0(vtmp_1058, target_1, func)
and func_1(vtmp_1058, target_1)
and vtmp_1058.getType().hasName("arpt_replace")
and vtmp_1058.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
