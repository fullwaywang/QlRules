/**
 * @name linux-27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2-hns_nic_net_xmit
 * @id cpp/linux/27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2/hns-nic-net-xmit
 * @description linux-27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2-drivers/net/ethernet/hisilicon/hns/hns_enet.c-hns_nic_net_xmit CVE-2017-18218
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_1468, Parameter vndev_1469, Variable vpriv_1471, Variable vret_1472, FunctionCall target_0) {
	target_0.getTarget().hasName("hns_nic_net_xmit_hw")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vndev_1469
	and target_0.getArgument(1).(VariableAccess).getTarget()=vskb_1468
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="ring_data"
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_1471
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="queue_mapping"
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1468
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1472
}

predicate func_1(Function func, DeclStmt target_1) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vret_1472, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1472
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Parameter vskb_1468, Parameter vndev_1469, Variable vret_1472, Function func, IfStmt target_3) {
	target_3.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vret_1472
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("netif_trans_update")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vndev_1469
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getTarget().getName()="tx_bytes"
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="stats"
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vndev_1469
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="len"
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1468
	and target_3.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="tx_packets"
	and target_3.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="stats"
	and target_3.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vndev_1469
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(Parameter vndev_1469, EqualityOperation target_8, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("netif_trans_update")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vndev_1469
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

*/
/*predicate func_5(Parameter vskb_1468, Parameter vndev_1469, EqualityOperation target_8, ExprStmt target_5) {
	target_5.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getTarget().getName()="tx_bytes"
	and target_5.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="stats"
	and target_5.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vndev_1469
	and target_5.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="len"
	and target_5.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1468
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

*/
/*predicate func_6(Parameter vndev_1469, EqualityOperation target_8, ExprStmt target_6) {
	target_6.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="tx_packets"
	and target_6.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="stats"
	and target_6.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vndev_1469
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

*/
predicate func_7(Variable vret_1472, EqualityOperation target_8, VariableAccess target_7) {
	target_7.getTarget()=vret_1472
	and target_8.getLeftOperand().(VariableAccess).getLocation().isBefore(target_7.getLocation())
}

predicate func_8(Variable vret_1472, EqualityOperation target_8) {
	target_8.getLeftOperand().(VariableAccess).getTarget()=vret_1472
	and target_8.getRightOperand() instanceof EnumConstantAccess
}

from Function func, Parameter vskb_1468, Parameter vndev_1469, Variable vpriv_1471, Variable vret_1472, FunctionCall target_0, DeclStmt target_1, ExprStmt target_2, IfStmt target_3, VariableAccess target_7, EqualityOperation target_8
where
func_0(vskb_1468, vndev_1469, vpriv_1471, vret_1472, target_0)
and func_1(func, target_1)
and func_2(vret_1472, func, target_2)
and func_3(vskb_1468, vndev_1469, vret_1472, func, target_3)
and func_7(vret_1472, target_8, target_7)
and func_8(vret_1472, target_8)
and vskb_1468.getType().hasName("sk_buff *")
and vndev_1469.getType().hasName("net_device *")
and vpriv_1471.getType().hasName("hns_nic_priv *")
and vret_1472.getType().hasName("int")
and vskb_1468.getFunction() = func
and vndev_1469.getFunction() = func
and vpriv_1471.(LocalVariable).getFunction() = func
and vret_1472.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
