/**
 * @name linux-58706e482bf45c4db48b0c53aba2468c97adda24-blkpg_do_ioctl
 * @id cpp/linux/58706e482bf45c4db48b0c53aba2468c97adda24/blkpg-do-ioctl
 * @description linux-58706e482bf45c4db48b0c53aba2468c97adda24-block/ioctl.c-blkpg_do_ioctl CVE-2024-41000
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="0"
	and not target_0.getValue()="1"
	and target_0.getParent().(LTExpr).getParent().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand() instanceof AddExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vp_19, LogicalOrExpr target_6) {
exists(SubExpr target_1 |
	exists(ValueFieldAccess obj_0 | obj_0=target_1.getRightOperand() |
		obj_0.getTarget().getName()="length"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vp_19
	)
	and target_1.getLeftOperand().(BinaryBitwiseOperation).getValue()="9223372036854775807"
	and target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getRightOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vp_19, LogicalOrExpr target_6) {
exists(ValueFieldAccess target_2 |
	exists(VariableAccess obj_0 | obj_0=target_2.getQualifier() |
		obj_0.getTarget()=vp_19
		and obj_0.getLocation().isBefore(target_6.getLeftOperand().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	)
	and target_2.getTarget().getName()="start"
)
}

predicate func_3(Variable vp_19, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="start"
	and target_3.getQualifier().(VariableAccess).getTarget()=vp_19
}

predicate func_4(Variable vp_19, ValueFieldAccess target_4) {
	target_4.getTarget().getName()="length"
	and target_4.getQualifier().(VariableAccess).getTarget()=vp_19
}

predicate func_5(Function func, AddExpr target_5) {
	target_5.getLeftOperand() instanceof ValueFieldAccess
	and target_5.getRightOperand() instanceof ValueFieldAccess
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vp_19, LogicalOrExpr target_6) {
	exists(LogicalOrExpr obj_0 | obj_0=target_6.getLeftOperand() |
		exists(RelationalOperation obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getLesserOperand() |
				obj_2.getTarget().getName()="start"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vp_19
			)
			and obj_1.getGreaterOperand().(Literal).getValue()="0"
		)
		and exists(RelationalOperation obj_3 | obj_3=obj_0.getRightOperand() |
			exists(ValueFieldAccess obj_4 | obj_4=obj_3.getLesserOperand() |
				obj_4.getTarget().getName()="length"
				and obj_4.getQualifier().(VariableAccess).getTarget()=vp_19
			)
			and obj_3.getGreaterOperand().(Literal).getValue()="0"
		)
	)
	and exists(RelationalOperation obj_5 | obj_5=target_6.getRightOperand() |
		obj_5.getLesserOperand() instanceof AddExpr
		and obj_5.getGreaterOperand() instanceof Literal
	)
}

from Function func, Variable vp_19, Literal target_0, ValueFieldAccess target_3, ValueFieldAccess target_4, AddExpr target_5, LogicalOrExpr target_6
where
func_0(func, target_0)
and not func_1(vp_19, target_6)
and not func_2(vp_19, target_6)
and func_3(vp_19, target_3)
and func_4(vp_19, target_4)
and func_5(func, target_5)
and func_6(vp_19, target_6)
and vp_19.getType().hasName("blkpg_partition")
and vp_19.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
