/**
 * @name linux-6a3eb3360667170988f8a6477f6686242061488a-SMB2_write
 * @id cpp/linux/6a3eb3360667170988f8a6477f6686242061488a/smb2-write
 * @description linux-6a3eb3360667170988f8a6477f6686242061488a-fs/cifs/smb2pdu.c-SMB2_write CVE-2019-15919
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreq_3722, ExprStmt target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("cifs_small_buf_release")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_3722
	and target_0.getLocation().isBefore(target_1.getLocation())
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("smb2_write_rsp *")
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="iov_base"
	and target_1.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("kvec")
	and target_1.getEnclosingFunction() = func
}

from Function func, Variable vreq_3722, ExprStmt target_0, ExprStmt target_1
where
func_0(vreq_3722, target_1, target_0)
and func_1(func, target_1)
and vreq_3722.getType().hasName("smb2_write_req *")
and vreq_3722.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
