/**
 * @name chromium-bb8e17b942b8b1de0a58b2dce34197e00a3b6525-extensions__WebViewFindHelper__FindReply
 * @id cpp/chromium/bb8e17b942b8b1de0a58b2dce34197e00a3b6525/extensionswebviewfindhelperfindreply
 * @description chromium-bb8e17b942b8b1de0a58b2dce34197e00a3b6525-extensions/browser/guest_view/web_view/web_view_find_helper.cc-extensions__WebViewFindHelper__FindReply CVE-2023-2930
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("DCheck")
	and not target_0.getTarget().hasName("Check")
	and target_0.getArgument(0).(StringLiteral).getValue()="current_find_session_"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vmessage_on_fail_161, FunctionCall target_1) {
	target_1.getTarget().hasName("DCheckOp")
	and not target_1.getTarget().hasName("CheckOp")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vmessage_on_fail_161
}

predicate func_2(ExprStmt target_3, Function func) {
exists(IfStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="find_update_event_"
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and obj_0.getTarget().hasName("operator bool")
	)
	and exists(BlockStmt obj_2 | obj_2=target_2.getThen() |
		obj_2.getStmt(0) instanceof ExprStmt
		and obj_2.getStmt(1) instanceof ExprStmt
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_3.getLocation())
)
}

predicate func_3(Parameter vactive_match_ordinal_146, Parameter vfinal_update_147, Parameter vnumber_of_matches_144, Parameter vselection_rect_145, Function func, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="find_update_event_"
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
			)
		)
		and obj_0.getTarget().hasName("AggregateResults")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vnumber_of_matches_144
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vselection_rect_145
		and obj_0.getArgument(2).(VariableAccess).getTarget()=vactive_match_ordinal_146
		and obj_0.getArgument(3).(VariableAccess).getTarget()=vfinal_update_147
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Parameter vfinal_update_147, Function func, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		obj_0.getTarget().hasName("DispatchFindUpdateEvent")
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
		and obj_0.getArgument(0).(Literal).getValue()="0"
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vfinal_update_147
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

from Function func, Parameter vactive_match_ordinal_146, Parameter vfinal_update_147, Variable vmessage_on_fail_161, Parameter vnumber_of_matches_144, Parameter vselection_rect_145, FunctionCall target_0, FunctionCall target_1, ExprStmt target_3, ExprStmt target_4
where
func_0(func, target_0)
and func_1(vmessage_on_fail_161, target_1)
and not func_2(target_3, func)
and func_3(vactive_match_ordinal_146, vfinal_update_147, vnumber_of_matches_144, vselection_rect_145, func, target_3)
and func_4(vfinal_update_147, func, target_4)
and vactive_match_ordinal_146.getType().hasName("int")
and vfinal_update_147.getType().hasName("bool")
and vmessage_on_fail_161.getType().hasName("char *const")
and vnumber_of_matches_144.getType().hasName("int")
and vselection_rect_145.getType().hasName("const Rect &")
and vactive_match_ordinal_146.getFunction() = func
and vfinal_update_147.getFunction() = func
and vmessage_on_fail_161.(LocalVariable).getFunction() = func
and vnumber_of_matches_144.getFunction() = func
and vselection_rect_145.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
