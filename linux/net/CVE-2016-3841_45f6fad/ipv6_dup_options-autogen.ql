/**
 * @name linux-45f6fad84cc305103b28d73482b344d7f5b76f39-ipv6_dup_options
 * @id cpp/linux/45f6fad84cc305103b28d73482b344d7f5b76f39/ipv6-dup-options
 * @description linux-45f6fad84cc305103b28d73482b344d7f5b76f39-net/ipv6/exthdrs.c-ipv6_dup_options CVE-2016-3841
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vopt2_716, VariableAccess target_1, ExprStmt target_2, ReturnStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("atomic_set")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="refcnt"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vopt2_716
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignPointerAddExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(Variable vopt2_716, BlockStmt target_4, VariableAccess target_1) {
	target_1.getTarget()=vopt2_716
	and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vopt2_716, ExprStmt target_2) {
	target_2.getExpr().(AssignPointerAddExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="srcrt"
	and target_2.getExpr().(AssignPointerAddExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vopt2_716
	and target_2.getExpr().(AssignPointerAddExpr).getRValue().(VariableAccess).getTarget().getType().hasName("long")
}

predicate func_3(Variable vopt2_716, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vopt2_716
}

predicate func_4(Variable vopt2_716, BlockStmt target_4) {
	target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vopt2_716
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("ipv6_txoptions *")
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="tot_len"
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ipv6_txoptions *")
}

from Function func, Variable vopt2_716, VariableAccess target_1, ExprStmt target_2, ReturnStmt target_3, BlockStmt target_4
where
not func_0(vopt2_716, target_1, target_2, target_3)
and func_1(vopt2_716, target_4, target_1)
and func_2(vopt2_716, target_2)
and func_3(vopt2_716, target_3)
and func_4(vopt2_716, target_4)
and vopt2_716.getType().hasName("ipv6_txoptions *")
and vopt2_716.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
