/**
 * @name v8-b8020e1973d7d3a50b17c076cd948f079e59f9e5-v8__internal__compiler____AddProperties
 * @id cpp/v8/b8020e1973d7d3a50b17c076cd948f079e59f9e5/v8internalcompileraddproperties
 * @description v8-b8020e1973d7d3a50b17c076cd948f079e59f9e5-test/cctest/test-code-stub-assembler.cc-v8__internal__compiler____AddProperties CVE-2023-2724
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vobject_1171, Parameter vnames_1171, Variable vi_1175, Variable vgetter_1179, Variable vsetter_1180, FunctionCall target_0) {
	target_0.getTarget().hasName("DefineAccessor")
	and not target_0.getTarget().hasName("DefineOwnAccessorIgnoreAttributes")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vobject_1171
	and target_0.getArgument(1).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vnames_1171
	and target_0.getArgument(1).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1175
	and target_0.getArgument(2).(VariableAccess).getTarget()=vgetter_1179
	and target_0.getArgument(3).(VariableAccess).getTarget()=vsetter_1180
}

from Function func, Parameter vobject_1171, Parameter vnames_1171, Variable vi_1175, Variable vgetter_1179, Variable vsetter_1180, FunctionCall target_0
where
func_0(vobject_1171, vnames_1171, vi_1175, vgetter_1179, vsetter_1180, target_0)
and vobject_1171.getType().hasName("Handle<JSObject>")
and vnames_1171.getType().hasName("Handle<Name>[]")
and vi_1175.getType().hasName("size_t")
and vgetter_1179.getType().hasName("Handle<Object>")
and vsetter_1180.getType().hasName("Handle<Object>")
and vobject_1171.getFunction() = func
and vnames_1171.getFunction() = func
and vi_1175.(LocalVariable).getFunction() = func
and vgetter_1179.(LocalVariable).getFunction() = func
and vsetter_1180.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
