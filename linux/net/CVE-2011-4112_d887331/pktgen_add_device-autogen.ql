/**
 * @name linux-d8873315065f1f527c7c380402cf59b1e1d0ae36-pktgen_add_device
 * @id cpp/linux/d8873315065f1f527c7c380402cf59b1e1d0ae36/pktgen-add-device
 * @description linux-d8873315065f1f527c7c380402cf59b1e1d0ae36-net/core/pktgen.c-pktgen_add_device CVE-2011-4112
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpkt_dev_3530, ExprStmt target_2, ExprStmt target_3, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="priv_flags"
		and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="odev"
		and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpkt_dev_3530
		and target_0.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="65536"
		and target_0.getThen() instanceof ExprStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vpg_clone_skb_d, Variable vpkt_dev_3530, Function func, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="clone_skb"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpkt_dev_3530
		and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vpg_clone_skb_d
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vpkt_dev_3530, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pktgen_setup_dev")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpkt_dev_3530
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
}

predicate func_3(Variable vpkt_dev_3530, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="entry"
		and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpkt_dev_3530
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("proc_create_data")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const char *")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(OctalLiteral).getValue()="384"
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("proc_dir_entry *")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const file_operations")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vpkt_dev_3530
}

from Function func, Variable vpg_clone_skb_d, Variable vpkt_dev_3530, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vpkt_dev_3530, target_2, target_3, func)
and func_1(vpg_clone_skb_d, vpkt_dev_3530, func, target_1)
and func_2(vpkt_dev_3530, target_2)
and func_3(vpkt_dev_3530, target_3)
and vpg_clone_skb_d.getType().hasName("int")
and vpkt_dev_3530.getType().hasName("pktgen_dev *")
and not vpg_clone_skb_d.getParentScope+() = func
and vpkt_dev_3530.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
