/**
 * @name linux-9f00b2e7cf241fa389733d41b6-br_multicast_add_group
 * @id cpp/linux/9f00b2e7cf241fa389733d41b6/br-multicast-add-group
 * @description linux-9f00b2e7cf241fa389733d41b6-net/bridge/br_multicast.c-br_multicast_add_group CVE-2013-4129
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, DeclStmt target_0) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Variable vmp_656, Variable vnow_659, Parameter vbr_652, NotExpr target_3, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("mod_timer")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="timer"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmp_656
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(VariableAccess).getTarget()=vnow_659
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="multicast_membership_interval"
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbr_652
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Variable vp_657, Variable vnow_659, Parameter vbr_652, Function func, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("mod_timer")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="timer"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_657
		and target_2.getExpr().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(VariableAccess).getTarget()=vnow_659
		and target_2.getExpr().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="multicast_membership_interval"
		and target_2.getExpr().(FunctionCall).getArgument(1).(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbr_652
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Function func, NotExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget().getType().hasName("net_bridge_port *")
		and target_3.getEnclosingFunction() = func
}

from Function func, Variable vmp_656, Variable vp_657, Variable vnow_659, Parameter vbr_652, DeclStmt target_0, ExprStmt target_1, ExprStmt target_2, NotExpr target_3
where
func_0(func, target_0)
and func_1(vmp_656, vnow_659, vbr_652, target_3, target_1)
and func_2(vp_657, vnow_659, vbr_652, func, target_2)
and func_3(func, target_3)
and vmp_656.getType().hasName("net_bridge_mdb_entry *")
and vp_657.getType().hasName("net_bridge_port_group *")
and vnow_659.getType().hasName("unsigned long")
and vbr_652.getType().hasName("net_bridge *")
and vmp_656.(LocalVariable).getFunction() = func
and vp_657.(LocalVariable).getFunction() = func
and vnow_659.(LocalVariable).getFunction() = func
and vbr_652.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
