/**
 * @name linux-237f3cf13b20db183d3706d997eedc3c49eacd44-xsk_setsockopt
 * @id cpp/linux/237f3cf13b20db183d3706d997eedc3c49eacd44/xsk-setsockopt
 * @description linux-237f3cf13b20db183d3706d997eedc3c49eacd44-net/xdp/xsk.c-xsk_setsockopt CVE-2024-35976
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptlen_1346, IfStmt target_1, RelationalOperation target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=voptlen_1346
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(SizeofExprOperator).getValue()="4"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(FunctionCall).getTarget().hasName("copy_from_sockptr")
	and target_1.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sockptr_t")
	and target_1.getCondition().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="4"
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter voptlen_1346, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=voptlen_1346
	and target_2.getGreaterOperand().(SizeofExprOperator).getValue()="32"
}

from Function func, Parameter voptlen_1346, IfStmt target_1, RelationalOperation target_2
where
not func_0(voptlen_1346, target_1, target_2)
and func_1(func, target_1)
and func_2(voptlen_1346, target_2)
and voptlen_1346.getType().hasName("unsigned int")
and voptlen_1346.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
