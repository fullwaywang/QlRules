/**
 * @name v8-17da9e70833014e0a2646db5c11588f0aee02de7-v8__internal__compiler____ReduceNode
 * @id cpp/v8/17da9e70833014e0a2646db5c11588f0aee02de7/v8internalcompilerreducenode
 * @description v8-17da9e70833014e0a2646db5c11588f0aee02de7-src/compiler/escape-analysis.cc-v8__internal__compiler____ReduceNode CVE-2022-1364
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcurrent_595, FunctionCall target_1, ExprStmt target_2, FunctionCall target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("SetValueChanged")
	and target_0.getExpr().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vcurrent_595
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_1
	and target_2.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("opcode")
	and target_1.getQualifier().(VariableAccess).getTarget().getType().hasName("const Operator *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vcurrent_595, LogicalAndExpr target_4, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("MarkForDeletion")
	and target_2.getExpr().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vcurrent_595
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Parameter vcurrent_595, FunctionCall target_3) {
	target_3.getTarget().hasName("CurrentNode")
	and target_3.getQualifier().(VariableAccess).getTarget()=vcurrent_595
}

predicate func_4(BlockStmt target_5, Function func, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("const VirtualObject *")
	and target_4.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("HasEscaped")
	and target_4.getRightOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("const VirtualObject *")
	and target_4.getParent().(IfStmt).getThen()=target_5
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vcurrent_595, BlockStmt target_5) {
	target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("MarkForDeletion")
	and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vcurrent_595
}

from Function func, Parameter vcurrent_595, FunctionCall target_1, ExprStmt target_2, FunctionCall target_3, LogicalAndExpr target_4, BlockStmt target_5
where
not func_0(vcurrent_595, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vcurrent_595, target_4, target_2)
and func_3(vcurrent_595, target_3)
and func_4(target_5, func, target_4)
and func_5(vcurrent_595, target_5)
and vcurrent_595.getType().hasName("Scope *")
and vcurrent_595.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
