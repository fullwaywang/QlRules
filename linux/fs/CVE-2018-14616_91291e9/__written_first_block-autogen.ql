/**
 * @name linux-91291e9998d208370eb8156c760691b873bd7522-__written_first_block
 * @id cpp/linux/91291e9998d208370eb8156c760691b873bd7522/--written-first-block
 * @description linux-91291e9998d208370eb8156c760691b873bd7522-fs/f2fs/inode.c-__written_first_block CVE-2018-14616
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vaddr_74, Parameter vsbi_71, ReturnStmt target_11, FunctionCall target_0) {
		target_0.getTarget().hasName("is_valid_data_blkaddr")
		and not target_0.getTarget().hasName("__is_valid_data_blkaddr")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vsbi_71
		and target_0.getArgument(1).(VariableAccess).getTarget()=vaddr_74
		and target_0.getParent().(IfStmt).getThen()=target_11
}

predicate func_2(Variable vaddr_74, ReturnStmt target_11, FunctionCall target_0) {
	exists(NotExpr target_2 |
		target_2.getOperand().(FunctionCall).getTarget().hasName("__is_valid_data_blkaddr")
		and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vaddr_74
		and target_2.getParent().(IfStmt).getThen()=target_11
		and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_5(Variable vaddr_74, Parameter vsbi_71, Function func) {
	exists(IfStmt target_5 |
		target_5.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("f2fs_is_valid_blkaddr")
		and target_5.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsbi_71
		and target_5.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vaddr_74
		and target_5.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5)
}

/*predicate func_6(Function func) {
	exists(UnaryMinusExpr target_6 |
		target_6.getValue()="-14"
		and target_6.getEnclosingFunction() = func)
}

*/
predicate func_7(Function func) {
	exists(ReturnStmt target_7 |
		target_7.getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_7)
}

predicate func_8(Variable vaddr_74, Parameter vsbi_71, ReturnStmt target_11, VariableAccess target_8) {
		target_8.getTarget()=vsbi_71
		and target_8.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vaddr_74
		and target_8.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_11
}

/*predicate func_9(Variable vaddr_74, ReturnStmt target_11, VariableAccess target_9) {
		target_9.getTarget()=vaddr_74
		and target_9.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_11
}

*/
predicate func_11(Function func, ReturnStmt target_11) {
		target_11.getExpr() instanceof EnumConstantAccess
		and target_11.getEnclosingFunction() = func
}

from Function func, Variable vaddr_74, Parameter vsbi_71, FunctionCall target_0, VariableAccess target_8, ReturnStmt target_11
where
func_0(vaddr_74, vsbi_71, target_11, target_0)
and not func_2(vaddr_74, target_11, target_0)
and not func_5(vaddr_74, vsbi_71, func)
and not func_7(func)
and func_8(vaddr_74, vsbi_71, target_11, target_8)
and func_11(func, target_11)
and vaddr_74.getType().hasName("block_t")
and vsbi_71.getType().hasName("f2fs_sb_info *")
and vaddr_74.(LocalVariable).getFunction() = func
and vsbi_71.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
