/**
 * @name linux-fda4e2e85589191b123d31cdc21fd33ee70f50fd-kvm_lapic_sync_from_vapic
 * @id cpp/linux/fda4e2e85589191b123d31cdc21fd33ee70f50fd/kvm-lapic-sync-from-vapic
 * @description linux-fda4e2e85589191b123d31cdc21fd33ee70f50fd-arch/x86/kvm/lapic.c-kvm_lapic_sync_from_vapic CVE-2013-6368
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdata_1694, Parameter vvcpu_1692, BitwiseAndExpr target_14, ValueFieldAccess target_15) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("kvm_read_guest_cached")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="kvm"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_1692
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="vapic_cache"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier() instanceof ValueFieldAccess
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdata_1694
	and target_0.getArgument(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getArgument(3).(SizeofTypeOperator).getValue()="4"
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_14.getLeftOperand().(VariableAccess).getLocation())
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_1692, ValueFieldAccess target_1) {
	target_1.getTarget().getName()="apic"
	and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_1692
}

predicate func_2(Parameter vvcpu_1692, VariableAccess target_2) {
	target_2.getTarget()=vvcpu_1692
}

predicate func_3(Variable vdata_1694, VariableAccess target_3) {
	target_3.getTarget()=vdata_1694
	and target_3.getParent().(AssignExpr).getLValue() = target_3
	and target_3.getParent().(AssignExpr).getRValue() instanceof PointerDereferenceExpr
}

predicate func_4(Function func, DeclStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vvapic_1695, AssignExpr target_5) {
	target_5.getLValue().(VariableAccess).getTarget()=vvapic_1695
	and target_5.getRValue().(FunctionCall).getTarget().hasName("kmap_atomic")
	and target_5.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="vapic_page"
	and target_5.getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier() instanceof ValueFieldAccess
}

predicate func_6(Variable vdata_1694, Variable vvapic_1695, Function func, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdata_1694
	and target_6.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vvapic_1695
	and target_6.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="vapic_addr"
	and target_6.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="apic"
	and target_6.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(PointerArithmeticOperation).getRightOperand().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="4095"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable vvapic_1695, Variable v__cond_1705, Function func, DoStmt target_7) {
	target_7.getCondition() instanceof Literal
	and target_7.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_7.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_1705
	and target_7.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(DoStmt).getCondition() instanceof Literal
	and target_7.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__kunmap_atomic")
	and target_7.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvapic_1695
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

/*predicate func_8(Variable v__cond_1705, DoStmt target_8) {
	target_8.getCondition() instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_1705
	and target_8.getStmt().(BlockStmt).getStmt(3).(DoStmt).getCondition() instanceof Literal
}

*/
/*predicate func_11(Variable v__cond_1705, IfStmt target_11) {
	target_11.getCondition().(VariableAccess).getTarget()=v__cond_1705
}

*/
/*predicate func_12(Function func, DoStmt target_12) {
	target_12.getCondition() instanceof Literal
	and target_12.getEnclosingFunction() = func
}

*/
/*predicate func_13(Variable vvapic_1695, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("__kunmap_atomic")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvapic_1695
}

*/
predicate func_14(Variable vdata_1694, BitwiseAndExpr target_14) {
	target_14.getLeftOperand().(VariableAccess).getTarget()=vdata_1694
	and target_14.getRightOperand().(HexLiteral).getValue()="255"
}

predicate func_15(Parameter vvcpu_1692, ValueFieldAccess target_15) {
	target_15.getTarget().getName()="apic"
	and target_15.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_1692
}

from Function func, Variable vdata_1694, Variable vvapic_1695, Variable v__cond_1705, Parameter vvcpu_1692, ValueFieldAccess target_1, VariableAccess target_2, VariableAccess target_3, DeclStmt target_4, AssignExpr target_5, ExprStmt target_6, DoStmt target_7, BitwiseAndExpr target_14, ValueFieldAccess target_15
where
not func_0(vdata_1694, vvcpu_1692, target_14, target_15)
and func_1(vvcpu_1692, target_1)
and func_2(vvcpu_1692, target_2)
and func_3(vdata_1694, target_3)
and func_4(func, target_4)
and func_5(vvapic_1695, target_5)
and func_6(vdata_1694, vvapic_1695, func, target_6)
and func_7(vvapic_1695, v__cond_1705, func, target_7)
and func_14(vdata_1694, target_14)
and func_15(vvcpu_1692, target_15)
and vdata_1694.getType().hasName("u32")
and vvapic_1695.getType().hasName("void *")
and v__cond_1705.getType().hasName("bool")
and vvcpu_1692.getType().hasName("kvm_vcpu *")
and vdata_1694.(LocalVariable).getFunction() = func
and vvapic_1695.(LocalVariable).getFunction() = func
and v__cond_1705.(LocalVariable).getFunction() = func
and vvcpu_1692.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
