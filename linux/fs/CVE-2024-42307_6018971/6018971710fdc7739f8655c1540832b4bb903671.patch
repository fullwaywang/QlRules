commit 6018971710fdc7739f8655c1540832b4bb903671
Author: Steve French <stfrench@microsoft.com>
Date:   Sun Jul 21 15:45:56 2024 -0500

    cifs: fix potential null pointer use in destroy_workqueue in init_cifs error path
    
    commit 193cc89ea0ca1da311877d2b4bb5e9f03bcc82a2 upstream.
    
    Dan Carpenter reported a Smack static checker warning:
       fs/smb/client/cifsfs.c:1981 init_cifs()
       error: we previously assumed 'serverclose_wq' could be null (see line 1895)
    
    The patch which introduced the serverclose workqueue used the wrong
    oredering in error paths in init_cifs() for freeing it on errors.
    
    Fixes: 173217bd7336 ("smb3: retrying on failed server close")
    Cc: stable@vger.kernel.org
    Cc: Ritvik Budhiraja <rbudhiraja@microsoft.com>
    Reported-by: Dan Carpenter <dan.carpenter@linaro.org>
    Reviewed-by: Dan Carpenter <dan.carpenter@linaro.org>
    Reviewed-by: David Howells <dhowell@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/fs/smb/client/cifsfs.c b/fs/smb/client/cifsfs.c
index 78340d904c7b..6384e1b2b2ef 100644
--- a/fs/smb/client/cifsfs.c
+++ b/fs/smb/client/cifsfs.c
@@ -1872,12 +1872,12 @@ init_cifs(void)
 					   WQ_FREEZABLE|WQ_MEM_RECLAIM, 0);
 	if (!serverclose_wq) {
 		rc = -ENOMEM;
-		goto out_destroy_serverclose_wq;
+		goto out_destroy_deferredclose_wq;
 	}
 
 	rc = cifs_init_inodecache();
 	if (rc)
-		goto out_destroy_deferredclose_wq;
+		goto out_destroy_serverclose_wq;
 
 	rc = init_mids();
 	if (rc)
@@ -1939,6 +1939,8 @@ init_cifs(void)
 	destroy_mids();
 out_destroy_inodecache:
 	cifs_destroy_inodecache();
+out_destroy_serverclose_wq:
+	destroy_workqueue(serverclose_wq);
 out_destroy_deferredclose_wq:
 	destroy_workqueue(deferredclose_wq);
 out_destroy_cifsoplockd_wq:
@@ -1949,8 +1951,6 @@ init_cifs(void)
 	destroy_workqueue(decrypt_wq);
 out_destroy_cifsiod_wq:
 	destroy_workqueue(cifsiod_wq);
-out_destroy_serverclose_wq:
-	destroy_workqueue(serverclose_wq);
 out_clean_proc:
 	cifs_proc_clean();
 	return rc;
