/**
 * @name linux-e65a0dc2e85efb28e182aca50218e8a056d0ce04-create_pinctrl
 * @id cpp/linux/e65a0dc2e85efb28e182aca50218e8a056d0ce04/create-pinctrl
 * @description linux-e65a0dc2e85efb28e182aca50218e8a056d0ce04-drivers/pinctrl/core.c-create_pinctrl CVE-2024-42090
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpinctrl_maps_mutex, ExprStmt target_1, ExprStmt target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("mutex_unlock")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vpinctrl_maps_mutex
	)
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(EqualityOperation target_2, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("pinctrl_free")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("pinctrl *")
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getRightOperand().(UnaryMinusExpr).getValue()="-517"
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vpinctrl_maps_mutex, ExprStmt target_0, ExprStmt target_1, EqualityOperation target_2
where
func_0(vpinctrl_maps_mutex, target_1, target_0)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and vpinctrl_maps_mutex.getType().hasName("mutex")
and not vpinctrl_maps_mutex.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
