/**
 * @name linux-b4e00444cab4c3f3fec876dc0cccc8cbb0d1a948-copy_process
 * @id cpp/linux/b4e00444cab4c3f3fec876dc0cccc8cbb0d1a948/copy-process
 * @description linux-b4e00444cab4c3f3fec876dc0cccc8cbb0d1a948-copy_process CVE-2020-35508
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="32768"
		and not target_0.getValue()="65536"
		and target_0.getParent().(BitwiseAndExpr).getParent().(IfStmt).getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("u64")
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vp_1849, BitwiseAndExpr target_3, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="exit_signal"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1849
		and target_1.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Parameter vargs_1846, Variable vp_1849, BitwiseAndExpr target_4, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="exit_signal"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1849
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="exit_signal"
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vargs_1846
		and target_2.getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(BlockStmt target_5, Function func, BitwiseAndExpr target_3) {
		target_3.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u64")
		and target_3.getRightOperand().(Literal).getValue()="65536"
		and target_3.getParent().(IfStmt).getThen()=target_5
		and target_3.getEnclosingFunction() = func
}

predicate func_4(ExprStmt target_6, Function func, BitwiseAndExpr target_4) {
		target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u64")
		and target_4.getRightOperand() instanceof Literal
		and target_4.getParent().(IfStmt).getThen()=target_6
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vp_1849, BlockStmt target_5) {
		target_5.getStmt(0) instanceof ExprStmt
		and target_5.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="group_leader"
		and target_5.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1849
		and target_5.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="group_leader"
		and target_5.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
}

predicate func_6(Variable vp_1849, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="exit_signal"
		and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1849
		and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="exit_signal"
		and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="group_leader"
		and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
}

from Function func, Parameter vargs_1846, Variable vp_1849, Literal target_0, ExprStmt target_1, ExprStmt target_2, BitwiseAndExpr target_3, BitwiseAndExpr target_4, BlockStmt target_5, ExprStmt target_6
where
func_0(func, target_0)
and func_1(vp_1849, target_3, target_1)
and func_2(vargs_1846, vp_1849, target_4, target_2)
and func_3(target_5, func, target_3)
and func_4(target_6, func, target_4)
and func_5(vp_1849, target_5)
and func_6(vp_1849, target_6)
and vargs_1846.getType().hasName("kernel_clone_args *")
and vp_1849.getType().hasName("task_struct *")
and vargs_1846.getFunction() = func
and vp_1849.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
