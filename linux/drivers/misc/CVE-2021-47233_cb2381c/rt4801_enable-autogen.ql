/**
 * @name linux-cb2381cbecb81a8893b2d1e1af29bc2e5531df27-rt4801_enable
 * @id cpp/linux/cb2381cbecb81a8893b2d1e1af29bc2e5531df27/rt4801-enable
 * @description linux-cb2381cbecb81a8893b2d1e1af29bc2e5531df27-drivers/regulator/rt4801-regulator.c-rt4801_enable CVE-2021-47233
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vgpios_66, BlockStmt target_2, RelationalOperation target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vgpios_66
	and target_0.getRightOperand() instanceof RelationalOperation
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_1.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vgpios_66, Variable vid_67, BlockStmt target_2, RelationalOperation target_1) {
	 (target_1 instanceof GEExpr or target_1 instanceof LEExpr)
	and target_1.getLesserOperand().(PointerFieldAccess).getTarget().getName()="ndescs"
	and target_1.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgpios_66
	and target_1.getGreaterOperand().(VariableAccess).getTarget()=vid_67
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_warn")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("regulator_dev *")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="no dedicated gpio can control\n"
	and target_2.getStmt(1).(GotoStmt).getName() ="bypass_gpio"
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vgpios_66, Variable vid_67, RelationalOperation target_1, BlockStmt target_2
where
not func_0(vgpios_66, target_2, target_1)
and func_1(vgpios_66, vid_67, target_2, target_1)
and func_2(func, target_2)
and vgpios_66.getType().hasName("gpio_descs *")
and vid_67.getType().hasName("int")
and vgpios_66.(LocalVariable).getFunction() = func
and vid_67.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
