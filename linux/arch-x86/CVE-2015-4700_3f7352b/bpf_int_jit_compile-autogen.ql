/**
 * @name linux-3f7352bf21f8fd7ba3e2fcef9488756f188e12be-bpf_int_jit_compile
 * @id cpp/linux/3f7352bf21f8fd7ba3e2fcef9488756f188e12be/bpf-int-jit-compile
 * @description linux-3f7352bf21f8fd7ba3e2fcef9488756f188e12be-arch/x86/net/bpf_jit_comp.c-bpf_int_jit_compile CVE-2015-4700
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vimage_945, BlockStmt target_2, ExprStmt target_4) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof RelationalOperation
	and target_0.getRightOperand().(VariableAccess).getTarget()=vimage_945
	and target_0.getParent().(ForStmt).getStmt()=target_2
	and target_0.getRightOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Variable vpass_947, BlockStmt target_2, RelationalOperation target_1) {
	 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getLesserOperand().(VariableAccess).getTarget()=vpass_947
	and target_1.getGreaterOperand().(Literal).getValue()="10"
	and target_1.getParent().(ForStmt).getStmt()=target_2
}

predicate func_2(Variable vimage_945, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("do_jit")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_prog *")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int *")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vimage_945
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("jit_context")
}

predicate func_4(Variable vimage_945, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("do_jit")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_prog *")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int *")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vimage_945
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("jit_context")
}

from Function func, Variable vimage_945, Variable vpass_947, RelationalOperation target_1, BlockStmt target_2, ExprStmt target_4
where
not func_0(vimage_945, target_2, target_4)
and func_1(vpass_947, target_2, target_1)
and func_2(vimage_945, target_2)
and func_4(vimage_945, target_4)
and vimage_945.getType().hasName("u8 *")
and vpass_947.getType().hasName("int")
and vimage_945.(LocalVariable).getFunction() = func
and vpass_947.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
