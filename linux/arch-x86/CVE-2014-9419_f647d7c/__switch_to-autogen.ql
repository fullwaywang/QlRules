/**
 * @name linux-f647d7c155f069c1a068030255c300663516420e-__switch_to
 * @id cpp/linux/f647d7c155f069c1a068030255c300663516420e/--switch-to
 * @description linux-f647d7c155f069c1a068030255c300663516420e-arch/x86/kernel/process_64.c-__switch_to CVE-2014-9419
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfsindex_281, IfStmt target_4, AsmStmt target_0) {
	target_0.getChild(0).(VariableAccess).getTarget()=vfsindex_281
	and target_4.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vgsindex_281, IfStmt target_4, AsmStmt target_1) {
	target_1.getChild(0).(VariableAccess).getTarget()=vgsindex_281
	and target_4.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vnext_278, Variable vcpu_279, IfStmt target_4, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("load_TLS")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnext_278
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcpu_279
	and target_4.getLocation().isBefore(target_2.getLocation())
}

predicate func_3(Parameter vnext_p_275, IfStmt target_4, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("arch_end_context_switch")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnext_p_275
	and target_4.getLocation().isBefore(target_3.getLocation())
}

predicate func_4(Variable vnext_278, IfStmt target_4) {
	target_4.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_4.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseOrExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ds"
	and target_4.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseOrExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnext_278
	and target_4.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseOrExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="ds"
	and target_4.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseOrExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("thread_struct *")
	and target_4.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_4.getThen().(DoStmt).getCondition().(Literal).getValue()="0"
	and target_4.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(1).(AsmStmt).getChild(0).(VariableAccess).getTarget().getType().hasName("unsigned short")
}

from Function func, Parameter vnext_p_275, Variable vnext_278, Variable vcpu_279, Variable vfsindex_281, Variable vgsindex_281, AsmStmt target_0, AsmStmt target_1, ExprStmt target_2, ExprStmt target_3, IfStmt target_4
where
func_0(vfsindex_281, target_4, target_0)
and func_1(vgsindex_281, target_4, target_1)
and func_2(vnext_278, vcpu_279, target_4, target_2)
and func_3(vnext_p_275, target_4, target_3)
and func_4(vnext_278, target_4)
and vnext_p_275.getType().hasName("task_struct *")
and vnext_278.getType().hasName("thread_struct *")
and vcpu_279.getType().hasName("int")
and vfsindex_281.getType().hasName("unsigned int")
and vgsindex_281.getType().hasName("unsigned int")
and vnext_p_275.getFunction() = func
and vnext_278.(LocalVariable).getFunction() = func
and vcpu_279.(LocalVariable).getFunction() = func
and vfsindex_281.(LocalVariable).getFunction() = func
and vgsindex_281.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
