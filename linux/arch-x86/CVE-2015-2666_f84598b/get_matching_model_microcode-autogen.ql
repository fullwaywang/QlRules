/**
 * @name linux-f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4-get_matching_model_microcode
 * @id cpp/linux/f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4/get-matching-model-microcode
 * @description linux-f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4-arch/x86/kernel/cpu/microcode/intel_early.c-get_matching_model_microcode CVE-2015-2666
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vleftover_316, Variable vmc_saved_count_321, LogicalOrExpr target_3, AddressOfExpr target_5) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vleftover_316
		and target_0.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vmc_saved_count_321
		and target_0.getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getValue()="128"
		and target_0.getAnOperand().(VariableAccess).getLocation().isBefore(target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_5.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vleftover_316, VariableAccess target_1) {
		target_1.getTarget()=vleftover_316
}

predicate func_3(Variable vleftover_316, LogicalOrExpr target_3) {
		target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_3.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vleftover_316
		and target_3.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getTarget().hasName("microcode_sanity_check")
		and target_3.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("u8 *")
		and target_3.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_3.getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
}

predicate func_5(Variable vmc_saved_count_321, AddressOfExpr target_5) {
		target_5.getOperand().(VariableAccess).getTarget()=vmc_saved_count_321
}

from Function func, Variable vleftover_316, Variable vmc_saved_count_321, VariableAccess target_1, LogicalOrExpr target_3, AddressOfExpr target_5
where
not func_0(vleftover_316, vmc_saved_count_321, target_3, target_5)
and func_1(vleftover_316, target_1)
and func_3(vleftover_316, target_3)
and func_5(vmc_saved_count_321, target_5)
and vleftover_316.getType().hasName("unsigned int")
and vmc_saved_count_321.getType().hasName("unsigned int")
and vleftover_316.(LocalVariable).getFunction() = func
and vmc_saved_count_321.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
