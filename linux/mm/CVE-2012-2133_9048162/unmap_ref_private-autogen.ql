/**
 * @name linux-90481622d75715bfcb68501280a917dbfe516029-unmap_ref_private
 * @id cpp/linux/90481622d75715bfcb68501280a917dbfe516029/unmap-ref-private
 * @description linux-90481622d75715bfcb68501280a917dbfe516029-mm/hugetlb.c-unmap_ref_private CVE-2012-2133
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvma_2319, ExprStmt target_2, EqualityOperation target_3) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="i_mapping"
		and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="d_inode"
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="dentry"
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="f_path"
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vm_file"
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_2319
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpage_2320, ValueFieldAccess target_1) {
		target_1.getTarget().getName()="private"
		and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpage_2320
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("address_space *")
}

predicate func_2(Parameter vvma_2319, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vma_hugecache_offset")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("hstate *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvma_2319
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
}

predicate func_3(Parameter vvma_2319, EqualityOperation target_3) {
		target_3.getAnOperand().(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
		and target_3.getAnOperand().(VariableAccess).getTarget()=vvma_2319
}

from Function func, Parameter vvma_2319, Parameter vpage_2320, ValueFieldAccess target_1, ExprStmt target_2, EqualityOperation target_3
where
not func_0(vvma_2319, target_2, target_3)
and func_1(vpage_2320, target_1)
and func_2(vvma_2319, target_2)
and func_3(vvma_2319, target_3)
and vvma_2319.getType().hasName("vm_area_struct *")
and vpage_2320.getType().hasName("page *")
and vvma_2319.getFunction() = func
and vpage_2320.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
