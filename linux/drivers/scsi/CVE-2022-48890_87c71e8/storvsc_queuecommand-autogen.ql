/**
 * @name linux-87c71e88f6a6619ffb1ff88f84dff48ef6d57adb-storvsc_queuecommand
 * @id cpp/linux/87c71e88f6a6619ffb1ff88f84dff48ef6d57adb/storvsc-queuecommand
 * @description linux-87c71e88f6a6619ffb1ff88f84dff48ef6d57adb-drivers/scsi/storvsc_drv.c-storvsc_queuecommand CVE-2022-48890
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vscmnd_1685, Variable vret_1687, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, EqualityOperation target_4, Function func) {
exists(IfStmt target_0 |
	exists(ExprStmt obj_0 | obj_0=target_0.getThen() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("scsi_dma_unmap")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vscmnd_1685
		)
	)
	and target_0.getCondition().(VariableAccess).getTarget()=vret_1687
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(VariableAccess).getLocation())
	and target_0.getCondition().(VariableAccess).getLocation().isBefore(target_4.getLeftOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vret_1687, IfStmt target_1) {
	exists(EqualityOperation obj_0 | obj_0=target_1.getCondition() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vret_1687
		and obj_0.getRightOperand().(UnaryMinusExpr).getValue()="-11"
	)
	and exists(BlockStmt obj_1 | obj_1=target_1.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLValue().(VariableAccess).getTarget()=vret_1687
				and obj_3.getRValue().(Literal).getValue()="4182"
			)
		)
		and obj_1.getStmt(1).(GotoStmt).getName() ="err_free_payload"
	)
}

predicate func_2(Parameter vscmnd_1685, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("scsi_dma_map")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vscmnd_1685
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_3(Variable vret_1687, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("storvsc_do_io")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("hv_device *")
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("storvsc_cmd_request *")
			and obj_1.getArgument(2).(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_1687
	)
}

predicate func_4(Variable vret_1687, EqualityOperation target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget()=vret_1687
	and target_4.getRightOperand().(UnaryMinusExpr).getValue()="-11"
}

from Function func, Parameter vscmnd_1685, Variable vret_1687, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, EqualityOperation target_4
where
not func_0(vscmnd_1685, vret_1687, target_1, target_2, target_3, target_4, func)
and func_1(vret_1687, target_1)
and func_2(vscmnd_1685, target_2)
and func_3(vret_1687, target_3)
and func_4(vret_1687, target_4)
and vscmnd_1685.getType().hasName("scsi_cmnd *")
and vret_1687.getType().hasName("int")
and vscmnd_1685.getFunction() = func
and vret_1687.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
