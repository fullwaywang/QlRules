/**
 * @name linux-60e2793d440a3ec95abb5d6d4fc034a4b480472d-pagefault_out_of_memory
 * @id cpp/linux/60e2793d440a3ec95abb5d6d4fc034a4b480472d/pagefault-out-of-memory
 * @description linux-60e2793d440a3ec95abb5d6d4fc034a4b480472d-mm/oom_kill.c-pagefault_out_of_memory CVE-2023-0047
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable voom_lock, FunctionCall target_1) {
	target_1.getTarget().hasName("mutex_trylock")
	and not target_1.getTarget().hasName("___ratelimit")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=voom_lock
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen() instanceof ReturnStmt
}

predicate func_4(Function func) {
exists(AddressOfExpr target_4 |
	target_4.getOperand().(VariableAccess).getType().hasName("ratelimit_state")
	and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
	and target_4.getEnclosingFunction() = func)
}

predicate func_6(Function func) {
exists(StmtExpr target_6 |
	target_6.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_6.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getValue()="1"
	and target_6.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_printk")
	and target_6.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="4Huh VM_FAULT_OOM leaked out to the #PF handler. Retrying PF\n"
	and target_6.getEnclosingFunction() = func)
}

/*predicate func_7(Function func) {
exists(FunctionCall target_7 |
	target_7.getTarget().hasName("_printk")
	and target_7.getArgument(0).(StringLiteral).getValue()="4Huh VM_FAULT_OOM leaked out to the #PF handler. Retrying PF\n"
	and target_7.getEnclosingFunction() = func)
}

*/
predicate func_13(NotExpr target_15, Function func, ReturnStmt target_13) {
	target_13.getParent().(IfStmt).getCondition()=target_15
	and target_13.getEnclosingFunction() = func
}

predicate func_15(Function func, NotExpr target_15) {
	target_15.getOperand() instanceof FunctionCall
	and target_15.getParent().(IfStmt).getThen() instanceof ReturnStmt
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Variable voom_lock, AddressOfExpr target_20, VariableAccess target_16) {
	target_16.getTarget()=voom_lock
	and target_16.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
	and target_16.getLocation().isBefore(target_20.getOperand().(VariableAccess).getLocation())
}

predicate func_17(Variable voc_1129, FunctionCall target_17) {
	target_17.getTarget().hasName("out_of_memory")
	and target_17.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=voc_1129
}

predicate func_18(Variable voom_lock, FunctionCall target_18) {
	target_18.getTarget().hasName("mutex_unlock")
	and target_18.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=voom_lock
}

predicate func_19(Function func, ReturnStmt target_19) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_19
}

predicate func_20(Variable voom_lock, AddressOfExpr target_20) {
	target_20.getOperand().(VariableAccess).getTarget()=voom_lock
	and target_20.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

from Function func, Variable voc_1129, Variable voom_lock, FunctionCall target_1, ReturnStmt target_13, NotExpr target_15, VariableAccess target_16, FunctionCall target_17, FunctionCall target_18, ReturnStmt target_19, AddressOfExpr target_20
where
func_1(voom_lock, target_1)
and not func_4(func)
and not func_6(func)
and func_13(target_15, func, target_13)
and func_15(func, target_15)
and func_16(voom_lock, target_20, target_16)
and func_17(voc_1129, target_17)
and func_18(voom_lock, target_18)
and func_19(func, target_19)
and func_20(voom_lock, target_20)
and voc_1129.getType().hasName("oom_control")
and voom_lock.getType().hasName("mutex")
and voc_1129.(LocalVariable).getFunction() = func
and not voom_lock.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
