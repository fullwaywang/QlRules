/**
 * @name linux-24d7275ce2791829953ed4e72f68277ceb2571c6-pte_to_pagemap_entry
 * @id cpp/linux/24d7275ce2791829953ed4e72f68277ceb2571c6/pte-to-pagemap-entry
 * @description linux-24d7275ce2791829953ed4e72f68277ceb2571c6-fs/proc/task_mmu.c-pte_to_pagemap_entry CVE-2023-1582
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable ventry_1392, FunctionCall target_3, ExprStmt target_4, FunctionCall target_5) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("is_migration_entry")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ventry_1392
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_4.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vpage_1380, ExprStmt target_6) {
exists(LogicalAndExpr target_1 |
	target_1.getLeftOperand().(VariableAccess).getTarget()=vpage_1380
	and target_1.getRightOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
	and target_1.getParent().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vpage_1380
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("page_mapcount")
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_1380
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_6)
}

predicate func_2(Variable vpage_1380, ExprStmt target_6, VariableAccess target_2) {
	target_2.getTarget()=vpage_1380
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("page_mapcount")
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_1380
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("is_swap_pte")
	and target_3.getArgument(0).(VariableAccess).getTarget().getType().hasName("pte_t")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable ventry_1392, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u64")
	and target_4.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("swp_type")
	and target_4.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ventry_1392
	and target_4.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(FunctionCall).getTarget().hasName("swp_offset")
	and target_4.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ventry_1392
	and target_4.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="5"
}

predicate func_5(Variable ventry_1392, FunctionCall target_5) {
	target_5.getTarget().hasName("is_pfn_swap_entry")
	and target_5.getArgument(0).(VariableAccess).getTarget()=ventry_1392
}

predicate func_6(Function func, ExprStmt target_6) {
	target_6.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u64")
	and target_6.getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="72057594037927936"
	and target_6.getEnclosingFunction() = func
}

from Function func, Variable vpage_1380, Variable ventry_1392, VariableAccess target_2, FunctionCall target_3, ExprStmt target_4, FunctionCall target_5, ExprStmt target_6
where
not func_0(ventry_1392, target_3, target_4, target_5)
and not func_1(vpage_1380, target_6)
and func_2(vpage_1380, target_6, target_2)
and func_3(func, target_3)
and func_4(ventry_1392, target_4)
and func_5(ventry_1392, target_5)
and func_6(func, target_6)
and vpage_1380.getType().hasName("page *")
and ventry_1392.getType().hasName("swp_entry_t")
and vpage_1380.(LocalVariable).getFunction() = func
and ventry_1392.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
