commit 152f1a2903a9e4120bdd2b483b5ca18fa2270c23	152f1a2903a9e4120bdd2b483b5ca18fa2270c23
Author: Alexander Cooper <alcooper@chromium.org>
Date:   Tue Jun 6 00:30:21 2023 +0000

    Add additional check to block race condition
    
    It is possible, though unlikely, for a second request to come through
    *after* a request has been served (e.g. the runtime is presenting and
    the request_session_callback_ has been nulled out). This request should
    be rejected as there is now an active immersive session; though the
    browser process may not know it yet. (e.g. the request got queued up
    while the previous request was processing and so the browser process
    was as yet unaware of the result).
    
    Fixed: 1450601
    Change-Id: Ifbad64e0f3221e3068690879d6c120347e8163a7
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4592111
    Auto-Submit: Alexander Cooper <alcooper@chromium.org>
    Commit-Queue: Alexander Cooper <alcooper@chromium.org>
    Reviewed-by: Brandon Jones <bajones@chromium.org>
    Commit-Queue: Brandon Jones <bajones@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1153592}

diff --git a/device/vr/openxr/openxr_device.cc b/device/vr/openxr/openxr_device.cc
index 82e27050eddfb..afa5a7939cb5f 100644
--- a/device/vr/openxr/openxr_device.cc
+++ b/device/vr/openxr/openxr_device.cc
@@ -139,7 +139,7 @@ void OpenXrDevice::RequestSession(
     mojom::XRRuntime::RequestSessionCallback callback) {
   // TODO(https://crbug.com/1450707): Strengthen the guarantees from the browser
   // process that we will not get a session request while one is pending.
-  if (request_session_callback_) {
+  if (request_session_callback_ || HasExclusiveSession()) {
     LOG(ERROR) << __func__
                << " New session request while processing previous request.";
     std::move(callback).Run(nullptr);
