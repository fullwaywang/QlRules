/**
 * @name linux-649c15c7691e9b13cbe9bf6c65c365350e056067-__sys_socket_file
 * @id cpp/linux/649c15c7691e9b13cbe9bf6c65c365350e056067/--sys-socket-file
 * @description linux-649c15c7691e9b13cbe9bf6c65c365350e056067-net/socket.c-__sys_socket_file CVE-2023-1032
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsock_1640, Variable vfile_1641, Variable vflags_1642, FunctionCall target_0) {
	target_0.getTarget().hasName("sock_alloc_file")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsock_1640
	and target_0.getArgument(1).(VariableAccess).getTarget()=vflags_1642
	and target_0.getArgument(2).(Literal).getValue()="0"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfile_1641
}

predicate func_1(Function func, DeclStmt target_1) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vfile_1641, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfile_1641
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vsock_1640, Variable vfile_1641, Function func, IfStmt target_3) {
	target_3.getCondition().(FunctionCall).getTarget().hasName("IS_ERR")
	and target_3.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_1641
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("sock_release")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsock_1640
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vfile_1641, FunctionCall target_5, VariableAccess target_4) {
	target_4.getTarget()=vfile_1641
	and target_5.getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getLocation())
}

predicate func_5(Variable vfile_1641, FunctionCall target_5) {
	target_5.getTarget().hasName("IS_ERR")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vfile_1641
}

from Function func, Variable vsock_1640, Variable vfile_1641, Variable vflags_1642, FunctionCall target_0, DeclStmt target_1, ExprStmt target_2, IfStmt target_3, VariableAccess target_4, FunctionCall target_5
where
func_0(vsock_1640, vfile_1641, vflags_1642, target_0)
and func_1(func, target_1)
and func_2(vfile_1641, func, target_2)
and func_3(vsock_1640, vfile_1641, func, target_3)
and func_4(vfile_1641, target_5, target_4)
and func_5(vfile_1641, target_5)
and vsock_1640.getType().hasName("socket *")
and vfile_1641.getType().hasName("file *")
and vflags_1642.getType().hasName("int")
and vsock_1640.(LocalVariable).getFunction() = func
and vfile_1641.(LocalVariable).getFunction() = func
and vflags_1642.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
