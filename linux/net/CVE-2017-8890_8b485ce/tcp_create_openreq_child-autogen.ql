/**
 * @name linux-8b485ce69876c65db12ed390e7f9c0d2a64eff2c-tcp_create_openreq_child
 * @id cpp/linux/8b485ce69876c65db12ed390e7f9c0d2a64eff2c/tcp-create-openreq-child
 * @description linux-8b485ce69876c65db12ed390e7f9c0d2a64eff2c-net/ipv4/tcp_minisocks.c-tcp_create_openreq_child CVE-2017-8890
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnewtp_429, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="fastopen_req"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewtp_429
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(52)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnewsk_423, BlockStmt target_4, VariableAccess target_1) {
		target_1.getTarget()=vnewsk_423
		and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vnewtp_429, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("tcp_ecn_openreq_child")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewtp_429
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("request_sock *")
}

predicate func_3(Variable vnewtp_429, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="fastopen_rsk"
		and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewtp_429
		and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_4(Variable vnewtp_429, BlockStmt target_4) {
		target_4.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="pred_flags"
		and target_4.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewtp_429
		and target_4.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="rcv_wup"
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewtp_429
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="copied_seq"
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewtp_429
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="rcv_nxt"
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewtp_429
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(AssignExpr).getRValue().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="rcv_isn"
		and target_4.getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(AssignExpr).getRValue().(AddExpr).getAnOperand().(Literal).getValue()="1"
}

from Function func, Variable vnewsk_423, Variable vnewtp_429, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vnewtp_429, target_1, target_2, target_3)
and func_1(vnewsk_423, target_4, target_1)
and func_2(vnewtp_429, target_2)
and func_3(vnewtp_429, target_3)
and func_4(vnewtp_429, target_4)
and vnewsk_423.getType().hasName("sock *")
and vnewtp_429.getType().hasName("tcp_sock *")
and vnewsk_423.(LocalVariable).getFunction() = func
and vnewtp_429.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
