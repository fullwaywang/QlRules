/**
 * @name linux-f15f29fd4779be8a418b66e9d52979bb6d6c2325-nf_tables_newrule
 * @id cpp/linux/f15f29fd4779be8a418b66e9d52979bb6d6c2325/nf-tables-newrule
 * @description linux-f15f29fd4779be8a418b66e9d52979bb6d6c2325-net/netfilter/nf_tables_api.c-nf_tables_newrule CVE-2023-5197
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchain_3814, Variable verr_3820, BitwiseAndExpr target_1, AddressOfExpr target_2, AddressOfExpr target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("nft_chain_binding")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchain_3814
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_3820
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-95"
	and target_0.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="err_destroy_flow_rule"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(BlockStmt target_5, Function func, BitwiseAndExpr target_1) {
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="nlmsg_flags"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="nlh"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const nfnl_info *")
	and target_1.getRightOperand().(Literal).getValue()="256"
	and target_1.getParent().(IfStmt).getThen()=target_5
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vchain_3814, AddressOfExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="use"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_3814
	and target_2.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("nft_use_inc")
}

predicate func_3(Variable vchain_3814, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="rules"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_3814
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_tail_rcu")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nft_rule *")
}

predicate func_4(Variable verr_3820, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_3820
	and target_4.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-24"
}

predicate func_5(Variable verr_3820, BlockStmt target_5) {
	target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_3820
	and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nft_delrule")
	and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("nft_ctx")
	and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("nft_rule *")
	and target_5.getStmt(1).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=verr_3820
	and target_5.getStmt(1).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_5.getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="err_destroy_flow_rule"
}

from Function func, Variable vchain_3814, Variable verr_3820, BitwiseAndExpr target_1, AddressOfExpr target_2, AddressOfExpr target_3, ExprStmt target_4, BlockStmt target_5
where
not func_0(vchain_3814, verr_3820, target_1, target_2, target_3, target_4)
and func_1(target_5, func, target_1)
and func_2(vchain_3814, target_2)
and func_3(vchain_3814, target_3)
and func_4(verr_3820, target_4)
and func_5(verr_3820, target_5)
and vchain_3814.getType().hasName("nft_chain *")
and verr_3820.getType().hasName("int")
and vchain_3814.(LocalVariable).getFunction() = func
and verr_3820.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
