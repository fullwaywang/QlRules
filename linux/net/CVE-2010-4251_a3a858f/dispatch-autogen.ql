/**
 * @name linux-a3a858ff18a72a8d388e31ab0d98f7e944841a62-dispatch
 * @id cpp/linux/a3a858ff18a72a8d388e31ab0d98f7e944841a62/dispatch
 * @description linux-a3a858ff18a72a8d388e31ab0d98f7e944841a62-net/tipc/socket.c-dispatch CVE-2010-4251
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_1309, Variable vsk_1311, ExprStmt target_1, FunctionCall target_0) {
		target_0.getTarget().hasName("sk_add_backlog_limited")
		and not target_0.getTarget().hasName("sk_add_backlog")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vsk_1311
		and target_0.getArgument(1).(VariableAccess).getTarget()=vbuf_1309
		and target_0.getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Function func, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u32")
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="4"
		and target_1.getEnclosingFunction() = func
}

from Function func, Parameter vbuf_1309, Variable vsk_1311, FunctionCall target_0, ExprStmt target_1
where
func_0(vbuf_1309, vsk_1311, target_1, target_0)
and func_1(func, target_1)
and vbuf_1309.getType().hasName("sk_buff *")
and vsk_1311.getType().hasName("sock *")
and vbuf_1309.getFunction() = func
and vsk_1311.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
