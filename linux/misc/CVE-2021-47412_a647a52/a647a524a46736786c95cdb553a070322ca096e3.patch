commit a647a524a46736786c95cdb553a070322ca096e3
Author: Ming Lei <ming.lei@redhat.com>
Date:   Fri Sep 24 19:07:04 2021 +0800

    block: don't call rq_qos_ops->done_bio if the bio isn't tracked
    
    rq_qos framework is only applied on request based driver, so:
    
    1) rq_qos_done_bio() needn't to be called for bio based driver
    
    2) rq_qos_done_bio() needn't to be called for bio which isn't tracked,
    such as bios ended from error handling code.
    
    Especially in bio_endio():
    
    1) request queue is referred via bio->bi_bdev->bd_disk->queue, which
    may be gone since request queue refcount may not be held in above two
    cases
    
    2) q->rq_qos may be freed in blk_cleanup_queue() when calling into
    __rq_qos_done_bio()
    
    Fix the potential kernel panic by not calling rq_qos_ops->done_bio if
    the bio isn't tracked. This way is safe because both ioc_rqos_done_bio()
    and blkcg_iolatency_done_bio() are nop if the bio isn't tracked.
    
    Reported-by: Yu Kuai <yukuai3@huawei.com>
    Cc: tj@kernel.org
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Tejun Heo <tj@kernel.org>
    Link: https://lore.kernel.org/r/20210924110704.1541818-1-ming.lei@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

diff --git a/block/bio.c b/block/bio.c
index 5df3dd282e40..a6fb6a0b4295 100644
--- a/block/bio.c
+++ b/block/bio.c
@@ -1466,7 +1466,7 @@ void bio_endio(struct bio *bio)
 	if (!bio_integrity_endio(bio))
 		return;
 
-	if (bio->bi_bdev)
+	if (bio->bi_bdev && bio_flagged(bio, BIO_TRACKED))
 		rq_qos_done_bio(bio->bi_bdev->bd_disk->queue, bio);
 
 	if (bio->bi_bdev && bio_flagged(bio, BIO_TRACE_COMPLETION)) {
