/**
 * @name linux-9c52057c698fb96f8f07e7a4bcf4801a092bda89-btrfs_add_link
 * @id cpp/linux/9c52057c698fb96f8f07e7a4bcf4801a092bda89/btrfs-add-link
 * @description linux-9c52057c698fb96f8f07e7a4bcf4801a092bda89-fs/btrfs/inode.c-btrfs_add_link CVE-2012-5375
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_4858, ExprStmt target_2, EqualityOperation target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof EqualityOperation
	and target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vret_4858
	and target_0.getRightOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-75"
	and target_0.getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vret_4858, EqualityOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vret_4858
	and target_1.getRightOperand().(UnaryMinusExpr).getValue()="-17"
	and target_1.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_2(Variable vret_4858, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_4858
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("btrfs_insert_dir_item")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("btrfs_trans_handle *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("btrfs_root *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("const char *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("btrfs_key")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(FunctionCall).getTarget().hasName("btrfs_inode_type")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(7).(VariableAccess).getTarget().getType().hasName("u64")
}

from Function func, Variable vret_4858, EqualityOperation target_1, ExprStmt target_2
where
not func_0(vret_4858, target_2, target_1)
and func_1(vret_4858, target_1)
and func_2(vret_4858, target_2)
and vret_4858.getType().hasName("int")
and vret_4858.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
