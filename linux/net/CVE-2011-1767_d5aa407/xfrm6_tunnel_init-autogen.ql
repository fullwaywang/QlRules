/**
 * @name linux-d5aa407f-xfrm6_tunnel_init
 * @id cpp/linux/d5aa407f/xfrm6-tunnel-init
 * @description linux-d5aa407f-net/ipv6/xfrm6_tunnel.c-xfrm6_tunnel_init CVE-2011-1768
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
		target_0.getTarget().hasName("xfrm6_tunnel_spi_fini")
		and not target_0.getTarget().hasName("unregister_pernet_subsys")
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="2"
		and not target_1.getValue()="0"
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func) {
	exists(AssignExpr target_2 |
		target_2.getLValue().(VariableAccess).getType().hasName("kmem_cache *")
		and target_2.getRValue().(FunctionCall).getTarget().hasName("kmem_cache_create")
		and target_2.getRValue().(FunctionCall).getArgument(0).(StringLiteral).getValue()="xfrm6_tunnel_spi"
		and target_2.getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getType() instanceof LongType
		and target_2.getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getValue()="72"
		and target_2.getRValue().(FunctionCall).getArgument(2) instanceof Literal
		and target_2.getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="8192"
		and target_2.getRValue().(FunctionCall).getArgument(4).(Literal).getValue()="0"
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Function func) {
	exists(NotExpr target_3 |
		target_3.getOperand().(VariableAccess).getType().hasName("kmem_cache *")
		and target_3.getParent().(IfStmt).getThen() instanceof GotoStmt
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(RelationalOperation target_13, Function func) {
	exists(ReturnStmt target_4 |
		target_4.getExpr().(UnaryMinusExpr).getValue()="-12"
		and target_4.getParent().(IfStmt).getCondition()=target_13
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vxfrm6_tunnel_net_ops, AddressOfExpr target_16) {
	exists(AddressOfExpr target_5 |
		target_5.getOperand().(VariableAccess).getTarget()=vxfrm6_tunnel_net_ops
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_16.getOperand().(VariableAccess).getLocation().isBefore(target_5.getOperand().(VariableAccess).getLocation()))
}

predicate func_6(Function func) {
	exists(FunctionCall target_6 |
		target_6.getTarget().hasName("kmem_cache_destroy")
		and target_6.getArgument(0).(VariableAccess).getType().hasName("kmem_cache *")
		and target_6.getEnclosingFunction() = func)
}

predicate func_7(Variable vrv_376, RelationalOperation target_7) {
		 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
		and target_7.getLesserOperand().(VariableAccess).getTarget()=vrv_376
		and target_7.getGreaterOperand().(Literal).getValue()="0"
		and target_7.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_8(Variable vrv_376, RelationalOperation target_8) {
		 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
		and target_8.getLesserOperand().(VariableAccess).getTarget()=vrv_376
		and target_8.getGreaterOperand().(Literal).getValue()="0"
		and target_8.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_9(Variable vrv_376, RelationalOperation target_9) {
		 (target_9 instanceof GTExpr or target_9 instanceof LTExpr)
		and target_9.getLesserOperand().(VariableAccess).getTarget()=vrv_376
		and target_9.getGreaterOperand().(Literal).getValue()="0"
		and target_9.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_10(Variable vrv_376, RelationalOperation target_10) {
		 (target_10 instanceof GTExpr or target_10 instanceof LTExpr)
		and target_10.getLesserOperand().(VariableAccess).getTarget()=vrv_376
		and target_10.getGreaterOperand().(Literal).getValue()="0"
		and target_10.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_12(Variable vrv_376, AssignExpr target_12) {
		target_12.getLValue().(VariableAccess).getTarget()=vrv_376
		and target_12.getRValue().(FunctionCall).getTarget().hasName("xfrm6_tunnel_spi_init")
}

predicate func_13(Variable vrv_376, ExprStmt target_17, ReturnStmt target_18, RelationalOperation target_13) {
		 (target_13 instanceof GTExpr or target_13 instanceof LTExpr)
		and target_13.getLesserOperand().(VariableAccess).getTarget()=vrv_376
		and target_13.getGreaterOperand() instanceof Literal
		and target_13.getParent().(IfStmt).getThen() instanceof GotoStmt
		and target_17.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_13.getLesserOperand().(VariableAccess).getLocation())
		and target_13.getLesserOperand().(VariableAccess).getLocation().isBefore(target_18.getExpr().(VariableAccess).getLocation())
}

predicate func_14(RelationalOperation target_13, Function func, GotoStmt target_14) {
		target_14.getParent().(IfStmt).getCondition()=target_13
		and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vxfrm46_tunnel_handler, FunctionCall target_15) {
		target_15.getTarget().hasName("xfrm6_tunnel_deregister")
		and target_15.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vxfrm46_tunnel_handler
		and target_15.getArgument(1) instanceof Literal
}

predicate func_16(Variable vxfrm6_tunnel_net_ops, AddressOfExpr target_16) {
		target_16.getOperand().(VariableAccess).getTarget()=vxfrm6_tunnel_net_ops
}

predicate func_17(Variable vxfrm6_tunnel_net_ops, Variable vrv_376, ExprStmt target_17) {
		target_17.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrv_376
		and target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("register_pernet_subsys")
		and target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vxfrm6_tunnel_net_ops
}

predicate func_18(Variable vrv_376, ReturnStmt target_18) {
		target_18.getExpr().(VariableAccess).getTarget()=vrv_376
}

from Function func, Variable vxfrm46_tunnel_handler, Variable vxfrm6_tunnel_net_ops, Variable vrv_376, FunctionCall target_0, Literal target_1, RelationalOperation target_7, RelationalOperation target_8, RelationalOperation target_9, RelationalOperation target_10, AssignExpr target_12, RelationalOperation target_13, GotoStmt target_14, FunctionCall target_15, AddressOfExpr target_16, ExprStmt target_17, ReturnStmt target_18
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(func)
and not func_3(func)
and not func_4(target_13, func)
and not func_5(vxfrm6_tunnel_net_ops, target_16)
and not func_6(func)
and func_7(vrv_376, target_7)
and func_8(vrv_376, target_8)
and func_9(vrv_376, target_9)
and func_10(vrv_376, target_10)
and func_12(vrv_376, target_12)
and func_13(vrv_376, target_17, target_18, target_13)
and func_14(target_13, func, target_14)
and func_15(vxfrm46_tunnel_handler, target_15)
and func_16(vxfrm6_tunnel_net_ops, target_16)
and func_17(vxfrm6_tunnel_net_ops, vrv_376, target_17)
and func_18(vrv_376, target_18)
and vxfrm46_tunnel_handler.getType().hasName("xfrm6_tunnel")
and vxfrm6_tunnel_net_ops.getType().hasName("pernet_operations")
and vrv_376.getType().hasName("int")
and not vxfrm46_tunnel_handler.getParentScope+() = func
and not vxfrm6_tunnel_net_ops.getParentScope+() = func
and vrv_376.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
