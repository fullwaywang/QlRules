/**
 * @name linux-87563a043cef044fed5db7967a75741cc16ad2b1-ax25_dev_device_up
 * @id cpp/linux/87563a043cef044fed5db7967a75741cc16ad2b1/ax25-dev-device-up
 * @description linux-87563a043cef044fed5db7967a75741cc16ad2b1-ax25_dev_device_up CVE-2022-1204
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vax25_dev_53, FunctionCall target_0) {
		target_0.getTarget().hasName("refcount_inc")
		and not target_0.getTarget().hasName("ax25_dev_hold")
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="refcount"
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_53
}

predicate func_1(Variable vax25_dev_53, VariableAccess target_1) {
		target_1.getTarget()=vax25_dev_53
		and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vax25_dev_53, ExprStmt target_3, ExprStmt target_4, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="refcount"
		and target_2.getQualifier().(VariableAccess).getTarget()=vax25_dev_53
		and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(VariableAccess).getLocation())
		and target_2.getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_3(Variable vax25_dev_53, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
		and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vax25_dev_53
}

predicate func_4(Variable vax25_dev_53, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("ax25_register_dev_sysctl")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vax25_dev_53
}

from Function func, Variable vax25_dev_53, FunctionCall target_0, VariableAccess target_1, PointerFieldAccess target_2, ExprStmt target_3, ExprStmt target_4
where
func_0(vax25_dev_53, target_0)
and func_1(vax25_dev_53, target_1)
and func_2(vax25_dev_53, target_3, target_4, target_2)
and func_3(vax25_dev_53, target_3)
and func_4(vax25_dev_53, target_4)
and vax25_dev_53.getType().hasName("ax25_dev *")
and vax25_dev_53.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
