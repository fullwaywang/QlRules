/**
 * @name linux-b399a68054dfb36eed121846ef5fcddba40b7740-i40e_xdp_setup
 * @id cpp/linux/b399a68054dfb36eed121846ef5fcddba40b7740/i40e-xdp-setup
 * @description linux-b399a68054dfb36eed121846ef5fcddba40b7740-drivers/net/ethernet/intel/i40e/i40e_main.c-i40e_xdp_setup CVE-2024-41047
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_3, Function func, IfStmt target_0) {
	target_0.getCondition() instanceof FunctionCall
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_3.getLocation().isBefore(target_0.getLocation())
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vprog_13298, ReturnStmt target_4, ExprStmt target_5) {
exists(LogicalAndExpr target_1 |
	target_1.getLeftOperand().(VariableAccess).getTarget()=vprog_13298
	and target_1.getRightOperand() instanceof FunctionCall
	and target_1.getParent().(IfStmt).getThen()=target_4
	and target_5.getExpr().(AssignExpr).getRValue().(EqualityOperation).getRightOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vpf_13302, ReturnStmt target_4, FunctionCall target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getArgument(1) |
		obj_0.getTarget().getName()="state"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpf_13302
	)
	and target_2.getTarget().hasName("test_bit")
	and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable vpf_13302, IfStmt target_3) {
	exists(ExprStmt obj_0 | obj_0=target_3.getThen() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("i40e_prep_for_reset")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vpf_13302
		)
	)
	and target_3.getCondition().(VariableAccess).getTarget().getType().hasName("bool")
}

predicate func_4(FunctionCall target_2, Function func, ReturnStmt target_4) {
	target_4.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_4.getParent().(IfStmt).getCondition()=target_2
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vprog_13298, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("i40e_enabled_xdp_vsi")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("i40e_vsi *")
			)
			and obj_1.getRightOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vprog_13298
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("bool")
	)
}

from Function func, Parameter vprog_13298, Variable vpf_13302, IfStmt target_0, FunctionCall target_2, IfStmt target_3, ReturnStmt target_4, ExprStmt target_5
where
func_0(target_3, func, target_0)
and not func_1(vprog_13298, target_4, target_5)
and func_2(vpf_13302, target_4, target_2)
and func_3(vpf_13302, target_3)
and func_4(target_2, func, target_4)
and func_5(vprog_13298, target_5)
and vprog_13298.getType().hasName("bpf_prog *")
and vpf_13302.getType().hasName("i40e_pf *")
and vprog_13298.getFunction() = func
and vpf_13302.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
