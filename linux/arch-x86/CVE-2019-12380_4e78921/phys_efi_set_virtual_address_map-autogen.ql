/**
 * @name linux-4e78921ba4dd0aca1cc89168f45039add4183f8e-phys_efi_set_virtual_address_map
 * @id cpp/linux/4e78921ba4dd0aca1cc89168f45039add4183f8e/phys-efi-set-virtual-address-map
 * @description linux-4e78921ba4dd0aca1cc89168f45039add4183f8e-arch/x86/platform/efi/efi.c-phys_efi_set_virtual_address_map CVE-2019-12380
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsave_pgd_85, DoStmt target_1, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vsave_pgd_85
	and target_0.getThen().(ReturnStmt).getExpr().(BitwiseOrExpr).getValue()="9223372036854775829"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, DoStmt target_1) {
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_1.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("arch_local_irq_save")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("trace_hardirqs_off")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vsave_pgd_85, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsave_pgd_85
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("efi_call_phys_prolog")
}

predicate func_3(Variable vsave_pgd_85, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("efi_call_phys_epilog")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsave_pgd_85
}

from Function func, Variable vsave_pgd_85, DoStmt target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vsave_pgd_85, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vsave_pgd_85, target_2)
and func_3(vsave_pgd_85, target_3)
and vsave_pgd_85.getType().hasName("pgd_t *")
and vsave_pgd_85.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
