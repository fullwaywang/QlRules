/**
 * @name linux-d7824370e26325c881b665350ce64fb0a4fde24a-__mlock_vma_pages_range
 * @id cpp/linux/d7824370e26325c881b665350ce64fb0a4fde24a/--mlock-vma-pages-range
 * @description linux-d7824370e26325c881b665350ce64fb0a4fde24a-mm/mlock.c-__mlock_vma_pages_range CVE-2010-2240
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vstart_151, Variable vnr_pages_156, Parameter vvma_150, NotExpr target_1, RelationalOperation target_3, BitwiseAndExpr target_4, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="vm_flags"
		and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_150
		and target_0.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="256"
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vstart_151
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="vm_start"
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_150
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vstart_151
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vnr_pages_156
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getGreaterOperand().(VariableAccess).getLocation())
		and target_4.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vstart_151, Parameter vvma_150, NotExpr target_1) {
		target_1.getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vstart_151
		and target_1.getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="vm_start"
		and target_1.getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_150
}

predicate func_3(Variable vnr_pages_156, RelationalOperation target_3) {
		 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
		and target_3.getGreaterOperand().(VariableAccess).getTarget()=vnr_pages_156
		and target_3.getLesserOperand().(Literal).getValue()="0"
}

predicate func_4(Parameter vvma_150, BitwiseAndExpr target_4) {
		target_4.getLeftOperand().(PointerFieldAccess).getTarget().getName()="vm_flags"
		and target_4.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_150
		and target_4.getRightOperand().(Literal).getValue()="2"
}

from Function func, Parameter vstart_151, Variable vnr_pages_156, Parameter vvma_150, NotExpr target_1, RelationalOperation target_3, BitwiseAndExpr target_4
where
not func_0(vstart_151, vnr_pages_156, vvma_150, target_1, target_3, target_4, func)
and func_1(vstart_151, vvma_150, target_1)
and func_3(vnr_pages_156, target_3)
and func_4(vvma_150, target_4)
and vstart_151.getType().hasName("unsigned long")
and vnr_pages_156.getType().hasName("int")
and vvma_150.getType().hasName("vm_area_struct *")
and vstart_151.getFunction() = func
and vnr_pages_156.(LocalVariable).getFunction() = func
and vvma_150.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
