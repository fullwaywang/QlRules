/**
 * @name linux-242006996d15f5ca62e22f8c7de077d9c4a8f367-__bio_release_pages
 * @id cpp/linux/242006996d15f5ca62e22f8c7de077d9c4a8f367/--bio-release-pages
 * @description linux-242006996d15f5ca62e22f8c7de077d9c4a8f367-block/bio.c-__bio_release_pages CVE-2024-35826
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="0"
	and not target_0.getValue()="1"
	and target_0.getParent() instanceof Initializer
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vdone_1116, VariableAccess target_1) {
	target_1.getTarget()=vdone_1116
	and target_1.getParent().(LTExpr).getGreaterOperand() instanceof ValueFieldAccess
}

predicate func_2(Variable vfi_1112, FunctionCall target_2) {
	target_2.getTarget().hasName("folio_put")
	and not target_2.getTarget().hasName("folio_put_refs")
	and target_2.getArgument(0).(ValueFieldAccess).getTarget().getName()="folio"
	and target_2.getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfi_1112
}

predicate func_3(Variable vdone_1116, VariableAccess target_3) {
	target_3.getTarget()=vdone_1116
	and target_3.getParent().(AssignAddExpr).getLValue() = target_3
	and target_3.getParent().(AssignAddExpr).getRValue() instanceof BinaryBitwiseOperation
}

predicate func_4(Function func) {
exists(AssignExpr target_4 |
	target_4.getLValue().(VariableAccess).getType().hasName("size_t")
	and target_4.getRValue().(AddExpr).getLeftOperand().(SubExpr).getLeftOperand().(DivExpr).getLeftOperand().(SubExpr).getLeftOperand().(AddExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="offset"
	and target_4.getRValue().(AddExpr).getLeftOperand().(SubExpr).getLeftOperand().(DivExpr).getLeftOperand().(SubExpr).getLeftOperand().(AddExpr).getRightOperand() instanceof ValueFieldAccess
	and target_4.getRValue().(AddExpr).getLeftOperand().(SubExpr).getLeftOperand().(DivExpr).getLeftOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
	and target_4.getRValue().(AddExpr).getLeftOperand().(SubExpr).getLeftOperand().(DivExpr).getRightOperand() instanceof BinaryBitwiseOperation
	and target_4.getRValue().(AddExpr).getLeftOperand().(SubExpr).getRightOperand() instanceof DivExpr
	and target_4.getRValue().(AddExpr).getRightOperand().(Literal).getValue()="1"
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vfi_1112, ValueFieldAccess target_5) {
	target_5.getTarget().getName()="folio"
	and target_5.getQualifier().(VariableAccess).getTarget()=vfi_1112
}

predicate func_6(Variable vfi_1112, DivExpr target_6) {
	target_6.getLeftOperand().(ValueFieldAccess).getTarget().getName()="offset"
	and target_6.getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfi_1112
	and target_6.getRightOperand().(BinaryBitwiseOperation).getValue()="4096"
}

predicate func_7(Variable vfi_1112, ValueFieldAccess target_7) {
	target_7.getTarget().getName()="length"
	and target_7.getQualifier().(VariableAccess).getTarget()=vfi_1112
}

predicate func_8(Variable vdone_1116, BinaryBitwiseOperation target_8) {
	target_8.getValue()="4096"
	and target_8.getParent().(AssignAddExpr).getRValue() = target_8
	and target_8.getParent().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vdone_1116
}

predicate func_9(Variable vfi_1112, VariableAccess target_9) {
	target_9.getTarget()=vfi_1112
	and target_9.getParent().(ValueFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_12(Function func, Initializer target_12) {
	target_12.getExpr() instanceof Literal
	and target_12.getExpr().getEnclosingFunction() = func
}

predicate func_13(Variable vpage_1115, AssignExpr target_13) {
	target_13.getLValue().(VariableAccess).getTarget()=vpage_1115
	and target_13.getRValue().(PointerArithmeticOperation).getLeftOperand().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="page"
	and target_13.getRValue().(PointerArithmeticOperation).getLeftOperand().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_13.getRValue().(PointerArithmeticOperation).getLeftOperand().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier() instanceof ValueFieldAccess
	and target_13.getRValue().(PointerArithmeticOperation).getRightOperand() instanceof DivExpr
}

predicate func_14(Variable vdone_1116, DoStmt target_14) {
	target_14.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vdone_1116
	and target_14.getCondition().(RelationalOperation).getGreaterOperand() instanceof ValueFieldAccess
	and target_14.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_14.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vdone_1116
	and target_14.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignAddExpr).getRValue() instanceof BinaryBitwiseOperation
}

/*predicate func_15(Variable vdone_1116, ExprStmt target_15) {
	target_15.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vdone_1116
	and target_15.getExpr().(AssignAddExpr).getRValue() instanceof BinaryBitwiseOperation
}

*/
from Function func, Variable vfi_1112, Variable vpage_1115, Variable vdone_1116, Literal target_0, VariableAccess target_1, FunctionCall target_2, VariableAccess target_3, ValueFieldAccess target_5, DivExpr target_6, ValueFieldAccess target_7, BinaryBitwiseOperation target_8, VariableAccess target_9, Initializer target_12, AssignExpr target_13, DoStmt target_14
where
func_0(func, target_0)
and func_1(vdone_1116, target_1)
and func_2(vfi_1112, target_2)
and func_3(vdone_1116, target_3)
and not func_4(func)
and func_5(vfi_1112, target_5)
and func_6(vfi_1112, target_6)
and func_7(vfi_1112, target_7)
and func_8(vdone_1116, target_8)
and func_9(vfi_1112, target_9)
and func_12(func, target_12)
and func_13(vpage_1115, target_13)
and func_14(vdone_1116, target_14)
and vfi_1112.getType().hasName("folio_iter")
and vpage_1115.getType().hasName("page *")
and vdone_1116.getType().hasName("size_t")
and vfi_1112.(LocalVariable).getFunction() = func
and vpage_1115.(LocalVariable).getFunction() = func
and vdone_1116.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
