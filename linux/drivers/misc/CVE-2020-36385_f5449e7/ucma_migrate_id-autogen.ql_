/**
 * @name linux-f5449e74802c1112dea984aec8af7a33c4516af1-ucma_migrate_id
 * @id cpp/linux/f5449e74802c1112dea984aec8af7a33c4516af1/ucma-migrate-id
 * @description linux-f5449e74802c1112dea984aec8af7a33c4516af1-drivers/infiniband/core/ucma.c-ucma_migrate_id CVE-2020-36385
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnew_file_1622, Variable vctx_1628, FunctionCall target_0) {
	target_0.getTarget().hasName("list_move_tail")
	and not target_0.getTarget().hasName("list_add_tail")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1628
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ctx_list"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_file_1622
}

predicate func_1(Parameter vnew_file_1622, Variable vcur_file_1630, FunctionCall target_1) {
	target_1.getTarget().hasName("ucma_lock_files")
	and not target_1.getTarget().hasName("spin_unlock")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vcur_file_1630
	and target_1.getArgument(1).(VariableAccess).getTarget()=vnew_file_1622
}

predicate func_2(Parameter vnew_file_1622, Variable vctx_1628, FunctionCall target_2) {
	target_2.getTarget().hasName("ucma_move_events")
	and not target_2.getTarget().hasName("list_del")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vctx_1628
	and target_2.getArgument(1).(VariableAccess).getTarget()=vnew_file_1622
}

predicate func_3(Parameter vnew_file_1622, Variable vcur_file_1630, FunctionCall target_3) {
	target_3.getTarget().hasName("ucma_unlock_files")
	and not target_3.getTarget().hasName("__compiletime_assert")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vcur_file_1630
	and target_3.getArgument(1).(VariableAccess).getTarget()=vnew_file_1622
}

predicate func_4(Variable vctx_1628, Variable vcur_file_1630, IfStmt target_35, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcur_file_1630
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="file"
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1628
	and target_4.getLocation().isBefore(target_35.getLocation())
}

predicate func_5(Variable vctx_table, ExprStmt target_36, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="xa_lock"
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vctx_table
	and target_5.getLocation().isBefore(target_36.getLocation())
}

predicate func_6(Parameter vnew_file_1622, Variable vctx_1628, ExprStmt target_37, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="file"
	and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1628
	and target_6.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vnew_file_1622
	and target_37.getLocation().isBefore(target_6.getLocation())
}

predicate func_7(ExprStmt target_37, Function func, ExprStmt target_7) {
	target_7.getExpr() instanceof AssignExpr
	and target_37.getLocation().isBefore(target_7.getLocation())
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vcmd_1626, Variable vresp_1627, Variable vret_1631, ExprStmt target_38, IfStmt target_8) {
	target_8.getCondition().(FunctionCall).getTarget().hasName("copy_to_user")
	and target_8.getCondition().(FunctionCall).getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(ValueFieldAccess).getTarget().getName()="response"
	and target_8.getCondition().(FunctionCall).getArgument(0).(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vcmd_1626
	and target_8.getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vresp_1627
	and target_8.getCondition().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="4"
	and target_8.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1631
	and target_8.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_8.getLocation().isBefore(target_38.getLocation())
}

predicate func_9(Variable vcmd_1626, Variable vctx_1628, Variable vcur_file_1630, BlockStmt target_39, ValueFieldAccess target_40, ExprStmt target_41, ExprStmt target_6, AddressOfExpr target_42) {
exists(EqualityOperation target_9 |
	target_9.getLeftOperand().(FunctionCall).getTarget().hasName("_ucma_find_context")
	and target_9.getLeftOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="id"
	and target_9.getLeftOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vcmd_1626
	and target_9.getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcur_file_1630
	and target_9.getRightOperand().(VariableAccess).getTarget()=vctx_1628
	and target_9.getParent().(IfStmt).getThen()=target_39
	and target_40.getQualifier().(VariableAccess).getLocation().isBefore(target_9.getLeftOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_9.getLeftOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_41.getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_9.getRightOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_9.getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_42.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_10(Variable vret_1631, ExprStmt target_43) {
exists(AssignExpr target_10 |
	target_10.getLValue().(VariableAccess).getTarget()=vret_1631
	and target_10.getRValue().(UnaryMinusExpr).getValue()="-2"
	and target_43.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_10.getLValue().(VariableAccess).getLocation()))
}

predicate func_12(Variable vctx_1628, ExprStmt target_19) {
exists(AddressOfExpr target_12 |
	target_12.getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1628
	and target_12.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_19.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_13(Variable vctx_1628, ExprStmt target_23, ExprStmt target_38, Function func) {
exists(ForStmt target_13 |
	target_13.getInitialization().(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getInitialization().(ExprStmt).getExpr().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getCondition().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_13.getCondition().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getCondition().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="event_list"
	and target_13.getCondition().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ucma_file *")
	and target_13.getUpdate().(CommaExpr).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getUpdate().(CommaExpr).getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getUpdate().(CommaExpr).getRightOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getUpdate().(CommaExpr).getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_13.getStmt().(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ctx"
	and target_13.getStmt().(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getStmt().(IfStmt).getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vctx_1628
	and target_13.getStmt().(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_move_tail")
	and target_13.getStmt().(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_13.getStmt().(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ucma_event *")
	and target_13.getStmt().(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("list_head")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
	and target_13.getLocation().isBefore(target_23.getLocation())
	and target_13.getStmt().(IfStmt).getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getLocation().isBefore(target_38.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_14(Function func) {
exists(CommaExpr target_14 |
	target_14.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ucma_event *")
	and target_14.getLeftOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_14.getLeftOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getType().hasName("void *")
	and target_14.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ucma_event *")
	and target_14.getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_14.getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getType().hasName("void *")
	and target_14.getEnclosingFunction() = func)
}

*/
/*predicate func_15(Function func) {
exists(PointerFieldAccess target_15 |
	target_15.getTarget().getName()="ctx"
	and target_15.getQualifier().(VariableAccess).getType().hasName("ucma_event *")
	and target_15.getEnclosingFunction() = func)
}

*/
predicate func_16(Parameter vnew_file_1622, ExprStmt target_44, Function func) {
exists(ExprStmt target_16 |
	target_16.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_16.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mut"
	and target_16.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_file_1622
	and target_16.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_16
	and target_16.getLocation().isBefore(target_44.getLocation()))
}

predicate func_17(Parameter vnew_file_1622, ExprStmt target_38, AddressOfExpr target_46, Function func) {
exists(ExprStmt target_17 |
	target_17.getExpr().(FunctionCall).getTarget().hasName("list_splice_tail")
	and target_17.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("list_head")
	and target_17.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="event_list"
	and target_17.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_file_1622
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
	and target_17.getLocation().isBefore(target_38.getLocation())
	and target_17.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_46.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_18(Parameter vnew_file_1622, ExprStmt target_38, ExprStmt target_6, Function func) {
exists(ExprStmt target_18 |
	target_18.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_18.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mut"
	and target_18.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_file_1622
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_18
	and target_18.getLocation().isBefore(target_38.getLocation())
	and target_18.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_19(Variable vresp_1627, Variable vctx_1628, EqualityOperation target_47, ExprStmt target_19) {
	target_19.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="events_reported"
	and target_19.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vresp_1627
	and target_19.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="events_reported"
	and target_19.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1628
	and target_19.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_47
}

predicate func_20(Variable vcur_file_1630, EqualityOperation target_47, ExprStmt target_20) {
	target_20.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_20.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mut"
	and target_20.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcur_file_1630
	and target_20.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_47
}

predicate func_21(Variable vcmd_1626, Variable vf_1629, PointerFieldAccess target_21) {
	target_21.getTarget().getName()="private_data"
	and target_21.getQualifier().(ValueFieldAccess).getTarget().getName()="file"
	and target_21.getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vf_1629
	and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ucma_get_ctx")
	and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="id"
	and target_21.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vcmd_1626
}

predicate func_22(Variable vcur_file_1630, EqualityOperation target_47, ExprStmt target_22) {
	target_22.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_22.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mut"
	and target_22.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcur_file_1630
	and target_22.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_22.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_47
}

predicate func_23(Variable vctx_table, Function func, ExprStmt target_23) {
	target_23.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_23.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="xa_lock"
	and target_23.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vctx_table
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_23
}

predicate func_24(Variable vctx_1628, VariableAccess target_24) {
	target_24.getTarget()=vctx_1628
}

predicate func_25(Variable vcur_file_1630, VariableAccess target_25) {
	target_25.getTarget()=vcur_file_1630
	and target_25.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_26(Parameter vnew_file_1622, Variable vcur_file_1630, BlockStmt target_39, VariableAccess target_26) {
	target_26.getTarget()=vcur_file_1630
	and target_26.getParent().(EQExpr).getRightOperand().(VariableAccess).getTarget()=vnew_file_1622
	and target_26.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_39
}

/*predicate func_27(Parameter vnew_file_1622, BlockStmt target_39, VariableAccess target_27) {
	target_27.getTarget()=vnew_file_1622
	and target_27.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_39
}

*/
predicate func_28(Parameter vnew_file_1622, VariableAccess target_28) {
	target_28.getTarget()=vnew_file_1622
	and target_28.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_29(Variable vctx_1628, VariableAccess target_29) {
	target_29.getTarget()=vctx_1628
	and target_29.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_30(Parameter vnew_file_1622, VariableAccess target_30) {
	target_30.getTarget()=vnew_file_1622
	and target_30.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_31(Variable vctx_1628, VariableAccess target_31) {
	target_31.getTarget()=vctx_1628
}

predicate func_32(Variable vcur_file_1630, VariableAccess target_32) {
	target_32.getTarget()=vcur_file_1630
	and target_32.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_33(Variable vctx_1628, PointerFieldAccess target_33) {
	target_33.getTarget().getName()="file"
	and target_33.getQualifier().(VariableAccess).getTarget()=vctx_1628
}

predicate func_34(Variable vresp_1627, Variable vctx_1628, AssignExpr target_34) {
	target_34.getLValue().(ValueFieldAccess).getTarget().getName()="events_reported"
	and target_34.getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vresp_1627
	and target_34.getRValue().(PointerFieldAccess).getTarget().getName()="events_reported"
	and target_34.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1628
}

predicate func_35(Parameter vnew_file_1622, Variable vcur_file_1630, IfStmt target_35) {
	target_35.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vcur_file_1630
	and target_35.getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vnew_file_1622
	and target_35.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_35.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
	and target_35.getThen().(BlockStmt).getStmt(2) instanceof ExprStmt
	and target_35.getThen().(BlockStmt).getStmt(3).(GotoStmt).getName() ="response"
}

predicate func_36(Function func, ExprStmt target_36) {
	target_36.getExpr() instanceof FunctionCall
	and target_36.getEnclosingFunction() = func
}

predicate func_37(Function func, ExprStmt target_37) {
	target_37.getExpr() instanceof FunctionCall
	and target_37.getEnclosingFunction() = func
}

predicate func_38(Variable vctx_1628, ExprStmt target_38) {
	target_38.getExpr().(FunctionCall).getTarget().hasName("rdma_unlock_handler")
	and target_38.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="cm_id"
	and target_38.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_1628
}

predicate func_39(Function func, BlockStmt target_39) {
	target_39.getStmt(0) instanceof ExprStmt
	and target_39.getStmt(1) instanceof ExprStmt
	and target_39.getStmt(2) instanceof ExprStmt
	and target_39.getStmt(3).(GotoStmt).getName() ="response"
	and target_39.getEnclosingFunction() = func
}

predicate func_40(Variable vcmd_1626, ValueFieldAccess target_40) {
	target_40.getTarget().getName()="id"
	and target_40.getQualifier().(VariableAccess).getTarget()=vcmd_1626
}

predicate func_41(Variable vcmd_1626, ExprStmt target_41) {
	target_41.getExpr().(ValueFieldAccess).getTarget().getName()="response"
	and target_41.getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vcmd_1626
}

predicate func_42(Variable vcur_file_1630, AddressOfExpr target_42) {
	target_42.getOperand().(PointerFieldAccess).getTarget().getName()="mut"
	and target_42.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcur_file_1630
}

predicate func_43(Variable vctx_1628, Variable vret_1631, ExprStmt target_43) {
	target_43.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1631
	and target_43.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_43.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctx_1628
}

predicate func_44(Function func, ExprStmt target_44) {
	target_44.getExpr() instanceof FunctionCall
	and target_44.getEnclosingFunction() = func
}

predicate func_46(Parameter vnew_file_1622, AddressOfExpr target_46) {
	target_46.getOperand().(PointerFieldAccess).getTarget().getName()="ctx_list"
	and target_46.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_file_1622
}

predicate func_47(Parameter vnew_file_1622, Variable vcur_file_1630, EqualityOperation target_47) {
	target_47.getLeftOperand().(VariableAccess).getTarget()=vcur_file_1630
	and target_47.getRightOperand().(VariableAccess).getTarget()=vnew_file_1622
}

from Function func, Parameter vnew_file_1622, Variable vcmd_1626, Variable vresp_1627, Variable vctx_1628, Variable vf_1629, Variable vcur_file_1630, Variable vret_1631, Variable vctx_table, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, FunctionCall target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7, IfStmt target_8, ExprStmt target_19, ExprStmt target_20, PointerFieldAccess target_21, ExprStmt target_22, ExprStmt target_23, VariableAccess target_24, VariableAccess target_25, VariableAccess target_26, VariableAccess target_28, VariableAccess target_29, VariableAccess target_30, VariableAccess target_31, VariableAccess target_32, PointerFieldAccess target_33, AssignExpr target_34, IfStmt target_35, ExprStmt target_36, ExprStmt target_37, ExprStmt target_38, BlockStmt target_39, ValueFieldAccess target_40, ExprStmt target_41, AddressOfExpr target_42, ExprStmt target_43, ExprStmt target_44, AddressOfExpr target_46, EqualityOperation target_47
where
func_0(vnew_file_1622, vctx_1628, target_0)
and func_1(vnew_file_1622, vcur_file_1630, target_1)
and func_2(vnew_file_1622, vctx_1628, target_2)
and func_3(vnew_file_1622, vcur_file_1630, target_3)
and func_4(vctx_1628, vcur_file_1630, target_35, target_4)
and func_5(vctx_table, target_36, target_5)
and func_6(vnew_file_1622, vctx_1628, target_37, target_6)
and func_7(target_37, func, target_7)
and func_8(vcmd_1626, vresp_1627, vret_1631, target_38, target_8)
and not func_9(vcmd_1626, vctx_1628, vcur_file_1630, target_39, target_40, target_41, target_6, target_42)
and not func_10(vret_1631, target_43)
and not func_12(vctx_1628, target_19)
and not func_13(vctx_1628, target_23, target_38, func)
and not func_16(vnew_file_1622, target_44, func)
and not func_17(vnew_file_1622, target_38, target_46, func)
and not func_18(vnew_file_1622, target_38, target_6, func)
and func_19(vresp_1627, vctx_1628, target_47, target_19)
and func_20(vcur_file_1630, target_47, target_20)
and func_21(vcmd_1626, vf_1629, target_21)
and func_22(vcur_file_1630, target_47, target_22)
and func_23(vctx_table, func, target_23)
and func_24(vctx_1628, target_24)
and func_25(vcur_file_1630, target_25)
and func_26(vnew_file_1622, vcur_file_1630, target_39, target_26)
and func_28(vnew_file_1622, target_28)
and func_29(vctx_1628, target_29)
and func_30(vnew_file_1622, target_30)
and func_31(vctx_1628, target_31)
and func_32(vcur_file_1630, target_32)
and func_33(vctx_1628, target_33)
and func_34(vresp_1627, vctx_1628, target_34)
and func_35(vnew_file_1622, vcur_file_1630, target_35)
and func_36(func, target_36)
and func_37(func, target_37)
and func_38(vctx_1628, target_38)
and func_39(func, target_39)
and func_40(vcmd_1626, target_40)
and func_41(vcmd_1626, target_41)
and func_42(vcur_file_1630, target_42)
and func_43(vctx_1628, vret_1631, target_43)
and func_44(func, target_44)
and func_46(vnew_file_1622, target_46)
and func_47(vnew_file_1622, vcur_file_1630, target_47)
and vnew_file_1622.getType().hasName("ucma_file *")
and vcmd_1626.getType().hasName("rdma_ucm_migrate_id")
and vresp_1627.getType().hasName("rdma_ucm_migrate_resp")
and vctx_1628.getType().hasName("ucma_context *")
and vf_1629.getType().hasName("fd")
and vcur_file_1630.getType().hasName("ucma_file *")
and vret_1631.getType().hasName("int")
and vctx_table.getType().hasName("xarray")
and vnew_file_1622.getFunction() = func
and vcmd_1626.(LocalVariable).getFunction() = func
and vresp_1627.(LocalVariable).getFunction() = func
and vctx_1628.(LocalVariable).getFunction() = func
and vf_1629.(LocalVariable).getFunction() = func
and vcur_file_1630.(LocalVariable).getFunction() = func
and vret_1631.(LocalVariable).getFunction() = func
and not vctx_table.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
