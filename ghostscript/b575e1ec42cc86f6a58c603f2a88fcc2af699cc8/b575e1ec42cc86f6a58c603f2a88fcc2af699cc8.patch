commit b575e1ec42cc86f6a58c603f2a88fcc2af699cc8	b575e1ec42cc86f6a58c603f2a88fcc2af699cc8
Author: Chris Liddell <chris.liddell@artifex.com>
Date:   Thu Aug 23 12:20:56 2018 +0100

    Bug 699668: handle stack overflow during error handling
    
    When handling a Postscript error, we push the object throwing the error onto
    the operand stack for the error handling procedure to access - we were not
    checking the available stack before doing so, thus causing a crash.
    
    Basically, if we get a stack overflow when already handling an error, we're out
    of options, return to the caller with a fatal error.

diff --git a/psi/interp.c b/psi/interp.c
index 8b4955693..615083867 100644
--- a/psi/interp.c
+++ b/psi/interp.c
@@ -676,7 +676,12 @@ again:
     /* Push the error object on the operand stack if appropriate. */
     if (!GS_ERROR_IS_INTERRUPT(code)) {
         /* Replace the error object if within an oparray or .errorexec. */
-        *++osp = *perror_object;
+        osp++;
+        if (osp >= ostop) {
+            *pexit_code = gs_error_Fatal;
+            return_error(gs_error_Fatal);
+        }
+        *osp = *perror_object;
         errorexec_find(i_ctx_p, osp);
     }
     goto again;
