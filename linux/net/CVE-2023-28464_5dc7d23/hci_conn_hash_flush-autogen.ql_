/**
 * @name linux-5dc7d23e167e2882ef118456ceccd57873e876d8-hci_conn_hash_flush
 * @id cpp/linux/5dc7d23e167e2882ef118456ceccd57873e876d8/hci-conn-hash-flush
 * @description linux-5dc7d23e167e2882ef118456ceccd57873e876d8-net/bluetooth/hci_conn.c-hci_conn_hash_flush CVE-2023-28464
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vc_2429, ExprStmt target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("hci_conn_unlink")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_2429
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vc_2429, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("hci_conn_del")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_2429
}

predicate func_2(Variable vc_2429, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("hci_disconn_cfm")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_2429
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="22"
}

from Function func, Variable vc_2429, ExprStmt target_1, ExprStmt target_2
where
not func_0(vc_2429, target_1, target_2)
and func_1(vc_2429, target_1)
and func_2(vc_2429, target_2)
and vc_2429.getType().hasName("hci_conn *")
and vc_2429.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
