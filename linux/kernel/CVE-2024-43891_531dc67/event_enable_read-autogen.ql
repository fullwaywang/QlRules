/**
 * @name linux-531dc6780d94245af037c25c2371c8caf652f0f9-event_enable_read
 * @id cpp/linux/531dc6780d94245af037c25c2371c8caf652f0f9/event-enable-read
 * @description linux-531dc6780d94245af037c25c2371c8caf652f0f9-kernel/trace/trace_events.c-event_enable_read CVE-2024-43891
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfile_1384, Parameter vfilp_1381) {
exists(FunctionCall target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget()=vfile_1384
	)
	and target_0.getTarget().hasName("event_file_file")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vfilp_1381
)
}

predicate func_1(Variable vfile_1384, ReturnStmt target_5, NotExpr target_1) {
	exists(LogicalOrExpr obj_0 | obj_0=target_1.getParent() |
		obj_0.getRightOperand() instanceof BitwiseAndExpr
		and obj_0.getParent().(IfStmt).getThen()=target_5
	)
	and target_1.getOperand().(VariableAccess).getTarget()=vfile_1384
}

predicate func_2(Parameter vfilp_1381, VariableAccess target_2) {
	target_2.getTarget()=vfilp_1381
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Variable vfile_1384, Parameter vfilp_1381, FunctionCall target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getParent() |
		obj_0.getRValue() = target_3
		and obj_0.getLValue().(VariableAccess).getTarget()=vfile_1384
	)
	and target_3.getTarget().hasName("event_file_data")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vfilp_1381
}

predicate func_4(Variable vflags_1385, ReturnStmt target_5, LogicalOrExpr target_4) {
	target_4.getLeftOperand() instanceof NotExpr
	and target_4.getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_1385
	and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Function func, ReturnStmt target_5) {
	target_5.getExpr().(UnaryMinusExpr).getValue()="-19"
	and target_5.getEnclosingFunction() = func
}

from Function func, Variable vfile_1384, Variable vflags_1385, Parameter vfilp_1381, NotExpr target_1, VariableAccess target_2, FunctionCall target_3, LogicalOrExpr target_4, ReturnStmt target_5
where
not func_0(vfile_1384, vfilp_1381)
and func_1(vfile_1384, target_5, target_1)
and func_2(vfilp_1381, target_2)
and func_3(vfile_1384, vfilp_1381, target_3)
and func_4(vflags_1385, target_5, target_4)
and func_5(func, target_5)
and vfile_1384.getType().hasName("trace_event_file *")
and vflags_1385.getType().hasName("unsigned long")
and vfilp_1381.getType().hasName("file *")
and vfile_1384.(LocalVariable).getFunction() = func
and vflags_1385.(LocalVariable).getFunction() = func
and vfilp_1381.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
