/**
 * @name linux-26273f5f4cf68b29414e403837093408a9c98e1f-follow_page_pte
 * @id cpp/linux/26273f5f4cf68b29414e403837093408a9c98e1f/follow-page-pte
 * @description linux-26273f5f4cf68b29414e403837093408a9c98e1f-mm/gup.c-follow_page_pte CVE-2024-44943
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="1101"
	and not target_0.getValue()="1099"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="1102"
	and not target_1.getValue()="1100"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="1103"
	and not target_2.getValue()="1101"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vflags_580, Variable vpage_584, FunctionCall target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getParent() |
		obj_0.getRValue() = target_3
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_3.getTarget().hasName("try_grab_page")
	and not target_3.getTarget().hasName("try_grab_folio")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vpage_584
	and target_3.getArgument(1).(VariableAccess).getTarget()=vflags_580
}

predicate func_4(DoStmt target_9, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1099"
	and target_4.getLocation().isBefore(target_9.getLocation())
	and target_4.getEnclosingFunction() = func
)
}

predicate func_5(Variable vpage_584) {
exists(FunctionCall target_5 |
	target_5.getTarget().hasName("_compound_head")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vpage_584
	and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
)
}

predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vpage_584, VariableAccess target_8) {
	target_8.getTarget()=vpage_584
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_9(Function func, DoStmt target_9) {
	exists(BlockStmt obj_0 | obj_0=target_9.getStmt() |
		exists(AsmStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(SizeofTypeOperator obj_2 | obj_2=obj_1.getChild(3) |
				obj_2.getType() instanceof LongType
				and obj_2.getValue()="12"
			)
			and obj_1.getChild(0) instanceof StringLiteral
			and obj_1.getChild(1) instanceof Literal
			and obj_1.getChild(2).(VariableAccess).getTarget().getType().hasName("int")
		)
	)
	and target_9.getCondition() instanceof Literal
	and target_9.getEnclosingFunction() = func
}

from Function func, Parameter vflags_580, Variable vpage_584, Literal target_0, Literal target_1, Literal target_2, FunctionCall target_3, ExprStmt target_7, VariableAccess target_8, DoStmt target_9
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(vflags_580, vpage_584, target_3)
and not func_4(target_9, func)
and not func_5(vpage_584)
and func_7(func, target_7)
and func_8(vpage_584, target_8)
and func_9(func, target_9)
and vflags_580.getType().hasName("unsigned int")
and vpage_584.getType().hasName("page *")
and vflags_580.getFunction() = func
and vpage_584.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
