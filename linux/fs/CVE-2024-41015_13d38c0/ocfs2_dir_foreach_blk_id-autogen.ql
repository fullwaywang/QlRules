/**
 * @name linux-13d38c00df97289e6fba2e54193959293fd910d2-ocfs2_dir_foreach_blk_id
 * @id cpp/linux/13d38c00df97289e6fba2e54193959293fd910d2/ocfs2-dir-foreach-blk-id
 * @description linux-13d38c00df97289e6fba2e54193959293fd910d2-fs/ocfs2/dir.c-ocfs2_dir_foreach_blk_id CVE-2024-41015
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdata_1761, ExprStmt target_2) {
exists(PointerFieldAccess target_0 |
	target_0.getTarget().getName()="id_data"
	and target_0.getQualifier().(VariableAccess).getTarget()=vdata_1761
	and target_2.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vinode_1753, NotExpr target_3, ExprStmt target_4) {
exists(FunctionCall target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getParent() |
		exists(NotExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArgument(3) |
					obj_3.getTarget().getName()="pos"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("dir_context *")
				)
				and obj_2.getTarget().hasName("ocfs2_check_dir_entry")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vinode_1753
				and obj_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("ocfs2_dir_entry *")
				and obj_2.getArgument(2).(VariableAccess).getTarget().getType().hasName("buffer_head *")
			)
		)
	)
	and target_1.getTarget().hasName("i_size_read")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vinode_1753
	and target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation())
	and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Variable vdata_1761, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(PointerArithmeticOperation obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().getName()="id_data"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vdata_1761
			)
			and exists(PointerFieldAccess obj_3 | obj_3=obj_1.getRightOperand() |
				obj_3.getTarget().getName()="pos"
				and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("dir_context *")
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("ocfs2_dir_entry *")
	)
}

predicate func_3(Parameter vinode_1753, NotExpr target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(3) |
			obj_1.getTarget().getName()="pos"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("dir_context *")
		)
		and obj_0.getTarget().hasName("ocfs2_check_dir_entry")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_1753
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("ocfs2_dir_entry *")
		and obj_0.getArgument(2).(VariableAccess).getTarget().getType().hasName("buffer_head *")
	)
}

predicate func_4(Parameter vinode_1753, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="pos"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("dir_context *")
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().hasName("i_size_read")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vinode_1753
		)
	)
}

from Function func, Variable vdata_1761, Parameter vinode_1753, ExprStmt target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(vdata_1761, target_2)
and not func_1(vinode_1753, target_3, target_4)
and func_2(vdata_1761, target_2)
and func_3(vinode_1753, target_3)
and func_4(vinode_1753, target_4)
and vdata_1761.getType().hasName("ocfs2_inline_data *")
and vinode_1753.getType().hasName("inode *")
and vdata_1761.(LocalVariable).getFunction() = func
and vinode_1753.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
