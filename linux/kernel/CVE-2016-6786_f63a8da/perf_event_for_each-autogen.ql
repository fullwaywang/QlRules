/**
 * @name linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-perf_event_for_each
 * @id cpp/linux/f63a8daa5812afef4f06c962351687e1ff9ccb2b/perf-event-for-each
 * @description linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-kernel/events/core.c-perf_event_for_each CVE-2016-6786
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsibling_3732, VariableAccess target_0) {
	target_0.getTarget()=vsibling_3732
	and target_0.getParent().(AssignExpr).getLValue() = target_0
	and target_0.getParent().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("const list_head *")
}

predicate func_1(Parameter vevent_3728, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="sibling_list"
	and target_1.getQualifier().(VariableAccess).getTarget()=vevent_3728
}

/*predicate func_2(Function func, BuiltInOperationBuiltInOffsetOf target_2) {
	target_2.getValue()="16"
	and target_2.getEnclosingFunction() = func
}

*/
predicate func_3(Variable vsibling_3732, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="group_entry"
	and target_3.getQualifier().(VariableAccess).getTarget()=vsibling_3732
}

predicate func_4(Parameter vevent_3728, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="sibling_list"
	and target_4.getQualifier().(VariableAccess).getTarget()=vevent_3728
}

predicate func_5(Variable vsibling_3732, Variable v__mptr_1_3739, VariableAccess target_5) {
	target_5.getTarget()=vsibling_3732
	and target_5.getParent().(AssignExpr).getLValue() = target_5
	and target_5.getParent().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_3739
}

predicate func_6(Variable vsibling_3732, PointerFieldAccess target_6) {
	target_6.getTarget().getName()="group_entry"
	and target_6.getQualifier().(VariableAccess).getTarget()=vsibling_3732
}

/*predicate func_7(Function func, BuiltInOperationBuiltInOffsetOf target_7) {
	target_7.getValue()="16"
	and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(Variable vctx_3731, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="mutex"
	and target_8.getQualifier().(VariableAccess).getTarget()=vctx_3731
}

predicate func_9(Variable vsibling_3732, VariableAccess target_9) {
	target_9.getTarget()=vsibling_3732
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_10(Variable vctx_3731, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="mutex"
	and target_10.getQualifier().(VariableAccess).getTarget()=vctx_3731
}

predicate func_11(ExprStmt target_27, Function func, ExprStmt target_11) {
	target_11.getExpr() instanceof AssignExpr
	and target_27.getLocation().isBefore(target_11.getLocation())
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Parameter vevent_3728, Variable vsibling_3732, Variable v__mptr_1_3739, ExprStmt target_28, ForStmt target_12) {
	target_12.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsibling_3732
	and target_12.getCondition().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="group_entry"
	and target_12.getCondition().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsibling_3732
	and target_12.getCondition().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sibling_list"
	and target_12.getCondition().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_3728
	and target_12.getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsibling_3732
	and target_12.getUpdate().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_3739
	and target_12.getUpdate().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerArithmeticOperation).getRightOperand() instanceof BuiltInOperationBuiltInOffsetOf
	and target_12.getStmt().(ExprStmt).getExpr() instanceof FunctionCall
	and target_28.getLocation().isBefore(target_12.getLocation())
}

predicate func_13(Parameter vevent_3728, Parameter vfunc_3729, PointerFieldAccess target_29) {
exists(VariableCall target_13 |
	target_13.getExpr().(VariableAccess).getTarget()=vfunc_3729
	and target_13.getArgument(0).(VariableAccess).getTarget()=vevent_3728
	and target_13.getArgument(0).(VariableAccess).getLocation().isBefore(target_29.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_14(Parameter vfunc_3729) {
exists(VariableCall target_14 |
	target_14.getExpr().(VariableAccess).getTarget()=vfunc_3729
	and target_14.getArgument(0).(VariableAccess).getType().hasName("perf_event *"))
}

predicate func_16(Parameter vevent_3728, PointerFieldAccess target_16) {
	target_16.getTarget().getName()="ctx"
	and target_16.getQualifier().(VariableAccess).getTarget()=vevent_3728
}

predicate func_17(Parameter vevent_3728, VariableAccess target_17) {
	target_17.getTarget()=vevent_3728
}

predicate func_18(Parameter vevent_3728, VariableAccess target_18) {
	target_18.getTarget()=vevent_3728
	and target_18.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_19(Parameter vfunc_3729, VariableAccess target_19) {
	target_19.getTarget()=vfunc_3729
	and target_19.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_20(Parameter vfunc_3729, VariableAccess target_20) {
	target_20.getTarget()=vfunc_3729
	and target_20.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_21(Function func, DeclStmt target_21) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_21
}

predicate func_22(Variable vctx_3731, DeclStmt target_21, AddressOfExpr target_31, VariableAccess target_22) {
	target_22.getTarget()=vctx_3731
	and target_22.getLocation().isBefore(target_31.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_23(Parameter vevent_3728, AssignExpr target_23) {
	target_23.getLValue().(VariableAccess).getTarget()=vevent_3728
	and target_23.getRValue().(PointerFieldAccess).getTarget().getName()="group_leader"
	and target_23.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_3728
}

predicate func_24(Parameter vevent_3728, Parameter vfunc_3729, FunctionCall target_24) {
	target_24.getTarget().hasName("perf_event_for_each_child")
	and target_24.getArgument(0).(VariableAccess).getTarget()=vevent_3728
	and target_24.getArgument(1).(VariableAccess).getTarget()=vfunc_3729
}

predicate func_25(Parameter vfunc_3729, Variable vsibling_3732, FunctionCall target_25) {
	target_25.getTarget().hasName("perf_event_for_each_child")
	and target_25.getArgument(0).(VariableAccess).getTarget()=vsibling_3732
	and target_25.getArgument(1).(VariableAccess).getTarget()=vfunc_3729
}

predicate func_26(Variable vctx_3731, Function func, ExprStmt target_26) {
	target_26.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_26.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mutex"
	and target_26.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_3731
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_26
}

predicate func_27(Variable vctx_3731, ExprStmt target_27) {
	target_27.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_27.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mutex"
	and target_27.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_3731
	and target_27.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_28(Function func, ExprStmt target_28) {
	target_28.getExpr() instanceof FunctionCall
	and target_28.getEnclosingFunction() = func
}

predicate func_29(Parameter vevent_3728, PointerFieldAccess target_29) {
	target_29.getTarget().getName()="next"
	and target_29.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sibling_list"
	and target_29.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_3728
}

predicate func_31(Variable vctx_3731, AddressOfExpr target_31) {
	target_31.getOperand().(PointerFieldAccess).getTarget().getName()="mutex"
	and target_31.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_3731
}

from Function func, Parameter vevent_3728, Parameter vfunc_3729, Variable vctx_3731, Variable vsibling_3732, Variable v__mptr_1_3739, VariableAccess target_0, PointerFieldAccess target_1, PointerFieldAccess target_3, PointerFieldAccess target_4, VariableAccess target_5, PointerFieldAccess target_6, PointerFieldAccess target_8, VariableAccess target_9, PointerFieldAccess target_10, ExprStmt target_11, ForStmt target_12, PointerFieldAccess target_16, VariableAccess target_17, VariableAccess target_18, VariableAccess target_19, VariableAccess target_20, DeclStmt target_21, VariableAccess target_22, AssignExpr target_23, FunctionCall target_24, FunctionCall target_25, ExprStmt target_26, ExprStmt target_27, ExprStmt target_28, PointerFieldAccess target_29, AddressOfExpr target_31
where
func_0(vsibling_3732, target_0)
and func_1(vevent_3728, target_1)
and func_3(vsibling_3732, target_3)
and func_4(vevent_3728, target_4)
and func_5(vsibling_3732, v__mptr_1_3739, target_5)
and func_6(vsibling_3732, target_6)
and func_8(vctx_3731, target_8)
and func_9(vsibling_3732, target_9)
and func_10(vctx_3731, target_10)
and func_11(target_27, func, target_11)
and func_12(vevent_3728, vsibling_3732, v__mptr_1_3739, target_28, target_12)
and not func_13(vevent_3728, vfunc_3729, target_29)
and not func_14(vfunc_3729)
and func_16(vevent_3728, target_16)
and func_17(vevent_3728, target_17)
and func_18(vevent_3728, target_18)
and func_19(vfunc_3729, target_19)
and func_20(vfunc_3729, target_20)
and func_21(func, target_21)
and func_22(vctx_3731, target_21, target_31, target_22)
and func_23(vevent_3728, target_23)
and func_24(vevent_3728, vfunc_3729, target_24)
and func_25(vfunc_3729, vsibling_3732, target_25)
and func_26(vctx_3731, func, target_26)
and func_27(vctx_3731, target_27)
and func_28(func, target_28)
and func_29(vevent_3728, target_29)
and func_31(vctx_3731, target_31)
and vevent_3728.getType().hasName("perf_event *")
and vfunc_3729.getType().hasName("..(*)(..)")
and vctx_3731.getType().hasName("perf_event_context *")
and vsibling_3732.getType().hasName("perf_event *")
and v__mptr_1_3739.getType().hasName("const list_head *")
and vevent_3728.getFunction() = func
and vfunc_3729.getFunction() = func
and vctx_3731.(LocalVariable).getFunction() = func
and vsibling_3732.(LocalVariable).getFunction() = func
and v__mptr_1_3739.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
