commit bc895e8b2a64e502fbba72748d59618272052a8b
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Jan 20 00:24:24 2021 +0100

    bpf: Fix signed_{sub,add32}_overflows type handling
    
    Fix incorrect signed_{sub,add32}_overflows() input types (and a related buggy
    comment). It looks like this might have slipped in via copy/paste issue, also
    given prior to 3f50f132d840 ("bpf: Verifier, do explicit ALU32 bounds tracking")
    the signature of signed_sub_overflows() had s64 a and s64 b as its input args
    whereas now they are truncated to s32. Thus restore proper types. Also, the case
    of signed_add32_overflows() is not consistent to signed_sub32_overflows(). Both
    have s32 as inputs, therefore align the former.
    
    Fixes: 3f50f132d840 ("bpf: Verifier, do explicit ALU32 bounds tracking")
    Reported-by: De4dCr0w <sa516203@mail.ustc.edu.cn>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>

diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 36af69fac591..e7368c5eacb7 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -5313,7 +5313,7 @@ static bool signed_add_overflows(s64 a, s64 b)
 	return res < a;
 }
 
-static bool signed_add32_overflows(s64 a, s64 b)
+static bool signed_add32_overflows(s32 a, s32 b)
 {
 	/* Do the add in u32, where overflow is well-defined */
 	s32 res = (s32)((u32)a + (u32)b);
@@ -5323,7 +5323,7 @@ static bool signed_add32_overflows(s64 a, s64 b)
 	return res < a;
 }
 
-static bool signed_sub_overflows(s32 a, s32 b)
+static bool signed_sub_overflows(s64 a, s64 b)
 {
 	/* Do the sub in u64, where overflow is well-defined */
 	s64 res = (s64)((u64)a - (u64)b);
@@ -5335,7 +5335,7 @@ static bool signed_sub_overflows(s32 a, s32 b)
 
 static bool signed_sub32_overflows(s32 a, s32 b)
 {
-	/* Do the sub in u64, where overflow is well-defined */
+	/* Do the sub in u32, where overflow is well-defined */
 	s32 res = (s32)((u32)a - (u32)b);
 
 	if (b < 0)
