commit 05ac1a198a63ad66bf5ae8b7321407c102d40ef3
Author: Ajay Singh <ajay.kathat@microchip.com>
Date:   Tue Oct 17 10:43:38 2023 +0200

    wifi: wilc1000: use vmm_table as array in wilc struct
    
    Enabling KASAN and running some iperf tests raises some memory issues with
    vmm_table:
    
    BUG: KASAN: slab-out-of-bounds in wilc_wlan_handle_txq+0x6ac/0xdb4
    Write of size 4 at addr c3a61540 by task wlan0-tx/95
    
    KASAN detects that we are writing data beyond range allocated to vmm_table.
    There is indeed a mismatch between the size passed to allocator in
    wilc_wlan_init, and the range of possible indexes used later: allocation
    size is missing a multiplication by sizeof(u32)
    
    Fixes: 40b717bfcefa ("wifi: wilc1000: fix DMA on stack objects")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ajay Singh <ajay.kathat@microchip.com>
    Signed-off-by: Alexis Lothor√© <alexis.lothore@bootlin.com>
    Reviewed-by: Michael Walle <mwalle@kernel.org>
    Reviewed-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20231017-wilc1000_tx_oops-v3-1-b2155f1f7bee@bootlin.com

diff --git a/drivers/net/wireless/microchip/wilc1000/wlan.c b/drivers/net/wireless/microchip/wilc1000/wlan.c
index 58bbf50081e4..9eb115c79c90 100644
--- a/drivers/net/wireless/microchip/wilc1000/wlan.c
+++ b/drivers/net/wireless/microchip/wilc1000/wlan.c
@@ -1492,7 +1492,7 @@ int wilc_wlan_init(struct net_device *dev)
 	}
 
 	if (!wilc->vmm_table)
-		wilc->vmm_table = kzalloc(WILC_VMM_TBL_SIZE, GFP_KERNEL);
+		wilc->vmm_table = kcalloc(WILC_VMM_TBL_SIZE, sizeof(u32), GFP_KERNEL);
 
 	if (!wilc->vmm_table) {
 		ret = -ENOBUFS;
