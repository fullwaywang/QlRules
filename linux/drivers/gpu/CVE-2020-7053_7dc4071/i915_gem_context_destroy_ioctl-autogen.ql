/**
 * @name linux-7dc40713618c884bf07c030d1ab1f47a9dc1f310-i915_gem_context_destroy_ioctl
 * @id cpp/linux/7dc40713618c884bf07c030d1ab1f47a9dc1f310/i915-gem-context-destroy-ioctl
 * @description linux-7dc40713618c884bf07c030d1ab1f47a9dc1f310-drivers/gpu/drm/i915/i915_gem_context.c-i915_gem_context_destroy_ioctl CVE-2020-7053
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vctx_876, FunctionCall target_0) {
	target_0.getTarget().hasName("i915_gem_context_put")
	and not target_0.getTarget().hasName("mutex_unlock")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vctx_876
}

predicate func_1(Variable vret_877, ExprStmt target_17, IfStmt target_1) {
	target_1.getCondition().(VariableAccess).getTarget()=vret_877
	and target_1.getThen() instanceof GotoStmt
	and target_17.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vfile_priv_875, Variable vctx_876, ExprStmt target_17, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("idr_remove")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="context_idr"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_priv_875
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="user_handle"
	and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_876
	and target_17.getLocation().isBefore(target_2.getLocation())
}

predicate func_3(Variable vfile_priv_875, AddressOfExpr target_18) {
exists(AddressOfExpr target_3 |
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="context_idr_lock"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_priv_875
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mutex_lock_interruptible_nested")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_18.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(VariableAccess target_13, Function func) {
exists(ReturnStmt target_4 |
	target_4.getExpr().(UnaryMinusExpr).getValue()="-4"
	and target_4.getParent().(IfStmt).getCondition()=target_13
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vfile_priv_875, AddressOfExpr target_18) {
exists(AddressOfExpr target_5 |
	target_5.getOperand().(PointerFieldAccess).getTarget().getName()="context_idr_lock"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_priv_875
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_18.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_6(Function func) {
exists(FunctionCall target_6 |
	target_6.getTarget().hasName("mutex_lock_nested")
	and target_6.getArgument(0) instanceof AddressOfExpr
	and target_6.getArgument(1).(Literal).getValue()="0"
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Parameter vdev_871, AddressOfExpr target_7) {
	target_7.getOperand().(PointerFieldAccess).getTarget().getName()="struct_mutex"
	and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_871
	and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mutex_lock_interruptible_nested")
	and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_8(Variable vargs_874, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="ctx_id"
	and target_8.getQualifier().(VariableAccess).getTarget()=vargs_874
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_9(Variable vfile_priv_875, VariableAccess target_9) {
	target_9.getTarget()=vfile_priv_875
	and target_9.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_10(Function func, DeclStmt target_10) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Variable vargs_874, Variable vfile_priv_875, Variable vctx_876, FunctionCall target_11) {
	target_11.getTarget().hasName("i915_gem_context_lookup")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vfile_priv_875
	and target_11.getArgument(1).(PointerFieldAccess).getTarget().getName()="ctx_id"
	and target_11.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vargs_874
	and target_11.getParent().(AssignExpr).getRValue() = target_11
	and target_11.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vctx_876
}

predicate func_12(Variable vret_877, AssignExpr target_12) {
	target_12.getLValue().(VariableAccess).getTarget()=vret_877
	and target_12.getRValue().(FunctionCall).getTarget().hasName("mutex_lock_interruptible_nested")
	and target_12.getRValue().(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and target_12.getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_13(Variable vret_877, VariableAccess target_13) {
	target_13.getTarget()=vret_877
	and target_13.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_14(VariableAccess target_13, Function func, GotoStmt target_14) {
	target_14.getName() ="out"
	and target_14.getParent().(IfStmt).getCondition()=target_13
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vctx_876, PointerFieldAccess target_15) {
	target_15.getTarget().getName()="user_handle"
	and target_15.getQualifier().(VariableAccess).getTarget()=vctx_876
}

predicate func_16(Function func, ExprStmt target_16) {
	target_16.getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_16
}

predicate func_17(Function func, ExprStmt target_17) {
	target_17.getExpr() instanceof AssignExpr
	and target_17.getEnclosingFunction() = func
}

predicate func_18(Variable vfile_priv_875, AddressOfExpr target_18) {
	target_18.getOperand().(PointerFieldAccess).getTarget().getName()="context_idr"
	and target_18.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_priv_875
}

from Function func, Parameter vdev_871, Variable vargs_874, Variable vfile_priv_875, Variable vctx_876, Variable vret_877, FunctionCall target_0, IfStmt target_1, ExprStmt target_2, AddressOfExpr target_7, PointerFieldAccess target_8, VariableAccess target_9, DeclStmt target_10, FunctionCall target_11, AssignExpr target_12, VariableAccess target_13, GotoStmt target_14, PointerFieldAccess target_15, ExprStmt target_16, ExprStmt target_17, AddressOfExpr target_18
where
func_0(vctx_876, target_0)
and func_1(vret_877, target_17, target_1)
and func_2(vfile_priv_875, vctx_876, target_17, target_2)
and not func_3(vfile_priv_875, target_18)
and not func_4(target_13, func)
and not func_5(vfile_priv_875, target_18)
and not func_6(func)
and func_7(vdev_871, target_7)
and func_8(vargs_874, target_8)
and func_9(vfile_priv_875, target_9)
and func_10(func, target_10)
and func_11(vargs_874, vfile_priv_875, vctx_876, target_11)
and func_12(vret_877, target_12)
and func_13(vret_877, target_13)
and func_14(target_13, func, target_14)
and func_15(vctx_876, target_15)
and func_16(func, target_16)
and func_17(func, target_17)
and func_18(vfile_priv_875, target_18)
and vdev_871.getType().hasName("drm_device *")
and vargs_874.getType().hasName("drm_i915_gem_context_destroy *")
and vfile_priv_875.getType().hasName("drm_i915_file_private *")
and vctx_876.getType().hasName("i915_gem_context *")
and vret_877.getType().hasName("int")
and vdev_871.getFunction() = func
and vargs_874.(LocalVariable).getFunction() = func
and vfile_priv_875.(LocalVariable).getFunction() = func
and vctx_876.(LocalVariable).getFunction() = func
and vret_877.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
