/**
 * @name linux-345c0dbf3a30872d9b204db96b5857cd00808cae-__check_block_validity
 * @id cpp/linux/345c0dbf3a30872d9b204db96b5857cd00808cae/--check-block-validity
 * @description linux-345c0dbf3a30872d9b204db96b5857cd00808cae-fs/ext4/inode.c-__check_block_validity CVE-2019-19319
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_398, IfStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ext4_has_feature_journal")
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_398
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="i_ino"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_398
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="s_journal_inum"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="s_es"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Parameter vinode_398, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ext4_data_block_valid")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("EXT4_SB")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_398
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="m_pblk"
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks *")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="m_len"
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__ext4_error_inode")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_398
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="m_pblk"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(StringLiteral).getValue()="lblock %lu mapped to illegal pblock %llu (length %d)"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(5).(PointerFieldAccess).getTarget().getName()="m_lblk"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(5).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(6).(PointerFieldAccess).getTarget().getName()="m_pblk"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(6).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(7).(PointerFieldAccess).getTarget().getName()="m_len"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(7).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks *")
}

from Function func, Parameter vinode_398, IfStmt target_1
where
not func_0(vinode_398, target_1, func)
and func_1(vinode_398, target_1)
and vinode_398.getType().hasName("inode *")
and vinode_398.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
