/**
 * @name openssl-a801bf263849a2ef773e5bc0c86438cbba720835-BIO_vsnprintf
 * @id cpp/openssl/a801bf263849a2ef773e5bc0c86438cbba720835/bio-vsnprintf
 * @description openssl-a801bf263849a2ef773e5bc0c86438cbba720835-crypto/bio/b_print.c-BIO_vsnprintf CVE-2016-0799
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand() instanceof FunctionCall
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0)
}

predicate func_1(Parameter vbuf_801, Parameter vn_801, Parameter vformat_801, Parameter vargs_801, Variable vretlen_803, Variable vtruncated_804, FunctionCall target_1) {
		target_1.getTarget().hasName("_dopr")
		and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vbuf_801
		and target_1.getArgument(1).(Literal).getValue()="0"
		and target_1.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vn_801
		and target_1.getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vretlen_803
		and target_1.getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtruncated_804
		and target_1.getArgument(5).(VariableAccess).getTarget()=vformat_801
		and target_1.getArgument(6).(VariableAccess).getTarget()=vargs_801
}

predicate func_2(Function func, ExprStmt target_2) {
		target_2.getExpr() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

from Function func, Parameter vbuf_801, Parameter vn_801, Parameter vformat_801, Parameter vargs_801, Variable vretlen_803, Variable vtruncated_804, FunctionCall target_1, ExprStmt target_2
where
not func_0(func)
and func_1(vbuf_801, vn_801, vformat_801, vargs_801, vretlen_803, vtruncated_804, target_1)
and func_2(func, target_2)
and vbuf_801.getType().hasName("char *")
and vn_801.getType().hasName("size_t")
and vformat_801.getType().hasName("const char *")
and vargs_801.getType().hasName("va_list")
and vretlen_803.getType().hasName("size_t")
and vtruncated_804.getType().hasName("int")
and vbuf_801.getFunction() = func
and vn_801.getFunction() = func
and vformat_801.getFunction() = func
and vargs_801.getFunction() = func
and vretlen_803.(LocalVariable).getFunction() = func
and vtruncated_804.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
