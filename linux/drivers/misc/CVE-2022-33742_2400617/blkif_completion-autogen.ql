/**
 * @name linux-2400617da7eebf9167d71a46122828bc479d64c9-blkif_completion
 * @id cpp/linux/2400617da7eebf9167d71a46122828bc479d64c9/blkif-completion
 * @description linux-2400617da7eebf9167d71a46122828bc479d64c9-drivers/block/xen-blkfront.c-blkif_completion CVE-2022-33742
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="1182"
	and not target_0.getValue()="1184"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="1183"
	and not target_1.getValue()="1185"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="1184"
	and not target_2.getValue()="1186"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="1185"
	and not target_3.getValue()="1187"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vinfo_1380, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="feature_persistent"
	and target_4.getQualifier().(VariableAccess).getTarget()=vinfo_1380
}

predicate func_5(Function func, Literal target_5) {
	target_5.getValue()="1186"
	and not target_5.getValue()="1188"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vinfo_1380, PointerFieldAccess target_6) {
	target_6.getTarget().getName()="feature_persistent"
	and target_6.getQualifier().(VariableAccess).getTarget()=vinfo_1380
}

predicate func_7(Function func) {
exists(ExprStmt target_7 |
	target_7.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1187"
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(DoStmt target_12, Function func) {
exists(ExprStmt target_8 |
	target_8.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1188"
	and target_8.getLocation().isBefore(target_12.getLocation())
	and target_8.getEnclosingFunction() = func)
}

predicate func_9(Function func, ExprStmt target_9) {
	target_9.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, ExprStmt target_11) {
	target_11.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof Literal
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Function func, DoStmt target_12) {
	target_12.getCondition() instanceof Literal
	and target_12.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
	and target_12.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
	and target_12.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2) instanceof Literal
	and target_12.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_12.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getValue()="12"
	and target_12.getEnclosingFunction() = func
}

from Function func, Variable vinfo_1380, Literal target_0, Literal target_1, Literal target_2, Literal target_3, PointerFieldAccess target_4, Literal target_5, PointerFieldAccess target_6, ExprStmt target_9, ExprStmt target_10, ExprStmt target_11, DoStmt target_12
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vinfo_1380, target_4)
and func_5(func, target_5)
and func_6(vinfo_1380, target_6)
and not func_7(func)
and not func_8(target_12, func)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and func_12(func, target_12)
and vinfo_1380.getType().hasName("blkfront_info *")
and vinfo_1380.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
