/**
 * @name openssl-f141376ae2892b59f2b1af94204f925832f8dc3a-ssl3_get_client_hello
 * @id cpp/openssl/f141376ae2892b59f2b1af94204f925832f8dc3a/ssl3-get-client-hello
 * @description openssl-f141376ae2892b59f2b1af94204f925832f8dc3a-ssl/s3_srvr.c-ssl3_get_client_hello CVE-2016-2177
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vn_972, Variable vd_974, RelationalOperation target_3) {
	exists(PointerArithmeticOperation target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vd_974
		and target_0.getAnOperand().(VariableAccess).getTarget()=vn_972
		and target_0.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ssl_parse_clienthello_tlsext")
		and target_0.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("SSL *")
		and target_0.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_0.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vd_974
		and target_0.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vn_972
		and target_0.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getLesserOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vn_972, Variable vd_974, VariableAccess target_1) {
		target_1.getTarget()=vd_974
		and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ssl_parse_clienthello_tlsext")
		and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("SSL *")
		and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vn_972
		and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
}

/*predicate func_2(Variable vn_972, Variable vd_974, VariableAccess target_2) {
		target_2.getTarget()=vn_972
		and target_2.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ssl_parse_clienthello_tlsext")
		and target_2.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("SSL *")
		and target_2.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_2.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vd_974
		and target_2.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
}

*/
predicate func_3(Variable vn_972, Variable vd_974, RelationalOperation target_3) {
		 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
		and target_3.getGreaterOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_3.getGreaterOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getLesserOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vd_974
		and target_3.getLesserOperand().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget()=vn_972
}

from Function func, Variable vn_972, Variable vd_974, VariableAccess target_1, RelationalOperation target_3
where
not func_0(vn_972, vd_974, target_3)
and func_1(vn_972, vd_974, target_1)
and func_3(vn_972, vd_974, target_3)
and vn_972.getType().hasName("long")
and vd_974.getType().hasName("unsigned char *")
and vn_972.(LocalVariable).getFunction() = func
and vd_974.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
