/**
 * @name linux-6cd88243c7e03845a450795e134b488fc2afb736-vcpu_run
 * @id cpp/linux/6cd88243c7e03845a450795e134b488fc2afb736/vcpu-run
 * @description linux-6cd88243c7e03845a450795e134b488fc2afb736-vcpu_run CVE-2022-39189
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvcpu_10420, ExprStmt target_1, FunctionCall target_2) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="at_instruction_boundary"
		and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_10420
		and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_10420, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="l1tf_flush_l1d"
		and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_10420
}

predicate func_2(Parameter vvcpu_10420, FunctionCall target_2) {
		target_2.getTarget().hasName("kvm_vcpu_running")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vvcpu_10420
}

from Function func, Parameter vvcpu_10420, ExprStmt target_1, FunctionCall target_2
where
not func_0(vvcpu_10420, target_1, target_2)
and func_1(vvcpu_10420, target_1)
and func_2(vvcpu_10420, target_2)
and vvcpu_10420.getType().hasName("kvm_vcpu *")
and vvcpu_10420.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
