/**
 * @name linux-946e51f2bf37f1656916eb75bd0742ba33983c28-simple_empty
 * @id cpp/linux/946e51f2bf37f1656916eb75bd0742ba33983c28/simple-empty
 * @description linux-946e51f2bf37f1656916eb75bd0742ba33983c28-fs/libfs.c-simple_empty CVE-2014-8559
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchild_286) {
exists(PointerFieldAccess target_0 |
	target_0.getTarget().getName()="d_child"
	and target_0.getQualifier().(VariableAccess).getTarget()=vchild_286)
}

predicate func_1(Variable vchild_286, AddressOfExpr target_10) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="d_child"
	and target_1.getQualifier().(VariableAccess).getTarget()=vchild_286
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Function func, PointerDereferenceExpr target_2) {
	target_2.getOperand().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, PointerDereferenceExpr target_3) {
	target_3.getOperand().(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vchild_286, VariableAccess target_4) {
	target_4.getTarget()=vchild_286
}

predicate func_5(Variable vchild_286, VariableAccess target_5) {
	target_5.getTarget()=vchild_286
}

predicate func_6(Function func, ValueFieldAccess target_6) {
	target_6.getTarget().getName()="d_u"
	and target_6.getQualifier() instanceof PointerDereferenceExpr
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vchild_286, ValueFieldAccess target_7) {
	target_7.getTarget().getName()="d_child"
	and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="d_u"
	and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchild_286
}

predicate func_8(Variable vchild_286, AddressOfExpr target_10, ValueFieldAccess target_8) {
	target_8.getTarget().getName()="d_child"
	and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="d_u"
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchild_286
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_9(Function func, ValueFieldAccess target_9) {
	target_9.getTarget().getName()="d_u"
	and target_9.getQualifier() instanceof PointerDereferenceExpr
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vchild_286, AddressOfExpr target_10) {
	target_10.getOperand().(ValueFieldAccess).getTarget().getName()="lock"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="d_lockref"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchild_286
	and target_10.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

from Function func, Variable vchild_286, PointerDereferenceExpr target_2, PointerDereferenceExpr target_3, VariableAccess target_4, VariableAccess target_5, ValueFieldAccess target_6, ValueFieldAccess target_7, ValueFieldAccess target_8, ValueFieldAccess target_9, AddressOfExpr target_10
where
not func_0(vchild_286)
and not func_1(vchild_286, target_10)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vchild_286, target_4)
and func_5(vchild_286, target_5)
and func_6(func, target_6)
and func_7(vchild_286, target_7)
and func_8(vchild_286, target_10, target_8)
and func_9(func, target_9)
and func_10(vchild_286, target_10)
and vchild_286.getType().hasName("dentry *")
and vchild_286.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
