/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-key_reject_and_link
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/key-reject-and-link
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/key.c-key_reject_and_link CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkey_554, FunctionCall target_0) {
		target_0.getTarget().hasName("constant_test_bit")
		and not target_0.getTarget().hasName("test_and_clear_bit")
		and target_0.getArgument(0).(Literal).getValue()="0"
		and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
}

predicate func_1(Parameter vkey_554, Literal target_1) {
		target_1.getValue()="4"
		and not target_1.getValue()="3"
		and target_1.getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("test_and_clear_bit")
		and target_1.getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_1.getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
}

predicate func_2(Parameter vkey_554, Literal target_2) {
		target_2.getValue()="4"
		and not target_2.getValue()="3"
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("wake_up_bit")
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
}

predicate func_3(Parameter vkey_554, FunctionCall target_3) {
		target_3.getTarget().hasName("set_bit")
		and not target_3.getTarget().hasName("mark_key_instantiated")
		and target_3.getArgument(0).(Literal).getValue()="5"
		and target_3.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_3.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
}

predicate func_4(Parameter vkey_554, BlockStmt target_14, AddressOfExpr target_15, AddressOfExpr target_16) {
	exists(EqualityOperation target_4 |
		target_4.getAnOperand().(PointerFieldAccess).getTarget().getName()="state"
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_4.getParent().(IfStmt).getThen()=target_14
		and target_15.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_16.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Parameter verror_556, UnaryMinusExpr target_5) {
		target_5.getOperand().(VariableAccess).getTarget()=verror_556
		and target_5.getParent().(AssignExpr).getRValue() = target_5
		and target_5.getParent().(AssignExpr).getLValue() instanceof ValueFieldAccess
}

predicate func_6(Parameter vkey_554, VariableAccess target_6) {
		target_6.getTarget()=vkey_554
		and target_6.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ConditionalExpr).getElse() instanceof FunctionCall
}

predicate func_7(Parameter vkey_554, VariableAccess target_7) {
		target_7.getTarget()=vkey_554
}

predicate func_8(Parameter vkey_554, BlockStmt target_14, NotExpr target_8) {
		target_8.getOperand().(ConditionalExpr).getCondition().(Literal).getValue()="1"
		and target_8.getOperand().(ConditionalExpr).getThen() instanceof FunctionCall
		and target_8.getOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
		and target_8.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(Literal).getValue()="0"
		and target_8.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_8.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_8.getParent().(IfStmt).getThen()=target_14
}

predicate func_9(Parameter vkey_554, AssignExpr target_9) {
		target_9.getLValue().(ValueFieldAccess).getTarget().getName()="reject_error"
		and target_9.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_9.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_9.getRValue() instanceof UnaryMinusExpr
}

predicate func_10(NotExpr target_8, Function func, AsmStmt target_10) {
		target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
		and target_10.getEnclosingFunction() = func
}

predicate func_11(NotExpr target_8, Function func, ExprStmt target_11) {
		target_11.getExpr() instanceof FunctionCall
		and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
		and target_11.getEnclosingFunction() = func
}

predicate func_12(Parameter vkey_554, AddressOfExpr target_18, PointerFieldAccess target_12) {
		target_12.getTarget().getName()="flags"
		and target_12.getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_12.getQualifier().(VariableAccess).getLocation().isBefore(target_18.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_13(Parameter vkey_554, NotExpr target_8, ExprStmt target_13) {
		target_13.getExpr().(FunctionCall).getTarget().hasName("set_bit")
		and target_13.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="0"
		and target_13.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_13.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_14(Parameter vkey_554, BlockStmt target_14) {
		target_14.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_inc")
		and target_14.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nikeys"
		and target_14.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="user"
		and target_14.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_14.getStmt(1).(ExprStmt).getExpr() instanceof AssignExpr
}

predicate func_15(Parameter vkey_554, AddressOfExpr target_15) {
		target_15.getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_15.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_15.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen() instanceof FunctionCall
}

predicate func_16(Parameter vkey_554, AddressOfExpr target_16) {
		target_16.getOperand().(PointerFieldAccess).getTarget().getName()="nikeys"
		and target_16.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="user"
		and target_16.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
}

predicate func_18(Parameter vkey_554, AddressOfExpr target_18) {
		target_18.getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_18.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_554
		and target_18.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

from Function func, Parameter verror_556, Parameter vkey_554, FunctionCall target_0, Literal target_1, Literal target_2, FunctionCall target_3, UnaryMinusExpr target_5, VariableAccess target_6, VariableAccess target_7, NotExpr target_8, AssignExpr target_9, AsmStmt target_10, ExprStmt target_11, PointerFieldAccess target_12, ExprStmt target_13, BlockStmt target_14, AddressOfExpr target_15, AddressOfExpr target_16, AddressOfExpr target_18
where
func_0(vkey_554, target_0)
and func_1(vkey_554, target_1)
and func_2(vkey_554, target_2)
and func_3(vkey_554, target_3)
and not func_4(vkey_554, target_14, target_15, target_16)
and func_5(verror_556, target_5)
and func_6(vkey_554, target_6)
and func_7(vkey_554, target_7)
and func_8(vkey_554, target_14, target_8)
and func_9(vkey_554, target_9)
and func_10(target_8, func, target_10)
and func_11(target_8, func, target_11)
and func_12(vkey_554, target_18, target_12)
and func_13(vkey_554, target_8, target_13)
and func_14(vkey_554, target_14)
and func_15(vkey_554, target_15)
and func_16(vkey_554, target_16)
and func_18(vkey_554, target_18)
and verror_556.getType().hasName("unsigned int")
and vkey_554.getType().hasName("key *")
and verror_556.getFunction() = func
and vkey_554.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
