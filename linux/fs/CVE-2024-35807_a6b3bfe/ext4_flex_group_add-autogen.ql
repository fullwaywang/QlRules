/**
 * @name linux-a6b3bfe176e8a5b05ec4447404e412c2a3fc92cc-ext4_flex_group_add
 * @id cpp/linux/a6b3bfe176e8a5b05ec4447404e412c2a3fc92cc/ext4-flex-group-add
 * @description linux-a6b3bfe176e8a5b05ec4447404e412c2a3fc92cc-fs/ext4/resize.c-ext4_flex_group_add CVE-2024-35807
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable ves_1540, Variable vgdb_num_1602, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_5) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof FunctionCall
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vgdb_num_1602
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="s_first_meta_bg"
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=ves_1540
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_5.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsb_1535, FunctionCall target_1) {
	target_1.getTarget().hasName("ext4_has_feature_meta_bg")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vsb_1535
}

predicate func_2(Variable ves_1540, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ext4_fsblk_t")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_blocks_count")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ves_1540
}

predicate func_3(Variable ves_1540, Parameter vsb_1535, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("update_backups")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_1535
	and target_3.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("ext4_group_first_block_no")
	and target_3.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_1535
	and target_3.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=ves_1540
	and target_3.getExpr().(FunctionCall).getArgument(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_3.getExpr().(FunctionCall).getArgument(3).(SizeofTypeOperator).getValue()="1024"
	and target_3.getExpr().(FunctionCall).getArgument(4).(Literal).getValue()="0"
}

predicate func_5(Variable vgdb_num_1602, RelationalOperation target_5) {
	 (target_5 instanceof GEExpr or target_5 instanceof LEExpr)
	and target_5.getLesserOperand().(VariableAccess).getTarget()=vgdb_num_1602
	and target_5.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable ves_1540, Variable vgdb_num_1602, Parameter vsb_1535, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_5
where
not func_0(ves_1540, vgdb_num_1602, target_2, target_3, target_5)
and func_1(vsb_1535, target_1)
and func_2(ves_1540, target_2)
and func_3(ves_1540, vsb_1535, target_3)
and func_5(vgdb_num_1602, target_5)
and ves_1540.getType().hasName("ext4_super_block *")
and vgdb_num_1602.getType().hasName("int")
and vsb_1535.getType().hasName("super_block *")
and ves_1540.(LocalVariable).getFunction() = func
and vgdb_num_1602.(LocalVariable).getFunction() = func
and vsb_1535.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
