/**
 * @name linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-io_wq_files_match
 * @id cpp/linux/0f2122045b946241a9e549c2a76cea54fa58a7ff/io-wq-files-match
 * @description linux-0f2122045b946241a9e549c2a76cea54fa58a7ff-io_wq_files_match CVE-2020-29534
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfiles_8064, EqualityOperation target_1) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vfiles_8064
		and target_0.getAnOperand() instanceof EqualityOperation
		and target_0.getAnOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vwork_8062, Variable vfiles_8064, EqualityOperation target_1) {
		target_1.getAnOperand().(PointerFieldAccess).getTarget().getName()="files"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwork_8062
		and target_1.getAnOperand().(VariableAccess).getTarget()=vfiles_8064
}

from Function func, Parameter vwork_8062, Variable vfiles_8064, EqualityOperation target_1
where
not func_0(vfiles_8064, target_1)
and func_1(vwork_8062, vfiles_8064, target_1)
and vwork_8062.getType().hasName("io_wq_work *")
and vfiles_8064.getType().hasName("files_struct *")
and vwork_8062.getFunction() = func
and vfiles_8064.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
