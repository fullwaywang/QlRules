/**
 * @name linux-c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa-vmx_set_msr
 * @id cpp/linux/c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa/vmx-set-msr
 * @description linux-c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa-arch/x86/kvm/vmx/vmx.c-vmx_set_msr CVE-2019-19338
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(SwitchCase target_0 |
		target_0.getExpr().(Literal).getValue()="290"
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vvcpu_1905, Parameter vmsr_info_1905, VariableAccess target_5, LogicalAndExpr target_6, LogicalAndExpr target_7) {
	exists(IfStmt target_1 |
		target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="host_initiated"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsr_info_1905
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="arch_capabilities"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_1905
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="128"
		and target_1.getThen().(ReturnStmt).getExpr().(Literal).getValue()="1"
		and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_5
		and target_6.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vdata_1911, VariableAccess target_5, NotExpr target_8, BitwiseAndExpr target_9) {
	exists(IfStmt target_2 |
		target_2.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdata_1911
		and target_2.getCondition().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="18446744073709551612"
		and target_2.getThen().(ReturnStmt).getExpr().(Literal).getValue()="1"
		and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_5
		and target_8.getOperand().(VariableAccess).getLocation().isBefore(target_2.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
		and target_2.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_9.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_3(VariableAccess target_5, Function func) {
	exists(GotoStmt target_3 |
		target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_5
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(VariableAccess target_5, Function func) {
	exists(GotoStmt target_4 |
		target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_5
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vmsr_index_1910, VariableAccess target_5) {
		target_5.getTarget()=vmsr_index_1910
}

predicate func_6(Parameter vvcpu_1905, Parameter vmsr_info_1905, ReturnStmt target_10, LogicalAndExpr target_6) {
		target_6.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="host_initiated"
		and target_6.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsr_info_1905
		and target_6.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("guest_cpuid_has")
		and target_6.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_1905
		and target_6.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddExpr).getValue()="602"
		and target_6.getParent().(IfStmt).getThen()=target_10
}

predicate func_7(Parameter vvcpu_1905, Parameter vmsr_info_1905, ReturnStmt target_11, LogicalAndExpr target_7) {
		target_7.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="host_initiated"
		and target_7.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsr_info_1905
		and target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("guest_cpuid_has")
		and target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_1905
		and target_7.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddExpr).getValue()="602"
		and target_7.getParent().(IfStmt).getThen()=target_11
}

predicate func_8(Variable vdata_1911, NotExpr target_8) {
		target_8.getOperand().(VariableAccess).getTarget()=vdata_1911
		and target_8.getParent().(IfStmt).getThen() instanceof BreakStmt
}

predicate func_9(Variable vdata_1911, BitwiseAndExpr target_9) {
		target_9.getLeftOperand().(VariableAccess).getTarget()=vdata_1911
		and target_9.getRightOperand().(ComplementExpr).getValue()="18446744073709551614"
}

predicate func_10(LogicalAndExpr target_6, Function func, ReturnStmt target_10) {
		target_10.getExpr().(Literal).getValue()="1"
		and target_10.getParent().(IfStmt).getCondition()=target_6
		and target_10.getEnclosingFunction() = func
}

predicate func_11(LogicalAndExpr target_7, Function func, ReturnStmt target_11) {
		target_11.getExpr().(Literal).getValue()="1"
		and target_11.getParent().(IfStmt).getCondition()=target_7
		and target_11.getEnclosingFunction() = func
}

from Function func, Parameter vvcpu_1905, Parameter vmsr_info_1905, Variable vmsr_index_1910, Variable vdata_1911, VariableAccess target_5, LogicalAndExpr target_6, LogicalAndExpr target_7, NotExpr target_8, BitwiseAndExpr target_9, ReturnStmt target_10, ReturnStmt target_11
where
not func_0(func)
and not func_1(vvcpu_1905, vmsr_info_1905, target_5, target_6, target_7)
and not func_2(vdata_1911, target_5, target_8, target_9)
and not func_3(target_5, func)
and not func_4(target_5, func)
and func_5(vmsr_index_1910, target_5)
and func_6(vvcpu_1905, vmsr_info_1905, target_10, target_6)
and func_7(vvcpu_1905, vmsr_info_1905, target_11, target_7)
and func_8(vdata_1911, target_8)
and func_9(vdata_1911, target_9)
and func_10(target_6, func, target_10)
and func_11(target_7, func, target_11)
and vvcpu_1905.getType().hasName("kvm_vcpu *")
and vmsr_info_1905.getType().hasName("msr_data *")
and vmsr_index_1910.getType().hasName("u32")
and vdata_1911.getType().hasName("u64")
and vvcpu_1905.getFunction() = func
and vmsr_info_1905.getFunction() = func
and vmsr_index_1910.(LocalVariable).getFunction() = func
and vdata_1911.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
