/**
 * @name linux-23adbe12ef7d3d4195e80800ab36b37bee28cd03-generic_permission
 * @id cpp/linux/23adbe12ef7d3d4195e80800ab36b37bee28cd03/generic-permission
 * @description linux-23adbe12ef7d3d4195e80800ab36b37bee28cd03-fs/namei.c-generic_permission CVE-2014-4014
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_322, ReturnStmt target_4, FunctionCall target_0) {
		target_0.getTarget().hasName("inode_capable")
		and not target_0.getTarget().hasName("capable_wrt_inode_uidgid")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vinode_322
		and target_0.getArgument(1).(Literal).getValue()="1"
		and target_0.getParent().(IfStmt).getThen()=target_4
}

predicate func_1(Parameter vinode_322, ReturnStmt target_5, FunctionCall target_1) {
		target_1.getTarget().hasName("inode_capable")
		and not target_1.getTarget().hasName("capable_wrt_inode_uidgid")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vinode_322
		and target_1.getArgument(1).(Literal).getValue()="2"
		and target_1.getParent().(IfStmt).getThen()=target_5
}

predicate func_2(Parameter vinode_322, ReturnStmt target_6, FunctionCall target_2) {
		target_2.getTarget().hasName("inode_capable")
		and not target_2.getTarget().hasName("capable_wrt_inode_uidgid")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vinode_322
		and target_2.getArgument(1).(Literal).getValue()="1"
		and target_2.getParent().(IfStmt).getThen()=target_6
}

predicate func_3(Parameter vinode_322, ReturnStmt target_7, FunctionCall target_3) {
		target_3.getTarget().hasName("inode_capable")
		and not target_3.getTarget().hasName("capable_wrt_inode_uidgid")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vinode_322
		and target_3.getArgument(1).(Literal).getValue()="2"
		and target_3.getParent().(IfStmt).getThen()=target_7
}

predicate func_4(FunctionCall target_0, Function func, ReturnStmt target_4) {
		target_4.getExpr().(Literal).getValue()="0"
		and target_4.getParent().(IfStmt).getCondition()=target_0
		and target_4.getEnclosingFunction() = func
}

predicate func_5(NotExpr target_8, Function func, ReturnStmt target_5) {
		target_5.getExpr().(Literal).getValue()="0"
		and target_5.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_8
		and target_5.getEnclosingFunction() = func
}

predicate func_6(LogicalOrExpr target_9, Function func, ReturnStmt target_6) {
		target_6.getExpr().(Literal).getValue()="0"
		and target_6.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_9
		and target_6.getEnclosingFunction() = func
}

predicate func_7(EqualityOperation target_10, Function func, ReturnStmt target_7) {
		target_7.getExpr().(Literal).getValue()="0"
		and target_7.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_10
		and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, NotExpr target_8) {
		target_8.getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_8.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
		and target_8.getEnclosingFunction() = func
}

predicate func_9(Parameter vinode_322, LogicalOrExpr target_9) {
		target_9.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_9.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
		and target_9.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="i_mode"
		and target_9.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_322
		and target_9.getAnOperand().(BitwiseAndExpr).getRightOperand().(BitwiseOrExpr).getValue()="73"
}

predicate func_10(Function func, EqualityOperation target_10) {
		target_10.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_10.getAnOperand().(Literal).getValue()="4"
		and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vinode_322, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, FunctionCall target_3, ReturnStmt target_4, ReturnStmt target_5, ReturnStmt target_6, ReturnStmt target_7, NotExpr target_8, LogicalOrExpr target_9, EqualityOperation target_10
where
func_0(vinode_322, target_4, target_0)
and func_1(vinode_322, target_5, target_1)
and func_2(vinode_322, target_6, target_2)
and func_3(vinode_322, target_7, target_3)
and func_4(target_0, func, target_4)
and func_5(target_8, func, target_5)
and func_6(target_9, func, target_6)
and func_7(target_10, func, target_7)
and func_8(func, target_8)
and func_9(vinode_322, target_9)
and func_10(func, target_10)
and vinode_322.getType().hasName("inode *")
and vinode_322.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
