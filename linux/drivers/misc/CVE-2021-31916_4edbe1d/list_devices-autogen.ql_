/**
 * @name linux-4edbe1d7bcffcd6269f3b5eb63f710393ff2ec7a-list_devices
 * @id cpp/linux/4edbe1d7bcffcd6269f3b5eb63f710393ff2ec7a/list-devices
 * @description linux-4edbe1d7bcffcd6269f3b5eb63f710393ff2ec7a-drivers/md/dm-ioctl.c-list_devices CVE-2021-31916
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlen_510, BlockStmt target_2, AddressOfExpr target_3, RelationalOperation target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof RelationalOperation
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_510
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(SizeofExprOperator).getValue()="8"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_1.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vlen_510, Variable vneeded_510, BlockStmt target_2, RelationalOperation target_1) {
	 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getLesserOperand().(VariableAccess).getTarget()=vlen_510
	and target_1.getGreaterOperand().(VariableAccess).getTarget()=vneeded_510
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("dm_ioctl *")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="256"
	and target_2.getStmt(1).(GotoStmt).getName() ="out"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vlen_510, AddressOfExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vlen_510
}

from Function func, Variable vlen_510, Variable vneeded_510, RelationalOperation target_1, BlockStmt target_2, AddressOfExpr target_3
where
not func_0(vlen_510, target_2, target_3, target_1)
and func_1(vlen_510, vneeded_510, target_2, target_1)
and func_2(func, target_2)
and func_3(vlen_510, target_3)
and vlen_510.getType().hasName("size_t")
and vneeded_510.getType().hasName("size_t")
and vlen_510.(LocalVariable).getFunction() = func
and vneeded_510.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
