/**
 * @name linux-468f6eafa6c44cb2c5d8aad35e12f06c240a812a-adjust_scalar_min_max_vals
 * @id cpp/linux/468f6eafa6c44cb2c5d8aad35e12f06c240a812a/adjust-scalar-min-max-vals
 * @description linux-468f6eafa6c44cb2c5d8aad35e12f06c240a812a-kernel/bpf/verifier.c-adjust_scalar_min_max_vals CVE-2017-17852
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="63"
	and not target_0.getValue()="7"
	and target_0.getParent().(GTExpr).getParent().(IfStmt).getCondition() instanceof RelationalOperation
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="63"
	and not target_1.getValue()="7"
	and target_1.getParent().(GTExpr).getParent().(IfStmt).getCondition() instanceof RelationalOperation
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vinsn_2021, Parameter vdst_reg_2022, Parameter vsrc_reg_2023, ExprStmt target_9, IfStmt target_2) {
	target_2.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="code"
	and target_2.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2021
	and target_2.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="7"
	and target_2.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="7"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("coerce_reg_to_size")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdst_reg_2022
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="4"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("coerce_reg_to_size")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vsrc_reg_2023
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="4"
	and target_2.getLocation().isBefore(target_9.getLocation())
}

predicate func_3(Variable vumax_val_2029, BlockStmt target_10, RelationalOperation target_11) {
exists(RelationalOperation target_3 |
	 (target_3 instanceof GEExpr or target_3 instanceof LEExpr)
	and target_3.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
	and target_3.getLesserOperand().(VariableAccess).getType().hasName("u64")
	and target_3.getParent().(IfStmt).getThen()=target_10
	and target_3.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_11.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(VariableAccess).getLocation()))
}

predicate func_4(Variable vumax_val_2029, BlockStmt target_12, ExprStmt target_13) {
exists(RelationalOperation target_4 |
	 (target_4 instanceof GEExpr or target_4 instanceof LEExpr)
	and target_4.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
	and target_4.getLesserOperand().(VariableAccess).getType().hasName("u64")
	and target_4.getParent().(IfStmt).getThen()=target_12
	and target_4.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_13.getExpr().(AssignRShiftExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_5(Variable vumax_val_2029, BlockStmt target_10, VariableAccess target_5) {
	target_5.getTarget()=vumax_val_2029
	and target_5.getParent().(GTExpr).getLesserOperand() instanceof Literal
	and target_5.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_10
}

predicate func_6(Variable vumax_val_2029, BlockStmt target_12, VariableAccess target_6) {
	target_6.getTarget()=vumax_val_2029
	and target_6.getParent().(GTExpr).getLesserOperand() instanceof Literal
	and target_6.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_12
}

predicate func_7(Variable vumax_val_2029, BlockStmt target_10, RelationalOperation target_11, RelationalOperation target_7) {
	 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
	and target_7.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
	and target_7.getLesserOperand() instanceof Literal
	and target_7.getParent().(IfStmt).getThen()=target_10
	and target_7.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_11.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(VariableAccess).getLocation())
}

predicate func_8(Variable vumax_val_2029, BlockStmt target_12, ExprStmt target_13, RelationalOperation target_8) {
	 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
	and target_8.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
	and target_8.getLesserOperand() instanceof Literal
	and target_8.getParent().(IfStmt).getThen()=target_12
	and target_8.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_13.getExpr().(AssignRShiftExpr).getRValue().(VariableAccess).getLocation())
}

predicate func_9(Parameter vsrc_reg_2023, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("s64")
	and target_9.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="smin_value"
	and target_9.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vsrc_reg_2023
}

predicate func_10(Parameter vinsn_2021, RelationalOperation target_7, BlockStmt target_10) {
	target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mark_reg_unknown")
	and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
	and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
	and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="dst_reg"
	and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2021
	and target_10.getParent().(IfStmt).getCondition()=target_7
}

predicate func_11(Parameter vdst_reg_2022, Variable vumax_val_2029, RelationalOperation target_11) {
	 (target_11 instanceof GTExpr or target_11 instanceof LTExpr)
	and target_11.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="umax_value"
	and target_11.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_reg_2022
	and target_11.getLesserOperand().(BinaryBitwiseOperation).getLeftOperand().(Literal).getValue()="1"
	and target_11.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getLeftOperand().(Literal).getValue()="63"
	and target_11.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget()=vumax_val_2029
}

predicate func_12(Parameter vinsn_2021, RelationalOperation target_8, BlockStmt target_12) {
	target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mark_reg_unknown")
	and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
	and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
	and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="dst_reg"
	and target_12.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2021
	and target_12.getParent().(IfStmt).getCondition()=target_8
}

predicate func_13(Parameter vdst_reg_2022, Variable vumax_val_2029, ExprStmt target_13) {
	target_13.getExpr().(AssignRShiftExpr).getLValue().(PointerFieldAccess).getTarget().getName()="umin_value"
	and target_13.getExpr().(AssignRShiftExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_reg_2022
	and target_13.getExpr().(AssignRShiftExpr).getRValue().(VariableAccess).getTarget()=vumax_val_2029
}

from Function func, Parameter vinsn_2021, Parameter vdst_reg_2022, Parameter vsrc_reg_2023, Variable vumax_val_2029, Literal target_0, Literal target_1, IfStmt target_2, VariableAccess target_5, VariableAccess target_6, RelationalOperation target_7, RelationalOperation target_8, ExprStmt target_9, BlockStmt target_10, RelationalOperation target_11, BlockStmt target_12, ExprStmt target_13
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(vinsn_2021, vdst_reg_2022, vsrc_reg_2023, target_9, target_2)
and not func_3(vumax_val_2029, target_10, target_11)
and not func_4(vumax_val_2029, target_12, target_13)
and func_5(vumax_val_2029, target_10, target_5)
and func_6(vumax_val_2029, target_12, target_6)
and func_7(vumax_val_2029, target_10, target_11, target_7)
and func_8(vumax_val_2029, target_12, target_13, target_8)
and func_9(vsrc_reg_2023, target_9)
and func_10(vinsn_2021, target_7, target_10)
and func_11(vdst_reg_2022, vumax_val_2029, target_11)
and func_12(vinsn_2021, target_8, target_12)
and func_13(vdst_reg_2022, vumax_val_2029, target_13)
and vinsn_2021.getType().hasName("bpf_insn *")
and vdst_reg_2022.getType().hasName("bpf_reg_state *")
and vsrc_reg_2023.getType().hasName("bpf_reg_state")
and vumax_val_2029.getType().hasName("u64")
and vinsn_2021.getFunction() = func
and vdst_reg_2022.getFunction() = func
and vsrc_reg_2023.getFunction() = func
and vumax_val_2029.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
