/**
 * @name linux-952c3fce297f12c7ff59380adb66b564e2bc9b64-__debugfs_file_removed
 * @id cpp/linux/952c3fce297f12c7ff59380adb66b564e2bc9b64/--debugfs-file-removed
 * @description linux-952c3fce297f12c7ff59380adb66b564e2bc9b64-fs/debugfs/inode.c-__debugfs_file_removed CVE-2024-35793
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfsd_741, AddressOfExpr target_0) {
	target_0.getOperand().(ValueFieldAccess).getTarget().getName()="active_users_drained"
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfsd_741
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_1(Variable vfsd_741, BlockStmt target_5, FunctionCall target_1) {
	target_1.getTarget().hasName("refcount_dec_and_test")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="active_users"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfsd_741
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_2(NotExpr target_3, Function func, ReturnStmt target_2) {
	target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_2.getEnclosingFunction() = func
}

predicate func_3(BlockStmt target_5, Function func, NotExpr target_3) {
	target_3.getOperand() instanceof FunctionCall
	and target_3.getParent().(IfStmt).getThen()=target_5
	and target_3.getEnclosingFunction() = func
}

predicate func_4(NotExpr target_3, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("wait_for_completion")
	and target_4.getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, BlockStmt target_5) {
	target_5.getStmt(0) instanceof ExprStmt
	and target_5.getStmt(1) instanceof ReturnStmt
	and target_5.getEnclosingFunction() = func
}

from Function func, Variable vfsd_741, AddressOfExpr target_0, FunctionCall target_1, ReturnStmt target_2, NotExpr target_3, ExprStmt target_4, BlockStmt target_5
where
func_0(vfsd_741, target_0)
and func_1(vfsd_741, target_5, target_1)
and func_2(target_3, func, target_2)
and func_3(target_5, func, target_3)
and func_4(target_3, func, target_4)
and func_5(func, target_5)
and vfsd_741.getType().hasName("debugfs_fsdata *")
and vfsd_741.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
