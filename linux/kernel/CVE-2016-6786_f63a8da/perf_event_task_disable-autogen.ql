/**
 * @name linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-perf_event_task_disable
 * @id cpp/linux/f63a8daa5812afef4f06c962351687e1ff9ccb2b/perf-event-task-disable
 * @description linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-kernel/events/core.c-perf_event_task_disable CVE-2016-6786
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vevent_3910, ValueFieldAccess target_3) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("perf_event_context *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("perf_event_ctx_lock")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vevent_3910
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vevent_3910, ExprStmt target_4) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("perf_event_ctx_unlock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vevent_3910
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("perf_event_context *")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vevent_3910, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="next"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="owner_entry"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_3910
}

predicate func_4(Variable vevent_3910, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("perf_event_for_each_child")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vevent_3910
	and target_4.getExpr().(FunctionCall).getArgument(1) instanceof FunctionAccess
}

from Function func, Variable vevent_3910, ValueFieldAccess target_3, ExprStmt target_4
where
not func_1(vevent_3910, target_3)
and not func_2(vevent_3910, target_4)
and func_3(vevent_3910, target_3)
and func_4(vevent_3910, target_4)
and vevent_3910.getType().hasName("perf_event *")
and vevent_3910.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
