/**
 * @name linux-95baa60a0da80a0143e3ddd4d3725758b4513825-ip6_ra_control
 * @id cpp/linux/95baa60a0da80a0143e3ddd4d3725758b4513825/ip6-ra-control
 * @description linux-95baa60a0da80a0143e3ddd4d3725758b4513825-net/ipv6/ipv6_sockglue.c-ip6_ra_control CVE-2019-12378
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnew_ra_64, Parameter vsel_62, PointerDereferenceExpr target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vsel_62
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vnew_ra_64
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_4.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnew_ra_64, PointerDereferenceExpr target_1) {
		target_1.getOperand().(VariableAccess).getTarget()=vnew_ra_64
}

predicate func_2(Variable vnew_ra_64, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_ra_64
}

predicate func_3(Variable vnew_ra_64, Parameter vsel_62, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnew_ra_64
		and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vsel_62
		and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
		and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("kmalloc")
		and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(SizeofExprOperator).getValue()="32"
		and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
		and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
}

predicate func_4(Parameter vsel_62, BlockStmt target_5, RelationalOperation target_4) {
		 (target_4 instanceof GEExpr or target_4 instanceof LEExpr)
		and target_4.getGreaterOperand().(VariableAccess).getTarget()=vsel_62
		and target_4.getLesserOperand().(Literal).getValue()="0"
		and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Variable vnew_ra_64, BlockStmt target_5) {
		target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_raw_write_unlock_bh")
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("rwlock_t")
		and target_5.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_5.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_ra_64
		and target_5.getStmt(2).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-98"
}

from Function func, Variable vnew_ra_64, Parameter vsel_62, PointerDereferenceExpr target_1, ExprStmt target_2, ExprStmt target_3, RelationalOperation target_4, BlockStmt target_5
where
not func_0(vnew_ra_64, vsel_62, target_1, target_2, target_3, target_4, func)
and func_1(vnew_ra_64, target_1)
and func_2(vnew_ra_64, target_2)
and func_3(vnew_ra_64, vsel_62, target_3)
and func_4(vsel_62, target_5, target_4)
and func_5(vnew_ra_64, target_5)
and vnew_ra_64.getType().hasName("ip6_ra_chain *")
and vsel_62.getType().hasName("int")
and vnew_ra_64.(LocalVariable).getFunction() = func
and vsel_62.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
