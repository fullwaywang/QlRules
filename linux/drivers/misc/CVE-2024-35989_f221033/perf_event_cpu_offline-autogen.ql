/**
 * @name linux-f221033f5c24659dc6ad7e5cf18fb1b075f4a8be-perf_event_cpu_offline
 * @id cpp/linux/f221033f5c24659dc6ad7e5cf18fb1b075f4a8be/perf-event-cpu-offline
 * @description linux-f221033f5c24659dc6ad7e5cf18fb1b075f4a8be-drivers/dma/idxd/perfmon.c-perf_event_cpu_offline CVE-2024-35989
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtarget_523, Variable vperfmon_dsa_cpu_mask, RelationalOperation target_3, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("cpumask_set_cpu")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtarget_523
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vperfmon_dsa_cpu_mask
	and target_0.getParent().(IfStmt).getCondition()=target_3
}

predicate func_1(Parameter vcpu_520, Variable vidxd_pmu_522, Variable vtarget_523, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("perf_pmu_migrate_context")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="pmu"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vidxd_pmu_522
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcpu_520
	and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vtarget_523
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vtarget_523, RelationalOperation target_3, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtarget_523
	and target_2.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="4294967295"
	and target_2.getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Variable vtarget_523, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget()=vtarget_523
	and target_3.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Parameter vcpu_520, Variable vidxd_pmu_522, Variable vtarget_523, Variable vperfmon_dsa_cpu_mask, ExprStmt target_0, ExprStmt target_1, ExprStmt target_2, RelationalOperation target_3
where
func_0(vtarget_523, vperfmon_dsa_cpu_mask, target_3, target_0)
and func_1(vcpu_520, vidxd_pmu_522, vtarget_523, func, target_1)
and func_2(vtarget_523, target_3, target_2)
and func_3(vtarget_523, target_3)
and vcpu_520.getType().hasName("unsigned int")
and vidxd_pmu_522.getType().hasName("idxd_pmu *")
and vtarget_523.getType().hasName("unsigned int")
and vperfmon_dsa_cpu_mask.getType().hasName("cpumask_t")
and vcpu_520.getFunction() = func
and vidxd_pmu_522.(LocalVariable).getFunction() = func
and vtarget_523.(LocalVariable).getFunction() = func
and not vperfmon_dsa_cpu_mask.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
