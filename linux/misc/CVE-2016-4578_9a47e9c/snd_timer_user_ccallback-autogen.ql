/**
 * @name linux-9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6-snd_timer_user_ccallback
 * @id cpp/linux/9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6/snd-timer-user-ccallback
 * @description linux-9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6-sound/core/timer.c-snd_timer_user_ccallback CVE-2016-4578
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vr1_1218, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vr1_1218
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="32"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vr1_1218, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="event"
	and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vr1_1218
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vr1_1218, ExprStmt target_1
where
not func_0(vr1_1218, target_1, func)
and func_1(vr1_1218, target_1)
and vr1_1218.getType().hasName("snd_timer_tread")
and vr1_1218.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
