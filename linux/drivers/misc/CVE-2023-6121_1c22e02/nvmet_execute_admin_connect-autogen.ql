/**
 * @name linux-1c22e0295a5eb571c27b53c7371f95699ef705ff-nvmet_execute_admin_connect
 * @id cpp/linux/1c22e0295a5eb571c27b53c7371f95699ef705ff/nvmet-execute-admin-connect
 * @description linux-1c22e0295a5eb571c27b53c7371f95699ef705ff-drivers/nvme/target/fabrics-cmd.c-nvmet_execute_admin_connect CVE-2023-6121
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vd_210, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="subsysnqn"
	and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vd_210
	and target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(SubExpr).getValue()="255"
	and target_0.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vd_210, ExprStmt target_2, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="hostnqn"
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vd_210
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(SubExpr).getValue()="255"
	and target_1.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation()))
}

predicate func_2(Variable vd_210, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u16")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nvmet_alloc_ctrl")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="subsysnqn"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vd_210
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="hostnqn"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vd_210
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("nvmet_req *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="kato"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nvmf_connect_command *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("nvmet_ctrl *")
}

predicate func_3(Variable vd_210, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("_printk")
	and target_3.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="4nvmet: connect attempt for invalid controller ID %#x\n"
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="cntlid"
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vd_210
}

from Function func, Variable vd_210, ExprStmt target_2, ExprStmt target_3
where
not func_0(vd_210, target_2, target_3, func)
and not func_1(vd_210, target_2, func)
and func_2(vd_210, target_2)
and func_3(vd_210, target_3)
and vd_210.getType().hasName("nvmf_connect_data *")
and vd_210.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
