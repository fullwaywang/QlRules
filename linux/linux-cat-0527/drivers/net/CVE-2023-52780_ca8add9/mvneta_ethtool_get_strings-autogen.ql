/**
 * @name linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-mvneta_ethtool_get_strings
 * @id cpp/linux/ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed/mvneta-ethtool-get-strings
 * @description linux-ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed-drivers/net/ethernet/marvell/mvneta.c-mvneta_ethtool_get_strings CVE-2023-52780
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="bm_priv"
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("mvneta_port *")
	and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_0.getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vdata_4790, EqualityOperation target_3, ExprStmt target_1) {
	target_1.getExpr().(AssignPointerAddExpr).getLValue().(VariableAccess).getTarget()=vdata_4790
	and target_1.getExpr().(AssignPointerAddExpr).getRValue().(MulExpr).getValue()="1344"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Parameter vdata_4790, EqualityOperation target_3, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("page_pool_ethtool_stats_get_strings")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_4790
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, EqualityOperation target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u32")
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vdata_4790, ExprStmt target_1, ExprStmt target_2, EqualityOperation target_3
where
not func_0(target_3, func)
and func_1(vdata_4790, target_3, target_1)
and func_2(vdata_4790, target_3, target_2)
and func_3(func, target_3)
and vdata_4790.getType().hasName("u8 *")
and vdata_4790.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
