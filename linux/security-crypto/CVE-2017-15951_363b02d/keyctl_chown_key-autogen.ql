/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-keyctl_chown_key
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/keyctl-chown-key
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/keyctl.c-keyctl_chown_key CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vkey_828, LogicalAndExpr target_5, Literal target_0) {
		target_0.getValue()="3"
		and not target_0.getValue()="2"
		and target_0.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
		and target_0.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_0.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_5.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_1(Variable vkey_828, LogicalOrExpr target_6, Literal target_1) {
		target_1.getValue()="3"
		and not target_1.getValue()="2"
		and target_1.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
		and target_1.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_1.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_1.getParent().(FunctionCall).getParent().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_2(Variable vkey_828, BlockStmt target_7, AddressOfExpr target_8) {
	exists(EqualityOperation target_2 |
		target_2.getAnOperand().(PointerFieldAccess).getTarget().getName()="state"
		and target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_2.getParent().(IfStmt).getThen()=target_7
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vkey_828, VariableAccess target_3) {
		target_3.getTarget()=vkey_828
		and target_3.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ConditionalExpr).getThen() instanceof FunctionCall
}

predicate func_4(Variable vkey_828, BlockStmt target_7, ConditionalExpr target_4) {
		target_4.getCondition().(Literal).getValue()="1"
		and target_4.getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
		and target_4.getThen().(FunctionCall).getArgument(0).(Literal).getValue()="0"
		and target_4.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_4.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_4.getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
		and target_4.getElse().(FunctionCall).getArgument(0).(Literal).getValue()="0"
		and target_4.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_4.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_4.getParent().(IfStmt).getThen()=target_7
}

predicate func_5(Variable vkey_828, LogicalAndExpr target_5) {
		target_5.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("uid_t")
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="4294967295"
		and target_5.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("uid_eq")
		and target_5.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kuid_t")
		and target_5.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="uid"
		and target_5.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
}

predicate func_6(Variable vkey_828, LogicalOrExpr target_6) {
		target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="qnkeys"
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key_user *")
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="qnbytes"
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key_user *")
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="quotalen"
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_6.getAnOperand().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="qnbytes"
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key_user *")
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="quotalen"
		and target_6.getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="qnbytes"
		and target_6.getAnOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key_user *")
}

predicate func_7(Variable vkey_828, BlockStmt target_7) {
		target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_dec")
		and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nikeys"
		and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="user"
		and target_7.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_inc")
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nikeys"
		and target_7.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key_user *")
}

predicate func_8(Variable vkey_828, AddressOfExpr target_8) {
		target_8.getOperand().(PointerFieldAccess).getTarget().getName()="nkeys"
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="user"
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_828
}

from Function func, Variable vkey_828, Literal target_0, Literal target_1, VariableAccess target_3, ConditionalExpr target_4, LogicalAndExpr target_5, LogicalOrExpr target_6, BlockStmt target_7, AddressOfExpr target_8
where
func_0(vkey_828, target_5, target_0)
and func_1(vkey_828, target_6, target_1)
and not func_2(vkey_828, target_7, target_8)
and func_3(vkey_828, target_3)
and func_4(vkey_828, target_7, target_4)
and func_5(vkey_828, target_5)
and func_6(vkey_828, target_6)
and func_7(vkey_828, target_7)
and func_8(vkey_828, target_8)
and vkey_828.getType().hasName("key *")
and vkey_828.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
