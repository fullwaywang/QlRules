/**
 * @name linux-580077855a40741cf511766129702d97ff02f4d9-nft_trans_alloc_gfp
 * @id cpp/linux/580077855a40741cf511766129702d97ff02f4d9/nft-trans-alloc-gfp
 * @description linux-580077855a40741cf511766129702d97ff02f4d9-net/netfilter/nf_tables_api.c-nft_trans_alloc_gfp CVE-2023-1095
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtrans_150, ExprStmt target_1, EqualityOperation target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtrans_150
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtrans_150, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="msg_type"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtrans_150
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_2(Variable vtrans_150, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget()=vtrans_150
	and target_2.getRightOperand().(Literal).getValue()="0"
}

from Function func, Variable vtrans_150, ExprStmt target_1, EqualityOperation target_2
where
not func_0(vtrans_150, target_1, target_2, func)
and func_1(vtrans_150, target_1)
and func_2(vtrans_150, target_2)
and vtrans_150.getType().hasName("nft_trans *")
and vtrans_150.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
