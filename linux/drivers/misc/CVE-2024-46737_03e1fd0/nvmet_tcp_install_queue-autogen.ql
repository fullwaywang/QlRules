/**
 * @name linux-03e1fd0327fa5e2174567f5fe9290fe21d21b8f4-nvmet_tcp_install_queue
 * @id cpp/linux/03e1fd0327fa5e2174567f5fe9290fe21d21b8f4/nvmet-tcp-install-queue
 * @description linux-03e1fd0327fa5e2174567f5fe9290fe21d21b8f4-drivers/nvme/target/tcp.c-nvmet_tcp_install_queue CVE-2024-46737
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vqueue_1745, FunctionCall target_2) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="nr_cmds"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vqueue_1745
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_3.getCondition()=target_2
		)
	)
)
}

predicate func_1(FunctionCall target_2, Function func, ReturnStmt target_1) {
	target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vqueue_1745, FunctionCall target_2) {
	target_2.getTarget().hasName("nvmet_tcp_alloc_cmds")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vqueue_1745
}

from Function func, Variable vqueue_1745, ReturnStmt target_1, FunctionCall target_2
where
not func_0(vqueue_1745, target_2)
and func_1(target_2, func, target_1)
and func_2(vqueue_1745, target_2)
and vqueue_1745.getType().hasName("nvmet_tcp_queue *")
and vqueue_1745.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
