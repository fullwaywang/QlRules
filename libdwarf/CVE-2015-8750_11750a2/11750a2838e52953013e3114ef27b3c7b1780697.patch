commit 11750a2838e52953013e3114ef27b3c7b1780697
Author: David Anderson <davea42@earthlink.net>
Date:   Wed Dec 30 13:40:25 2015 -0800

    A DWARF related section marked SHT_NOBITS (elf section type)
    is an error in the elf object.  Now detected.
    dwarf_elf_access.c

diff --git a/libdwarf/ChangeLog b/libdwarf/ChangeLog
index 89fcb95d..57fb87a1 100644
--- a/libdwarf/ChangeLog
+++ b/libdwarf/ChangeLog
@@ -1,3 +1,7 @@
+2015-12-30  David Anderson
+     * dwarf_elf_access.c(dwarf_elf_object_access_load_section):
+       now test for a NULL data pointer from libelf. Problem caused
+       by DWARF related section being marked SHT_NOBITS.
 2015-12-29  David Anderson
      * dwarf_loc2.c: ll_dbg was not set, two places.
        dwarf_loc_head_c_dealloc() was not iterating
diff --git a/libdwarf/dwarf_elf_access.c b/libdwarf/dwarf_elf_access.c
index a69c29c7..72a139db 100644
--- a/libdwarf/dwarf_elf_access.c
+++ b/libdwarf/dwarf_elf_access.c
@@ -1201,7 +1201,9 @@ dwarf_elf_object_relocate_a_section(void* obj_in,
     return res;
 }
 
-/* dwarf_elf_object_access_load_section */
+/*  dwarf_elf_object_access_load_section()
+    We are only asked to load sections that
+    libdwarf really needs. */
 static int
 dwarf_elf_object_access_load_section(void* obj_in,
     Dwarf_Half section_index,
@@ -1235,6 +1237,16 @@ dwarf_elf_object_access_load_section(void* obj_in,
             *error = DW_DLE_MDE;
             return DW_DLV_ERROR;
         }
+        if (!data->d_buf) {
+            /*  If NULL it means 'the section has no data'
+                according to libelf documentation.
+                No DWARF-related section should ever have
+                'no data'.  Happens if a section type is
+                SHT_NOBITS and no section libdwarf
+                wants to look at should be SHT_NOBITS. */
+            *error = DW_DLE_MDE;
+            return DW_DLV_ERROR;
+        }
         *section_data = data->d_buf;
     }
     return DW_DLV_OK;
