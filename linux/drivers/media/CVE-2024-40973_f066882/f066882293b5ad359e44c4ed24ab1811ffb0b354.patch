commit f066882293b5ad359e44c4ed24ab1811ffb0b354
Author: Fullway Wang <fullwaywang@outlook.com>
Date:   Thu Jan 18 02:35:06 2024 +0000

    media: mtk-vcodec: potential null pointer deference in SCP
    
    [ Upstream commit 53dbe08504442dc7ba4865c09b3bbf5fe849681b ]
    
    The return value of devm_kzalloc() needs to be checked to avoid
    NULL pointer deference. This is similar to CVE-2022-3113.
    
    Link: https://lore.kernel.org/linux-media/PH7PR20MB5925094DAE3FD750C7E39E01BF712@PH7PR20MB5925.namprd20.prod.outlook.com
    Signed-off-by: Fullway Wang <fullwaywang@outlook.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/drivers/media/platform/mediatek/vcodec/common/mtk_vcodec_fw_scp.c b/drivers/media/platform/mediatek/vcodec/common/mtk_vcodec_fw_scp.c
index 9e744d07a1e8..774487fb72a3 100644
--- a/drivers/media/platform/mediatek/vcodec/common/mtk_vcodec_fw_scp.c
+++ b/drivers/media/platform/mediatek/vcodec/common/mtk_vcodec_fw_scp.c
@@ -79,6 +79,8 @@ struct mtk_vcodec_fw *mtk_vcodec_fw_scp_init(void *priv, enum mtk_vcodec_fw_use
 	}
 
 	fw = devm_kzalloc(&plat_dev->dev, sizeof(*fw), GFP_KERNEL);
+	if (!fw)
+		return ERR_PTR(-ENOMEM);
 	fw->type = SCP;
 	fw->ops = &mtk_vcodec_rproc_msg;
 	fw->scp = scp;
