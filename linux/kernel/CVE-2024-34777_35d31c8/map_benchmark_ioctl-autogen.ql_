/**
 * @name linux-35d31c8bd4722b107f5a2f5ddddce839de04b936-map_benchmark_ioctl
 * @id cpp/linux/35d31c8bd4722b107f5a2f5ddddce839de04b936/map-benchmark-ioctl
 * @description linux-35d31c8bd4722b107f5a2f5ddddce839de04b936-kernel/dma/map_benchmark.c-map_benchmark_ioctl CVE-2024-34777
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmap_206, BlockStmt target_2, LogicalAndExpr target_3, ValueFieldAccess target_4) {
exists(LogicalOrExpr target_0 |
	exists(LogicalOrExpr obj_0 | obj_0=target_0.getLeftOperand() |
		exists(RelationalOperation obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getLesserOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="bparam"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vmap_206
				)
				and obj_2.getTarget().getName()="node"
			)
			and obj_1.getGreaterOperand().(Literal).getValue()="0"
		)
		and exists(RelationalOperation obj_4 | obj_4=obj_0.getRightOperand() |
			exists(ValueFieldAccess obj_5 | obj_5=obj_4.getGreaterOperand() |
				exists(PointerFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
					obj_6.getTarget().getName()="bparam"
					and obj_6.getQualifier().(VariableAccess).getTarget()=vmap_206
				)
				and obj_5.getTarget().getName()="node"
			)
			and obj_4.getLesserOperand().(BinaryBitwiseOperation).getValue()="1024"
		)
	)
	and exists(LogicalAndExpr obj_7 | obj_7=target_0.getParent() |
		exists(EqualityOperation obj_8 | obj_8=obj_7.getLeftOperand() |
			exists(ValueFieldAccess obj_9 | obj_9=obj_8.getLeftOperand() |
				exists(PointerFieldAccess obj_10 | obj_10=obj_9.getQualifier() |
					obj_10.getTarget().getName()="bparam"
					and obj_10.getQualifier().(VariableAccess).getTarget()=vmap_206
				)
				and obj_9.getTarget().getName()="node"
			)
			and obj_8.getRightOperand().(UnaryMinusExpr).getValue()="-1"
		)
		and obj_7.getRightOperand() instanceof NotExpr
		and obj_7.getParent().(IfStmt).getThen()=target_2
	)
	and target_0.getRightOperand() instanceof NotExpr
	and target_3.getLeftOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getLeftOperand().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vmap_206, BlockStmt target_2, NotExpr target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="bparam"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vmap_206
			)
			and obj_1.getTarget().getName()="node"
		)
		and obj_0.getTarget().hasName("node_state")
	)
	and exists(LogicalAndExpr obj_3 | obj_3=target_1.getParent() |
		exists(EqualityOperation obj_4 | obj_4=obj_3.getLeftOperand() |
			exists(ValueFieldAccess obj_5 | obj_5=obj_4.getLeftOperand() |
				exists(PointerFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
					obj_6.getTarget().getName()="bparam"
					and obj_6.getQualifier().(VariableAccess).getTarget()=vmap_206
				)
				and obj_5.getTarget().getName()="node"
			)
			and obj_4.getRightOperand().(UnaryMinusExpr).getValue()="-1"
		)
		and obj_3.getParent().(IfStmt).getThen()=target_2
	)
}

predicate func_2(Function func, BlockStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(StmtExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(1) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("_printk")
						and obj_4.getArgument(0).(StringLiteral).getValue()="3map_benchmark: invalid numa node\n"
					)
				)
				and obj_2.getStmt(0).(DoStmt).getCondition() instanceof Literal
			)
		)
	)
	and target_2.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vmap_206, LogicalAndExpr target_3) {
	exists(EqualityOperation obj_0 | obj_0=target_3.getLeftOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="bparam"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vmap_206
			)
			and obj_1.getTarget().getName()="node"
		)
		and obj_0.getRightOperand().(UnaryMinusExpr).getValue()="-1"
	)
	and target_3.getRightOperand() instanceof NotExpr
}

predicate func_4(Variable vmap_206, ValueFieldAccess target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getQualifier() |
		obj_0.getTarget().getName()="bparam"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vmap_206
	)
	and target_4.getTarget().getName()="node"
}

from Function func, Variable vmap_206, NotExpr target_1, BlockStmt target_2, LogicalAndExpr target_3, ValueFieldAccess target_4
where
not func_0(vmap_206, target_2, target_3, target_4)
and func_1(vmap_206, target_2, target_1)
and func_2(func, target_2)
and func_3(vmap_206, target_3)
and func_4(vmap_206, target_4)
and vmap_206.getType().hasName("map_benchmark_data *")
and vmap_206.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
