/**
 * @name linux-f7a1337f0d29b98733c8824e165fca3371d7d4fd-peak_usb_create_dev
 * @id cpp/linux/f7a1337f0d29b98733c8824e165fca3371d7d4fd/peak-usb-create-dev
 * @description linux-f7a1337f0d29b98733c8824e165fca3371d7d4fd-drivers/net/can/usb/peak_usb/pcan_usb_core.c-peak_usb_create_dev CVE-2019-19534
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
		target_0.getTarget().hasName("kmalloc")
		and not target_0.getTarget().hasName("kzalloc")
		and target_0.getArgument(0).(Literal).getValue()="32"
		and target_0.getArgument(1).(BitwiseOrExpr).getValue()="3264"
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cmd_buf"
		and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("peak_usb_device *")
		and target_0.getEnclosingFunction() = func
}

from Function func, FunctionCall target_0
where
func_0(func, target_0)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
