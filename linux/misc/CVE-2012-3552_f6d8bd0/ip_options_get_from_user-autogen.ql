/**
 * @name linux-f6d8bd051c391c1c0458a30b2a7abcd939329259-ip_options_get_from_user
 * @id cpp/linux/f6d8bd051c391c1c0458a30b2a7abcd939329259/ip-options-get-from-user
 * @description linux-f6d8bd051c391c1c0458a30b2a7abcd939329259-include/net/ip.h-ip_options_get_from_user CVE-2012-3552
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vopt_526, NotExpr target_3, LogicalAndExpr target_4) {
exists(ValueFieldAccess target_1 |
	target_1.getTarget().getName()="__data"
	and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vopt_526
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vopt_526, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="__data"
	and target_2.getQualifier().(VariableAccess).getTarget()=vopt_526
}

predicate func_3(Variable vopt_526, NotExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vopt_526
}

predicate func_4(Variable vopt_526, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getRightOperand().(FunctionCall).getTarget().hasName("copy_from_user")
	and target_4.getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="__data"
	and target_4.getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vopt_526
	and target_4.getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned char *")
	and target_4.getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vopt_526, PointerFieldAccess target_2, NotExpr target_3, LogicalAndExpr target_4
where
not func_1(vopt_526, target_3, target_4)
and func_2(vopt_526, target_2)
and func_3(vopt_526, target_3)
and func_4(vopt_526, target_4)
and vopt_526.getType().hasName("ip_options *")
and vopt_526.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
