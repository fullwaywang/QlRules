/**
 * @name linux-073931017b49d9458aa351605b43a7e34598caef-ceph_set_acl
 * @id cpp/linux/073931017b49d9458aa351605b43a7e34598caef/ceph-set-acl
 * @description linux-073931017b49d9458aa351605b43a7e34598caef-fs/ceph/acl.c-ceph_set_acl CVE-2016-7097
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vacl_86, Variable vret_88, Variable vnew_mode_92, FunctionCall target_0) {
	target_0.getTarget().hasName("posix_acl_equiv_mode")
	and not target_0.getTarget().hasName("posix_acl_update_mode")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vacl_86
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vnew_mode_92
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_88
}

predicate func_2(Parameter vacl_86, ExprStmt target_7) {
exists(AddressOfExpr target_2 |
	target_2.getOperand().(VariableAccess).getTarget()=vacl_86
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getLocation()))
}

predicate func_3(Variable vret_88, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget()=vret_88
	and target_3.getGreaterOperand().(Literal).getValue()="0"
	and target_3.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_4(Variable vret_88, ExprStmt target_8, VariableAccess target_4) {
	target_4.getTarget()=vret_88
	and target_4.getParent().(EQExpr).getRightOperand() instanceof Literal
	and target_4.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_8
}

predicate func_5(Parameter vacl_86, VariableAccess target_5) {
	target_5.getTarget()=vacl_86
	and target_5.getParent().(AssignExpr).getLValue() = target_5
	and target_5.getParent().(AssignExpr).getRValue() instanceof Literal
}

predicate func_6(Parameter vacl_86, Variable vret_88, VariableAccess target_9, IfStmt target_6) {
	target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vret_88
	and target_6.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vacl_86
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_7(Parameter vacl_86, Variable vret_88, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_88
	and target_7.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getTarget()=vacl_86
	and target_7.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(UnaryMinusExpr).getValue()="-22"
	and target_7.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
}

predicate func_8(Function func, ExprStmt target_8) {
	target_8.getExpr() instanceof AssignExpr
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Parameter vacl_86, BlockStmt target_10, VariableAccess target_9) {
	target_9.getTarget()=vacl_86
	and target_9.getParent().(IfStmt).getThen()=target_10
}

predicate func_10(Variable vret_88, BlockStmt target_10) {
	target_10.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_88
	and target_10.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_10.getStmt(1).(IfStmt).getCondition() instanceof RelationalOperation
	and target_10.getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="out"
	and target_10.getStmt(2) instanceof IfStmt
}

from Function func, Parameter vacl_86, Variable vret_88, Variable vnew_mode_92, FunctionCall target_0, RelationalOperation target_3, VariableAccess target_4, VariableAccess target_5, IfStmt target_6, ExprStmt target_7, ExprStmt target_8, VariableAccess target_9, BlockStmt target_10
where
func_0(vacl_86, vret_88, vnew_mode_92, target_0)
and not func_2(vacl_86, target_7)
and func_3(vret_88, target_3)
and func_4(vret_88, target_8, target_4)
and func_5(vacl_86, target_5)
and func_6(vacl_86, vret_88, target_9, target_6)
and func_7(vacl_86, vret_88, target_7)
and func_8(func, target_8)
and func_9(vacl_86, target_10, target_9)
and func_10(vret_88, target_10)
and vacl_86.getType().hasName("posix_acl *")
and vret_88.getType().hasName("int")
and vnew_mode_92.getType().hasName("umode_t")
and vacl_86.getFunction() = func
and vret_88.(LocalVariable).getFunction() = func
and vnew_mode_92.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
