/**
 * @name linux-0f7352557a35ab7888bc7831411ec8a3cbe20d78-brcmf_notify_escan_complete
 * @id cpp/linux/0f7352557a35ab7888bc7831411ec8a3cbe20d78/brcmf-notify-escan-complete
 * @description linux-0f7352557a35ab7888bc7831411ec8a3cbe20d78-drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c-brcmf_notify_escan_complete CVE-2024-35811
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcfg_1164, ExprStmt target_3, FunctionCall target_0) {
	target_0.getTarget().hasName("timer_pending")
	and not target_0.getTarget().hasName("timer_delete_sync")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="escan_timeout"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfg_1164
	and target_0.getParent().(IfStmt).getThen()=target_3
}

predicate func_1(Parameter vcfg_1164, FunctionCall target_1) {
	target_1.getTarget().hasName("del_timer_sync")
	and not target_1.getTarget().hasName("timer_delete_sync")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="escan_timeout"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfg_1164
}

predicate func_2(Function func, IfStmt target_2) {
	target_2.getCondition() instanceof FunctionCall
	and target_2.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr() instanceof FunctionCall
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vcfg_1164, FunctionCall target_0, FunctionCall target_1, IfStmt target_2, ExprStmt target_3
where
func_0(vcfg_1164, target_3, target_0)
and func_1(vcfg_1164, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and vcfg_1164.getType().hasName("brcmf_cfg80211_info *")
and vcfg_1164.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
