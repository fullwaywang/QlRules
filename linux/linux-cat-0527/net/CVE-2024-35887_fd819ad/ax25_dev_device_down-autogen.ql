/**
 * @name linux-fd819ad3ecf6f3c232a06b27423ce9ed8c20da89-ax25_dev_device_down
 * @id cpp/linux/fd819ad3ecf6f3c232a06b27423ce9ed8c20da89/ax25-dev-device-down
 * @description linux-fd819ad3ecf6f3c232a06b27423ce9ed8c20da89-net/ax25/ax25_dev.c-ax25_dev_device_down CVE-2024-35887
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vax25_dev_98, EqualityOperation target_3) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("timer_shutdown_sync")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="slave_timer"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="dama"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_98
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getRightOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vax25_dev_98, VariableAccess target_1) {
	target_1.getTarget()=vax25_dev_98
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vax25_dev_98, FunctionCall target_2) {
	target_2.getTarget().hasName("ax25_ds_del_timer")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vax25_dev_98
}

predicate func_3(Variable vax25_dev_98, EqualityOperation target_3) {
	target_3.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
	and target_3.getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
	and target_3.getRightOperand().(VariableAccess).getTarget()=vax25_dev_98
}

from Function func, Variable vax25_dev_98, VariableAccess target_1, FunctionCall target_2, EqualityOperation target_3
where
not func_0(vax25_dev_98, target_3)
and func_1(vax25_dev_98, target_1)
and func_2(vax25_dev_98, target_2)
and func_3(vax25_dev_98, target_3)
and vax25_dev_98.getType().hasName("ax25_dev *")
and vax25_dev_98.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
