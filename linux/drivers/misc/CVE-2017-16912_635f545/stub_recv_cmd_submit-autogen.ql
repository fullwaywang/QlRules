/**
 * @name linux-635f545a7e8be7596b9b2b6a43cab6bbd5a88e43-stub_recv_cmd_submit
 * @id cpp/linux/635f545a7e8be7596b9b2b6a43cab6bbd5a88e43/stub-recv-cmd-submit
 * @description linux-635f545a7e8be7596b9b2b6a43cab6bbd5a88e43-drivers/usb/usbip/stub_rx.c-stub_recv_cmd_submit CVE-2017-16912
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpipe_436, ExprStmt target_1, EqualityOperation target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vpipe_436
	and target_0.getCondition().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("stub_priv *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("stub_priv_alloc")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("stub_device *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("usbip_header *")
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vpipe_436, EqualityOperation target_3) {
	target_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=vpipe_436
	and target_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="30"
	and target_3.getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="3"
	and target_3.getRightOperand().(Literal).getValue()="0"
}

from Function func, Variable vpipe_436, ExprStmt target_1, EqualityOperation target_3
where
not func_0(vpipe_436, target_1, target_3, func)
and func_1(func, target_1)
and func_3(vpipe_436, target_3)
and vpipe_436.getType().hasName("int")
and vpipe_436.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
