/**
 * @name linux-8b3e4d26bc9cd0f6373d0095b9ffd99e7da8006b-rndis_set_response
 * @id cpp/linux/8b3e4d26bc9cd0f6373d0095b9ffd99e7da8006b/rndis-set-response
 * @description linux-8b3e4d26bc9cd0f6373d0095b9ffd99e7da8006b-drivers/usb/gadget/function/rndis.c-rndis_set_response CVE-2022-48837
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vBufOffset_641, ReturnStmt target_2, ExprStmt target_3, LogicalOrExpr target_4) {
exists(LogicalOrExpr target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getRightOperand() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=vBufOffset_641
		and obj_0.getLesserOperand().(Literal).getValue()="1558"
	)
	and exists(LogicalOrExpr obj_1 | obj_1=target_0.getParent() |
		exists(RelationalOperation obj_2 | obj_2=obj_1.getRightOperand() |
			exists(AddExpr obj_3 | obj_3=obj_2.getGreaterOperand() |
				obj_3.getLeftOperand().(VariableAccess).getTarget()=vBufOffset_641
				and obj_3.getRightOperand().(Literal).getValue()="8"
			)
			and obj_2.getLesserOperand().(Literal).getValue()="1558"
		)
		and obj_1.getLeftOperand() instanceof RelationalOperation
		and obj_1.getParent().(IfStmt).getThen()=target_2
	)
	and target_0.getLeftOperand() instanceof RelationalOperation
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_4.getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vBufLength_641, Variable vBufOffset_641, ReturnStmt target_2, RelationalOperation target_1) {
	exists(LogicalOrExpr obj_0 | obj_0=target_1.getParent() |
		exists(RelationalOperation obj_1 | obj_1=obj_0.getRightOperand() |
			exists(AddExpr obj_2 | obj_2=obj_1.getGreaterOperand() |
				obj_2.getLeftOperand().(VariableAccess).getTarget()=vBufOffset_641
				and obj_2.getRightOperand().(Literal).getValue()="8"
			)
			and obj_1.getLesserOperand().(Literal).getValue()="1558"
		)
		and obj_0.getParent().(IfStmt).getThen()=target_2
	)
	and  (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
	and target_1.getGreaterOperand().(VariableAccess).getTarget()=vBufLength_641
	and target_1.getLesserOperand().(Literal).getValue()="1558"
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vBufOffset_641, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="InformationBufferOffset"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("rndis_set_msg_type *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vBufOffset_641
	)
}

predicate func_4(Variable vBufOffset_641, LogicalOrExpr target_4) {
	exists(RelationalOperation obj_0 | obj_0=target_4.getRightOperand() |
		exists(AddExpr obj_1 | obj_1=obj_0.getGreaterOperand() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vBufOffset_641
			and obj_1.getRightOperand().(Literal).getValue()="8"
		)
		and obj_0.getLesserOperand().(Literal).getValue()="1558"
	)
	and target_4.getLeftOperand() instanceof RelationalOperation
}

from Function func, Variable vBufLength_641, Variable vBufOffset_641, RelationalOperation target_1, ReturnStmt target_2, ExprStmt target_3, LogicalOrExpr target_4
where
not func_0(vBufOffset_641, target_2, target_3, target_4)
and func_1(vBufLength_641, vBufOffset_641, target_2, target_1)
and func_2(func, target_2)
and func_3(vBufOffset_641, target_3)
and func_4(vBufOffset_641, target_4)
and vBufLength_641.getType().hasName("u32")
and vBufOffset_641.getType().hasName("u32")
and vBufLength_641.(LocalVariable).getFunction() = func
and vBufOffset_641.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
