/**
 * @name linux-1d1ba14e00d290b1ed616ed78c8c49bf897ce390-workingset_test_recent
 * @id cpp/linux/1d1ba14e00d290b1ed616ed78c8c49bf897ce390/workingset-test-recent
 * @description linux-1d1ba14e00d290b1ed616ed78c8c49bf897ce390-mm/workingset.c-workingset_test_recent CVE-2024-41033
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(VariableAccess).getType().hasName("bool")
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
)
}

predicate func_1(Variable veviction_memcg_420, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("mem_cgroup_flush_stats_ratelimited")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=veviction_memcg_420
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

from Function func, Variable veviction_memcg_420, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(veviction_memcg_420, func, target_1)
and veviction_memcg_420.getType().hasName("mem_cgroup *")
and veviction_memcg_420.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
