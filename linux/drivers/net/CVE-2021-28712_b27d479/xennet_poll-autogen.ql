/**
 * @name linux-b27d47950e481f292c0a5ad57357edb9d95d03ba-xennet_poll
 * @id cpp/linux/b27d47950e481f292c0a5ad57357edb9d95d03ba/xennet-poll
 * @description linux-b27d47950e481f292c0a5ad57357edb9d95d03ba-drivers/net/xen-netfront.c-xennet_poll CVE-2021-28712
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vqueue_1176, ExprStmt target_8, NotExpr target_9) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("xennet_set_rx_rsp_cons")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vqueue_1176
	and target_0.getArgument(1).(AddExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="rsp_cons"
	and target_0.getArgument(1).(AddExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rx"
	and target_0.getArgument(1).(AddExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqueue_1176
	and target_0.getArgument(1).(AddExpr).getRightOperand() instanceof FunctionCall
	and target_8.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vi_1182, Variable vqueue_1176) {
exists(AddExpr target_1 |
	target_1.getLeftOperand().(ValueFieldAccess).getTarget().getName()="rsp_cons"
	and target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rx"
	and target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqueue_1176
	and target_1.getRightOperand().(Literal).getValue()="1"
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1182)
}

predicate func_2(Variable vi_1182, Variable vqueue_1176, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("xennet_set_rx_rsp_cons")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vqueue_1176
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vi_1182
	and target_2.getLocation().isBefore(target_10.getLocation())
	and target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vqueue_1176, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="rx"
	and target_3.getQualifier().(VariableAccess).getTarget()=vqueue_1176
}

predicate func_4(Variable vtmpq_1186, FunctionCall target_4) {
	target_4.getTarget().hasName("skb_queue_len")
	and target_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtmpq_1186
	and target_4.getParent().(AssignAddExpr).getRValue() = target_4
	and target_4.getParent().(AssignAddExpr).getLValue() instanceof ValueFieldAccess
}

predicate func_5(Variable vqueue_1176, PointerFieldAccess target_5) {
	target_5.getTarget().getName()="rx"
	and target_5.getQualifier().(VariableAccess).getTarget()=vqueue_1176
}

predicate func_6(Variable vqueue_1176, AssignAddExpr target_6) {
	target_6.getLValue().(ValueFieldAccess).getTarget().getName()="rsp_cons"
	and target_6.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rx"
	and target_6.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqueue_1176
	and target_6.getRValue() instanceof FunctionCall
}

predicate func_7(Variable vi_1182, Variable vqueue_1176, PrefixIncrExpr target_7) {
	target_7.getOperand().(ValueFieldAccess).getTarget().getName()="rsp_cons"
	and target_7.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rx"
	and target_7.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqueue_1176
	and target_7.getParent().(AssignExpr).getRValue() = target_7
	and target_7.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1182
}

predicate func_8(Variable vi_1182, Variable vqueue_1176, FunctionCall target_13, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1182
	and target_8.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="rsp_cons"
	and target_8.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rx"
	and target_8.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqueue_1176
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_13
}

predicate func_9(Variable vtmpq_1186, Variable vqueue_1176, NotExpr target_9) {
	target_9.getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("xennet_fill_frags")
	and target_9.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vqueue_1176
	and target_9.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_9.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtmpq_1186
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vi_1182, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1182
	and target_11.getExpr().(AssignExpr).getRValue() instanceof PrefixIncrExpr
}

predicate func_12(Variable vqueue_1176, ExprStmt target_12) {
	target_12.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getTarget().hasName("handle_incoming_queue")
	and target_12.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vqueue_1176
	and target_12.getExpr().(AssignSubExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sk_buff_head")
}

predicate func_13(Function func, FunctionCall target_13) {
	target_13.getTarget().hasName("__builtin_expect")
	and target_13.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_13.getArgument(1).(Literal).getValue()="0"
	and target_13.getEnclosingFunction() = func
}

from Function func, Variable vi_1182, Variable vtmpq_1186, Variable vqueue_1176, PointerFieldAccess target_3, FunctionCall target_4, PointerFieldAccess target_5, AssignAddExpr target_6, PrefixIncrExpr target_7, ExprStmt target_8, NotExpr target_9, ExprStmt target_10, ExprStmt target_11, ExprStmt target_12, FunctionCall target_13
where
not func_0(vqueue_1176, target_8, target_9)
and not func_1(vi_1182, vqueue_1176)
and not func_2(vi_1182, vqueue_1176, target_10, target_11, target_12)
and func_3(vqueue_1176, target_3)
and func_4(vtmpq_1186, target_4)
and func_5(vqueue_1176, target_5)
and func_6(vqueue_1176, target_6)
and func_7(vi_1182, vqueue_1176, target_7)
and func_8(vi_1182, vqueue_1176, target_13, target_8)
and func_9(vtmpq_1186, vqueue_1176, target_9)
and func_10(func, target_10)
and func_11(vi_1182, target_11)
and func_12(vqueue_1176, target_12)
and func_13(func, target_13)
and vi_1182.getType().hasName("RING_IDX")
and vtmpq_1186.getType().hasName("sk_buff_head")
and vqueue_1176.getType().hasName("netfront_queue *")
and vi_1182.(LocalVariable).getFunction() = func
and vtmpq_1186.(LocalVariable).getFunction() = func
and vqueue_1176.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
