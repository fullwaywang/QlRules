/**
 * @name linux-b6a7719aedd7e5c0f2df7641aa47386111682df4-xfrm4_mode_tunnel_output
 * @id cpp/linux/b6a7719aedd7e5c0f2df7641aa47386111682df4/xfrm4-mode-tunnel-output
 * @description linux-b6a7719aedd7e5c0f2df7641aa47386111682df4-net/ipv4/xfrm4_mode_tunnel.c-xfrm4_mode_tunnel_output CVE-2019-10639
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdst_32, ExprStmt target_1) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("dev_net")
		and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
		and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_32
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ip_select_ident")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vdst_32, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ttl"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("iphdr *")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ip4_dst_hoplimit")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="child"
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdst_32
}

from Function func, Variable vdst_32, ExprStmt target_1
where
not func_0(vdst_32, target_1)
and func_1(vdst_32, target_1)
and vdst_32.getType().hasName("dst_entry *")
and vdst_32.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
