/**
 * @name linux-fed1755b118147721f2c87b37b9d66e62c39b668-xenbus_watch_path
 * @id cpp/linux/fed1755b118147721f2c87b37b9d66e62c39b668/xenbus-watch-path
 * @description linux-fed1755b118147721f2c87b37b9d66e62c39b668-drivers/xen/xenbus/xenbus_client.c-xenbus_watch_path CVE-2020-29568
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vwatch_129, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="will_handle"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwatch_129
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vwatch_129, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="callback"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwatch_129
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("..(*)(..)")
}

predicate func_2(Parameter vwatch_129, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="node"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwatch_129
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("const char *")
}

from Function func, Parameter vwatch_129, ExprStmt target_1, ExprStmt target_2
where
not func_0(vwatch_129, target_1, target_2, func)
and func_1(vwatch_129, target_1)
and func_2(vwatch_129, target_2)
and vwatch_129.getType().hasName("xenbus_watch *")
and vwatch_129.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
