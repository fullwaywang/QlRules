/**
 * @name linux-d0be8347c623e0ac4202a1d4e0373882821f56b0-l2cap_config_req
 * @id cpp/linux/d0be8347c623e0ac4202a1d4e0373882821f56b0/l2cap-config-req
 * @description linux-d0be8347c623e0ac4202a1d4e0373882821f56b0-l2cap_config_req CVE-2022-20566
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable v__UNIQUE_ID_ddebug1283_4375, VariableAccess target_1) {
		target_1.getTarget()=v__UNIQUE_ID_ddebug1283_4375
		and target_1.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("arch_static_branch_jump")
}

predicate func_2(Variable v__UNIQUE_ID_ddebug1283_4375, VariableAccess target_2) {
		target_2.getTarget()=v__UNIQUE_ID_ddebug1283_4375
		and target_2.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("arch_static_branch")
}

predicate func_3(Variable v__UNIQUE_ID_ddebug1283_4375, VariableAccess target_3) {
		target_3.getTarget()=v__UNIQUE_ID_ddebug1283_4375
		and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
		and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="dcid 0x%4.4x flags 0x%2.2x\n"
		and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u16")
		and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("u16")
}

predicate func_4(Variable vchan_4366, ExprStmt target_5, Function func) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(FunctionCall).getTarget().hasName("l2cap_chan_put")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_4366
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_5(Variable vchan_4366, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("l2cap_chan_unlock")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchan_4366
}

from Function func, Variable vchan_4366, Variable v__UNIQUE_ID_ddebug1283_4375, VariableAccess target_1, VariableAccess target_2, VariableAccess target_3, ExprStmt target_5
where
func_1(v__UNIQUE_ID_ddebug1283_4375, target_1)
and func_2(v__UNIQUE_ID_ddebug1283_4375, target_2)
and func_3(v__UNIQUE_ID_ddebug1283_4375, target_3)
and not func_4(vchan_4366, target_5, func)
and func_5(vchan_4366, target_5)
and vchan_4366.getType().hasName("l2cap_chan *")
and v__UNIQUE_ID_ddebug1283_4375.getType().hasName("_ddebug")
and vchan_4366.(LocalVariable).getFunction() = func
and v__UNIQUE_ID_ddebug1283_4375.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
