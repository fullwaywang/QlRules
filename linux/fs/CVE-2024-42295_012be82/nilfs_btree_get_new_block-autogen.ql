/**
 * @name linux-012be828a118bf496e666ef1fc47fc0e7358ada2-nilfs_btree_get_new_block
 * @id cpp/linux/012be828a118bf496e666ef1fc47fc0e7358ada2/nilfs-btree-get-new-block
 * @description linux-012be828a118bf496e666ef1fc47fc0e7358ada2-fs/nilfs2/btree.c-nilfs_btree_get_new_block CVE-2024-42295
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbh_63, ReturnStmt target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("IS_ERR")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbh_63
	and target_0.getParent().(IfStmt).getThen()=target_5
)
}

predicate func_1(Variable vbh_63, NotExpr target_3, ExprStmt target_6) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("PTR_ERR")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vbh_63
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation())
	and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Variable vbh_63, ReturnStmt target_5, VariableAccess target_2) {
	target_2.getTarget()=vbh_63
	and target_2.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_3(Variable vbh_63, ReturnStmt target_5, NotExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vbh_63
	and target_3.getParent().(IfStmt).getThen()=target_5
}

predicate func_4(Function func, UnaryMinusExpr target_4) {
	target_4.getValue()="-12"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, ReturnStmt target_5) {
	target_5.getExpr() instanceof UnaryMinusExpr
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vbh_63, ExprStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getExpr() |
		obj_0.getTarget().hasName("set_buffer_nilfs_volatile")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vbh_63
	)
}

from Function func, Variable vbh_63, VariableAccess target_2, NotExpr target_3, UnaryMinusExpr target_4, ReturnStmt target_5, ExprStmt target_6
where
not func_0(vbh_63, target_5)
and not func_1(vbh_63, target_3, target_6)
and func_2(vbh_63, target_5, target_2)
and func_3(vbh_63, target_5, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(vbh_63, target_6)
and vbh_63.getType().hasName("buffer_head *")
and vbh_63.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
