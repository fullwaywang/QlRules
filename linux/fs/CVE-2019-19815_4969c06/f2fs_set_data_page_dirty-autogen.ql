/**
 * @name linux-4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6-f2fs_set_data_page_dirty
 * @id cpp/linux/4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6/f2fs-set-data-page-dirty
 * @description linux-4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6-fs/f2fs/data.c-f2fs_set_data_page_dirty CVE-2019-19815
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpage_2852, ExprStmt target_7) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("page_file_mapping")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vpage_2852
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpage_2852, IfStmt target_8, ExprStmt target_7, NotExpr target_9, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(FunctionCall).getTarget().hasName("PageSwapCache")
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_2852
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("__set_page_dirty_nobuffers")
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_2852
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_8.getLocation())
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vpage_2852, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="(unknown field)"
	and target_2.getQualifier().(VariableAccess).getTarget()=vpage_2852
}

predicate func_4(Function func, DeclStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vmapping_2854, VariableAccess target_5) {
	target_5.getTarget()=vmapping_2854
}

predicate func_7(Parameter vpage_2852, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("trace_f2fs_set_page_dirty")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_2852
}

predicate func_8(Parameter vpage_2852, IfStmt target_8) {
	target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageUptodate")
	and target_8.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_2852
	and target_8.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("SetPageUptodate")
	and target_8.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_2852
}

predicate func_9(Parameter vpage_2852, NotExpr target_9) {
	target_9.getOperand().(FunctionCall).getTarget().hasName("PageUptodate")
	and target_9.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_2852
}

from Function func, Parameter vpage_2852, Variable vmapping_2854, PointerFieldAccess target_2, DeclStmt target_4, VariableAccess target_5, ExprStmt target_7, IfStmt target_8, NotExpr target_9
where
not func_0(vpage_2852, target_7)
and not func_1(vpage_2852, target_8, target_7, target_9, func)
and func_2(vpage_2852, target_2)
and func_4(func, target_4)
and func_5(vmapping_2854, target_5)
and func_7(vpage_2852, target_7)
and func_8(vpage_2852, target_8)
and func_9(vpage_2852, target_9)
and vpage_2852.getType().hasName("page *")
and vmapping_2854.getType().hasName("address_space *")
and vpage_2852.getFunction() = func
and vmapping_2854.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
