/**
 * @name linux-1a5a9906d4e8d1976b701f889d8f35d54b928f25-mark_screen_rdonly
 * @id cpp/linux/1a5a9906d4e8d1976b701f889d8f35d54b928f25/mark-screen-rdonly
 * @description linux-1a5a9906d4e8d1976b701f889d8f35d54b928f25-arch/x86/kernel/vm86_32.c-mark_screen_rdonly CVE-2012-1179
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmm_166, ExprStmt target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("down_write")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mmap_sem"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_166
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vmm_166, ExprStmt target_3, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("up_write")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mmap_sem"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_166
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_3.getExpr().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vmm_166, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("pgd_t *")
		and target_2.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="pgd"
		and target_2.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_166
		and target_2.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(BitwiseAndExpr).getValue()="0"
}

predicate func_3(Parameter vmm_166, ExprStmt target_3) {
		target_3.getExpr().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="page_table_lock"
		and target_3.getExpr().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_166
}

from Function func, Parameter vmm_166, ExprStmt target_2, ExprStmt target_3
where
not func_0(vmm_166, target_2, func)
and not func_1(vmm_166, target_3, func)
and func_2(vmm_166, target_2)
and func_3(vmm_166, target_3)
and vmm_166.getType().hasName("mm_struct *")
and vmm_166.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
