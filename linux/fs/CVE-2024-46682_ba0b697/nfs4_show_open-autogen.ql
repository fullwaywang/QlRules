/**
 * @name linux-ba0b697de298285301c71c258598226e06494236-nfs4_show_open
 * @id cpp/linux/ba0b697de298285301c71c258598226e06494236/nfs4-show-open
 * @description linux-ba0b697de298285301c71c258598226e06494236-fs/nfsd/nfs4state.c-nfs4_show_open CVE-2024-46682
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vs_2766, Variable vnf_2769, ExprStmt target_1, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7, AddressOfExpr target_8, Function func) {
exists(IfStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getThen() |
		obj_0.getStmt(0) instanceof ExprStmt
		and obj_0.getStmt(1) instanceof ExprStmt
		and obj_0.getStmt(2) instanceof IfStmt
		and obj_0.getStmt(3) instanceof ExprStmt
	)
	and exists(ExprStmt obj_1 | obj_1=target_0.getElse() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getTarget().hasName("seq_puts")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vs_2766
			and obj_2.getArgument(1).(StringLiteral).getValue()="closed, "
		)
	)
	and target_0.getCondition().(VariableAccess).getTarget()=vnf_2769
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(VariableAccess).getLocation())
	and target_0.getCondition().(VariableAccess).getLocation().isBefore(target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vnf_2769, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="fi_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vnf_2769
			)
		)
		and obj_0.getTarget().hasName("spin_lock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vnf_2769, Variable vfile_2770, Function func, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("find_any_file_locked")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vnf_2769
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vfile_2770
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Parameter vs_2766, Variable vfile_2770, Function func, IfStmt target_3) {
	exists(BlockStmt obj_0 | obj_0=target_3.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("nfs4_show_superblock")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vs_2766
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vfile_2770
			)
		)
		and exists(ExprStmt obj_3 | obj_3=obj_0.getStmt(1) |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("seq_puts")
				and obj_4.getArgument(0).(VariableAccess).getTarget()=vs_2766
				and obj_4.getArgument(1).(StringLiteral).getValue()=", "
			)
		)
		and exists(ExprStmt obj_5 | obj_5=obj_0.getStmt(2) |
			exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
				obj_6.getTarget().hasName("nfs4_show_fname")
				and obj_6.getArgument(0).(VariableAccess).getTarget()=vs_2766
				and obj_6.getArgument(1).(VariableAccess).getTarget()=vfile_2770
			)
		)
		and exists(ExprStmt obj_7 | obj_7=obj_0.getStmt(3) |
			exists(FunctionCall obj_8 | obj_8=obj_7.getExpr() |
				obj_8.getTarget().hasName("seq_puts")
				and obj_8.getArgument(0).(VariableAccess).getTarget()=vs_2766
				and obj_8.getArgument(1).(StringLiteral).getValue()=", "
			)
		)
	)
	and target_3.getCondition().(VariableAccess).getTarget()=vfile_2770
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vnf_2769, Function func, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="fi_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vnf_2769
			)
		)
		and obj_0.getTarget().hasName("spin_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Parameter vs_2766, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		exists(ConditionalExpr obj_1 | obj_1=obj_0.getArgument(2) |
			exists(BitwiseAndExpr obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
				and obj_2.getRightOperand().(Literal).getValue()="1"
			)
			and obj_1.getThen().(StringLiteral).getValue()="r"
			and obj_1.getElse().(StringLiteral).getValue()="-"
		)
		and exists(ConditionalExpr obj_3 | obj_3=obj_0.getArgument(3) |
			exists(BitwiseAndExpr obj_4 | obj_4=obj_3.getCondition() |
				obj_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
				and obj_4.getRightOperand().(Literal).getValue()="2"
			)
			and obj_3.getThen().(StringLiteral).getValue()="w"
			and obj_3.getElse().(StringLiteral).getValue()="-"
		)
		and obj_0.getTarget().hasName("seq_printf")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vs_2766
		and obj_0.getArgument(1).(StringLiteral).getValue()="deny: %s%s, "
	)
}

predicate func_6(Parameter vs_2766, Variable vfile_2770, ExprStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getExpr() |
		obj_0.getTarget().hasName("nfs4_show_superblock")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vs_2766
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vfile_2770
	)
}

predicate func_7(Variable vnf_2769, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="sc_file"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("nfs4_stid *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vnf_2769
	)
}

predicate func_8(Variable vnf_2769, AddressOfExpr target_8) {
	exists(PointerFieldAccess obj_0 | obj_0=target_8.getOperand() |
		obj_0.getTarget().getName()="fi_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vnf_2769
	)
}

from Function func, Parameter vs_2766, Variable vnf_2769, Variable vfile_2770, ExprStmt target_1, ExprStmt target_2, IfStmt target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7, AddressOfExpr target_8
where
not func_0(vs_2766, vnf_2769, target_1, target_5, target_6, target_7, target_8, func)
and func_1(vnf_2769, func, target_1)
and func_2(vnf_2769, vfile_2770, func, target_2)
and func_3(vs_2766, vfile_2770, func, target_3)
and func_4(vnf_2769, func, target_4)
and func_5(vs_2766, target_5)
and func_6(vs_2766, vfile_2770, target_6)
and func_7(vnf_2769, target_7)
and func_8(vnf_2769, target_8)
and vs_2766.getType().hasName("seq_file *")
and vnf_2769.getType().hasName("nfs4_file *")
and vfile_2770.getType().hasName("nfsd_file *")
and vs_2766.getFunction() = func
and vnf_2769.(LocalVariable).getFunction() = func
and vfile_2770.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
