/**
 * @name linux-764f4eb6846f5475f1244767d24d25dd86528a4a-llc_ui_bind
 * @id cpp/linux/764f4eb6846f5475f1244767d24d25dd86528a4a/llc-ui-bind
 * @description linux-764f4eb6846f5475f1244767d24d25dd86528a4a-net/llc/af_llc.c-llc_ui_bind CVE-2022-28356
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vllc_335, Variable vrc_337, ExprStmt target_1, ExprStmt target_3, ReturnStmt target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(VariableAccess).getTarget()=vrc_337
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_put_track")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllc_335
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_tracker"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllc_335
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dev"
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllc_335
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(VariableAccess).getLocation())
	and target_0.getCondition().(VariableAccess).getLocation().isBefore(target_4.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("release_sock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vrc_337, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_337
	and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_4(Variable vrc_337, ReturnStmt target_4) {
	target_4.getExpr().(VariableAccess).getTarget()=vrc_337
}

from Function func, Variable vllc_335, Variable vrc_337, ExprStmt target_1, ExprStmt target_3, ReturnStmt target_4
where
not func_0(vllc_335, vrc_337, target_1, target_3, target_4, func)
and func_1(func, target_1)
and func_3(vrc_337, target_3)
and func_4(vrc_337, target_4)
and vllc_335.getType().hasName("llc_sock *")
and vrc_337.getType().hasName("int")
and vllc_335.(LocalVariable).getFunction() = func
and vrc_337.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
