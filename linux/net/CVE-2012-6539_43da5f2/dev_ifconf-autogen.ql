/**
 * @name linux-43da5f2e0d0c69ded3d51907d9552310a6b545e8-dev_ifconf
 * @id cpp/linux/43da5f2e0d0c69ded3d51907d9552310a6b545e8/dev-ifconf
 * @description linux-43da5f2e0d0c69ded3d51907d9552310a6b545e8-net/socket.c-dev_ifconf CVE-2012-6539
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vifc_2650, IfStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vifc_2650
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="16"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vifc_2650, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="ifcbuf"
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("compat_ifconf")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ifc_len"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("compat_ifconf")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ifc_len"
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vifc_2650
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_1.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ifconf *")
	and target_1.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("compat_alloc_user_space")
	and target_1.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddExpr).getLeftOperand().(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddExpr).getLeftOperand().(SizeofTypeOperator).getValue()="16"
	and target_1.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("size_t")
}

from Function func, Variable vifc_2650, IfStmt target_1
where
not func_0(vifc_2650, target_1, func)
and func_1(vifc_2650, target_1)
and vifc_2650.getType().hasName("ifconf")
and vifc_2650.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
