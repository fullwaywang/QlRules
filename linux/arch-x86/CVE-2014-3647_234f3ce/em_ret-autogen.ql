/**
 * @name linux-234f3ce485d54017f15cf5e0699cff4100121601-em_ret
 * @id cpp/linux/234f3ce485d54017f15cf5e0699cff4100121601/em-ret
 * @description linux-234f3ce485d54017f15cf5e0699cff4100121601-arch/x86/kvm/emulate.c-em_ret CVE-2014-3647
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctxt_2040, FunctionCall target_0) {
	target_0.getTarget().hasName("em_pop")
	and not target_0.getTarget().hasName("emulate_pop")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vctxt_2040
}

predicate func_1(Parameter vctxt_2040, FunctionCall target_0) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getType().hasName("int")
	and target_1.getRValue().(FunctionCall).getTarget().hasName("emulate_pop")
	and target_1.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctxt_2040
	and target_1.getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("unsigned long")
	and target_1.getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="op_bytes"
	and target_1.getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_2040
	and target_1.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(ExprStmt target_9, Function func) {
exists(IfStmt target_3 |
	target_3.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("int")
	and target_3.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_3.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_9.getLocation()))
}

predicate func_5(Parameter vctxt_2040, ExprStmt target_9, Function func) {
exists(ReturnStmt target_5 |
	target_5.getExpr().(FunctionCall).getTarget().hasName("assign_eip_near")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctxt_2040
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("unsigned long")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getLocation().isBefore(target_9.getLocation()))
}

predicate func_6(Parameter vctxt_2040, PointerFieldAccess target_6) {
	target_6.getTarget().getName()="op_bytes"
	and target_6.getQualifier().(VariableAccess).getTarget()=vctxt_2040
	and target_6.getParent().(AssignExpr).getRValue() = target_6
	and target_6.getParent().(AssignExpr).getLValue() instanceof ValueFieldAccess
}

predicate func_7(Parameter vctxt_2040, VariableAccess target_7) {
	target_7.getTarget()=vctxt_2040
}

predicate func_8(Parameter vctxt_2040, Function func, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="type"
	and target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="dst"
	and target_8.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_2040
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Parameter vctxt_2040, Function func, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="reg"
	and target_9.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="addr"
	and target_9.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="dst"
	and target_9.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_2040
	and target_9.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="_eip"
	and target_9.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_2040
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

/*predicate func_10(Parameter vctxt_2040, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="_eip"
	and target_10.getQualifier().(VariableAccess).getTarget()=vctxt_2040
}

*/
predicate func_11(Parameter vctxt_2040, AssignExpr target_11) {
	target_11.getLValue().(ValueFieldAccess).getTarget().getName()="bytes"
	and target_11.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="dst"
	and target_11.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_2040
	and target_11.getRValue().(PointerFieldAccess).getTarget().getName()="op_bytes"
	and target_11.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_2040
}

from Function func, Parameter vctxt_2040, FunctionCall target_0, PointerFieldAccess target_6, VariableAccess target_7, ExprStmt target_8, ExprStmt target_9, AssignExpr target_11
where
func_0(vctxt_2040, target_0)
and not func_1(vctxt_2040, target_0)
and not func_3(target_9, func)
and not func_5(vctxt_2040, target_9, func)
and func_6(vctxt_2040, target_6)
and func_7(vctxt_2040, target_7)
and func_8(vctxt_2040, func, target_8)
and func_9(vctxt_2040, func, target_9)
and func_11(vctxt_2040, target_11)
and vctxt_2040.getType().hasName("x86_emulate_ctxt *")
and vctxt_2040.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
