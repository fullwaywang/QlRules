/**
 * @name linux-2a3548c7ef2e135aee40e7e5e44e7d11b893e7c4-sched_cpu_deactivate
 * @id cpp/linux/2a3548c7ef2e135aee40e7e5e44e7d11b893e7c4/sched-cpu-deactivate
 * @description linux-2a3548c7ef2e135aee40e7e5e44e7d11b893e7c4-kernel/sched/core.c-sched_cpu_deactivate CVE-2024-44958
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcpu_9161, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("sched_smt_present_inc")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcpu_9161
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_2.getCondition()=target_1
		)
	)
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vret_9165, BlockStmt target_4, VariableAccess target_1) {
	target_1.getTarget()=vret_9165
	and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vret_9165, Parameter vcpu_9161, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("cpuset_cpu_inactive")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vcpu_9161
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_9165
	)
}

predicate func_3(Parameter vcpu_9161, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("balance_push_set")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcpu_9161
	)
}

predicate func_4(Variable vret_9165, Parameter vcpu_9161, BlockStmt target_4) {
	exists(ExprStmt obj_0 | obj_0=target_4.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("balance_push_set")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vcpu_9161
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_4.getStmt(1) |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			obj_3.getTarget().hasName("set_cpu_active")
			and obj_3.getArgument(0).(VariableAccess).getTarget()=vcpu_9161
		)
	)
	and target_4.getStmt(2).(ReturnStmt).getExpr().(VariableAccess).getTarget()=vret_9165
}

from Function func, Variable vret_9165, Parameter vcpu_9161, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vcpu_9161, target_1, target_2, target_3)
and func_1(vret_9165, target_4, target_1)
and func_2(vret_9165, vcpu_9161, target_2)
and func_3(vcpu_9161, target_3)
and func_4(vret_9165, vcpu_9161, target_4)
and vret_9165.getType().hasName("int")
and vcpu_9161.getType().hasName("unsigned int")
and vret_9165.(LocalVariable).getFunction() = func
and vcpu_9161.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
