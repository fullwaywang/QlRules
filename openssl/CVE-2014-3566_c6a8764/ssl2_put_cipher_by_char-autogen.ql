/**
 * @name openssl-c6a876473cbff0fd323c8abcaace98ee2d21863d-ssl2_put_cipher_by_char
 * @id cpp/openssl/c6a876473cbff0fd323c8abcaace98ee2d21863d/ssl2-put-cipher-by-char
 * @description openssl-c6a876473cbff0fd323c8abcaace98ee2d21863d-ssl/s2_lib.c-ssl2_put_cipher_by_char CVE-2014-3566
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vl_360, ReturnStmt target_2, ExprStmt target_3, EqualityOperation target_1) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand() instanceof EqualityOperation
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vl_360
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="50353664"
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vl_360, ReturnStmt target_2, EqualityOperation target_1) {
		target_1.getAnOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vl_360
		and target_1.getAnOperand().(BitwiseAndExpr).getRightOperand().(HexLiteral).getValue()="4278190080"
		and target_1.getAnOperand().(HexLiteral).getValue()="33554432"
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
		target_2.getExpr().(Literal).getValue()="0"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vl_360, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vl_360
		and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="id"
		and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const SSL_CIPHER *")
}

from Function func, Variable vl_360, EqualityOperation target_1, ReturnStmt target_2, ExprStmt target_3
where
not func_0(vl_360, target_2, target_3, target_1)
and func_1(vl_360, target_2, target_1)
and func_2(func, target_2)
and func_3(vl_360, target_3)
and vl_360.getType().hasName("long")
and vl_360.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
