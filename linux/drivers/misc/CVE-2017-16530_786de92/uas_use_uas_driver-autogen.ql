/**
 * @name linux-786de92b3cb26012d3d0f00ee37adf14527f35c4-uas_use_uas_driver
 * @id cpp/linux/786de92b3cb26012d3d0f00ee37adf14527f35c4/uas-use-uas-driver
 * @description linux-786de92b3cb26012d3d0f00ee37adf14527f35c4-drivers/usb/storage/uas-detect.h-uas_use_uas_driver CVE-2017-16530
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable valt_1_61, ReturnStmt target_7, ExprStmt target_8, RelationalOperation target_5) {
	exists(NotExpr target_1 |
		target_1.getOperand().(VariableAccess).getTarget()=valt_1_61
		and target_1.getParent().(IfStmt).getThen()=target_7
		and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getOperand().(VariableAccess).getLocation())
		and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_5.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_5(Variable valt_1_61, ReturnStmt target_7, RelationalOperation target_5) {
		 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
		and target_5.getLesserOperand().(VariableAccess).getTarget()=valt_1_61
		and target_5.getGreaterOperand().(Literal).getValue()="0"
		and target_5.getParent().(IfStmt).getThen()=target_7
}

predicate func_6(Variable valt_1_61, Parameter vintf_53, AddressOfExpr target_6) {
		target_6.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="altsetting"
		and target_6.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vintf_53
		and target_6.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=valt_1_61
		and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("uas_find_endpoints")
		and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("usb_host_endpoint *[4]")
}

predicate func_7(RelationalOperation target_5, Function func, ReturnStmt target_7) {
		target_7.getExpr().(Literal).getValue()="0"
		and target_7.getParent().(IfStmt).getCondition()=target_5
		and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable valt_1_61, Parameter vintf_53, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=valt_1_61
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("uas_find_uas_alt_setting")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vintf_53
}

from Function func, Variable valt_1_61, Parameter vintf_53, RelationalOperation target_5, AddressOfExpr target_6, ReturnStmt target_7, ExprStmt target_8
where
not func_1(valt_1_61, target_7, target_8, target_5)
and func_5(valt_1_61, target_7, target_5)
and func_6(valt_1_61, vintf_53, target_6)
and func_7(target_5, func, target_7)
and func_8(valt_1_61, vintf_53, target_8)
and valt_1_61.getType().hasName("int")
and vintf_53.getType().hasName("usb_interface *")
and valt_1_61.(LocalVariable).getFunction() = func
and vintf_53.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
