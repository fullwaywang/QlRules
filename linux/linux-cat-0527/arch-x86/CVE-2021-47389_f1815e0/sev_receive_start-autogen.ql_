/**
 * @name linux-f1815e0aa770f2127c5df31eb5c2f0e37b60fa77-sev_receive_start
 * @id cpp/linux/f1815e0aa770f2127c5df31eb5c2f0e37b60fa77/sev-receive-start
 * @description linux-f1815e0aa770f2127c5df31eb5c2f0e37b60fa77-arch/x86/kvm/svm/sev.c-sev_receive_start CVE-2021-47389
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vstart_1360, VariableAccess target_2, ValueFieldAccess target_3, ExprStmt target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("sev_decommission")
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="handle"
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vstart_1360
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(VariableAccess target_2, Function func, GotoStmt target_1) {
	target_1.getName() ="e_free_session"
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vret_1365, VariableAccess target_2) {
	target_2.getTarget()=vret_1365
	and target_2.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_3(Variable vstart_1360, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="handle"
	and target_3.getQualifier().(VariableAccess).getTarget()=vstart_1360
}

predicate func_4(Variable vstart_1360, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="handle"
	and target_4.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("kvm_sev_receive_start")
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="handle"
	and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vstart_1360
}

from Function func, Variable vstart_1360, Variable vret_1365, GotoStmt target_1, VariableAccess target_2, ValueFieldAccess target_3, ExprStmt target_4
where
not func_0(vstart_1360, target_2, target_3, target_4)
and func_1(target_2, func, target_1)
and func_2(vret_1365, target_2)
and func_3(vstart_1360, target_3)
and func_4(vstart_1360, target_4)
and vstart_1360.getType().hasName("sev_data_receive_start")
and vret_1365.getType().hasName("int")
and vstart_1360.(LocalVariable).getFunction() = func
and vret_1365.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
