/**
 * @name linux-a2965c7be0522eaa18808684b7b82b248515511b-atm_tc_enqueue
 * @id cpp/linux/a2965c7be0522eaa18808684b7b82b248515511b/atm-tc-enqueue
 * @description linux-a2965c7be0522eaa18808684b7b82b248515511b-net/sched/sch_atm.c-atm_tc_enqueue CVE-2023-23455
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vresult_380, VariableAccess target_3, RelationalOperation target_4, SwitchStmt target_5) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vresult_380
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="2"
	and target_0.getThen() instanceof GotoStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_4.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_5.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(VariableAccess target_3, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="drop"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(VariableAccess target_3, Function func, GotoStmt target_2) {
	target_2.getName() ="done"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vfl_388, BlockStmt target_6, VariableAccess target_3) {
	target_3.getTarget()=vfl_388
	and target_3.getParent().(IfStmt).getThen()=target_6
}

predicate func_4(Variable vresult_380, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getLesserOperand().(VariableAccess).getTarget()=vresult_380
	and target_4.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_5(Variable vresult_380, SwitchStmt target_5) {
	target_5.getExpr().(VariableAccess).getTarget()=vresult_380
	and target_5.getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="5"
	and target_5.getStmt().(BlockStmt).getStmt(1).(SwitchCase).getExpr().(Literal).getValue()="4"
	and target_5.getStmt().(BlockStmt).getStmt(2).(SwitchCase).getExpr().(Literal).getValue()="8"
	and target_5.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__qdisc_drop")
	and target_5.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_5.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sk_buff **")
}

predicate func_6(Variable vresult_380, Variable vfl_388, BlockStmt target_6) {
	target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_380
	and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("tcf_classify")
	and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vfl_388
	and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("tcf_result")
}

from Function func, Variable vresult_380, Variable vfl_388, GotoStmt target_2, VariableAccess target_3, RelationalOperation target_4, SwitchStmt target_5, BlockStmt target_6
where
not func_0(vresult_380, target_3, target_4, target_5)
and not func_1(target_3, func)
and func_2(target_3, func, target_2)
and func_3(vfl_388, target_6, target_3)
and func_4(vresult_380, target_4)
and func_5(vresult_380, target_5)
and func_6(vresult_380, vfl_388, target_6)
and vresult_380.getType().hasName("int")
and vfl_388.getType().hasName("tcf_proto *")
and vresult_380.(LocalVariable).getFunction() = func
and vfl_388.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
