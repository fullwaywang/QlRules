/**
 * @name linux-c4eb1f403243fc7bbb7de644db8587c03de36da6-__htab_map_lookup_and_delete_batch
 * @id cpp/linux/c4eb1f403243fc7bbb7de644db8587c03de36da6/--htab-map-lookup-and-delete-batch
 * @description linux-c4eb1f403243fc7bbb7de644db8587c03de36da6-__htab_map_lookup_and_delete_batch CVE-2021-38166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vkey_size_1513, Variable vbucket_size_1518, FunctionCall target_0) {
		target_0.getTarget().hasName("kvmalloc")
		and not target_0.getTarget().hasName("kvmalloc_array")
		and target_0.getArgument(0).(MulExpr).getLeftOperand().(VariableAccess).getTarget()=vkey_size_1513
		and target_0.getArgument(0).(MulExpr).getRightOperand().(VariableAccess).getTarget()=vbucket_size_1518
		and target_0.getArgument(1).(BitwiseOrExpr).getValue()="1060032"
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("void *")
}

predicate func_1(Variable vvalue_size_1513, Variable vbucket_size_1518, FunctionCall target_1) {
		target_1.getTarget().hasName("kvmalloc")
		and not target_1.getTarget().hasName("kvmalloc_array")
		and target_1.getArgument(0).(MulExpr).getLeftOperand().(VariableAccess).getTarget()=vvalue_size_1513
		and target_1.getArgument(0).(MulExpr).getRightOperand().(VariableAccess).getTarget()=vbucket_size_1518
		and target_1.getArgument(1).(BitwiseOrExpr).getValue()="1060032"
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("void *")
}

predicate func_2(Variable vkey_size_1513, VariableAccess target_2) {
		target_2.getTarget()=vkey_size_1513
		and target_2.getParent().(MulExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Variable vbucket_size_1518, VariableAccess target_3) {
		target_3.getTarget()=vbucket_size_1518
		and target_3.getParent().(MulExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_4(Variable vvalue_size_1513, VariableAccess target_4) {
		target_4.getTarget()=vvalue_size_1513
		and target_4.getParent().(MulExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_5(Variable vbucket_size_1518, VariableAccess target_5) {
		target_5.getTarget()=vbucket_size_1518
		and target_5.getParent().(MulExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

from Function func, Variable vkey_size_1513, Variable vvalue_size_1513, Variable vbucket_size_1518, FunctionCall target_0, FunctionCall target_1, VariableAccess target_2, VariableAccess target_3, VariableAccess target_4, VariableAccess target_5
where
func_0(vkey_size_1513, vbucket_size_1518, target_0)
and func_1(vvalue_size_1513, vbucket_size_1518, target_1)
and func_2(vkey_size_1513, target_2)
and func_3(vbucket_size_1518, target_3)
and func_4(vvalue_size_1513, target_4)
and func_5(vbucket_size_1518, target_5)
and vkey_size_1513.getType().hasName("u32")
and vvalue_size_1513.getType().hasName("u32")
and vbucket_size_1518.getType().hasName("u32")
and vkey_size_1513.(LocalVariable).getFunction() = func
and vvalue_size_1513.(LocalVariable).getFunction() = func
and vbucket_size_1518.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
