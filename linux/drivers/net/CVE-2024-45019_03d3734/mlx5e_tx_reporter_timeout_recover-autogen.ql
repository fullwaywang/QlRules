/**
 * @name linux-03d3734bd692affe4d0e9c9d638f491aaf37411b-mlx5e_tx_reporter_timeout_recover
 * @id cpp/linux/03d3734bd692affe4d0e9c9d638f491aaf37411b/mlx5e-tx-reporter-timeout-recover
 * @description linux-03d3734bd692affe4d0e9c9d638f491aaf37411b-drivers/net/ethernet/mellanox/mlx5/core/en/reporter_tx.c-mlx5e_tx_reporter_timeout_recover CVE-2024-45019
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_99, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="state_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpriv_99
			)
		)
		and obj_0.getTarget().hasName("mutex_lock_nested")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vpriv_99, IfStmt target_4, ExprStmt target_2, ExprStmt target_5, Function func) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="state_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpriv_99
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vpriv_99, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("mlx5e_safe_reopen_channels")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vpriv_99
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_3(Variable vpriv_99, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="priv"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("mlx5e_txqsq *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpriv_99
	)
}

predicate func_4(Function func, IfStmt target_4) {
	exists(BlockStmt obj_0 | obj_0=target_4.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getLValue() |
					obj_3.getTarget().getName()="status"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("mlx5e_tx_timeout_ctx *")
				)
				and obj_2.getRValue().(Literal).getValue()="1"
			)
		)
		and obj_0.getStmt(1).(ReturnStmt).getExpr().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_4.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vpriv_99, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="netdev"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpriv_99
		)
		and obj_0.getTarget().hasName("netdev_err")
		and obj_0.getArgument(1).(StringLiteral).getValue()="mlx5e_safe_reopen_channels failed recovering from a tx_timeout, err(%d).\n"
		and obj_0.getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	)
}

from Function func, Variable vpriv_99, ExprStmt target_2, ExprStmt target_3, IfStmt target_4, ExprStmt target_5
where
not func_0(vpriv_99, target_2, target_3, func)
and not func_1(vpriv_99, target_4, target_2, target_5, func)
and func_2(vpriv_99, target_2)
and func_3(vpriv_99, target_3)
and func_4(func, target_4)
and func_5(vpriv_99, target_5)
and vpriv_99.getType().hasName("mlx5e_priv *")
and vpriv_99.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
