/**
 * @name linux-ba91c49dedbde758ba0b72f57ac90b06ddf8e548-cake_get_tcphdr
 * @id cpp/linux/ba91c49dedbde758ba0b72f57ac90b06ddf8e548/cake-get-tcphdr
 * @description linux-ba91c49dedbde758ba0b72f57ac90b06ddf8e548-net/sched/sch_cake.c-cake_get_tcphdr CVE-2021-47243
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtcph_906, ReturnStmt target_2, ExprStmt target_3, NotExpr target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="doff"
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtcph_906
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="5"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtcph_906, ReturnStmt target_2, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vtcph_906
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(NotExpr target_1, Function func, ReturnStmt target_2) {
	target_2.getExpr().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getCondition()=target_1
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vtcph_906, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtcph_906
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("skb_header_pointer")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const sk_buff *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="20"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("tcphdr")
}

from Function func, Variable vtcph_906, NotExpr target_1, ReturnStmt target_2, ExprStmt target_3
where
not func_0(vtcph_906, target_2, target_3, target_1)
and func_1(vtcph_906, target_2, target_1)
and func_2(target_1, func, target_2)
and func_3(vtcph_906, target_3)
and vtcph_906.getType().hasName("const tcphdr *")
and vtcph_906.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
