/**
 * @name linux-9f260e0efa4766e56d0ac14f1aeea6ee5eb8fe83-bcm_connect
 * @id cpp/linux/9f260e0efa4766e56d0ac14f1aeea6ee5eb8fe83/bcm-connect
 * @description linux-9f260e0efa4766e56d0ac14f1aeea6ee5eb8fe83-net/can/bcm.c-bcm_connect CVE-2010-4565
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
		target_0.getValue()="%p"
		and not target_0.getValue()="%lu"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vsk_1490, Parameter vsock_1486, FunctionCall target_3, ExprStmt target_4) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("sock_i_ino")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vsk_1490
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("sprintf")
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="procname"
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_sock *")
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vsock_1486
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation())
		and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vsock_1486, VariableAccess target_2) {
		target_2.getTarget()=vsock_1486
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("sprintf")
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="procname"
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_sock *")
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
}

predicate func_3(Variable vsk_1490, FunctionCall target_3) {
		target_3.getTarget().hasName("bcm_sk")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vsk_1490
}

predicate func_4(Variable vsk_1490, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="bcm_proc_read"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_sock *")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("proc_create_data")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="procname"
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_sock *")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(OctalLiteral).getValue()="420"
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("proc_dir_entry *")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const file_operations")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vsk_1490
}

from Function func, Variable vsk_1490, Parameter vsock_1486, StringLiteral target_0, VariableAccess target_2, FunctionCall target_3, ExprStmt target_4
where
func_0(func, target_0)
and not func_1(vsk_1490, vsock_1486, target_3, target_4)
and func_2(vsock_1486, target_2)
and func_3(vsk_1490, target_3)
and func_4(vsk_1490, target_4)
and vsk_1490.getType().hasName("sock *")
and vsock_1486.getType().hasName("socket *")
and vsk_1490.(LocalVariable).getFunction() = func
and vsock_1486.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
