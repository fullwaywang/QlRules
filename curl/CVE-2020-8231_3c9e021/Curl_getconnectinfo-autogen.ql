/**
 * @name curl-3c9e021f86872baae412a427e807fbfa2f3e8-Curl_getconnectinfo
 * @id cpp/curl/3c9e021f86872baae412a427e807fbfa2f3e8/curl-getconnectinfo
 * @description curl-3c9e021f86872baae412a427e807fbfa2f3e8-lib/connect.c-Curl_getconnectinfo CVE-2020-8231
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfind_1398, ValueFieldAccess target_0) {
		target_0.getTarget().getName()="tofind"
		and target_0.getQualifier().(VariableAccess).getTarget()=vfind_1398
}

predicate func_1(Parameter vdata_1386, ValueFieldAccess target_1) {
		target_1.getTarget().getName()="lastconnect"
		and target_1.getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_1.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
}

predicate func_2(Function func, Literal target_2) {
		target_2.getValue()="0"
		and not target_2.getValue()="1"
		and target_2.getParent().(AssignExpr).getParent().(ExprStmt).getExpr() instanceof AssignExpr
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vdata_1386, BlockStmt target_15) {
	exists(EqualityOperation target_3 |
		target_3.getAnOperand().(ValueFieldAccess).getTarget().getName()="lastconnect_id"
		and target_3.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_3.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_3.getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_3.getParent().(LogicalAndExpr).getAnOperand() instanceof ValueFieldAccess
		and target_3.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="multi_easy"
		and target_3.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_3.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="multi"
		and target_3.getParent().(LogicalAndExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_3.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_15)
}

predicate func_4(Variable vfind_1398, Parameter vdata_1386, LogicalAndExpr target_18) {
	exists(AssignExpr target_4 |
		target_4.getLValue().(ValueFieldAccess).getTarget().getName()="id_tofind"
		and target_4.getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfind_1398
		and target_4.getRValue().(ValueFieldAccess).getTarget().getName()="lastconnect_id"
		and target_4.getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_4.getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_18.getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Parameter vdata_1386, ValueFieldAccess target_20, ExprStmt target_21) {
	exists(AssignExpr target_5 |
		target_5.getLValue().(ValueFieldAccess).getTarget().getName()="lastconnect_id"
		and target_5.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_5.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_5.getRValue().(UnaryMinusExpr).getValue()="-1"
		and target_20.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_5.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_21.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_6(Variable vc_1397, LogicalAndExpr target_18, ExprStmt target_23) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vc_1397
		and target_6.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="found"
		and target_6.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("connfind")
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(6)=target_6
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
		and target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_23.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_9(Parameter vdata_1386, PointerFieldAccess target_9) {
		target_9.getTarget().getName()="state"
		and target_9.getQualifier().(VariableAccess).getTarget()=vdata_1386
}

predicate func_10(Parameter vdata_1386, PointerFieldAccess target_10) {
		target_10.getTarget().getName()="state"
		and target_10.getQualifier().(VariableAccess).getTarget()=vdata_1386
}

predicate func_11(Parameter vdata_1386, PointerFieldAccess target_11) {
		target_11.getTarget().getName()="state"
		and target_11.getQualifier().(VariableAccess).getTarget()=vdata_1386
}

predicate func_12(Parameter vdata_1386, Initializer target_12) {
		target_12.getExpr().(ValueFieldAccess).getTarget().getName()="lastconnect"
		and target_12.getExpr().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_12.getExpr().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
}

predicate func_13(Parameter vdata_1386, ValueFieldAccess target_20, ExprStmt target_21, ValueFieldAccess target_13) {
		target_13.getTarget().getName()="lastconnect"
		and target_13.getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_13.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_13.getParent().(AssignExpr).getRValue() = target_13
		and target_13.getParent().(AssignExpr).getLValue() instanceof ValueFieldAccess
		and target_20.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_13.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_13.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_21.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_14(Parameter vdata_1386, AssignExpr target_14) {
		target_14.getLValue().(ValueFieldAccess).getTarget().getName()="lastconnect"
		and target_14.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_14.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_14.getRValue() instanceof Literal
}

predicate func_15(Variable vfind_1398, BlockStmt target_15) {
		target_15.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue() instanceof ValueFieldAccess
		and target_15.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof ValueFieldAccess
		and target_15.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="found"
		and target_15.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfind_1398
		and target_15.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_18(Parameter vdata_1386, LogicalAndExpr target_18) {
		target_18.getAnOperand() instanceof ValueFieldAccess
		and target_18.getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="multi_easy"
		and target_18.getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_18.getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="multi"
		and target_18.getAnOperand().(LogicalOrExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
}

predicate func_20(Parameter vdata_1386, ValueFieldAccess target_20) {
		target_20.getTarget().getName()="lastconnect"
		and target_20.getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_20.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
}

predicate func_21(Variable vfind_1398, Parameter vdata_1386, ExprStmt target_21) {
		target_21.getExpr().(FunctionCall).getTarget().hasName("Curl_conncache_foreach")
		and target_21.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_1386
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getCondition().(PointerFieldAccess).getTarget().getName()="multi_easy"
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getThen().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="conn_cache"
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getThen().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="multi_easy"
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getThen().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getElse().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="conn_cache"
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getElse().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="multi"
		and target_21.getExpr().(FunctionCall).getArgument(1).(ConditionalExpr).getElse().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1386
		and target_21.getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vfind_1398
}

predicate func_23(Variable vc_1397, ExprStmt target_23) {
		target_23.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("connectdata **")
		and target_23.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vc_1397
}

from Function func, Variable vc_1397, Variable vfind_1398, Parameter vdata_1386, ValueFieldAccess target_0, ValueFieldAccess target_1, Literal target_2, PointerFieldAccess target_9, PointerFieldAccess target_10, PointerFieldAccess target_11, Initializer target_12, ValueFieldAccess target_13, AssignExpr target_14, BlockStmt target_15, LogicalAndExpr target_18, ValueFieldAccess target_20, ExprStmt target_21, ExprStmt target_23
where
func_0(vfind_1398, target_0)
and func_1(vdata_1386, target_1)
and func_2(func, target_2)
and not func_3(vdata_1386, target_15)
and not func_4(vfind_1398, vdata_1386, target_18)
and not func_5(vdata_1386, target_20, target_21)
and not func_6(vc_1397, target_18, target_23)
and func_9(vdata_1386, target_9)
and func_10(vdata_1386, target_10)
and func_11(vdata_1386, target_11)
and func_12(vdata_1386, target_12)
and func_13(vdata_1386, target_20, target_21, target_13)
and func_14(vdata_1386, target_14)
and func_15(vfind_1398, target_15)
and func_18(vdata_1386, target_18)
and func_20(vdata_1386, target_20)
and func_21(vfind_1398, vdata_1386, target_21)
and func_23(vc_1397, target_23)
and vc_1397.getType().hasName("connectdata *")
and vfind_1398.getType().hasName("connfind")
and vdata_1386.getType().hasName("Curl_easy *")
and vc_1397.(LocalVariable).getFunction() = func
and vfind_1398.(LocalVariable).getFunction() = func
and vdata_1386.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
