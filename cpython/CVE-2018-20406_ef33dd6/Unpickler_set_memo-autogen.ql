/**
 * @name cpython-ef33dd6036aafbd3f06c1d56e2b1a81dae3da63c-Unpickler_set_memo
 * @id cpp/cpython/ef33dd6036aafbd3f06c1d56e2b1a81dae3da63c/unpickler-set-memo
 * @description cpython-ef33dd6036aafbd3f06c1d56e2b1a81dae3da63c-Modules/_pickle.c-Unpickler_set_memo CVE-2018-20406
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="0"
		and not target_1.getValue()="1"
		and target_1.getParent().(GEExpr).getParent().(WhileStmt).getCondition() instanceof RelationalOperation
		and target_1.getEnclosingFunction() = func
}

predicate func_4(VariableAccess target_9, Function func) {
	exists(ForStmt target_4 |
		target_4.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getType().hasName("size_t")
		and target_4.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="18446744073709551615"
		and target_4.getUpdate().(PostfixDecrExpr).getOperand().(VariableAccess).getType().hasName("size_t")
		and target_4.getStmt() instanceof BlockStmt
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_4
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable v_py_xdecref_tmp_6842, RelationalOperation target_12, BlockStmt target_5) {
		target_5.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_5.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=v_py_xdecref_tmp_6842
		and target_5.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_5.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(DoStmt).getCondition().(Literal).getValue()="0"
		and target_5.getParent().(WhileStmt).getCondition()=target_12
}

predicate func_8(Variable vi_1_6775, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1_6775
		and target_8.getExpr().(AssignExpr).getRValue() instanceof Literal
}

predicate func_9(Variable vnew_memo_size_6774, BlockStmt target_13, VariableAccess target_9) {
		target_9.getTarget()=vnew_memo_size_6774
		and target_9.getParent().(IfStmt).getThen()=target_13
}

predicate func_10(Variable vnew_memo_size_6774, Variable vi_1_6775, VariableAccess target_9, ExprStmt target_10) {
		target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1_6775
		and target_10.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vnew_memo_size_6774
		and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_11(Variable vi_1_6775, VariableAccess target_9, WhileStmt target_11) {
		target_11.getCondition().(RelationalOperation).getGreaterOperand().(PrefixDecrExpr).getOperand().(VariableAccess).getTarget()=vi_1_6775
		and target_11.getCondition().(RelationalOperation).getLesserOperand() instanceof Literal
		and target_11.getStmt() instanceof BlockStmt
		and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_12(Function func, RelationalOperation target_12) {
		 (target_12 instanceof GEExpr or target_12 instanceof LEExpr)
		and target_12.getGreaterOperand() instanceof PrefixDecrExpr
		and target_12.getLesserOperand() instanceof Literal
		and target_12.getEnclosingFunction() = func
}

predicate func_13(Function func, BlockStmt target_13) {
		target_13.getStmt(0) instanceof ExprStmt
		and target_13.getStmt(1) instanceof WhileStmt
		and target_13.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("PyMem_Free")
		and target_13.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("PyObject **")
		and target_13.getEnclosingFunction() = func
}

from Function func, Variable vnew_memo_size_6774, Variable vi_1_6775, Variable v_py_xdecref_tmp_6842, Literal target_1, BlockStmt target_5, ExprStmt target_8, VariableAccess target_9, ExprStmt target_10, WhileStmt target_11, RelationalOperation target_12, BlockStmt target_13
where
func_1(func, target_1)
and not func_4(target_9, func)
and func_5(v_py_xdecref_tmp_6842, target_12, target_5)
and func_8(vi_1_6775, target_8)
and func_9(vnew_memo_size_6774, target_13, target_9)
and func_10(vnew_memo_size_6774, vi_1_6775, target_9, target_10)
and func_11(vi_1_6775, target_9, target_11)
and func_12(func, target_12)
and func_13(func, target_13)
and vnew_memo_size_6774.getType().hasName("Py_ssize_t")
and vi_1_6775.getType().hasName("Py_ssize_t")
and v_py_xdecref_tmp_6842.getType().hasName("PyObject *")
and vnew_memo_size_6774.(LocalVariable).getFunction() = func
and vi_1_6775.(LocalVariable).getFunction() = func
and v_py_xdecref_tmp_6842.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
