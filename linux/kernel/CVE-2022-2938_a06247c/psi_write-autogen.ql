/**
 * @name linux-a06247c6804f1a7c86a2e5398a4c1f1db1471848-psi_write
 * @id cpp/linux/a06247c6804f1a7c86a2e5398a4c1f1db1471848/psi-write
 * @description linux-a06247c6804f1a7c86a2e5398a4c1f1db1471848-psi_write CVE-2022-2938
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnbytes_1300, Initializer target_0) {
		target_0.getExpr().(VariableAccess).getTarget()=vnbytes_1300
}

predicate func_1(Function func, Initializer target_1) {
		target_1.getExpr().(SizeofExprOperator).getValue()="32"
		and target_1.getExpr().getEnclosingFunction() = func
}

predicate func_2(Variable v__UNIQUE_ID___x2190_1313, Variable v__UNIQUE_ID___y2191_1313, VariableAccess target_2) {
		target_2.getTarget()=v__UNIQUE_ID___x2190_1313
		and target_2.getParent().(LTExpr).getGreaterOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___y2191_1313
}

/*predicate func_3(Variable v__UNIQUE_ID___x2190_1313, Variable v__UNIQUE_ID___y2191_1313, VariableAccess target_3) {
		target_3.getTarget()=v__UNIQUE_ID___y2191_1313
		and target_3.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___x2190_1313
}

*/
predicate func_4(Variable v__UNIQUE_ID___x2190_1313, VariableAccess target_4) {
		target_4.getTarget()=v__UNIQUE_ID___x2190_1313
}

predicate func_5(Variable v__UNIQUE_ID___y2191_1313, VariableAccess target_5) {
		target_5.getTarget()=v__UNIQUE_ID___y2191_1313
}

predicate func_6(Variable vnew_1305, FunctionCall target_14, FunctionCall target_6) {
		target_6.getTarget().hasName("psi_trigger_replace")
		and not target_6.getTarget().hasName("mutex_unlock")
		and target_6.getArgument(0) instanceof AddressOfExpr
		and target_6.getArgument(1).(VariableAccess).getTarget()=vnew_1305
		and target_14.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getArgument(1).(VariableAccess).getLocation())
}

predicate func_7(Variable vseq_1304, AddressOfExpr target_12, Function func) {
	exists(IfStmt target_7 |
		target_7.getCondition().(PointerFieldAccess).getTarget().getName()="private"
		and target_7.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
		and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_7.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
		and target_7.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
		and target_7.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_8(Variable vseq_1304, AddressOfExpr target_12) {
	exists(AddressOfExpr target_8 |
		target_8.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
		and target_8.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

*/
predicate func_9(Variable vseq_1304, FunctionCall target_15) {
	exists(ExprStmt target_9 |
		target_9.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_9
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15)
}

predicate func_10(Function func) {
	exists(DoStmt target_10 |
		target_10.getCondition().(Literal).getValue()="0"
		and target_10.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_10.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_10.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_10.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(2).(DoStmt).getCondition().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_10)
}

predicate func_11(Variable vnew_1305, FunctionCall target_15, ReturnStmt target_11) {
		target_11.getExpr().(FunctionCall).getTarget().hasName("PTR_ERR")
		and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_1305
		and target_11.getParent().(IfStmt).getCondition()=target_15
}

predicate func_12(Variable vseq_1304, AddressOfExpr target_12) {
		target_12.getOperand().(PointerFieldAccess).getTarget().getName()="private"
		and target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
		and target_12.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_13(Variable vnew_1305, VariableAccess target_13) {
		target_13.getTarget()=vnew_1305
		and target_13.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_14(Variable vnew_1305, FunctionCall target_14) {
		target_14.getTarget().hasName("PTR_ERR")
		and target_14.getArgument(0).(VariableAccess).getTarget()=vnew_1305
}

predicate func_15(Variable vnew_1305, FunctionCall target_15) {
		target_15.getTarget().hasName("IS_ERR")
		and target_15.getArgument(0).(VariableAccess).getTarget()=vnew_1305
}

from Function func, Parameter vnbytes_1300, Variable vseq_1304, Variable vnew_1305, Variable v__UNIQUE_ID___x2190_1313, Variable v__UNIQUE_ID___y2191_1313, Initializer target_0, Initializer target_1, VariableAccess target_2, VariableAccess target_4, VariableAccess target_5, FunctionCall target_6, ReturnStmt target_11, AddressOfExpr target_12, VariableAccess target_13, FunctionCall target_14, FunctionCall target_15
where
func_0(vnbytes_1300, target_0)
and func_1(func, target_1)
and func_2(v__UNIQUE_ID___x2190_1313, v__UNIQUE_ID___y2191_1313, target_2)
and func_4(v__UNIQUE_ID___x2190_1313, target_4)
and func_5(v__UNIQUE_ID___y2191_1313, target_5)
and func_6(vnew_1305, target_14, target_6)
and not func_7(vseq_1304, target_12, func)
and not func_9(vseq_1304, target_15)
and not func_10(func)
and func_11(vnew_1305, target_15, target_11)
and func_12(vseq_1304, target_12)
and func_13(vnew_1305, target_13)
and func_14(vnew_1305, target_14)
and func_15(vnew_1305, target_15)
and vnbytes_1300.getType().hasName("size_t")
and vseq_1304.getType().hasName("seq_file *")
and vnew_1305.getType().hasName("psi_trigger *")
and v__UNIQUE_ID___x2190_1313.getType().hasName("size_t")
and v__UNIQUE_ID___y2191_1313.getType().hasName("unsigned long")
and vnbytes_1300.getFunction() = func
and vseq_1304.(LocalVariable).getFunction() = func
and vnew_1305.(LocalVariable).getFunction() = func
and v__UNIQUE_ID___x2190_1313.(LocalVariable).getFunction() = func
and v__UNIQUE_ID___y2191_1313.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
