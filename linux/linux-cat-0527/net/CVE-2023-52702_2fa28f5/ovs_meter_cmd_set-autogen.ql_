/**
 * @name linux-2fa28f5c6fcbfc794340684f36d2581b4f2d20b5-ovs_meter_cmd_set
 * @id cpp/linux/2fa28f5c6fcbfc794340684f36d2581b4f2d20b5/ovs-meter-cmd-set
 * @description linux-2fa28f5c6fcbfc794340684f36d2581b4f2d20b5-net/openvswitch/meter.c-ovs_meter_cmd_set CVE-2023-52702
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vold_meter_411, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("ovs_meter_free")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_meter_411
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("ovs_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vold_meter_411, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("ovs_meter_free")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_meter_411
}

from Function func, Variable vold_meter_411, ExprStmt target_1, ExprStmt target_2
where
not func_0(vold_meter_411, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vold_meter_411, target_2)
and vold_meter_411.getType().hasName("dp_meter *")
and vold_meter_411.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
