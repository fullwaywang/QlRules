/**
 * @name linux-4291086b1f081b869c6d79e5b7441633dc3ace00-n_tty_write
 * @id cpp/linux/4291086b1f081b869c6d79e5b7441633dc3ace00/n-tty-write
 * @description linux-4291086b1f081b869c6d79e5b7441633dc3ace00-drivers/tty/n_tty.c-n_tty_write CVE-2014-0196
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="output_lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("n_tty_data *")
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(IfStmt target_3, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="output_lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("n_tty_data *")
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="write"
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tty_struct *")
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("tty_struct *")
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const unsigned char *")
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("size_t")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, IfStmt target_3) {
	target_3.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="break_out"
	and target_3.getEnclosingFunction() = func
}

from Function func, ExprStmt target_2, IfStmt target_3
where
not func_0(target_2, func)
and not func_1(target_3, func)
and func_2(func, target_2)
and func_3(func, target_3)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
