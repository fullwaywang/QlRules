/**
 * @name linux-9824dfae5741275473a23a7ed5756c7b6efacc9d-ipddp_ioctl
 * @id cpp/linux/9824dfae5741275473a23a7ed5756c7b6efacc9d/ipddp-ioctl
 * @description linux-9824dfae5741275473a23a7ed5756c7b6efacc9d-drivers/net/appletalk/ipddp.c-ipddp_ioctl CVE-2018-20511
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrcp2_270, Variable vrp_270, FunctionCall target_0) {
	target_0.getTarget().hasName("__memcpy")
	and not target_0.getTarget().hasName("__memset")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vrcp2_270
	and target_0.getArgument(1).(VariableAccess).getTarget()=vrp_270
	and target_0.getArgument(2).(SizeofExprOperator).getValue()="32"
}

predicate func_2(Variable vrcp2_270, Variable vrp_270, VariableAccess target_6, IfStmt target_8) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ip"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcp2_270
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ip"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrp_270
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getCondition().(VariableAccess).getLocation()))
}

predicate func_3(Variable vrcp2_270, Variable vrp_270, VariableAccess target_6, IfStmt target_9) {
exists(ExprStmt target_3 |
	target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="at"
	and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcp2_270
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="at"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrp_270
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_9.getCondition().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vrcp2_270, Variable vrp_270, VariableAccess target_6, AddressOfExpr target_10) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flags"
	and target_4.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vrcp2_270
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrp_270
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_4
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_4.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(VariableAccess).getLocation()))
}

predicate func_5(Variable vrp_270, VariableAccess target_5) {
	target_5.getTarget()=vrp_270
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(Variable vrp_270, ExprStmt target_12, VariableAccess target_6) {
	target_6.getTarget()=vrp_270
	and target_6.getParent().(IfStmt).getThen()=target_12
}

predicate func_8(Variable vrcp2_270, Variable vrp_270, IfStmt target_8) {
	target_8.getCondition().(VariableAccess).getTarget()=vrp_270
	and target_8.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("copy_to_user")
	and target_8.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ipddp_route *")
	and target_8.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vrcp2_270
	and target_8.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_8.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(2).(SizeofTypeOperator).getValue()="32"
	and target_8.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_8.getElse().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-2"
}

predicate func_9(Variable vrp_270, IfStmt target_9) {
	target_9.getCondition().(VariableAccess).getTarget()=vrp_270
	and target_9.getThen().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_10(Variable vrcp2_270, AddressOfExpr target_10) {
	target_10.getOperand().(VariableAccess).getTarget()=vrcp2_270
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_12(Function func, ExprStmt target_12) {
	target_12.getExpr() instanceof FunctionCall
	and target_12.getEnclosingFunction() = func
}

from Function func, Variable vrcp2_270, Variable vrp_270, FunctionCall target_0, VariableAccess target_5, VariableAccess target_6, IfStmt target_8, IfStmt target_9, AddressOfExpr target_10, ExprStmt target_12
where
func_0(vrcp2_270, vrp_270, target_0)
and not func_2(vrcp2_270, vrp_270, target_6, target_8)
and not func_3(vrcp2_270, vrp_270, target_6, target_9)
and not func_4(vrcp2_270, vrp_270, target_6, target_10)
and func_5(vrp_270, target_5)
and func_6(vrp_270, target_12, target_6)
and func_8(vrcp2_270, vrp_270, target_8)
and func_9(vrp_270, target_9)
and func_10(vrcp2_270, target_10)
and func_12(func, target_12)
and vrcp2_270.getType().hasName("ipddp_route")
and vrp_270.getType().hasName("ipddp_route *")
and vrcp2_270.(LocalVariable).getFunction() = func
and vrp_270.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
