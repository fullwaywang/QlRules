/**
 * @name linux-c085c49920b2f900ba716b4ca1c1a55ece9872cc-br_mdb_fill_info
 * @id cpp/linux/c085c49920b2f900ba716b4ca1c1a55ece9872cc/br-mdb-fill-info
 * @description linux-c085c49920b2f900ba716b4ca1c1a55ece9872cc-net/bridge/br_mdb.c-br_mdb_fill_info CVE-2013-2636
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable ve_82, VariableAccess target_1) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=ve_82
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="28"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1)
}

predicate func_1(Variable vport_65, BlockStmt target_3, VariableAccess target_1) {
	target_1.getTarget()=vport_65
	and target_1.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Variable vport_65, Variable ve_82, BlockStmt target_3) {
	target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ifindex"
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=ve_82
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ifindex"
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="dev"
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vport_65
}

from Function func, Variable vport_65, Variable ve_82, VariableAccess target_1, BlockStmt target_3
where
not func_0(ve_82, target_1)
and func_1(vport_65, target_3, target_1)
and func_3(vport_65, ve_82, target_3)
and vport_65.getType().hasName("net_bridge_port *")
and ve_82.getType().hasName("br_mdb_entry")
and vport_65.(LocalVariable).getFunction() = func
and ve_82.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
