/**
 * @name linux-0b074ab7fc0d575247b9cc9f93bb7e007ca38840-line6_disconnect
 * @id cpp/linux/0b074ab7fc0d575247b9cc9f93bb7e007ca38840/line6-disconnect
 * @description linux-0b074ab7fc0d575247b9cc9f93bb7e007ca38840-sound/usb/line6/driver.c-line6_disconnect CVE-2019-15223
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vline6_819, IfStmt target_1, NotExpr target_2, EqualityOperation target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("cancel_delayed_work")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="startup_work"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6_819
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vline6_819, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="urb_listen"
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6_819
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("line6_stop_listen")
	and target_1.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vline6_819
}

predicate func_2(Variable vline6_819, NotExpr target_2) {
	target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("usb_device *")
	and target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="usbdev"
	and target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6_819
}

predicate func_3(Variable vline6_819, EqualityOperation target_3) {
	target_3.getLeftOperand().(PointerFieldAccess).getTarget().getName()="urb_listen"
	and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6_819
	and target_3.getRightOperand().(Literal).getValue()="0"
}

from Function func, Variable vline6_819, IfStmt target_1, NotExpr target_2, EqualityOperation target_3
where
not func_0(vline6_819, target_1, target_2, target_3, func)
and func_1(vline6_819, target_1)
and func_2(vline6_819, target_2)
and func_3(vline6_819, target_3)
and vline6_819.getType().hasName("usb_line6 *")
and vline6_819.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
