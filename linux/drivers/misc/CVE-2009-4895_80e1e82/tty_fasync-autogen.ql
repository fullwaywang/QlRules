/**
 * @name linux-80e1e823989ec44d8e35bdfddadbddcffec90424-tty_fasync
 * @id cpp/linux/80e1e823989ec44d8e35bdfddadbddcffec90424/tty-fasync
 * @description linux-80e1e823989ec44d8e35bdfddadbddcffec90424-drivers/char/tty_io.c-tty_fasync CVE-2009-4895
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpid_1943, VariableAccess target_2, ExprStmt target_3, ExprStmt target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("get_pid")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpid_1943
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vpid_1943, VariableAccess target_2, ExprStmt target_4) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("put_pid")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpid_1943
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(8)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter von_1926, BlockStmt target_5, VariableAccess target_2) {
		target_2.getTarget()=von_1926
		and target_2.getParent().(IfStmt).getThen()=target_5
}

predicate func_3(Variable vpid_1943, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpid_1943
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("task_pid")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("get_current")
}

predicate func_4(Variable vpid_1943, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__f_setown")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("file *")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpid_1943
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("pid_type")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(Literal).getValue()="0"
}

predicate func_5(Function func, BlockStmt target_5) {
		target_5.getStmt(2).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("waitqueue_active")
		and target_5.getStmt(2).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="read_wait"
		and target_5.getStmt(2).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tty_struct *")
		and target_5.getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="minimum_to_wake"
		and target_5.getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tty_struct *")
		and target_5.getStmt(2).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
		and target_5.getEnclosingFunction() = func
}

from Function func, Variable vpid_1943, Parameter von_1926, VariableAccess target_2, ExprStmt target_3, ExprStmt target_4, BlockStmt target_5
where
not func_0(vpid_1943, target_2, target_3, target_4)
and not func_1(vpid_1943, target_2, target_4)
and func_2(von_1926, target_5, target_2)
and func_3(vpid_1943, target_3)
and func_4(vpid_1943, target_4)
and func_5(func, target_5)
and vpid_1943.getType().hasName("pid *")
and von_1926.getType().hasName("int")
and vpid_1943.(LocalVariable).getFunction() = func
and von_1926.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
