/**
 * @name linux-51722b99f41f5e722ffa10b8f61e802a0e70b331-btrfs_submit_chunk
 * @id cpp/linux/51722b99f41f5e722ffa10b8f61e802a0e70b331/btrfs-submit-chunk
 * @description linux-51722b99f41f5e722ffa10b8f61e802a0e70b331-fs/btrfs/bio.c-btrfs_submit_chunk CVE-2024-46687
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbbio_645, FunctionCall target_0) {
	target_0.getTarget().hasName("btrfs_cleanup_bio")
	and not target_0.getTarget().hasName("btrfs_orig_bbio_end_io")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbbio_645
}

predicate func_1(Parameter vbbio_645, Initializer target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=vbbio_645
}

predicate func_2(Variable vorig_bbio_649, Variable vret_657, FunctionCall target_2) {
	target_2.getTarget().hasName("btrfs_bio_end_io")
	and not target_2.getTarget().hasName("__builtin_unreachable")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vorig_bbio_649
	and target_2.getArgument(1).(VariableAccess).getTarget()=vret_657
}

predicate func_3(Variable vfs_info_648, LabelStmt target_12, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("btrfs_bio_counter_dec")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vfs_info_648
	)
	and target_12.getLocation().isBefore(target_3.getLocation())
}

predicate func_4(Parameter vbbio_645, AddressOfExpr target_13) {
exists(PointerFieldAccess target_4 |
	exists(VariableAccess obj_0 | obj_0=target_4.getQualifier() |
		obj_0.getTarget()=vbbio_645
		and obj_0.getLocation().isBefore(target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	)
	and target_4.getTarget().getName()="private"
)
}

predicate func_5(RelationalOperation target_14, Function func) {
exists(ExprStmt target_5 |
	exists(ConditionalExpr obj_0 | obj_0=target_5.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getCondition() |
			obj_1.getTarget().hasName("__builtin_expect")
			and obj_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="bi_pool"
			and obj_1.getArgument(1) instanceof Literal
		)
		and obj_0.getThen() instanceof Literal
		and obj_0.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	)
	and exists(BlockStmt obj_2 | obj_2=target_5.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(1)=target_5
			and obj_3.getCondition()=target_14
		)
	)
	and target_5.getEnclosingFunction() = func
)
}

predicate func_6(RelationalOperation target_14, Function func) {
exists(ExprStmt target_6 |
	exists(ConditionalExpr obj_0 | obj_0=target_6.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getCondition() |
			obj_1.getTarget().hasName("__builtin_expect")
			and obj_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("btrfs_bio *")
			and obj_1.getArgument(1) instanceof Literal
		)
		and obj_0.getThen() instanceof Literal
		and obj_0.getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	)
	and exists(BlockStmt obj_2 | obj_2=target_6.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(2)=target_6
			and obj_3.getCondition()=target_14
		)
	)
	and target_6.getEnclosingFunction() = func
)
}

predicate func_7(Variable vret_657, RelationalOperation target_14) {
exists(ExprStmt target_7 |
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="bio"
				and obj_2.getQualifier().(VariableAccess).getType().hasName("btrfs_bio *")
			)
			and obj_1.getTarget().getName()="bi_status"
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vret_657
	)
	and exists(BlockStmt obj_3 | obj_3=target_7.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(3)=target_7
			and obj_4.getCondition()=target_14
		)
	)
)
}

predicate func_8(Parameter vbbio_645, Variable vret_657, ExprStmt target_15, IfStmt target_17, Function func) {
exists(ExprStmt target_8 |
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="bio"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vbbio_645
			)
			and obj_1.getTarget().getName()="bi_status"
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vret_657
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
	and target_8.getLocation().isBefore(target_15.getLocation())
	and target_17.getCondition().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
)
}

predicate func_9(Parameter vbbio_645) {
exists(FunctionCall target_9 |
	target_9.getTarget().hasName("btrfs_orig_bbio_end_io")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vbbio_645
)
}

predicate func_10(Parameter vbbio_645, VariableAccess target_10) {
	target_10.getTarget()=vbbio_645
}

predicate func_11(Variable vret_657, VariableAccess target_11) {
	target_11.getTarget()=vret_657
	and target_11.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_12(Function func, LabelStmt target_12) {
	target_12.getName() ="fail"
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Parameter vbbio_645, AddressOfExpr target_13) {
	exists(PointerFieldAccess obj_0 | obj_0=target_13.getOperand() |
		obj_0.getTarget().getName()="bio"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vbbio_645
	)
}

predicate func_14(ExprStmt target_18, Function func, RelationalOperation target_14) {
	 (target_14 instanceof GTExpr or target_14 instanceof LTExpr)
	and target_14.getLesserOperand().(VariableAccess).getTarget().getType().hasName("u64")
	and target_14.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("u64")
	and target_14.getParent().(IfStmt).getThen()=target_18
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Function func, ExprStmt target_15) {
	target_15.getExpr() instanceof FunctionCall
	and target_15.getEnclosingFunction() = func
}

predicate func_17(Variable vret_657, LogicalOrExpr target_19, IfStmt target_17) {
	target_17.getCondition().(VariableAccess).getTarget()=vret_657
	and target_17.getThen().(GotoStmt).getName() ="fail_put_bio"
	and target_17.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_19
}

predicate func_18(Function func, ExprStmt target_18) {
	target_18.getExpr() instanceof FunctionCall
	and target_18.getEnclosingFunction() = func
}

predicate func_19(Variable vfs_info_648, LogicalOrExpr target_19) {
	exists(LogicalAndExpr obj_0 | obj_0=target_19.getRightOperand() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("btrfs_is_zoned")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vfs_info_648
			)
			and obj_1.getRightOperand().(VariableAccess).getTarget().getType().hasName("btrfs_inode *")
		)
		and exists(BitwiseAndExpr obj_3 | obj_3=obj_0.getRightOperand() |
			exists(PointerFieldAccess obj_4 | obj_4=obj_3.getLeftOperand() |
				obj_4.getTarget().getName()="flags"
				and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("btrfs_inode *")
			)
			and obj_3.getRightOperand().(BinaryBitwiseOperation).getValue()="1"
		)
	)
	and target_19.getLeftOperand().(VariableAccess).getTarget().getType().hasName("bool")
}

from Function func, Parameter vbbio_645, Variable vfs_info_648, Variable vorig_bbio_649, Variable vret_657, FunctionCall target_0, Initializer target_1, FunctionCall target_2, ExprStmt target_3, VariableAccess target_10, VariableAccess target_11, LabelStmt target_12, AddressOfExpr target_13, RelationalOperation target_14, ExprStmt target_15, IfStmt target_17, ExprStmt target_18, LogicalOrExpr target_19
where
func_0(vbbio_645, target_0)
and func_1(vbbio_645, target_1)
and func_2(vorig_bbio_649, vret_657, target_2)
and func_3(vfs_info_648, target_12, target_3)
and not func_4(vbbio_645, target_13)
and not func_5(target_14, func)
and not func_6(target_14, func)
and not func_7(vret_657, target_14)
and not func_8(vbbio_645, vret_657, target_15, target_17, func)
and not func_9(vbbio_645)
and func_10(vbbio_645, target_10)
and func_11(vret_657, target_11)
and func_12(func, target_12)
and func_13(vbbio_645, target_13)
and func_14(target_18, func, target_14)
and func_15(func, target_15)
and func_17(vret_657, target_19, target_17)
and func_18(func, target_18)
and func_19(vfs_info_648, target_19)
and vbbio_645.getType().hasName("btrfs_bio *")
and vfs_info_648.getType().hasName("btrfs_fs_info *")
and vorig_bbio_649.getType().hasName("btrfs_bio *")
and vret_657.getType().hasName("blk_status_t")
and vbbio_645.getFunction() = func
and vfs_info_648.(LocalVariable).getFunction() = func
and vorig_bbio_649.(LocalVariable).getFunction() = func
and vret_657.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
