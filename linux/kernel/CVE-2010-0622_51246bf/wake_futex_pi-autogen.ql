/**
 * @name linux-51246bfd189064079c54421507236fd2723b18f3-wake_futex_pi
 * @id cpp/linux/51246bfd189064079c54421507236fd2723b18f3/wake-futex-pi
 * @description linux-51246bfd189064079c54421507236fd2723b18f3-kernel/futex.c-wake_futex_pi CVE-2010-0622
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpi_state_755, NotExpr target_1, AddressOfExpr target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="owner"
		and target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpi_state_755
		and target_0.getCondition().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("get_current")
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vpi_state_755, NotExpr target_1) {
		target_1.getOperand().(VariableAccess).getTarget()=vpi_state_755
}

predicate func_2(Variable vpi_state_755, AddressOfExpr target_2) {
		target_2.getOperand().(ValueFieldAccess).getTarget().getName()="wait_lock"
		and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="pi_mutex"
		and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpi_state_755
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_raw_spin_lock")
}

from Function func, Variable vpi_state_755, NotExpr target_1, AddressOfExpr target_2
where
not func_0(vpi_state_755, target_1, target_2, func)
and func_1(vpi_state_755, target_1)
and func_2(vpi_state_755, target_2)
and vpi_state_755.getType().hasName("futex_pi_state *")
and vpi_state_755.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
