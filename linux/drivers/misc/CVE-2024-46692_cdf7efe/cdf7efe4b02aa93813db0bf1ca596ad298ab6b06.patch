commit cdf7efe4b02aa93813db0bf1ca596ad298ab6b06
Author: Murali Nalajala <quic_mnalajal@quicinc.com>
Date:   Wed Aug 14 15:32:44 2024 -0700

    firmware: qcom: scm: Mark get_wq_ctx() as atomic call
    
    commit 9960085a3a82c58d3323c1c20b991db6045063b0 upstream.
    
    Currently get_wq_ctx() is wrongly configured as a standard call. When two
    SMC calls are in sleep and one SMC wakes up, it calls get_wq_ctx() to
    resume the corresponding sleeping thread. But if get_wq_ctx() is
    interrupted, goes to sleep and another SMC call is waiting to be allocated
    a waitq context, it leads to a deadlock.
    
    To avoid this get_wq_ctx() must be an atomic call and can't be a standard
    SMC call. Hence mark get_wq_ctx() as a fast call.
    
    Fixes: 6bf325992236 ("firmware: qcom: scm: Add wait-queue handling logic")
    Cc: stable@vger.kernel.org
    Signed-off-by: Murali Nalajala <quic_mnalajal@quicinc.com>
    Signed-off-by: Unnathi Chalicheemala <quic_uchalich@quicinc.com>
    Reviewed-by: Elliot Berman <quic_eberman@quicinc.com>
    Link: https://lore.kernel.org/r/20240814223244.40081-1-quic_uchalich@quicinc.com
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/firmware/qcom_scm-smc.c b/drivers/firmware/qcom_scm-smc.c
index 16cf88acfa8e..0a2a2c794d0e 100644
--- a/drivers/firmware/qcom_scm-smc.c
+++ b/drivers/firmware/qcom_scm-smc.c
@@ -71,7 +71,7 @@ int scm_get_wq_ctx(u32 *wq_ctx, u32 *flags, u32 *more_pending)
 	struct arm_smccc_res get_wq_res;
 	struct arm_smccc_args get_wq_ctx = {0};
 
-	get_wq_ctx.args[0] = ARM_SMCCC_CALL_VAL(ARM_SMCCC_STD_CALL,
+	get_wq_ctx.args[0] = ARM_SMCCC_CALL_VAL(ARM_SMCCC_FAST_CALL,
 				ARM_SMCCC_SMC_64, ARM_SMCCC_OWNER_SIP,
 				SCM_SMC_FNID(QCOM_SCM_SVC_WAITQ, QCOM_SCM_WAITQ_GET_WQ_CTX));
 
