/**
 * @name linux-84a53580c5d2138c7361c7c3eea5b31827e63b35-seg6_genl_sethmac
 * @id cpp/linux/84a53580c5d2138c7361c7c3eea5b31827e63b35/seg6-genl-sethmac
 * @description linux-84a53580c5d2138c7361c7c3eea5b31827e63b35-net/ipv6/seg6.c-seg6_genl_sethmac CVE-2023-2860
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_159, Variable vslen_161, Parameter vinfo_152, IfStmt target_1, ExprStmt target_2, NotExpr target_3, ExprStmt target_4, NotExpr target_5, ArrayExpr target_6, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vslen_161
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getTarget().hasName("nla_len")
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="attrs"
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_152
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_159
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
	and target_0.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out_unlock"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
	and target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_159, IfStmt target_1) {
	target_1.getCondition().(VariableAccess).getTarget().getType().hasName("seg6_hmac_info *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_159
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("seg6_hmac_info_del")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget()=verr_159
	and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="out_unlock"
}

predicate func_2(Variable verr_159, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_159
	and target_2.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
}

predicate func_3(Variable vslen_161, NotExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vslen_161
}

predicate func_4(Variable vslen_161, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="secret"
	and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("seg6_hmac_info *")
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("char *")
	and target_4.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vslen_161
}

predicate func_5(Parameter vinfo_152, NotExpr target_5) {
	target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="attrs"
	and target_5.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_152
}

predicate func_6(Parameter vinfo_152, ArrayExpr target_6) {
	target_6.getArrayBase().(PointerFieldAccess).getTarget().getName()="attrs"
	and target_6.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_152
	and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nla_data")
}

from Function func, Variable verr_159, Variable vslen_161, Parameter vinfo_152, IfStmt target_1, ExprStmt target_2, NotExpr target_3, ExprStmt target_4, NotExpr target_5, ArrayExpr target_6
where
not func_0(verr_159, vslen_161, vinfo_152, target_1, target_2, target_3, target_4, target_5, target_6, func)
and func_1(verr_159, target_1)
and func_2(verr_159, target_2)
and func_3(vslen_161, target_3)
and func_4(vslen_161, target_4)
and func_5(vinfo_152, target_5)
and func_6(vinfo_152, target_6)
and verr_159.getType().hasName("int")
and vslen_161.getType().hasName("u8")
and vinfo_152.getType().hasName("genl_info *")
and verr_159.(LocalVariable).getFunction() = func
and vslen_161.(LocalVariable).getFunction() = func
and vinfo_152.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
