/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-keyctl_read_key
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/keyctl-read-key
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/keyctl.c-keyctl_read_key CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="1"
	and not target_0.getValue()="0"
	and target_0.getParent().(ConditionalExpr).getParent().(IfStmt).getCondition() instanceof ConditionalExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vkey_756, Variable vret_758) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("key_read_state")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vkey_756
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758)
}

predicate func_2(Variable vret_758, BlockStmt target_7, ExprStmt target_8) {
exists(RelationalOperation target_2 |
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vret_758
	and target_2.getGreaterOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_7
	and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_3(Variable vkey_756, VariableAccess target_3) {
	target_3.getTarget()=vkey_756
	and target_3.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ConditionalExpr).getThen() instanceof FunctionCall
}

predicate func_4(ConditionalExpr target_5, Function func, GotoStmt target_4) {
	target_4.getName() ="error2"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vkey_756, BlockStmt target_7, ConditionalExpr target_5) {
	target_5.getCondition() instanceof Literal
	and target_5.getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_5.getThen().(FunctionCall).getArgument(0).(Literal).getValue()="5"
	and target_5.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_5.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_756
	and target_5.getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_5.getElse().(FunctionCall).getArgument(0).(Literal).getValue()="5"
	and target_5.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_5.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_756
	and target_5.getParent().(IfStmt).getThen()=target_7
}

predicate func_6(Variable vret_758, UnaryMinusExpr target_6) {
	target_6.getValue()="-126"
	and target_6.getParent().(AssignExpr).getRValue() = target_6
	and target_6.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758
}

predicate func_7(Variable vret_758, BlockStmt target_7) {
	target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758
	and target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_7.getStmt(1) instanceof GotoStmt
}

predicate func_8(Variable vret_758, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758
	and target_8.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-126"
}

from Function func, Variable vkey_756, Variable vret_758, Literal target_0, VariableAccess target_3, GotoStmt target_4, ConditionalExpr target_5, UnaryMinusExpr target_6, BlockStmt target_7, ExprStmt target_8
where
func_0(func, target_0)
and not func_1(vkey_756, vret_758)
and not func_2(vret_758, target_7, target_8)
and func_3(vkey_756, target_3)
and func_4(target_5, func, target_4)
and func_5(vkey_756, target_7, target_5)
and func_6(vret_758, target_6)
and func_7(vret_758, target_7)
and func_8(vret_758, target_8)
and vkey_756.getType().hasName("key *")
and vret_758.getType().hasName("long")
and vkey_756.(LocalVariable).getFunction() = func
and vret_758.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
