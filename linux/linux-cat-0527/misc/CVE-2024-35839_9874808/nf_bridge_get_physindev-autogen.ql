/**
 * @name linux-9874808878d9eed407e3977fd11fee49de1e1d86-nf_bridge_get_physindev
 * @id cpp/linux/9874808878d9eed407e3977fd11fee49de1e1d86/nf-bridge-get-physindev
 * @description linux-9874808878d9eed407e3977fd11fee49de1e1d86-include/linux/netfilter_bridge.h-nf_bridge_get_physindev CVE-2024-35839
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnet_59, Variable vnf_bridge_61) {
exists(ConditionalExpr target_0 |
	target_0.getCondition().(VariableAccess).getTarget()=vnf_bridge_61
	and target_0.getThen().(FunctionCall).getTarget().hasName("dev_get_by_index_rcu")
	and target_0.getThen().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnet_59
	and target_0.getThen().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="physinif"
	and target_0.getThen().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnf_bridge_61
	and target_0.getElse() instanceof Literal)
}

predicate func_1(Variable vnf_bridge_61, VariableAccess target_1) {
	target_1.getTarget()=vnf_bridge_61
}

predicate func_2(Variable vnf_bridge_61, VariableAccess target_2) {
	target_2.getTarget()=vnf_bridge_61
}

predicate func_4(Variable vnf_bridge_61, ConditionalExpr target_4) {
	target_4.getCondition().(VariableAccess).getTarget()=vnf_bridge_61
	and target_4.getThen().(PointerFieldAccess).getTarget().getName()="physindev"
	and target_4.getThen().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnf_bridge_61
	and target_4.getElse() instanceof Literal
}

from Function func, Parameter vnet_59, Variable vnf_bridge_61, VariableAccess target_1, VariableAccess target_2, ConditionalExpr target_4
where
not func_0(vnet_59, vnf_bridge_61)
and func_1(vnf_bridge_61, target_1)
and func_2(vnf_bridge_61, target_2)
and func_4(vnf_bridge_61, target_4)
and vnet_59.getType().hasName("net *")
and vnf_bridge_61.getType().hasName("const nf_bridge_info *")
and vnet_59.getFunction() = func
and vnf_bridge_61.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
