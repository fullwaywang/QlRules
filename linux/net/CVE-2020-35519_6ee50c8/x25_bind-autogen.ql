/**
 * @name linux-6ee50c8e262a0f0693dad264c3c99e30e6442a56-x25_bind
 * @id cpp/linux/6ee50c8e262a0f0693dad264c3c99e30e6442a56/x25-bind
 * @description linux-6ee50c8e262a0f0693dad264c3c99e30e6442a56-x25_bind CVE-2020-35519
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vaddr_680, BlockStmt target_2, LogicalOrExpr target_1) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand() instanceof LogicalOrExpr
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getTarget().hasName("strnlen")
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="x25_addr"
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sx25_addr"
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_680
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(1).(Literal).getValue()="16"
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="16"
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vaddr_len_677, Variable vaddr_680, BlockStmt target_2, LogicalOrExpr target_1) {
		target_1.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vaddr_len_677
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(SizeofTypeOperator).getType() instanceof LongType
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(SizeofTypeOperator).getValue()="18"
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sx25_family"
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vaddr_680
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="9"
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
		target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
		and target_2.getEnclosingFunction() = func
}

from Function func, Parameter vaddr_len_677, Variable vaddr_680, LogicalOrExpr target_1, BlockStmt target_2
where
not func_0(vaddr_680, target_2, target_1)
and func_1(vaddr_len_677, vaddr_680, target_2, target_1)
and func_2(func, target_2)
and vaddr_len_677.getType().hasName("int")
and vaddr_680.getType().hasName("sockaddr_x25 *")
and vaddr_len_677.getFunction() = func
and vaddr_680.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
