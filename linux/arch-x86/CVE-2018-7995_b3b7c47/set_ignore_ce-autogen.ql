/**
 * @name linux-b3b7c4795ccab5be71f080774c45bbbcc75c2aaf-set_ignore_ce
 * @id cpp/linux/b3b7c4795ccab5be71f080774c45bbbcc75c2aaf/set-ignore-ce
 * @description linux-b3b7c4795ccab5be71f080774c45bbbcc75c2aaf-arch/x86/kernel/cpu/mcheck/mce.c-set_ignore_ce CVE-2018-7995
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_2(Function func, IfStmt target_2) {
	target_2.getCondition().(BitwiseXorExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="ignore_ce"
	and target_2.getCondition().(BitwiseXorExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mca_config")
	and target_2.getCondition().(BitwiseXorExpr).getRightOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("u64")
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("u64")
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mce_timer_delete_all")
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("on_each_cpu")
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="1"
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ignore_ce"
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ignore_ce"
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("on_each_cpu")
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_2.getThen().(BlockStmt).getStmt(0).(IfStmt).getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="1"
	and target_2.getEnclosingFunction() = func
}

from Function func, IfStmt target_2
where
not func_0(target_2, func)
and not func_1(func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
