/**
 * @name linux-cadfad870154e14f745ec845708bc17d166065f2-switch_to_bitmap
 * @id cpp/linux/cadfad870154e14f745ec845708bc17d166065f2/switch-to-bitmap
 * @description linux-cadfad870154e14f745ec845708bc17d166065f2-arch/x86/kernel/process.c-switch_to_bitmap CVE-2020-15852
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v__vpp_verify_349, Variable vtcp_ptr___349, Variable vthis_cpu_off, StmtExpr target_0) {
	target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__vpp_verify_349
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(AsmStmt).getChild(0).(VariableAccess).getTarget()=vtcp_ptr___349
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(AsmStmt).getChild(1).(VariableAccess).getTarget()=vthis_cpu_off
	and target_0.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(VariableAccess).getTarget()=vtcp_ptr___349
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("tss_invalidate_io_bitmap")
}

/*predicate func_1(Variable v__vpp_verify_349, DoStmt target_1) {
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__vpp_verify_349
}

*/
/*predicate func_3(Variable v__vpp_verify_349, ExprStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=v__vpp_verify_349
}

*/
/*predicate func_4(Variable vtcp_ptr___349, Variable vthis_cpu_off, Variable vcpu_tss_rw, ExprStmt target_4) {
	target_4.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(AsmStmt).getChild(0).(VariableAccess).getTarget()=vtcp_ptr___349
	and target_4.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(AsmStmt).getChild(1).(VariableAccess).getTarget()=vthis_cpu_off
	and target_4.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(AsmStmt).getChild(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcpu_tss_rw
	and target_4.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(VariableAccess).getTarget()=vtcp_ptr___349
}

*/
/*predicate func_6(Variable vtcp_ptr___349, Variable vthis_cpu_off, Variable vcpu_tss_rw, AsmStmt target_6) {
	target_6.getChild(0).(VariableAccess).getTarget()=vtcp_ptr___349
	and target_6.getChild(1).(VariableAccess).getTarget()=vthis_cpu_off
	and target_6.getChild(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcpu_tss_rw
}

*/
/*predicate func_7(Variable vtcp_ptr___349, ExprStmt target_7) {
	target_7.getExpr().(VariableAccess).getTarget()=vtcp_ptr___349
}

*/
from Function func, Variable v__vpp_verify_349, Variable vtcp_ptr___349, Variable vthis_cpu_off, Variable vcpu_tss_rw, StmtExpr target_0
where
func_0(v__vpp_verify_349, vtcp_ptr___349, vthis_cpu_off, target_0)
and v__vpp_verify_349.getType().hasName("const void *")
and vtcp_ptr___349.getType().hasName("unsigned long")
and vthis_cpu_off.getType().hasName("unsigned long")
and vcpu_tss_rw.getType().hasName("tss_struct")
and v__vpp_verify_349.(LocalVariable).getFunction() = func
and vtcp_ptr___349.(LocalVariable).getFunction() = func
and not vthis_cpu_off.getParentScope+() = func
and not vcpu_tss_rw.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
