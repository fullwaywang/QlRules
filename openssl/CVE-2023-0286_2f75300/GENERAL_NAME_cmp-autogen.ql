/**
 * @name openssl-2f7530077e0ef79d98718138716bc51ca0cad658-GENERAL_NAME_cmp
 * @id cpp/openssl/2f7530077e0ef79d98718138716bc51ca0cad658/general-name-cmp
 * @description openssl-2f7530077e0ef79d98718138716bc51ca0cad658-crypto/x509/v3_genn.c-GENERAL_NAME_cmp CVE-2023-0286
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter va_93, Parameter vb_93, FunctionCall target_0) {
		target_0.getTarget().hasName("ASN1_TYPE_cmp")
		and not target_0.getTarget().hasName("ASN1_STRING_cmp")
		and target_0.getArgument(0).(ValueFieldAccess).getTarget().getName()="x400Address"
		and target_0.getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="d"
		and target_0.getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=va_93
		and target_0.getArgument(1).(ValueFieldAccess).getTarget().getName()="x400Address"
		and target_0.getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="d"
		and target_0.getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vb_93
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter va_93, Parameter vb_93, FunctionCall target_0
where
func_0(va_93, vb_93, target_0)
and va_93.getType().hasName("GENERAL_NAME *")
and vb_93.getType().hasName("GENERAL_NAME *")
and va_93.getFunction() = func
and vb_93.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
