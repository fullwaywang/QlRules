/**
 * @name linux-74b6b20df8cfe90ada777d621b54c32e69e27cd7-rtw_wx_set_scan
 * @id cpp/linux/74b6b20df8cfe90ada777d621b54c32e69e27cd7/rtw-wx-set-scan
 * @description linux-74b6b20df8cfe90ada777d621b54c32e69e27cd7-drivers/staging/rtl8188eu/os_dep/ioctl_linux.c-rtw_wx_set_scan CVE-2021-28660
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsec_len_1122, BlockStmt target_4, ExprStmt target_5, LogicalAndExpr target_2) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof LogicalAndExpr
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vsec_len_1122
	and target_0.getRightOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="32"
	and target_0.getParent().(IfStmt).getThen()=target_4
	and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable vlen_1119, Variable vsec_len_1122, BlockStmt target_4, LogicalAndExpr target_2) {
	target_2.getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vsec_len_1122
	and target_2.getLeftOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_2.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vsec_len_1122
	and target_2.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vlen_1119
	and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable vssid_1052, Variable vssid_index_1123, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="ssid_length"
	and target_3.getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vssid_1052
	and target_3.getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vssid_index_1123
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="ssid"
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vssid_1052
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vssid_index_1123
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("char *")
}

predicate func_4(Variable vssid_1052, Variable vsec_len_1122, Variable vssid_index_1123, BlockStmt target_4) {
	target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="ssid_length"
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vssid_1052
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vssid_index_1123
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vsec_len_1122
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="ssid"
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vssid_1052
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vssid_index_1123
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("char *")
	and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof ValueFieldAccess
}

predicate func_5(Variable vsec_len_1122, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsec_len_1122
	and target_5.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("char *")
}

from Function func, Variable vssid_1052, Variable vlen_1119, Variable vsec_len_1122, Variable vssid_index_1123, LogicalAndExpr target_2, ValueFieldAccess target_3, BlockStmt target_4, ExprStmt target_5
where
not func_0(vsec_len_1122, target_4, target_5, target_2)
and func_2(vlen_1119, vsec_len_1122, target_4, target_2)
and func_3(vssid_1052, vssid_index_1123, target_3)
and func_4(vssid_1052, vsec_len_1122, vssid_index_1123, target_4)
and func_5(vsec_len_1122, target_5)
and vssid_1052.getType().hasName("ndis_802_11_ssid[9]")
and vlen_1119.getType().hasName("int")
and vsec_len_1122.getType().hasName("char")
and vssid_index_1123.getType().hasName("int")
and vssid_1052.(LocalVariable).getFunction() = func
and vlen_1119.(LocalVariable).getFunction() = func
and vsec_len_1122.(LocalVariable).getFunction() = func
and vssid_index_1123.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
