/**
 * @name linux-34f36e6ee5bd7eff8b2adcd9fcaef369f752d82e-mtrr_save_state
 * @id cpp/linux/34f36e6ee5bd7eff8b2adcd9fcaef369f752d82e/mtrr-save-state
 * @description linux-34f36e6ee5bd7eff8b2adcd9fcaef369f752d82e-arch/x86/kernel/cpu/mtrr/mtrr.c-mtrr_save_state CVE-2024-44948
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(LogicalOrExpr target_0 |
	exists(NotExpr obj_0 | obj_0=target_0.getRightOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="have_fixed"
			and obj_1.getQualifier().(VariableAccess).getType().hasName("mtrr_state_type")
		)
	)
	and target_0.getLeftOperand() instanceof NotExpr
	and target_0.getParent().(IfStmt).getThen() instanceof ReturnStmt
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Function func, NotExpr target_1) {
	target_1.getOperand().(FunctionCall).getTarget().hasName("mtrr_enabled")
	and target_1.getParent().(IfStmt).getThen() instanceof ReturnStmt
	and target_1.getEnclosingFunction() = func
}

from Function func, NotExpr target_1
where
not func_0(func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
