/**
 * @name chromium-bb36f739e7e0a3722beeb2744744195c22fd6143-blink__USBDevice__isochronousTransferOut
 * @id cpp/chromium/bb36f739e7e0a3722beeb2744744195c22fd6143/blinkusbdeviceisochronoustransferout
 * @description chromium-bb36f739e7e0a3722beeb2744744195c22fd6143-third_party/blink/renderer/modules/webusb/usb_device.cc-blink__USBDevice__isochronousTransferOut CVE-2023-5849
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vexception_state_575, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	exists(NotExpr obj_0 | obj_0=target_0.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("has_value")
			and obj_1.getQualifier().(VariableAccess).getType().hasName("optional<unsigned int>")
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("ThrowDOMException")
				and obj_4.getQualifier().(VariableAccess).getTarget()=vexception_state_575
				and obj_4.getArgument(1).(VariableAccess).getType().hasName("const char[51]")
			)
		)
		and obj_2.getStmt(1).(ReturnStmt).getExpr().(ConstructorCall).getType() instanceof VoidType
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof DeclStmt
	and target_2.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vdata_573, Parameter vexception_state_575, FunctionCall target_3, FunctionCall target_4, FunctionCall target_5, Function func) {
exists(IfStmt target_1 |
	exists(EqualityOperation obj_0 | obj_0=target_1.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().hasName("value")
			and obj_1.getQualifier().(VariableAccess).getType().hasName("optional<unsigned int>")
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getTarget().hasName("ByteLength")
			and obj_2.getQualifier().(VariableAccess).getTarget()=vdata_573
		)
	)
	and exists(BlockStmt obj_3 | obj_3=target_1.getThen() |
		exists(ExprStmt obj_4 | obj_4=obj_3.getStmt(0) |
			exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
				obj_5.getTarget().hasName("ThrowDOMException")
				and obj_5.getQualifier().(VariableAccess).getTarget()=vexception_state_575
				and obj_5.getArgument(1).(VariableAccess).getType().hasName("const char[57]")
			)
		)
		and obj_3.getStmt(1).(ReturnStmt).getExpr().(ConstructorCall).getType() instanceof VoidType
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof DeclStmt
	and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_1.getCondition().(EqualityOperation).getRightOperand().(FunctionCall).getQualifier().(VariableAccess).getLocation())
	and target_1.getCondition().(EqualityOperation).getRightOperand().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(VariableAccess).getLocation())
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Parameter vexception_state_575, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("ThrowDOMException")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_575
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	)
}

predicate func_3(Parameter vdata_573, FunctionCall target_3) {
	target_3.getTarget().hasName("IsDetached")
	and target_3.getQualifier().(VariableAccess).getTarget()=vdata_573
}

predicate func_4(Parameter vdata_573, FunctionCall target_4) {
	target_4.getTarget().hasName("Bytes")
	and target_4.getQualifier().(VariableAccess).getTarget()=vdata_573
}

predicate func_5(Parameter vexception_state_575, FunctionCall target_5) {
	target_5.getTarget().hasName("GetContext")
	and target_5.getQualifier().(VariableAccess).getTarget()=vexception_state_575
}

from Function func, Parameter vdata_573, Parameter vexception_state_575, ExprStmt target_2, FunctionCall target_3, FunctionCall target_4, FunctionCall target_5
where
not func_0(vexception_state_575, target_2, func)
and not func_1(vdata_573, vexception_state_575, target_3, target_4, target_5, func)
and func_2(vexception_state_575, target_2)
and func_3(vdata_573, target_3)
and func_4(vdata_573, target_4)
and func_5(vexception_state_575, target_5)
and vdata_573.getType().hasName("const DOMArrayPiece &")
and vexception_state_575.getType().hasName("ExceptionState &")
and vdata_573.getFunction() = func
and vexception_state_575.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
