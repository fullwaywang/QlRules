/**
 * @name linux-78c9c4dfbf8c04883941445a195276bb4bb92c76-posixtimer_rearm
 * @id cpp/linux/78c9c4dfbf8c04883941445a195276bb4bb92c76/posixtimer-rearm
 * @description linux-78c9c4dfbf8c04883941445a195276bb4bb92c76-kernel/time/posix-timers.c-posixtimer_rearm CVE-2018-12896
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtimr_312, Parameter vinfo_310, ExprStmt target_4, ExprStmt target_5, ValueFieldAccess target_6, ValueFieldAccess target_7) {
	exists(AssignExpr target_0 |
		target_0.getLValue() instanceof ValueFieldAccess
		and target_0.getRValue().(FunctionCall).getTarget().hasName("timer_overrun_to_int")
		and target_0.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtimr_312
		and target_0.getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="_overrun"
		and target_0.getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="_timer"
		and target_0.getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="_sifields"
		and target_0.getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_310
		and target_4.getExpr().(PrefixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getRValue().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vinfo_310, ValueFieldAccess target_1) {
		target_1.getTarget().getName()="_overrun"
		and target_1.getQualifier().(ValueFieldAccess).getTarget().getName()="_timer"
		and target_1.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="_sifields"
		and target_1.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_310
}

predicate func_2(Variable vtimr_312, VariableAccess target_2) {
		target_2.getTarget()=vtimr_312
}

predicate func_3(Variable vtimr_312, AssignAddExpr target_3) {
		target_3.getLValue() instanceof ValueFieldAccess
		and target_3.getRValue().(PointerFieldAccess).getTarget().getName()="it_overrun_last"
		and target_3.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtimr_312
}

predicate func_4(Variable vtimr_312, ExprStmt target_4) {
		target_4.getExpr().(PrefixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="it_requeue_pending"
		and target_4.getExpr().(PrefixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtimr_312
}

predicate func_5(Variable vtimr_312, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("unlock_timer")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtimr_312
		and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
}

predicate func_6(Parameter vinfo_310, ValueFieldAccess target_6) {
		target_6.getTarget().getName()="_timer"
		and target_6.getQualifier().(PointerFieldAccess).getTarget().getName()="_sifields"
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_310
}

predicate func_7(Parameter vinfo_310, ValueFieldAccess target_7) {
		target_7.getTarget().getName()="_timer"
		and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="_sifields"
		and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_310
}

from Function func, Variable vtimr_312, Parameter vinfo_310, ValueFieldAccess target_1, VariableAccess target_2, AssignAddExpr target_3, ExprStmt target_4, ExprStmt target_5, ValueFieldAccess target_6, ValueFieldAccess target_7
where
not func_0(vtimr_312, vinfo_310, target_4, target_5, target_6, target_7)
and func_1(vinfo_310, target_1)
and func_2(vtimr_312, target_2)
and func_3(vtimr_312, target_3)
and func_4(vtimr_312, target_4)
and func_5(vtimr_312, target_5)
and func_6(vinfo_310, target_6)
and func_7(vinfo_310, target_7)
and vtimr_312.getType().hasName("k_itimer *")
and vinfo_310.getType().hasName("siginfo *")
and vtimr_312.(LocalVariable).getFunction() = func
and vinfo_310.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
