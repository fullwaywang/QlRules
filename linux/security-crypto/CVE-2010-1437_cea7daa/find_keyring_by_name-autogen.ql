/**
 * @name linux-cea7daa3589d6b550546a8c8963599f7c1a3ae5c-find_keyring_by_name
 * @id cpp/linux/cea7daa3589d6b550546a8c8963599f7c1a3ae5c/find-keyring-by-name
 * @description linux-cea7daa3589d6b550546a8c8963599f7c1a3ae5c-security/keys/keyring.c-find_keyring_by_name CVE-2010-1437
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_10, Function func) {
	exists(ReturnStmt target_0 |
		target_0.getExpr() instanceof FunctionCall
		and target_0.getParent().(IfStmt).getCondition()=target_10
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("atomic_add_unless")
		and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="1"
		and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vkeyring_526, FunctionCall target_2) {
		target_2.getTarget().hasName("ERR_PTR")
		and target_2.getArgument(0).(UnaryMinusExpr).getValue()="-22"
		and target_2.getParent().(AssignExpr).getRValue() = target_2
		and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkeyring_526
}

predicate func_3(Variable vkeyring_526, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="usage"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkeyring_526
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_4(Variable vkeyring_name_lock, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("_raw_read_unlock")
		and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vkeyring_name_lock
}

predicate func_5(NotExpr target_10, Function func, GotoStmt target_5) {
		target_5.getParent().(IfStmt).getCondition()=target_10
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vkeyring_526, Function func, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkeyring_526
		and target_6.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Function func, ExprStmt target_7) {
		target_7.getExpr().(FunctionCall).getTarget().hasName("atomic_inc")
		and target_7.getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_7.getEnclosingFunction() = func
}

predicate func_9(Variable vkeyring_name_lock, AddressOfExpr target_11, Function func, ExprStmt target_9) {
		target_9.getExpr().(FunctionCall).getTarget().hasName("_raw_read_unlock")
		and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vkeyring_name_lock
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
		and target_11.getOperand().(VariableAccess).getLocation().isBefore(target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
}

predicate func_10(Function func, NotExpr target_10) {
		target_10.getOperand().(VariableAccess).getTarget().getType().hasName("const char *")
		and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vkeyring_name_lock, AddressOfExpr target_11) {
		target_11.getOperand().(VariableAccess).getTarget()=vkeyring_name_lock
		and target_11.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_raw_read_unlock")
}

from Function func, Variable vkeyring_526, Variable vkeyring_name_lock, FunctionCall target_2, AddressOfExpr target_3, ExprStmt target_4, GotoStmt target_5, ExprStmt target_6, ExprStmt target_7, ExprStmt target_9, NotExpr target_10, AddressOfExpr target_11
where
not func_0(target_10, func)
and not func_1(func)
and func_2(vkeyring_526, target_2)
and func_3(vkeyring_526, target_3)
and func_4(vkeyring_name_lock, target_4)
and func_5(target_10, func, target_5)
and func_6(vkeyring_526, func, target_6)
and func_7(func, target_7)
and func_9(vkeyring_name_lock, target_11, func, target_9)
and func_10(func, target_10)
and func_11(vkeyring_name_lock, target_11)
and vkeyring_526.getType().hasName("key *")
and vkeyring_name_lock.getType().hasName("rwlock_t")
and vkeyring_526.(LocalVariable).getFunction() = func
and not vkeyring_name_lock.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
