/**
 * @name linux-ff8376ade4f668130385839cef586a0990f8ef87-rxrpc_destroy_s
 * @id cpp/linux/ff8376ade4f668130385839cef586a0990f8ef87/rxrpc-destroy-s
 * @description linux-ff8376ade4f668130385839cef586a0990f8ef87-rxrpc_destroy_s CVE-2022-1671
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsec_100, ExprStmt target_2, IfStmt target_3) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vsec_100
		and target_0.getAnOperand().(PointerFieldAccess).getTarget().getName()="destroy_server_key"
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsec_100
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_0.getAnOperand().(VariableAccess).getLocation().isBefore(target_3.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsec_100, ExprStmt target_2, VariableAccess target_1) {
		target_1.getTarget()=vsec_100
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vsec_100, ExprStmt target_2) {
		target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="destroy_server_key"
		and target_2.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsec_100
		and target_2.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("key *")
}

predicate func_3(Variable vsec_100, IfStmt target_3) {
		target_3.getCondition().(VariableAccess).getTarget()=vsec_100
		and target_3.getThen().(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="destroy_server_key"
		and target_3.getThen().(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsec_100
		and target_3.getThen().(ExprStmt).getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("key *")
}

from Function func, Variable vsec_100, VariableAccess target_1, ExprStmt target_2, IfStmt target_3
where
not func_0(vsec_100, target_2, target_3)
and func_1(vsec_100, target_2, target_1)
and func_2(vsec_100, target_2)
and func_3(vsec_100, target_3)
and vsec_100.getType().hasName("const rxrpc_security *")
and vsec_100.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
