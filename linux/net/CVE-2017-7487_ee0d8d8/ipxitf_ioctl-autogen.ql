/**
 * @name linux-ee0d8d8482345ff97a75a7d747efc309f13b0d80-ipxitf_ioctl
 * @id cpp/linux/ee0d8d8482345ff97a75a7d747efc309f13b0d80/ipxitf-ioctl
 * @description linux-ee0d8d8482345ff97a75a7d747efc309f13b0d80-net/ipx/af_ipx.c-ipxitf_ioctl CVE-2017-7487
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrc_1119, ExprStmt target_0) {
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1119
		and target_0.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
}

predicate func_1(FunctionCall target_2, Function func, BreakStmt target_1) {
		target_1.getParent().(IfStmt).getCondition()=target_2
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, FunctionCall target_2) {
		target_2.getTarget().hasName("copy_to_user")
		and target_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("void *")
		and target_2.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ifreq")
		and target_2.getArgument(2).(SizeofExprOperator).getValue()="40"
		and target_2.getEnclosingFunction() = func
}

from Function func, Variable vrc_1119, ExprStmt target_0, BreakStmt target_1, FunctionCall target_2
where
func_0(vrc_1119, target_0)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and vrc_1119.getType().hasName("int")
and vrc_1119.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
