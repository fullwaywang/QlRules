/**
 * @name linux-4e6fd2b5fcf8e7119305a6042bd92e7f2b9ed215-fastrpc_dmabuf_alloc
 * @id cpp/linux/4e6fd2b5fcf8e7119305a6042bd92e7f2b9ed215/fastrpc-dmabuf-alloc
 * @description linux-4e6fd2b5fcf8e7119305a6042bd92e7f2b9ed215-drivers/misc/fastrpc.c-fastrpc_dmabuf_alloc CVE-2022-48821
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbuf_1221, FunctionCall target_1, ExprStmt target_2, ExprStmt target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="dmabuf"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vbuf_1221
		)
		and obj_0.getTarget().hasName("dma_buf_put")
	)
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("copy_to_user")
	and target_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("char *")
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("fastrpc_alloc_dma_buf")
	and target_1.getArgument(2).(SizeofExprOperator).getValue()="16"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vbuf_1221, RelationalOperation target_3, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="dmabuf"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vbuf_1221
		)
		and obj_0.getTarget().hasName("dma_buf_put")
	)
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, RelationalOperation target_3) {
	exists(ValueFieldAccess obj_0 | obj_0=target_3.getLesserOperand() |
		obj_0.getTarget().getName()="fd"
		and obj_0.getQualifier().(VariableAccess).getTarget().getType().hasName("fastrpc_alloc_dma_buf")
	)
	and  (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getGreaterOperand().(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vbuf_1221, ExprStmt target_0, FunctionCall target_1, ExprStmt target_2, RelationalOperation target_3
where
func_0(vbuf_1221, target_1, target_2, target_0)
and func_1(func, target_1)
and func_2(vbuf_1221, target_3, target_2)
and func_3(func, target_3)
and vbuf_1221.getType().hasName("fastrpc_buf *")
and vbuf_1221.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
