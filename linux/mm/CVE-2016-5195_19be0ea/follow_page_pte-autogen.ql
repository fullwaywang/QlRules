/**
 * @name linux-19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619-follow_page_pte
 * @id cpp/linux/19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619/follow-page-pte
 * @description linux-19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619-mm/gup.c-follow_page_pte CVE-2016-5195
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vflags_64, Variable vpte_70, LogicalAndExpr target_3, LogicalAndExpr target_4, ExprStmt target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("can_follow_write_pte")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vpte_70
	and target_0.getArgument(1).(VariableAccess).getTarget()=vflags_64
	and target_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getArgument(1).(VariableAccess).getLocation())
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_4.getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Variable vpte_70, VariableAccess target_1) {
	target_1.getTarget()=vpte_70
	and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_2(Variable vpte_70, FunctionCall target_2) {
	target_2.getTarget().hasName("pte_write")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vpte_70
}

predicate func_3(Parameter vflags_64, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_64
	and target_3.getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_3.getRightOperand().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_4(Parameter vflags_64, Variable vpte_70, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("page *")
	and target_4.getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("pte_devmap")
	and target_4.getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpte_70
	and target_4.getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_64
	and target_4.getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="4"
}

predicate func_5(Variable vpte_70, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("page *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vm_normal_page")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vpte_70
}

from Function func, Parameter vflags_64, Variable vpte_70, VariableAccess target_1, FunctionCall target_2, LogicalAndExpr target_3, LogicalAndExpr target_4, ExprStmt target_5
where
not func_0(vflags_64, vpte_70, target_3, target_4, target_5)
and func_1(vpte_70, target_1)
and func_2(vpte_70, target_2)
and func_3(vflags_64, target_3)
and func_4(vflags_64, vpte_70, target_4)
and func_5(vpte_70, target_5)
and vflags_64.getType().hasName("unsigned int")
and vpte_70.getType().hasName("pte_t")
and vflags_64.getFunction() = func
and vpte_70.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
