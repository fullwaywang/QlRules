/**
 * @name linux-934e1e4331859183a861f396d7dfaf33cb5afb02-bch_sectors_dirty_init
 * @id cpp/linux/934e1e4331859183a861f396d7dfaf33cb5afb02/bch-sectors-dirty-init
 * @description linux-934e1e4331859183a861f396d7dfaf33cb5afb02-drivers/md/bcache/writeback.c-bch_sectors_dirty_init CVE-2024-39482
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable viter_982, Variable vc_984, FunctionCall target_1) {
	exists(AddressOfExpr obj_0 | obj_0=target_1.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="root"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vc_984
			)
			and obj_1.getTarget().getName()="keys"
		)
	)
	and target_1.getTarget().hasName("bch_btree_iter_init")
	and not target_1.getTarget().hasName("bch_btree_iter_stack_init")
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=viter_982
	and target_1.getArgument(2).(Literal).getValue()="0"
}

predicate func_2(Variable vc_984) {
exists(AddressOfExpr target_2 |
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="iter"
		and obj_0.getQualifier() instanceof AddressOfExpr
	)
	and exists(FunctionCall obj_1 | obj_1=target_2.getParent() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(1) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
						exists(PointerFieldAccess obj_6 | obj_6=obj_5.getQualifier() |
							obj_6.getTarget().getName()="root"
							and obj_6.getQualifier().(VariableAccess).getTarget()=vc_984
						)
						and obj_5.getTarget().getName()="keys"
					)
				)
				and obj_3.getTarget().hasName("bch_btree_iter_next_filter")
				and obj_3.getArgument(0) instanceof AddressOfExpr
			)
		)
	)
)
}

predicate func_3(Variable viter_982, Variable vc_984, AddressOfExpr target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(1) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
							obj_5.getTarget().getName()="root"
							and obj_5.getQualifier().(VariableAccess).getTarget()=vc_984
						)
						and obj_4.getTarget().getName()="keys"
					)
				)
				and obj_2.getTarget().hasName("bch_btree_iter_next_filter")
			)
		)
	)
	and target_3.getOperand().(VariableAccess).getTarget()=viter_982
}

from Function func, Variable viter_982, Variable vc_984, FunctionCall target_1, AddressOfExpr target_3
where
func_1(viter_982, vc_984, target_1)
and not func_2(vc_984)
and func_3(viter_982, vc_984, target_3)
and viter_982.getType().hasName("btree_iter")
and vc_984.getType().hasName("cache_set *")
and viter_982.(LocalVariable).getFunction() = func
and vc_984.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
