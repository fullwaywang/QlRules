/**
 * @name linux-cd4a40174b71acd021877341684d8bb1dc8ea4ae-collect_mounts
 * @id cpp/linux/cd4a40174b71acd021877341684d8bb1dc8ea4ae/collect-mounts
 * @description linux-cd4a40174b71acd021877341684d8bb1dc8ea4ae-fs/namespace.c-collect_mounts CVE-2015-4177
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtree_1670, Parameter vpath_1668, ExprStmt target_1, FunctionCall target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("check_mnt")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("real_mount")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="mnt"
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpath_1668
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtree_1670
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-22"
	and target_0.getElse() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtree_1670, Parameter vpath_1668, Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtree_1670
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("copy_tree")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("real_mount")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="mnt"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpath_1668
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="dentry"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpath_1668
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(BitwiseOrExpr).getValue()="148"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_3(Parameter vpath_1668, FunctionCall target_3) {
	target_3.getTarget().hasName("real_mount")
	and target_3.getArgument(0).(PointerFieldAccess).getTarget().getName()="mnt"
	and target_3.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpath_1668
}

from Function func, Variable vtree_1670, Parameter vpath_1668, ExprStmt target_1, FunctionCall target_3
where
not func_0(vtree_1670, vpath_1668, target_1, target_3, func)
and func_1(vtree_1670, vpath_1668, func, target_1)
and func_3(vpath_1668, target_3)
and vtree_1670.getType().hasName("mount *")
and vpath_1668.getType().hasName("path *")
and vtree_1670.(LocalVariable).getFunction() = func
and vpath_1668.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
