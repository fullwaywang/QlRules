/**
 * @name linux-ce683e5f9d04-check_entry_size_and_hooks
 * @id cpp/linux/ce683e5f9d04/check-entry-size-and-hooks
 * @description linux-ce683e5f9d04-net/ipv4/netfilter/arp_tables.c-check_entry_size_and_hooks CVE-2016-4997
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtarget_offset_594, RelationalOperation target_1, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vtarget_offset_594
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("long")
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_1.getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vtarget_offset_594, RelationalOperation target_1) {
		 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
		and target_1.getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vtarget_offset_594
		and target_1.getGreaterOperand().(AddExpr).getAnOperand().(SizeofExprOperator).getValue()="32"
		and target_1.getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Parameter vtarget_offset_594, RelationalOperation target_1
where
not func_0(vtarget_offset_594, target_1, func)
and func_1(vtarget_offset_594, target_1)
and vtarget_offset_594.getType().hasName("unsigned int")
and vtarget_offset_594.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
