/**
 * @name linux-2e488f13755ffbb60f307e991b27024716a33b29-inode_init_always
 * @id cpp/linux/2e488f13755ffbb60f307e991b27024716a33b29/inode-init-always
 * @description linux-2e488f13755ffbb60f307e991b27024716a33b29-fs/inode.c-inode_init_always CVE-2022-2978
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(DoStmt target_5, Function func, IfStmt target_0) {
	target_0.getCondition() instanceof FunctionCall
	and target_0.getThen() instanceof GotoStmt
	and target_0.getLocation().isBefore(target_5.getLocation())
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("__builtin_expect")
	and target_1.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_1.getArgument(1).(Literal).getValue()="0"
	and target_1.getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Parameter vinode_156, FunctionCall target_2) {
	target_2.getTarget().hasName("security_inode_alloc")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vinode_156
	and target_2.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_3(Function func, ReturnStmt target_3) {
	target_3.getExpr().(UnaryMinusExpr).getValue()="-12"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(FunctionCall target_2, Function func, GotoStmt target_4) {
	target_4.getName() ="out"
	and target_4.getParent().(IfStmt).getCondition()=target_2
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, DoStmt target_5) {
	target_5.getCondition().(Literal).getValue()="0"
	and target_5.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__raw_spin_lock_init")
	and target_5.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
	and target_5.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="i_lock"
	and target_5.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="&inode->i_lock"
	and target_5.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("lock_class_key")
	and target_5.getEnclosingFunction() = func
}

from Function func, Parameter vinode_156, IfStmt target_0, FunctionCall target_2, ReturnStmt target_3, GotoStmt target_4, DoStmt target_5
where
func_0(target_5, func, target_0)
and not func_1(func)
and func_2(vinode_156, target_2)
and func_3(func, target_3)
and func_4(target_2, func, target_4)
and func_5(func, target_5)
and vinode_156.getType().hasName("inode *")
and vinode_156.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
