/**
 * @name linux-15b37c6fab9d5e40ac399fa1c725118588ed649c-iwl_mvm_mfu_assert_dump_notif
 * @id cpp/linux/15b37c6fab9d5e40ac399fa1c725118588ed649c/iwl-mvm-mfu-assert-dump-notif
 * @description linux-15b37c6fab9d5e40ac399fa1c725118588ed649c-drivers/net/wireless/intel/iwlwifi/mvm/fw.c-iwl_mvm_mfu_assert_dump_notif CVE-2024-40941
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, DeclStmt target_0) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Function func, DeclStmt target_1) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Function func, DeclStmt target_2) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vdump_data_198, Variable vn_words_199, Variable vi_200, Variable v__func__, Parameter vmvm_193, Function func, ForStmt target_3) {
	exists(ExprStmt obj_0 | obj_0=target_3.getInitialization() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getLValue().(VariableAccess).getTarget()=vi_200
			and obj_1.getRValue().(Literal).getValue()="0"
		)
	)
	and exists(RelationalOperation obj_2 | obj_2=target_3.getCondition() |
		obj_2.getLesserOperand().(VariableAccess).getTarget()=vi_200
		and obj_2.getGreaterOperand().(VariableAccess).getTarget()=vn_words_199
	)
	and exists(DoStmt obj_3 | obj_3=target_3.getStmt() |
		exists(BlockStmt obj_4 | obj_4=obj_3.getStmt() |
			exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(1) |
				exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
					exists(PointerFieldAccess obj_7 | obj_7=obj_6.getArgument(0) |
						obj_7.getTarget().getName()="dev"
						and obj_7.getQualifier().(VariableAccess).getTarget()=vmvm_193
					)
					and exists(ArrayExpr obj_8 | obj_8=obj_6.getArgument(6) |
						obj_8.getArrayBase().(VariableAccess).getTarget()=vdump_data_198
						and obj_8.getArrayOffset().(VariableAccess).getTarget()=vi_200
					)
					and obj_6.getTarget().hasName("__iwl_dbg")
					and obj_6.getArgument(1).(Literal).getValue()="1"
					and obj_6.getArgument(3).(VariableAccess).getTarget()=v__func__
					and obj_6.getArgument(4).(StringLiteral).getValue()="MFUART assert dump, dword %u: 0x%08x\n"
					and obj_6.getArgument(5).(AddExpr).getRightOperand().(VariableAccess).getTarget()=vi_200
				)
			)
			and obj_4.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		)
		and obj_3.getCondition().(Literal).getValue()="0"
	)
	and target_3.getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vi_200
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(Function func, DoStmt target_4) {
	target_4.getCondition().(Literal).getValue()="0"
	and target_4.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="10"
	and target_4.getEnclosingFunction() = func
}

*/
/*predicate func_6(Function func, IfStmt target_6) {
	exists(NotExpr obj_0 | obj_0=target_6.getCondition() |
		exists(NotExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(EqualityOperation obj_2 | obj_2=obj_1.getOperand() |
				exists(ArrayExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getArrayBase().(StringLiteral).getValue()="MFUART assert dump, dword %u: 0x%08x\n"
					and obj_3.getArrayOffset().(SubExpr).getValue()="36"
				)
				and obj_2.getRightOperand().(Literal).getValue()="10"
			)
		)
	)
	and target_6.getEnclosingFunction() = func
}

*/
/*predicate func_7(Variable vmfu_dump_notif_197, Variable vdump_data_198, Variable vn_words_199, Variable vi_200, Variable v__func__, Parameter vmvm_193, ExprStmt target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="dev"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vmvm_193
		)
		and exists(AddExpr obj_2 | obj_2=obj_0.getArgument(5) |
			exists(MulExpr obj_3 | obj_3=obj_2.getLeftOperand() |
				exists(PointerFieldAccess obj_4 | obj_4=obj_3.getLeftOperand() |
					obj_4.getTarget().getName()="index_num"
					and obj_4.getQualifier().(VariableAccess).getTarget()=vmfu_dump_notif_197
				)
				and obj_3.getRightOperand().(VariableAccess).getTarget()=vn_words_199
			)
			and obj_2.getRightOperand().(VariableAccess).getTarget()=vi_200
		)
		and exists(ArrayExpr obj_5 | obj_5=obj_0.getArgument(6) |
			obj_5.getArrayBase().(VariableAccess).getTarget()=vdump_data_198
			and obj_5.getArrayOffset().(VariableAccess).getTarget()=vi_200
		)
		and obj_0.getTarget().hasName("__iwl_dbg")
		and obj_0.getArgument(1).(Literal).getValue()="1"
		and obj_0.getArgument(3).(VariableAccess).getTarget()=v__func__
		and obj_0.getArgument(4).(StringLiteral).getValue()="MFUART assert dump, dword %u: 0x%08x\n"
	)
}

*/
from Function func, Variable vmfu_dump_notif_197, Variable vdump_data_198, Variable vn_words_199, Variable vi_200, Variable v__func__, Parameter vmvm_193, DeclStmt target_0, DeclStmt target_1, DeclStmt target_2, ForStmt target_3
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(vdump_data_198, vn_words_199, vi_200, v__func__, vmvm_193, func, target_3)
and vmfu_dump_notif_197.getType().hasName("iwl_mfu_assert_dump_notif *")
and vdump_data_198.getType().hasName("__le32 *")
and vn_words_199.getType().hasName("int")
and vi_200.getType().hasName("int")
and v__func__.getType() instanceof ArrayType
and vmvm_193.getType().hasName("iwl_mvm *")
and vmfu_dump_notif_197.(LocalVariable).getFunction() = func
and vdump_data_198.(LocalVariable).getFunction() = func
and vn_words_199.(LocalVariable).getFunction() = func
and vi_200.(LocalVariable).getFunction() = func
and not v__func__.getParentScope+() = func
and vmvm_193.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
