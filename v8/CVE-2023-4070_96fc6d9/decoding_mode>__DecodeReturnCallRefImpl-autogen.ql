/**
 * @name v8-96fc6d931c9714a347322572048aa83772a65e4e-decoding_mode>__DecodeReturnCallRefImpl
 * @id cpp/v8/96fc6d931c9714a347322572048aa83772a65e4e/decodingmode>decodereturncallrefimpl
 * @description v8-96fc6d931c9714a347322572048aa83772a65e4e-src/wasm/function-body-decoder-impl.h-decoding_mode>__DecodeReturnCallRefImpl CVE-2023-4070
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vimm_3648, ValueFieldAccess target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getCondition().(Literal).getValue()="validate"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ExprCall).getExpr().(Literal).getValue()="Unknown literal"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ExprCall).getArgument(0).(ExprCall).getExpr().(Literal).getValue()="CanReturnCall"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ExprCall).getArgument(0).(ExprCall).getExpr().(Literal).getValue()="CanReturnCall"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ExprCall).getArgument(0).(ExprCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="sig"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ExprCall).getArgument(0).(ExprCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vimm_3648
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ExprCall).getArgument(1).(StringLiteral).getValue()="this->CanReturnCall(imm.sig)"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getExpr().(Literal).getValue()="DecodeError"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getExpr().(Literal).getValue()="DecodeError"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getArgument(0).(StringLiteral).getValue()="%s: %s"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getArgument(1).(FunctionCall).getTarget().hasName("OpcodeName")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ExprCall).getArgument(2).(StringLiteral).getValue()="tail call return types mismatch"
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof DeclStmt
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ExprCall).getArgument(0).(ExprCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vimm_3648, ValueFieldAccess target_1) {
	target_1.getTarget().getName()="index"
	and target_1.getQualifier().(VariableAccess).getTarget()=vimm_3648
}

from Function func, Variable vimm_3648, ValueFieldAccess target_1
where
not func_0(vimm_3648, target_1, func)
and func_1(vimm_3648, target_1)
and vimm_3648.getType().hasName("SigIndexImmediate")
and vimm_3648.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
