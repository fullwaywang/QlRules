/**
 * @name linux-2b649d7e0cb42a660f0260ef25fd55fdc9c6c600-enic_set_vf_port
 * @id cpp/linux/2b649d7e0cb42a660f0260ef25fd55fdc9c6c600/enic-set-vf-port
 * @description linux-2b649d7e0cb42a660f0260ef25fd55fdc9c6c600-drivers/net/ethernet/cisco/enic/enic_main.c-enic_set_vf_port CVE-2024-38659
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vport_1134, Variable vprev_pp_1137, Variable vpp_1138, ArrayExpr target_3, ArrayExpr target_4, AddressOfExpr target_5, ExprStmt target_6) {
exists(IfStmt target_0 |
	exists(EqualityOperation obj_0 | obj_0=target_0.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().hasName("nla_len")
			and obj_1.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
		)
		and obj_0.getRightOperand().(Literal).getValue()="40"
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("__memcpy")
				and obj_4.getArgument(0).(VariableAccess).getTarget()=vpp_1138
				and obj_4.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vprev_pp_1137
				and obj_4.getArgument(2).(SizeofExprOperator).getValue()="92"
			)
		)
		and obj_2.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	)
	and exists(BlockStmt obj_5 | obj_5=target_0.getParent() |
		exists(IfStmt obj_6 | obj_6=obj_5.getParent() |
			obj_6.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_6.getCondition()=target_3
		)
	)
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_4.getArrayBase().(VariableAccess).getLocation())
	and target_5.getOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
	and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vport_1134, Variable vprev_pp_1137, Variable vpp_1138, ArrayExpr target_7, ArrayExpr target_8, ExprStmt target_9) {
exists(IfStmt target_1 |
	exists(EqualityOperation obj_0 | obj_0=target_1.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().hasName("nla_len")
			and obj_1.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
		)
		and obj_0.getRightOperand().(Literal).getValue()="16"
	)
	and exists(BlockStmt obj_2 | obj_2=target_1.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("__memcpy")
				and obj_4.getArgument(0).(VariableAccess).getTarget()=vpp_1138
				and obj_4.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vprev_pp_1137
				and obj_4.getArgument(2).(SizeofExprOperator).getValue()="92"
			)
		)
		and obj_2.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	)
	and exists(BlockStmt obj_5 | obj_5=target_1.getParent() |
		exists(IfStmt obj_6 | obj_6=obj_5.getParent() |
			obj_6.getThen().(BlockStmt).getStmt(0)=target_1
			and obj_6.getCondition()=target_7
		)
	)
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_8.getArrayBase().(VariableAccess).getLocation())
	and target_9.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Parameter vport_1134, Variable vprev_pp_1137, Variable vpp_1138, ArrayExpr target_10, ArrayExpr target_11, ValueFieldAccess target_12, ExprStmt target_13) {
exists(IfStmt target_2 |
	exists(EqualityOperation obj_0 | obj_0=target_2.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().hasName("nla_len")
			and obj_1.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
		)
		and obj_0.getRightOperand().(Literal).getValue()="16"
	)
	and exists(BlockStmt obj_2 | obj_2=target_2.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("__memcpy")
				and obj_4.getArgument(0).(VariableAccess).getTarget()=vpp_1138
				and obj_4.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vprev_pp_1137
				and obj_4.getArgument(2).(SizeofExprOperator).getValue()="92"
			)
		)
		and obj_2.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	)
	and exists(BlockStmt obj_5 | obj_5=target_2.getParent() |
		exists(IfStmt obj_6 | obj_6=obj_5.getParent() |
			obj_6.getThen().(BlockStmt).getStmt(0)=target_2
			and obj_6.getCondition()=target_10
		)
	)
	and target_2.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_11.getArrayBase().(VariableAccess).getLocation())
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_12.getQualifier().(VariableAccess).getLocation())
	and target_13.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_3(Parameter vport_1134, BlockStmt target_14, ArrayExpr target_3) {
	target_3.getArrayBase().(VariableAccess).getTarget()=vport_1134
	and target_3.getParent().(IfStmt).getThen()=target_14
}

predicate func_4(Parameter vport_1134, ArrayExpr target_4) {
	target_4.getArrayBase().(VariableAccess).getTarget()=vport_1134
	and target_4.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("nla_data")
}

predicate func_5(Variable vprev_pp_1137, Variable vpp_1138, AddressOfExpr target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("__memcpy")
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vpp_1138
				and obj_2.getArgument(2).(SizeofExprOperator).getValue()="92"
			)
		)
	)
	and target_5.getOperand().(VariableAccess).getTarget()=vprev_pp_1137
}

predicate func_6(Parameter vport_1134, Variable vpp_1138, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="request"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpp_1138
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().hasName("nla_get_u8")
			and obj_2.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
		)
	)
}

predicate func_7(Parameter vport_1134, BlockStmt target_15, ArrayExpr target_7) {
	target_7.getArrayBase().(VariableAccess).getTarget()=vport_1134
	and target_7.getParent().(IfStmt).getThen()=target_15
}

predicate func_8(Parameter vport_1134, ArrayExpr target_8) {
	target_8.getArrayBase().(VariableAccess).getTarget()=vport_1134
	and target_8.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("nla_data")
}

predicate func_9(Parameter vport_1134, Variable vpp_1138, ExprStmt target_9) {
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="name"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpp_1138
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getArgument(1) |
			obj_2.getTarget().hasName("nla_data")
			and obj_2.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
		)
		and obj_0.getTarget().hasName("__memcpy")
		and obj_0.getArgument(2).(Literal).getValue()="40"
	)
}

predicate func_10(Parameter vport_1134, BlockStmt target_16, ArrayExpr target_10) {
	target_10.getArrayBase().(VariableAccess).getTarget()=vport_1134
	and target_10.getParent().(IfStmt).getThen()=target_16
}

predicate func_11(Parameter vport_1134, ArrayExpr target_11) {
	target_11.getArrayBase().(VariableAccess).getTarget()=vport_1134
	and target_11.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("nla_data")
}

predicate func_12(Variable vprev_pp_1137, ValueFieldAccess target_12) {
	target_12.getTarget().getName()="vf_mac"
	and target_12.getQualifier().(VariableAccess).getTarget()=vprev_pp_1137
}

predicate func_13(Parameter vport_1134, Variable vpp_1138, ExprStmt target_13) {
	exists(FunctionCall obj_0 | obj_0=target_13.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="instance_uuid"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpp_1138
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getArgument(1) |
			obj_2.getTarget().hasName("nla_data")
			and obj_2.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
		)
		and obj_0.getTarget().hasName("__memcpy")
		and obj_0.getArgument(2).(Literal).getValue()="16"
	)
}

predicate func_14(Parameter vport_1134, Variable vpp_1138, BlockStmt target_14) {
	exists(ExprStmt obj_0 | obj_0=target_14.getStmt(0) |
		exists(AssignOrExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="set"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpp_1138
			)
			and obj_1.getRValue().(BinaryBitwiseOperation).getValue()="4"
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_14.getStmt(1) |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getArgument(0) |
				obj_5.getTarget().getName()="name"
				and obj_5.getQualifier().(VariableAccess).getTarget()=vpp_1138
			)
			and exists(FunctionCall obj_6 | obj_6=obj_4.getArgument(1) |
				obj_6.getTarget().hasName("nla_data")
				and obj_6.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
			)
			and obj_4.getTarget().hasName("__memcpy")
			and obj_4.getArgument(2).(Literal).getValue()="40"
		)
	)
}

predicate func_15(Parameter vport_1134, Variable vpp_1138, BlockStmt target_15) {
	exists(ExprStmt obj_0 | obj_0=target_15.getStmt(0) |
		exists(AssignOrExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="set"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpp_1138
			)
			and obj_1.getRValue().(BinaryBitwiseOperation).getValue()="8"
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_15.getStmt(1) |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getArgument(0) |
				obj_5.getTarget().getName()="instance_uuid"
				and obj_5.getQualifier().(VariableAccess).getTarget()=vpp_1138
			)
			and exists(FunctionCall obj_6 | obj_6=obj_4.getArgument(1) |
				obj_6.getTarget().hasName("nla_data")
				and obj_6.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
			)
			and obj_4.getTarget().hasName("__memcpy")
			and obj_4.getArgument(2).(Literal).getValue()="16"
		)
	)
}

predicate func_16(Parameter vport_1134, Variable vpp_1138, BlockStmt target_16) {
	exists(ExprStmt obj_0 | obj_0=target_16.getStmt(0) |
		exists(AssignOrExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="set"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpp_1138
			)
			and obj_1.getRValue().(BinaryBitwiseOperation).getValue()="16"
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_16.getStmt(1) |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getArgument(0) |
				obj_5.getTarget().getName()="host_uuid"
				and obj_5.getQualifier().(VariableAccess).getTarget()=vpp_1138
			)
			and exists(FunctionCall obj_6 | obj_6=obj_4.getArgument(1) |
				obj_6.getTarget().hasName("nla_data")
				and obj_6.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vport_1134
			)
			and obj_4.getTarget().hasName("__memcpy")
			and obj_4.getArgument(2).(Literal).getValue()="16"
		)
	)
}

from Function func, Parameter vport_1134, Variable vprev_pp_1137, Variable vpp_1138, ArrayExpr target_3, ArrayExpr target_4, AddressOfExpr target_5, ExprStmt target_6, ArrayExpr target_7, ArrayExpr target_8, ExprStmt target_9, ArrayExpr target_10, ArrayExpr target_11, ValueFieldAccess target_12, ExprStmt target_13, BlockStmt target_14, BlockStmt target_15, BlockStmt target_16
where
not func_0(vport_1134, vprev_pp_1137, vpp_1138, target_3, target_4, target_5, target_6)
and not func_1(vport_1134, vprev_pp_1137, vpp_1138, target_7, target_8, target_9)
and not func_2(vport_1134, vprev_pp_1137, vpp_1138, target_10, target_11, target_12, target_13)
and func_3(vport_1134, target_14, target_3)
and func_4(vport_1134, target_4)
and func_5(vprev_pp_1137, vpp_1138, target_5)
and func_6(vport_1134, vpp_1138, target_6)
and func_7(vport_1134, target_15, target_7)
and func_8(vport_1134, target_8)
and func_9(vport_1134, vpp_1138, target_9)
and func_10(vport_1134, target_16, target_10)
and func_11(vport_1134, target_11)
and func_12(vprev_pp_1137, target_12)
and func_13(vport_1134, vpp_1138, target_13)
and func_14(vport_1134, vpp_1138, target_14)
and func_15(vport_1134, vpp_1138, target_15)
and func_16(vport_1134, vpp_1138, target_16)
and vport_1134.getType().hasName("nlattr *[]")
and vprev_pp_1137.getType().hasName("enic_port_profile")
and vpp_1138.getType().hasName("enic_port_profile *")
and vport_1134.getFunction() = func
and vprev_pp_1137.(LocalVariable).getFunction() = func
and vpp_1138.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
