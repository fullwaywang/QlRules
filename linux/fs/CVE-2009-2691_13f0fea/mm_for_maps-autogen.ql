/**
 * @name linux-13f0feafa6b8aead57a2a328e2fca6a5828bf286-mm_for_maps
 * @id cpp/linux/13f0feafa6b8aead57a2a328e2fca6a5828bf286/mm-for-maps
 * @description linux-13f0feafa6b8aead57a2a328e2fca6a5828bf286-fs/proc/base.c-mm_for_maps CVE-2009-2691
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtask_235, Variable vmm_237, FunctionCall target_16, LogicalAndExpr target_10, ReturnStmt target_17, ExprStmt target_1) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ptrace_may_access")
		and target_0.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_235
		and target_0.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1) instanceof Literal
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vmm_237
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="mm"
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_235
		and target_0.getParent().(IfStmt).getThen() instanceof GotoStmt
		and target_16.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_10.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_17.getExpr().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vmm_237, Function func, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("mmput")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_237
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Function func, ReturnStmt target_2) {
		target_2.getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Parameter vtask_235, Variable vmm_237, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="mm"
		and target_3.getQualifier().(VariableAccess).getTarget()=vtask_235
		and target_3.getParent().(NEExpr).getAnOperand().(VariableAccess).getTarget()=vmm_237
		and target_3.getParent().(NEExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_4(Function func, PointerFieldAccess target_4) {
		target_4.getTarget().getName()="mm"
		and target_4.getQualifier().(FunctionCall).getTarget().hasName("get_current")
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vtask_235, VariableAccess target_5) {
		target_5.getTarget()=vtask_235
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_7(Variable vmm_237, VariableAccess target_7) {
		target_7.getTarget()=vmm_237
		and target_7.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Parameter vtask_235, Function func, ExprStmt target_8) {
		target_8.getExpr().(FunctionCall).getTarget().hasName("task_lock")
		and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_235
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(EqualityOperation target_18, Function func, GotoStmt target_9) {
		target_9.getParent().(IfStmt).getCondition()=target_18
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Parameter vtask_235, LogicalAndExpr target_10) {
		target_10.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="mm"
		and target_10.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_235
		and target_10.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="mm"
		and target_10.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
		and target_10.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getTarget().hasName("__ptrace_may_access")
		and target_10.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_235
		and target_10.getAnOperand().(RelationalOperation).getLesserOperand().(FunctionCall).getArgument(1) instanceof Literal
		and target_10.getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_10.getParent().(IfStmt).getThen() instanceof GotoStmt
}

/*predicate func_11(Parameter vtask_235, EqualityOperation target_18, LogicalAndExpr target_10, PointerFieldAccess target_11) {
		target_11.getTarget().getName()="mm"
		and target_11.getQualifier().(VariableAccess).getTarget()=vtask_235
		and target_18.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_11.getQualifier().(VariableAccess).getLocation())
		and target_11.getQualifier().(VariableAccess).getLocation().isBefore(target_10.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

*/
predicate func_12(LogicalAndExpr target_10, Function func, GotoStmt target_12) {
		target_12.getParent().(IfStmt).getCondition()=target_10
		and target_12.getEnclosingFunction() = func
}

predicate func_13(Parameter vtask_235, LogicalAndExpr target_10, ExprStmt target_14, Function func, ExprStmt target_13) {
		target_13.getExpr().(FunctionCall).getTarget().hasName("task_unlock")
		and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_235
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
		and target_10.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_14(Parameter vtask_235, ExprStmt target_13, Function func, ExprStmt target_14) {
		target_14.getExpr().(FunctionCall).getTarget().hasName("task_unlock")
		and target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_235
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_14
		and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_15(Variable vmm_237, Function func, ExprStmt target_15) {
		target_15.getExpr().(FunctionCall).getTarget().hasName("up_read")
		and target_15.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mmap_sem"
		and target_15.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_237
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_16(Parameter vtask_235, FunctionCall target_16) {
		target_16.getTarget().hasName("get_task_mm")
		and target_16.getArgument(0).(VariableAccess).getTarget()=vtask_235
}

predicate func_17(Variable vmm_237, ReturnStmt target_17) {
		target_17.getExpr().(VariableAccess).getTarget()=vmm_237
}

predicate func_18(Parameter vtask_235, Variable vmm_237, EqualityOperation target_18) {
		target_18.getAnOperand().(PointerFieldAccess).getTarget().getName()="mm"
		and target_18.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_235
		and target_18.getAnOperand().(VariableAccess).getTarget()=vmm_237
}

from Function func, Parameter vtask_235, Variable vmm_237, ExprStmt target_1, ReturnStmt target_2, PointerFieldAccess target_3, PointerFieldAccess target_4, VariableAccess target_5, VariableAccess target_7, ExprStmt target_8, GotoStmt target_9, LogicalAndExpr target_10, GotoStmt target_12, ExprStmt target_13, ExprStmt target_14, ExprStmt target_15, FunctionCall target_16, ReturnStmt target_17, EqualityOperation target_18
where
not func_0(vtask_235, vmm_237, target_16, target_10, target_17, target_1)
and func_1(vmm_237, func, target_1)
and func_2(func, target_2)
and func_3(vtask_235, vmm_237, target_3)
and func_4(func, target_4)
and func_5(vtask_235, target_5)
and func_7(vmm_237, target_7)
and func_8(vtask_235, func, target_8)
and func_9(target_18, func, target_9)
and func_10(vtask_235, target_10)
and func_12(target_10, func, target_12)
and func_13(vtask_235, target_10, target_14, func, target_13)
and func_14(vtask_235, target_13, func, target_14)
and func_15(vmm_237, func, target_15)
and func_16(vtask_235, target_16)
and func_17(vmm_237, target_17)
and func_18(vtask_235, vmm_237, target_18)
and vtask_235.getType().hasName("task_struct *")
and vmm_237.getType().hasName("mm_struct *")
and vtask_235.getFunction() = func
and vmm_237.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
