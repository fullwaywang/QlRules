/**
 * @name linux-b3defb791b26ea0683a93a4f49c77ec45ec96f10-seq_create_client1
 * @id cpp/linux/b3defb791b26ea0683a93a4f49c77ec45ec96f10/seq-create-client1
 * @description linux-b3defb791b26ea0683a93a4f49c77ec45ec96f10-sound/core/seq/seq_clientmgr.c-seq_create_client1 CVE-2018-1000004
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="424"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vclient_208, DoStmt target_2, AddressOfExpr target_3, ExprStmt target_4, Function func) {
exists(DoStmt target_1 |
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__mutex_init")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ioctl_mutex"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclient_208
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="&client->ioctl_mutex"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Function func, DoStmt target_2) {
	target_2.getCondition().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("_raw_spin_lock_irqsave")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vclient_208, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="ports_list_head"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclient_208
}

predicate func_4(Variable vclient_208, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="number"
	and target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclient_208
	and target_4.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vclient_208
}

from Function func, Variable vclient_208, SizeofExprOperator target_0, DoStmt target_2, AddressOfExpr target_3, ExprStmt target_4
where
func_0(func, target_0)
and not func_1(vclient_208, target_2, target_3, target_4, func)
and func_2(func, target_2)
and func_3(vclient_208, target_3)
and func_4(vclient_208, target_4)
and vclient_208.getType().hasName("snd_seq_client *")
and vclient_208.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
