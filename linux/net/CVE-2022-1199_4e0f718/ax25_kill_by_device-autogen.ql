/**
 * @name linux-4e0f718daf97d47cf7dec122da1be970f145c809-ax25_kill_by_device
 * @id cpp/linux/4e0f718daf97d47cf7dec122da1be970f145c809/ax25-kill-by-device
 * @description linux-4e0f718daf97d47cf7dec122da1be970f145c809-ax25_kill_by_device CVE-2022-1199
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vs_79, EqualityOperation target_9, ExprStmt target_10) {
	exists(AssignExpr target_0 |
		target_0.getLValue().(VariableAccess).getType().hasName("sock *")
		and target_0.getRValue().(PointerFieldAccess).getTarget().getName()="sk"
		and target_0.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_79
		and target_9.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("sock_hold")
		and target_1.getArgument(0).(VariableAccess).getType().hasName("sock *")
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(EqualityOperation target_9, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("sock *")
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_2.getEnclosingFunction() = func)
}

predicate func_4(EqualityOperation target_9, Function func) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(FunctionCall).getTarget().hasName("release_sock")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("sock *")
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_4
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_4.getEnclosingFunction() = func)
}

predicate func_6(EqualityOperation target_9, Function func) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(FunctionCall).getTarget().hasName("sock_put")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("sock *")
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(8)=target_6
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_6.getEnclosingFunction() = func)
}

predicate func_7(Variable vs_79, PointerFieldAccess target_7) {
		target_7.getTarget().getName()="sk"
		and target_7.getQualifier().(VariableAccess).getTarget()=vs_79
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lock_sock")
}

predicate func_8(Variable vs_79, ExprStmt target_10, ExprStmt target_11, PointerFieldAccess target_8) {
		target_8.getTarget().getName()="sk"
		and target_8.getQualifier().(VariableAccess).getTarget()=vs_79
		and target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getQualifier().(VariableAccess).getLocation())
		and target_8.getQualifier().(VariableAccess).getLocation().isBefore(target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_9(Variable vs_79, EqualityOperation target_9) {
		target_9.getAnOperand().(PointerFieldAccess).getTarget().getName()="ax25_dev"
		and target_9.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_79
		and target_9.getAnOperand().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
}

predicate func_10(Variable vs_79, ExprStmt target_10) {
		target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ax25_dev"
		and target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_79
		and target_10.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_11(Variable vs_79, ExprStmt target_11) {
		target_11.getExpr().(FunctionCall).getTarget().hasName("ax25_disconnect")
		and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_79
		and target_11.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="101"
}

from Function func, Variable vs_79, PointerFieldAccess target_7, PointerFieldAccess target_8, EqualityOperation target_9, ExprStmt target_10, ExprStmt target_11
where
not func_0(vs_79, target_9, target_10)
and not func_1(func)
and not func_2(target_9, func)
and not func_4(target_9, func)
and not func_6(target_9, func)
and func_7(vs_79, target_7)
and func_8(vs_79, target_10, target_11, target_8)
and func_9(vs_79, target_9)
and func_10(vs_79, target_10)
and func_11(vs_79, target_11)
and vs_79.getType().hasName("ax25_cb *")
and vs_79.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
