/**
 * @name linux-a63d83f427f-constrained_alloc
 * @id cpp/linux/a63d83f427f/constrained-alloc
 * @description linux-a63d83f427f-mm/oom_kill.c-constrained_alloc CVE-2011-2498
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getType().hasName("unsigned long *")
		and target_0.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getType().hasName("unsigned long")
		and target_0.getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getType().hasName("long")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0)
}

predicate func_1(Parameter vzonelist_280, ExprStmt target_11, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vzonelist_280
		and target_1.getThen() instanceof ReturnStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(LogicalAndExpr target_17, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getType().hasName("unsigned long *")
		and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("long")
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Parameter vnodemask_281, LogicalAndExpr target_17) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__first_node")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnodemask_281
		and target_17.getAnOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(IfStmt target_18, Function func) {
	exists(RelationalOperation target_4 |
		 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
		and target_4.getLesserOperand().(VariableAccess).getType().hasName("int")
		and target_4.getGreaterOperand().(BinaryBitwiseOperation).getValue()="1024"
		and target_4.getParent().(ForStmt).getStmt()=target_18
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Parameter vnodemask_281, ExprStmt target_11) {
	exists(AssignExpr target_5 |
		target_5.getLValue().(VariableAccess).getType().hasName("int")
		and target_5.getRValue().(FunctionCall).getTarget().hasName("__next_node")
		and target_5.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("int")
		and target_5.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnodemask_281
		and target_5.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_6(Function func) {
	exists(ExprStmt target_6 |
		target_6.getExpr().(AssignAddExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getType().hasName("unsigned long *")
		and target_6.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="node_spanned_pages"
		and target_6.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getType().hasName("pglist_data *[]")
		and target_6.getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getType().hasName("int")
		and target_6.getEnclosingFunction() = func)
}

predicate func_7(Parameter vgfp_mask_281, Variable vzone_283, BitwiseAndExpr target_19, AddressOfExpr target_20, Function func) {
	exists(ForStmt target_7 |
		target_7.getInitialization() instanceof ExprStmt
		and target_7.getCondition().(VariableAccess).getTarget()=vzone_283
		and target_7.getUpdate() instanceof AssignExpr
		and target_7.getStmt().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("cpuset_zone_allowed_softwall")
		and target_7.getStmt().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vzone_283
		and target_7.getStmt().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vgfp_mask_281
		and target_7.getStmt().(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
		and target_19.getLeftOperand().(VariableAccess).getLocation().isBefore(target_7.getStmt().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_20.getOperand().(VariableAccess).getLocation().isBefore(target_7.getCondition().(VariableAccess).getLocation()))
}

/*predicate func_8(NotExpr target_21, Function func) {
	exists(ExprStmt target_8 |
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
		and target_8.getParent().(IfStmt).getCondition()=target_21
		and target_8.getEnclosingFunction() = func)
}

*/
predicate func_9(Function func) {
	exists(IfStmt target_9 |
		target_9.getCondition().(VariableAccess).getType().hasName("bool")
		and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getType().hasName("unsigned long *")
		and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("long")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__first_node")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getCondition().(RelationalOperation).getGreaterOperand().(BinaryBitwiseOperation).getValue()="1024"
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getUpdate().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getUpdate().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__next_node")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getUpdate().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("int")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getUpdate().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mems_allowed"
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getStmt().(ExprStmt).getExpr().(AssignAddExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getType().hasName("unsigned long *")
		and target_9.getThen().(BlockStmt).getStmt(1).(ForStmt).getStmt().(ExprStmt).getExpr().(AssignAddExpr).getRValue().(PointerFieldAccess).getTarget().getName()="node_spanned_pages"
		and target_9.getThen().(BlockStmt).getStmt(2) instanceof ReturnStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_9)
}

predicate func_11(Parameter vzonelist_280, Parameter vnodemask_281, Variable vzone_283, Variable vz_284, Variable vhigh_zoneidx_285, ExprStmt target_11) {
		target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vz_284
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("first_zones_zonelist")
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vzonelist_280
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vhigh_zoneidx_285
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnodemask_281
		and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vzone_283
}

predicate func_12(Parameter vnodemask_281, Variable vzone_283, Variable vz_284, Variable vhigh_zoneidx_285, AssignExpr target_12) {
		target_12.getLValue().(VariableAccess).getTarget()=vz_284
		and target_12.getRValue().(FunctionCall).getTarget().hasName("next_zones_zonelist")
		and target_12.getRValue().(FunctionCall).getArgument(0).(PrefixIncrExpr).getOperand().(VariableAccess).getTarget()=vz_284
		and target_12.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vhigh_zoneidx_285
		and target_12.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnodemask_281
		and target_12.getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vzone_283
}

predicate func_13(LogicalAndExpr target_17, Function func, ReturnStmt target_13) {
		target_13.getParent().(IfStmt).getCondition()=target_17
		and target_13.getEnclosingFunction() = func
}

predicate func_14(NotExpr target_21, Function func, ReturnStmt target_14) {
		target_14.getParent().(IfStmt).getCondition()=target_21
		and target_14.getEnclosingFunction() = func
}

predicate func_15(Function func, ReturnStmt target_15) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_16(Variable vzone_283, IfStmt target_18, VariableAccess target_16) {
		target_16.getTarget()=vzone_283
		and target_16.getParent().(ForStmt).getStmt()=target_18
}

predicate func_17(Parameter vnodemask_281, LogicalAndExpr target_17) {
		target_17.getAnOperand().(VariableAccess).getTarget()=vnodemask_281
		and target_17.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("__nodes_subset")
		and target_17.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
		and target_17.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnodemask_281
		and target_17.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(BinaryBitwiseOperation).getValue()="1024"
}

predicate func_18(Parameter vgfp_mask_281, Variable vzone_283, IfStmt target_18) {
		target_18.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("cpuset_zone_allowed_softwall")
		and target_18.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vzone_283
		and target_18.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vgfp_mask_281
		and target_18.getThen() instanceof ReturnStmt
}

predicate func_19(Parameter vgfp_mask_281, BitwiseAndExpr target_19) {
		target_19.getLeftOperand().(VariableAccess).getTarget()=vgfp_mask_281
		and target_19.getRightOperand().(Literal).getValue()="262144"
}

predicate func_20(Parameter vzonelist_280, Parameter vnodemask_281, Variable vzone_283, Variable vhigh_zoneidx_285, AddressOfExpr target_20) {
		target_20.getOperand().(VariableAccess).getTarget()=vzone_283
		and target_20.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("first_zones_zonelist")
		and target_20.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vzonelist_280
		and target_20.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vhigh_zoneidx_285
		and target_20.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnodemask_281
}

predicate func_21(Parameter vgfp_mask_281, Variable vzone_283, NotExpr target_21) {
		target_21.getOperand().(FunctionCall).getTarget().hasName("cpuset_zone_allowed_softwall")
		and target_21.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vzone_283
		and target_21.getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vgfp_mask_281
}

from Function func, Parameter vzonelist_280, Parameter vgfp_mask_281, Parameter vnodemask_281, Variable vzone_283, Variable vz_284, Variable vhigh_zoneidx_285, ExprStmt target_11, AssignExpr target_12, ReturnStmt target_13, ReturnStmt target_14, ReturnStmt target_15, VariableAccess target_16, LogicalAndExpr target_17, IfStmt target_18, BitwiseAndExpr target_19, AddressOfExpr target_20, NotExpr target_21
where
not func_0(func)
and not func_1(vzonelist_280, target_11, func)
and not func_2(target_17, func)
and not func_3(vnodemask_281, target_17)
and not func_4(target_18, func)
and not func_5(vnodemask_281, target_11)
and not func_6(func)
and not func_7(vgfp_mask_281, vzone_283, target_19, target_20, func)
and not func_9(func)
and func_11(vzonelist_280, vnodemask_281, vzone_283, vz_284, vhigh_zoneidx_285, target_11)
and func_12(vnodemask_281, vzone_283, vz_284, vhigh_zoneidx_285, target_12)
and func_13(target_17, func, target_13)
and func_14(target_21, func, target_14)
and func_15(func, target_15)
and func_16(vzone_283, target_18, target_16)
and func_17(vnodemask_281, target_17)
and func_18(vgfp_mask_281, vzone_283, target_18)
and func_19(vgfp_mask_281, target_19)
and func_20(vzonelist_280, vnodemask_281, vzone_283, vhigh_zoneidx_285, target_20)
and func_21(vgfp_mask_281, vzone_283, target_21)
and vzonelist_280.getType().hasName("zonelist *")
and vgfp_mask_281.getType().hasName("gfp_t")
and vnodemask_281.getType().hasName("nodemask_t *")
and vzone_283.getType().hasName("zone *")
and vz_284.getType().hasName("zoneref *")
and vhigh_zoneidx_285.getType().hasName("zone_type")
and vzonelist_280.getFunction() = func
and vgfp_mask_281.getFunction() = func
and vnodemask_281.getFunction() = func
and vzone_283.(LocalVariable).getFunction() = func
and vz_284.(LocalVariable).getFunction() = func
and vhigh_zoneidx_285.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
