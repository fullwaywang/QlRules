/**
 * @name linux-5ec7d18d1813a5bead0b495045606c93873aecbb-sctp_diag_dump
 * @id cpp/linux/5ec7d18d1813a5bead0b495045606c93873aecbb/sctp-diag-dump
 * @description linux-5ec7d18d1813a5bead0b495045606c93873aecbb-net/sctp/diag.c-sctp_diag_dump CVE-2022-20154
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnet_471, Variable vcommp_472, Variable vpos_478, FunctionCall target_0) {
	target_0.getTarget().hasName("sctp_for_each_transport")
	and not target_0.getTarget().hasName("sctp_transport_traverse_process")
	and target_0.getArgument(2).(VariableAccess).getTarget()=vnet_471
	and target_0.getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vpos_478
	and target_0.getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcommp_472
}

from Function func, Variable vnet_471, Variable vcommp_472, Variable vpos_478, FunctionCall target_0
where
func_0(vnet_471, vcommp_472, vpos_478, target_0)
and vnet_471.getType().hasName("net *")
and vcommp_472.getType().hasName("sctp_comm_param")
and vpos_478.getType().hasName("int")
and vnet_471.(LocalVariable).getFunction() = func
and vcommp_472.(LocalVariable).getFunction() = func
and vpos_478.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
