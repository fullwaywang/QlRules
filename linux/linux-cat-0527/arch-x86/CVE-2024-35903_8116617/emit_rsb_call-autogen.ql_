/**
 * @name linux-81166178cf0a0062a22b1b3b5368183d39577028-emit_rsb_call
 * @id cpp/linux/81166178cf0a0062a22b1b3b5368183d39577028/emit-rsb-call
 * @description linux-81166178cf0a0062a22b1b3b5368183d39577028-arch/x86/net/bpf_jit_comp.c-emit_rsb_call CVE-2024-35903
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vip_466, FunctionCall target_2) {
exists(AssignPointerAddExpr target_0 |
	target_0.getLValue().(VariableAccess).getTarget()=vip_466
	and target_0.getRValue() instanceof FunctionCall
	and target_0.getLValue().(VariableAccess).getLocation().isBefore(target_2.getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vpprog_466, Parameter vfunc_466, FunctionCall target_1) {
	target_1.getTarget().hasName("x86_call_depth_emit_accounting")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vpprog_466
	and target_1.getArgument(1).(VariableAccess).getTarget()=vfunc_466
}

predicate func_2(Parameter vpprog_466, Parameter vfunc_466, Parameter vip_466, FunctionCall target_2) {
	target_2.getTarget().hasName("emit_patch")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vpprog_466
	and target_2.getArgument(1).(VariableAccess).getTarget()=vfunc_466
	and target_2.getArgument(2).(VariableAccess).getTarget()=vip_466
	and target_2.getArgument(3).(HexLiteral).getValue()="232"
}

from Function func, Parameter vpprog_466, Parameter vfunc_466, Parameter vip_466, FunctionCall target_1, FunctionCall target_2
where
not func_0(vip_466, target_2)
and func_1(vpprog_466, vfunc_466, target_1)
and func_2(vpprog_466, vfunc_466, vip_466, target_2)
and vpprog_466.getType().hasName("u8 **")
and vfunc_466.getType().hasName("void *")
and vip_466.getType().hasName("void *")
and vpprog_466.getFunction() = func
and vfunc_466.getFunction() = func
and vip_466.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
