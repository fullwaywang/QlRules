/**
 * @name linux-b9d5772d60f8e7ef34e290f72fc20e3a4883e7d0-tpacket_rcv
 * @id cpp/linux/b9d5772d60f8e7ef34e290f72fc20e3a4883e7d0/tpacket-rcv
 * @description linux-b9d5772d60f8e7ef34e290f72fc20e3a4883e7d0-net/packet/af_packet.c-tpacket_rcv CVE-2022-48839
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(VariableAccess target_2, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="sa"
						and obj_4.getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
					)
					and obj_3.getTarget().getName()="(unknown field)"
				)
				and obj_2.getTarget().getName()="ll"
			)
		)
		and obj_0.getTarget().hasName("__memset")
		and obj_0.getArgument(1).(Literal).getValue()="0"
		and obj_0.getArgument(2).(SizeofExprOperator).getValue()="20"
	)
	and exists(BlockStmt obj_5 | obj_5=target_0.getParent() |
		exists(IfStmt obj_6 | obj_6=obj_5.getParent() |
			obj_6.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_6.getCondition()=target_2
		)
	)
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Variable vsk_2160, Variable vcopy_skb_2170, VariableAccess target_2, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("skb_set_owner_r")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcopy_skb_2170
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vsk_2160
	)
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vcopy_skb_2170, ExprStmt target_1, VariableAccess target_2) {
	target_2.getTarget()=vcopy_skb_2170
	and target_2.getParent().(IfStmt).getThen()=target_1
}

from Function func, Variable vsk_2160, Variable vcopy_skb_2170, ExprStmt target_1, VariableAccess target_2
where
not func_0(target_2, func)
and func_1(vsk_2160, vcopy_skb_2170, target_2, target_1)
and func_2(vcopy_skb_2170, target_1, target_2)
and vsk_2160.getType().hasName("sock *")
and vcopy_skb_2170.getType().hasName("sk_buff *")
and vsk_2160.(LocalVariable).getFunction() = func
and vcopy_skb_2170.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
