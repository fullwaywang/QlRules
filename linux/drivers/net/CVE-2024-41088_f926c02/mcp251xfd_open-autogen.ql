/**
 * @name linux-f926c022ebaabf7963bebf89a97201d66978a025-mcp251xfd_open
 * @id cpp/linux/f926c022ebaabf7963bebf89a97201d66978a025/mcp251xfd-open
 * @description linux-f926c022ebaabf7963bebf89a97201d66978a025-drivers/net/can/spi/mcp251xfd/mcp251xfd-core.c-mcp251xfd_open CVE-2024-41088
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_1593, Variable vspi_1594, ExprStmt target_4, AddressOfExpr target_5, Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="wq"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpriv_1593
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRValue() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(3) |
				exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(0) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
						obj_5.getTarget().getName()="dev"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vspi_1594
					)
				)
				and obj_3.getTarget().hasName("dev_name")
			)
			and obj_2.getTarget().hasName("alloc_workqueue")
			and obj_2.getArgument(0).(StringLiteral).getValue()="%s-mcp251xfd_wq"
			and obj_2.getArgument(1).(BitwiseOrExpr).getValue()="655374"
			and obj_2.getArgument(2).(Literal).getValue()="1"
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_4.getLocation())
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vpriv_1593, Variable verr_1595, ExprStmt target_4, IfStmt target_7, Function func) {
exists(IfStmt target_1 |
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="wq"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpriv_1593
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_1.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(AssignExpr obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getLValue().(VariableAccess).getTarget()=verr_1595
				and obj_4.getRValue().(UnaryMinusExpr).getValue()="-12"
			)
		)
		and obj_2.getStmt(1).(GotoStmt).getName() ="out_can_rx_offload_disable"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_7.getCondition().(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_2(ExprStmt target_4, Function func) {
exists(DoStmt target_2 |
	exists(BlockStmt obj_0 | obj_0=target_2.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("__init_work")
						and obj_4.getArgument(1).(Literal).getValue()="0"
					)
				)
				and exists(ExprStmt obj_5 | obj_5=obj_2.getStmt(2) |
					exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
						obj_6.getTarget().hasName("lockdep_init_map")
						and obj_6.getArgument(1).(StringLiteral).getValue()="(work_completion)(&priv->tx_work)"
						and obj_6.getArgument(3).(Literal).getValue()="0"
					)
				)
				and obj_2.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="data"
				and obj_2.getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
				and obj_2.getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="func"
			)
			and obj_1.getCondition().(Literal).getValue()="0"
		)
	)
	and target_2.getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_4.getLocation())
)
}

predicate func_3(Variable vpriv_1593, ExprStmt target_8, ExprStmt target_9, AddressOfExpr target_10, Function func) {
exists(ExprStmt target_3 |
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="wq"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpriv_1593
		)
		and obj_0.getTarget().hasName("destroy_workqueue")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_8.getLocation())
	and target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_4(Variable vpriv_1593, Variable vspi_1594, Variable verr_1595, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="irq"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vspi_1594
			)
			and exists(FunctionCall obj_3 | obj_3=obj_1.getArgument(4) |
				exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(0) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
						obj_5.getTarget().getName()="dev"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vspi_1594
					)
				)
				and obj_3.getTarget().hasName("dev_name")
			)
			and obj_1.getTarget().hasName("request_threaded_irq")
			and obj_1.getArgument(1).(Literal).getValue()="0"
			and obj_1.getArgument(3).(BitwiseOrExpr).getValue()="8320"
			and obj_1.getArgument(5).(VariableAccess).getTarget()=vpriv_1593
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_1595
	)
}

predicate func_5(Variable vpriv_1593, AddressOfExpr target_5) {
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getOperand() |
		obj_0.getTarget().getName()="offload"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpriv_1593
	)
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("can_rx_offload_enable")
}

predicate func_7(Variable verr_1595, IfStmt target_7) {
	target_7.getCondition().(VariableAccess).getTarget()=verr_1595
	and target_7.getThen().(GotoStmt).getName() ="out_transceiver_disable"
}

predicate func_8(Variable vpriv_1593, ExprStmt target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="offload"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpriv_1593
			)
		)
		and obj_0.getTarget().hasName("can_rx_offload_disable")
	)
}

predicate func_9(Variable vpriv_1593, Variable vspi_1594, ExprStmt target_9) {
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="irq"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vspi_1594
		)
		and obj_0.getTarget().hasName("free_irq")
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vpriv_1593
	)
}

predicate func_10(Variable vpriv_1593, AddressOfExpr target_10) {
	exists(PointerFieldAccess obj_0 | obj_0=target_10.getOperand() |
		obj_0.getTarget().getName()="offload"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpriv_1593
	)
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("can_rx_offload_disable")
}

from Function func, Variable vpriv_1593, Variable vspi_1594, Variable verr_1595, ExprStmt target_4, AddressOfExpr target_5, IfStmt target_7, ExprStmt target_8, ExprStmt target_9, AddressOfExpr target_10
where
not func_0(vpriv_1593, vspi_1594, target_4, target_5, func)
and not func_1(vpriv_1593, verr_1595, target_4, target_7, func)
and not func_2(target_4, func)
and not func_3(vpriv_1593, target_8, target_9, target_10, func)
and func_4(vpriv_1593, vspi_1594, verr_1595, target_4)
and func_5(vpriv_1593, target_5)
and func_7(verr_1595, target_7)
and func_8(vpriv_1593, target_8)
and func_9(vpriv_1593, vspi_1594, target_9)
and func_10(vpriv_1593, target_10)
and vpriv_1593.getType().hasName("mcp251xfd_priv *")
and vspi_1594.getType().hasName("const spi_device *")
and verr_1595.getType().hasName("int")
and vpriv_1593.(LocalVariable).getFunction() = func
and vspi_1594.(LocalVariable).getFunction() = func
and verr_1595.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
