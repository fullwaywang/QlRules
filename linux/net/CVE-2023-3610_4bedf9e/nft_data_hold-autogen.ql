/**
 * @name linux-4bedf9eee016286c835e3d8fa981ddece5338795-nft_data_hold
 * @id cpp/linux/4bedf9eee016286c835e3d8fa981ddece5338795/nft-data-hold
 * @description linux-4bedf9eee016286c835e3d8fa981ddece5338795-nft_data_hold CVE-2023-3610
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, DeclStmt target_0) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Variable vchain_6640, ValueFieldAccess target_11, IfStmt target_1) {
		target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("nft_chain_is_bound")
		and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vchain_6640
		and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
}

predicate func_2(Variable vchain_6640, ValueFieldAccess target_11, ExprStmt target_2) {
		target_2.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="use"
		and target_2.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="table"
		and target_2.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_6640
		and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
}

predicate func_3(Variable vchain_6640, Variable vrule_6641, Variable v__mptr_1_6654, ValueFieldAccess target_11, ForStmt target_3) {
		target_3.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrule_6641
		and target_3.getCondition().(NotExpr).getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
		and target_3.getCondition().(NotExpr).getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrule_6641
		and target_3.getCondition().(NotExpr).getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rules"
		and target_3.getCondition().(NotExpr).getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_6640
		and target_3.getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrule_6641
		and target_3.getUpdate().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_6654
		and target_3.getStmt().(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="use"
		and target_3.getStmt().(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_6640
		and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
}

/*predicate func_6(Variable v__mptr_6654, ExprStmt target_6) {
		target_6.getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_6654
		and target_6.getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

*/
/*predicate func_9(Variable v__mptr_1_6654, ExprStmt target_9) {
		target_9.getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_6654
		and target_9.getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

*/
predicate func_10(Variable vchain_6640, ValueFieldAccess target_11, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("nft_chain_add")
		and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="table"
		and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_6640
		and target_10.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vchain_6640
		and target_10.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_11
}

predicate func_11(Function func, ValueFieldAccess target_11) {
		target_11.getTarget().getName()="code"
		and target_11.getQualifier().(ValueFieldAccess).getTarget().getName()="verdict"
		and target_11.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_11.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const nft_data *")
		and target_11.getEnclosingFunction() = func
}

from Function func, Variable vchain_6640, Variable vrule_6641, Variable v__mptr_6654, Variable v__mptr_1_6654, DeclStmt target_0, IfStmt target_1, ExprStmt target_2, ForStmt target_3, ExprStmt target_10, ValueFieldAccess target_11
where
func_0(func, target_0)
and func_1(vchain_6640, target_11, target_1)
and func_2(vchain_6640, target_11, target_2)
and func_3(vchain_6640, vrule_6641, v__mptr_1_6654, target_11, target_3)
and func_10(vchain_6640, target_11, target_10)
and func_11(func, target_11)
and vchain_6640.getType().hasName("nft_chain *")
and vrule_6641.getType().hasName("nft_rule *")
and v__mptr_6654.getType().hasName("void *")
and v__mptr_1_6654.getType().hasName("void *")
and vchain_6640.(LocalVariable).getFunction() = func
and vrule_6641.(LocalVariable).getFunction() = func
and v__mptr_6654.(LocalVariable).getFunction() = func
and v__mptr_1_6654.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
