/**
 * @name linux-f232326f6966cf2a1d1db7bc917a4ce5f9f55f76-sanitize_ptr_alu
 * @id cpp/linux/f232326f6966cf2a1d1db7bc917a4ce5f9f55f76/sanitize-ptr-alu
 * @description linux-f232326f6966cf2a1d1db7bc917a4ce5f9f55f76-kernel/bpf/verifier.c-sanitize_ptr_alu CVE-2020-27170
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="13"
	and not target_0.getValue()="0"
	and target_0.getParent().(UnaryMinusExpr).getParent().(ReturnStmt).getExpr() instanceof UnaryMinusExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(IfStmt target_11, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_11.getLocation()))
}

predicate func_2(ReturnStmt target_12, Function func) {
exists(RelationalOperation target_2 |
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getType().hasName("int")
	and target_2.getGreaterOperand() instanceof Literal
	and target_2.getParent().(IfStmt).getThen()=target_12
	and target_2.getEnclosingFunction() = func)
}

predicate func_4(IfStmt target_13, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_13.getLocation()))
}

predicate func_5(ReturnStmt target_14, Function func) {
exists(RelationalOperation target_5 |
	 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
	and target_5.getLesserOperand().(VariableAccess).getType().hasName("int")
	and target_5.getGreaterOperand().(Literal).getValue()="0"
	and target_5.getParent().(IfStmt).getThen()=target_14
	and target_5.getEnclosingFunction() = func)
}

predicate func_7(Parameter vptr_reg_5926, Parameter voff_is_neg_5928, Variable vopcode_5933, Variable valu_limit_5934, ReturnStmt target_12, FunctionCall target_7) {
	target_7.getTarget().hasName("retrieve_ptr_limit")
	and target_7.getArgument(0).(VariableAccess).getTarget()=vptr_reg_5926
	and target_7.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=valu_limit_5934
	and target_7.getArgument(2).(VariableAccess).getTarget()=vopcode_5933
	and target_7.getArgument(3).(VariableAccess).getTarget()=voff_is_neg_5928
	and target_7.getParent().(IfStmt).getThen()=target_12
}

predicate func_8(Variable vaux_5931, Variable valu_state_5934, Variable valu_limit_5934, ReturnStmt target_14, FunctionCall target_8) {
	target_8.getTarget().hasName("update_alu_sanitation_state")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vaux_5931
	and target_8.getArgument(1).(VariableAccess).getTarget()=valu_state_5934
	and target_8.getArgument(2).(VariableAccess).getTarget()=valu_limit_5934
	and target_8.getParent().(IfStmt).getThen()=target_14
}

predicate func_10(Function func, UnaryMinusExpr target_10) {
	target_10.getValue()="-13"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, IfStmt target_11) {
	target_11.getCondition() instanceof FunctionCall
	and target_11.getThen().(ReturnStmt).getExpr() instanceof Literal
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Function func, ReturnStmt target_12) {
	target_12.getExpr() instanceof Literal
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Function func, IfStmt target_13) {
	target_13.getCondition() instanceof FunctionCall
	and target_13.getThen().(ReturnStmt).getExpr() instanceof UnaryMinusExpr
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Function func, ReturnStmt target_14) {
	target_14.getExpr() instanceof UnaryMinusExpr
	and target_14.getEnclosingFunction() = func
}

from Function func, Parameter vptr_reg_5926, Parameter voff_is_neg_5928, Variable vaux_5931, Variable vopcode_5933, Variable valu_state_5934, Variable valu_limit_5934, Literal target_0, FunctionCall target_7, FunctionCall target_8, UnaryMinusExpr target_10, IfStmt target_11, ReturnStmt target_12, IfStmt target_13, ReturnStmt target_14
where
func_0(func, target_0)
and not func_1(target_11, func)
and not func_2(target_12, func)
and not func_4(target_13, func)
and not func_5(target_14, func)
and func_7(vptr_reg_5926, voff_is_neg_5928, vopcode_5933, valu_limit_5934, target_12, target_7)
and func_8(vaux_5931, valu_state_5934, valu_limit_5934, target_14, target_8)
and func_10(func, target_10)
and func_11(func, target_11)
and func_12(func, target_12)
and func_13(func, target_13)
and func_14(func, target_14)
and vptr_reg_5926.getType().hasName("const bpf_reg_state *")
and voff_is_neg_5928.getType().hasName("bool")
and vaux_5931.getType().hasName("bpf_insn_aux_data *")
and vopcode_5933.getType().hasName("u8")
and valu_state_5934.getType().hasName("u32")
and valu_limit_5934.getType().hasName("u32")
and vptr_reg_5926.getFunction() = func
and voff_is_neg_5928.getFunction() = func
and vaux_5931.(LocalVariable).getFunction() = func
and vopcode_5933.(LocalVariable).getFunction() = func
and valu_state_5934.(LocalVariable).getFunction() = func
and valu_limit_5934.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
