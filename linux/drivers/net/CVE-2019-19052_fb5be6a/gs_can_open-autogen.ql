/**
 * @name linux-fb5be6a7b4863ecc44963bb80ca614584b6c7817-gs_can_open
 * @id cpp/linux/fb5be6a7b4863ecc44963bb80ca614584b6c7817/gs-can-open
 * @description linux-fb5be6a7b4863ecc44963bb80ca614584b6c7817-drivers/net/can/usb/gs_usb.c-gs_can_open CVE-2019-19052
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vurb_583, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("usb_free_urb")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_583
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vrc_573, BlockStmt target_4, VariableAccess target_1) {
	target_1.getTarget()=vrc_573
	and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vurb_583, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("usb_unanchor_urb")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_583
}

predicate func_3(Variable vurb_583, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("usb_free_urb")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vurb_583
}

predicate func_4(Variable vrc_573, BlockStmt target_4) {
	target_4.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vrc_573
	and target_4.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-19"
	and target_4.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("netif_device_detach")
	and target_4.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="netdev"
	and target_4.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("gs_can *")
}

from Function func, Variable vrc_573, Variable vurb_583, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vurb_583, target_1, target_2, target_3)
and func_1(vrc_573, target_4, target_1)
and func_2(vurb_583, target_2)
and func_3(vurb_583, target_3)
and func_4(vrc_573, target_4)
and vrc_573.getType().hasName("int")
and vurb_583.getType().hasName("urb *")
and vrc_573.(LocalVariable).getFunction() = func
and vurb_583.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
