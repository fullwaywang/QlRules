/**
 * @name linux-cfc579f9d89af4ada58c69b03bcaa4887840f3b3-br_handle_egress_vlan_tunnel
 * @id cpp/linux/cfc579f9d89af4ada58c69b03bcaa4887840f3b3/br-handle-egress-vlan-tunnel
 * @description linux-cfc579f9d89af4ada58c69b03bcaa4887840f3b3-net/bridge/br_vlan_tunnel.c-br_handle_egress_vlan_tunnel CVE-2021-47222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtunnel_dst_190, ExprStmt target_5) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vtunnel_dst_190
	and target_0.getRightOperand().(FunctionCall).getTarget().hasName("dst_hold_safe")
	and target_0.getRightOperand().(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and target_0.getParent().(IfStmt).getThen()=target_5)
}

predicate func_1(Variable vtunnel_dst_190, IfStmt target_6, AddressOfExpr target_2) {
exists(AddressOfExpr target_1 |
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="dst"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtunnel_dst_190
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("skb_dst_set")
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof FunctionCall
	and target_6.getCondition().(VariableAccess).getLocation().isBefore(target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vtunnel_dst_190, AddressOfExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="dst"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtunnel_dst_190
	and target_2.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1) instanceof FunctionCall
}

predicate func_3(Variable vtunnel_dst_190, ExprStmt target_5, VariableAccess target_3) {
	target_3.getTarget()=vtunnel_dst_190
	and target_3.getParent().(IfStmt).getThen()=target_5
}

predicate func_4(Function func, FunctionCall target_4) {
	target_4.getTarget().hasName("dst_clone")
	and target_4.getArgument(0) instanceof AddressOfExpr
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("skb_dst_set")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("skb_dst_set")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_5.getExpr().(FunctionCall).getArgument(1) instanceof FunctionCall
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vtunnel_dst_190, IfStmt target_6) {
	target_6.getCondition().(VariableAccess).getTarget()=vtunnel_dst_190
	and target_6.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("skb_dst_set")
	and target_6.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_6.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof FunctionCall
}

from Function func, Variable vtunnel_dst_190, AddressOfExpr target_2, VariableAccess target_3, FunctionCall target_4, ExprStmt target_5, IfStmt target_6
where
not func_0(vtunnel_dst_190, target_5)
and not func_1(vtunnel_dst_190, target_6, target_2)
and func_2(vtunnel_dst_190, target_2)
and func_3(vtunnel_dst_190, target_5, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(vtunnel_dst_190, target_6)
and vtunnel_dst_190.getType().hasName("metadata_dst *")
and vtunnel_dst_190.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
