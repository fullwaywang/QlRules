/**
 * @name linux-aa838896d87af561a33ecefea1caa4c15a68bc47-type_show
 * @id cpp/linux/aa838896d87af561a33ecefea1caa4c15a68bc47/type-show
 * @description linux-aa838896d87af561a33ecefea1caa4c15a68bc47-type_show CVE-2022-20166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_404, FunctionCall target_0) {
		target_0.getTarget().hasName("sprintf")
		and not target_0.getTarget().hasName("sysfs_emit")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_404
		and target_0.getArgument(1).(StringLiteral).getValue()="Data\n"
}

predicate func_1(Parameter vbuf_404, FunctionCall target_1) {
		target_1.getTarget().hasName("sprintf")
		and not target_1.getTarget().hasName("sysfs_emit")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vbuf_404
		and target_1.getArgument(1).(StringLiteral).getValue()="Instruction\n"
}

predicate func_2(Parameter vbuf_404, FunctionCall target_2) {
		target_2.getTarget().hasName("sprintf")
		and not target_2.getTarget().hasName("sysfs_emit")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vbuf_404
		and target_2.getArgument(1).(StringLiteral).getValue()="Unified\n"
}

from Function func, Parameter vbuf_404, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2
where
func_0(vbuf_404, target_0)
and func_1(vbuf_404, target_1)
and func_2(vbuf_404, target_2)
and vbuf_404.getType().hasName("char *")
and vbuf_404.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
