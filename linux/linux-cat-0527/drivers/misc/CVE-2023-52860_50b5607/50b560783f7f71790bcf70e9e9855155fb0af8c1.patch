commit 50b560783f7f71790bcf70e9e9855155fb0af8c1
Author: Hao Chen <chenhao418@huawei.com>
Date:   Thu Oct 19 17:13:52 2023 +0800

    drivers/perf: hisi: use cpuhp_state_remove_instance_nocalls() for hisi_hns3_pmu uninit process
    
    When tearing down a 'hisi_hns3' PMU, we mistakenly run the CPU hotplug
    callbacks after the device has been unregistered, leading to fireworks
    when we try to execute empty function callbacks within the driver:
    
      | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
      | CPU: 0 PID: 15 Comm: cpuhp/0 Tainted: G        W  O      5.12.0-rc4+ #1
      | Hardware name:  , BIOS KpxxxFPGA 1P B600 V143 04/22/2021
      | pstate: 80400009 (Nzcv daif +PAN -UAO -TCO BTYPE=--)
      | pc : perf_pmu_migrate_context+0x98/0x38c
      | lr : perf_pmu_migrate_context+0x94/0x38c
      |
      | Call trace:
      |  perf_pmu_migrate_context+0x98/0x38c
      |  hisi_hns3_pmu_offline_cpu+0x104/0x12c [hisi_hns3_pmu]
    
    Use cpuhp_state_remove_instance_nocalls() instead of
    cpuhp_state_remove_instance() so that the notifiers don't execute after
    the PMU device has been unregistered.
    
    Fixes: 66637ab137b4 ("drivers/perf: hisi: add driver for HNS3 PMU")
    Signed-off-by: Hao Chen <chenhao418@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Reviewed-by: Yicong Yang <yangyicong@hisilicon.com>
    Link: https://lore.kernel.org/r/20231019091352.998964-1-shaojijie@huawei.com
    [will: Rewrote commit message]
    Signed-off-by: Will Deacon <will@kernel.org>

diff --git a/drivers/perf/hisilicon/hns3_pmu.c b/drivers/perf/hisilicon/hns3_pmu.c
index e0457d84af6b..16869bf5bf4c 100644
--- a/drivers/perf/hisilicon/hns3_pmu.c
+++ b/drivers/perf/hisilicon/hns3_pmu.c
@@ -1556,8 +1556,8 @@ static int hns3_pmu_init_pmu(struct pci_dev *pdev, struct hns3_pmu *hns3_pmu)
 	ret = perf_pmu_register(&hns3_pmu->pmu, hns3_pmu->pmu.name, -1);
 	if (ret) {
 		pci_err(pdev, "failed to register perf PMU, ret = %d.\n", ret);
-		cpuhp_state_remove_instance(CPUHP_AP_PERF_ARM_HNS3_PMU_ONLINE,
-					    &hns3_pmu->node);
+		cpuhp_state_remove_instance_nocalls(CPUHP_AP_PERF_ARM_HNS3_PMU_ONLINE,
+						    &hns3_pmu->node);
 	}
 
 	return ret;
@@ -1568,8 +1568,8 @@ static void hns3_pmu_uninit_pmu(struct pci_dev *pdev)
 	struct hns3_pmu *hns3_pmu = pci_get_drvdata(pdev);
 
 	perf_pmu_unregister(&hns3_pmu->pmu);
-	cpuhp_state_remove_instance(CPUHP_AP_PERF_ARM_HNS3_PMU_ONLINE,
-				    &hns3_pmu->node);
+	cpuhp_state_remove_instance_nocalls(CPUHP_AP_PERF_ARM_HNS3_PMU_ONLINE,
+					    &hns3_pmu->node);
 }
 
 static int hns3_pmu_init_dev(struct pci_dev *pdev)
