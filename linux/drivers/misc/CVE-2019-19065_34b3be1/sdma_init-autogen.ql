/**
 * @name linux-34b3be18a04ecdc610aae4c48e5d1b799d8689f6-sdma_init
 * @id cpp/linux/34b3be18a04ecdc610aae4c48e5d1b799d8689f6/sdma-init
 * @description linux-34b3be18a04ecdc610aae4c48e5d1b799d8689f6-drivers/infiniband/hw/hfi1/sdma.c-sdma_init CVE-2019-19065
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtmp_sdma_rht_1361, RelationalOperation target_2, ExprStmt target_3, ExprStmt target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtmp_sdma_rht_1361
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(RelationalOperation target_2, Function func, GotoStmt target_1) {
	target_1.getName() ="bail"
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getGreaterOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vtmp_sdma_rht_1361, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("rhashtable_init")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtmp_sdma_rht_1361
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const rhashtable_params")
}

predicate func_4(Variable vtmp_sdma_rht_1361, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sdma_rht"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hfi1_devdata *")
	and target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vtmp_sdma_rht_1361
}

from Function func, Variable vtmp_sdma_rht_1361, GotoStmt target_1, RelationalOperation target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vtmp_sdma_rht_1361, target_2, target_3, target_4)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and func_3(vtmp_sdma_rht_1361, target_3)
and func_4(vtmp_sdma_rht_1361, target_4)
and vtmp_sdma_rht_1361.getType().hasName("rhashtable *")
and vtmp_sdma_rht_1361.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
