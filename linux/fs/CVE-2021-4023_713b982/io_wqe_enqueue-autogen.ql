/**
 * @name linux-713b9825a4c47897f66ad69409581e7734a8728e-io_wqe_enqueue
 * @id cpp/linux/713b9825a4c47897f66ad69409581e7734a8728e/io-wqe-enqueue
 * @description linux-713b9825a4c47897f66ad69409581e7734a8728e-io_wqe_enqueue CVE-2021-4023
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vwqe_835, AddressOfExpr target_9, FunctionCall target_0) {
		target_0.getTarget().hasName("_raw_spin_unlock")
		and not target_0.getTarget().hasName("_raw_spin_lock")
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwqe_835
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="0"
		and not target_1.getValue()="1"
		and target_1.getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_1.getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(0) instanceof NotExpr
		and target_1.getEnclosingFunction() = func
}

predicate func_2(FunctionCall target_10, Function func) {
	exists(ReturnStmt target_2 |
		target_2.getParent().(IfStmt).getCondition()=target_10
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vacct_837, Parameter vwqe_835, NotExpr target_11, AddressOfExpr target_12) {
	exists(IfStmt target_3 |
		target_3.getCondition().(FunctionCall).getTarget().hasName("io_acct_cancel_pending_work")
		and target_3.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vwqe_835
		and target_3.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vacct_837
		and target_3.getCondition().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("io_cb_cancel_data")
		and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_raw_spin_lock")
		and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwqe_835
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
		and target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Variable vdid_create_864, NotExpr target_4) {
		target_4.getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vdid_create_864
		and target_4.getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_4.getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(0) instanceof NotExpr
		and target_4.getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
}

predicate func_5(Parameter vwqe_835, FunctionCall target_10, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("_raw_spin_lock")
		and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwqe_835
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_6(Parameter vwqe_835, NotExpr target_11, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("_raw_spin_unlock")
		and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwqe_835
		and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

predicate func_7(BlockStmt target_13, Function func, NotExpr target_7) {
		target_7.getOperand() instanceof NotExpr
		and target_7.getParent().(FunctionCall).getArgument(1) instanceof Literal
		and target_7.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_13
		and target_7.getEnclosingFunction() = func
}

predicate func_8(NotExpr target_11, Function func, GotoStmt target_8) {
		target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
		and target_8.getEnclosingFunction() = func
}

predicate func_9(Parameter vwqe_835, AddressOfExpr target_9) {
		target_9.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwqe_835
		and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_raw_spin_unlock")
}

predicate func_10(Function func, FunctionCall target_10) {
		target_10.getTarget().hasName("__builtin_expect")
		and target_10.getArgument(0) instanceof NotExpr
		and target_10.getArgument(1) instanceof Literal
		and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vacct_837, NotExpr target_11) {
		target_11.getOperand().(PointerFieldAccess).getTarget().getName()="nr_workers"
		and target_11.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_837
}

predicate func_12(Parameter vwqe_835, AddressOfExpr target_12) {
		target_12.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vwqe_835
		and target_12.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_raw_spin_lock")
}

predicate func_13(Variable vacct_837, BlockStmt target_13) {
		target_13.getStmt(0) instanceof ExprStmt
		and target_13.getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nr_workers"
		and target_13.getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vacct_837
		and target_13.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
		and target_13.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1) instanceof GotoStmt
}

from Function func, Variable vacct_837, Variable vdid_create_864, Parameter vwqe_835, FunctionCall target_0, Literal target_1, NotExpr target_4, ExprStmt target_5, ExprStmt target_6, NotExpr target_7, GotoStmt target_8, AddressOfExpr target_9, FunctionCall target_10, NotExpr target_11, AddressOfExpr target_12, BlockStmt target_13
where
func_0(vwqe_835, target_9, target_0)
and func_1(func, target_1)
and not func_2(target_10, func)
and not func_3(vacct_837, vwqe_835, target_11, target_12)
and func_4(vdid_create_864, target_4)
and func_5(vwqe_835, target_10, target_5)
and func_6(vwqe_835, target_11, target_6)
and func_7(target_13, func, target_7)
and func_8(target_11, func, target_8)
and func_9(vwqe_835, target_9)
and func_10(func, target_10)
and func_11(vacct_837, target_11)
and func_12(vwqe_835, target_12)
and func_13(vacct_837, target_13)
and vacct_837.getType().hasName("io_wqe_acct *")
and vdid_create_864.getType().hasName("bool")
and vwqe_835.getType().hasName("io_wqe *")
and vacct_837.(LocalVariable).getFunction() = func
and vdid_create_864.(LocalVariable).getFunction() = func
and vwqe_835.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
