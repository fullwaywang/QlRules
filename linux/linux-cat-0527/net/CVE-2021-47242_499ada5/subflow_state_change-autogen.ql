/**
 * @name linux-499ada5073361c631f2a3c4a8aed44d53b6f82ec-subflow_state_change
 * @id cpp/linux/499ada5073361c631f2a3c4a8aed44d53b6f82ec/subflow-state-change
 * @description linux-499ada5073361c631f2a3c4a8aed44d53b6f82ec-net/mptcp/subflow.c-subflow_state_change CVE-2021-47242
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_1478, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sk_err"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1478
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("subflow_error_report")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1478
	and target_0.getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_1478, FunctionCall target_1) {
	target_1.getTarget().hasName("mptcp_subflow_data_available")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vsk_1478
}

predicate func_2(Parameter vsk_1478, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("mptcp_data_ready")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsk_1478
}

predicate func_3(Parameter vsk_1478, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("subflow_sched_work_if_closed")
	and target_3.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("mptcp_sk")
	and target_3.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsk_1478
}

from Function func, Parameter vsk_1478, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vsk_1478, target_1, target_2, target_3)
and func_1(vsk_1478, target_1)
and func_2(vsk_1478, target_2)
and func_3(vsk_1478, target_3)
and vsk_1478.getType().hasName("sock *")
and vsk_1478.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
