commit 49c0e081998008cde0c872c0ff9affa1ece4b878
Author: Gao Xiang <xiang@kernel.org>
Date:   Tue Aug 20 16:56:19 2024 +0800

    erofs: fix out-of-bound access when z_erofs_gbuf_growsize() partially fails
    
    commit 0005e01e1e875c5e27130c5e2ed0189749d1e08a upstream.
    
    If z_erofs_gbuf_growsize() partially fails on a global buffer due to
    memory allocation failure or fault injection (as reported by syzbot [1]),
    new pages need to be freed by comparing to the existing pages to avoid
    memory leaks.
    
    However, the old gbuf->pages[] array may not be large enough, which can
    lead to null-ptr-deref or out-of-bound access.
    
    Fix this by checking against gbuf->nrpages in advance.
    
    [1] https://lore.kernel.org/r/000000000000f7b96e062018c6e3@google.com
    
    Reported-by: syzbot+242ee56aaa9585553766@syzkaller.appspotmail.com
    Fixes: d6db47e571dc ("erofs: do not use pagepool in z_erofs_gbuf_growsize()")
    Cc: <stable@vger.kernel.org> # 6.10+
    Reviewed-by: Chunhai Guo <guochunhai@vivo.com>
    Reviewed-by: Sandeep Dhavale <dhavale@google.com>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20240820085619.1375963-1-hsiangkao@linux.alibaba.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/fs/erofs/zutil.c b/fs/erofs/zutil.c
index 9b53883e5caf..37afe2024840 100644
--- a/fs/erofs/zutil.c
+++ b/fs/erofs/zutil.c
@@ -111,7 +111,8 @@ int z_erofs_gbuf_growsize(unsigned int nrpages)
 out:
 	if (i < z_erofs_gbuf_count && tmp_pages) {
 		for (j = 0; j < nrpages; ++j)
-			if (tmp_pages[j] && tmp_pages[j] != gbuf->pages[j])
+			if (tmp_pages[j] && (j >= gbuf->nrpages ||
+					     tmp_pages[j] != gbuf->pages[j]))
 				__free_page(tmp_pages[j]);
 		kfree(tmp_pages);
 	}
