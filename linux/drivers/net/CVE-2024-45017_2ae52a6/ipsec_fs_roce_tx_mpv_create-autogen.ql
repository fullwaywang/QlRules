/**
 * @name linux-2ae52a65a850ded75a94e8d7ec1e09737f4c6509-ipsec_fs_roce_tx_mpv_create
 * @id cpp/linux/2ae52a65a850ded75a94e8d7ec1e09737f4c6509/ipsec-fs-roce-tx-mpv-create
 * @description linux-2ae52a65a850ded75a94e8d7ec1e09737f4c6509-drivers/net/ethernet/mellanox/mlx5/core/lib/ipsec_fs_roce.c-ipsec_fs_roce_tx_mpv_create CVE-2024-45017
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpeer_priv_382, BlockStmt target_3, ExprStmt target_4, NotExpr target_2) {
exists(LogicalOrExpr target_0 |
	exists(NotExpr obj_0 | obj_0=target_0.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="ipsec"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpeer_priv_382
		)
	)
	and target_0.getLeftOperand() instanceof NotExpr
	and target_0.getParent().(IfStmt).getThen()=target_3
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vmdev_375, NotExpr target_2, ExprStmt target_5) {
exists(ExprStmt target_1 |
	exists(StmtExpr obj_0 | obj_0=target_1.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getArgument(0) |
						obj_4.getTarget().getName()="device"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vmdev_375
					)
					and exists(PointerFieldAccess obj_5 | obj_5=obj_3.getArgument(4) |
						obj_5.getTarget().getName()="pid"
						and obj_5.getQualifier().(FunctionCall).getTarget().hasName("get_current")
					)
					and obj_3.getTarget().hasName("_dev_err")
					and obj_3.getArgument(1).(StringLiteral).getValue()="%s:%d:(pid %d): IPsec not supported on master device\n"
					and obj_3.getArgument(2).(VariableAccess).getType().hasName("const char[28]")
					and obj_3.getArgument(3) instanceof Literal
				)
			)
			and obj_1.getStmt(0).(DoStmt).getCondition() instanceof Literal
		)
	)
	and exists(BlockStmt obj_6 | obj_6=target_1.getParent() |
		exists(IfStmt obj_7 | obj_7=obj_6.getParent() |
			obj_7.getThen().(BlockStmt).getStmt(0)=target_1
			and obj_7.getCondition()=target_2
		)
	)
	and target_1.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Variable vpeer_priv_382, BlockStmt target_3, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vpeer_priv_382
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Function func, BlockStmt target_3) {
	exists(ExprStmt obj_0 | obj_0=target_3.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getLValue().(VariableAccess).getTarget().getType().hasName("int")
			and obj_1.getRValue().(UnaryMinusExpr).getValue()="-95"
		)
	)
	and target_3.getStmt(1).(GotoStmt).getName() ="release_peer"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vpeer_priv_382, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerDereferenceExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="devcom"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("mlx5_ipsec_fs *")
				)
			)
			and obj_1.getTarget().hasName("mlx5_devcom_get_next_peer_data")
			and obj_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("mlx5_devcom_comp_dev *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpeer_priv_382
	)
}

predicate func_5(Parameter vmdev_375, Variable vpeer_priv_382, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("ipsec_fs_roce_tx_mpv_create_ft")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vmdev_375
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("mlx5_ipsec_tx_roce *")
			and obj_1.getArgument(2).(VariableAccess).getTarget().getType().hasName("mlx5_flow_table *")
			and obj_1.getArgument(3).(VariableAccess).getTarget()=vpeer_priv_382
			and obj_1.getArgument(4).(VariableAccess).getTarget().getType().hasName("bool")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

from Function func, Parameter vmdev_375, Variable vpeer_priv_382, NotExpr target_2, BlockStmt target_3, ExprStmt target_4, ExprStmt target_5
where
not func_0(vpeer_priv_382, target_3, target_4, target_2)
and not func_1(vmdev_375, target_2, target_5)
and func_2(vpeer_priv_382, target_3, target_2)
and func_3(func, target_3)
and func_4(vpeer_priv_382, target_4)
and func_5(vmdev_375, vpeer_priv_382, target_5)
and vmdev_375.getType().hasName("mlx5_core_dev *")
and vpeer_priv_382.getType().hasName("mlx5e_priv *")
and vmdev_375.getFunction() = func
and vpeer_priv_382.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
