/**
 * @name linux-a5cd335165e31db9dbab636fd29895d41da55dd2-drm_mode_dirtyfb_ioctl
 * @id cpp/linux/a5cd335165e31db9dbab636fd29895d41da55dd2/drm-mode-dirtyfb-ioctl
 * @description linux-a5cd335165e31db9dbab636fd29895d41da55dd2-drivers/gpu/drm/drm_crtc.c-drm_mode_dirtyfb_ioctl CVE-2012-0044
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnum_clips_1844, Variable vret_1845, LogicalAndExpr target_1, MulExpr target_2, ExprStmt target_3) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vnum_clips_1844
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vnum_clips_1844
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="256"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1845
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(VariableAccess).getLocation())
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnum_clips_1844, LogicalAndExpr target_1) {
		target_1.getAnOperand().(VariableAccess).getTarget()=vnum_clips_1844
		and target_1.getAnOperand().(VariableAccess).getTarget().getType().hasName("drm_clip_rect *")
}

predicate func_2(Variable vnum_clips_1844, MulExpr target_2) {
		target_2.getLeftOperand().(VariableAccess).getTarget()=vnum_clips_1844
		and target_2.getRightOperand().(SizeofExprOperator).getValue()="8"
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kzalloc")
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="208"
}

predicate func_3(Variable vret_1845, LogicalAndExpr target_4, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_1845
		and target_3.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_4(Variable vnum_clips_1844, LogicalAndExpr target_4) {
		target_4.getAnOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_4.getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
		and target_4.getAnOperand().(RemExpr).getLeftOperand().(VariableAccess).getTarget()=vnum_clips_1844
		and target_4.getAnOperand().(RemExpr).getRightOperand().(Literal).getValue()="2"
}

from Function func, Variable vnum_clips_1844, Variable vret_1845, LogicalAndExpr target_1, MulExpr target_2, ExprStmt target_3, LogicalAndExpr target_4
where
not func_0(vnum_clips_1844, vret_1845, target_1, target_2, target_3)
and func_1(vnum_clips_1844, target_1)
and func_2(vnum_clips_1844, target_2)
and func_3(vret_1845, target_4, target_3)
and func_4(vnum_clips_1844, target_4)
and vnum_clips_1844.getType().hasName("int")
and vret_1845.getType().hasName("int")
and vnum_clips_1844.(LocalVariable).getFunction() = func
and vret_1845.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
