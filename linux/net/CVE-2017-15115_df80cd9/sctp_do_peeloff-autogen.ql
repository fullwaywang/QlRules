/**
 * @name linux-df80cd9b28b9ebaa284a41df611dbf3a2d05ca74-sctp_do_peeloff
 * @id cpp/linux/df80cd9b28b9ebaa284a41df611dbf3a2d05ca74/sctp-do-peeloff
 * @description linux-df80cd9b28b9ebaa284a41df611dbf3a2d05ca74-net/sctp/socket.c-sctp_do_peeloff CVE-2017-15115
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_4902, IfStmt target_1, FunctionCall target_2, NotExpr target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("net_eq")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="net_ns"
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="nsproxy"
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("sock_net")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_4902
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sctp_association *")
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vsk_4902, FunctionCall target_2) {
	target_2.getTarget().hasName("sctp_sk")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vsk_4902
}

predicate func_3(Parameter vsk_4902, NotExpr target_3) {
	target_3.getOperand().(FunctionCall).getTarget().hasName("__sctp_style")
	and target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_4902
}

from Function func, Parameter vsk_4902, IfStmt target_1, FunctionCall target_2, NotExpr target_3
where
not func_0(vsk_4902, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vsk_4902, target_2)
and func_3(vsk_4902, target_3)
and vsk_4902.getType().hasName("sock *")
and vsk_4902.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
