/**
 * @name linux-5d2bd7009f306c82afddd1ca4d9763ad8473c216-fpu_finit
 * @id cpp/linux/5d2bd7009f306c82afddd1ca4d9763ad8473c216/fpu-finit
 * @description linux-5d2bd7009f306c82afddd1ca4d9763ad8473c216-arch/x86/kernel/i387.c-fpu_finit CVE-2018-3665
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("fx_finit")
	and target_0.getArgument(0) instanceof AddressOfExpr
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vfpu_193, AddressOfExpr target_1) {
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="fxsave"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpu_193
}

predicate func_2(ConditionalExpr target_6, Function func, DeclStmt target_2) {
	target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vxstate_size, Variable vfx_201, FunctionCall target_3) {
	target_3.getTarget().hasName("memset")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vfx_201
	and target_3.getArgument(1).(Literal).getValue()="0"
	and target_3.getArgument(2).(VariableAccess).getTarget()=vxstate_size
}

predicate func_4(Variable vfx_201, ConditionalExpr target_6, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cwd"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfx_201
	and target_4.getExpr().(AssignExpr).getRValue().(HexLiteral).getValue()="895"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_5(Variable vfx_201, Variable vboot_cpu_data, ConditionalExpr target_6, IfStmt target_5) {
	target_5.getCondition().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="1"
	and target_5.getCondition().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(AddExpr).getValue()="25"
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="25"
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_5.getCondition().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
	and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="mxcsr"
	and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfx_201
	and target_5.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="8064"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_6(Variable vboot_cpu_data, ConditionalExpr target_6) {
	target_6.getCondition().(LogicalAndExpr).getValue()="1"
	and target_6.getThen().(Literal).getValue()="1"
	and target_6.getElse().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_6.getElse().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_6.getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(AddExpr).getValue()="24"
	and target_6.getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_6.getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
	and target_6.getElse().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_6.getElse().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="24"
	and target_6.getElse().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_6.getElse().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
}

from Function func, Variable vxstate_size, Parameter vfpu_193, Variable vfx_201, Variable vboot_cpu_data, AddressOfExpr target_1, DeclStmt target_2, FunctionCall target_3, ExprStmt target_4, IfStmt target_5, ConditionalExpr target_6
where
not func_0(func)
and func_1(vfpu_193, target_1)
and func_2(target_6, func, target_2)
and func_3(vxstate_size, vfx_201, target_3)
and func_4(vfx_201, target_6, target_4)
and func_5(vfx_201, vboot_cpu_data, target_6, target_5)
and func_6(vboot_cpu_data, target_6)
and vxstate_size.getType().hasName("unsigned int")
and vfpu_193.getType().hasName("fpu *")
and vfx_201.getType().hasName("i387_fxsave_struct *")
and vboot_cpu_data.getType().hasName("cpuinfo_x86")
and not vxstate_size.getParentScope+() = func
and vfpu_193.getFunction() = func
and vfx_201.(LocalVariable).getFunction() = func
and not vboot_cpu_data.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
