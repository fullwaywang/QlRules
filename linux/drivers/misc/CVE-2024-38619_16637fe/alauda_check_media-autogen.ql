/**
 * @name linux-16637fea001ab3c8df528a8995b3211906165a30-alauda_check_media
 * @id cpp/linux/16637fea001ab3c8df528a8995b3211906165a30/alauda-check-media
 * @description linux-16637fea001ab3c8df528a8995b3211906165a30-drivers/usb/storage/alauda.c-alauda_check_media CVE-2024-38619
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinfo_457, BlockStmt target_5, ExprStmt target_6) {
exists(LogicalOrExpr target_0 |
	exists(NotExpr obj_0 | obj_0=target_0.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="media_initialized"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vinfo_457
		)
	)
	and target_0.getLeftOperand() instanceof BitwiseAndExpr
	and target_0.getParent().(IfStmt).getThen()=target_5
	and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vrc_459, EqualityOperation target_7) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getTarget()=vrc_459
	and target_1.getRValue() instanceof FunctionCall
	and target_7.getLeftOperand().(VariableAccess).getLocation().isBefore(target_1.getLValue().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vinfo_457, Variable vrc_459, BitwiseAndExpr target_3, ExprStmt target_8) {
exists(IfStmt target_2 |
	exists(EqualityOperation obj_0 | obj_0=target_2.getCondition() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vrc_459
		and obj_0.getRightOperand().(Literal).getValue()="0"
	)
	and exists(ExprStmt obj_1 | obj_1=target_2.getThen() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
			exists(PointerFieldAccess obj_3 | obj_3=obj_2.getLValue() |
				obj_3.getTarget().getName()="media_initialized"
				and obj_3.getQualifier().(VariableAccess).getTarget()=vinfo_457
			)
		)
	)
	and exists(BlockStmt obj_4 | obj_4=target_2.getParent() |
		exists(IfStmt obj_5 | obj_5=obj_4.getParent() |
			obj_5.getThen().(BlockStmt).getStmt(3)=target_2
			and obj_5.getCondition()=target_3
		)
	)
	and target_2.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_3(Variable vstatus_458, BlockStmt target_5, BitwiseAndExpr target_3) {
	exists(ArrayExpr obj_0 | obj_0=target_3.getLeftOperand() |
		obj_0.getArrayBase().(VariableAccess).getTarget()=vstatus_458
		and obj_0.getArrayOffset().(Literal).getValue()="0"
	)
	and target_3.getRightOperand().(HexLiteral).getValue()="8"
	and target_3.getParent().(IfStmt).getThen()=target_5
}

predicate func_4(Parameter vus_455, FunctionCall target_4) {
	target_4.getTarget().hasName("alauda_init_media")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vus_455
}

predicate func_5(Parameter vus_455, BlockStmt target_5) {
	exists(ExprStmt obj_0 | obj_0=target_5.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("usb_stor_dbg")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vus_455
			and obj_1.getArgument(1).(StringLiteral).getValue()="Media change detected\n"
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_5.getStmt(1) |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(0) |
				exists(ArrayExpr obj_5 | obj_5=obj_4.getOperand() |
					exists(PointerFieldAccess obj_6 | obj_6=obj_5.getArrayBase() |
						obj_6.getTarget().getName()="port"
						and obj_6.getQualifier().(PointerFieldAccess).getTarget().getName()="extra"
					)
					and exists(PointerFieldAccess obj_7 | obj_7=obj_5.getArrayOffset() |
						obj_7.getTarget().getName()="lun"
						and obj_7.getQualifier().(PointerFieldAccess).getTarget().getName()="device"
					)
				)
			)
			and obj_3.getTarget().hasName("alauda_free_maps")
		)
	)
}

predicate func_6(Variable vinfo_457, LogicalOrExpr target_9, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="sense_ascq"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vinfo_457
		)
		and obj_0.getRValue().(HexLiteral).getValue()="0"
	)
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_7(Variable vrc_459, EqualityOperation target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget()=vrc_459
	and target_7.getRightOperand().(Literal).getValue()="0"
}

predicate func_8(Variable vinfo_457, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="sense_key"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vinfo_457
		)
		and obj_0.getRValue().(Literal).getValue()="6"
	)
}

predicate func_9(Variable vstatus_458, LogicalOrExpr target_9) {
	exists(LogicalOrExpr obj_0 | obj_0=target_9.getLeftOperand() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getArrayBase().(VariableAccess).getTarget()=vstatus_458
				and obj_2.getArrayOffset().(Literal).getValue()="0"
			)
			and obj_1.getRightOperand().(HexLiteral).getValue()="128"
		)
		and exists(EqualityOperation obj_3 | obj_3=obj_0.getRightOperand() |
			exists(BitwiseAndExpr obj_4 | obj_4=obj_3.getLeftOperand() |
				exists(ArrayExpr obj_5 | obj_5=obj_4.getLeftOperand() |
					obj_5.getArrayBase().(VariableAccess).getTarget()=vstatus_458
					and obj_5.getArrayOffset().(Literal).getValue()="0"
				)
				and obj_4.getRightOperand().(HexLiteral).getValue()="31"
			)
			and obj_3.getRightOperand().(HexLiteral).getValue()="16"
		)
	)
	and exists(EqualityOperation obj_6 | obj_6=target_9.getRightOperand() |
		exists(BitwiseAndExpr obj_7 | obj_7=obj_6.getLeftOperand() |
			exists(ArrayExpr obj_8 | obj_8=obj_7.getLeftOperand() |
				obj_8.getArrayBase().(VariableAccess).getTarget()=vstatus_458
				and obj_8.getArrayOffset().(Literal).getValue()="1"
			)
			and obj_7.getRightOperand().(HexLiteral).getValue()="1"
		)
		and obj_6.getRightOperand().(Literal).getValue()="0"
	)
}

from Function func, Variable vinfo_457, Variable vstatus_458, Variable vrc_459, Parameter vus_455, BitwiseAndExpr target_3, FunctionCall target_4, BlockStmt target_5, ExprStmt target_6, EqualityOperation target_7, ExprStmt target_8, LogicalOrExpr target_9
where
not func_0(vinfo_457, target_5, target_6)
and not func_1(vrc_459, target_7)
and not func_2(vinfo_457, vrc_459, target_3, target_8)
and func_3(vstatus_458, target_5, target_3)
and func_4(vus_455, target_4)
and func_5(vus_455, target_5)
and func_6(vinfo_457, target_9, target_6)
and func_7(vrc_459, target_7)
and func_8(vinfo_457, target_8)
and func_9(vstatus_458, target_9)
and vinfo_457.getType().hasName("alauda_info *")
and vstatus_458.getType().hasName("unsigned char *")
and vrc_459.getType().hasName("int")
and vus_455.getType().hasName("us_data *")
and vinfo_457.(LocalVariable).getFunction() = func
and vstatus_458.(LocalVariable).getFunction() = func
and vrc_459.(LocalVariable).getFunction() = func
and vus_455.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
