/**
 * @name linux-1288cf1cceb0e6df276e182f5412370fb4169bcb-ib_umad_read
 * @id cpp/linux/1288cf1cceb0e6df276e182f5412370fb4169bcb/ib-umad-read
 * @description linux-1288cf1cceb0e6df276e182f5412370fb4169bcb-drivers/infiniband/core/user_mad.c-ib_umad_read CVE-2024-42145
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfile_360, ExprStmt target_2, ValueFieldAccess target_3, AddressOfExpr target_4, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="recv_list_size"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfile_360
			)
		)
		and obj_0.getTarget().hasName("atomic_dec")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vfile_360, RelationalOperation target_5, AddressOfExpr target_6, AddressOfExpr target_7) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="recv_list_size"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfile_360
			)
		)
		and obj_0.getTarget().hasName("atomic_inc")
	)
	and exists(BlockStmt obj_3 | obj_3=target_1.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(2)=target_1
			and obj_4.getCondition()=target_5
		)
	)
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vfile_360, Function func, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfile_360
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vfile_360, ValueFieldAccess target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getQualifier() |
		obj_0.getTarget().getName()="recv_list"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfile_360
	)
	and target_3.getTarget().getName()="next"
}

predicate func_4(Variable vfile_360, AddressOfExpr target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getOperand() |
		obj_0.getTarget().getName()="mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfile_360
	)
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

predicate func_5(Function func, RelationalOperation target_5) {
	 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
	and target_5.getLesserOperand().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_5.getGreaterOperand().(Literal).getValue()="0"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vfile_360, AddressOfExpr target_6) {
	exists(PointerFieldAccess obj_0 | obj_0=target_6.getOperand() |
		obj_0.getTarget().getName()="recv_list"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfile_360
	)
	and exists(FunctionCall obj_1 | obj_1=target_6.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				exists(AddressOfExpr obj_4 | obj_4=obj_3.getArgument(0) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
						obj_5.getTarget().getName()="list"
						and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("ib_umad_packet *")
					)
				)
				and obj_3.getTarget().hasName("list_add")
			)
		)
	)
}

predicate func_7(Variable vfile_360, AddressOfExpr target_7) {
	exists(PointerFieldAccess obj_0 | obj_0=target_7.getOperand() |
		obj_0.getTarget().getName()="mutex"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfile_360
	)
	and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

from Function func, Variable vfile_360, ExprStmt target_2, ValueFieldAccess target_3, AddressOfExpr target_4, RelationalOperation target_5, AddressOfExpr target_6, AddressOfExpr target_7
where
not func_0(vfile_360, target_2, target_3, target_4, func)
and not func_1(vfile_360, target_5, target_6, target_7)
and func_2(vfile_360, func, target_2)
and func_3(vfile_360, target_3)
and func_4(vfile_360, target_4)
and func_5(func, target_5)
and func_6(vfile_360, target_6)
and func_7(vfile_360, target_7)
and vfile_360.getType().hasName("ib_umad_file *")
and vfile_360.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
