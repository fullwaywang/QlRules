/**
 * @name linux-bbeb97464eefc65f506084fd9f18f21653e01137-ring_buffer_reset_cpu
 * @id cpp/linux/bbeb97464eefc65f506084fd9f18f21653e01137/ring-buffer-reset-cpu
 * @description linux-bbeb97464eefc65f506084fd9f18f21653e01137-kernel/trace/ring_buffer.c-ring_buffer_reset_cpu CVE-2020-27825
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuffer_4862, ExprStmt target_2, NotExpr target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mutex"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4862
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vbuffer_4862, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mutex"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4862
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("atomic_inc")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="resize_disabled"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ring_buffer_per_cpu *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vbuffer_4862, NotExpr target_3) {
	target_3.getOperand().(FunctionCall).getTarget().hasName("cpumask_test_cpu")
	and target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="cpumask"
	and target_3.getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuffer_4862
}

from Function func, Parameter vbuffer_4862, ExprStmt target_2, NotExpr target_3
where
not func_0(vbuffer_4862, target_2, target_3, func)
and not func_1(vbuffer_4862, func)
and func_2(func, target_2)
and func_3(vbuffer_4862, target_3)
and vbuffer_4862.getType().hasName("trace_buffer *")
and vbuffer_4862.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
