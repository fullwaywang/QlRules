commit 6fcca0fa48118e6d63733eb4644c6cd880c15b8f
Author: Suren Baghdasaryan <surenb@google.com>
Date:   Mon Feb 3 13:22:16 2020 -0800

    sched/psi: Fix OOB write when writing 0 bytes to PSI files
    
    Issuing write() with count parameter set to 0 on any file under
    /proc/pressure/ will cause an OOB write because of the access to
    buf[buf_size-1] when NUL-termination is performed. Fix this by checking
    for buf_size to be non-zero.
    
    Signed-off-by: Suren Baghdasaryan <surenb@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Link: https://lkml.kernel.org/r/20200203212216.7076-1-surenb@google.com

diff --git a/kernel/sched/psi.c b/kernel/sched/psi.c
index db7b50bba3f1..38ccd49b9bf6 100644
--- a/kernel/sched/psi.c
+++ b/kernel/sched/psi.c
@@ -1199,6 +1199,9 @@ static ssize_t psi_write(struct file *file, const char __user *user_buf,
 	if (static_branch_likely(&psi_disabled))
 		return -EOPNOTSUPP;
 
+	if (!nbytes)
+		return -EINVAL;
+
 	buf_size = min(nbytes, sizeof(buf));
 	if (copy_from_user(buf, user_buf, buf_size))
 		return -EFAULT;
