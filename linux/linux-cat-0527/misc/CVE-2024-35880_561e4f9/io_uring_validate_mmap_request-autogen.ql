/**
 * @name linux-561e4f9451d65fc2f7eef564e0064373e3019793-io_uring_validate_mmap_request
 * @id cpp/linux/561e4f9451d65fc2f7eef564e0064373e3019793/io-uring-validate-mmap-request
 * @description linux-561e4f9451d65fc2f7eef564e0064373e3019793-io_uring/io_uring.c-io_uring_validate_mmap_request CVE-2024-35880
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("rcu_read_lock")
	and not target_0.getTarget().hasName("io_put_bl")
	and target_0.getEnclosingFunction() = func
}

predicate func_1(ExprStmt target_14, Function func, IfStmt target_1) {
	target_1.getCondition() instanceof NotExpr
	and target_1.getThen().(ReturnStmt).getExpr() instanceof FunctionCall
	and target_14.getLocation().isBefore(target_1.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vctx_3430, Variable vbgid_3450) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getType().hasName("io_buffer_list *")
	and target_2.getRValue().(FunctionCall).getTarget().hasName("io_pbuf_get_bl")
	and target_2.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctx_3430
	and target_2.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vbgid_3450)
}

predicate func_3(ReturnStmt target_15, Function func) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("IS_ERR")
	and target_3.getArgument(0).(VariableAccess).getType().hasName("io_buffer_list *")
	and target_3.getParent().(IfStmt).getThen()=target_15
	and target_3.getEnclosingFunction() = func)
}

predicate func_5(Function func) {
exists(ValueFieldAccess target_5 |
	target_5.getTarget().getName()="buf_ring"
	and target_5.getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_5.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_5.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("io_buffer_list *")
	and target_5.getEnclosingFunction() = func)
}

predicate func_8(Function func, FunctionCall target_8) {
	target_8.getTarget().hasName("ERR_PTR")
	and target_8.getArgument(0).(UnaryMinusExpr).getValue()="-22"
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vctx_3430, VariableAccess target_9) {
	target_9.getTarget()=vctx_3430
	and target_9.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_10(Variable vbgid_3450, VariableAccess target_10) {
	target_10.getTarget()=vbgid_3450
	and target_10.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_11(Variable vctx_3430, Variable vptr_3433, Variable vbgid_3450, FunctionCall target_11) {
	target_11.getTarget().hasName("io_pbuf_get_address")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vctx_3430
	and target_11.getArgument(1).(VariableAccess).getTarget()=vbgid_3450
	and target_11.getParent().(AssignExpr).getRValue() = target_11
	and target_11.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vptr_3433
}

predicate func_12(Function func, FunctionCall target_12) {
	target_12.getTarget().hasName("rcu_read_unlock")
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable vptr_3433, ReturnStmt target_15, NotExpr target_13) {
	target_13.getOperand().(VariableAccess).getTarget()=vptr_3433
	and target_13.getParent().(IfStmt).getThen()=target_15
}

predicate func_14(Function func, ExprStmt target_14) {
	target_14.getExpr() instanceof FunctionCall
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Function func, ReturnStmt target_15) {
	target_15.getExpr() instanceof FunctionCall
	and target_15.getEnclosingFunction() = func
}

from Function func, Variable vctx_3430, Variable vptr_3433, Variable vbgid_3450, FunctionCall target_0, IfStmt target_1, FunctionCall target_8, VariableAccess target_9, VariableAccess target_10, FunctionCall target_11, FunctionCall target_12, NotExpr target_13, ExprStmt target_14, ReturnStmt target_15
where
func_0(func, target_0)
and func_1(target_14, func, target_1)
and not func_2(vctx_3430, vbgid_3450)
and not func_3(target_15, func)
and not func_5(func)
and func_8(func, target_8)
and func_9(vctx_3430, target_9)
and func_10(vbgid_3450, target_10)
and func_11(vctx_3430, vptr_3433, vbgid_3450, target_11)
and func_12(func, target_12)
and func_13(vptr_3433, target_15, target_13)
and func_14(func, target_14)
and func_15(func, target_15)
and vctx_3430.getType().hasName("io_ring_ctx *")
and vptr_3433.getType().hasName("void *")
and vbgid_3450.getType().hasName("unsigned int")
and vctx_3430.(LocalVariable).getFunction() = func
and vptr_3433.(LocalVariable).getFunction() = func
and vbgid_3450.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
