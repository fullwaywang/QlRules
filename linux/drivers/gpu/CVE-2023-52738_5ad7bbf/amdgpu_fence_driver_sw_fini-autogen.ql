/**
 * @name linux-5ad7bbf3dba5c4a684338df1f285080f2588b535-amdgpu_fence_driver_sw_fini
 * @id cpp/linux/5ad7bbf3dba5c4a684338df1f285080f2588b535/amdgpu-fence-driver-sw-fini
 * @description linux-5ad7bbf3dba5c4a684338df1f285080f2588b535-drivers/gpu/drm/amd/amdgpu/amdgpu_fence.c-amdgpu_fence_driver_sw_fini CVE-2023-52738
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vring_616, AddressOfExpr target_3) {
exists(ValueFieldAccess target_0 |
	target_0.getTarget().getName()="ops"
	and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="sched"
	and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vring_616
	and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vring_616, VariableAccess target_1) {
	target_1.getTarget()=vring_616
}

predicate func_2(Variable vring_616, ExprStmt target_4, NotExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="no_scheduler"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vring_616
	and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable vring_616, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="sched"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vring_616
}

predicate func_4(Variable vring_616, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("drm_sched_fini")
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sched"
	and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vring_616
}

from Function func, Variable vring_616, VariableAccess target_1, NotExpr target_2, AddressOfExpr target_3, ExprStmt target_4
where
not func_0(vring_616, target_3)
and func_1(vring_616, target_1)
and func_2(vring_616, target_4, target_2)
and func_3(vring_616, target_3)
and func_4(vring_616, target_4)
and vring_616.getType().hasName("amdgpu_ring *")
and vring_616.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
