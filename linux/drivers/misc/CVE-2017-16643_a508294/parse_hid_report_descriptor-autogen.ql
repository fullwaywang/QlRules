/**
 * @name linux-a50829479f58416a013a4ccca791336af3c584c7-parse_hid_report_descriptor
 * @id cpp/linux/a50829479f58416a013a4ccca791336af3c584c7/parse-hid-report-descriptor
 * @description linux-a50829479f58416a013a4ccca791336af3c584c7-drivers/input/tablet/gtco.c-parse_hid_report_descriptor CVE-2017-16643
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vprefix_206, Parameter vreport_199) {
exists(ArrayExpr target_0 |
	target_0.getArrayBase().(VariableAccess).getTarget()=vreport_199
	and target_0.getArrayOffset() instanceof PostfixIncrExpr
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vprefix_206)
}

predicate func_1(Variable vsize_207) {
exists(BinaryBitwiseOperation target_1 |
	target_1.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(Literal).getValue()="1"
	and target_1.getLeftOperand().(BinaryBitwiseOperation).getRightOperand() instanceof BitwiseAndExpr
	and target_1.getRightOperand().(Literal).getValue()="1"
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsize_207)
}

predicate func_2(Parameter vlength_200, Variable vddev_202, Variable vi_203, Variable vsize_207, ExprStmt target_12, RelationalOperation target_13, ExprStmt target_14, ExprStmt target_15, ExprStmt target_17) {
exists(IfStmt target_2 |
	target_2.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vi_203
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vsize_207
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlength_200
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_err")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_202
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Not enough data (need %d, have %d)\n"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vi_203
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddExpr).getRightOperand().(VariableAccess).getTarget()=vsize_207
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vlength_200
	and target_2.getLocation().isBefore(target_12.getLocation())
	and target_13.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_14.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_15.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_17.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

/*predicate func_3(Parameter vlength_200, Variable vddev_202, Variable vi_203, Variable vsize_207, ExprStmt target_14, ExprStmt target_15, ExprStmt target_17) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("dev_err")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vddev_202
	and target_3.getArgument(1).(StringLiteral).getValue()="Not enough data (need %d, have %d)\n"
	and target_3.getArgument(2).(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vi_203
	and target_3.getArgument(2).(AddExpr).getRightOperand().(VariableAccess).getTarget()=vsize_207
	and target_3.getArgument(3).(VariableAccess).getTarget()=vlength_200
	and target_14.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_15.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_3.getArgument(2).(AddExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_17.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

*/
predicate func_5(Variable vi_203, Variable vprefix_206, Parameter vreport_199, ArrayExpr target_5) {
	target_5.getArrayBase().(VariableAccess).getTarget()=vreport_199
	and target_5.getArrayOffset().(VariableAccess).getTarget()=vi_203
	and target_5.getParent().(AssignExpr).getRValue() = target_5
	and target_5.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vprefix_206
}

predicate func_6(Function func, SwitchCase target_6) {
	target_6.getExpr().(Literal).getValue()="3"
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vi_203, PostfixIncrExpr target_7) {
	target_7.getOperand().(VariableAccess).getTarget()=vi_203
}

predicate func_8(Variable vprefix_206, Variable vsize_207, BitwiseAndExpr target_8) {
	target_8.getLeftOperand().(VariableAccess).getTarget()=vprefix_206
	and target_8.getRightOperand().(Literal).getValue()="3"
	and target_8.getParent().(AssignExpr).getRValue() = target_8
	and target_8.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsize_207
}

predicate func_10(Variable vsize_207, VariableAccess target_19, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsize_207
	and target_10.getExpr().(AssignExpr).getRValue() instanceof Literal
	and target_10.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_19
}

predicate func_12(Variable vsize_207, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsize_207
	and target_12.getExpr().(AssignExpr).getRValue() instanceof BitwiseAndExpr
}

predicate func_13(Parameter vlength_200, Variable vi_203, RelationalOperation target_13) {
	 (target_13 instanceof GTExpr or target_13 instanceof LTExpr)
	and target_13.getLesserOperand().(VariableAccess).getTarget()=vi_203
	and target_13.getGreaterOperand().(VariableAccess).getTarget()=vlength_200
}

predicate func_14(Variable vddev_202, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("__dynamic_dev_dbg")
	and target_14.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_14.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vddev_202
	and target_14.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="======>>>>>>PARSE<<<<<<======\n"
}

predicate func_15(Variable vddev_202, ExprStmt target_15) {
	target_15.getExpr().(FunctionCall).getTarget().hasName("__dynamic_dev_dbg")
	and target_15.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_15.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vddev_202
	and target_15.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="::::: Saving Report: %d input #%d Max: 0x%X(%d) Min:0x%X(%d) of %d bits\n"
	and target_15.getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__u32[12]")
	and target_15.getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayOffset() instanceof Literal
	and target_15.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
	and target_15.getExpr().(FunctionCall).getArgument(5).(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__u32[12]")
	and target_15.getExpr().(FunctionCall).getArgument(5).(ArrayExpr).getArrayOffset().(Literal).getValue()="2"
	and target_15.getExpr().(FunctionCall).getArgument(6).(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__u32[12]")
	and target_15.getExpr().(FunctionCall).getArgument(6).(ArrayExpr).getArrayOffset().(Literal).getValue()="2"
	and target_15.getExpr().(FunctionCall).getArgument(7).(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__u32[12]")
	and target_15.getExpr().(FunctionCall).getArgument(7).(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_15.getExpr().(FunctionCall).getArgument(8).(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__u32[12]")
	and target_15.getExpr().(FunctionCall).getArgument(8).(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
	and target_15.getExpr().(FunctionCall).getArgument(9).(MulExpr).getLeftOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__u32[12]")
	and target_15.getExpr().(FunctionCall).getArgument(9).(MulExpr).getLeftOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="7"
	and target_15.getExpr().(FunctionCall).getArgument(9).(MulExpr).getRightOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("__u32[12]")
	and target_15.getExpr().(FunctionCall).getArgument(9).(MulExpr).getRightOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="9"
}

predicate func_17(Variable vi_203, Parameter vreport_199, ExprStmt target_17) {
	target_17.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("__u8")
	and target_17.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vreport_199
	and target_17.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_203
}

predicate func_19(Variable vsize_207, VariableAccess target_19) {
	target_19.getTarget()=vsize_207
}

from Function func, Parameter vlength_200, Variable vddev_202, Variable vi_203, Variable vprefix_206, Variable vsize_207, Parameter vreport_199, ArrayExpr target_5, SwitchCase target_6, PostfixIncrExpr target_7, BitwiseAndExpr target_8, ExprStmt target_10, ExprStmt target_12, RelationalOperation target_13, ExprStmt target_14, ExprStmt target_15, ExprStmt target_17, VariableAccess target_19
where
not func_0(vprefix_206, vreport_199)
and not func_1(vsize_207)
and not func_2(vlength_200, vddev_202, vi_203, vsize_207, target_12, target_13, target_14, target_15, target_17)
and func_5(vi_203, vprefix_206, vreport_199, target_5)
and func_6(func, target_6)
and func_7(vi_203, target_7)
and func_8(vprefix_206, vsize_207, target_8)
and func_10(vsize_207, target_19, target_10)
and func_12(vsize_207, target_12)
and func_13(vlength_200, vi_203, target_13)
and func_14(vddev_202, target_14)
and func_15(vddev_202, target_15)
and func_17(vi_203, vreport_199, target_17)
and func_19(vsize_207, target_19)
and vlength_200.getType().hasName("int")
and vddev_202.getType().hasName("device *")
and vi_203.getType().hasName("int")
and vprefix_206.getType().hasName("__u8")
and vsize_207.getType().hasName("__u8")
and vreport_199.getType().hasName("char *")
and vlength_200.getFunction() = func
and vddev_202.(LocalVariable).getFunction() = func
and vi_203.(LocalVariable).getFunction() = func
and vprefix_206.(LocalVariable).getFunction() = func
and vsize_207.(LocalVariable).getFunction() = func
and vreport_199.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
