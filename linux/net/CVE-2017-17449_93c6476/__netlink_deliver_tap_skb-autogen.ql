/**
 * @name linux-93c647643b48f0131f02e45da3bd367d80443291-__netlink_deliver_tap_skb
 * @id cpp/linux/93c647643b48f0131f02e45da3bd367d80443291/--netlink-deliver-tap-skb
 * @description linux-93c647643b48f0131f02e45da3bd367d80443291-net/netlink/af_netlink.c-__netlink_deliver_tap_skb CVE-2017-17449
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_253, Parameter vdev_250, ExprStmt target_2, ExprStmt target_3, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("net_eq")
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("dev_net")
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_250
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("sock_net")
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_253
		and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vsk_253, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="protocol"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__builtin_bswap16")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="sk_protocol"
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_253
}

predicate func_3(Parameter vdev_250, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("dev_hold")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_250
}

from Function func, Variable vsk_253, Parameter vdev_250, ExprStmt target_2, ExprStmt target_3
where
not func_0(vsk_253, vdev_250, target_2, target_3, func)
and func_2(vsk_253, target_2)
and func_3(vdev_250, target_3)
and vsk_253.getType().hasName("sock *")
and vdev_250.getType().hasName("net_device *")
and vsk_253.(LocalVariable).getFunction() = func
and vdev_250.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
