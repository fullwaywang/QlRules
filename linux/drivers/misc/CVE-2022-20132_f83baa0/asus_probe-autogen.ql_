/**
 * @name linux-f83baa0cb6cfc92ebaf7f9d3a99d7e34f2e77a8a-asus_probe
 * @id cpp/linux/f83baa0cb6cfc92ebaf7f9d3a99d7e34f2e77a8a/asus-probe
 * @description linux-f83baa0cb6cfc92ebaf7f9d3a99d7e34f2e77a8a-drivers/hid/hid-asus.c-asus_probe CVE-2022-20132
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vusb_hid_driver, Parameter vhdev_1004, BlockStmt target_4, FunctionCall target_0) {
	target_0.getTarget().hasName("hid_is_using_ll_driver")
	and not target_0.getTarget().hasName("hid_is_usb")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vhdev_1004
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vusb_hid_driver
	and target_0.getParent().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="quirks"
	and target_0.getParent().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("asus_drvdata *")
	and target_0.getParent().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="64"
	and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_1(Variable vusb_hid_driver, Parameter vhdev_1004, BlockStmt target_5, FunctionCall target_1) {
	target_1.getTarget().hasName("hid_is_using_ll_driver")
	and not target_1.getTarget().hasName("hid_is_usb")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vhdev_1004
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vusb_hid_driver
	and target_1.getParent().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="quirks"
	and target_1.getParent().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("asus_drvdata *")
	and target_1.getParent().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="1024"
	and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_2(Variable vusb_hid_driver, AddressOfExpr target_6, VariableAccess target_2) {
	target_2.getTarget()=vusb_hid_driver
	and target_2.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
	and target_2.getLocation().isBefore(target_6.getOperand().(VariableAccess).getLocation())
}

predicate func_3(Variable vusb_hid_driver, AddressOfExpr target_7, VariableAccess target_3) {
	target_3.getTarget()=vusb_hid_driver
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
	and target_7.getOperand().(VariableAccess).getLocation().isBefore(target_3.getLocation())
}

predicate func_4(Function func, BlockStmt target_4) {
	target_4.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="bInterfaceNumber"
	and target_4.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="desc"
	and target_4.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="altsetting"
	and target_4.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("usb_interface *")
	and target_4.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="2"
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="quirks"
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("asus_drvdata *")
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getValue()="4"
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("dmi_match")
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1).(StringLiteral).getValue()="T100HAN"
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="tp"
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getElse().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("dmi_match")
	and target_4.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getElse().(IfStmt).getCondition().(FunctionCall).getArgument(1).(StringLiteral).getValue()="T200TA"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vhdev_1004, BlockStmt target_5) {
	target_5.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="bInterfaceNumber"
	and target_5.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="desc"
	and target_5.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("usb_host_interface *")
	and target_5.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_5.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="quirks"
	and target_5.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdev_1004
	and target_5.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="64"
	and target_5.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="quirks"
	and target_5.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("asus_drvdata *")
	and target_5.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="4"
}

predicate func_6(Variable vusb_hid_driver, AddressOfExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget()=vusb_hid_driver
	and target_6.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
}

predicate func_7(Variable vusb_hid_driver, AddressOfExpr target_7) {
	target_7.getOperand().(VariableAccess).getTarget()=vusb_hid_driver
	and target_7.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
}

from Function func, Variable vusb_hid_driver, Parameter vhdev_1004, FunctionCall target_0, FunctionCall target_1, VariableAccess target_2, VariableAccess target_3, BlockStmt target_4, BlockStmt target_5, AddressOfExpr target_6, AddressOfExpr target_7
where
func_0(vusb_hid_driver, vhdev_1004, target_4, target_0)
and func_1(vusb_hid_driver, vhdev_1004, target_5, target_1)
and func_2(vusb_hid_driver, target_6, target_2)
and func_3(vusb_hid_driver, target_7, target_3)
and func_4(func, target_4)
and func_5(vhdev_1004, target_5)
and func_6(vusb_hid_driver, target_6)
and func_7(vusb_hid_driver, target_7)
and vusb_hid_driver.getType().hasName("hid_ll_driver")
and vhdev_1004.getType().hasName("hid_device *")
and not vusb_hid_driver.getParentScope+() = func
and vhdev_1004.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
