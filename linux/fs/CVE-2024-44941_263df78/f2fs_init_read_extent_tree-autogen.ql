/**
 * @name linux-263df78166d3a9609b97d28c34029bd01874cbb8-f2fs_init_read_extent_tree
 * @id cpp/linux/263df78166d3a9609b97d28c34029bd01874cbb8/f2fs-init-read-extent-tree
 * @description linux-263df78166d3a9609b97d28c34029bd01874cbb8-fs/f2fs/extent_cache.c-f2fs_init_read_extent_tree CVE-2024-44941
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vi_ext_391, ExprStmt target_18, IfStmt target_1) {
	exists(LogicalOrExpr obj_0 | obj_0=target_1.getCondition() |
		obj_0.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vi_ext_391
		and obj_0.getRightOperand() instanceof NotExpr
	)
	and target_1.getThen() instanceof GotoStmt
	and target_1.getLocation().isBefore(target_18.getLocation())
}

predicate func_2(Variable vei_394, AddressOfExpr target_20) {
exists(ValueFieldAccess target_2 |
	exists(VariableAccess obj_0 | obj_0=target_2.getQualifier() |
		obj_0.getTarget()=vei_394
		and obj_0.getLocation().isBefore(target_20.getOperand().(VariableAccess).getLocation())
	)
	and target_2.getTarget().getName()="len"
)
}

predicate func_3(Variable vsbi_389, AddressOfExpr target_21, ExprStmt target_22) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("f2fs_cp_error")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vsbi_389
	and target_3.getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_21.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_22.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_4(Variable vet_392, LogicalOrExpr target_23, ExprStmt target_24) {
exists(ExprStmt target_4 |
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="largest"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vet_392
			)
			and obj_1.getTarget().getName()="len"
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_3 | obj_3=target_4.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(0)=target_4
			and obj_4.getCondition()=target_23
		)
	)
	and target_24.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_5(Variable vet_392, LogicalOrExpr target_23, AddressOfExpr target_25) {
exists(ExprStmt target_5 |
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="largest_updated"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vet_392
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_5.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(1)=target_5
			and obj_3.getCondition()=target_23
		)
	)
	and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_25.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_6(IfStmt target_17, Function func) {
exists(ReturnStmt target_6 |
	func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getLocation().isBefore(target_17.getLocation())
)
}

predicate func_7(Variable vi_ext_391, BlockStmt target_26, PointerFieldAccess target_7) {
	exists(LogicalAndExpr obj_0 | obj_0=target_7.getParent() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vi_ext_391
		and obj_0.getParent().(IfStmt).getThen()=target_26
	)
	and target_7.getTarget().getName()="len"
	and target_7.getQualifier().(VariableAccess).getTarget()=vi_ext_391
}

predicate func_8(Variable vet_392, FunctionCall target_8) {
	exists(AddressOfExpr obj_0 | obj_0=target_8.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="node_cnt"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vet_392
		)
	)
	and target_8.getTarget().hasName("atomic_read")
	and target_8.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_9(Parameter vinode_387, NotExpr target_27, ExprStmt target_9) {
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		obj_0.getTarget().hasName("set_inode_flag")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_387
	)
	and target_9.getParent().(IfStmt).getCondition()=target_27
}

predicate func_10(Function func, ReturnStmt target_10) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(NotExpr target_28, Function func, GotoStmt target_11) {
	target_11.getName() ="out"
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_28
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vi_ext_391, BlockStmt target_26, LogicalAndExpr target_12) {
	exists(PointerFieldAccess obj_0 | obj_0=target_12.getRightOperand() |
		obj_0.getTarget().getName()="len"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vi_ext_391
	)
	and target_12.getLeftOperand().(VariableAccess).getTarget()=vi_ext_391
	and target_12.getParent().(IfStmt).getThen()=target_26
}

/*predicate func_13(Variable vi_ext_391, ExprStmt target_29, VariableAccess target_13) {
	target_13.getTarget()=vi_ext_391
	and target_29.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_13.getLocation())
}

*/
predicate func_14(Variable vi_ext_391, NotExpr target_14) {
	exists(PointerFieldAccess obj_0 | obj_0=target_14.getOperand() |
		obj_0.getTarget().getName()="len"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vi_ext_391
	)
	and exists(LogicalOrExpr obj_1 | obj_1=target_14.getParent() |
		obj_1.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vi_ext_391
		and obj_1.getParent().(IfStmt).getThen() instanceof GotoStmt
	)
}

predicate func_15(LogicalOrExpr target_23, Function func, GotoStmt target_15) {
	target_15.getName() ="out"
	and target_15.getParent().(IfStmt).getCondition()=target_23
	and target_15.getEnclosingFunction() = func
}

predicate func_16(FunctionCall target_8, Function func, GotoStmt target_16) {
	target_16.getName() ="unlock_out"
	and target_16.getParent().(IfStmt).getCondition()=target_8
	and target_16.getEnclosingFunction() = func
}

predicate func_17(Parameter vinode_387, Function func, IfStmt target_17) {
	exists(NotExpr obj_0 | obj_0=target_17.getCondition() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayBase() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().hasName("F2FS_I")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=vinode_387
				)
				and obj_2.getTarget().getName()="extent_tree"
			)
			and obj_1.getArrayOffset() instanceof EnumConstantAccess
		)
	)
	and target_17.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
}

predicate func_18(Variable vei_394, Variable vi_ext_391, ExprStmt target_18) {
	exists(FunctionCall obj_0 | obj_0=target_18.getExpr() |
		obj_0.getTarget().hasName("get_read_extent_info")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vei_394
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vi_ext_391
	)
}

predicate func_20(Variable vei_394, Variable vi_ext_391, AddressOfExpr target_20) {
	exists(FunctionCall obj_0 | obj_0=target_20.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("get_read_extent_info")
				and obj_2.getArgument(1).(VariableAccess).getTarget()=vi_ext_391
			)
		)
	)
	and target_20.getOperand().(VariableAccess).getTarget()=vei_394
}

predicate func_21(Variable vsbi_389, AddressOfExpr target_21) {
	exists(ArrayExpr obj_0 | obj_0=target_21.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArrayBase() |
			obj_1.getTarget().getName()="extent_tree"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vsbi_389
		)
	)
}

predicate func_22(Variable vei_394, Variable vsbi_389, Variable vet_392, ExprStmt target_22) {
	exists(AssignExpr obj_0 | obj_0=target_22.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(4) |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					exists(ValueFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="rb_root"
						and obj_4.getQualifier().(PointerFieldAccess).getTarget().getName()="root"
					)
					and obj_3.getTarget().getName()="rb_node"
				)
			)
			and obj_1.getTarget().hasName("__attach_extent_node")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vsbi_389
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vet_392
			and obj_1.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vei_394
			and obj_1.getArgument(3).(Literal).getValue()="0"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("extent_node *")
	)
}

predicate func_23(Variable vi_ext_391, LogicalOrExpr target_23) {
	target_23.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vi_ext_391
	and target_23.getRightOperand() instanceof NotExpr
}

predicate func_24(Variable vet_392, Parameter vinode_387, ExprStmt target_24) {
	exists(AssignExpr obj_0 | obj_0=target_24.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("__grab_extent_tree")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vinode_387
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vet_392
	)
}

predicate func_25(Variable vet_392, AddressOfExpr target_25) {
	exists(PointerFieldAccess obj_0 | obj_0=target_25.getOperand() |
		obj_0.getTarget().getName()="lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vet_392
	)
	and target_25.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_raw_write_lock")
}

predicate func_26(Variable vi_ext_391, BlockStmt target_26) {
	exists(ExprStmt obj_0 | obj_0=target_26.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("f2fs_wait_on_page_writeback")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("page *")
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_26.getStmt(1) |
		exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
			exists(PointerFieldAccess obj_4 | obj_4=obj_3.getLValue() |
				obj_4.getTarget().getName()="len"
				and obj_4.getQualifier().(VariableAccess).getTarget()=vi_ext_391
			)
			and obj_3.getRValue().(Literal).getValue()="0"
		)
	)
}

predicate func_27(Function func, NotExpr target_27) {
	target_27.getOperand() instanceof ArrayExpr
	and target_27.getEnclosingFunction() = func
}

predicate func_28(Parameter vinode_387, NotExpr target_28) {
	exists(FunctionCall obj_0 | obj_0=target_28.getOperand() |
		obj_0.getTarget().hasName("__may_extent_tree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_387
	)
}

predicate func_29(Variable vi_ext_391, ExprStmt target_29) {
	exists(AssignExpr obj_0 | obj_0=target_29.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="len"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vi_ext_391
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
}

from Function func, Variable vei_394, Variable vsbi_389, Variable vi_ext_391, Variable vet_392, Parameter vinode_387, IfStmt target_1, PointerFieldAccess target_7, FunctionCall target_8, ExprStmt target_9, ReturnStmt target_10, GotoStmt target_11, LogicalAndExpr target_12, NotExpr target_14, GotoStmt target_15, GotoStmt target_16, IfStmt target_17, ExprStmt target_18, AddressOfExpr target_20, AddressOfExpr target_21, ExprStmt target_22, LogicalOrExpr target_23, ExprStmt target_24, AddressOfExpr target_25, BlockStmt target_26, NotExpr target_27, NotExpr target_28, ExprStmt target_29
where
func_1(vi_ext_391, target_18, target_1)
and not func_2(vei_394, target_20)
and not func_3(vsbi_389, target_21, target_22)
and not func_4(vet_392, target_23, target_24)
and not func_5(vet_392, target_23, target_25)
and not func_6(target_17, func)
and func_7(vi_ext_391, target_26, target_7)
and func_8(vet_392, target_8)
and func_9(vinode_387, target_27, target_9)
and func_10(func, target_10)
and func_11(target_28, func, target_11)
and func_12(vi_ext_391, target_26, target_12)
and func_14(vi_ext_391, target_14)
and func_15(target_23, func, target_15)
and func_16(target_8, func, target_16)
and func_17(vinode_387, func, target_17)
and func_18(vei_394, vi_ext_391, target_18)
and func_20(vei_394, vi_ext_391, target_20)
and func_21(vsbi_389, target_21)
and func_22(vei_394, vsbi_389, vet_392, target_22)
and func_23(vi_ext_391, target_23)
and func_24(vet_392, vinode_387, target_24)
and func_25(vet_392, target_25)
and func_26(vi_ext_391, target_26)
and func_27(func, target_27)
and func_28(vinode_387, target_28)
and func_29(vi_ext_391, target_29)
and vei_394.getType().hasName("extent_info")
and vsbi_389.getType().hasName("f2fs_sb_info *")
and vi_ext_391.getType().hasName("f2fs_extent *")
and vet_392.getType().hasName("extent_tree *")
and vinode_387.getType().hasName("inode *")
and vei_394.(LocalVariable).getFunction() = func
and vsbi_389.(LocalVariable).getFunction() = func
and vi_ext_391.(LocalVariable).getFunction() = func
and vet_392.(LocalVariable).getFunction() = func
and vinode_387.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
