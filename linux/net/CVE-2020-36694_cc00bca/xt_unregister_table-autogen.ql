/**
 * @name linux-cc00bcaa589914096edef7fb87ca5cee4a166b5c-xt_unregister_table
 * @id cpp/linux/cc00bcaa589914096edef7fb87ca5cee4a166b5c/xt-unregister-table
 * @description linux-cc00bcaa589914096edef7fb87ca5cee4a166b5c-net/netfilter/x_tables.c-xt_unregister_table CVE-2020-36694
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtable_1468, AddressOfExpr target_4, ExprStmt target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("xt_table_get_private_protected")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vtable_1468
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("xt_table_info *")
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(ExprStmt target_6, Function func) {
exists(DoStmt target_1 |
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_6.getLocation()))
}

predicate func_2(Parameter vtable_1468, VariableAccess target_2) {
	target_2.getTarget()=vtable_1468
}

predicate func_3(Parameter vtable_1468, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="private"
	and target_3.getQualifier().(VariableAccess).getTarget()=vtable_1468
}

predicate func_4(Parameter vtable_1468, AddressOfExpr target_4) {
	target_4.getOperand().(ValueFieldAccess).getTarget().getName()="mutex"
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("xt_af *")
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="af"
	and target_4.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtable_1468
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_5(Parameter vtable_1468, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("xt_table_info *")
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="private"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtable_1468
}

predicate func_6(Parameter vtable_1468, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("list_del")
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtable_1468
}

from Function func, Parameter vtable_1468, VariableAccess target_2, PointerFieldAccess target_3, AddressOfExpr target_4, ExprStmt target_5, ExprStmt target_6
where
not func_0(vtable_1468, target_4, target_5)
and not func_1(target_6, func)
and func_2(vtable_1468, target_2)
and func_3(vtable_1468, target_3)
and func_4(vtable_1468, target_4)
and func_5(vtable_1468, target_5)
and func_6(vtable_1468, target_6)
and vtable_1468.getType().hasName("xt_table *")
and vtable_1468.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
