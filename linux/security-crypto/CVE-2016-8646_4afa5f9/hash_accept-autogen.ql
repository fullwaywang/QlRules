/**
 * @name linux-4afa5f9617927453ac04b24b584f6c718dfb4f45-hash_accept
 * @id cpp/linux/4afa5f9617927453ac04b24b584f6c718dfb4f45/hash-accept
 * @description linux-4afa5f9617927453ac04b24b584f6c718dfb4f45-crypto/algif_hash.c-hash_accept CVE-2016-8646
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vctx2_183, Literal target_0) {
		target_0.getValue()="1"
		and not target_0.getValue()="0"
		and target_0.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="more"
		and target_0.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx2_183
}

predicate func_1(Variable vsk_176, FunctionCall target_12) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("lock_sock")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vsk_176
		and target_12.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vctx_178, AddressOfExpr target_13, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="more"
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_178
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_4(Variable vctx_178, AddressOfExpr target_13) {
	exists(PointerFieldAccess target_4 |
		target_4.getTarget().getName()="more"
		and target_4.getQualifier().(VariableAccess).getTarget()=vctx_178
		and target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(VariableAccess).getLocation()))
}

*/
predicate func_5(Variable verr_184, IfStmt target_15, Function func) {
	exists(ExprStmt target_5 |
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_184
		and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getType().hasName("bool")
		and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen() instanceof FunctionCall
		and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
		and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_15.getCondition().(VariableAccess).getLocation()))
}

/*predicate func_6(Variable verr_184) {
	exists(ConditionalExpr target_6 |
		target_6.getCondition().(VariableAccess).getType().hasName("bool")
		and target_6.getThen() instanceof FunctionCall
		and target_6.getElse().(Literal).getValue()="0"
		and target_6.getParent().(AssignExpr).getRValue() = target_6
		and target_6.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_184)
}

*/
predicate func_7(Variable vsk_176, Function func) {
	exists(ExprStmt target_7 |
		target_7.getExpr().(FunctionCall).getTarget().hasName("release_sock")
		and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_176
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_7)
}

predicate func_8(Variable vctx2_183, ExprStmt target_16, AddressOfExpr target_17) {
	exists(AssignExpr target_8 |
		target_8.getLValue().(PointerFieldAccess).getTarget().getName()="more"
		and target_8.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx2_183
		and target_8.getRValue().(VariableAccess).getType().hasName("bool")
		and target_16.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_8.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_8.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_17.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_9(Variable verr_184, ReturnStmt target_18, Function func) {
	exists(IfStmt target_9 |
		target_9.getCondition().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
		and target_9.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_184
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
		and target_18.getExpr().(VariableAccess).getLocation().isBefore(target_9.getThen().(ReturnStmt).getExpr().(VariableAccess).getLocation()))
}

predicate func_10(Variable vctx2_183, PointerFieldAccess target_10) {
		target_10.getTarget().getName()="more"
		and target_10.getQualifier().(VariableAccess).getTarget()=vctx2_183
		and target_10.getParent().(AssignExpr).getLValue() = target_10
		and target_10.getParent().(AssignExpr).getRValue() instanceof Literal
}

predicate func_11(Variable vreq_179, Variable vstate_180, Variable verr_184, FunctionCall target_11) {
		target_11.getTarget().hasName("crypto_ahash_export")
		and target_11.getArgument(0).(VariableAccess).getTarget()=vreq_179
		and target_11.getArgument(1).(VariableAccess).getTarget()=vstate_180
		and target_11.getParent().(AssignExpr).getRValue() = target_11
		and target_11.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_184
}

predicate func_12(Variable vsk_176, FunctionCall target_12) {
		target_12.getTarget().hasName("alg_sk")
		and target_12.getArgument(0).(VariableAccess).getTarget()=vsk_176
}

predicate func_13(Variable vctx_178, AddressOfExpr target_13) {
		target_13.getOperand().(PointerFieldAccess).getTarget().getName()="req"
		and target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_178
}

predicate func_15(Variable verr_184, Function func, IfStmt target_15) {
		target_15.getCondition().(VariableAccess).getTarget()=verr_184
		and target_15.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_184
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_16(Variable vctx2_183, ExprStmt target_16) {
		target_16.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vctx2_183
		and target_16.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="private"
		and target_16.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("alg_sock *")
}

predicate func_17(Variable vctx2_183, AddressOfExpr target_17) {
		target_17.getOperand().(PointerFieldAccess).getTarget().getName()="req"
		and target_17.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx2_183
}

predicate func_18(Variable verr_184, VariableAccess target_19, ReturnStmt target_18) {
		target_18.getExpr().(VariableAccess).getTarget()=verr_184
		and target_18.getParent().(IfStmt).getCondition()=target_19
}

predicate func_19(Variable verr_184, ReturnStmt target_18, VariableAccess target_19) {
		target_19.getTarget()=verr_184
		and target_19.getParent().(IfStmt).getThen()=target_18
}

from Function func, Variable vsk_176, Variable vctx_178, Variable vreq_179, Variable vstate_180, Variable vctx2_183, Variable verr_184, Literal target_0, PointerFieldAccess target_10, FunctionCall target_11, FunctionCall target_12, AddressOfExpr target_13, IfStmt target_15, ExprStmt target_16, AddressOfExpr target_17, ReturnStmt target_18, VariableAccess target_19
where
func_0(vctx2_183, target_0)
and not func_1(vsk_176, target_12)
and not func_2(vctx_178, target_13, func)
and not func_5(verr_184, target_15, func)
and not func_7(vsk_176, func)
and not func_8(vctx2_183, target_16, target_17)
and not func_9(verr_184, target_18, func)
and func_10(vctx2_183, target_10)
and func_11(vreq_179, vstate_180, verr_184, target_11)
and func_12(vsk_176, target_12)
and func_13(vctx_178, target_13)
and func_15(verr_184, func, target_15)
and func_16(vctx2_183, target_16)
and func_17(vctx2_183, target_17)
and func_18(verr_184, target_19, target_18)
and func_19(verr_184, target_18, target_19)
and vsk_176.getType().hasName("sock *")
and vctx_178.getType().hasName("hash_ctx *")
and vreq_179.getType().hasName("ahash_request *")
and vstate_180.getType().hasName("char[]")
and vctx2_183.getType().hasName("hash_ctx *")
and verr_184.getType().hasName("int")
and vsk_176.(LocalVariable).getFunction() = func
and vctx_178.(LocalVariable).getFunction() = func
and vreq_179.(LocalVariable).getFunction() = func
and vstate_180.(LocalVariable).getFunction() = func
and vctx2_183.(LocalVariable).getFunction() = func
and verr_184.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
