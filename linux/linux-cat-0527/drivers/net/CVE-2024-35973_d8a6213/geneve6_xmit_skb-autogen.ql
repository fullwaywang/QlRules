/**
 * @name linux-d8a6213d70accb403b82924a1c229e733433a5ef-geneve6_xmit_skb
 * @id cpp/linux/d8a6213d70accb403b82924a1c229e733433a5ef/geneve6-xmit-skb
 * @description linux-d8a6213d70accb403b82924a1c229e733433a5ef-drivers/net/geneve.c-geneve6_xmit_skb CVE-2024-35973
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_918, ReturnStmt target_1, FunctionCall target_0) {
	target_0.getTarget().hasName("pskb_inet_may_pull")
	and not target_0.getTarget().hasName("skb_vlan_inet_prepare")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vskb_918
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_1
}

predicate func_1(NotExpr target_2, Function func, ReturnStmt target_1) {
	target_1.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, NotExpr target_2) {
	target_2.getOperand() instanceof FunctionCall
	and target_2.getEnclosingFunction() = func
}

from Function func, Parameter vskb_918, FunctionCall target_0, ReturnStmt target_1, NotExpr target_2
where
func_0(vskb_918, target_1, target_0)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and vskb_918.getType().hasName("sk_buff *")
and vskb_918.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
