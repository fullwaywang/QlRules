/**
 * @name linux-ffcfb8db540ff879c2a85bf7e404954281443414-handle_ip_over_ddp
 * @id cpp/linux/ffcfb8db540ff879c2a85bf7e404954281443414/handle-ip-over-ddp
 * @description linux-ffcfb8db540ff879c2a85bf7e404954281443414-net/appletalk/ddp.c-handle_ip_over_ddp CVE-2009-2903
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="0"
		and not target_0.getValue()="1"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vskb_1267, ExprStmt target_4) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("kfree_skb")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vskb_1267
		and target_4.getExpr().(AssignAddExpr).getRValue().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vskb_1267, FunctionCall target_2) {
		target_2.getTarget().hasName("netif_rx")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vskb_1267
}

predicate func_3(Function func, UnaryMinusExpr target_3) {
		target_3.getValue()="-19"
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vskb_1267, ExprStmt target_4) {
		target_4.getExpr().(AssignAddExpr).getLValue().(PointerFieldAccess).getTarget().getName()="rx_bytes"
		and target_4.getExpr().(AssignAddExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device_stats *")
		and target_4.getExpr().(AssignAddExpr).getRValue().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="len"
		and target_4.getExpr().(AssignAddExpr).getRValue().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1267
		and target_4.getExpr().(AssignAddExpr).getRValue().(AddExpr).getAnOperand().(Literal).getValue()="13"
}

from Function func, Parameter vskb_1267, Literal target_0, FunctionCall target_2, UnaryMinusExpr target_3, ExprStmt target_4
where
func_0(func, target_0)
and not func_1(vskb_1267, target_4)
and func_2(vskb_1267, target_2)
and func_3(func, target_3)
and func_4(vskb_1267, target_4)
and vskb_1267.getType().hasName("sk_buff *")
and vskb_1267.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
