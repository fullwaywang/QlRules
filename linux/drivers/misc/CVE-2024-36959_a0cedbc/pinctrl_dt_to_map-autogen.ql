/**
 * @name linux-a0cedbcc8852d6c77b00634b81e41f17f29d9404-pinctrl_dt_to_map
 * @id cpp/linux/a0cedbcc8852d6c77b00634b81e41f17f29d9404/pinctrl-dt-to-map
 * @description linux-a0cedbcc8852d6c77b00634b81e41f17f29d9404-drivers/pinctrl/devicetree.c-pinctrl_dt_to_map CVE-2024-36959
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_199) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getTarget()=vret_199
	and target_0.getRValue() instanceof UnaryMinusExpr)
}

predicate func_1(NotExpr target_9, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="err"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vret_199, EqualityOperation target_10) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_199
	and target_2.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10)
}

predicate func_3(EqualityOperation target_10, Function func) {
exists(GotoStmt target_3 |
	target_3.getName() ="err"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Function func, UnaryMinusExpr target_4) {
	target_4.getValue()="-12"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, UnaryMinusExpr target_5) {
	target_5.getValue()="-19"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(NotExpr target_9, Function func, ReturnStmt target_6) {
	target_6.getExpr() instanceof UnaryMinusExpr
	and target_6.getParent().(IfStmt).getCondition()=target_9
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vnp_198, FunctionCall target_7) {
	target_7.getTarget().hasName("of_node_put")
	and target_7.getArgument(0).(VariableAccess).getTarget()=vnp_198
}

predicate func_8(EqualityOperation target_10, Function func, ReturnStmt target_8) {
	target_8.getExpr() instanceof UnaryMinusExpr
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Function func, NotExpr target_9) {
	target_9.getOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, EqualityOperation target_10) {
	target_10.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getRightOperand().(Literal).getValue()="0"
	and target_10.getEnclosingFunction() = func
}

from Function func, Variable vnp_198, Variable vret_199, UnaryMinusExpr target_4, UnaryMinusExpr target_5, ReturnStmt target_6, FunctionCall target_7, ReturnStmt target_8, NotExpr target_9, EqualityOperation target_10
where
not func_0(vret_199)
and not func_1(target_9, func)
and not func_2(vret_199, target_10)
and not func_3(target_10, func)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(target_9, func, target_6)
and func_7(vnp_198, target_7)
and func_8(target_10, func, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and vnp_198.getType().hasName("device_node *")
and vret_199.getType().hasName("int")
and vnp_198.(LocalVariable).getFunction() = func
and vret_199.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
