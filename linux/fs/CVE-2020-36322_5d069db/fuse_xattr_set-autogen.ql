/**
 * @name linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fuse_xattr_set
 * @id cpp/linux/5d069dbe8aaf2a197142558b6fb2978189ba3454/fuse-xattr-set
 * @description linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fs/fuse/xattr.c-fuse_xattr_set CVE-2020-36322
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_185, IfStmt target_1, FunctionCall target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("fuse_is_bad")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_185
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vinode_185, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const void *")
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("fuse_removexattr")
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_185
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
}

predicate func_2(Parameter vinode_185, FunctionCall target_2) {
	target_2.getTarget().hasName("fuse_removexattr")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vinode_185
	and target_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
}

from Function func, Parameter vinode_185, IfStmt target_1, FunctionCall target_2
where
not func_0(vinode_185, target_1, target_2, func)
and func_1(vinode_185, target_1)
and func_2(vinode_185, target_2)
and vinode_185.getType().hasName("inode *")
and vinode_185.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
