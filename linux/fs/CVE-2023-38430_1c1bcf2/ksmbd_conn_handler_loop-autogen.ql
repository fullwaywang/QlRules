/**
 * @name linux-1c1bcf2d3ea061613119b534f57507c377df20f9-ksmbd_conn_handler_loop
 * @id cpp/linux/1c1bcf2d3ea061613119b534f57507c377df20f9/ksmbd-conn-handler-loop
 * @description linux-1c1bcf2d3ea061613119b534f57507c377df20f9-fs/smb/server/connection.c-ksmbd_conn_handler_loop CVE-2023-38430
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vconn_310, ExprStmt target_1, IfStmt target_0) {
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ksmbd_smb_request")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vconn_310
	and target_0.getLocation().isBefore(target_1.getLocation())
}

predicate func_1(Variable vconn_310, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="read"
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ksmbd_transport *")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ksmbd_transport *")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="request_buf"
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_310
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(PointerArithmeticOperation).getRightOperand().(Literal).getValue()="4"
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(3).(Literal).getValue()="2"
}

from Function func, Variable vconn_310, IfStmt target_0, ExprStmt target_1
where
func_0(vconn_310, target_1, target_0)
and func_1(vconn_310, target_1)
and vconn_310.getType().hasName("ksmbd_conn *")
and vconn_310.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
