/**
 * @name chromium-aa06c8661961d40785c11a436cfdb35e2270dff0-blink____ShouldBlockSerialServiceCall
 * @id cpp/chromium/aa06c8661961d40785c11a436cfdb35e2270dff0/blinkshouldblockserialservicecall
 * @description chromium-aa06c8661961d40785c11a436cfdb35e2270dff0-third_party/blink/renderer/modules/serial/serial.cc-blink____ShouldBlockSerialServiceCall CVE-2023-2462
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vexception_state_51, NotExpr target_6, ExprStmt target_3) {
exists(IfStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_1.getCondition()=target_6
		)
	)
	and target_0.getCondition().(VariableAccess).getTarget()=vexception_state_51
	and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_0.getCondition().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vexception_state_51, FunctionCall target_7, ExprStmt target_3, ExprStmt target_4) {
exists(IfStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(0)=target_1
			and obj_1.getCondition()=target_7
		)
	)
	and target_1.getCondition().(VariableAccess).getTarget()=vexception_state_51
	and target_1.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_3.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getCondition().(VariableAccess).getLocation())
	and target_1.getCondition().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Parameter vexception_state_51, NotExpr target_8, ExprStmt target_4, ExprStmt target_5) {
exists(IfStmt target_2 |
	exists(BlockStmt obj_0 | obj_0=target_2.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(0)=target_2
			and obj_1.getCondition()=target_8
		)
	)
	and target_2.getCondition().(VariableAccess).getTarget()=vexception_state_51
	and target_2.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_4.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getCondition().(VariableAccess).getLocation())
	and target_2.getCondition().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_3(Parameter vexception_state_51, Variable vkContextGone, NotExpr target_6, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("ThrowDOMException")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_51
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vkContextGone
	)
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_4(Parameter vexception_state_51, FunctionCall target_7, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		obj_0.getTarget().hasName("ThrowSecurityError")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_51
		and obj_0.getArgument(0).(StringLiteral).getValue()="Access to the Web Serial API is denied from contexts where the top-level document has an opaque origin."
	)
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_5(Parameter vexception_state_51, Variable vkFeaturePolicyBlocked, NotExpr target_8, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("ThrowSecurityError")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_51
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vkFeaturePolicyBlocked
	)
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
}

predicate func_6(Function func, NotExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget().getType().hasName("ExecutionContext *")
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, FunctionCall target_7) {
	target_7.getTarget().hasName("IsOpaque")
	and target_7.getQualifier().(VariableAccess).getTarget().getType().hasName("const SecurityOrigin *")
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, NotExpr target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getOperand() |
		obj_0.getTarget().hasName("IsFeatureEnabled")
		and obj_0.getQualifier().(VariableAccess).getTarget().getType().hasName("ExecutionContext *")
	)
	and target_8.getEnclosingFunction() = func
}

from Function func, Parameter vexception_state_51, Variable vkContextGone, Variable vkFeaturePolicyBlocked, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5, NotExpr target_6, FunctionCall target_7, NotExpr target_8
where
not func_0(vexception_state_51, target_6, target_3)
and not func_1(vexception_state_51, target_7, target_3, target_4)
and not func_2(vexception_state_51, target_8, target_4, target_5)
and func_3(vexception_state_51, vkContextGone, target_6, target_3)
and func_4(vexception_state_51, target_7, target_4)
and func_5(vexception_state_51, vkFeaturePolicyBlocked, target_8, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
and func_8(func, target_8)
and vexception_state_51.getType().hasName("ExceptionState &")
and vkContextGone.getType() instanceof ArrayType
and vkFeaturePolicyBlocked.getType() instanceof ArrayType
and vexception_state_51.getFunction() = func
and not vkContextGone.getParentScope+() = func
and not vkFeaturePolicyBlocked.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
