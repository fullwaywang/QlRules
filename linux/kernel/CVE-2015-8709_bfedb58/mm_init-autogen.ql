/**
 * @name linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-mm_init
 * @id cpp/linux/bfedb589252c01fa505ac9f6f2a3d5d68d707ef4/mm-init
 * @description linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-kernel/fork.c-mm_init CVE-2015-8709
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmm_748, FunctionCall target_1, ReturnStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_748
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_user_ns")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("user_namespace *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vmm_748, FunctionCall target_1) {
	target_1.getTarget().hasName("init_new_context")
	and target_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
	and target_1.getArgument(1).(VariableAccess).getTarget()=vmm_748
}

predicate func_2(Parameter vmm_748, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=vmm_748
}

from Function func, Parameter vmm_748, FunctionCall target_1, ReturnStmt target_2
where
not func_0(vmm_748, target_1, target_2, func)
and func_1(vmm_748, target_1)
and func_2(vmm_748, target_2)
and vmm_748.getType().hasName("mm_struct *")
and vmm_748.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
