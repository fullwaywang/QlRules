/**
 * @name linux-a2ec905d1e160a33b2e210e45ad30445ef26ce0e-store_pending_adv_report
 * @id cpp/linux/a2ec905d1e160a33b2e210e45ad30445ef26ce0e/store-pending-adv-report
 * @description linux-a2ec905d1e160a33b2e210e45ad30445ef26ce0e-net/bluetooth/hci_event.c-store_pending_adv_report CVE-2020-24490
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vlen_1337, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vlen_1337
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="31"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("bacpy")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="last_adv_addr"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("discovery_state *")
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("bdaddr_t *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vlen_1337, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="last_adv_data"
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("discovery_state *")
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u8 *")
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vlen_1337
}

from Function func, Parameter vlen_1337, ExprStmt target_1, ExprStmt target_2
where
not func_0(vlen_1337, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vlen_1337, target_2)
and vlen_1337.getType().hasName("u8")
and vlen_1337.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
