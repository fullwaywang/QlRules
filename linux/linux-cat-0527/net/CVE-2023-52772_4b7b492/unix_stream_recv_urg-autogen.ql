/**
 * @name linux-4b7b492615cf3017190f55444f7016812b66611d-unix_stream_recv_urg
 * @id cpp/linux/4b7b492615cf3017190f55444f7016812b66611d/unix-stream-recv-urg
 * @description linux-4b7b492615cf3017190f55444f7016812b66611d-net/unix/af_unix.c-unix_stream_recv_urg CVE-2023-52772
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable voob_skb_2569, FunctionCall target_0) {
	target_0.getTarget().hasName("kfree_skb")
	and not target_0.getTarget().hasName("consume_skb")
	and target_0.getArgument(0).(VariableAccess).getTarget()=voob_skb_2569
}

predicate func_1(Variable voob_skb_2569, NotExpr target_3, ExprStmt target_4, ExprStmt target_5) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("skb_get")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=voob_skb_2569
	and target_1.getParent().(IfStmt).getCondition()=target_3
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable voob_skb_2569, NotExpr target_6, ExprStmt target_2) {
	target_2.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getTarget().getName()="consumed"
	and target_2.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cb"
	and target_2.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=voob_skb_2569
	and target_2.getExpr().(AssignAddExpr).getRValue().(Literal).getValue()="1"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
}

predicate func_3(DoStmt target_7, Function func, NotExpr target_3) {
	target_3.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_3.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("unix_stream_read_state *")
	and target_3.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
	and target_3.getParent().(IfStmt).getThen()=target_7
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable voob_skb_2569, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=voob_skb_2569
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="oob_skb"
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("unix_sock *")
}

predicate func_5(Variable voob_skb_2569, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="recv_actor"
	and target_5.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("unix_stream_read_state *")
	and target_5.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=voob_skb_2569
	and target_5.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(Literal).getValue()="0"
	and target_5.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unix_stream_read_state *")
}

predicate func_6(BlockStmt target_8, Function func, NotExpr target_6) {
	target_6.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_6.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("unix_stream_read_state *")
	and target_6.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
	and target_6.getParent().(IfStmt).getThen()=target_8
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, DoStmt target_7) {
	target_7.getCondition().(Literal).getValue()="0"
	and target_7.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_7.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_7.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_7.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, BlockStmt target_8) {
	target_8.getStmt(0) instanceof ExprStmt
	and target_8.getStmt(1).(ExprStmt).getExpr() instanceof FunctionCall
	and target_8.getEnclosingFunction() = func
}

from Function func, Variable voob_skb_2569, FunctionCall target_0, ExprStmt target_2, NotExpr target_3, ExprStmt target_4, ExprStmt target_5, NotExpr target_6, DoStmt target_7, BlockStmt target_8
where
func_0(voob_skb_2569, target_0)
and not func_1(voob_skb_2569, target_3, target_4, target_5)
and func_2(voob_skb_2569, target_6, target_2)
and func_3(target_7, func, target_3)
and func_4(voob_skb_2569, target_4)
and func_5(voob_skb_2569, target_5)
and func_6(target_8, func, target_6)
and func_7(func, target_7)
and func_8(func, target_8)
and voob_skb_2569.getType().hasName("sk_buff *")
and voob_skb_2569.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
