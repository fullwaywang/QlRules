/**
 * @name curl-7815647d6582c0a4900be2e1de-imap_perform
 * @id cpp/curl/7815647d6582c0a4900be2e1de/imap-perform
 * @description curl-7815647d6582c0a4900be2e1de-lib/imap.c-imap_perform CVE-2023-28322
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdata_1556, ValueFieldAccess target_3) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="state"
		and target_0.getQualifier().(VariableAccess).getTarget()=vdata_1556
		and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdata_1556, VariableAccess target_1) {
		target_1.getTarget()=vdata_1556
}

predicate func_2(Parameter vdata_1556, ValueFieldAccess target_3, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="set"
		and target_2.getQualifier().(VariableAccess).getTarget()=vdata_1556
		and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(VariableAccess).getLocation())
}

predicate func_3(Parameter vdata_1556, ValueFieldAccess target_3) {
		target_3.getTarget().getName()="no_body"
		and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="req"
		and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_1556
}

from Function func, Parameter vdata_1556, VariableAccess target_1, PointerFieldAccess target_2, ValueFieldAccess target_3
where
not func_0(vdata_1556, target_3)
and func_1(vdata_1556, target_1)
and func_2(vdata_1556, target_3, target_2)
and func_3(vdata_1556, target_3)
and vdata_1556.getType().hasName("Curl_easy *")
and vdata_1556.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
