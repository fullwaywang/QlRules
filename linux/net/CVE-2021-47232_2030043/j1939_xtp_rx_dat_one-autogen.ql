/**
 * @name linux-2030043e616cab40f510299f09b636285e0a3678-j1939_xtp_rx_dat_one
 * @id cpp/linux/2030043e616cab40f510299f09b636285e0a3678/j1939-xtp-rx-dat-one
 * @description linux-2030043e616cab40f510299f09b636285e0a3678-net/can/j1939/transport.c-j1939_xtp_rx_dat_one CVE-2021-47232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vse_skb_1747, Variable vpacket_1755, Parameter vsession_1742, FunctionCall target_0) {
	target_0.getTarget().hasName("j1939_session_skb_find_by_offset")
	and not target_0.getTarget().hasName("j1939_session_skb_get_by_offset")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsession_1742
	and target_0.getArgument(1).(MulExpr).getLeftOperand().(VariableAccess).getTarget()=vpacket_1755
	and target_0.getArgument(1).(MulExpr).getRightOperand().(Literal).getValue()="7"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vse_skb_1747
}

predicate func_1(Function func) {
exists(Initializer target_1 |
	target_1.getExpr().(Literal).getValue()="0"
	and target_1.getExpr().getEnclosingFunction() = func)
}

predicate func_2(Variable vse_skb_1747, ExprStmt target_4, ExprStmt target_5, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("consume_skb")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vse_skb_1747
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_4.getLocation())
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vse_skb_1747, ExprStmt target_6, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vse_skb_1747
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_6.getLocation()))
}

predicate func_4(Parameter vsession_1742, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("j1939_session_put")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsession_1742
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vse_skb_1747, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u8 *")
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="data"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vse_skb_1747
}

predicate func_6(Parameter vsession_1742, Function func, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("j1939_session_timers_cancel")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsession_1742
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

from Function func, Variable vse_skb_1747, Variable vpacket_1755, Parameter vsession_1742, FunctionCall target_0, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6
where
func_0(vse_skb_1747, vpacket_1755, vsession_1742, target_0)
and not func_1(func)
and not func_2(vse_skb_1747, target_4, target_5, func)
and not func_3(vse_skb_1747, target_6, func)
and func_4(vsession_1742, func, target_4)
and func_5(vse_skb_1747, target_5)
and func_6(vsession_1742, func, target_6)
and vse_skb_1747.getType().hasName("sk_buff *")
and vpacket_1755.getType().hasName("int")
and vsession_1742.getType().hasName("j1939_session *")
and vse_skb_1747.(LocalVariable).getFunction() = func
and vpacket_1755.(LocalVariable).getFunction() = func
and vsession_1742.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
