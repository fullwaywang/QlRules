/**
 * @name linux-548acf19234dbda5a52d5a8e7e205af46e9da840-fixup_exception
 * @id cpp/linux/548acf19234dbda5a52d5a8e7e205af46e9da840/fixup-exception
 * @description linux-548acf19234dbda5a52d5a8e7e205af46e9da840-arch/x86/mm/extable.c-fixup_exception CVE-2016-9644
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfixup_19, Parameter vregs_17, VariableAccess target_0) {
	target_0.getTarget()=vfixup_19
	and target_0.getParent().(AssignExpr).getLValue() = target_0
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("search_exception_tables")
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ip"
	and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregs_17
}

predicate func_1(Variable vfixup_19, BlockStmt target_17, VariableAccess target_1) {
	target_1.getTarget()=vfixup_19
	and target_1.getParent().(IfStmt).getThen()=target_17
}

predicate func_2(Variable vfixup_19, VariableAccess target_2) {
	target_2.getTarget()=vfixup_19
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Variable vfixup_19, VariableAccess target_3) {
	target_3.getTarget()=vfixup_19
}

predicate func_5(BlockStmt target_17, Function func) {
exists(NotExpr target_5 |
	target_5.getOperand().(VariableAccess).getType().hasName("const exception_table_entry *")
	and target_5.getParent().(IfStmt).getThen()=target_17
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Function func) {
exists(AssignExpr target_6 |
	target_6.getLValue().(VariableAccess).getType().hasName("ex_handler_t")
	and target_6.getRValue().(FunctionCall).getTarget().hasName("ex_fixup_handler")
	and target_6.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("const exception_table_entry *")
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Parameter vregs_17) {
exists(VariableCall target_7 |
	target_7.getExpr().(VariableAccess).getType().hasName("ex_handler_t")
	and target_7.getArgument(0).(VariableAccess).getType().hasName("const exception_table_entry *")
	and target_7.getArgument(1).(VariableAccess).getTarget()=vregs_17
	and target_7.getArgument(2).(VariableAccess).getType().hasName("int"))
}

predicate func_8(Function func, ReturnStmt target_8) {
	target_8.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Parameter vregs_17, VariableAccess target_9) {
	target_9.getTarget()=vregs_17
}

predicate func_11(Variable vnew_ip_20, Variable vfixup_19, AssignExpr target_11) {
	target_11.getLValue().(VariableAccess).getTarget()=vnew_ip_20
	and target_11.getRValue().(FunctionCall).getTarget().hasName("ex_fixup_addr")
	and target_11.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfixup_19
}

predicate func_12(Variable vnew_ip_20, Variable vfixup_19, VariableAccess target_1, IfStmt target_12) {
	target_12.getCondition().(RelationalOperation).getGreaterOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="fixup"
	and target_12.getCondition().(RelationalOperation).getGreaterOperand().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfixup_19
	and target_12.getCondition().(RelationalOperation).getGreaterOperand().(SubExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="insn"
	and target_12.getCondition().(RelationalOperation).getGreaterOperand().(SubExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfixup_19
	and target_12.getCondition().(RelationalOperation).getLesserOperand().(SubExpr).getValue()="2147483628"
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="uaccess_err"
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("current_thread_info")
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_12.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vnew_ip_20
	and target_12.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignSubExpr).getRValue().(HexLiteral).getValue()="2147483632"
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

/*predicate func_13(RelationalOperation target_18, Function func, ExprStmt target_13) {
	target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="uaccess_err"
	and target_13.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("current_thread_info")
	and target_13.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
	and target_13.getEnclosingFunction() = func
}

*/
/*predicate func_14(Variable vnew_ip_20, RelationalOperation target_18, ExprStmt target_14) {
	target_14.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vnew_ip_20
	and target_14.getExpr().(AssignSubExpr).getRValue().(HexLiteral).getValue()="2147483632"
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
}

*/
predicate func_15(Variable vnew_ip_20, Parameter vregs_17, VariableAccess target_1, ExprStmt target_15) {
	target_15.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ip"
	and target_15.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregs_17
	and target_15.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vnew_ip_20
	and target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_17(Function func, BlockStmt target_17) {
	target_17.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
	and target_17.getStmt(1) instanceof IfStmt
	and target_17.getStmt(2) instanceof ExprStmt
	and target_17.getStmt(3).(ReturnStmt).getExpr() instanceof Literal
	and target_17.getEnclosingFunction() = func
}

predicate func_18(Function func, RelationalOperation target_18) {
	 (target_18 instanceof GEExpr or target_18 instanceof LEExpr)
	and target_18.getGreaterOperand() instanceof SubExpr
	and target_18.getLesserOperand() instanceof SubExpr
	and target_18.getEnclosingFunction() = func
}

from Function func, Variable vnew_ip_20, Variable vfixup_19, Parameter vregs_17, VariableAccess target_0, VariableAccess target_1, VariableAccess target_2, VariableAccess target_3, ReturnStmt target_8, VariableAccess target_9, AssignExpr target_11, IfStmt target_12, ExprStmt target_15, BlockStmt target_17, RelationalOperation target_18
where
func_0(vfixup_19, vregs_17, target_0)
and func_1(vfixup_19, target_17, target_1)
and func_2(vfixup_19, target_2)
and func_3(vfixup_19, target_3)
and not func_5(target_17, func)
and not func_6(func)
and not func_7(vregs_17)
and func_8(func, target_8)
and func_9(vregs_17, target_9)
and func_11(vnew_ip_20, vfixup_19, target_11)
and func_12(vnew_ip_20, vfixup_19, target_1, target_12)
and func_15(vnew_ip_20, vregs_17, target_1, target_15)
and func_17(func, target_17)
and func_18(func, target_18)
and vnew_ip_20.getType().hasName("unsigned long")
and vfixup_19.getType().hasName("const exception_table_entry *")
and vregs_17.getType().hasName("pt_regs *")
and vnew_ip_20.(LocalVariable).getFunction() = func
and vfixup_19.(LocalVariable).getFunction() = func
and vregs_17.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
