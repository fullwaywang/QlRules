/**
 * @name curl-3c9e021f86872baae412a427e807fbfa2f3e8-close_connect_only
 * @id cpp/curl/3c9e021f86872baae412a427e807fbfa2f3e8/close-connect-only
 * @description curl-3c9e021f86872baae412a427e807fbfa2f3e8-lib/multi.c-close_connect_only CVE-2020-8231
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdata_694, EqualityOperation target_6) {
	exists(ValueFieldAccess target_0 |
		target_0.getTarget().getName()="lastconnect_id"
		and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_694
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vconn_692, EqualityOperation target_6) {
	exists(PointerFieldAccess target_1 |
		target_1.getTarget().getName()="connection_id"
		and target_1.getQualifier().(VariableAccess).getTarget()=vconn_692
		and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vdata_694, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="state"
		and target_2.getQualifier().(VariableAccess).getTarget()=vdata_694
}

predicate func_3(Parameter vconn_692, ReturnStmt target_7, VariableAccess target_3) {
		target_3.getTarget()=vconn_692
		and target_3.getParent().(NEExpr).getAnOperand() instanceof ValueFieldAccess
		and target_3.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_7
}

predicate func_4(Parameter vconn_692, Variable vdata_694, ReturnStmt target_7, ValueFieldAccess target_4) {
		target_4.getTarget().getName()="lastconnect"
		and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_694
		and target_4.getParent().(NEExpr).getAnOperand().(VariableAccess).getTarget()=vconn_692
		and target_4.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_7
}

predicate func_6(Parameter vconn_692, Variable vdata_694, EqualityOperation target_6) {
		target_6.getAnOperand().(PointerFieldAccess).getTarget().getName()="data"
		and target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_692
		and target_6.getAnOperand().(VariableAccess).getTarget()=vdata_694
}

predicate func_7(ReturnStmt target_7) {
		target_7.getExpr().(Literal).getValue()="0"
}

from Function func, Parameter vconn_692, Variable vdata_694, PointerFieldAccess target_2, VariableAccess target_3, ValueFieldAccess target_4, EqualityOperation target_6, ReturnStmt target_7
where
not func_0(vdata_694, target_6)
and not func_1(vconn_692, target_6)
and func_2(vdata_694, target_2)
and func_3(vconn_692, target_7, target_3)
and func_4(vconn_692, vdata_694, target_7, target_4)
and func_6(vconn_692, vdata_694, target_6)
and func_7(target_7)
and vconn_692.getType().hasName("connectdata *")
and vdata_694.getType().hasName("Curl_easy *")
and vconn_692.getFunction() = func
and vdata_694.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
