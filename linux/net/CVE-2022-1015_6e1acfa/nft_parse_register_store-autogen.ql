/**
 * @name linux-6e1acfa387b9ff82cfc7db8cc3b6959221a95851-nft_parse_register_store
 * @id cpp/linux/6e1acfa387b9ff82cfc7db8cc3b6959221a95851/nft-parse-register-store
 * @description linux-6e1acfa387b9ff82cfc7db8cc3b6959221a95851-net/netfilter/nf_tables_api.c-nft_parse_register_store CVE-2022-1015
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vattr_9378, Variable verr_9382, Variable vreg_9383, ExprStmt target_6) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getTarget()=verr_9382
	and target_0.getRValue().(FunctionCall).getTarget().hasName("nft_parse_register")
	and target_0.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vattr_9378
	and target_0.getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vreg_9383
	and target_0.getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

/*predicate func_1(Parameter vattr_9378, Variable vreg_9383, ExprStmt target_6) {
exists(AddressOfExpr target_1 |
	target_1.getOperand().(VariableAccess).getTarget()=vreg_9383
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nft_parse_register")
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vattr_9378
	and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

*/
predicate func_2(Variable verr_9382, ExprStmt target_6, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=verr_9382
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_2.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_9382
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_6.getLocation()))
}

predicate func_3(Parameter vattr_9378, Variable vreg_9383, VariableAccess target_3) {
	target_3.getTarget()=vreg_9383
	and target_3.getParent().(AssignExpr).getLValue() = target_3
	and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nft_parse_register")
	and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vattr_9378
}

predicate func_4(Parameter vattr_9378, Variable vreg_9383, AssignExpr target_4) {
	target_4.getLValue().(VariableAccess).getTarget()=vreg_9383
	and target_4.getRValue().(FunctionCall).getTarget().hasName("nft_parse_register")
	and target_4.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vattr_9378
}

predicate func_6(Variable verr_9382, Variable vreg_9383, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_9382
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nft_validate_register_store")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const nft_ctx *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vreg_9383
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("const nft_data *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("nft_data_types")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Parameter vattr_9378, Variable verr_9382, Variable vreg_9383, VariableAccess target_3, AssignExpr target_4, ExprStmt target_6
where
not func_0(vattr_9378, verr_9382, vreg_9383, target_6)
and not func_2(verr_9382, target_6, func)
and func_3(vattr_9378, vreg_9383, target_3)
and func_4(vattr_9378, vreg_9383, target_4)
and func_6(verr_9382, vreg_9383, target_6)
and vattr_9378.getType().hasName("const nlattr *")
and verr_9382.getType().hasName("int")
and vreg_9383.getType().hasName("u32")
and vattr_9378.getFunction() = func
and verr_9382.(LocalVariable).getFunction() = func
and vreg_9383.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
