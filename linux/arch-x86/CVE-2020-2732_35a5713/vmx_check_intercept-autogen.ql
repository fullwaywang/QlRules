/**
 * @name linux-35a571346a94fb93b5b3b6a599675ef3384bc75c-vmx_check_intercept
 * @id cpp/linux/35a571346a94fb93b5b3b6a599675ef3384bc75c/vmx-check-intercept
 * @description linux-35a571346a94fb93b5b3b6a599675ef3384bc75c-arch/x86/kvm/vmx/vmx.c-vmx_check_intercept CVE-2020-2732
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvcpu_7148, Parameter vinfo_7149, AddressOfExpr target_5, LogicalAndExpr target_4, Function func) {
	exists(SwitchStmt target_0 |
		target_0.getExpr().(PointerFieldAccess).getTarget().getName()="intercept"
		and target_0.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_7149
		and target_0.getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr() instanceof EnumConstantAccess
		and target_0.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition() instanceof NotExpr
		and target_0.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="vector"
		and target_0.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="6"
		and target_0.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="error_code_valid"
		and target_0.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(2).(ReturnStmt).getExpr().(Literal).getValue()="2"
		and target_0.getStmt().(BlockStmt).getStmt(7).(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("vmx_check_intercept_io")
		and target_0.getStmt().(BlockStmt).getStmt(7).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_7148
		and target_0.getStmt().(BlockStmt).getStmt(7).(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinfo_7149
		and target_0.getStmt().(BlockStmt).getStmt(8).(SwitchCase).toString() = "default: "
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_5.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getStmt().(BlockStmt).getStmt(7).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vinfo_7149, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="intercept"
		and target_1.getQualifier().(VariableAccess).getTarget()=vinfo_7149
}

predicate func_2(Variable vvmcs12_7152, BlockStmt target_6, NotExpr target_2) {
		target_2.getOperand().(FunctionCall).getTarget().hasName("nested_cpu_has2")
		and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvmcs12_7152
		and target_2.getOperand().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="8"
		and target_2.getParent().(LogicalAndExpr).getAnOperand() instanceof EqualityOperation
		and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_4(Parameter vinfo_7149, BlockStmt target_6, LogicalAndExpr target_4) {
		target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="intercept"
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_7149
		and target_4.getAnOperand().(EqualityOperation).getAnOperand() instanceof EnumConstantAccess
		and target_4.getAnOperand() instanceof NotExpr
		and target_4.getParent().(IfStmt).getThen()=target_6
}

predicate func_5(Parameter vvcpu_7148, AddressOfExpr target_5) {
		target_5.getOperand().(ValueFieldAccess).getTarget().getName()="emulate_ctxt"
		and target_5.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_5.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_7148
}

predicate func_6(Function func, BlockStmt target_6) {
		target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="vector"
		and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="exception"
		and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("x86_emulate_ctxt *")
		and target_6.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="6"
		and target_6.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="error_code_valid"
		and target_6.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="exception"
		and target_6.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("x86_emulate_ctxt *")
		and target_6.getEnclosingFunction() = func
}

from Function func, Parameter vvcpu_7148, Parameter vinfo_7149, Variable vvmcs12_7152, PointerFieldAccess target_1, NotExpr target_2, LogicalAndExpr target_4, AddressOfExpr target_5, BlockStmt target_6
where
not func_0(vvcpu_7148, vinfo_7149, target_5, target_4, func)
and func_1(vinfo_7149, target_1)
and func_2(vvmcs12_7152, target_6, target_2)
and func_4(vinfo_7149, target_6, target_4)
and func_5(vvcpu_7148, target_5)
and func_6(func, target_6)
and vvcpu_7148.getType().hasName("kvm_vcpu *")
and vinfo_7149.getType().hasName("x86_instruction_info *")
and vvmcs12_7152.getType().hasName("vmcs12 *")
and vvcpu_7148.getFunction() = func
and vinfo_7149.getFunction() = func
and vvmcs12_7152.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
