/**
 * @name linux-433f4ba1904100da65a311033f17a9bf586b287e-do_cpuid_func
 * @id cpp/linux/433f4ba1904100da65a311033f17a9bf586b287e/do-cpuid-func
 * @description linux-433f4ba1904100da65a311033f17a9bf586b287e-arch/x86/kvm/cpuid.c-do_cpuid_func CVE-2019-19332
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnent_816, Parameter vmaxnent_816, IfStmt target_1, FunctionCall target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vnent_816
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vmaxnent_816
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-7"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_2.getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vnent_816, Parameter vmaxnent_816, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getLeftOperand().(BitwiseOrExpr).getValue()="3221270025"
	and target_1.getCondition().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="1"
	and target_1.getCondition().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getThen().(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getCondition().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getThen().(SizeofTypeOperator).getValue()="8"
	and target_1.getCondition().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(ConditionalExpr).getElse().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(BitwiseOrExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(AddExpr).getValue()="16"
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("__do_cpuid_func_emulated")
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kvm_cpuid_entry2 *")
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vnent_816
	and target_1.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vmaxnent_816
}

predicate func_2(Parameter vnent_816, Parameter vmaxnent_816, FunctionCall target_2) {
	target_2.getTarget().hasName("__do_cpuid_func_emulated")
	and target_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("kvm_cpuid_entry2 *")
	and target_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
	and target_2.getArgument(2).(VariableAccess).getTarget()=vnent_816
	and target_2.getArgument(3).(VariableAccess).getTarget()=vmaxnent_816
}

from Function func, Parameter vnent_816, Parameter vmaxnent_816, IfStmt target_1, FunctionCall target_2
where
not func_0(vnent_816, vmaxnent_816, target_1, target_2, func)
and func_1(vnent_816, vmaxnent_816, target_1)
and func_2(vnent_816, vmaxnent_816, target_2)
and vnent_816.getType().hasName("int *")
and vmaxnent_816.getType().hasName("int")
and vnent_816.getFunction() = func
and vmaxnent_816.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
