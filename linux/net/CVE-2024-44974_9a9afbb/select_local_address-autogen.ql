/**
 * @name linux-9a9afbbc3fbfca4975eea4aa5b18556db5a0c0b8-select_local_address
 * @id cpp/linux/9a9afbbc3fbfca4975eea4aa5b18556db5a0c0b8/select-local-address
 * @description linux-9a9afbbc3fbfca4975eea4aa5b18556db5a0c0b8-net/mptcp/pm_netlink.c-select_local_address CVE-2024-44974
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr().(Literal).getValue()="0"
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Variable vret_155, VariableAccess target_1) {
	target_1.getTarget()=vret_155
}

predicate func_3(Variable ventry_155) {
exists(AssignExpr target_3 |
	target_3.getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getType().hasName("mptcp_pm_addr_entry *")
	and target_3.getRValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=ventry_155
)
}

predicate func_4(Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
	and target_4.getFollowingStmt() instanceof BreakStmt
	and target_4.getEnclosingFunction() = func
)
}

predicate func_6(Variable ventry_155, Variable vret_155, VariableAccess target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getParent() |
		obj_0.getRValue() = target_6
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_155
	)
	and target_6.getTarget()=ventry_155
}

predicate func_8(Variable ventry_155, Variable vret_155, AssignExpr target_8) {
	target_8.getLValue().(VariableAccess).getTarget()=vret_155
	and target_8.getRValue().(VariableAccess).getTarget()=ventry_155
}

from Function func, Variable ventry_155, Variable vret_155, Initializer target_0, VariableAccess target_1, VariableAccess target_6, AssignExpr target_8
where
func_0(func, target_0)
and func_1(vret_155, target_1)
and not func_3(ventry_155)
and not func_4(func)
and func_6(ventry_155, vret_155, target_6)
and func_8(ventry_155, vret_155, target_8)
and ventry_155.getType().hasName("mptcp_pm_addr_entry *")
and vret_155.getType().hasName("mptcp_pm_addr_entry *")
and ventry_155.(LocalVariable).getFunction() = func
and vret_155.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
