/**
 * @name linux-3ffbe85cda7f523dad896bae08cecd8db8b555ab-thrustmaster_interrupts
 * @id cpp/linux/3ffbe85cda7f523dad896bae08cecd8db8b555ab/thrustmaster-interrupts
 * @description linux-3ffbe85cda7f523dad896bae08cecd8db8b555ab-drivers/hid/hid-thrustmaster.c-thrustmaster_interrupts CVE-2022-48866
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsend_buf_150, Variable vusbif_153, ExprStmt target_1, NotExpr target_2, ExprStmt target_3, FunctionCall target_4, Function func) {
exists(IfStmt target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLesserOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="cur_altsetting"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vusbif_153
				)
				and obj_2.getTarget().getName()="desc"
			)
			and obj_1.getTarget().getName()="bNumEndpoints"
		)
		and obj_0.getGreaterOperand().(Literal).getValue()="2"
	)
	and exists(BlockStmt obj_4 | obj_4=target_0.getThen() |
		exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(0) |
			exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
				obj_6.getTarget().hasName("kfree")
				and obj_6.getArgument(0).(VariableAccess).getTarget()=vsend_buf_150
			)
		)
		and exists(ExprStmt obj_7 | obj_7=obj_4.getStmt(1) |
			exists(StmtExpr obj_8 | obj_8=obj_7.getExpr() |
				exists(BlockStmt obj_9 | obj_9=obj_8.getStmt() |
					obj_9.getStmt(0).(DoStmt).getCondition() instanceof Literal
					and obj_9.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
				)
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vusbif_153, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="cur_altsetting"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vusbif_153
					)
					and obj_3.getTarget().getName()="endpoint"
				)
				and obj_2.getArrayOffset().(Literal).getValue()="1"
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("usb_host_endpoint *")
	)
}

predicate func_2(Variable vsend_buf_150, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vsend_buf_150
}

predicate func_3(Variable vsend_buf_150, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getArgument(1) |
			obj_1.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
			and obj_1.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
		)
		and exists(ArrayExpr obj_2 | obj_2=obj_0.getArgument(2) |
			obj_2.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
			and obj_2.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
		)
		and obj_0.getTarget().hasName("__memcpy")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vsend_buf_150
	)
}

predicate func_4(Variable vusbif_153, FunctionCall target_4) {
	target_4.getTarget().hasName("interface_to_usbdev")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vusbif_153
}

from Function func, Variable vsend_buf_150, Variable vusbif_153, ExprStmt target_1, NotExpr target_2, ExprStmt target_3, FunctionCall target_4
where
not func_0(vsend_buf_150, vusbif_153, target_1, target_2, target_3, target_4, func)
and func_1(vusbif_153, target_1)
and func_2(vsend_buf_150, target_2)
and func_3(vsend_buf_150, target_3)
and func_4(vusbif_153, target_4)
and vsend_buf_150.getType().hasName("u8 *")
and vusbif_153.getType().hasName("usb_interface *")
and vsend_buf_150.(LocalVariable).getFunction() = func
and vusbif_153.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
