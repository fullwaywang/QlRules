/**
 * @name linux-5f936e19cc0ef97dbe3a56e9498922ad5ba1edef-alarm_timer_nsleep
 * @id cpp/linux/5f936e19cc0ef97dbe3a56e9498922ad5ba1edef/alarm-timer-nsleep
 * @description linux-5f936e19cc0ef97dbe3a56e9498922ad5ba1edef-kernel/time/alarmtimer.c-alarm_timer_nsleep CVE-2018-13053
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vexp_793, Variable vnow_810, ExprStmt target_4) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("ktime_add_safe")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vnow_810
	and target_0.getArgument(1).(VariableAccess).getTarget()=vexp_793
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vexp_793
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vnow_810, VariableAccess target_1) {
	target_1.getTarget()=vnow_810
}

predicate func_2(Variable vexp_793, VariableAccess target_2) {
	target_2.getTarget()=vexp_793
}

predicate func_3(Variable vexp_793, Variable vnow_810, AddExpr target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget()=vnow_810
	and target_3.getRightOperand().(VariableAccess).getTarget()=vexp_793
	and target_3.getParent().(AssignExpr).getRValue() = target_3
	and target_3.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vexp_793
}

predicate func_4(Variable vexp_793, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alarmtimer_do_nsleep")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("alarm")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vexp_793
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("alarmtimer_type")
}

from Function func, Variable vexp_793, Variable vnow_810, VariableAccess target_1, VariableAccess target_2, AddExpr target_3, ExprStmt target_4
where
not func_0(vexp_793, vnow_810, target_4)
and func_1(vnow_810, target_1)
and func_2(vexp_793, target_2)
and func_3(vexp_793, vnow_810, target_3)
and func_4(vexp_793, target_4)
and vexp_793.getType().hasName("ktime_t")
and vnow_810.getType().hasName("ktime_t")
and vexp_793.(LocalVariable).getFunction() = func
and vnow_810.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
