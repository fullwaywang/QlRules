/**
 * @name linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-mark_reg_read
 * @id cpp/linux/c25b2ae136039ffa820c26138ed4a5e5f3ab3841/mark-reg-read
 * @description linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-kernel/bpf/verifier.c-mark_reg_read CVE-2022-23222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vparent_2095, Parameter venv_2093, ValueFieldAccess target_3, ExprStmt target_4, RelationalOperation target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("reg_type_str")
	and target_0.getArgument(0).(VariableAccess).getTarget()=venv_2093
	and target_0.getArgument(1).(PointerFieldAccess).getTarget().getName()="type"
	and target_0.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_2093
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="verifier BUG type %s var_off %lld off %d\n"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof ArrayExpr
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getTarget().getName()="value"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="var_off"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="off"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
	and target_0.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vparent_2095, Variable vreg_type_str, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="type"
	and target_1.getQualifier().(VariableAccess).getTarget()=vparent_2095
	and target_1.getParent().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vreg_type_str
}

predicate func_2(Parameter vparent_2095, Variable vreg_type_str, Parameter venv_2093, ArrayExpr target_2) {
	target_2.getArrayBase().(VariableAccess).getTarget()=vreg_type_str
	and target_2.getArrayOffset().(PointerFieldAccess).getTarget().getName()="type"
	and target_2.getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_2093
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="verifier BUG type %s var_off %lld off %d\n"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getTarget().getName()="value"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="var_off"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="off"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
}

predicate func_3(Parameter vparent_2095, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="value"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="var_off"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
}

predicate func_4(Parameter vparent_2095, Parameter venv_2093, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_2093
	and target_4.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="verifier BUG type %s var_off %lld off %d\n"
	and target_4.getExpr().(FunctionCall).getArgument(2) instanceof ArrayExpr
	and target_4.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getTarget().getName()="value"
	and target_4.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="var_off"
	and target_4.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
	and target_4.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="off"
	and target_4.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vparent_2095
}

predicate func_5(Parameter venv_2093, RelationalOperation target_5) {
	 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
	and target_5.getLesserOperand().(PointerFieldAccess).getTarget().getName()="longest_mark_read_walk"
	and target_5.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_2093
	and target_5.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vparent_2095, Variable vreg_type_str, Parameter venv_2093, PointerFieldAccess target_1, ArrayExpr target_2, ValueFieldAccess target_3, ExprStmt target_4, RelationalOperation target_5
where
not func_0(vparent_2095, venv_2093, target_3, target_4, target_5)
and func_1(vparent_2095, vreg_type_str, target_1)
and func_2(vparent_2095, vreg_type_str, venv_2093, target_2)
and func_3(vparent_2095, target_3)
and func_4(vparent_2095, venv_2093, target_4)
and func_5(venv_2093, target_5)
and vparent_2095.getType().hasName("bpf_reg_state *")
and vreg_type_str.getType() instanceof ArrayType
and venv_2093.getType().hasName("bpf_verifier_env *")
and vparent_2095.getFunction() = func
and not vreg_type_str.getParentScope+() = func
and venv_2093.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
