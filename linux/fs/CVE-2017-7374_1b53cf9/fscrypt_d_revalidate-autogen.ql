/**
 * @name linux-1b53cf9815bb4744958d41f3795d5d5a1d365e2d-fscrypt_d_revalidate
 * @id cpp/linux/1b53cf9815bb4744958d41f3795d5d5a1d365e2d/fscrypt-d-revalidate
 * @description linux-1b53cf9815bb4744958d41f3795d5d5a1d365e2d-fs/crypto/crypto.c-fscrypt_d_revalidate CVE-2017-7374
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdir_329, Variable vci_330, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="i_crypt_info"
	and target_0.getQualifier().(FunctionCall).getTarget().hasName("d_inode")
	and target_0.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_329
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vci_330
}

predicate func_1(Function func, DeclStmt target_1) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vdir_329, Variable vci_330, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vci_330
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="i_crypt_info"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("d_inode")
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_329
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vci_330, Function func, IfStmt target_3) {
	target_3.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vci_330
	and target_3.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="ci_keyring_key"
	and target_3.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vci_330
	and target_3.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_3.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ci_keyring_key"
	and target_3.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vci_330
	and target_3.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(BitwiseOrExpr).getValue()="134"
	and target_3.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vci_330
	and target_3.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vci_330, VariableAccess target_4) {
	target_4.getTarget()=vci_330
}

from Function func, Variable vdir_329, Variable vci_330, PointerFieldAccess target_0, DeclStmt target_1, ExprStmt target_2, IfStmt target_3, VariableAccess target_4
where
func_0(vdir_329, vci_330, target_0)
and func_1(func, target_1)
and func_2(vdir_329, vci_330, func, target_2)
and func_3(vci_330, func, target_3)
and func_4(vci_330, target_4)
and vdir_329.getType().hasName("dentry *")
and vci_330.getType().hasName("fscrypt_info *")
and vdir_329.(LocalVariable).getFunction() = func
and vci_330.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
