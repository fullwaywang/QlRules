/**
 * @name linux-129a72a0d3c8e139a04512325384fe5ac119e74d-em_fxsave
 * @id cpp/linux/129a72a0d3c8e139a04512325384fe5ac119e74d/em-fxsave
 * @description linux-129a72a0d3c8e139a04512325384fe5ac119e74d-arch/x86/kvm/emulate.c-em_fxsave CVE-2017-2584
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfx_state_3913, Variable vsize_3914, Parameter vctxt_3911, FunctionCall target_0) {
	target_0.getTarget().hasName("segmented_write")
	and not target_0.getTarget().hasName("segmented_write_std")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vctxt_3911
	and target_0.getArgument(1).(ValueFieldAccess).getTarget().getName()="mem"
	and target_0.getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="addr"
	and target_0.getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="memop"
	and target_0.getArgument(1).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctxt_3911
	and target_0.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vfx_state_3913
	and target_0.getArgument(3).(VariableAccess).getTarget()=vsize_3914
}

from Function func, Variable vfx_state_3913, Variable vsize_3914, Parameter vctxt_3911, FunctionCall target_0
where
func_0(vfx_state_3913, vsize_3914, vctxt_3911, target_0)
and vfx_state_3913.getType().hasName("fxregs_state")
and vsize_3914.getType().hasName("size_t")
and vctxt_3911.getType().hasName("x86_emulate_ctxt *")
and vfx_state_3913.(LocalVariable).getFunction() = func
and vsize_3914.(LocalVariable).getFunction() = func
and vctxt_3911.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
