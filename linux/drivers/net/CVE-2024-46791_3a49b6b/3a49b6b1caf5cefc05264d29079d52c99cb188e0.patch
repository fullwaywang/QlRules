commit 3a49b6b1caf5cefc05264d29079d52c99cb188e0
Author: Simon Arlott <simon@octiron.net>
Date:   Thu Aug 22 08:25:07 2024 +0100

    can: mcp251x: fix deadlock if an interrupt occurs during mcp251x_open
    
    commit 7dd9c26bd6cf679bcfdef01a8659791aa6487a29 upstream.
    
    The mcp251x_hw_wake() function is called with the mpc_lock mutex held and
    disables the interrupt handler so that no interrupts can be processed while
    waking the device. If an interrupt has already occurred then waiting for
    the interrupt handler to complete will deadlock because it will be trying
    to acquire the same mutex.
    
    CPU0                           CPU1
    ----                           ----
    mcp251x_open()
     mutex_lock(&priv->mcp_lock)
      request_threaded_irq()
                                   <interrupt>
                                   mcp251x_can_ist()
                                    mutex_lock(&priv->mcp_lock)
      mcp251x_hw_wake()
       disable_irq() <-- deadlock
    
    Use disable_irq_nosync() instead because the interrupt handler does
    everything while holding the mutex so it doesn't matter if it's still
    running.
    
    Fixes: 8ce8c0abcba3 ("can: mcp251x: only reset hardware as required")
    Signed-off-by: Simon Arlott <simon@octiron.net>
    Reviewed-by: Przemek Kitszel <przemyslaw.kitszel@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/all/4fc08687-1d80-43fe-9f0d-8ef8475e75f6@0882a8b5-c6c3-11e9-b005-00805fc181fe.uuid.home.arpa
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/can/spi/mcp251x.c b/drivers/net/can/spi/mcp251x.c
index ffcb04aac972..88d065718e99 100644
--- a/drivers/net/can/spi/mcp251x.c
+++ b/drivers/net/can/spi/mcp251x.c
@@ -755,7 +755,7 @@ static int mcp251x_hw_wake(struct spi_device *spi)
 	int ret;
 
 	/* Force wakeup interrupt to wake device, but don't execute IST */
-	disable_irq(spi->irq);
+	disable_irq_nosync(spi->irq);
 	mcp251x_write_2regs(spi, CANINTE, CANINTE_WAKIE, CANINTF_WAKIF);
 
 	/* Wait for oscillator startup timer after wake up */
