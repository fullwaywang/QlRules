/**
 * @name linux-78f1ddbb498283c2445c11b0dfa666424c301803-ext4_decode_error
 * @id cpp/linux/78f1ddbb498283c2445c11b0dfa666424c301803/ext4-decode-error
 * @description linux-78f1ddbb498283c2445c11b0dfa666424c301803-fs/ext4/super.c-ext4_decode_error CVE-2009-4308
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsb_334, ExprStmt target_2, LogicalOrExpr target_3, FunctionCall target_4) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(PointerFieldAccess).getTarget().getName()="s_journal"
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_334
		and target_0.getAnOperand() instanceof BitwiseAndExpr
		and target_0.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vsb_334
		and target_0.getParent().(LogicalOrExpr).getAnOperand() instanceof BitwiseAndExpr
		and target_0.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_2
		and target_3.getAnOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsb_334, ExprStmt target_2, BitwiseAndExpr target_1) {
		target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="j_flags"
		and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="s_journal"
		and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
		and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_334
		and target_1.getRightOperand().(Literal).getValue()="2"
		and target_1.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vsb_334
		and target_1.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("char *")
		and target_2.getExpr().(AssignExpr).getRValue().(StringLiteral).getValue()="Journal has aborted"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vsb_334, LogicalOrExpr target_3) {
		target_3.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vsb_334
		and target_3.getAnOperand() instanceof BitwiseAndExpr
}

predicate func_4(Parameter vsb_334, FunctionCall target_4) {
		target_4.getTarget().hasName("EXT4_SB")
		and target_4.getArgument(0).(VariableAccess).getTarget()=vsb_334
}

from Function func, Parameter vsb_334, BitwiseAndExpr target_1, ExprStmt target_2, LogicalOrExpr target_3, FunctionCall target_4
where
not func_0(vsb_334, target_2, target_3, target_4)
and func_1(vsb_334, target_2, target_1)
and func_2(func, target_2)
and func_3(vsb_334, target_3)
and func_4(vsb_334, target_4)
and vsb_334.getType().hasName("super_block *")
and vsb_334.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
