/**
 * @name linux-e9c6a182649f4259db704ae15a91ac820e63b0ca-persistent_prepare_exception
 * @id cpp/linux/e9c6a182649f4259db704ae15a91ac820e63b0ca/persistent-prepare-exception
 * @description linux-e9c6a182649f4259db704ae15a91ac820e63b0ca-drivers/md/dm-snap-persistent.c-persistent_prepare_exception CVE-2013-4299
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vps_618, ExprStmt target_6) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("skip_metadata")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vps_618
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(PrefixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vps_618, EqualityOperation target_12, ExprStmt target_1) {
	target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="next_free"
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vps_618
	and target_1.getParent().(IfStmt).getCondition()=target_12
}

predicate func_2(Variable vps_618, VariableAccess target_2) {
	target_2.getTarget()=vps_618
}

predicate func_3(Function func, DeclStmt target_3) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Function func, DeclStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vps_618, Variable vstride_619, AssignExpr target_5) {
	target_5.getLValue().(VariableAccess).getTarget()=vstride_619
	and target_5.getRValue().(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="exceptions_per_area"
	and target_5.getRValue().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vps_618
	and target_5.getRValue().(AddExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_6(Variable vps_618, Variable vnext_free_620, Function func, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnext_free_620
	and target_6.getExpr().(AssignExpr).getRValue().(PrefixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="next_free"
	and target_6.getExpr().(AssignExpr).getRValue().(PrefixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vps_618
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable vstride_619, Variable vnext_free_620, Variable v_res_635, Function func, IfStmt target_7) {
	target_7.getCondition().(EqualityOperation).getLeftOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v_res_635
	and target_7.getCondition().(EqualityOperation).getLeftOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignDivExpr).getLValue().(VariableAccess).getTarget()=vnext_free_620
	and target_7.getCondition().(EqualityOperation).getLeftOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignDivExpr).getRValue().(VariableAccess).getTarget()=vstride_619
	and target_7.getCondition().(EqualityOperation).getLeftOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(VariableAccess).getTarget()=v_res_635
	and target_7.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_7.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

/*predicate func_9(Variable vstride_619, Variable vnext_free_620, Variable v_res_635, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v_res_635
	and target_9.getExpr().(AssignExpr).getRValue().(RemExpr).getLeftOperand().(VariableAccess).getTarget()=vnext_free_620
	and target_9.getExpr().(AssignExpr).getRValue().(RemExpr).getRightOperand().(VariableAccess).getTarget()=vstride_619
}

*/
/*predicate func_10(Variable vstride_619, Variable vnext_free_620, ExprStmt target_10) {
	target_10.getExpr().(AssignDivExpr).getLValue().(VariableAccess).getTarget()=vnext_free_620
	and target_10.getExpr().(AssignDivExpr).getRValue().(VariableAccess).getTarget()=vstride_619
}

*/
/*predicate func_11(Variable v_res_635, ExprStmt target_11) {
	target_11.getExpr().(VariableAccess).getTarget()=v_res_635
}

*/
predicate func_12(Function func, EqualityOperation target_12) {
	target_12.getLeftOperand() instanceof StmtExpr
	and target_12.getRightOperand() instanceof Literal
	and target_12.getEnclosingFunction() = func
}

from Function func, Variable vps_618, Variable vstride_619, Variable vnext_free_620, Variable v_res_635, ExprStmt target_1, VariableAccess target_2, DeclStmt target_3, DeclStmt target_4, AssignExpr target_5, ExprStmt target_6, IfStmt target_7, EqualityOperation target_12
where
not func_0(vps_618, target_6)
and func_1(vps_618, target_12, target_1)
and func_2(vps_618, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(vps_618, vstride_619, target_5)
and func_6(vps_618, vnext_free_620, func, target_6)
and func_7(vstride_619, vnext_free_620, v_res_635, func, target_7)
and func_12(func, target_12)
and vps_618.getType().hasName("pstore *")
and vstride_619.getType().hasName("uint32_t")
and vnext_free_620.getType().hasName("chunk_t")
and v_res_635.getType().hasName("int")
and vps_618.(LocalVariable).getFunction() = func
and vstride_619.(LocalVariable).getFunction() = func
and vnext_free_620.(LocalVariable).getFunction() = func
and v_res_635.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
