/**
 * @name linux-448efb7ea0bfa2c4e27c5a2eb5684fd225cd12cd-amd_pstate_epp_cpu_exit
 * @id cpp/linux/448efb7ea0bfa2c4e27c5a2eb5684fd225cd12cd/amd-pstate-epp-cpu-exit
 * @description linux-448efb7ea0bfa2c4e27c5a2eb5684fd225cd12cd-drivers/cpufreq/amd-pstate.c-amd_pstate_epp_cpu_exit CVE-2024-40997
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpolicy_1217, DoStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("kfree")
				and obj_2.getArgument(0).(VariableAccess).getType().hasName("amd_cpudata *")
			)
		)
		and exists(ExprStmt obj_3 | obj_3=obj_0.getStmt(1) |
			exists(AssignExpr obj_4 | obj_4=obj_3.getExpr() |
				exists(PointerFieldAccess obj_5 | obj_5=obj_4.getLValue() |
					obj_5.getTarget().getName()="driver_data"
					and obj_5.getQualifier().(VariableAccess).getTarget()=vpolicy_1217
				)
				and obj_4.getRValue().(Literal).getValue()="0"
			)
		)
	)
	and target_0.getCondition().(VariableAccess).getType().hasName("amd_cpudata *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vpolicy_1217, DoStmt target_1) {
	exists(BlockStmt obj_0 | obj_0=target_1.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			obj_1.getCondition() instanceof Literal
			and obj_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
		)
		and exists(IfStmt obj_2 | obj_2=obj_0.getStmt(2) |
			exists(ExprStmt obj_3 | obj_3=obj_2.getThen() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getArgument(2) |
						obj_5.getTarget().getName()="cpu"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vpolicy_1217
					)
					and obj_4.getTarget().hasName("__dynamic_pr_debug")
					and obj_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
					and obj_4.getArgument(1).(StringLiteral).getValue()="amd_pstate: CPU %d exiting\n"
				)
			)
			and obj_2.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
		)
	)
	and target_1.getCondition() instanceof Literal
}

predicate func_2(Parameter vpolicy_1217, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(2) |
			obj_1.getTarget().getName()="cpu"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpolicy_1217
		)
		and obj_0.getTarget().hasName("__dynamic_pr_debug")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
		and obj_0.getArgument(1).(StringLiteral).getValue()="amd_pstate: CPU %d exiting\n"
	)
}

from Function func, Parameter vpolicy_1217, DoStmt target_1, ExprStmt target_2
where
not func_0(vpolicy_1217, target_1, target_2, func)
and func_1(vpolicy_1217, target_1)
and func_2(vpolicy_1217, target_2)
and vpolicy_1217.getType().hasName("cpufreq_policy *")
and vpolicy_1217.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
