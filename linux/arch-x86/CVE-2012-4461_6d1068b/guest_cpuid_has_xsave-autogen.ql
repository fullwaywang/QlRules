/**
 * @name linux-6d1068b3a98519247d8ba4ec85cd40ac136dbdf9-guest_cpuid_has_xsave
 * @id cpp/linux/6d1068b3a98519247d8ba4ec85cd40ac136dbdf9/guest-cpuid-has-xsave
 * @description linux-6d1068b3a98519247d8ba4ec85cd40ac136dbdf9-arch/x86/kvm/cpuid.h-guest_cpuid_has_xsave CVE-2012-4461
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="0"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(ConditionalExpr).getElse().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="0"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(ConditionalExpr).getElse().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getThen().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("__static_cpu_has")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(AddExpr).getValue()="154"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="0"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getCondition().(Literal).getValue()="1"
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
	and target_0.getCondition().(NotExpr).getOperand().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
	and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("kvm_cpuid_entry2 *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvm_find_cpuid_entry")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kvm_vcpu *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
