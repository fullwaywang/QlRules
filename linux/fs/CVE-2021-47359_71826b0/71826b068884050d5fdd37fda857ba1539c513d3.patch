commit 71826b068884050d5fdd37fda857ba1539c513d3
Author: Rohith Surabattula <rohiths@microsoft.com>
Date:   Fri Sep 17 17:29:42 2021 +0000

    cifs: Fix soft lockup during fsstress
    
    Below traces are observed during fsstress and system got hung.
    [  130.698396] watchdog: BUG: soft lockup - CPU#6 stuck for 26s!
    
    Cc: stable@vger.kernel.org # 5.13+
    Signed-off-by: Rohith Surabattula <rohiths@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>

diff --git a/fs/cifs/misc.c b/fs/cifs/misc.c
index 05138f92d905..03da00eb7c04 100644
--- a/fs/cifs/misc.c
+++ b/fs/cifs/misc.c
@@ -735,7 +735,7 @@ cifs_close_deferred_file(struct cifsInodeInfo *cifs_inode)
 			if (cancel_delayed_work(&cfile->deferred)) {
 				tmp_list = kmalloc(sizeof(struct file_list), GFP_ATOMIC);
 				if (tmp_list == NULL)
-					continue;
+					break;
 				tmp_list->cfile = cfile;
 				list_add_tail(&tmp_list->list, &file_head);
 			}
@@ -766,7 +766,7 @@ cifs_close_all_deferred_files(struct cifs_tcon *tcon)
 			if (cancel_delayed_work(&cfile->deferred)) {
 				tmp_list = kmalloc(sizeof(struct file_list), GFP_ATOMIC);
 				if (tmp_list == NULL)
-					continue;
+					break;
 				tmp_list->cfile = cfile;
 				list_add_tail(&tmp_list->list, &file_head);
 			}
