/**
 * @name linux-bf920ed92ef24dcd6970c88881cd4700b3acf05b-bch2_sb_downgrade_validate
 * @id cpp/linux/bf920ed92ef24dcd6970c88881cd4700b3acf05b/bch2-sb-downgrade-validate
 * @description linux-bf920ed92ef24dcd6970c88881cd4700b3acf05b-fs/bcachefs/sb-downgrade.c-bch2_sb_downgrade_validate CVE-2024-41086
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable ve_143, Variable vi_145, BlockStmt target_3, RelationalOperation target_0) {
	exists(PointerArithmeticOperation obj_0 | obj_0=target_0.getGreaterOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="field"
					and obj_3.getQualifier().(VariableAccess).getTarget()=ve_143
				)
			)
			and obj_1.getTarget().getName()="_data"
		)
		and obj_0.getRightOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(ConditionalExpr).getThen().(PointerFieldAccess).getTarget().getName()="u64s"
	)
	and exists(LogicalAndExpr obj_4 | obj_4=target_0.getParent() |
		obj_4.getRightOperand() instanceof RelationalOperation
		and obj_4.getParent().(ForStmt).getStmt()=target_3
	)
	and  (target_0 instanceof GTExpr or target_0 instanceof LTExpr)
	and target_0.getLesserOperand().(VariableAccess).getTarget()=vi_145
}

predicate func_1(Variable ve_143, Variable vi_145, BlockStmt target_3, LogicalAndExpr target_1) {
	exists(RelationalOperation obj_0 | obj_0=target_1.getRightOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getLesserOperand() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					obj_3.getTarget().getName()="errors"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vi_145
				)
				and obj_2.getArrayOffset().(Literal).getValue()="0"
			)
		)
		and exists(PointerArithmeticOperation obj_4 | obj_4=obj_0.getGreaterOperand() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getLeftOperand() |
				exists(AddressOfExpr obj_6 | obj_6=obj_5.getQualifier() |
					exists(PointerFieldAccess obj_7 | obj_7=obj_6.getOperand() |
						obj_7.getTarget().getName()="field"
						and obj_7.getQualifier().(VariableAccess).getTarget()=ve_143
					)
				)
				and obj_5.getTarget().getName()="_data"
			)
		)
	)
	and target_1.getLeftOperand() instanceof RelationalOperation
	and target_1.getParent().(ForStmt).getStmt()=target_3
}

/*predicate func_2(Variable ve_143, ExprStmt target_2) {
	exists(ConditionalExpr obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getThen() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="field"
					and obj_3.getQualifier().(VariableAccess).getTarget()=ve_143
				)
			)
			and obj_1.getTarget().getName()="u64s"
		)
		and exists(ConditionalExpr obj_4 | obj_4=obj_0.getElse() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getThen() |
				exists(AddressOfExpr obj_6 | obj_6=obj_5.getQualifier() |
					exists(PointerFieldAccess obj_7 | obj_7=obj_6.getOperand() |
						obj_7.getTarget().getName()="field"
						and obj_7.getQualifier().(VariableAccess).getTarget()=ve_143
					)
				)
				and obj_5.getTarget().getName()="u64s"
			)
			and exists(ConditionalExpr obj_8 | obj_8=obj_4.getElse() |
				exists(PointerFieldAccess obj_9 | obj_9=obj_8.getThen() |
					obj_9.getTarget().getName()="u64s"
					and obj_9.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="field"
				)
				and exists(PointerFieldAccess obj_10 | obj_10=obj_8.getElse() |
					obj_10.getTarget().getName()="u64s"
					and obj_10.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="field"
				)
				and obj_8.getCondition().(LogicalOrExpr).getValue()="0"
			)
			and obj_4.getCondition().(LogicalOrExpr).getValue()="1"
		)
		and obj_0.getCondition().(LogicalOrExpr).getValue()="0"
	)
}

*/
predicate func_3(Variable vi_145, BlockStmt target_3) {
	exists(IfStmt obj_0 | obj_0=target_3.getStmt(0) |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getCondition() |
			exists(BinaryBitwiseOperation obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getTarget().getName()="version"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vi_145
				)
				and obj_2.getRightOperand().(Literal).getValue()="10"
			)
			and exists(BinaryBitwiseOperation obj_4 | obj_4=obj_1.getRightOperand() |
				exists(PointerFieldAccess obj_5 | obj_5=obj_4.getLeftOperand() |
					obj_5.getTarget().getName()="version"
					and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("bch_sb *")
				)
				and obj_4.getRightOperand().(Literal).getValue()="10"
			)
		)
		and exists(BlockStmt obj_6 | obj_6=obj_0.getThen() |
			exists(ExprStmt obj_7 | obj_7=obj_6.getStmt(0) |
				exists(FunctionCall obj_8 | obj_8=obj_7.getExpr() |
					exists(BinaryBitwiseOperation obj_9 | obj_9=obj_8.getArgument(2) |
						obj_9.getLeftOperand().(PointerFieldAccess).getTarget().getName()="version"
						and obj_9.getRightOperand().(Literal).getValue()="10"
					)
					and exists(BinaryBitwiseOperation obj_10 | obj_10=obj_8.getArgument(3) |
						obj_10.getLeftOperand().(PointerFieldAccess).getTarget().getName()="version"
						and obj_10.getRightOperand().(Literal).getValue()="10"
					)
					and obj_8.getTarget().hasName("bch2_prt_printf")
					and obj_8.getArgument(0).(VariableAccess).getTarget().getType().hasName("printbuf *")
					and obj_8.getArgument(1).(StringLiteral).getValue()="downgrade entry with mismatched major version (%u != %u)"
				)
			)
		)
	)
}

from Function func, Variable ve_143, Variable vi_145, RelationalOperation target_0, LogicalAndExpr target_1, BlockStmt target_3
where
func_0(ve_143, vi_145, target_3, target_0)
and func_1(ve_143, vi_145, target_3, target_1)
and func_3(vi_145, target_3)
and ve_143.getType().hasName("bch_sb_field_downgrade *")
and vi_145.getType().hasName("const bch_sb_field_downgrade_entry *")
and ve_143.(LocalVariable).getFunction() = func
and vi_145.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
