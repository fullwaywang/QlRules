/**
 * @name linux-7644b1a1c9a7ae8ab99175989bfc8676055edb46-io_uring_show_fdinfo
 * @id cpp/linux/7644b1a1c9a7ae8ab99175989bfc8676055edb46/io-uring-show-fdinfo
 * @description linux-7644b1a1c9a7ae8ab99175989bfc8676055edb46-io_uring/fdinfo.c-io_uring_show_fdinfo CVE-2023-46862
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, UnaryMinusExpr target_0) {
	target_0.getValue()="4294967295"
	and target_0.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_0.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_0.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="SqThreadCpu:\t%d\n"
	and target_0.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof ConditionalExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, DeclStmt target_1) {
	target_1.getFollowingStmt() instanceof DeclStmt
	and target_1.getEnclosingFunction() = func
}

predicate func_4(Variable vsq_56, ExprStmt target_24) {
exists(FunctionCall target_4 |
	target_4.getTarget().hasName("mutex_trylock")
	and target_4.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_4.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsq_56
	and target_4.getParent().(IfStmt).getThen()=target_24)
}

predicate func_5(Variable vsq_56) {
exists(IfStmt target_5 |
	target_5.getCondition().(PointerFieldAccess).getTarget().getName()="thread"
	and target_5.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsq_56
	and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_5.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_5.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall)
}

/*predicate func_6(Function func) {
exists(AssignExpr target_6 |
	target_6.getLValue().(VariableAccess).getType().hasName("int")
	and target_6.getRValue() instanceof FunctionCall
	and target_6.getEnclosingFunction() = func)
}

*/
/*predicate func_7(Function func) {
exists(AssignExpr target_7 |
	target_7.getLValue().(VariableAccess).getType().hasName("int")
	and target_7.getRValue() instanceof FunctionCall
	and target_7.getEnclosingFunction() = func)
}

*/
predicate func_8(Variable vsq_56) {
exists(ExprStmt target_8 |
	target_8.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsq_56)
}

predicate func_11(Variable vctx_55, Variable vsq_56, PointerFieldAccess target_11) {
	target_11.getTarget().getName()="sq_data"
	and target_11.getQualifier().(VariableAccess).getTarget()=vctx_55
	and target_11.getParent().(AssignExpr).getRValue() = target_11
	and target_11.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsq_56
}

predicate func_12(Variable vsq_56, ExprStmt target_24, PointerFieldAccess target_12) {
	target_12.getTarget().getName()="thread"
	and target_12.getQualifier().(VariableAccess).getTarget()=vsq_56
	and target_12.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_24
}

predicate func_13(Variable vsq_56, FunctionCall target_13) {
	target_13.getTarget().hasName("task_pid_nr")
	and target_13.getArgument(0).(PointerFieldAccess).getTarget().getName()="thread"
	and target_13.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsq_56
	and target_13.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_13.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_13.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="SqThread:\t%d\n"
	and target_13.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof ConditionalExpr
}

predicate func_14(Function func, UnaryMinusExpr target_14) {
	target_14.getValue()="-1"
	and target_14.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_14.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_14.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="SqThread:\t%d\n"
	and target_14.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof ConditionalExpr
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vsq_56, FunctionCall target_15) {
	target_15.getTarget().hasName("task_cpu")
	and target_15.getArgument(0).(PointerFieldAccess).getTarget().getName()="thread"
	and target_15.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsq_56
	and target_15.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_15.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_15.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="SqThreadCpu:\t%d\n"
	and target_15.getParent().(ConditionalExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof ConditionalExpr
}

predicate func_16(Variable vsq_56, VariableAccess target_16) {
	target_16.getTarget()=vsq_56
}

predicate func_17(Variable vsq_56, VariableAccess target_17) {
	target_17.getTarget()=vsq_56
}

predicate func_19(Variable vctx_55, Variable vsq_56, AssignExpr target_19) {
	target_19.getLValue().(VariableAccess).getTarget()=vsq_56
	and target_19.getRValue().(PointerFieldAccess).getTarget().getName()="sq_data"
	and target_19.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_55
}

predicate func_20(Variable vsq_56, ExprStmt target_24, NotExpr target_20) {
	target_20.getOperand().(PointerFieldAccess).getTarget().getName()="thread"
	and target_20.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsq_56
	and target_20.getParent().(IfStmt).getThen()=target_24
}

predicate func_21(Variable vsq_56, AssignExpr target_21) {
	target_21.getLValue().(VariableAccess).getTarget()=vsq_56
	and target_21.getRValue().(Literal).getValue()="0"
}

predicate func_22(Variable vsq_56, ConditionalExpr target_22) {
	target_22.getCondition().(VariableAccess).getTarget()=vsq_56
	and target_22.getThen() instanceof FunctionCall
	and target_22.getElse() instanceof UnaryMinusExpr
	and target_22.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_22.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_22.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="SqThread:\t%d\n"
}

predicate func_23(Variable vsq_56, ConditionalExpr target_23) {
	target_23.getCondition().(VariableAccess).getTarget()=vsq_56
	and target_23.getThen() instanceof FunctionCall
	and target_23.getElse() instanceof UnaryMinusExpr
	and target_23.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_23.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_23.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="SqThreadCpu:\t%d\n"
}

predicate func_24(Function func, ExprStmt target_24) {
	target_24.getExpr() instanceof AssignExpr
	and target_24.getEnclosingFunction() = func
}

from Function func, Variable vctx_55, Variable vsq_56, UnaryMinusExpr target_0, DeclStmt target_1, PointerFieldAccess target_11, PointerFieldAccess target_12, FunctionCall target_13, UnaryMinusExpr target_14, FunctionCall target_15, VariableAccess target_16, VariableAccess target_17, AssignExpr target_19, NotExpr target_20, AssignExpr target_21, ConditionalExpr target_22, ConditionalExpr target_23, ExprStmt target_24
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_4(vsq_56, target_24)
and not func_5(vsq_56)
and not func_8(vsq_56)
and func_11(vctx_55, vsq_56, target_11)
and func_12(vsq_56, target_24, target_12)
and func_13(vsq_56, target_13)
and func_14(func, target_14)
and func_15(vsq_56, target_15)
and func_16(vsq_56, target_16)
and func_17(vsq_56, target_17)
and func_19(vctx_55, vsq_56, target_19)
and func_20(vsq_56, target_24, target_20)
and func_21(vsq_56, target_21)
and func_22(vsq_56, target_22)
and func_23(vsq_56, target_23)
and func_24(func, target_24)
and vctx_55.getType().hasName("io_ring_ctx *")
and vsq_56.getType().hasName("io_sq_data *")
and vctx_55.(LocalVariable).getFunction() = func
and vsq_56.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
