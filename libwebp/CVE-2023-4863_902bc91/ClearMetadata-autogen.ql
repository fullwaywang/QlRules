/**
 * @name libwebp-902bc9190331343b2017211debcec8d2ab87e17a-ClearMetadata
 * @id cpp/libwebp/902bc9190331343b2017211debcec8d2ab87e17a/ClearMetadata
 * @description libwebp-902bc9190331343b2017211debcec8d2ab87e17a-src/dec/vp8l_dec.c-ClearMetadata CVE-2023-4863
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vhdr_1351, FunctionCall target_0) {
		target_0.getTarget().hasName("WebPSafeFree")
		and not target_0.getTarget().hasName("VP8LHuffmanTablesDeallocate")
		and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="huffman_tables_"
		and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdr_1351
}

predicate func_1(Parameter vhdr_1351, ExprStmt target_3, ExprStmt target_4) {
	exists(AddressOfExpr target_1 |
		target_1.getOperand().(PointerFieldAccess).getTarget().getName()="huffman_tables_"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdr_1351
		and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vhdr_1351, VariableAccess target_2) {
		target_2.getTarget()=vhdr_1351
		and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Parameter vhdr_1351, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("WebPSafeFree")
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="huffman_image_"
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdr_1351
}

predicate func_4(Parameter vhdr_1351, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("VP8LHtreeGroupsFree")
		and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="htree_groups_"
		and target_4.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdr_1351
}

from Function func, Parameter vhdr_1351, FunctionCall target_0, VariableAccess target_2, ExprStmt target_3, ExprStmt target_4
where
func_0(vhdr_1351, target_0)
and not func_1(vhdr_1351, target_3, target_4)
and func_2(vhdr_1351, target_2)
and func_3(vhdr_1351, target_3)
and func_4(vhdr_1351, target_4)
and vhdr_1351.getType().hasName("VP8LMetadata *const")
and vhdr_1351.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
