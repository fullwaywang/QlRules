/**
 * @name linux-de5494af4815a4c9328536c72741229b7de88e7f-mbochs_remove
 * @id cpp/linux/de5494af4815a4c9328536c72741229b7de88e7f/mbochs-remove
 * @description linux-de5494af4815a4c9328536c72741229b7de88e7f-samples/vfio-mdev/mbochs.c-mbochs_remove CVE-2021-3736
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmdev_state_568, ExprStmt target_4, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("vfio_unregister_group_dev")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="vdev"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_state_568
	and target_4.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vmdev_state_568, AddressOfExpr target_6) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("atomic_add")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="mbytes"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="type"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_state_568
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("atomic_t")
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vmdev_state_568, Variable vmbochs_used_mbytes, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="mbytes"
	and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="type"
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_state_568
	and target_2.getParent().(AssignSubExpr).getRValue() = target_2
	and target_2.getParent().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vmbochs_used_mbytes
}

predicate func_3(Variable vmdev_state_568, Variable vmbochs_used_mbytes, AssignSubExpr target_3) {
	target_3.getLValue().(VariableAccess).getTarget()=vmbochs_used_mbytes
	and target_3.getRValue().(PointerFieldAccess).getTarget().getName()="mbytes"
	and target_3.getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="type"
	and target_3.getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_state_568
}

predicate func_4(Function func, ExprStmt target_4) {
	target_4.getExpr() instanceof AssignSubExpr
	and target_4.getEnclosingFunction() = func
}

predicate func_6(Variable vmdev_state_568, AddressOfExpr target_6) {
	target_6.getOperand().(PointerFieldAccess).getTarget().getName()="vdev"
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmdev_state_568
}

from Function func, Variable vmdev_state_568, Variable vmbochs_used_mbytes, ExprStmt target_0, PointerFieldAccess target_2, AssignSubExpr target_3, ExprStmt target_4, AddressOfExpr target_6
where
func_0(vmdev_state_568, target_4, target_0)
and not func_1(vmdev_state_568, target_6)
and func_2(vmdev_state_568, vmbochs_used_mbytes, target_2)
and func_3(vmdev_state_568, vmbochs_used_mbytes, target_3)
and func_4(func, target_4)
and func_6(vmdev_state_568, target_6)
and vmdev_state_568.getType().hasName("mdev_state *")
and vmbochs_used_mbytes.getType().hasName("int")
and vmdev_state_568.(LocalVariable).getFunction() = func
and not vmbochs_used_mbytes.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
