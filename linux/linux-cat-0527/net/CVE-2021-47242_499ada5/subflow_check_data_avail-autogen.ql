/**
 * @name linux-499ada5073361c631f2a3c4a8aed44d53b6f82ec-subflow_check_data_avail
 * @id cpp/linux/499ada5073361c631f2a3c4a8aed44d53b6f82ec/subflow-check-data-avail
 * @description linux-499ada5073361c631f2a3c4a8aed44d53b6f82ec-net/mptcp/subflow.c-subflow_check_data_avail CVE-2021-47242
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vssk_995, LogicalOrExpr target_1, ExprStmt target_0) {
	target_0.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="sk_error_report"
	and target_0.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vssk_995
	and target_0.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vssk_995
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_1(Function func, LogicalOrExpr target_1) {
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="mp_join"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mptcp_subflow_context *")
	and target_1.getRightOperand().(PointerFieldAccess).getTarget().getName()="fully_established"
	and target_1.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mptcp_subflow_context *")
	and target_1.getEnclosingFunction() = func
}

from Function func, Parameter vssk_995, ExprStmt target_0, LogicalOrExpr target_1
where
func_0(vssk_995, target_1, target_0)
and func_1(func, target_1)
and vssk_995.getType().hasName("sock *")
and vssk_995.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
