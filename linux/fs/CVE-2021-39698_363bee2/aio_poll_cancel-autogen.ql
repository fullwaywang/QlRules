/**
 * @name linux-363bee27e258-aio_poll_cancel
 * @id cpp/linux/363bee27e258/aio-poll-cancel
 * @description linux-363bee27e258-aio_poll_cancel CVE-2021-39698
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreq_1658, ExprStmt target_6) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="work_scheduled"
		and target_0.getQualifier().(VariableAccess).getTarget()=vreq_1658
		and target_6.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vreq_1658, AddressOfExpr target_9) {
	exists(AssignExpr target_1 |
		target_1.getLValue().(PointerFieldAccess).getTarget().getName()="work_scheduled"
		and target_1.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1658
		and target_1.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_9.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vreq_1658, VariableAccess target_2) {
		target_2.getTarget()=vreq_1658
		and target_2.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_3(Variable vreq_1658, VariableAccess target_3) {
		target_3.getTarget()=vreq_1658
		and target_3.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_4(Variable vreq_1658, BlockStmt target_10, FunctionCall target_4) {
		target_4.getTarget().hasName("list_empty")
		and target_4.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="entry"
		and target_4.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="wait"
		and target_4.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1658
		and target_4.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_10
}

predicate func_5(Variable vreq_1658, FunctionCall target_5) {
		target_5.getTarget().hasName("list_del_init")
		and target_5.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="entry"
		and target_5.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="wait"
		and target_5.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1658
}

predicate func_6(Variable vreq_1658, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cancelled"
		and target_6.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1658
}

predicate func_9(Variable vreq_1658, AddressOfExpr target_9) {
		target_9.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="head"
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_1658
		and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
}

predicate func_10(Function func, BlockStmt target_10) {
		target_10.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
		and target_10.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("schedule_work")
		and target_10.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="work"
		and target_10.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="poll"
		and target_10.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_10.getEnclosingFunction() = func
}

from Function func, Variable vreq_1658, VariableAccess target_2, VariableAccess target_3, FunctionCall target_4, FunctionCall target_5, ExprStmt target_6, AddressOfExpr target_9, BlockStmt target_10
where
not func_0(vreq_1658, target_6)
and not func_1(vreq_1658, target_9)
and func_2(vreq_1658, target_2)
and func_3(vreq_1658, target_3)
and func_4(vreq_1658, target_10, target_4)
and func_5(vreq_1658, target_5)
and func_6(vreq_1658, target_6)
and func_9(vreq_1658, target_9)
and func_10(func, target_10)
and vreq_1658.getType().hasName("poll_iocb *")
and vreq_1658.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
