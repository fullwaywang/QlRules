/**
 * @name linux-32671e3799ca2e4590773fd0e63aaa4229e50c06-perf_group_attach
 * @id cpp/linux/32671e3799ca2e4590773fd0e63aaa4229e50c06/perf-group-attach
 * @description linux-32671e3799ca2e4590773fd0e63aaa4229e50c06-perf_group_attach CVE-2023-5717
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vgroup_leader_1935, ExprStmt target_1, ExprStmt target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="group_generation"
		and target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_leader_1935
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vgroup_leader_1935, ExprStmt target_1) {
		target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nr_siblings"
		and target_1.getExpr().(PostfixIncrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_leader_1935
}

predicate func_2(Variable vgroup_leader_1935, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("perf_event__header_size")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vgroup_leader_1935
}

from Function func, Variable vgroup_leader_1935, ExprStmt target_1, ExprStmt target_2
where
not func_0(vgroup_leader_1935, target_1, target_2, func)
and func_1(vgroup_leader_1935, target_1)
and func_2(vgroup_leader_1935, target_2)
and vgroup_leader_1935.getType().hasName("perf_event *")
and vgroup_leader_1935.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
