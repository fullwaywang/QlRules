/**
 * @name linux-1be7107fbe18eed3e319a6c3e83c78254b693acb-find_start_end
 * @id cpp/linux/1be7107fbe18eed3e319a6c3e83c78254b693acb/find-start-end
 * @description linux-1be7107fbe18eed3e319a6c3e83c78254b693acb-arch/x86/kernel/sys_x86_64.c-find_start_end CVE-2017-1000364
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vflags_103, VariableAccess target_0) {
	target_0.getTarget()=vflags_103
	and vflags_103.getIndex() = 0
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="64"
	and not target_1.getValue()="0"
	and target_1.getParent().(BitwiseAndExpr).getParent().(LogicalAndExpr).getRightOperand() instanceof BitwiseAndExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_3(BlockStmt target_15, Function func) {
exists(RelationalOperation target_3 |
	 (target_3 instanceof GEExpr or target_3 instanceof LEExpr)
	and target_3.getLesserOperand().(VariableAccess).getType().hasName("unsigned long")
	and target_3.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="vm_start"
	and target_3.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("vm_area_struct *")
	and target_3.getParent().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_3.getParent().(LogicalAndExpr).getRightOperand() instanceof BitwiseAndExpr
	and target_3.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_15
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Function func) {
exists(AssignExpr target_4 |
	target_4.getLValue().(VariableAccess).getType().hasName("vm_area_struct *")
	and target_4.getRValue().(Literal).getValue()="0"
	and target_4.getEnclosingFunction() = func)
}

predicate func_6(Parameter vflags_103, BlockStmt target_15, NotExpr target_6) {
	target_6.getOperand().(FunctionCall).getTarget().hasName("in_compat_syscall")
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_103
	and target_6.getParent().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getRightOperand() instanceof Literal
	and target_6.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_15
}

/*predicate func_7(Parameter vflags_103, BlockStmt target_15, BitwiseAndExpr target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget()=vflags_103
	and target_7.getRightOperand() instanceof Literal
	and target_7.getParent().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("in_compat_syscall")
	and target_7.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_15
}

*/
predicate func_8(Parameter vbegin_103, AssignExpr target_8) {
	target_8.getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbegin_103
	and target_8.getRValue().(HexLiteral).getValue()="1073741824"
}

predicate func_9(Parameter vend_104, LogicalAndExpr target_16, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vend_104
	and target_9.getExpr().(AssignExpr).getRValue().(HexLiteral).getValue()="2147483648"
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
}

predicate func_10(Parameter vbegin_103, LogicalAndExpr target_16, IfStmt target_10) {
	target_10.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_10.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_10.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="4194304"
	and target_10.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbegin_103
	and target_10.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("randomize_page")
	and target_10.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbegin_103
	and target_10.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(HexLiteral).getValue()="33554432"
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
}

/*predicate func_11(Parameter vbegin_103, BitwiseAndExpr target_17, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbegin_103
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("randomize_page")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbegin_103
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(HexLiteral).getValue()="33554432"
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

*/
predicate func_12(Parameter vbegin_103, Function func, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vbegin_103
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_mmap_base")
	and target_12.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(Literal).getValue()="1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Parameter vend_104, Function func, ExprStmt target_13) {
	target_13.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vend_104
	and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("in_compat_syscall")
	and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("tasksize_32bit")
	and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("tasksize_64bit")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
}

predicate func_14(Function func, ReturnStmt target_14) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_15(Function func, BlockStmt target_15) {
	target_15.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
	and target_15.getStmt(1) instanceof ExprStmt
	and target_15.getStmt(2) instanceof IfStmt
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Function func, LogicalAndExpr target_16) {
	target_16.getLeftOperand() instanceof NotExpr
	and target_16.getRightOperand() instanceof BitwiseAndExpr
	and target_16.getEnclosingFunction() = func
}

predicate func_17(Function func, BitwiseAndExpr target_17) {
	target_17.getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_17.getLeftOperand().(PointerFieldAccess).getQualifier() instanceof FunctionCall
	and target_17.getRightOperand() instanceof Literal
	and target_17.getEnclosingFunction() = func
}

from Function func, Parameter vbegin_103, Parameter vend_104, Parameter vflags_103, VariableAccess target_0, Literal target_1, NotExpr target_6, AssignExpr target_8, ExprStmt target_9, IfStmt target_10, ExprStmt target_12, ExprStmt target_13, ReturnStmt target_14, BlockStmt target_15, LogicalAndExpr target_16, BitwiseAndExpr target_17
where
func_0(vflags_103, target_0)
and func_1(func, target_1)
and not func_3(target_15, func)
and not func_4(func)
and func_6(vflags_103, target_15, target_6)
and func_8(vbegin_103, target_8)
and func_9(vend_104, target_16, target_9)
and func_10(vbegin_103, target_16, target_10)
and func_12(vbegin_103, func, target_12)
and func_13(vend_104, func, target_13)
and func_14(func, target_14)
and func_15(func, target_15)
and func_16(func, target_16)
and func_17(func, target_17)
and vbegin_103.getType().hasName("unsigned long *")
and vend_104.getType().hasName("unsigned long *")
and vflags_103.getType().hasName("unsigned long")
and vbegin_103.getFunction() = func
and vend_104.getFunction() = func
and vflags_103.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
