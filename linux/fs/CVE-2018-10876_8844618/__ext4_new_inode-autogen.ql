/**
 * @name linux-8844618d8aa7a9973e7b527d038a2a589665002c-__ext4_new_inode
 * @id cpp/linux/8844618d8aa7a9973e7b527d038a2a589665002c/--ext4-new-inode
 * @description linux-8844618d8aa7a9973e7b527d038a2a589665002c-fs/ext4/ialloc.c-__ext4_new_inode CVE-2018-10876
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsb_736, BlockStmt target_2, ExprStmt target_3, ExprStmt target_4) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(FunctionCall).getTarget().hasName("ext4_has_group_desc_csum")
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_736
	and target_0.getRightOperand() instanceof BitwiseAndExpr
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vgdp_742, BlockStmt target_2, BitwiseAndExpr target_1) {
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="bg_flags"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgdp_742
	and target_1.getRightOperand().(Literal).getValue()="2"
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vsb_736, Variable vgdp_742, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getTarget().getName()="bg_flags"
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgdp_742
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="-3"
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ext4_free_group_clusters_set")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_736
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vgdp_742
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("ext4_free_clusters_after_init")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_736
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("ext4_group_t")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vgdp_742
}

predicate func_3(Variable vsb_736, LogicalAndExpr target_5, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("ext4_lock_group")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_736
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("ext4_group_t")
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vsb_736, Variable vgdp_742, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("ext4_free_group_clusters_set")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_736
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vgdp_742
	and target_4.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("ext4_free_clusters_after_init")
	and target_4.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_736
	and target_4.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("ext4_group_t")
	and target_4.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vgdp_742
}

predicate func_5(Variable vsb_736, Variable vgdp_742, LogicalAndExpr target_5) {
	target_5.getLeftOperand().(FunctionCall).getTarget().hasName("ext4_has_group_desc_csum")
	and target_5.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_736
	and target_5.getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bg_flags"
	and target_5.getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgdp_742
	and target_5.getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
}

from Function func, Variable vsb_736, Variable vgdp_742, BitwiseAndExpr target_1, BlockStmt target_2, ExprStmt target_3, ExprStmt target_4, LogicalAndExpr target_5
where
not func_0(vsb_736, target_2, target_3, target_4)
and func_1(vgdp_742, target_2, target_1)
and func_2(vsb_736, vgdp_742, target_2)
and func_3(vsb_736, target_5, target_3)
and func_4(vsb_736, vgdp_742, target_4)
and func_5(vsb_736, vgdp_742, target_5)
and vsb_736.getType().hasName("super_block *")
and vgdp_742.getType().hasName("ext4_group_desc *")
and vsb_736.(LocalVariable).getFunction() = func
and vgdp_742.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
