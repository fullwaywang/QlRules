/**
 * @name linux-aef855df7e1bbd5aa4484851561211500b22707e-fs_any_create_groups
 * @id cpp/linux/aef855df7e1bbd5aa4484851561211500b22707e/fs-any-create-groups
 * @description linux-aef855df7e1bbd5aa4484851561211500b22707e-drivers/net/ethernet/mellanox/mlx5/core/en/fs_tt_redirect.c-fs_any_create_groups CVE-2023-52667
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vft_426, LogicalOrExpr target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="g"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_426
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vft_426, LogicalOrExpr target_1) {
	target_1.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("u32 *")
	and target_1.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="g"
	and target_1.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_426
}

predicate func_2(Parameter vft_426, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="g"
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_426
}

predicate func_3(Parameter vft_426, Function func, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="g"
	and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_426
	and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="num_groups"
	and target_3.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_426
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mlx5_create_flow_group")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="t"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_426
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32 *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

from Function func, Parameter vft_426, LogicalOrExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vft_426, target_1, target_2, target_3)
and func_1(vft_426, target_1)
and func_2(vft_426, target_2)
and func_3(vft_426, func, target_3)
and vft_426.getType().hasName("mlx5e_flow_table *")
and vft_426.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
