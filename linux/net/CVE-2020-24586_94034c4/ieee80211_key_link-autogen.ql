/**
 * @name linux-94034c40ab4a3fcf581fbc7f8fdf4e29943c4a24-ieee80211_key_link
 * @id cpp/linux/94034c40ab4a3fcf581fbc7f8fdf4e29943c4a24/ieee80211-key-link
 * @description linux-94034c40ab4a3fcf581fbc7f8fdf4e29943c4a24-net/mac80211/key.c-ieee80211_key_link CVE-2020-24587
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkey_798, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="color"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_798
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("atomic_inc_return")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("atomic_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("increment_tailroom_need_count")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ieee80211_sub_if_data *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vkey_798, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sta"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_798
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("sta_info *")
}

predicate func_3(Parameter vkey_798, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ieee80211_key_replace")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ieee80211_sub_if_data *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sta_info *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("bool")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("ieee80211_key *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vkey_798
}

from Function func, Parameter vkey_798, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vkey_798, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vkey_798, target_2)
and func_3(vkey_798, target_3)
and vkey_798.getType().hasName("ieee80211_key *")
and vkey_798.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
