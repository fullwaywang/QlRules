/**
 * @name linux-4edbe133f851c9e3a2f2a1db367e826b01e72594-get_mountpoint
 * @id cpp/linux/4edbe133f851c9e3a2f2a1db367e826b01e72594/get-mountpoint
 * @description linux-4edbe133f851c9e3a2f2a1db367e826b01e72594-fs/namespace.c-get_mountpoint CVE-2020-12114
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdentry_705, ExprStmt target_2, FunctionCall target_3) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("dget")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vdentry_705
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="m_dentry"
		and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mountpoint *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
		and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdentry_705, VariableAccess target_1) {
		target_1.getTarget()=vdentry_705
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="m_dentry"
		and target_1.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mountpoint *")
}

predicate func_2(Parameter vdentry_705, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("d_set_mounted")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdentry_705
}

predicate func_3(Parameter vdentry_705, FunctionCall target_3) {
		target_3.getTarget().hasName("mp_hash")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vdentry_705
}

from Function func, Parameter vdentry_705, VariableAccess target_1, ExprStmt target_2, FunctionCall target_3
where
not func_0(vdentry_705, target_2, target_3)
and func_1(vdentry_705, target_1)
and func_2(vdentry_705, target_2)
and func_3(vdentry_705, target_3)
and vdentry_705.getType().hasName("dentry *")
and vdentry_705.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
