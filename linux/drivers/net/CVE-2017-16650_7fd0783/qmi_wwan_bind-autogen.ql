/**
 * @name linux-7fd078337201cf7468f53c3d9ef81ff78cb6df3b-qmi_wwan_bind
 * @id cpp/linux/7fd078337201cf7468f53c3d9ef81ff78cb6df3b/qmi-wwan-bind
 * @description linux-7fd078337201cf7468f53c3d9ef81ff78cb6df3b-drivers/net/usb/qmi_wwan.c-qmi_wwan_bind CVE-2017-16650
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcdc_ether_649, BlockStmt target_2, IfStmt target_3) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vcdc_ether_649
	and target_0.getRightOperand().(PointerFieldAccess).getTarget().getName()="wMaxSegmentSize"
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcdc_ether_649
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getLeftOperand().(VariableAccess).getLocation().isBefore(target_3.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Variable vcdc_ether_649, BlockStmt target_2, VariableAccess target_1) {
	target_1.getTarget()=vcdc_ether_649
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vcdc_ether_649, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="hard_mtu"
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("usbnet *")
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="wMaxSegmentSize"
	and target_2.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcdc_ether_649
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("usbnet_get_ethernet_addr")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("usbnet *")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="iMACAddress"
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcdc_ether_649
}

predicate func_3(Variable vcdc_ether_649, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget()=vcdc_ether_649
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="hard_mtu"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("usbnet *")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="wMaxSegmentSize"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcdc_ether_649
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("usbnet_get_ethernet_addr")
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("usbnet *")
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="iMACAddress"
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcdc_ether_649
}

from Function func, Variable vcdc_ether_649, VariableAccess target_1, BlockStmt target_2, IfStmt target_3
where
not func_0(vcdc_ether_649, target_2, target_3)
and func_1(vcdc_ether_649, target_2, target_1)
and func_2(vcdc_ether_649, target_2)
and func_3(vcdc_ether_649, target_3)
and vcdc_ether_649.getType().hasName("usb_cdc_ether_desc *")
and vcdc_ether_649.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
