/**
 * @name linux-ba953a9d89a00c078b85f4b190bc1dde66fe16b5-pfkey_register
 * @id cpp/linux/ba953a9d89a00c078b85f4b190bc1dde66fe16b5/pfkey-register
 * @description linux-ba953a9d89a00c078b85f4b190bc1dde66fe16b5-net/key/af_key.c-pfkey_register CVE-2022-3028
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(IfStmt target_3, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation()))
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("xfrm_probe_algs")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, IfStmt target_3) {
	target_3.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sadb_msg_satype"
	and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const sadb_msg *")
	and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getTarget().getName()="registered"
	and target_3.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(AssignAndExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("pfkey_sock *")
	and target_3.getEnclosingFunction() = func
}

from Function func, ExprStmt target_2, IfStmt target_3
where
not func_0(target_2, func)
and not func_1(target_3, func)
and func_2(func, target_2)
and func_3(func, target_3)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
