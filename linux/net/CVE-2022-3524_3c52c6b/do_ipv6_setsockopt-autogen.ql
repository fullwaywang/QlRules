/**
 * @name linux-3c52c6bb831f6335c176a0fc7214e26f43adbd11-do_ipv6_setsockopt
 * @id cpp/linux/3c52c6bb831f6335c176a0fc7214e26f43adbd11/do-ipv6-setsockopt
 * @description linux-3c52c6bb831f6335c176a0fc7214e26f43adbd11-net/ipv6/ipv6_sockglue.c-do_ipv6_setsockopt CVE-2022-3524
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BlockStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="skc_family"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="10"
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(GotoStmt).getName() ="unlock"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, BlockStmt target_1) {
	target_1.getStmt(0).(SwitchStmt).getExpr().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getStmt(0).(SwitchStmt).getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="1"
	and target_1.getStmt(0).(SwitchStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_1.getStmt(0).(SwitchStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getStmt(0).(SwitchStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getValue()="4"
	and target_1.getStmt(0).(SwitchStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="e_inval"
	and target_1.getEnclosingFunction() = func
}

from Function func, BlockStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
