/**
 * @name linux-273d2c67c3e179adb1e74f403d1e9a06e3f841b5-may_setgroups
 * @id cpp/linux/273d2c67c3e179adb1e74f403d1e9a06e3f841b5/may-setgroups
 * @description linux-273d2c67c3e179adb1e74f403d1e9a06e3f841b5-kernel/groups.c-may_setgroups CVE-2014-8989
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vuser_ns_218, FunctionCall target_1) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof FunctionCall
	and target_0.getRightOperand().(FunctionCall).getTarget().hasName("userns_may_setgroups")
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vuser_ns_218
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vuser_ns_218, FunctionCall target_1) {
	target_1.getTarget().hasName("ns_capable")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vuser_ns_218
	and target_1.getArgument(1).(Literal).getValue()="6"
}

from Function func, Variable vuser_ns_218, FunctionCall target_1
where
not func_0(vuser_ns_218, target_1)
and func_1(vuser_ns_218, target_1)
and vuser_ns_218.getType().hasName("user_namespace *")
and vuser_ns_218.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
