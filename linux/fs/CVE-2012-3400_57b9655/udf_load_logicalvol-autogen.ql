/**
 * @name linux-57b9655d-udf_load_logicalvol
 * @id cpp/linux/57b9655d/udf-load-logicalvol
 * @description linux-57b9655d-fs/udf/super.c-udf_load_logicalvol CVE-2012-3400
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsb_1324, BlockStmt target_5, ExprStmt target_6, ExprStmt target_7) {
	exists(SubExpr target_0 |
		target_0.getLeftOperand().(PointerFieldAccess).getTarget().getName()="s_blocksize"
		and target_0.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsb_1324
		and target_0.getRightOperand() instanceof SizeofExprOperator
		and target_0.getParent().(GTExpr).getGreaterOperand() instanceof AddExpr
		and target_0.getParent().(GTExpr).getLesserOperand().(PointerFieldAccess).getTarget().getName()="s_blocksize"
		and target_0.getParent().(GTExpr).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsb_1324
		and target_0.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_5
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, SizeofExprOperator target_1) {
		target_1.getValue()="440"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vsb_1324, BlockStmt target_5, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="s_blocksize"
		and target_2.getQualifier().(VariableAccess).getTarget()=vsb_1324
		and target_2.getParent().(GTExpr).getGreaterOperand() instanceof AddExpr
		and target_2.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_3(Variable vtable_len_1334, VariableAccess target_3) {
		target_3.getTarget()=vtable_len_1334
}

predicate func_4(Parameter vsb_1324, Variable vtable_len_1334, BlockStmt target_5, AddExpr target_4) {
		target_4.getAnOperand() instanceof SizeofExprOperator
		and target_4.getAnOperand().(VariableAccess).getTarget()=vtable_len_1334
		and target_4.getParent().(GTExpr).getLesserOperand().(PointerFieldAccess).getTarget().getName()="s_blocksize"
		and target_4.getParent().(GTExpr).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsb_1324
		and target_4.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Parameter vsb_1324, Variable vtable_len_1334, BlockStmt target_5) {
		target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_udf_err")
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_1324
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="error loading logical volume descriptor: Partition table too long (%u > %lu)\n"
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vtable_len_1334
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="s_blocksize"
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsb_1324
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(SubExpr).getRightOperand().(SizeofExprOperator).getValue()="440"
}

predicate func_6(Parameter vsb_1324, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("buffer_head *")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("udf_read_tagged")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_1324
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sector_t")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("sector_t")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("uint16_t")
}

predicate func_7(Parameter vsb_1324, Variable vtable_len_1334, ExprStmt target_7) {
		target_7.getExpr().(FunctionCall).getTarget().hasName("_udf_err")
		and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_1324
		and target_7.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
		and target_7.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="error loading logical volume descriptor: Partition table too long (%u > %lu)\n"
		and target_7.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vtable_len_1334
		and target_7.getExpr().(FunctionCall).getArgument(4).(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="s_blocksize"
		and target_7.getExpr().(FunctionCall).getArgument(4).(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsb_1324
		and target_7.getExpr().(FunctionCall).getArgument(4).(SubExpr).getRightOperand().(SizeofExprOperator).getValue()="440"
}

from Function func, Parameter vsb_1324, Variable vtable_len_1334, SizeofExprOperator target_1, PointerFieldAccess target_2, VariableAccess target_3, AddExpr target_4, BlockStmt target_5, ExprStmt target_6, ExprStmt target_7
where
not func_0(vsb_1324, target_5, target_6, target_7)
and func_1(func, target_1)
and func_2(vsb_1324, target_5, target_2)
and func_3(vtable_len_1334, target_3)
and func_4(vsb_1324, vtable_len_1334, target_5, target_4)
and func_5(vsb_1324, vtable_len_1334, target_5)
and func_6(vsb_1324, target_6)
and func_7(vsb_1324, vtable_len_1334, target_7)
and vsb_1324.getType().hasName("super_block *")
and vtable_len_1334.getType().hasName("unsigned int")
and vsb_1324.getFunction() = func
and vtable_len_1334.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
