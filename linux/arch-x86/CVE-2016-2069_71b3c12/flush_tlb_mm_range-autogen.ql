/**
 * @name linux-71b3c126e61177eb693423f2e18a1914205b165e-flush_tlb_mm_range
 * @id cpp/linux/71b3c126e61177eb693423f2e18a1914205b165e/flush-tlb-mm-range
 * @description linux-71b3c126e61177eb693423f2e18a1914205b165e-arch/x86/mm/tlb.c-flush_tlb_mm_range CVE-2016-2069
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_4, Function func) {
exists(AsmStmt target_0 |
	target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(NotExpr target_5, Function func) {
exists(AsmStmt target_1 |
	target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(NotExpr target_5, Function func, GotoStmt target_2) {
	target_2.getName() ="out"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_2.getEnclosingFunction() = func
}

predicate func_3(EqualityOperation target_4, Function func, GotoStmt target_3) {
	target_3.getName() ="out"
	and target_3.getParent().(IfStmt).getCondition()=target_4
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, EqualityOperation target_4) {
	target_4.getLeftOperand().(PointerFieldAccess).getTarget().getName()="active_mm"
	and target_4.getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_4.getRightOperand().(VariableAccess).getTarget().getType().hasName("mm_struct *")
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, NotExpr target_5) {
	target_5.getOperand().(PointerFieldAccess).getTarget().getName()="mm"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_5.getEnclosingFunction() = func
}

from Function func, GotoStmt target_2, GotoStmt target_3, EqualityOperation target_4, NotExpr target_5
where
not func_0(target_4, func)
and not func_1(target_5, func)
and func_2(target_5, func, target_2)
and func_3(target_4, func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
