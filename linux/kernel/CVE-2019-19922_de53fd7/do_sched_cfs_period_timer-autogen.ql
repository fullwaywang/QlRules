/**
 * @name linux-de53fd7aedb100f03e5d2231cfce0e4993282425-do_sched_cfs_period_timer
 * @id cpp/linux/de53fd7aedb100f03e5d2231cfce0e4993282425/do-sched-cfs-period-timer
 * @description linux-de53fd7aedb100f03e5d2231cfce0e4993282425-kernel/sched/fair.c-do_sched_cfs_period_timer CVE-2019-19922
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcfs_b_4710, Variable vruntime_4712, Variable vruntime_expires_4712, VariableAccess target_0) {
		target_0.getTarget()=vruntime_4712
		and target_0.getParent().(AssignExpr).getLValue() = target_0
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("distribute_cfs_runtime")
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcfs_b_4710
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vruntime_4712
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vruntime_expires_4712
}

predicate func_2(Parameter vcfs_b_4710, Variable vruntime_expires_4712, Function func, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vruntime_expires_4712
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="runtime_expires"
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfs_b_4710
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

/*predicate func_3(Parameter vcfs_b_4710, Variable vruntime_expires_4712, VariableAccess target_3) {
		target_3.getTarget()=vruntime_expires_4712
		and target_3.getParent().(AssignExpr).getLValue() = target_3
		and target_3.getParent().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="runtime_expires"
		and target_3.getParent().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcfs_b_4710
}

*/
/*predicate func_4(Parameter vcfs_b_4710, PointerFieldAccess target_4) {
		target_4.getTarget().getName()="runtime_expires"
		and target_4.getQualifier().(VariableAccess).getTarget()=vcfs_b_4710
}

*/
predicate func_5(Parameter vcfs_b_4710, Variable vruntime_4712, Variable vruntime_expires_4712, AssignExpr target_5) {
		target_5.getLValue().(VariableAccess).getTarget()=vruntime_4712
		and target_5.getRValue().(FunctionCall).getTarget().hasName("distribute_cfs_runtime")
		and target_5.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcfs_b_4710
		and target_5.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vruntime_4712
		and target_5.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vruntime_expires_4712
}

/*predicate func_6(Parameter vcfs_b_4710, Variable vruntime_4712, Variable vruntime_expires_4712, VariableAccess target_6) {
		target_6.getTarget()=vruntime_expires_4712
		and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("distribute_cfs_runtime")
		and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcfs_b_4710
		and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vruntime_4712
}

*/
from Function func, Parameter vcfs_b_4710, Variable vruntime_4712, Variable vruntime_expires_4712, VariableAccess target_0, ExprStmt target_2, AssignExpr target_5
where
func_0(vcfs_b_4710, vruntime_4712, vruntime_expires_4712, target_0)
and func_2(vcfs_b_4710, vruntime_expires_4712, func, target_2)
and func_5(vcfs_b_4710, vruntime_4712, vruntime_expires_4712, target_5)
and vcfs_b_4710.getType().hasName("cfs_bandwidth *")
and vruntime_4712.getType().hasName("u64")
and vruntime_expires_4712.getType().hasName("u64")
and vcfs_b_4710.getFunction() = func
and vruntime_4712.(LocalVariable).getFunction() = func
and vruntime_expires_4712.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
