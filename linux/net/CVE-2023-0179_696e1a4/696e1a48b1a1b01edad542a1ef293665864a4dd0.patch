commit 696e1a48b1a1b01edad542a1ef293665864a4dd0
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed Jan 11 17:07:33 2023 +0100

    netfilter: nft_payload: incorrect arithmetics when fetching VLAN header bits
    
    If the offset + length goes over the ethernet + vlan header, then the
    length is adjusted to copy the bytes that are within the boundaries of
    the vlan_ethhdr scratchpad area. The remaining bytes beyond ethernet +
    vlan header are copied directly from the skbuff data area.
    
    Fix incorrect arithmetic operator: subtract, not add, the size of the
    vlan header in case of double-tagged packets to adjust the length
    accordingly to address CVE-2023-0179.
    
    Reported-by: Davide Ornaghi <d.ornaghi97@gmail.com>
    Fixes: f6ae9f120dad ("netfilter: nft_payload: add C-VLAN support")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

diff --git a/net/netfilter/nft_payload.c b/net/netfilter/nft_payload.c
index 17b418a5a593..3a3c7746e88f 100644
--- a/net/netfilter/nft_payload.c
+++ b/net/netfilter/nft_payload.c
@@ -63,7 +63,7 @@ nft_payload_copy_vlan(u32 *d, const struct sk_buff *skb, u8 offset, u8 len)
 			return false;
 
 		if (offset + len > VLAN_ETH_HLEN + vlan_hlen)
-			ethlen -= offset + len - VLAN_ETH_HLEN + vlan_hlen;
+			ethlen -= offset + len - VLAN_ETH_HLEN - vlan_hlen;
 
 		memcpy(dst_u8, vlanh + offset - vlan_hlen, ethlen);
 
