/**
 * @name chromium-5e213507a2f0d6e3c96904a710407b01493670bd-blink__RuleFeatureSet__AddFeaturesToInvalidationSetsForLogicalCombinationInHas
 * @id cpp/chromium/5e213507a2f0d6e3c96904a710407b01493670bd/blinkrulefeaturesetaddfeaturestoinvalidationsetsforlogicalcombinationinhas
 * @description chromium-5e213507a2f0d6e3c96904a710407b01493670bd-third_party/blink/renderer/core/css/rule_feature_set.cc-blink__RuleFeatureSet__AddFeaturesToInvalidationSetsForLogicalCombinationInHas CVE-2023-4428
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsibling_features_1315, VariableAccess target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("SkipAddingAndGetLastInCompoundForLogicalCombinationInHas")
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("const CSSSelector *")
				and obj_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("const CSSSelector *")
				and obj_2.getArgument(3).(VariableAccess).getTarget().getType().hasName("InvalidationSetFeatures &")
				and obj_2.getArgument(4).(VariableAccess).getTarget().getType().hasName("RelationType")
				and obj_2.getArgument(5).(VariableAccess).getTarget().getType().hasName("AddFeaturesMethodForLogicalCombinationInHas")
			)
		)
	)
	and target_0.getTarget()=vsibling_features_1315
	and vsibling_features_1315.getIndex() = 2
}

predicate func_1(Parameter vsibling_features_1315, VariableAccess target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("AddFeaturesAndGetLastInCompoundForLogicalCombinationInHas")
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("const CSSSelector *")
				and obj_2.getArgument(1).(VariableAccess).getTarget().getType().hasName("const CSSSelector *")
				and obj_2.getArgument(3).(VariableAccess).getTarget().getType().hasName("InvalidationSetFeatures &")
				and obj_2.getArgument(4).(VariableAccess).getTarget().getType().hasName("RelationType")
				and obj_2.getArgument(5).(VariableAccess).getTarget().getType().hasName("AddFeaturesMethodForLogicalCombinationInHas")
			)
		)
	)
	and target_1.getTarget()=vsibling_features_1315
	and vsibling_features_1315.getIndex() = 2
}

predicate func_2(Parameter vsibling_features_1315, VariableAccess target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(ConditionalExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(ValueFieldAccess obj_4 | obj_4=obj_3.getCondition() |
						obj_4.getTarget().getName()="use_indirect_adjacent_combinator_for_updating_features"
						and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("AddFeaturesToInvalidationSetsForLogicalCombinationInHasContext")
					)
					and obj_3.getElse().(VariableAccess).getTarget().getType().hasName("RelationType")
				)
				and exists(ValueFieldAccess obj_5 | obj_5=obj_2.getArgument(1) |
					obj_5.getTarget().getName()="last_compound_in_adjacent_chain"
					and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("AddFeaturesToInvalidationSetsForLogicalCombinationInHasContext")
				)
				and obj_2.getTarget().hasName("UpdateFeaturesFromCombinatorForLogicalCombinationInHas")
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
				and obj_2.getArgument(2).(VariableAccess).getTarget().getType().hasName("InvalidationSetFeatures")
				and obj_2.getArgument(4).(VariableAccess).getTarget().getType().hasName("InvalidationSetFeatures &")
			)
		)
	)
	and target_2.getTarget()=vsibling_features_1315
	and vsibling_features_1315.getIndex() = 2
}

from Function func, Parameter vsibling_features_1315, VariableAccess target_0, VariableAccess target_1, VariableAccess target_2
where
func_0(vsibling_features_1315, target_0)
and func_1(vsibling_features_1315, target_1)
and func_2(vsibling_features_1315, target_2)
and vsibling_features_1315.getType().hasName("InvalidationSetFeatures *")
and vsibling_features_1315.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
