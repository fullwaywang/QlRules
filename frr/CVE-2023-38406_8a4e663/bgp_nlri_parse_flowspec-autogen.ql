/**
 * @name frr-8a4e6637fc0621e90daa4decb4ee887a0af8ee24-bgp_nlri_parse_flowspec
 * @id cpp/frr/8a4e6637fc0621e90daa4decb4ee887a0af8ee24/bgp-nlri-parse-flowspec
 * @description frr-8a4e6637fc0621e90daa4decb4ee887a0af8ee24-bgpd/bgp_flowspec.c-bgp_nlri_parse_flowspec CVE-2023-38406
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v_xref_145, Initializer target_0) {
		target_0.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="xref"
		and target_0.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v_xref_145
}

predicate func_1(Variable v_xref_189, Initializer target_1) {
		target_1.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="xref"
		and target_1.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v_xref_189
}

predicate func_2(Variable v_xref_203, Initializer target_2) {
		target_2.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="xref"
		and target_2.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v_xref_203
}

predicate func_3(Variable vpsize_104, ExprStmt target_7, RelationalOperation target_8) {
	exists(IfStmt target_3 |
		target_3.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vpsize_104
		and target_3.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_3.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_3.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("zlog_ref")
		and target_3.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Flowspec NLRI length 0 which makes no sense"
		and target_3.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-2"
		and target_7.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_3.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_3.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_8.getLesserOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_7(Variable vpsize_104, ExprStmt target_7) {
		target_7.getExpr().(FunctionCall).getTarget().hasName("zlog_ref")
		and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const xref_logmsg")
		and target_7.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Flowspec NLRI length inconsistent ( size %u seen)"
		and target_7.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vpsize_104
}

predicate func_8(Variable vpsize_104, RelationalOperation target_8) {
		 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
		and target_8.getLesserOperand().(FunctionCall).getTarget().hasName("bgp_fs_nlri_validate")
		and target_8.getLesserOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("uint8_t *")
		and target_8.getLesserOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpsize_104
		and target_8.getLesserOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("afi_t")
		and target_8.getGreaterOperand().(Literal).getValue()="0"
}

from Function func, Variable vpsize_104, Variable v_xref_145, Variable v_xref_189, Variable v_xref_203, Initializer target_0, Initializer target_1, Initializer target_2, ExprStmt target_7, RelationalOperation target_8
where
func_0(v_xref_145, target_0)
and func_1(v_xref_189, target_1)
and func_2(v_xref_203, target_2)
and not func_3(vpsize_104, target_7, target_8)
and func_7(vpsize_104, target_7)
and func_8(vpsize_104, target_8)
and vpsize_104.getType().hasName("int")
and v_xref_145.getType().hasName("const xref_logmsg")
and v_xref_189.getType().hasName("const xref_logmsg")
and v_xref_203.getType().hasName("const xref_logmsg")
and vpsize_104.(LocalVariable).getFunction() = func
and v_xref_145.(LocalVariable).getFunction() = func
and v_xref_189.(LocalVariable).getFunction() = func
and v_xref_203.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
