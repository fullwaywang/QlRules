/**
 * @name openssl-879f7080d7e141f415c79eaa3a8ac4a3dad0348b-tree_init
 * @id cpp/openssl/879f7080d7e141f415c79eaa3a8ac4a3dad0348b/tree-init
 * @description openssl-879f7080d7e141f415c79eaa3a8ac4a3dad0348b-crypto/x509v3/pcy_tree.c-tree_init CVE-2023-0464
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="48"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vtree_92, PointerDereferenceExpr target_3, EqualityOperation target_4, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="node_maximum"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtree_92
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1000"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getAnOperand().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vtree_92, PointerDereferenceExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget()=vtree_92
}

predicate func_4(Variable vtree_92, EqualityOperation target_4) {
		target_4.getAnOperand().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="levels"
		and target_4.getAnOperand().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtree_92
		and target_4.getAnOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("CRYPTO_zalloc")
		and target_4.getAnOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(MulExpr).getLeftOperand().(SizeofExprOperator).getValue()="32"
		and target_4.getAnOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(MulExpr).getRightOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_4.getAnOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(MulExpr).getRightOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_4.getAnOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1) instanceof StringLiteral
		and target_4.getAnOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(2) instanceof Literal
		and target_4.getAnOperand().(Literal).getValue()="0"
}

from Function func, Variable vtree_92, SizeofExprOperator target_0, PointerDereferenceExpr target_3, EqualityOperation target_4
where
func_0(func, target_0)
and not func_1(vtree_92, target_3, target_4, func)
and func_3(vtree_92, target_3)
and func_4(vtree_92, target_4)
and vtree_92.getType().hasName("X509_POLICY_TREE *")
and vtree_92.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
