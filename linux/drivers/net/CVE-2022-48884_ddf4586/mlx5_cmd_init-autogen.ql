/**
 * @name linux-ddf458641a511e7dff19f3bf0cbbc5dd9fe08ce5-mlx5_cmd_init
 * @id cpp/linux/ddf458641a511e7dff19f3bf0cbbc5dd9fe08ce5/mlx5-cmd-init
 * @description linux-ddf458641a511e7dff19f3bf0cbbc5dd9fe08ce5-drivers/net/ethernet/mellanox/mlx5/core/cmd.c-mlx5_cmd_init CVE-2022-48884
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="1296"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable valign_2164, Variable vcmd_2165, Parameter vdev_2161, Variable vsize_2163, IfStmt target_12, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="pool"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vcmd_2165
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRValue() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(1) |
				obj_3.getTarget().hasName("mlx5_core_dma_dev")
				and obj_3.getArgument(0).(VariableAccess).getTarget()=vdev_2161
			)
			and obj_2.getTarget().hasName("dma_pool_create")
			and obj_2.getArgument(0).(StringLiteral).getValue()="mlx5_cmd"
			and obj_2.getArgument(2).(VariableAccess).getTarget()=vsize_2163
			and obj_2.getArgument(3).(VariableAccess).getTarget()=valign_2164
			and obj_2.getArgument(4).(Literal).getValue()="0"
		)
	)
	and target_12.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vcmd_2165, BlockStmt target_13, NotExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="pool"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcmd_2165
	)
	and target_2.getParent().(IfStmt).getThen()=target_13
}

predicate func_3(Variable verr_2168, UnaryMinusExpr target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getParent() |
		obj_0.getRValue() = target_3
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_2168
	)
	and target_3.getValue()="-12"
}

predicate func_4(Variable vcmd_2165, PointerFieldAccess target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getParent() |
		obj_0.getLValue() = target_4
		and obj_0.getRValue() instanceof FunctionCall
	)
	and target_4.getTarget().getName()="stats"
	and target_4.getQualifier().(VariableAccess).getTarget()=vcmd_2165
}

predicate func_5(Variable vcmd_2165, Function func, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="stats"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vcmd_2165
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().hasName("kvcalloc")
			and obj_2.getArgument(1).(SizeofExprOperator).getValue()="128"
			and obj_2.getArgument(2).(BitwiseOrExpr).getValue()="3264"
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vcmd_2165, ReturnStmt target_14, NotExpr target_6) {
	exists(PointerFieldAccess obj_0 | obj_0=target_6.getOperand() |
		obj_0.getTarget().getName()="stats"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcmd_2165
	)
	and target_6.getParent().(IfStmt).getThen()=target_14
}

predicate func_7(Variable verr_2168, Function func, IfStmt target_7) {
	exists(BlockStmt obj_0 | obj_0=target_7.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getLValue().(VariableAccess).getTarget()=verr_2168
				and obj_2.getRValue() instanceof UnaryMinusExpr
			)
		)
		and obj_0.getStmt(1).(GotoStmt).getName() ="dma_pool_err"
	)
	and target_7.getCondition() instanceof NotExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

/*predicate func_8(Variable verr_2168, NotExpr target_2, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=verr_2168
		and obj_0.getRValue() instanceof UnaryMinusExpr
	)
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

*/
/*predicate func_9(NotExpr target_2, Function func, GotoStmt target_9) {
	target_9.getName() ="dma_pool_err"
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_9.getEnclosingFunction() = func
}

*/
predicate func_10(Variable vcmd_2165, AddressOfExpr target_16, AddressOfExpr target_17, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="stats"
	and target_10.getQualifier().(VariableAccess).getTarget()=vcmd_2165
	and target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getQualifier().(VariableAccess).getLocation())
	and target_10.getQualifier().(VariableAccess).getLocation().isBefore(target_17.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_11(Variable vcmd_2165, Function func, ExprStmt target_11) {
	exists(FunctionCall obj_0 | obj_0=target_11.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="stats"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vcmd_2165
		)
		and obj_0.getTarget().hasName("kvfree")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Function func, IfStmt target_12) {
	target_12.getCondition() instanceof NotExpr
	and target_12.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Function func, BlockStmt target_13) {
	target_13.getStmt(0) instanceof ExprStmt
	and target_13.getStmt(1) instanceof GotoStmt
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Function func, ReturnStmt target_14) {
	target_14.getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_14.getEnclosingFunction() = func
}

predicate func_16(Variable vcmd_2165, AddressOfExpr target_16) {
	exists(PointerFieldAccess obj_0 | obj_0=target_16.getOperand() |
		obj_0.getTarget().getName()="token_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcmd_2165
	)
}

predicate func_17(Variable vcmd_2165, AddressOfExpr target_17) {
	exists(PointerFieldAccess obj_0 | obj_0=target_17.getOperand() |
		obj_0.getTarget().getName()="sem"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcmd_2165
	)
}

from Function func, Variable valign_2164, Variable vcmd_2165, Variable verr_2168, Parameter vdev_2161, Variable vsize_2163, SizeofExprOperator target_0, ExprStmt target_1, NotExpr target_2, UnaryMinusExpr target_3, PointerFieldAccess target_4, ExprStmt target_5, NotExpr target_6, IfStmt target_7, PointerFieldAccess target_10, ExprStmt target_11, IfStmt target_12, BlockStmt target_13, ReturnStmt target_14, AddressOfExpr target_16, AddressOfExpr target_17
where
func_0(func, target_0)
and func_1(valign_2164, vcmd_2165, vdev_2161, vsize_2163, target_12, target_1)
and func_2(vcmd_2165, target_13, target_2)
and func_3(verr_2168, target_3)
and func_4(vcmd_2165, target_4)
and func_5(vcmd_2165, func, target_5)
and func_6(vcmd_2165, target_14, target_6)
and func_7(verr_2168, func, target_7)
and func_10(vcmd_2165, target_16, target_17, target_10)
and func_11(vcmd_2165, func, target_11)
and func_12(func, target_12)
and func_13(func, target_13)
and func_14(func, target_14)
and func_16(vcmd_2165, target_16)
and func_17(vcmd_2165, target_17)
and valign_2164.getType().hasName("int")
and vcmd_2165.getType().hasName("mlx5_cmd *")
and verr_2168.getType().hasName("int")
and vdev_2161.getType().hasName("mlx5_core_dev *")
and vsize_2163.getType().hasName("int")
and valign_2164.(LocalVariable).getFunction() = func
and vcmd_2165.(LocalVariable).getFunction() = func
and verr_2168.(LocalVariable).getFunction() = func
and vdev_2161.getFunction() = func
and vsize_2163.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
