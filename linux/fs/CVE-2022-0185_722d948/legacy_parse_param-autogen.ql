/**
 * @name linux-722d94847de29310e8aa03fcbdb41fc92c521756-legacy_parse_param
 * @id cpp/linux/722d94847de29310e8aa03fcbdb41fc92c521756/legacy-parse-param
 * @description linux-722d94847de29310e8aa03fcbdb41fc92c521756-fs/fs_context.c-legacy_parse_param CVE-2022-0185
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsize_528, Variable vlen_529, ReturnStmt target_6, ExprStmt target_7) {
exists(AddExpr target_0 |
	target_0.getLeftOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vsize_528
	and target_0.getLeftOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vlen_529
	and target_0.getRightOperand() instanceof Literal
	and target_0.getParent().(GTExpr).getGreaterOperand().(VariableAccess).getTarget()=vlen_529
	and target_0.getParent().(GTExpr).getLesserOperand() instanceof SubExpr
	and target_0.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_6
	and target_0.getLeftOperand().(AddExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, BinaryBitwiseOperation target_1) {
	target_1.getValue()="4096"
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vlen_529, ReturnStmt target_6, VariableAccess target_3) {
	target_3.getTarget()=vlen_529
	and target_3.getParent().(GTExpr).getLesserOperand() instanceof SubExpr
	and target_3.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_4(Variable vsize_528, VariableAccess target_4) {
	target_4.getTarget()=vsize_528
}

predicate func_5(Variable vsize_528, ReturnStmt target_6, SubExpr target_5) {
	target_5.getLeftOperand().(SubExpr).getValue()="4094"
	and target_5.getRightOperand().(VariableAccess).getTarget()=vsize_528
	and target_5.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_6(Function func, ReturnStmt target_6) {
	target_6.getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getTarget().hasName("logfc")
	and target_6.getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="log"
	and target_6.getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="log"
	and target_6.getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("fs_context *")
	and target_6.getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_6.getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(2).(Literal).getValue()="101"
	and target_6.getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(3).(StringLiteral).getValue()="VFS: Legacy: Cumulative options too large"
	and target_6.getExpr().(CommaExpr).getRightOperand().(UnaryMinusExpr).getValue()="-22"
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vsize_528, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="legacy_data"
	and target_7.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("legacy_fs_context *")
	and target_7.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vsize_528
	and target_7.getExpr().(AssignExpr).getRValue().(CharLiteral).getValue()="44"
}

from Function func, Variable vsize_528, Variable vlen_529, BinaryBitwiseOperation target_1, VariableAccess target_3, VariableAccess target_4, SubExpr target_5, ReturnStmt target_6, ExprStmt target_7
where
not func_0(vsize_528, vlen_529, target_6, target_7)
and func_1(func, target_1)
and func_3(vlen_529, target_6, target_3)
and func_4(vsize_528, target_4)
and func_5(vsize_528, target_6, target_5)
and func_6(func, target_6)
and func_7(vsize_528, target_7)
and vsize_528.getType().hasName("unsigned int")
and vlen_529.getType().hasName("size_t")
and vsize_528.(LocalVariable).getFunction() = func
and vlen_529.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
