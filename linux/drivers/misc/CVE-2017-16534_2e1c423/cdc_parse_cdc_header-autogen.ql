/**
 * @name linux-2e1c42391ff2556387b3cb6308b24f6f65619feb-cdc_parse_cdc_header
 * @id cpp/linux/2e1c42391ff2556387b3cb6308b24f6f65619feb/cdc-parse-cdc-header
 * @description linux-2e1c42391ff2556387b3cb6308b24f6f65619feb-drivers/usb/core/message.c-cdc_parse_cdc_header CVE-2017-16534
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuflen_2049, Parameter vintf_2047, Variable velength_2060, RelationalOperation target_1, ExprStmt target_2, AddressOfExpr target_3, AddressOfExpr target_4, ExprStmt target_5, RelationalOperation target_6) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vbuflen_2049
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=velength_2060
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=velength_2060
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="3"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_err")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vintf_2047
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="invalid descriptor buffer length\n"
		and target_1.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation())
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_6.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vbuflen_2049, RelationalOperation target_1) {
		 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
		and target_1.getGreaterOperand().(VariableAccess).getTarget()=vbuflen_2049
		and target_1.getLesserOperand().(Literal).getValue()="0"
}

predicate func_2(Parameter vbuflen_2049, Variable velength_2060, ExprStmt target_2) {
		target_2.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vbuflen_2049
		and target_2.getExpr().(AssignSubExpr).getRValue().(VariableAccess).getTarget()=velength_2060
}

predicate func_3(Parameter vintf_2047, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="dev"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vintf_2047
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_err")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="skipping garbage byte\n"
}

predicate func_4(Parameter vintf_2047, AddressOfExpr target_4) {
		target_4.getOperand().(PointerFieldAccess).getTarget().getName()="dev"
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vintf_2047
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_err")
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="skipping garbage\n"
}

predicate func_5(Variable velength_2060, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=velength_2060
		and target_5.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_6(Variable velength_2060, RelationalOperation target_6) {
		 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
		and target_6.getLesserOperand().(VariableAccess).getTarget()=velength_2060
		and target_6.getGreaterOperand().(SizeofTypeOperator).getType() instanceof LongType
		and target_6.getGreaterOperand().(SizeofTypeOperator).getValue()="5"
}

from Function func, Parameter vbuflen_2049, Parameter vintf_2047, Variable velength_2060, RelationalOperation target_1, ExprStmt target_2, AddressOfExpr target_3, AddressOfExpr target_4, ExprStmt target_5, RelationalOperation target_6
where
not func_0(vbuflen_2049, vintf_2047, velength_2060, target_1, target_2, target_3, target_4, target_5, target_6)
and func_1(vbuflen_2049, target_1)
and func_2(vbuflen_2049, velength_2060, target_2)
and func_3(vintf_2047, target_3)
and func_4(vintf_2047, target_4)
and func_5(velength_2060, target_5)
and func_6(velength_2060, target_6)
and vbuflen_2049.getType().hasName("int")
and vintf_2047.getType().hasName("usb_interface *")
and velength_2060.getType().hasName("unsigned int")
and vbuflen_2049.getFunction() = func
and vintf_2047.getFunction() = func
and velength_2060.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
