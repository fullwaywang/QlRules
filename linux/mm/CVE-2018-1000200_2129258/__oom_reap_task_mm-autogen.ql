/**
 * @name linux-212925802454672e6cd2949a727f5e2c1377bf06-__oom_reap_task_mm
 * @id cpp/linux/212925802454672e6cd2949a727f5e2c1377bf06/--oom-reap-task-mm
 * @description linux-212925802454672e6cd2949a727f5e2c1377bf06-mm/oom_kill.c-__oom_reap_task_mm CVE-2018-1000200
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmm_469, BlockStmt target_8, FunctionCall target_0) {
		target_0.getTarget().hasName("mmget_not_zero")
		and not target_0.getTarget().hasName("constant_test_bit")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vmm_469
		and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_8
}

predicate func_1(Parameter vmm_469, BlockStmt target_8, AddressOfExpr target_9) {
	exists(ConditionalExpr target_1 |
		target_1.getCondition().(Literal).getValue()="1"
		and target_1.getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
		and target_1.getThen().(FunctionCall).getArgument(0).(Literal).getValue()="21"
		and target_1.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_1.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_469
		and target_1.getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
		and target_1.getElse().(FunctionCall).getArgument(0).(Literal).getValue()="21"
		and target_1.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_1.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_469
		and target_1.getParent().(IfStmt).getThen()=target_8
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_3(Parameter vmm_469, AddressOfExpr target_9, AddressOfExpr target_10) {
	exists(AddressOfExpr target_3 |
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_469
		and target_3.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

*/
predicate func_4(Parameter vmm_469, VariableAccess target_4) {
		target_4.getTarget()=vmm_469
		and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_5(Parameter vmm_469, VariableAccess target_5) {
		target_5.getTarget()=vmm_469
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(BlockStmt target_8, Function func, NotExpr target_6) {
		target_6.getOperand() instanceof FunctionCall
		and target_6.getParent().(IfStmt).getThen()=target_8
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Parameter vmm_469, Function func, ExprStmt target_7) {
		target_7.getExpr().(FunctionCall).getTarget().hasName("mmput_async")
		and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_469
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Parameter vmm_469, BlockStmt target_8) {
		target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("up_read")
		and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mmap_sem"
		and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_469
		and target_8.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("trace_skip_task_reaping")
		and target_8.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="pid"
		and target_8.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_8.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("task_struct *")
}

predicate func_9(Parameter vmm_469, AddressOfExpr target_9) {
		target_9.getOperand().(PointerFieldAccess).getTarget().getName()="mmap_sem"
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_469
		and target_9.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("down_read_trylock")
}

predicate func_10(Parameter vmm_469, AddressOfExpr target_10) {
		target_10.getOperand().(PointerFieldAccess).getTarget().getName()="mmap_sem"
		and target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_469
		and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("up_read")
}

from Function func, Parameter vmm_469, FunctionCall target_0, VariableAccess target_4, VariableAccess target_5, NotExpr target_6, ExprStmt target_7, BlockStmt target_8, AddressOfExpr target_9, AddressOfExpr target_10
where
func_0(vmm_469, target_8, target_0)
and not func_1(vmm_469, target_8, target_9)
and func_4(vmm_469, target_4)
and func_5(vmm_469, target_5)
and func_6(target_8, func, target_6)
and func_7(vmm_469, func, target_7)
and func_8(vmm_469, target_8)
and func_9(vmm_469, target_9)
and func_10(vmm_469, target_10)
and vmm_469.getType().hasName("mm_struct *")
and vmm_469.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
