/**
 * @name linux-89c2b3b74918200e46699338d7bcc19b1ea12110-io_read
 * @id cpp/linux/89c2b3b74918200e46699338d7bcc19b1ea12110/io-read
 * @description linux-89c2b3b74918200e46699338d7bcc19b1ea12110-fs/io_uring.c-io_read CVE-2022-1508
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable viter_3239, LogicalOrExpr target_1, ExprStmt target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("iov_iter_reexpand")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=viter_3239
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="count"
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=viter_3239
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="truncated"
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=viter_3239
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, LogicalOrExpr target_1) {
	target_1.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_1.getLeftOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-11"
	and target_1.getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("io_kiocb *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable viter_3239, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("io_iter_do_read")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("io_kiocb *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=viter_3239
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable viter_3239, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("iov_iter_revert")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=viter_3239
	and target_3.getExpr().(FunctionCall).getArgument(1).(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_3.getExpr().(FunctionCall).getArgument(1).(SubExpr).getRightOperand().(FunctionCall).getTarget().hasName("iov_iter_count")
	and target_3.getExpr().(FunctionCall).getArgument(1).(SubExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=viter_3239
}

from Function func, Variable viter_3239, LogicalOrExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(viter_3239, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(viter_3239, func, target_2)
and func_3(viter_3239, target_3)
and viter_3239.getType().hasName("iov_iter *")
and viter_3239.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
