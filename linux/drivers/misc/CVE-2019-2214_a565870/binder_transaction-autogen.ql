/**
 * @name linux-a56587065094fd96eb4c2b5ad65571daad32156d-binder_transaction
 * @id cpp/linux/a56587065094fd96eb4c2b5ad65571daad32156d/binder-transaction
 * @description linux-a56587065094fd96eb4c2b5ad65571daad32156d-drivers/android/binder.c-binder_transaction CVE-2019-2214
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="3258"
	and not target_0.getValue()="3259"
	and target_0.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="3271"
	and not target_1.getValue()="3272"
	and target_1.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="3292"
	and not target_2.getValue()="3293"
	and target_2.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="3309"
	and not target_3.getValue()="3310"
	and target_3.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, Literal target_4) {
	target_4.getValue()="3329"
	and not target_4.getValue()="3330"
	and target_4.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, Literal target_5) {
	target_5.getValue()="3351"
	and not target_5.getValue()="3352"
	and target_5.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, Literal target_6) {
	target_6.getValue()="3364"
	and not target_6.getValue()="3365"
	and target_6.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, Literal target_7) {
	target_7.getValue()="3372"
	and not target_7.getValue()="3373"
	and target_7.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Function func, Literal target_8) {
	target_8.getValue()="3390"
	and not target_8.getValue()="3391"
	and target_8.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_8.getEnclosingFunction() = func
}

predicate func_9(Function func, Literal target_9) {
	target_9.getValue()="3404"
	and not target_9.getValue()="3405"
	and target_9.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, Literal target_10) {
	target_10.getValue()="3426"
	and not target_10.getValue()="3427"
	and target_10.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, Literal target_11) {
	target_11.getValue()="3437"
	and not target_11.getValue()="3438"
	and target_11.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Function func, Literal target_12) {
	target_12.getValue()="3500"
	and not target_12.getValue()="3501"
	and target_12.getParent().(AssignExpr).getParent().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("uint32_t")
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable vsecctx_sz_2889, ExprStmt target_15, ExprStmt target_16) {
exists(SubExpr target_13 |
	target_13.getLeftOperand() instanceof AddExpr
	and target_13.getRightOperand().(BitwiseAndExpr).getLeftOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vsecctx_sz_2889
	and target_13.getRightOperand().(BitwiseAndExpr).getLeftOperand().(AddExpr).getRightOperand().(SubExpr).getValue()="7"
	and target_13.getRightOperand().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="4294967288"
	and target_13.getParent().(AssignExpr).getRValue() = target_13
	and target_13.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("binder_size_t")
	and target_15.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_13.getRightOperand().(BitwiseAndExpr).getLeftOperand().(AddExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_13.getRightOperand().(BitwiseAndExpr).getLeftOperand().(AddExpr).getLeftOperand().(VariableAccess).getLocation().isBefore(target_16.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_14(Parameter vextra_buffers_size_2866, Variable vsg_buf_offset_2875, AddExpr target_14) {
	target_14.getLeftOperand().(VariableAccess).getTarget()=vsg_buf_offset_2875
	and target_14.getRightOperand().(VariableAccess).getTarget()=vextra_buffers_size_2866
	and target_14.getParent().(AssignExpr).getRValue() = target_14
	and target_14.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("binder_size_t")
}

predicate func_15(Variable vsecctx_sz_2889, VariableAccess target_17, ExprStmt target_15) {
	target_15.getExpr().(FunctionCall).getTarget().hasName("security_release_secctx")
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("char *")
	and target_15.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsecctx_sz_2889
	and target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_16(Variable vsecctx_sz_2889, VariableAccess target_18, ExprStmt target_16) {
	target_16.getExpr().(FunctionCall).getTarget().hasName("security_release_secctx")
	and target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("char *")
	and target_16.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsecctx_sz_2889
	and target_16.getParent().(IfStmt).getCondition()=target_18
}

predicate func_17(Variable vsecctx_2888, BlockStmt target_19, VariableAccess target_17) {
	target_17.getTarget()=vsecctx_2888
	and target_17.getParent().(IfStmt).getThen()=target_19
}

predicate func_18(Variable vsecctx_2888, ExprStmt target_16, VariableAccess target_18) {
	target_18.getTarget()=vsecctx_2888
	and target_18.getParent().(IfStmt).getThen()=target_16
}

predicate func_19(Function func, BlockStmt target_19) {
	target_19.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="security_ctx"
	and target_19.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("binder_transaction *")
	and target_19.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="user_data"
	and target_19.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_19.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("binder_transaction *")
	and target_19.getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_19.getEnclosingFunction() = func
}

from Function func, Parameter vextra_buffers_size_2866, Variable vsg_buf_offset_2875, Variable vsecctx_2888, Variable vsecctx_sz_2889, Literal target_0, Literal target_1, Literal target_2, Literal target_3, Literal target_4, Literal target_5, Literal target_6, Literal target_7, Literal target_8, Literal target_9, Literal target_10, Literal target_11, Literal target_12, AddExpr target_14, ExprStmt target_15, ExprStmt target_16, VariableAccess target_17, VariableAccess target_18, BlockStmt target_19
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
and func_8(func, target_8)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and func_12(func, target_12)
and not func_13(vsecctx_sz_2889, target_15, target_16)
and func_14(vextra_buffers_size_2866, vsg_buf_offset_2875, target_14)
and func_15(vsecctx_sz_2889, target_17, target_15)
and func_16(vsecctx_sz_2889, target_18, target_16)
and func_17(vsecctx_2888, target_19, target_17)
and func_18(vsecctx_2888, target_16, target_18)
and func_19(func, target_19)
and vextra_buffers_size_2866.getType().hasName("binder_size_t")
and vsg_buf_offset_2875.getType().hasName("binder_size_t")
and vsecctx_2888.getType().hasName("char *")
and vsecctx_sz_2889.getType().hasName("u32")
and vextra_buffers_size_2866.getFunction() = func
and vsg_buf_offset_2875.(LocalVariable).getFunction() = func
and vsecctx_2888.(LocalVariable).getFunction() = func
and vsecctx_sz_2889.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
