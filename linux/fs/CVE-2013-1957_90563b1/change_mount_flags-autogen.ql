/**
 * @name linux-90563b198e4c6674c63672fae1923da467215f45-change_mount_flags
 * @id cpp/linux/90563b198e4c6674c63672fae1923da467215f45/change-mount-flags
 * @description linux-90563b198e4c6674c63672fae1923da467215f45-fs/namespace.c-change_mount_flags CVE-2013-1957
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmnt_1706, IfStmt target_1, EqualityOperation target_2, FunctionCall target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="mnt_flags"
	and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmnt_1706
	and target_0.getCondition().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="4194304"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vmnt_1706, IfStmt target_1) {
	target_1.getCondition().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mnt_make_readonly")
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("real_mount")
	and target_1.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmnt_1706
	and target_1.getElse().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__mnt_unmake_readonly")
	and target_1.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("real_mount")
	and target_1.getElse().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmnt_1706
}

predicate func_2(Parameter vmnt_1706, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getRightOperand().(FunctionCall).getTarget().hasName("__mnt_is_readonly")
	and target_2.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmnt_1706
}

predicate func_3(Parameter vmnt_1706, FunctionCall target_3) {
	target_3.getTarget().hasName("real_mount")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vmnt_1706
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mnt_make_readonly")
}

from Function func, Parameter vmnt_1706, IfStmt target_1, EqualityOperation target_2, FunctionCall target_3
where
not func_0(vmnt_1706, target_1, target_2, target_3, func)
and func_1(vmnt_1706, target_1)
and func_2(vmnt_1706, target_2)
and func_3(vmnt_1706, target_3)
and vmnt_1706.getType().hasName("vfsmount *")
and vmnt_1706.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
