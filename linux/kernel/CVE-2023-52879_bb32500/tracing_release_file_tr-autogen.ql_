/**
 * @name linux-bb32500fb9b78215e4ef6ee8b4345c5f5d7eafb4-tracing_release_file_tr
 * @id cpp/linux/bb32500fb9b78215e4ef6ee8b4345c5f5d7eafb4/tracing-release-file-tr
 * @description linux-bb32500fb9b78215e4ef6ee8b4345c5f5d7eafb4-kernel/trace/trace.c-tracing_release_file_tr CVE-2023-52879
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfile_4988, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("event_file_put")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_4988
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vfile_4988, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("trace_array_put")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="tr"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_4988
}

from Function func, Variable vfile_4988, ExprStmt target_1
where
not func_0(vfile_4988, target_1, func)
and func_1(vfile_4988, target_1)
and vfile_4988.getType().hasName("trace_event_file *")
and vfile_4988.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
