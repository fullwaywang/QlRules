/**
 * @name linux-a349e5ab4dc9954746e836cd10b407ce48f9b2f6-i2c_pnx_master_xmit
 * @id cpp/linux/a349e5ab4dc9954746e836cd10b407ce48f9b2f6/i2c-pnx-master-xmit
 * @description linux-a349e5ab4dc9954746e836cd10b407ce48f9b2f6-drivers/i2c/busses/i2c-pnx.c-i2c_pnx_master_xmit CVE-2024-42153
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter valg_data_230, EqualityOperation target_2, PointerArithmeticOperation target_3, AddressOfExpr target_4, ExprStmt target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="mif"
					and obj_3.getQualifier().(VariableAccess).getTarget()=valg_data_230
				)
				and obj_2.getTarget().getName()="timer"
			)
		)
		and obj_0.getTarget().hasName("del_timer_sync")
	)
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_1(Parameter valg_data_230, EqualityOperation target_5, PointerArithmeticOperation target_6, AddressOfExpr target_7, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="mif"
					and obj_3.getQualifier().(VariableAccess).getTarget()=valg_data_230
				)
				and obj_2.getTarget().getName()="timer"
			)
		)
		and obj_0.getTarget().hasName("del_timer_sync")
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_6.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_2(Parameter valg_data_230, BlockStmt target_8, EqualityOperation target_2) {
	exists(ValueFieldAccess obj_0 | obj_0=target_2.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="mif"
			and obj_1.getQualifier().(VariableAccess).getTarget()=valg_data_230
		)
		and obj_0.getTarget().getName()="len"
	)
	and target_2.getRightOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_8
}

predicate func_3(Parameter valg_data_230, PointerArithmeticOperation target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getLeftOperand() |
		obj_0.getTarget().getName()="ioaddr"
		and obj_0.getQualifier().(VariableAccess).getTarget()=valg_data_230
	)
	and exists(FunctionCall obj_1 | obj_1=target_3.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				exists(BitwiseAndExpr obj_4 | obj_4=obj_3.getArgument(0) |
					exists(FunctionCall obj_5 | obj_5=obj_4.getLeftOperand() |
						exists(PointerArithmeticOperation obj_6 | obj_6=obj_5.getArgument(0) |
							exists(PointerFieldAccess obj_7 | obj_7=obj_6.getLeftOperand() |
								obj_7.getTarget().getName()="ioaddr"
								and obj_7.getQualifier().(VariableAccess).getTarget()=valg_data_230
							)
							and obj_6.getRightOperand().(Literal).getValue()="8"
						)
						and obj_5.getTarget().hasName("ioread32")
					)
					and obj_4.getRightOperand().(ComplementExpr).getValue()="4294967281"
				)
				and obj_3.getTarget().hasName("iowrite32")
			)
		)
	)
	and target_3.getRightOperand().(Literal).getValue()="8"
}

predicate func_4(Parameter valg_data_230, AddressOfExpr target_4) {
	exists(ValueFieldAccess obj_0 | obj_0=target_4.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="adapter"
			and obj_1.getQualifier().(VariableAccess).getTarget()=valg_data_230
		)
		and obj_0.getTarget().getName()="dev"
	)
	and exists(FunctionCall obj_2 | obj_2=target_4.getParent() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getParent() |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("__dynamic_dev_dbg")
				and obj_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
				and obj_4.getArgument(2).(StringLiteral).getValue()="%s(): Waking up xfer routine.\n"
				and obj_4.getArgument(3).(VariableAccess).getTarget().getType() instanceof ArrayType
			)
		)
	)
}

predicate func_5(Parameter valg_data_230, BlockStmt target_9, EqualityOperation target_5) {
	exists(ValueFieldAccess obj_0 | obj_0=target_5.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="mif"
			and obj_1.getQualifier().(VariableAccess).getTarget()=valg_data_230
		)
		and obj_0.getTarget().getName()="len"
	)
	and target_5.getRightOperand().(Literal).getValue()="0"
	and target_5.getParent().(IfStmt).getThen()=target_9
}

predicate func_6(Parameter valg_data_230, PointerArithmeticOperation target_6) {
	exists(PointerFieldAccess obj_0 | obj_0=target_6.getLeftOperand() |
		obj_0.getTarget().getName()="ioaddr"
		and obj_0.getQualifier().(VariableAccess).getTarget()=valg_data_230
	)
	and exists(FunctionCall obj_1 | obj_1=target_6.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				exists(BitwiseAndExpr obj_4 | obj_4=obj_3.getArgument(0) |
					exists(FunctionCall obj_5 | obj_5=obj_4.getLeftOperand() |
						exists(PointerArithmeticOperation obj_6 | obj_6=obj_5.getArgument(0) |
							exists(PointerFieldAccess obj_7 | obj_7=obj_6.getLeftOperand() |
								obj_7.getTarget().getName()="ioaddr"
								and obj_7.getQualifier().(VariableAccess).getTarget()=valg_data_230
							)
							and obj_6.getRightOperand().(Literal).getValue()="8"
						)
						and obj_5.getTarget().hasName("ioread32")
					)
					and obj_4.getRightOperand().(ComplementExpr).getValue()="4294967281"
				)
				and obj_3.getTarget().hasName("iowrite32")
			)
		)
	)
	and target_6.getRightOperand().(Literal).getValue()="8"
}

predicate func_7(Parameter valg_data_230, AddressOfExpr target_7) {
	exists(ValueFieldAccess obj_0 | obj_0=target_7.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="adapter"
			and obj_1.getQualifier().(VariableAccess).getTarget()=valg_data_230
		)
		and obj_0.getTarget().getName()="dev"
	)
	and exists(FunctionCall obj_2 | obj_2=target_7.getParent() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getParent() |
			exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getTarget().hasName("__dynamic_dev_dbg")
				and obj_4.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
				and obj_4.getArgument(2).(StringLiteral).getValue()="%s(): Waking up xfer routine after zero-xfer.\n"
				and obj_4.getArgument(3).(VariableAccess).getTarget().getType() instanceof ArrayType
			)
		)
	)
}

predicate func_8(Parameter valg_data_230, BlockStmt target_8) {
	exists(IfStmt obj_0 | obj_0=target_8.getStmt(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getCondition() |
			obj_1.getTarget().getName()="last"
			and obj_1.getQualifier().(VariableAccess).getTarget()=valg_data_230
		)
		and exists(BlockStmt obj_2 | obj_2=obj_0.getThen() |
			exists(IfStmt obj_3 | obj_3=obj_2.getStmt(0) |
				exists(FunctionCall obj_4 | obj_4=obj_3.getCondition() |
					obj_4.getTarget().hasName("wait_timeout")
					and obj_4.getArgument(0).(VariableAccess).getTarget()=valg_data_230
				)
				and exists(ExprStmt obj_5 | obj_5=obj_3.getThen() |
					exists(FunctionCall obj_6 | obj_6=obj_5.getExpr() |
						obj_6.getTarget().hasName("_dev_err")
						and obj_6.getArgument(1).(StringLiteral).getValue()="The bus is still active after timeout\n"
					)
				)
			)
		)
	)
}

predicate func_9(Parameter valg_data_230, BlockStmt target_9) {
	exists(ExprStmt obj_0 | obj_0=target_9.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("i2c_pnx_stop")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=valg_data_230
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_9.getStmt(1) |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			exists(BitwiseAndExpr obj_4 | obj_4=obj_3.getArgument(0) |
				exists(FunctionCall obj_5 | obj_5=obj_4.getLeftOperand() |
					exists(PointerArithmeticOperation obj_6 | obj_6=obj_5.getArgument(0) |
						obj_6.getLeftOperand().(PointerFieldAccess).getTarget().getName()="ioaddr"
						and obj_6.getRightOperand().(Literal).getValue()="8"
					)
					and obj_5.getTarget().hasName("ioread32")
				)
				and obj_4.getRightOperand().(ComplementExpr).getValue()="4294967281"
			)
			and exists(PointerArithmeticOperation obj_7 | obj_7=obj_3.getArgument(1) |
				exists(PointerFieldAccess obj_8 | obj_8=obj_7.getLeftOperand() |
					obj_8.getTarget().getName()="ioaddr"
					and obj_8.getQualifier().(VariableAccess).getTarget()=valg_data_230
				)
				and obj_7.getRightOperand().(Literal).getValue()="8"
			)
			and obj_3.getTarget().hasName("iowrite32")
		)
	)
}

from Function func, Parameter valg_data_230, ExprStmt target_0, ExprStmt target_1, EqualityOperation target_2, PointerArithmeticOperation target_3, AddressOfExpr target_4, EqualityOperation target_5, PointerArithmeticOperation target_6, AddressOfExpr target_7, BlockStmt target_8, BlockStmt target_9
where
func_0(valg_data_230, target_2, target_3, target_4, target_0)
and func_1(valg_data_230, target_5, target_6, target_7, target_1)
and func_2(valg_data_230, target_8, target_2)
and func_3(valg_data_230, target_3)
and func_4(valg_data_230, target_4)
and func_5(valg_data_230, target_9, target_5)
and func_6(valg_data_230, target_6)
and func_7(valg_data_230, target_7)
and func_8(valg_data_230, target_8)
and func_9(valg_data_230, target_9)
and valg_data_230.getType().hasName("i2c_pnx_algo_data *")
and valg_data_230.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
