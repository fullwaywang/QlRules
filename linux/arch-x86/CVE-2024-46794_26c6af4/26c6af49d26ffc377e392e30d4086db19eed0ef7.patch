commit 26c6af49d26ffc377e392e30d4086db19eed0ef7
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Aug 26 15:53:04 2024 +0300

    x86/tdx: Fix data leak in mmio_read()
    
    commit b6fb565a2d15277896583d471b21bc14a0c99661 upstream.
    
    The mmio_read() function makes a TDVMCALL to retrieve MMIO data for an
    address from the VMM.
    
    Sean noticed that mmio_read() unintentionally exposes the value of an
    initialized variable (val) on the stack to the VMM.
    
    This variable is only needed as an output value. It did not need to be
    passed to the VMM in the first place.
    
    Do not send the original value of *val to the VMM.
    
    [ dhansen: clarify what 'val' is used for. ]
    
    Fixes: 31d58c4e557d ("x86/tdx: Handle in-kernel MMIO")
    Reported-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc:stable@vger.kernel.org
    Link: https://lore.kernel.org/all/20240826125304.1566719-1-kirill.shutemov%40linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/x86/coco/tdx/tdx.c b/arch/x86/coco/tdx/tdx.c
index 4692450aeb4d..b9da467bd222 100644
--- a/arch/x86/coco/tdx/tdx.c
+++ b/arch/x86/coco/tdx/tdx.c
@@ -328,7 +328,6 @@ static bool mmio_read(int size, unsigned long addr, unsigned long *val)
 		.r12 = size,
 		.r13 = EPT_READ,
 		.r14 = addr,
-		.r15 = *val,
 	};
 
 	if (__tdx_hypercall(&args, TDX_HCALL_HAS_OUTPUT))
