/**
 * @name linux-46c116b920ebec58031f0a78c5ea9599b0d2a371-do_split
 * @id cpp/linux/46c116b920ebec58031f0a78c5ea9599b0d2a371/do-split
 * @description linux-46c116b920ebec58031f0a78c5ea9599b0d2a371-fs/ext4/namei.c-do_split CVE-2022-1184
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vblocksize_1908, Variable vdata1_1914, ExprStmt target_4, RelationalOperation target_5, ExprStmt target_7, VariableAccess target_0) {
	target_0.getTarget()=vblocksize_1908
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dx_make_map")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdata1_1914
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("dx_hash_info *")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
	and target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation().isBefore(target_0.getLocation())
	and target_0.getLocation().isBefore(target_5.getLesserOperand().(DivExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_1(Parameter vbh_1905, Variable vblocksize_1908, Variable vdata1_1914, PointerDereferenceExpr target_8, PointerDereferenceExpr target_9) {
exists(PointerDereferenceExpr target_1 |
	target_1.getOperand().(VariableAccess).getTarget()=vbh_1905
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dx_make_map")
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdata1_1914
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vblocksize_1908
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("dx_hash_info *")
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
	and target_8.getOperand().(VariableAccess).getLocation().isBefore(target_1.getOperand().(VariableAccess).getLocation())
	and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_9.getOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable vcount_1909, Variable verr_1918, ExprStmt target_10, ExprStmt target_11, IfStmt target_12, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("unsigned int")
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1918
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vcount_1909
	and target_2.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="journal_error"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_10.getLocation())
	and target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
	and target_12.getCondition().(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Variable vblocksize_1908, Variable vdata1_1914, ExprStmt target_4, RelationalOperation target_5, ExprStmt target_7, VariableAccess target_3) {
	target_3.getTarget()=vdata1_1914
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dx_make_map")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vblocksize_1908
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("dx_hash_info *")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
	and target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getLocation().isBefore(target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_5.getLesserOperand().(DivExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_3.getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_4(Variable vblocksize_1908, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
	and target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vblocksize_1908
}

predicate func_5(Variable vblocksize_1908, RelationalOperation target_5) {
	 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
	and target_5.getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_5.getGreaterOperand().(AddExpr).getRightOperand().(DivExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="size"
	and target_5.getGreaterOperand().(AddExpr).getRightOperand().(DivExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
	and target_5.getGreaterOperand().(AddExpr).getRightOperand().(DivExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getGreaterOperand().(AddExpr).getRightOperand().(DivExpr).getRightOperand().(Literal).getValue()="2"
	and target_5.getLesserOperand().(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vblocksize_1908
	and target_5.getLesserOperand().(DivExpr).getRightOperand().(Literal).getValue()="2"
}

predicate func_7(Variable vblocksize_1908, Variable vcount_1909, Variable vdata1_1914, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ext4_dir_entry_2 *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dx_move_dirents")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdata1_1914
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("char *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vcount_1909
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(SubExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vblocksize_1908
}

predicate func_8(Parameter vbh_1905, PointerDereferenceExpr target_8) {
	target_8.getOperand().(VariableAccess).getTarget()=vbh_1905
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__ext4_journal_get_write_access")
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1) instanceof Literal
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("handle_t *")
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("inode *")
}

predicate func_9(Parameter vbh_1905, Variable vblocksize_1908, PointerDereferenceExpr target_9) {
	target_9.getOperand().(VariableAccess).getTarget()=vbh_1905
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ext4_initialize_dirent_tail")
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vblocksize_1908
}

predicate func_10(Variable vcount_1909, ExprStmt target_10) {
	target_10.getExpr().(AssignPointerSubExpr).getLValue().(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
	and target_10.getExpr().(AssignPointerSubExpr).getRValue().(VariableAccess).getTarget()=vcount_1909
}

predicate func_11(Variable vblocksize_1908, Variable vcount_1909, Variable vdata1_1914, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcount_1909
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dx_make_map")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdata1_1914
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vblocksize_1908
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("dx_hash_info *")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("dx_map_entry *")
}

predicate func_12(Variable verr_1918, Function func, IfStmt target_12) {
	target_12.getCondition().(VariableAccess).getTarget()=verr_1918
	and target_12.getThen().(GotoStmt).getName() ="journal_error"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

from Function func, Parameter vbh_1905, Variable vblocksize_1908, Variable vcount_1909, Variable vdata1_1914, Variable verr_1918, VariableAccess target_0, VariableAccess target_3, ExprStmt target_4, RelationalOperation target_5, ExprStmt target_7, PointerDereferenceExpr target_8, PointerDereferenceExpr target_9, ExprStmt target_10, ExprStmt target_11, IfStmt target_12
where
func_0(vblocksize_1908, vdata1_1914, target_4, target_5, target_7, target_0)
and not func_1(vbh_1905, vblocksize_1908, vdata1_1914, target_8, target_9)
and not func_2(vcount_1909, verr_1918, target_10, target_11, target_12, func)
and func_3(vblocksize_1908, vdata1_1914, target_4, target_5, target_7, target_3)
and func_4(vblocksize_1908, target_4)
and func_5(vblocksize_1908, target_5)
and func_7(vblocksize_1908, vcount_1909, vdata1_1914, target_7)
and func_8(vbh_1905, target_8)
and func_9(vbh_1905, vblocksize_1908, target_9)
and func_10(vcount_1909, target_10)
and func_11(vblocksize_1908, vcount_1909, vdata1_1914, target_11)
and func_12(verr_1918, func, target_12)
and vbh_1905.getType().hasName("buffer_head **")
and vblocksize_1908.getType().hasName("unsigned int")
and vcount_1909.getType().hasName("unsigned int")
and vdata1_1914.getType().hasName("char *")
and verr_1918.getType().hasName("int")
and vbh_1905.getFunction() = func
and vblocksize_1908.(LocalVariable).getFunction() = func
and vcount_1909.(LocalVariable).getFunction() = func
and vdata1_1914.(LocalVariable).getFunction() = func
and verr_1918.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
