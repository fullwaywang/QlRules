/**
 * @name linux-3bcd6c7eaa53-rxrpc_alloc_bundle
 * @id cpp/linux/3bcd6c7eaa53/rxrpc-alloc-bundle
 * @description linux-3bcd6c7eaa53-rxrpc_alloc_bundle CVE-2023-2006
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbundle_119, VariableAccess target_1, AddressOfExpr target_2, AddressOfExpr target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("atomic_set")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="active"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbundle_119
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vbundle_119, BlockStmt target_4, VariableAccess target_1) {
		target_1.getTarget()=vbundle_119
		and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vbundle_119, AddressOfExpr target_2) {
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="ref"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbundle_119
}

predicate func_3(Variable vbundle_119, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="channel_lock"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbundle_119
}

predicate func_4(Variable vbundle_119, BlockStmt target_4) {
		target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="params"
		and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbundle_119
		and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("rxrpc_conn_parameters *")
		and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("rxrpc_get_peer")
		and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="peer"
		and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="params"
		and target_4.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbundle_119
}

from Function func, Variable vbundle_119, VariableAccess target_1, AddressOfExpr target_2, AddressOfExpr target_3, BlockStmt target_4
where
not func_0(vbundle_119, target_1, target_2, target_3)
and func_1(vbundle_119, target_4, target_1)
and func_2(vbundle_119, target_2)
and func_3(vbundle_119, target_3)
and func_4(vbundle_119, target_4)
and vbundle_119.getType().hasName("rxrpc_bundle *")
and vbundle_119.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
