/**
 * @name linux-71b547f561247897a0a14f3082730156c0533fed-backtrack_insn
 * @id cpp/linux/71b547f561247897a0a14f3082730156c0533fed/backtrack-insn
 * @description linux-71b547f561247897a0a14f3082730156c0533fed-kernel/bpf/verifier.c-backtrack_insn CVE-2023-2163
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreg_mask_2843, Variable vinsn_2850, Variable vdreg_2854, Variable vsreg_2855, EqualityOperation target_3, PointerDereferenceExpr target_4, NotExpr target_5, LogicalAndExpr target_6, BitwiseAndExpr target_7, ExprStmt target_8) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="code"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2850
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="8"
	and target_0.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="8"
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vreg_mask_2843
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BitwiseOrExpr).getLeftOperand().(VariableAccess).getTarget()=vdreg_2854
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BitwiseOrExpr).getRightOperand().(VariableAccess).getTarget()=vsreg_2855
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen() instanceof ReturnStmt
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vreg_mask_2843
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(VariableAccess).getTarget()=vsreg_2855
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BitwiseOrExpr).getRightOperand().(VariableAccess).getTarget()=vdreg_2854
	and target_0.getParent().(IfStmt).getParent().(IfStmt).getElse().(IfStmt).getElse()=target_0
	and target_0.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_3
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_5.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_7.getRightOperand().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BitwiseOrExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_8.getExpr().(AssignOrExpr).getRValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BitwiseOrExpr).getRightOperand().(VariableAccess).getLocation()))
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Function func, EqualityOperation target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u8")
	and target_3.getRightOperand().(Literal).getValue()="128"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vreg_mask_2843, PointerDereferenceExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vreg_mask_2843
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="BUG regs %x\n"
}

predicate func_5(Parameter vreg_mask_2843, Variable vdreg_2854, ReturnStmt target_9, NotExpr target_5) {
	target_5.getOperand().(BitwiseAndExpr).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vreg_mask_2843
	and target_5.getOperand().(BitwiseAndExpr).getRightOperand().(VariableAccess).getTarget()=vdreg_2854
	and target_5.getParent().(IfStmt).getThen()=target_9
}

predicate func_6(Variable vinsn_2850, LogicalAndExpr target_6) {
	target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="src_reg"
	and target_6.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2850
	and target_6.getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="2"
	and target_6.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="imm"
	and target_6.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinsn_2850
	and target_6.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
}

predicate func_7(Parameter vreg_mask_2843, Variable vdreg_2854, ReturnStmt target_10, BitwiseAndExpr target_7) {
	target_7.getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vreg_mask_2843
	and target_7.getRightOperand().(VariableAccess).getTarget()=vdreg_2854
	and target_7.getParent().(IfStmt).getThen()=target_10
}

predicate func_8(Parameter vreg_mask_2843, Variable vsreg_2855, EqualityOperation target_11, ExprStmt target_8) {
	target_8.getExpr().(AssignOrExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vreg_mask_2843
	and target_8.getExpr().(AssignOrExpr).getRValue().(VariableAccess).getTarget()=vsreg_2855
	and target_8.getParent().(IfStmt).getCondition()=target_11
}

predicate func_9(NotExpr target_5, Function func, ReturnStmt target_9) {
	target_9.getExpr().(Literal).getValue()="0"
	and target_9.getParent().(IfStmt).getCondition()=target_5
	and target_9.getEnclosingFunction() = func
}

predicate func_10(BitwiseAndExpr target_7, Function func, ReturnStmt target_10) {
	target_10.getExpr().(UnaryMinusExpr).getValue()="-524"
	and target_10.getParent().(IfStmt).getCondition()=target_7
	and target_10.getEnclosingFunction() = func
}

predicate func_11(ExprStmt target_8, Function func, EqualityOperation target_11) {
	target_11.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u8")
	and target_11.getRightOperand().(Literal).getValue()="3"
	and target_11.getParent().(IfStmt).getThen()=target_8
	and target_11.getEnclosingFunction() = func
}

from Function func, Parameter vreg_mask_2843, Variable vinsn_2850, Variable vdreg_2854, Variable vsreg_2855, ReturnStmt target_2, EqualityOperation target_3, PointerDereferenceExpr target_4, NotExpr target_5, LogicalAndExpr target_6, BitwiseAndExpr target_7, ExprStmt target_8, ReturnStmt target_9, ReturnStmt target_10, EqualityOperation target_11
where
not func_0(vreg_mask_2843, vinsn_2850, vdreg_2854, vsreg_2855, target_3, target_4, target_5, target_6, target_7, target_8)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vreg_mask_2843, target_4)
and func_5(vreg_mask_2843, vdreg_2854, target_9, target_5)
and func_6(vinsn_2850, target_6)
and func_7(vreg_mask_2843, vdreg_2854, target_10, target_7)
and func_8(vreg_mask_2843, vsreg_2855, target_11, target_8)
and func_9(target_5, func, target_9)
and func_10(target_7, func, target_10)
and func_11(target_8, func, target_11)
and vreg_mask_2843.getType().hasName("u32 *")
and vinsn_2850.getType().hasName("bpf_insn *")
and vdreg_2854.getType().hasName("u32")
and vsreg_2855.getType().hasName("u32")
and vreg_mask_2843.getFunction() = func
and vinsn_2850.(LocalVariable).getFunction() = func
and vdreg_2854.(LocalVariable).getFunction() = func
and vsreg_2855.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
