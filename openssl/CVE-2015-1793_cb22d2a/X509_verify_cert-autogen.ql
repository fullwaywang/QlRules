/**
 * @name openssl-cb22d2ae5a5b6069dbf66dbcce07223ac15a16de-X509_verify_cert
 * @id cpp/openssl/cb22d2ae5a5b6069dbf66dbcce07223ac15a16de/x509-verify-cert
 * @description openssl-cb22d2ae5a5b6069dbf66dbcce07223ac15a16de-crypto/x509/x509_vfy.c-X509_verify_cert CVE-2015-1793
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vj_158, ExprStmt target_1, RelationalOperation target_2, VariableAccess target_0) {
		target_0.getTarget()=vj_158
		and target_1.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getLocation())
		and target_0.getLocation().isBefore(target_2.getGreaterOperand().(PostfixDecrExpr).getOperand().(VariableAccess).getLocation())
}

predicate func_1(Variable vj_158, ExprStmt target_1) {
		target_1.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vj_158
}

predicate func_2(Variable vj_158, RelationalOperation target_2) {
		 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
		and target_2.getGreaterOperand().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vj_158
		and target_2.getLesserOperand().(Literal).getValue()="1"
}

from Function func, Variable vj_158, VariableAccess target_0, ExprStmt target_1, RelationalOperation target_2
where
func_0(vj_158, target_1, target_2, target_0)
and func_1(vj_158, target_1)
and func_2(vj_158, target_2)
and vj_158.getType().hasName("int")
and vj_158.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
