/**
 * @name linux-21b5944350052d2583e82dd59b19a9ba94a007f0-get_net_ns_by_id
 * @id cpp/linux/21b5944350052d2583e82dd59b19a9ba94a007f0/get-net-ns-by-id
 * @description linux-21b5944350052d2583e82dd59b19a9ba94a007f0-net/core/net_namespace.c-get_net_ns_by_id CVE-2017-15129
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpeer_261, FunctionCall target_0) {
	target_0.getTarget().hasName("get_net")
	and not target_0.getTarget().hasName("maybe_get_net")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vpeer_261
}

predicate func_1(Variable vpeer_261, IfStmt target_2, ReturnStmt target_3) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getTarget()=vpeer_261
	and target_1.getRValue().(FunctionCall).getTarget().hasName("maybe_get_net")
	and target_1.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpeer_261
	and target_2.getCondition().(VariableAccess).getLocation().isBefore(target_1.getLValue().(VariableAccess).getLocation())
	and target_1.getLValue().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation()))
}

predicate func_2(Variable vpeer_261, IfStmt target_2) {
	target_2.getCondition().(VariableAccess).getTarget()=vpeer_261
	and target_2.getThen().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Variable vpeer_261, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vpeer_261
}

from Function func, Variable vpeer_261, FunctionCall target_0, IfStmt target_2, ReturnStmt target_3
where
func_0(vpeer_261, target_0)
and not func_1(vpeer_261, target_2, target_3)
and func_2(vpeer_261, target_2)
and func_3(vpeer_261, target_3)
and vpeer_261.getType().hasName("net *")
and vpeer_261.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
