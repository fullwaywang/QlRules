/**
 * @name linux-1d13e7221035947c62800c9d3d99b4ed570e27e7-vsc9953_mdio_bus_alloc
 * @id cpp/linux/1d13e7221035947c62800c9d3d99b4ed570e27e7/vsc9953-mdio-bus-alloc
 * @description linux-1d13e7221035947c62800c9d3d99b4ed570e27e7-drivers/net/dsa/ocelot/seville_vsc9953.c-vsc9953_mdio_bus_alloc CVE-2022-48814
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbus_1090, FunctionCall target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_0.getTarget().hasName("of_mdiobus_register")
	and not target_0.getTarget().hasName("devm_of_mdiobus_register")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbus_1090
	and target_0.getArgument(1).(Literal).getValue()="0"
}

from Function func, Variable vbus_1090, FunctionCall target_0
where
func_0(vbus_1090, target_0)
and vbus_1090.getType().hasName("mii_bus *")
and vbus_1090.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
