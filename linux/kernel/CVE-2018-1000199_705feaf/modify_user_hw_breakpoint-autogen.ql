/**
 * @name linux-705feaf321c37e4dca3637fd5cb3b275f17a06c9-modify_user_hw_breakpoint
 * @id cpp/linux/705feaf321c37e4dca3637fd5cb3b275f17a06c9/modify-user-hw-breakpoint
 * @description linux-705feaf321c37e4dca3637fd5cb3b275f17a06c9-kernel/events/hw_breakpoint.c-modify_user_hw_breakpoint CVE-2018-1000199
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vattr_493, Parameter vbp_493, FunctionCall target_0) {
		target_0.getTarget().hasName("__modify_user_hw_breakpoint")
		and not target_0.getTarget().hasName("modify_user_hw_breakpoint_check")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vbp_493
		and target_0.getArgument(1).(VariableAccess).getTarget()=vattr_493
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vattr_493, Parameter vbp_493, FunctionCall target_0
where
func_0(vattr_493, vbp_493, target_0)
and vattr_493.getType().hasName("perf_event_attr *")
and vbp_493.getType().hasName("perf_event *")
and vattr_493.getFunction() = func
and vbp_493.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
