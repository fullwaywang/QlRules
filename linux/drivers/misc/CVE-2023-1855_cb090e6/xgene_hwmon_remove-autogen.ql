/**
 * @name linux-cb090e64cf25602b9adaf32d5dfc9c8bec493cd1-xgene_hwmon_remove
 * @id cpp/linux/cb090e64cf25602b9adaf32d5dfc9c8bec493cd1/xgene-hwmon-remove
 * @description linux-cb090e64cf25602b9adaf32d5dfc9c8bec493cd1-xgene_hwmon_remove CVE-2023-1855
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vctx_762, ExprStmt target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("cancel_work_sync")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="workq"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_762
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vctx_762, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("hwmon_device_unregister")
		and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="hwmon_dev"
		and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_762
}

from Function func, Variable vctx_762, ExprStmt target_2
where
not func_0(vctx_762, target_2, func)
and func_2(vctx_762, target_2)
and vctx_762.getType().hasName("xgene_hwmon_dev *")
and vctx_762.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
