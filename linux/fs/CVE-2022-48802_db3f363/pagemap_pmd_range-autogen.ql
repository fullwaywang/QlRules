/**
 * @name linux-db3f3636e4aed2cba3e4e7897a053323f7a62249-pagemap_pmd_range
 * @id cpp/linux/db3f3636e4aed2cba3e4e7897a053323f7a62249/pagemap-pmd-range
 * @description linux-db3f3636e4aed2cba3e4e7897a053323f7a62249-fs/proc/task_mmu.c-pagemap_pmd_range CVE-2022-48802
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable ventry_1434, FunctionCall target_3, ExprStmt target_4, ExprStmt target_5) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("is_migration_entry")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=ventry_1434
		)
		and obj_0.getLValue().(VariableAccess).getType().hasName("bool")
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(6)=target_0
			and obj_3.getCondition()=target_3
		)
	)
	and target_4.getExpr().(AssignExpr).getRValue().(BitwiseOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vpage_1417, ExprStmt target_6) {
exists(LogicalAndExpr target_1 |
	exists(LogicalAndExpr obj_0 | obj_0=target_1.getParent() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getRightOperand() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("page_mapcount")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vpage_1417
			)
			and obj_1.getRightOperand().(Literal).getValue()="1"
		)
		and obj_0.getLeftOperand().(VariableAccess).getTarget()=vpage_1417
		and obj_0.getParent().(IfStmt).getThen()=target_6
	)
	and target_1.getLeftOperand().(VariableAccess).getTarget()=vpage_1417
	and target_1.getRightOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
)
}

predicate func_2(Variable vpage_1417, ExprStmt target_6, VariableAccess target_2) {
	exists(LogicalAndExpr obj_0 | obj_0=target_2.getParent() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getRightOperand() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("page_mapcount")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vpage_1417
			)
			and obj_1.getRightOperand().(Literal).getValue()="1"
		)
		and obj_0.getParent().(IfStmt).getThen()=target_6
	)
	and target_2.getTarget()=vpage_1417
}

predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("is_swap_pmd")
	and target_3.getArgument(0).(VariableAccess).getTarget().getType().hasName("pmd_t")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable ventry_1434, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(BitwiseOrExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("swp_type")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=ventry_1434
			)
			and exists(BinaryBitwiseOperation obj_3 | obj_3=obj_1.getRightOperand() |
				obj_3.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
				and obj_3.getRightOperand().(Literal).getValue()="5"
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("u64")
	)
}

predicate func_5(Variable vpage_1417, Variable ventry_1434, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("migration_entry_to_page")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=ventry_1434
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpage_1417
	)
}

predicate func_6(Function func, ExprStmt target_6) {
	exists(AssignOrExpr obj_0 | obj_0=target_6.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("u64")
		and obj_0.getRValue().(BinaryBitwiseOperation).getValue()="72057594037927936"
	)
	and target_6.getEnclosingFunction() = func
}

from Function func, Variable vpage_1417, Variable ventry_1434, VariableAccess target_2, FunctionCall target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6
where
not func_0(ventry_1434, target_3, target_4, target_5)
and not func_1(vpage_1417, target_6)
and func_2(vpage_1417, target_6, target_2)
and func_3(func, target_3)
and func_4(ventry_1434, target_4)
and func_5(vpage_1417, ventry_1434, target_5)
and func_6(func, target_6)
and vpage_1417.getType().hasName("page *")
and ventry_1434.getType().hasName("swp_entry_t")
and vpage_1417.(LocalVariable).getFunction() = func
and ventry_1434.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
