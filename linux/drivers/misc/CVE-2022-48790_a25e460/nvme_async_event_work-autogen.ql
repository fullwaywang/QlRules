/**
 * @name linux-a25e460fbb0340488d119fb2e28fe3f829b7417e-nvme_async_event_work
 * @id cpp/linux/a25e460fbb0340488d119fb2e28fe3f829b7417e/nvme-async-event-work
 * @description linux-a25e460fbb0340488d119fb2e28fe3f829b7417e-drivers/nvme/host/core.c-nvme_async_event_work CVE-2022-48790
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vctrl_3462, ExprStmt target_1, ExprStmt target_2, PointerFieldAccess target_3, Function func) {
exists(IfStmt target_0 |
	exists(EqualityOperation obj_0 | obj_0=target_0.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="state"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vctrl_3462
		)
	)
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vctrl_3462, Function func, ExprStmt target_1) {
	exists(VariableCall obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="ops"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vctrl_3462
			)
			and obj_1.getTarget().getName()="submit_async_event"
		)
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vctrl_3462
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vctrl_3462, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("nvme_aen_uevent")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vctrl_3462
	)
}

predicate func_3(Variable vctrl_3462, PointerFieldAccess target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getQualifier() |
		obj_0.getTarget().getName()="ops"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vctrl_3462
	)
	and target_3.getTarget().getName()="submit_async_event"
}

from Function func, Variable vctrl_3462, ExprStmt target_1, ExprStmt target_2, PointerFieldAccess target_3
where
not func_0(vctrl_3462, target_1, target_2, target_3, func)
and func_1(vctrl_3462, func, target_1)
and func_2(vctrl_3462, target_2)
and func_3(vctrl_3462, target_3)
and vctrl_3462.getType().hasName("nvme_ctrl *")
and vctrl_3462.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
