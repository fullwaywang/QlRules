/**
 * @name linux-aa838896d87af561a33ecefea1caa4c15a68bc47-runtime_enabled_show
 * @id cpp/linux/aa838896d87af561a33ecefea1caa4c15a68bc47/runtime-enabled-show
 * @description linux-aa838896d87af561a33ecefea1caa4c15a68bc47-drivers/base/power/sysfs.c-runtime_enabled_show CVE-2022-20166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_539, FunctionCall target_0) {
	target_0.getTarget().hasName("sprintf")
	and not target_0.getTarget().hasName("sysfs_emit")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_539
	and target_0.getArgument(1).(StringLiteral).getValue()="disabled & forbidden\n"
}

predicate func_1(Parameter vbuf_539, FunctionCall target_1) {
	target_1.getTarget().hasName("sprintf")
	and not target_1.getTarget().hasName("sysfs_emit")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vbuf_539
	and target_1.getArgument(1).(StringLiteral).getValue()="disabled\n"
}

predicate func_2(Parameter vbuf_539, FunctionCall target_2) {
	target_2.getTarget().hasName("sprintf")
	and not target_2.getTarget().hasName("sysfs_emit")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vbuf_539
	and target_2.getArgument(1).(StringLiteral).getValue()="forbidden\n"
}

predicate func_3(Parameter vbuf_539, FunctionCall target_3) {
	target_3.getTarget().hasName("sprintf")
	and not target_3.getTarget().hasName("sysfs_emit")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vbuf_539
	and target_3.getArgument(1).(StringLiteral).getValue()="enabled\n"
}

from Function func, Parameter vbuf_539, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, FunctionCall target_3
where
func_0(vbuf_539, target_0)
and func_1(vbuf_539, target_1)
and func_2(vbuf_539, target_2)
and func_3(vbuf_539, target_3)
and vbuf_539.getType().hasName("char *")
and vbuf_539.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
