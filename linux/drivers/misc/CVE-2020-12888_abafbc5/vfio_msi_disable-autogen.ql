/**
 * @name linux-abafbc551fddede3e0a08dee1dcde08fc0eb8476-vfio_msi_disable
 * @id cpp/linux/abafbc551fddede3e0a08dee1dcde08fc0eb8476/vfio-msi-disable
 * @description linux-abafbc551fddede3e0a08dee1dcde08fc0eb8476-drivers/vfio/pci/vfio_pci_intrs.c-vfio_msi_disable CVE-2020-12888
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvdev_375, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("u16")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vfio_pci_memory_lock_and_enable")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvdev_375
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvdev_375, IfStmt target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("vfio_pci_memory_unlock_and_restore")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvdev_375
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("u16")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation()))
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("pci_free_irq_vectors")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("pci_dev *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vvdev_375, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("vfio_msi_set_block")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvdev_375
	and target_3.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="num_ctx"
	and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvdev_375
	and target_3.getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
	and target_3.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("bool")
}

predicate func_4(Parameter vvdev_375, IfStmt target_4) {
	target_4.getCondition().(PointerFieldAccess).getTarget().getName()="nointx"
	and target_4.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvdev_375
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("pci_intx")
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("pci_dev *")
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Parameter vvdev_375, ExprStmt target_2, ExprStmt target_3, IfStmt target_4
where
not func_0(vvdev_375, target_2, target_3, func)
and not func_1(vvdev_375, target_4, func)
and func_2(func, target_2)
and func_3(vvdev_375, target_3)
and func_4(vvdev_375, target_4)
and vvdev_375.getType().hasName("vfio_pci_device *")
and vvdev_375.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
