/**
 * @name linux-8d037973d48c026224ab285e6a06985ccac6f7bf-cma_bind_addr
 * @id cpp/linux/8d037973d48c026224ab285e6a06985ccac6f7bf/cma-bind-addr
 * @description linux-8d037973d48c026224ab285e6a06985ccac6f7bf-cma_bind_addr CVE-2023-2176
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vid_3544, Parameter vsrc_addr_3544, FunctionCall target_0) {
		target_0.getTarget().hasName("rdma_bind_addr")
		and not target_0.getTarget().hasName("rdma_bind_addr_dst")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vid_3544
		and target_0.getArgument(1).(VariableAccess).getTarget()=vsrc_addr_3544
}

predicate func_1(Parameter vid_3544, Variable vzero_sock_3547, FunctionCall target_1) {
		target_1.getTarget().hasName("rdma_bind_addr")
		and not target_1.getTarget().hasName("rdma_bind_addr_dst")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vid_3544
		and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vzero_sock_3547
}

predicate func_6(Parameter vid_3544, VariableAccess target_6) {
		target_6.getTarget()=vid_3544
		and target_6.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr() instanceof FunctionCall
}

from Function func, Parameter vid_3544, Parameter vsrc_addr_3544, Variable vzero_sock_3547, FunctionCall target_0, FunctionCall target_1, VariableAccess target_6
where
func_0(vid_3544, vsrc_addr_3544, target_0)
and func_1(vid_3544, vzero_sock_3547, target_1)
and func_6(vid_3544, target_6)
and vid_3544.getType().hasName("rdma_cm_id *")
and vsrc_addr_3544.getType().hasName("sockaddr *")
and vzero_sock_3547.getType().hasName("__kernel_sockaddr_storage")
and vid_3544.getFunction() = func
and vsrc_addr_3544.getFunction() = func
and vzero_sock_3547.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
