/**
 * @name linux-4ef1b2869447411ad3ef91ad7d4891a83c1a509a-__sock_recv_timestamp
 * @id cpp/linux/4ef1b2869447411ad3ef91ad7d4891a83c1a509a/--sock-recv-timestamp
 * @description linux-4ef1b2869447411ad3ef91ad7d4891a83c1a509a-net/socket.c-__sock_recv_timestamp CVE-2017-7277
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_669, LogicalAndExpr target_2, ExprStmt target_3) {
	exists(PointerFieldAccess target_0 |
		target_0.getTarget().getName()="opt_stats"
		and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_669
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vskb_669, Parameter vsk_668, ExprStmt target_3, BitwiseAndExpr target_1) {
		target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="sk_tsflags"
		and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_668
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("skb_is_err_queue")
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_669
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="len"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_669
		and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Parameter vskb_669, LogicalAndExpr target_2) {
		target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("skb_is_err_queue")
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_669
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="len"
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_669
		and target_2.getAnOperand() instanceof BitwiseAndExpr
}

predicate func_3(Parameter vskb_669, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("put_cmsg")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("msghdr *")
		and target_3.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
		and target_3.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="54"
		and target_3.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="len"
		and target_3.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_669
		and target_3.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="data"
		and target_3.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_669
}

from Function func, Parameter vskb_669, Parameter vsk_668, BitwiseAndExpr target_1, LogicalAndExpr target_2, ExprStmt target_3
where
not func_0(vskb_669, target_2, target_3)
and func_1(vskb_669, vsk_668, target_3, target_1)
and func_2(vskb_669, target_2)
and func_3(vskb_669, target_3)
and vskb_669.getType().hasName("sk_buff *")
and vsk_668.getType().hasName("sock *")
and vskb_669.getFunction() = func
and vsk_668.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
