/**
 * @name linux-372e3147df7016ebeaa372939e8774a1292db558-binder_deferred_release
 * @id cpp/linux/372e3147df7016ebeaa372939e8774a1292db558/binder-deferred-release
 * @description linux-372e3147df7016ebeaa372939e8774a1292db558-drivers/android/binder.c-binder_deferred_release CVE-2018-20509
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, BuiltInOperationBuiltInOffsetOf target_0) {
	target_0.getValue()="8"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vref_3472, FunctionCall target_1) {
	target_1.getTarget().hasName("binder_delete_ref")
	and not target_1.getTarget().hasName("binder_cleanup_ref")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vref_3472
}

predicate func_2(Variable vref_3472) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("binder_free_ref")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vref_3472)
}

from Function func, Variable vref_3472, BuiltInOperationBuiltInOffsetOf target_0, FunctionCall target_1
where
func_0(func, target_0)
and func_1(vref_3472, target_1)
and not func_2(vref_3472)
and vref_3472.getType().hasName("binder_ref *")
and vref_3472.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
