/**
 * @name linux-64dd153c83743af81f20924c6343652d731eeecb-fallocate_chunk
 * @id cpp/linux/64dd153c83743af81f20924c6343652d731eeecb/fallocate-chunk
 * @description linux-64dd153c83743af81f20924c6343652d731eeecb-fs/gfs2/file.c-fallocate_chunk CVE-2011-4098
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verror_786, UnaryMinusExpr target_0) {
	target_0.getValue()="-12"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_786
}

predicate func_1(Parameter voffset_781, Initializer target_1) {
	target_1.getExpr().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_1.getExpr().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
}

/*predicate func_2(Parameter voffset_781, BitwiseAndExpr target_67, Literal target_2) {
	target_2.getValue()="12"
	and not target_2.getValue()="0"
	and target_2.getParent().(RShiftExpr).getParent().(Initializer).getExpr().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_2.getParent().(RShiftExpr).getParent().(Initializer).getExpr().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_67.getLeftOperand().(VariableAccess).getLocation())
}

*/
predicate func_3(Parameter voffset_781, Initializer target_3) {
	target_3.getExpr().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_3.getExpr().(BitwiseAndExpr).getRightOperand() instanceof ComplementExpr
}

/*predicate func_4(Parameter voffset_781, VariableAccess target_4) {
	target_4.getTarget()=voffset_781
	and voffset_781.getIndex() = 1
}

*/
predicate func_5(Function func, Literal target_5) {
	target_5.getValue()="12"
	and not target_5.getValue()="0"
	and target_5.getParent().(LShiftExpr).getParent().(SubExpr).getLeftOperand() instanceof BinaryBitwiseOperation
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vend_offset_792, ExprStmt target_68, VariableAccess target_6) {
	target_6.getTarget()=vend_offset_792
	and target_6.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_68
}

predicate func_7(Variable vend_offset_792, VariableAccess target_7) {
	target_7.getTarget()=vend_offset_792
	and target_7.getParent().(AssignExpr).getLValue() = target_7
	and target_7.getParent().(AssignExpr).getRValue() instanceof BinaryBitwiseOperation
}

predicate func_8(Parameter voffset_781, VariableAccess target_8) {
	target_8.getTarget()=voffset_781
	and voffset_781.getIndex() = 1
	and target_8.getParent().(AssignExpr).getLValue() = target_8
	and target_8.getParent().(AssignExpr).getRValue() instanceof BinaryBitwiseOperation
}

predicate func_9(Parameter vmode_782, Variable verror_786, Variable vpage_791, Variable vfrom_793, Variable vto_793, FunctionCall target_9) {
	target_9.getTarget().hasName("write_empty_blocks")
	and not target_9.getTarget().hasName("gfs2_block_map")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vpage_791
	and target_9.getArgument(1).(VariableAccess).getTarget()=vfrom_793
	and target_9.getArgument(2).(VariableAccess).getTarget()=vto_793
	and target_9.getArgument(3).(VariableAccess).getTarget()=vmode_782
	and target_9.getParent().(AssignExpr).getRValue() = target_9
	and target_9.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_786
}

predicate func_10(Parameter voffset_781, VariableAccess target_10) {
	target_10.getTarget()=voffset_781
	and voffset_781.getIndex() = 1
}

predicate func_11(Variable vpage_791, FunctionCall target_11) {
	target_11.getTarget().hasName("unlock_page")
	and not target_11.getTarget().hasName("set_buffer_zeronew")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vpage_791
}

predicate func_12(Variable vend_offset_792, ExprStmt target_69, IfStmt target_12) {
	target_12.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vend_offset_792
	and target_12.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vend_offset_792
	and target_12.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof BinaryBitwiseOperation
	and target_12.getLocation().isBefore(target_69.getLocation())
}

predicate func_14(Parameter vinode_781) {
exists(PointerFieldAccess target_14 |
	target_14.getTarget().getName()="i_blkbits"
	and target_14.getQualifier().(VariableAccess).getTarget()=vinode_781)
}

predicate func_17(Function func) {
exists(AssignExpr target_17 |
	target_17.getLValue().(ValueFieldAccess).getTarget().getName()="b_size"
	and target_17.getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("buffer_head")
	and target_17.getRValue().(VariableAccess).getType().hasName("loff_t")
	and target_17.getEnclosingFunction() = func)
}

predicate func_18(Function func) {
exists(AddressOfExpr target_18 |
	target_18.getOperand().(VariableAccess).getType().hasName("buffer_head")
	and target_18.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_18.getEnclosingFunction() = func)
}

predicate func_20(Function func) {
exists(AddressOfExpr target_20 |
	target_20.getOperand().(VariableAccess).getType().hasName("buffer_head")
	and target_20.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_20.getEnclosingFunction() = func)
}

predicate func_21(Function func) {
exists(AssignSubExpr target_21 |
	target_21.getLValue().(VariableAccess).getType().hasName("loff_t")
	and target_21.getRValue().(ValueFieldAccess).getTarget().getName()="b_size"
	and target_21.getRValue().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("buffer_head")
	and target_21.getEnclosingFunction() = func)
}

predicate func_22(Parameter vinode_781, Variable vend_offset_792, FunctionCall target_71, ExprStmt target_54) {
exists(BinaryBitwiseOperation target_22 |
	target_22.getLeftOperand().(ValueFieldAccess).getTarget().getName()="b_size"
	and target_22.getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getType().hasName("buffer_head")
	and target_22.getRightOperand().(PointerFieldAccess).getTarget().getName()="i_blkbits"
	and target_22.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_781
	and target_22.getParent().(AssignExpr).getRValue() = target_22
	and target_22.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vend_offset_792
	and target_71.getArgument(0).(VariableAccess).getLocation().isBefore(target_22.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_22.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_54.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_23(Function func) {
exists(AssignAddExpr target_23 |
	target_23.getLValue().(VariableAccess).getType().hasName("sector_t")
	and target_23.getRValue().(VariableAccess).getType().hasName("unsigned int")
	and target_23.getEnclosingFunction() = func)
}

predicate func_24(Variable vend_offset_792, ExprStmt target_68) {
exists(FunctionCall target_24 |
	target_24.getTarget().hasName("buffer_new")
	and target_24.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("buffer_head")
	and target_24.getParent().(NotExpr).getOperand().(VariableAccess).getTarget()=vend_offset_792
	and target_24.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_68)
}

predicate func_25(EqualityOperation target_56, Function func) {
exists(ContinueStmt target_25 |
	target_25.getParent().(IfStmt).getCondition()=target_56
	and target_25.getEnclosingFunction() = func)
}

predicate func_26(BlockStmt target_72, Function func) {
exists(FunctionCall target_26 |
	target_26.getTarget().hasName("__builtin_expect")
	and target_26.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("buffer_zeronew")
	and target_26.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("buffer_head")
	and target_26.getArgument(1).(Literal).getValue()="0"
	and target_26.getParent().(IfStmt).getThen()=target_72
	and target_26.getEnclosingFunction() = func)
}

/*predicate func_27(Function func) {
exists(FunctionCall target_27 |
	target_27.getTarget().hasName("buffer_zeronew")
	and target_27.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("buffer_head")
	and target_27.getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_27.getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_27.getEnclosingFunction() = func)
}

*/
predicate func_29(Variable verror_786, IfStmt target_73, ReturnStmt target_35, Function func) {
exists(ReturnStmt target_29 |
	target_29.getExpr().(VariableAccess).getTarget()=verror_786
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_29
	and target_29.getLocation().isBefore(target_73.getLocation())
	and target_29.getExpr().(VariableAccess).getLocation().isBefore(target_35.getExpr().(VariableAccess).getLocation()))
}

/*predicate func_30(Variable verror_786, FunctionCall target_30) {
	target_30.getTarget().hasName("__builtin_expect")
	and target_30.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verror_786
	and target_30.getArgument(1).(Literal).getValue()="0"
	and target_30.getParent().(IfStmt).getThen() instanceof GotoStmt
}

*/
predicate func_31(Parameter voffset_781, Parameter vlen_781, AddExpr target_31) {
	target_31.getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_31.getRightOperand().(VariableAccess).getTarget()=vlen_781
}

predicate func_32(Parameter voffset_781, Parameter vlen_781, AddExpr target_32) {
	target_32.getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_32.getRightOperand().(VariableAccess).getTarget()=vlen_781
}

predicate func_33(Variable verror_786, Function func, IfStmt target_33) {
	target_33.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_33.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verror_786
	and target_33.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_33.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_33
}

predicate func_34(Variable verror_786, NotExpr target_34) {
	target_34.getOperand().(VariableAccess).getTarget()=verror_786
}

predicate func_35(Variable verror_786, Function func, ReturnStmt target_35) {
	target_35.getExpr().(VariableAccess).getTarget()=verror_786
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_35
}

predicate func_36(Parameter vinode_781, VariableAccess target_36) {
	target_36.getTarget()=vinode_781
	and target_36.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_37(Parameter vinode_781, VariableAccess target_37) {
	target_37.getTarget()=vinode_781
	and target_37.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("i_size_write")
	and target_37.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof AddExpr
}

predicate func_39(Variable verror_786, VariableAccess target_39) {
	target_39.getTarget()=verror_786
	and target_39.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_42(Function func, ComplementExpr target_42) {
	target_42.getValue()="4095"
	and target_42.getEnclosingFunction() = func
}

predicate func_44(Function func, DeclStmt target_44) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_44
}

predicate func_45(Function func, DeclStmt target_45) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_45
}

predicate func_46(Function func, DeclStmt target_46) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_46
}

predicate func_47(Function func, DeclStmt target_47) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_47
}

predicate func_48(Variable vend_offset_792, NotExpr target_74, ExprStmt target_57, BinaryBitwiseOperation target_48) {
	target_48.getValue()="4096"
	and target_48.getParent().(AssignExpr).getRValue() = target_48
	and target_48.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vend_offset_792
	and target_74.getOperand().(VariableAccess).getLocation().isBefore(target_48.getParent().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_48.getParent().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_57.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
}

predicate func_49(Variable vstart_787, Variable vcurr_790, AssignExpr target_49) {
	target_49.getLValue().(VariableAccess).getTarget()=vcurr_790
	and target_49.getRValue().(VariableAccess).getTarget()=vstart_787
}

predicate func_50(Parameter voffset_781, Variable vstart_787, AssignExpr target_50) {
	target_50.getLValue().(VariableAccess).getTarget()=voffset_781
	and target_50.getRValue().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=vstart_787
	and target_50.getRValue().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
}

predicate func_51(Variable vstart_offset_788, Variable vfrom_793, AssignExpr target_51) {
	target_51.getLValue().(VariableAccess).getTarget()=vfrom_793
	and target_51.getRValue().(VariableAccess).getTarget()=vstart_offset_788
}

predicate func_52(Variable vto_793, Function func, ExprStmt target_52) {
	target_52.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vto_793
	and target_52.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getValue()="4096"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_52
}

predicate func_53(Variable vend_789, Variable vcurr_790, RelationalOperation target_53) {
	 (target_53 instanceof GEExpr or target_53 instanceof LEExpr)
	and target_53.getLesserOperand().(VariableAccess).getTarget()=vcurr_790
	and target_53.getGreaterOperand().(VariableAccess).getTarget()=vend_789
}

predicate func_54(Parameter vinode_781, Variable vcurr_790, Variable vpage_791, ExprStmt target_54) {
	target_54.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpage_791
	and target_54.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("grab_cache_page_write_begin")
	and target_54.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_mapping"
	and target_54.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_781
	and target_54.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcurr_790
	and target_54.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="4"
}

predicate func_55(Variable vpage_791, ExprStmt target_54, VariableAccess target_55) {
	target_55.getTarget()=vpage_791
	and target_55.getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_55.getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_54.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_55.getLocation())
}

predicate func_56(Variable vend_789, Variable vcurr_790, ExprStmt target_57, EqualityOperation target_56) {
	target_56.getLeftOperand().(VariableAccess).getTarget()=vcurr_790
	and target_56.getRightOperand().(VariableAccess).getTarget()=vend_789
	and target_56.getParent().(IfStmt).getThen()=target_57
}

predicate func_57(Variable vend_offset_792, Variable vto_793, EqualityOperation target_56, ExprStmt target_57) {
	target_57.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vto_793
	and target_57.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vend_offset_792
	and target_57.getParent().(IfStmt).getCondition()=target_56
}

predicate func_58(Parameter vinode_781, Parameter voffset_781, Parameter vmode_782, Variable vto_793, BlockStmt target_72, LogicalAndExpr target_58) {
	target_58.getLeftOperand() instanceof NotExpr
	and target_58.getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_58.getRightOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vto_793
	and target_58.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="i_size"
	and target_58.getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_781
	and target_58.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vmode_782
	and target_58.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_58.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_72
}

/*predicate func_59(Parameter voffset_781, Variable vto_793, AddExpr target_61, AddExpr target_59) {
	target_59.getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_59.getRightOperand().(VariableAccess).getTarget()=vto_793
	and target_59.getLeftOperand().(VariableAccess).getLocation().isBefore(target_61.getLeftOperand().(VariableAccess).getLocation())
}

*/
predicate func_60(Parameter vinode_781, Parameter voffset_781, Variable vto_793, LogicalAndExpr target_78, ExprStmt target_60) {
	target_60.getExpr().(FunctionCall).getTarget().hasName("i_size_write")
	and target_60.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_781
	and target_60.getExpr().(FunctionCall).getArgument(1).(AddExpr).getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_60.getExpr().(FunctionCall).getArgument(1).(AddExpr).getRightOperand().(VariableAccess).getTarget()=vto_793
	and target_60.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_78
}

predicate func_61(Parameter vinode_781, Parameter voffset_781, Variable vto_793, AddExpr target_61) {
	target_61.getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_61.getRightOperand().(VariableAccess).getTarget()=vto_793
	and target_61.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("i_size_write")
	and target_61.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_781
}

predicate func_62(Variable vpage_791, FunctionCall target_62) {
	target_62.getTarget().hasName("put_page")
	and target_62.getArgument(0).(VariableAccess).getTarget()=vpage_791
}

predicate func_63(Variable verror_786, IfStmt target_63) {
	target_63.getCondition().(VariableAccess).getTarget()=verror_786
	and target_63.getThen().(GotoStmt).getName() ="out"
}

predicate func_64(Variable vcurr_790, ExprStmt target_64) {
	target_64.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vcurr_790
}

predicate func_65(Parameter voffset_781, ExprStmt target_65) {
	target_65.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=voffset_781
	and target_65.getExpr().(AssignAddExpr).getRValue().(BinaryBitwiseOperation).getValue()="4096"
}

predicate func_66(Variable vfrom_793, ExprStmt target_66) {
	target_66.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfrom_793
	and target_66.getExpr().(AssignExpr).getRValue() instanceof Literal
}

predicate func_67(Parameter voffset_781, BitwiseAndExpr target_67) {
	target_67.getLeftOperand().(VariableAccess).getTarget()=voffset_781
	and target_67.getRightOperand() instanceof ComplementExpr
}

predicate func_68(Variable vend_offset_792, ExprStmt target_68) {
	target_68.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vend_offset_792
	and target_68.getExpr().(AssignExpr).getRValue() instanceof BinaryBitwiseOperation
}

predicate func_69(Variable verror_786, ExprStmt target_69) {
	target_69.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_786
	and target_69.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("gfs2_meta_inode_buffer")
	and target_69.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("gfs2_inode *")
	and target_69.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("buffer_head *")
}

predicate func_71(Parameter vinode_781, FunctionCall target_71) {
	target_71.getTarget().hasName("GFS2_I")
	and target_71.getArgument(0).(VariableAccess).getTarget()=vinode_781
}

predicate func_72(Function func, BlockStmt target_72) {
	target_72.getStmt(0) instanceof ExprStmt
	and target_72.getEnclosingFunction() = func
}

predicate func_73(Variable verror_786, IfStmt target_73) {
	target_73.getCondition().(FunctionCall).getTarget().hasName("gfs2_is_stuffed")
	and target_73.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("gfs2_inode *")
	and target_73.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_786
	and target_73.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("gfs2_unstuff_dinode")
	and target_73.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("gfs2_inode *")
	and target_73.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_73.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_73.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verror_786
	and target_73.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_73.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="out"
}

predicate func_74(Variable vend_offset_792, NotExpr target_74) {
	target_74.getOperand().(VariableAccess).getTarget()=vend_offset_792
}

predicate func_78(Parameter vmode_782, LogicalAndExpr target_78) {
	target_78.getLeftOperand() instanceof LogicalAndExpr
	and target_78.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vmode_782
	and target_78.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
}

from Function func, Parameter vinode_781, Parameter voffset_781, Parameter vlen_781, Parameter vmode_782, Variable verror_786, Variable vstart_787, Variable vstart_offset_788, Variable vend_789, Variable vcurr_790, Variable vpage_791, Variable vend_offset_792, Variable vfrom_793, Variable vto_793, UnaryMinusExpr target_0, Initializer target_1, Initializer target_3, Literal target_5, VariableAccess target_6, VariableAccess target_7, VariableAccess target_8, FunctionCall target_9, VariableAccess target_10, FunctionCall target_11, IfStmt target_12, AddExpr target_31, AddExpr target_32, IfStmt target_33, NotExpr target_34, ReturnStmt target_35, VariableAccess target_36, VariableAccess target_37, VariableAccess target_39, ComplementExpr target_42, DeclStmt target_44, DeclStmt target_45, DeclStmt target_46, DeclStmt target_47, BinaryBitwiseOperation target_48, AssignExpr target_49, AssignExpr target_50, AssignExpr target_51, ExprStmt target_52, RelationalOperation target_53, ExprStmt target_54, VariableAccess target_55, EqualityOperation target_56, ExprStmt target_57, LogicalAndExpr target_58, ExprStmt target_60, AddExpr target_61, FunctionCall target_62, IfStmt target_63, ExprStmt target_64, ExprStmt target_65, ExprStmt target_66, BitwiseAndExpr target_67, ExprStmt target_68, ExprStmt target_69, FunctionCall target_71, BlockStmt target_72, IfStmt target_73, NotExpr target_74, LogicalAndExpr target_78
where
func_0(verror_786, target_0)
and func_1(voffset_781, target_1)
and func_3(voffset_781, target_3)
and func_5(func, target_5)
and func_6(vend_offset_792, target_68, target_6)
and func_7(vend_offset_792, target_7)
and func_8(voffset_781, target_8)
and func_9(vmode_782, verror_786, vpage_791, vfrom_793, vto_793, target_9)
and func_10(voffset_781, target_10)
and func_11(vpage_791, target_11)
and func_12(vend_offset_792, target_69, target_12)
and not func_14(vinode_781)
and not func_17(func)
and not func_18(func)
and not func_20(func)
and not func_21(func)
and not func_22(vinode_781, vend_offset_792, target_71, target_54)
and not func_23(func)
and not func_24(vend_offset_792, target_68)
and not func_25(target_56, func)
and not func_26(target_72, func)
and not func_29(verror_786, target_73, target_35, func)
and func_31(voffset_781, vlen_781, target_31)
and func_32(voffset_781, vlen_781, target_32)
and func_33(verror_786, func, target_33)
and func_34(verror_786, target_34)
and func_35(verror_786, func, target_35)
and func_36(vinode_781, target_36)
and func_37(vinode_781, target_37)
and func_39(verror_786, target_39)
and func_42(func, target_42)
and func_44(func, target_44)
and func_45(func, target_45)
and func_46(func, target_46)
and func_47(func, target_47)
and func_48(vend_offset_792, target_74, target_57, target_48)
and func_49(vstart_787, vcurr_790, target_49)
and func_50(voffset_781, vstart_787, target_50)
and func_51(vstart_offset_788, vfrom_793, target_51)
and func_52(vto_793, func, target_52)
and func_53(vend_789, vcurr_790, target_53)
and func_54(vinode_781, vcurr_790, vpage_791, target_54)
and func_55(vpage_791, target_54, target_55)
and func_56(vend_789, vcurr_790, target_57, target_56)
and func_57(vend_offset_792, vto_793, target_56, target_57)
and func_58(vinode_781, voffset_781, vmode_782, vto_793, target_72, target_58)
and func_60(vinode_781, voffset_781, vto_793, target_78, target_60)
and func_61(vinode_781, voffset_781, vto_793, target_61)
and func_62(vpage_791, target_62)
and func_63(verror_786, target_63)
and func_64(vcurr_790, target_64)
and func_65(voffset_781, target_65)
and func_66(vfrom_793, target_66)
and func_67(voffset_781, target_67)
and func_68(vend_offset_792, target_68)
and func_69(verror_786, target_69)
and func_71(vinode_781, target_71)
and func_72(func, target_72)
and func_73(verror_786, target_73)
and func_74(vend_offset_792, target_74)
and func_78(vmode_782, target_78)
and vinode_781.getType().hasName("inode *")
and voffset_781.getType().hasName("loff_t")
and vlen_781.getType().hasName("loff_t")
and vmode_782.getType().hasName("int")
and verror_786.getType().hasName("int")
and vstart_787.getType().hasName("u64")
and vstart_offset_788.getType().hasName("unsigned int")
and vend_789.getType().hasName("u64")
and vcurr_790.getType().hasName("unsigned long")
and vpage_791.getType().hasName("page *")
and vend_offset_792.getType().hasName("unsigned int")
and vfrom_793.getType().hasName("unsigned int")
and vto_793.getType().hasName("unsigned int")
and vinode_781.getFunction() = func
and voffset_781.getFunction() = func
and vlen_781.getFunction() = func
and vmode_782.getFunction() = func
and verror_786.(LocalVariable).getFunction() = func
and vstart_787.(LocalVariable).getFunction() = func
and vstart_offset_788.(LocalVariable).getFunction() = func
and vend_789.(LocalVariable).getFunction() = func
and vcurr_790.(LocalVariable).getFunction() = func
and vpage_791.(LocalVariable).getFunction() = func
and vend_offset_792.(LocalVariable).getFunction() = func
and vfrom_793.(LocalVariable).getFunction() = func
and vto_793.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
