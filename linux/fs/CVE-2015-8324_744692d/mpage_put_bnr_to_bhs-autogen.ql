/**
 * @name linux-744692dc059845b2a3022119871846e74d4f6e11-mpage_put_bnr_to_bhs
 * @id cpp/linux/744692dc059845b2a3022119871846e74d4f6e11/mpage-put-bnr-to-bhs
 * @description linux-744692dc059845b2a3022119871846e74d4f6e11-fs/ext4/inode.c-mpage_put_bnr_to_bhs CVE-2015-8324
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vexbh_2027, Variable vbh_2033, ExprStmt target_1, NotExpr target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("buffer_uninit")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vexbh_2027
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_buffer_uninit")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbh_2033
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sector_t")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vbh_2033, DoStmt target_3, NotExpr target_2) {
	target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="b_blocknr"
	and target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbh_2033
	and target_2.getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("sector_t")
	and target_2.getParent().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_3
}

predicate func_3(FunctionCall target_4, Function func, DoStmt target_3) {
	target_3.getCondition() instanceof Literal
	and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
	and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
	and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_3.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2).(SizeofTypeOperator).getValue()="12"
	and target_3.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_unreachable")
	and target_3.getParent().(IfStmt).getCondition()=target_4
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vbh_2033, DoStmt target_3, FunctionCall target_4) {
	target_4.getTarget().hasName("__builtin_expect")
	and target_4.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="b_blocknr"
	and target_4.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbh_2033
	and target_4.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("sector_t")
	and target_4.getArgument(1) instanceof Literal
	and target_4.getParent().(IfStmt).getThen()=target_3
}

from Function func, Parameter vexbh_2027, Variable vbh_2033, ExprStmt target_1, NotExpr target_2, DoStmt target_3, FunctionCall target_4
where
not func_0(vexbh_2027, vbh_2033, target_1, target_2)
and func_1(func, target_1)
and func_2(vbh_2033, target_3, target_2)
and func_3(target_4, func, target_3)
and func_4(vbh_2033, target_3, target_4)
and vexbh_2027.getType().hasName("buffer_head *")
and vbh_2033.getType().hasName("buffer_head *")
and vexbh_2027.getFunction() = func
and vbh_2033.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
