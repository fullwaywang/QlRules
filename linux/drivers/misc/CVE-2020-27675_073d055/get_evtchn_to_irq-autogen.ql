/**
 * @name linux-073d0552ead5bfc7a3a9c01de590e924f11b5dd2-get_evtchn_to_irq
 * @id cpp/linux/073d0552ead5bfc7a3a9c01de590e924f11b5dd2/get-evtchn-to-irq
 * @description linux-073d0552ead5bfc7a3a9c01de590e924f11b5dd2-get_evtchn_to_irq CVE-2020-27675
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(StmtExpr target_0 |
		target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
		and target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__compiletime_assert_1480")
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vevtchn_149, Variable vevtchn_to_irq, ArrayExpr target_1) {
		target_1.getArrayBase().(VariableAccess).getTarget()=vevtchn_to_irq
		and target_1.getArrayOffset().(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vevtchn_149
		and target_1.getArrayOffset().(DivExpr).getRightOperand().(DivExpr).getValue()="1024"
		and target_1.getParent().(ArrayExpr).getArrayOffset().(RemExpr).getLeftOperand().(VariableAccess).getTarget()=vevtchn_149
		and target_1.getParent().(ArrayExpr).getArrayOffset().(RemExpr).getRightOperand().(DivExpr).getValue()="1024"
}

/*predicate func_2(Parameter vevtchn_149, Variable vevtchn_to_irq, RemExpr target_2) {
		target_2.getLeftOperand().(VariableAccess).getTarget()=vevtchn_149
		and target_2.getRightOperand().(DivExpr).getValue()="1024"
		and target_2.getParent().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vevtchn_to_irq
		and target_2.getParent().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayOffset().(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vevtchn_149
		and target_2.getParent().(ArrayExpr).getArrayBase().(ArrayExpr).getArrayOffset().(DivExpr).getRightOperand().(DivExpr).getValue()="1024"
}

*/
predicate func_3(Function func, ArrayExpr target_3) {
		target_3.getArrayBase() instanceof ArrayExpr
		and target_3.getArrayOffset() instanceof RemExpr
		and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vevtchn_149, Variable vevtchn_to_irq, ArrayExpr target_1, ArrayExpr target_3
where
not func_0(func)
and func_1(vevtchn_149, vevtchn_to_irq, target_1)
and func_3(func, target_3)
and vevtchn_149.getType().hasName("evtchn_port_t")
and vevtchn_to_irq.getType().hasName("int **")
and vevtchn_149.getFunction() = func
and not vevtchn_to_irq.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
