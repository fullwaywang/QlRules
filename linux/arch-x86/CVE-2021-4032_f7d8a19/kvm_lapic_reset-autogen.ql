/**
 * @name linux-f7d8a19f9a056a05c5c509fa65af472a322abfee-kvm_lapic_reset
 * @id cpp/linux/f7d8a19f9a056a05c5c509fa65af472a322abfee/kvm-lapic-reset
 * @description linux-f7d8a19f9a056a05c5c509fa65af472a322abfee-arch/x86/kvm/lapic.c-kvm_lapic_reset CVE-2021-4032
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_2(Parameter vvcpu_2321, FunctionCall target_8) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("kvm_lapic_set_base")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vvcpu_2321
	and target_2.getArgument(1).(VariableAccess).getType().hasName("u64")
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vvcpu_2321, Variable vapic_2323, NotExpr target_9, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("kvm_apic_set_xapic_id")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vapic_2323
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="vcpu_id"
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_2321
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_4(Parameter vvcpu_2321, VariableAccess target_4) {
	target_4.getTarget()=vvcpu_2321
}

predicate func_5(Parameter vvcpu_2321, FunctionCall target_8, ValueFieldAccess target_5) {
	target_5.getTarget().getName()="apic_base"
	and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_2321
	and target_5.getParent().(AssignExpr).getLValue() = target_5
	and target_5.getParent().(AssignExpr).getRValue().(BitwiseOrExpr).getValue()="4276094976"
	and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getArgument(0).(VariableAccess).getLocation())
}

predicate func_6(Parameter vvcpu_2321, FunctionCall target_8, ExprStmt target_3, ValueFieldAccess target_6) {
	target_6.getTarget().getName()="apic_base"
	and target_6.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_2321
	and target_8.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_7(Variable vapic_2323, AssignExpr target_7) {
	target_7.getLValue().(PointerFieldAccess).getTarget().getName()="base_address"
	and target_7.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vapic_2323
	and target_7.getRValue().(Literal).getValue()="4276092928"
}

predicate func_8(Parameter vvcpu_2321, ExprStmt target_10, FunctionCall target_8) {
	target_8.getTarget().hasName("kvm_vcpu_is_reset_bsp")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vvcpu_2321
	and target_8.getParent().(IfStmt).getThen()=target_10
}

predicate func_9(BlockStmt target_11, Function func, NotExpr target_9) {
	target_9.getOperand().(VariableAccess).getTarget().getType().hasName("bool")
	and target_9.getParent().(IfStmt).getThen()=target_11
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(AssignOrExpr).getLValue() instanceof ValueFieldAccess
	and target_10.getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="256"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, BlockStmt target_11) {
	target_11.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
	and target_11.getStmt(1) instanceof ExprStmt
	and target_11.getEnclosingFunction() = func
}

from Function func, Parameter vvcpu_2321, Variable vapic_2323, ExprStmt target_3, VariableAccess target_4, ValueFieldAccess target_5, ValueFieldAccess target_6, AssignExpr target_7, FunctionCall target_8, NotExpr target_9, ExprStmt target_10, BlockStmt target_11
where
not func_2(vvcpu_2321, target_8)
and func_3(vvcpu_2321, vapic_2323, target_9, target_3)
and func_4(vvcpu_2321, target_4)
and func_5(vvcpu_2321, target_8, target_5)
and func_6(vvcpu_2321, target_8, target_3, target_6)
and func_7(vapic_2323, target_7)
and func_8(vvcpu_2321, target_10, target_8)
and func_9(target_11, func, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and vvcpu_2321.getType().hasName("kvm_vcpu *")
and vapic_2323.getType().hasName("kvm_lapic *")
and vvcpu_2321.getFunction() = func
and vapic_2323.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
