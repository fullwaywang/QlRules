/**
 * @name linux-10bf4e83167cc68595b85fd73bb91e8f2c086e36-__reg_combine_64_into_32
 * @id cpp/linux/10bf4e83167cc68595b85fd73bb91e8f2c086e36/--reg-combine-64-into-32
 * @description linux-10bf4e83167cc68595b85fd73bb91e8f2c086e36-kernel/bpf/verifier.c-__reg_combine_64_into_32 CVE-2021-31440
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof FunctionCall
	and target_0.getRightOperand() instanceof FunctionCall
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vreg_1406, ExprStmt target_2, FunctionCall target_1) {
	target_1.getTarget().hasName("__reg64_bound_u32")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="umin_value"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_1406
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Parameter vreg_1406, FunctionCall target_1, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="u32_min_value"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_1406
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="umin_value"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_1406
	and target_2.getParent().(IfStmt).getCondition()=target_1
}

predicate func_3(Parameter vreg_1406, ExprStmt target_4, FunctionCall target_3) {
	target_3.getTarget().hasName("__reg64_bound_u32")
	and target_3.getArgument(0).(PointerFieldAccess).getTarget().getName()="umax_value"
	and target_3.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_1406
	and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Parameter vreg_1406, FunctionCall target_3, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="u32_max_value"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_1406
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="umax_value"
	and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_1406
	and target_4.getParent().(IfStmt).getCondition()=target_3
}

predicate func_5(Function func, IfStmt target_5) {
	target_5.getCondition() instanceof FunctionCall
	and target_5.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

from Function func, Parameter vreg_1406, FunctionCall target_1, ExprStmt target_2, FunctionCall target_3, ExprStmt target_4, IfStmt target_5
where
not func_0(target_2, func)
and func_1(vreg_1406, target_2, target_1)
and func_2(vreg_1406, target_1, target_2)
and func_3(vreg_1406, target_4, target_3)
and func_4(vreg_1406, target_3, target_4)
and func_5(func, target_5)
and vreg_1406.getType().hasName("bpf_reg_state *")
and vreg_1406.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
