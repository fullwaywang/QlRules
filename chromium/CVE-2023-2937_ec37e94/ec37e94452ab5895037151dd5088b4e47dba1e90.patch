commit ec37e94452ab5895037151dd5088b4e47dba1e90	ec37e94452ab5895037151dd5088b4e47dba1e90
Author: Tommy Steimel <steimel@chromium.org>
Date:   Thu Apr 6 19:00:39 2023 +0000

    pip2: Don't allow fencedframes to open document PiP windows
    
    This CL prevents fencedframes from opening document PiP windows since
    only the topmost frame should ever open a document PiP window.
    
    Bug: 1413813
    Change-Id: I240804eae59fa44258e4e89be77045b38a4b2e4c
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4354681
    Reviewed-by: Frank Liberato <liberato@chromium.org>
    Commit-Queue: Tommy Steimel <steimel@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1127317}

diff --git a/third_party/blink/renderer/modules/document_picture_in_picture/document_picture_in_picture.cc b/third_party/blink/renderer/modules/document_picture_in_picture/document_picture_in_picture.cc
index 67de18a84c4a3..a1cb48ff24c04 100644
--- a/third_party/blink/renderer/modules/document_picture_in_picture/document_picture_in_picture.cc
+++ b/third_party/blink/renderer/modules/document_picture_in_picture/document_picture_in_picture.cc
@@ -54,10 +54,11 @@ ScriptPromise DocumentPictureInPicture::requestWindow(
     return ScriptPromise();
   }
 
-  if (dom_window->GetFrame() && !dom_window->GetFrame()->IsMainFrame()) {
-    exception_state.ThrowDOMException(
-        DOMExceptionCode::kNotAllowedError,
-        "Opening a PiP window from iframe is not allowed");
+  if (dom_window->GetFrame() &&
+      !dom_window->GetFrame()->IsOutermostMainFrame()) {
+    exception_state.ThrowDOMException(DOMExceptionCode::kNotAllowedError,
+                                      "Opening a PiP window is only allowed "
+                                      "from a top-level browsing context");
     return ScriptPromise();
   }
 
diff --git a/third_party/blink/web_tests/wpt_internal/fenced_frame/document-picture-in-picture-denied.https.html b/third_party/blink/web_tests/wpt_internal/fenced_frame/document-picture-in-picture-denied.https.html
new file mode 100644
index 0000000000000..3838fd683a87a
--- /dev/null
+++ b/third_party/blink/web_tests/wpt_internal/fenced_frame/document-picture-in-picture-denied.https.html
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<title>Test that fencedframes cannot open a DocumentPictureInPicture window.</title>
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script src="/resources/testdriver.js"></script>
+<script src="/resources/testdriver-actions.js"></script>
+<script src="/resources/testdriver-vendor.js"></script>
+<script src="/common/utils.js"></script>
+<script src="/common/dispatcher/dispatcher.js"></script>
+<script src="resources/utils.js"></script>
+
+<body>
+</body>
+<script>
+promise_test(async () => {
+  const frame = attachFencedFrameContext();
+  const result = await frame.execute(async () => {
+    await simulateGesture();
+    try {
+      await documentPictureInPicture.requestWindow();
+      return null;
+    } catch(e) {
+      return e.name;
+    }
+  });
+  assert_equals(result, 'NotAllowedError', 'requestWindow() from a fencedframe should trigger a NotAllowedError');
+}, 'fencedframes cannot open a DocumentPictureInPicture window.');
+</script>
