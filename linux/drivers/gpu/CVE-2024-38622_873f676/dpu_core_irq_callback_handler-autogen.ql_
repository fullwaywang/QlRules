/**
 * @name linux-873f67699114452c2a996c4e10faac8ff860c241-dpu_core_irq_callback_handler
 * @id cpp/linux/873f67699114452c2a996c4e10faac8ff860c241/dpu-core-irq-callback-handler
 * @description linux-873f67699114452c2a996c4e10faac8ff860c241-drivers/gpu/drm/msm/disp/dpu1/dpu_hw_interrupts.c-dpu_core_irq_callback_handler CVE-2024-38622
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_2, Function func) {
exists(ReturnStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_1.getCondition()=target_2
		)
	)
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Parameter virq_idx_218, NotExpr target_2, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(DivExpr obj_1 | obj_1=obj_0.getArgument(1) |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=virq_idx_218
			and obj_1.getRightOperand().(Literal).getValue()="32"
		)
		and exists(RemExpr obj_2 | obj_2=obj_0.getArgument(2) |
			obj_2.getLeftOperand().(VariableAccess).getTarget()=virq_idx_218
			and obj_2.getRightOperand().(Literal).getValue()="32"
		)
		and obj_0.getTarget().hasName("__drm_err")
		and obj_0.getArgument(0).(StringLiteral).getValue()="no registered cb, IRQ=[%d, %d]\n"
	)
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, NotExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="cb"
		and obj_0.getQualifier().(VariableAccess).getTarget().getType().hasName("dpu_hw_intr_entry *")
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, Parameter virq_idx_218, ExprStmt target_1, NotExpr target_2
where
not func_0(target_2, func)
and func_1(virq_idx_218, target_2, target_1)
and func_2(func, target_2)
and virq_idx_218.getType().hasName("int")
and virq_idx_218.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
