/**
 * @name linux-5c835bb142d4-mptcp_disconnect
 * @id cpp/linux/5c835bb142d4/mptcp-disconnect
 * @description linux-5c835bb142d4-mptcp_disconnect CVE-2022-4128
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsubflow_2922, Variable v__mptr_1_2927, VariableAccess target_0) {
		target_0.getTarget()=vsubflow_2922
		and target_0.getParent().(AssignExpr).getLValue() = target_0
		and target_0.getParent().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_2927
}

predicate func_2(Variable v__mptr_1_2927) {
	exists(CommaExpr target_2 |
		target_2.getLeftOperand() instanceof AssignExpr
		and target_2.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("mptcp_subflow_context *")
		and target_2.getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_2927)
}

predicate func_3(Variable vsubflow_2922, NotExpr target_6) {
	exists(CommaExpr target_3 |
		target_3.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsubflow_2922
		and target_3.getLeftOperand().(AssignExpr).getRValue().(VariableAccess).getType().hasName("mptcp_subflow_context *")
		and target_3.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getType().hasName("mptcp_subflow_context *")
		and target_3.getRightOperand().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getType().hasName("void *")
		and target_6.getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_4(Variable vsubflow_2922, Variable v__mptr_2927, AssignExpr target_4) {
		target_4.getLValue().(VariableAccess).getTarget()=vsubflow_2922
		and target_4.getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_2927
		and target_4.getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

predicate func_6(Variable vsubflow_2922, NotExpr target_6) {
		target_6.getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="node"
		and target_6.getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsubflow_2922
		and target_6.getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="conn_list"
		and target_6.getOperand().(EqualityOperation).getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mptcp_sock *")
}

from Function func, Variable vsubflow_2922, Variable v__mptr_2927, Variable v__mptr_1_2927, VariableAccess target_0, AssignExpr target_4, NotExpr target_6
where
func_0(vsubflow_2922, v__mptr_1_2927, target_0)
and not func_2(v__mptr_1_2927)
and not func_3(vsubflow_2922, target_6)
and func_4(vsubflow_2922, v__mptr_2927, target_4)
and func_6(vsubflow_2922, target_6)
and vsubflow_2922.getType().hasName("mptcp_subflow_context *")
and v__mptr_2927.getType().hasName("void *")
and v__mptr_1_2927.getType().hasName("void *")
and vsubflow_2922.(LocalVariable).getFunction() = func
and v__mptr_2927.(LocalVariable).getFunction() = func
and v__mptr_1_2927.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
