/**
 * @name linux-253f9ea7e8e53a5176bd80ceb174907b10724c1a-wb_dirty_limits
 * @id cpp/linux/253f9ea7e8e53a5176bd80ceb174907b10724c1a/wb-dirty-limits
 * @description linux-253f9ea7e8e53a5176bd80ceb174907b10724c1a-mm/page-writeback.c-wb_dirty_limits CVE-2024-42102
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdtc_1512, FunctionCall target_0) {
	exists(MulExpr obj_0 | obj_0=target_0.getArgument(0) |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="wb_thresh"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdtc_1512
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getTarget().getName()="bg_thresh"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vdtc_1512
		)
	)
	and exists(PointerFieldAccess obj_3 | obj_3=target_0.getArgument(1) |
		obj_3.getTarget().getName()="thresh"
		and obj_3.getQualifier().(VariableAccess).getTarget()=vdtc_1512
	)
	and target_0.getTarget().hasName("div64_u64")
	and not target_0.getTarget().hasName("div_u64")
}

from Function func, Parameter vdtc_1512, FunctionCall target_0
where
func_0(vdtc_1512, target_0)
and vdtc_1512.getType().hasName("dirty_throttle_control *")
and vdtc_1512.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
