/**
 * @name linux-2b3fede8225133671ce837c0d284804aa3bc7a02-qman_create_cgr
 * @id cpp/linux/2b3fede8225133671ce837c0d284804aa3bc7a02/qman-create-cgr
 * @description linux-2b3fede8225133671ce837c0d284804aa3bc7a02-drivers/soc/fsl/qbman/qman.c-qman_create_cgr CVE-2024-35819
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vp_2332, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_lock_irq")
	and not target_0.getTarget().hasName("_raw_spin_lock_irq")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_2332
}

predicate func_1(Variable vp_2332, FunctionCall target_1) {
	target_1.getTarget().hasName("spin_unlock_irq")
	and not target_1.getTarget().hasName("_raw_spin_unlock_irq")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_2332
}

from Function func, Variable vp_2332, FunctionCall target_0, FunctionCall target_1
where
func_0(vp_2332, target_0)
and func_1(vp_2332, target_1)
and vp_2332.getType().hasName("qman_portal *")
and vp_2332.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
