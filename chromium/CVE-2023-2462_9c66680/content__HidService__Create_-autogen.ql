/**
 * @name chromium-9c66680b649045a5e59d9bac785025639c3f53ed-content__HidService__Create_
 * @id cpp/chromium/9c66680b649045a5e59d9bac785025639c3f53ed/contenthidservicecreate
 * @description chromium-9c66680b649045a5e59d9bac785025639c3f53ed-content/browser/hid/hid_service.cc-content__HidService__Create_ CVE-2023-2462
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vorigin_202, IfStmt target_1, FunctionCall target_2, Function func) {
exists(IfStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getCondition() |
		obj_0.getTarget().hasName("opaque")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vorigin_202
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("ReportBadMessage")
				and obj_3.getArgument(0).(ConstructorCall).getArgument(0).(StringLiteral).getValue()="WebHID is blocked in an opaque origin."
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(1).(VariableAccess).getLocation())
)
}

predicate func_1(Function func, IfStmt target_1) {
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().hasName("browser")
				and obj_2.getQualifier().(FunctionCall).getTarget().hasName("GetContentClient")
			)
			and obj_1.getTarget().hasName("GetHidDelegate")
		)
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vorigin_202, FunctionCall target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getArgument(0) |
		obj_0.getTarget().hasName("move")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("WeakPtr<ServiceWorkerContextCore>")
	)
	and target_2.getTarget().hasName("make_unique")
	and target_2.getArgument(1).(VariableAccess).getTarget()=vorigin_202
}

from Function func, Parameter vorigin_202, IfStmt target_1, FunctionCall target_2
where
not func_0(vorigin_202, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vorigin_202, target_2)
and vorigin_202.getType().hasName("const Origin &")
and vorigin_202.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
