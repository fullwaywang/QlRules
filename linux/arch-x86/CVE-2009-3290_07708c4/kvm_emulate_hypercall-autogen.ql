/**
 * @name linux-07708c4af1346ab1521b26a202f438366b7bcffd-kvm_emulate_hypercall
 * @id cpp/linux/07708c4af1346ab1521b26a202f438366b7bcffd/kvm-emulate-hypercall
 * @description linux-07708c4af1346ab1521b26a202f438366b7bcffd-arch/x86/kvm/x86.c-kvm_emulate_hypercall CVE-2009-3290
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_3197, Parameter vvcpu_3195, NotExpr target_2, ExprStmt target_3, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="get_cpl"
		and target_0.getCondition().(EqualityOperation).getAnOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("kvm_x86_ops *")
		and target_0.getCondition().(EqualityOperation).getAnOperand().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3195
		and target_0.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_3197
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="18446744073709551615"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(VariableCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(VariableCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vvcpu_3195, NotExpr target_2) {
		target_2.getOperand().(FunctionCall).getTarget().hasName("is_long_mode")
		and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3195
}

predicate func_3(Variable vret_3197, Parameter vvcpu_3195, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvm_pv_mmu_op")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3195
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("hc_gpa")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3195
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vret_3197
}

from Function func, Variable vret_3197, Parameter vvcpu_3195, NotExpr target_2, ExprStmt target_3
where
not func_0(vret_3197, vvcpu_3195, target_2, target_3, func)
and func_2(vvcpu_3195, target_2)
and func_3(vret_3197, vvcpu_3195, target_3)
and vret_3197.getType().hasName("unsigned long")
and vvcpu_3195.getType().hasName("kvm_vcpu *")
and vret_3197.(LocalVariable).getFunction() = func
and vvcpu_3195.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
