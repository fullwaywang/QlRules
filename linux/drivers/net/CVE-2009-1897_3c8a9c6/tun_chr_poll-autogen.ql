/**
 * @name linux-3c8a9c63d5fd738c261bd0ceece04d9c8357ca13-tun_chr_poll
 * @id cpp/linux/3c8a9c63d5fd738c261bd0ceece04d9c8357ca13/tun-chr-poll
 * @description linux-3c8a9c63d5fd738c261bd0ceece04d9c8357ca13-drivers/net/tun.c-tun_chr_poll CVE-2009-1897
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtun_488, Variable vsk_489, NotExpr target_4, LogicalOrExpr target_6, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsk_489
		and target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="sk"
		and target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtun_488
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vtun_488, PointerFieldAccess target_1) {
		target_1.getTarget().getName()="sk"
		and target_1.getQualifier().(VariableAccess).getTarget()=vtun_488
}

predicate func_2(Variable vtun_488, Initializer target_2) {
		target_2.getExpr().(PointerFieldAccess).getTarget().getName()="sk"
		and target_2.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtun_488
}

predicate func_4(Variable vtun_488, NotExpr target_4) {
		target_4.getOperand().(VariableAccess).getTarget()=vtun_488
}

predicate func_6(Variable vsk_489, LogicalOrExpr target_6) {
		target_6.getAnOperand().(FunctionCall).getTarget().hasName("sock_writeable")
		and target_6.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_489
		and target_6.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("test_and_set_bit")
		and target_6.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(Literal).getValue()="0"
		and target_6.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_6.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_socket"
		and target_6.getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("sock_writeable")
		and target_6.getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_489
}

from Function func, Variable vtun_488, Variable vsk_489, PointerFieldAccess target_1, Initializer target_2, NotExpr target_4, LogicalOrExpr target_6
where
not func_0(vtun_488, vsk_489, target_4, target_6, func)
and func_1(vtun_488, target_1)
and func_2(vtun_488, target_2)
and func_4(vtun_488, target_4)
and func_6(vsk_489, target_6)
and vtun_488.getType().hasName("tun_struct *")
and vsk_489.getType().hasName("sock *")
and vtun_488.(LocalVariable).getFunction() = func
and vsk_489.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
