/**
 * @name linux-37bd22420f856fcd976989f1d4f1f7ad28e1fcac-pfkey_dump
 * @id cpp/linux/37bd22420f856fcd976989f1d4f1f7ad28e1fcac/pfkey-dump
 * @description linux-37bd22420f856fcd976989f1d4f1f7ad28e1fcac-net/key/af_key.c-pfkey_dump CVE-2021-0605
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpfk_1835, Variable vxfilter_1850, ArrayExpr target_1, AddressOfExpr target_2, AddressOfExpr target_3, AddressOfExpr target_5) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="sadb_x_filter_splen"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxfilter_1850
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(BinaryBitwiseOperation).getValue()="128"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="sadb_x_filter_dplen"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxfilter_1850
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(BinaryBitwiseOperation).getValue()="128"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dump_lock"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpfk_1835
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(BlockStmt target_6, Function func, ArrayExpr target_1) {
	target_1.getArrayBase().(VariableAccess).getTarget().getType().hasName("void *const *")
	and target_1.getArrayOffset().(SubExpr).getValue()="25"
	and target_1.getParent().(IfStmt).getThen()=target_6
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vpfk_1835, AddressOfExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="dump_lock"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpfk_1835
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

predicate func_3(Variable vpfk_1835, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="dump_lock"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpfk_1835
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

predicate func_5(Variable vxfilter_1850, AddressOfExpr target_5) {
	target_5.getOperand().(PointerFieldAccess).getTarget().getName()="sadb_x_filter_saddr"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vxfilter_1850
}

predicate func_6(Function func, BlockStmt target_6) {
	target_6.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("xfrm_address_filter *")
	and target_6.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kmalloc")
	and target_6.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofExprOperator).getValue()="36"
	and target_6.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
	and target_6.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("xfrm_address_filter *")
	and target_6.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_6.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_6.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dump_lock"
	and target_6.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_6.getEnclosingFunction() = func
}

from Function func, Variable vpfk_1835, Variable vxfilter_1850, ArrayExpr target_1, AddressOfExpr target_2, AddressOfExpr target_3, AddressOfExpr target_5, BlockStmt target_6
where
not func_0(vpfk_1835, vxfilter_1850, target_1, target_2, target_3, target_5)
and func_1(target_6, func, target_1)
and func_2(vpfk_1835, target_2)
and func_3(vpfk_1835, target_3)
and func_5(vxfilter_1850, target_5)
and func_6(func, target_6)
and vpfk_1835.getType().hasName("pfkey_sock *")
and vxfilter_1850.getType().hasName("sadb_x_filter *")
and vpfk_1835.(LocalVariable).getFunction() = func
and vxfilter_1850.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
