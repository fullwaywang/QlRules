/**
 * @name linux-9dde27de3e5efa0d032f3c891a0ca833a0d31911-sctp_ulpevent_make_rcvmsg
 * @id cpp/linux/9dde27de3e5efa0d032f3c891a0ca833a0d31911/sctp-ulpevent-make-rcvmsg
 * @description linux-9dde27de3e5efa0d032f3c891a0ca833a0d31911-net/sctp/ulpevent.c-sctp_ulpevent_make_rcvmsg CVE-2019-3874
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlen_638, Parameter vchunk_633, VariableAccess target_0) {
		target_0.getTarget()=vlen_638
		and target_0.getParent().(AssignExpr).getLValue() = target_0
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__builtin_bswap16")
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="length"
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="chunk_hdr"
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
}

predicate func_1(Variable vlen_638, VariableAccess target_1) {
		target_1.getTarget()=vlen_638
}

predicate func_2(Variable vlen_638, VariableAccess target_2) {
		target_2.getTarget()=vlen_638
}

predicate func_3(Parameter vchunk_633, PointerFieldAccess target_15) {
	exists(Initializer target_3 |
		target_3.getExpr().(PointerFieldAccess).getTarget().getName()="skb"
		and target_3.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_3.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_9(Parameter vasoc_632, ValueFieldAccess target_9) {
		target_9.getTarget().getName()="sk"
		and target_9.getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_9.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
}

predicate func_10(Parameter vchunk_633, PointerFieldAccess target_10) {
		target_10.getTarget().getName()="skb"
		and target_10.getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_10.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sk_rmem_schedule")
		and target_10.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(0) instanceof ValueFieldAccess
		and target_10.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="truesize"
		and target_10.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="skb"
		and target_10.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
}

predicate func_11(Parameter vasoc_632, ValueFieldAccess target_9, ValueFieldAccess target_16, ValueFieldAccess target_11) {
		target_11.getTarget().getName()="sk"
		and target_11.getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_11.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
		and target_9.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_11.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_11.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_16.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_12(Parameter vchunk_633, Parameter vasoc_632, RelationalOperation target_17, IfStmt target_12) {
		target_12.getCondition().(LogicalOrExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sk_userlocks"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="sk"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sk_rmem_schedule")
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="sk"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="skb"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="truesize"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="skb"
		and target_12.getCondition().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

/*predicate func_13(Parameter vchunk_633, Parameter vasoc_632, BitwiseAndExpr target_13) {
		target_13.getLeftOperand().(PointerFieldAccess).getTarget().getName()="sk_userlocks"
		and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="sk"
		and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_13.getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
		and target_13.getRightOperand().(Literal).getValue()="2"
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sk_rmem_schedule")
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="sk"
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="skb"
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="truesize"
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="skb"
		and target_13.getParent().(LogicalOrExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_13.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

*/
/*predicate func_14(Parameter vchunk_633, Parameter vasoc_632, PointerFieldAccess target_15, ValueFieldAccess target_16, AddressOfExpr target_18, ValueFieldAccess target_14) {
		target_14.getTarget().getName()="sk"
		and target_14.getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_14.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sk_rmem_schedule")
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="skb"
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="truesize"
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="skb"
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_14.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_16.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_14.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_18.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

*/
predicate func_15(Parameter vchunk_633, PointerFieldAccess target_15) {
		target_15.getTarget().getName()="truesize"
		and target_15.getQualifier().(PointerFieldAccess).getTarget().getName()="skb"
		and target_15.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
}

predicate func_16(Parameter vasoc_632, ValueFieldAccess target_16) {
		target_16.getTarget().getName()="sk"
		and target_16.getQualifier().(PointerFieldAccess).getTarget().getName()="base"
		and target_16.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
}

predicate func_17(Function func, RelationalOperation target_17) {
		 (target_17 instanceof GEExpr or target_17 instanceof LEExpr)
		and target_17.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_17.getLesserOperand().(PointerFieldAccess).getTarget().getName()="sk_rcvbuf"
		and target_17.getLesserOperand().(PointerFieldAccess).getQualifier() instanceof ValueFieldAccess
		and target_17.getEnclosingFunction() = func
}

predicate func_18(Parameter vchunk_633, Parameter vasoc_632, AddressOfExpr target_18) {
		target_18.getOperand().(ValueFieldAccess).getTarget().getName()="tsn_map"
		and target_18.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="peer"
		and target_18.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_632
		and target_18.getParent().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("__builtin_bswap32")
		and target_18.getParent().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="tsn"
		and target_18.getParent().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="data_hdr"
		and target_18.getParent().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="subh"
		and target_18.getParent().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_18.getParent().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="transport"
		and target_18.getParent().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchunk_633
		and target_18.getParent().(FunctionCall).getParent().(IfStmt).getThen() instanceof GotoStmt
}

from Function func, Variable vlen_638, Parameter vchunk_633, Parameter vasoc_632, VariableAccess target_0, VariableAccess target_1, VariableAccess target_2, ValueFieldAccess target_9, PointerFieldAccess target_10, ValueFieldAccess target_11, IfStmt target_12, PointerFieldAccess target_15, ValueFieldAccess target_16, RelationalOperation target_17, AddressOfExpr target_18
where
func_0(vlen_638, vchunk_633, target_0)
and func_1(vlen_638, target_1)
and func_2(vlen_638, target_2)
and not func_3(vchunk_633, target_15)
and func_9(vasoc_632, target_9)
and func_10(vchunk_633, target_10)
and func_11(vasoc_632, target_9, target_16, target_11)
and func_12(vchunk_633, vasoc_632, target_17, target_12)
and func_15(vchunk_633, target_15)
and func_16(vasoc_632, target_16)
and func_17(func, target_17)
and func_18(vchunk_633, vasoc_632, target_18)
and vlen_638.getType().hasName("size_t")
and vchunk_633.getType().hasName("sctp_chunk *")
and vasoc_632.getType().hasName("sctp_association *")
and vlen_638.(LocalVariable).getFunction() = func
and vchunk_633.getFunction() = func
and vasoc_632.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
