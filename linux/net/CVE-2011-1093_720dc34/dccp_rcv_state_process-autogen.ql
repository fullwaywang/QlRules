/**
 * @name linux-720dc34bbbe9493c7bd48b2243058b4e447a929d-dccp_rcv_state_process
 * @id cpp/linux/720dc34bbbe9493c7bd48b2243058b4e447a929d/dccp-rcv-state-process
 * @description linux-720dc34bbbe9493c7bd48b2243058b4e447a929d-net/dccp/input.c-dccp_rcv_state_process CVE-2011-1093
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_574, EqualityOperation target_5, RelationalOperation target_6, LogicalAndExpr target_7) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
		and target_0.getCondition().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_0.getCondition().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_574
		and target_0.getCondition().(EqualityOperation).getAnOperand() instanceof EnumConstantAccess
		and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
		and target_0.getThen().(BlockStmt).getStmt(1) instanceof ReturnStmt
		and target_0.getParent().(IfStmt).getCondition()=target_5
		and target_6.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vdcb_578, ValueFieldAccess target_8, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dccpd_reset_code"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdcb_578
		and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_8
}

predicate func_2(ValueFieldAccess target_8, Function func, ReturnStmt target_2) {
		target_2.getExpr().(Literal).getValue()="1"
		and target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_8
		and target_2.getEnclosingFunction() = func
}

predicate func_4(Function func, SwitchCase target_4) {
		target_4.getExpr() instanceof EnumConstantAccess
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vsk_574, EqualityOperation target_5) {
		target_5.getAnOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
		and target_5.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_5.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_574
}

predicate func_6(Parameter vsk_574, RelationalOperation target_6) {
		 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
		and target_6.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="conn_request"
		and target_6.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="icsk_af_ops"
		and target_6.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("inet_csk")
		and target_6.getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_574
		and target_6.getLesserOperand().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vsk_574
		and target_6.getLesserOperand().(VariableCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_6.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_7(Parameter vsk_574, LogicalAndExpr target_7) {
		target_7.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
		and target_7.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_7.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_574
		and target_7.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
		and target_7.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_7.getAnOperand().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_574
}

predicate func_8(Parameter vsk_574, ValueFieldAccess target_8) {
		target_8.getTarget().getName()="skc_state"
		and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_574
}

from Function func, Variable vdcb_578, Parameter vsk_574, ExprStmt target_1, ReturnStmt target_2, SwitchCase target_4, EqualityOperation target_5, RelationalOperation target_6, LogicalAndExpr target_7, ValueFieldAccess target_8
where
not func_0(vsk_574, target_5, target_6, target_7)
and func_1(vdcb_578, target_8, target_1)
and func_2(target_8, func, target_2)
and func_4(func, target_4)
and func_5(vsk_574, target_5)
and func_6(vsk_574, target_6)
and func_7(vsk_574, target_7)
and func_8(vsk_574, target_8)
and vdcb_578.getType().hasName("dccp_skb_cb *")
and vsk_574.getType().hasName("sock *")
and vdcb_578.(LocalVariable).getFunction() = func
and vsk_574.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
