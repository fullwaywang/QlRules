/**
 * @name linux-1b976fc6d684e3282914cdbe7a8d68fdce19095c-flexcop_usb_probe
 * @id cpp/linux/1b976fc6d684e3282914cdbe7a8d68fdce19095c/flexcop-usb-probe
 * @description linux-1b976fc6d684e3282914cdbe7a8d68fdce19095c-drivers/media/usb/b2c2/flexcop-usb.c-flexcop_usb_probe CVE-2019-15291
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vintf_539, IfStmt target_1, FunctionCall target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getTarget().getName()="bNumEndpoints"
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="desc"
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cur_altsetting"
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vintf_539
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="1"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("flexcop_device *")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("flexcop_device_kmalloc")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofTypeOperator).getValue()="1544"
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="3flexcop_usb: out of memory\n\n"
	and target_1.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vintf_539, FunctionCall target_2) {
	target_2.getTarget().hasName("interface_to_usbdev")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vintf_539
}

predicate func_3(Parameter vintf_539, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="uintf"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("flexcop_usb *")
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vintf_539
}

from Function func, Parameter vintf_539, IfStmt target_1, FunctionCall target_2, ExprStmt target_3
where
not func_0(vintf_539, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vintf_539, target_2)
and func_3(vintf_539, target_3)
and vintf_539.getType().hasName("usb_interface *")
and vintf_539.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
