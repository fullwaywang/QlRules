/**
 * @name linux-e472b276a0d2180808009be38105e12754432e2a-f2fs_recover_fsync_data
 * @id cpp/linux/e472b276a0d2180808009be38105e12754432e2a/f2fs-recover-fsync-data
 * @description linux-e472b276a0d2180808009be38105e12754432e2a-fs/f2fs/recovery.c-f2fs_recover_fsync_data CVE-2021-47335
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfsync_entry_slab, Function func, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfsync_entry_slab
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("f2fs_kmem_cache_create")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(StringLiteral).getValue()="f2fs_fsync_inode_entry"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getValue()="32"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Variable verr_770, Variable vfsync_entry_slab, Function func, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vfsync_entry_slab
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_770
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_1.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

/*predicate func_2(Variable verr_770, NotExpr target_5, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_770
	and target_2.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

*/
/*predicate func_3(NotExpr target_5, Function func, GotoStmt target_3) {
	target_3.getName() ="out"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_3.getEnclosingFunction() = func
}

*/
predicate func_4(Variable vfsync_entry_slab, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("kmem_cache_destroy")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfsync_entry_slab
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Variable vfsync_entry_slab, NotExpr target_5) {
	target_5.getOperand().(VariableAccess).getTarget()=vfsync_entry_slab
}

from Function func, Variable verr_770, Variable vfsync_entry_slab, ExprStmt target_0, IfStmt target_1, ExprStmt target_4, NotExpr target_5
where
func_0(vfsync_entry_slab, func, target_0)
and func_1(verr_770, vfsync_entry_slab, func, target_1)
and func_4(vfsync_entry_slab, func, target_4)
and func_5(vfsync_entry_slab, target_5)
and verr_770.getType().hasName("int")
and vfsync_entry_slab.getType().hasName("kmem_cache *")
and verr_770.(LocalVariable).getFunction() = func
and not vfsync_entry_slab.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
