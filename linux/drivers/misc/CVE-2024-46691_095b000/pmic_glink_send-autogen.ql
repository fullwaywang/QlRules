/**
 * @name linux-095b0001aefddcd9361097c971b7debc84e72714-pmic_glink_send
 * @id cpp/linux/095b0001aefddcd9361097c971b7debc84e72714/pmic-glink-send
 * @description linux-095b0001aefddcd9361097c971b7debc84e72714-drivers/soc/qcom/pmic_glink.c-pmic_glink_send CVE-2024-46691
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpg_114, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="state_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpg_114
			)
		)
		and obj_0.getTarget().hasName("mutex_lock_nested")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_1(Variable vpg_114, Function func) {
exists(IfStmt target_1 |
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="ept"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpg_114
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_1.getThen() |
		exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
			obj_3.getLValue().(VariableAccess).getType().hasName("int")
			and obj_3.getRValue().(UnaryMinusExpr).getValue()="-104"
		)
	)
	and exists(ExprStmt obj_4 | obj_4=target_1.getElse() |
		exists(AssignExpr obj_5 | obj_5=obj_4.getExpr() |
			obj_5.getLValue().(VariableAccess).getType().hasName("int")
			and obj_5.getRValue() instanceof FunctionCall
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_2(Variable vpg_114, FunctionCall target_4, Function func) {
exists(ExprStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="state_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpg_114
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_4(Parameter vdata_112, Parameter vlen_112, Variable vpg_114, FunctionCall target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getArgument(0) |
		obj_0.getTarget().getName()="ept"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpg_114
	)
	and target_4.getTarget().hasName("rpmsg_send")
	and target_4.getArgument(1).(VariableAccess).getTarget()=vdata_112
	and target_4.getArgument(2).(VariableAccess).getTarget()=vlen_112
}

from Function func, Parameter vdata_112, Parameter vlen_112, Variable vpg_114, FunctionCall target_4
where
not func_0(vpg_114, func)
and not func_1(vpg_114, func)
and not func_2(vpg_114, target_4, func)
and func_4(vdata_112, vlen_112, vpg_114, target_4)
and vdata_112.getType().hasName("void *")
and vlen_112.getType().hasName("size_t")
and vpg_114.getType().hasName("pmic_glink *")
and vdata_112.getFunction() = func
and vlen_112.getFunction() = func
and vpg_114.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
