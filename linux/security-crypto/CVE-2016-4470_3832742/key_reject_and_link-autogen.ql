/**
 * @name linux-38327424b40bcebe2de92d07312c89360ac9229a-key_reject_and_link
 * @id cpp/linux/38327424b40bcebe2de92d07312c89360ac9229a/key-reject-and-link
 * @description linux-38327424b40bcebe2de92d07312c89360ac9229a-security/keys/key.c-key_reject_and_link CVE-2016-4470
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkeyring_550, Variable vlink_ret_555, ExprStmt target_2, LogicalAndExpr target_3, ConditionalExpr target_4) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vkeyring_550
	and target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vlink_ret_555
	and target_0.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
	and target_0.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_4.getThen().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vkeyring_550, ExprStmt target_2, VariableAccess target_1) {
	target_1.getTarget()=vkeyring_550
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Parameter vkeyring_550, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("__key_link_end")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkeyring_550
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="index_key"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("key *")
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("assoc_array_edit *")
}

predicate func_3(Parameter vkeyring_550, Variable vlink_ret_555, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget()=vkeyring_550
	and target_3.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vlink_ret_555
	and target_3.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
}

predicate func_4(Variable vlink_ret_555, ConditionalExpr target_4) {
	target_4.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_4.getThen().(VariableAccess).getTarget()=vlink_ret_555
	and target_4.getElse().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vkeyring_550, Variable vlink_ret_555, VariableAccess target_1, ExprStmt target_2, LogicalAndExpr target_3, ConditionalExpr target_4
where
not func_0(vkeyring_550, vlink_ret_555, target_2, target_3, target_4)
and func_1(vkeyring_550, target_2, target_1)
and func_2(vkeyring_550, target_2)
and func_3(vkeyring_550, vlink_ret_555, target_3)
and func_4(vlink_ret_555, target_4)
and vkeyring_550.getType().hasName("key *")
and vlink_ret_555.getType().hasName("int")
and vkeyring_550.getFunction() = func
and vlink_ret_555.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
