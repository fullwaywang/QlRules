/**
 * @name linux-468f6eafa6c44cb2c5d8aad35e12f06c240a812a-adjust_scalar_min_max_vals
 * @id cpp/linux/468f6eafa6c44cb2c5d8aad35e12f06c240a812a/adjust-scalar-min-max-vals
 * @description linux-468f6eafa6c44cb2c5d8aad35e12f06c240a812a-kernel/bpf/verifier.c-adjust_scalar_min_max_vals CVE-2017-17852
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="63"
		and not target_0.getValue()="7"
		and target_0.getParent().(GTExpr).getParent().(IfStmt).getCondition() instanceof RelationalOperation
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="63"
		and not target_1.getValue()="7"
		and target_1.getParent().(GTExpr).getParent().(IfStmt).getCondition() instanceof RelationalOperation
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vumax_val_2029, BlockStmt target_8, RelationalOperation target_9) {
	exists(RelationalOperation target_2 |
		 (target_2 instanceof GEExpr or target_2 instanceof LEExpr)
		and target_2.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
		and target_2.getLesserOperand().(VariableAccess).getType().hasName("u64")
		and target_2.getParent().(IfStmt).getThen()=target_8
		and target_2.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_9.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(VariableAccess).getLocation()))
}

predicate func_3(Variable vumax_val_2029, BlockStmt target_10, ExprStmt target_11, ExprStmt target_12) {
	exists(RelationalOperation target_3 |
		 (target_3 instanceof GEExpr or target_3 instanceof LEExpr)
		and target_3.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
		and target_3.getLesserOperand().(VariableAccess).getType().hasName("u64")
		and target_3.getParent().(IfStmt).getThen()=target_10
		and target_11.getExpr().(AssignLShiftExpr).getRValue().(VariableAccess).getLocation().isBefore(target_3.getGreaterOperand().(VariableAccess).getLocation())
		and target_3.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignRShiftExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_4(Variable vumax_val_2029, BlockStmt target_8, VariableAccess target_4) {
		target_4.getTarget()=vumax_val_2029
		and target_4.getParent().(GTExpr).getLesserOperand() instanceof Literal
		and target_4.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_8
}

predicate func_5(Variable vumax_val_2029, BlockStmt target_10, VariableAccess target_5) {
		target_5.getTarget()=vumax_val_2029
		and target_5.getParent().(GTExpr).getLesserOperand() instanceof Literal
		and target_5.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_10
}

predicate func_6(Variable vumax_val_2029, BlockStmt target_8, RelationalOperation target_9, RelationalOperation target_6) {
		 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
		and target_6.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
		and target_6.getLesserOperand() instanceof Literal
		and target_6.getParent().(IfStmt).getThen()=target_8
		and target_6.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_9.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(VariableAccess).getLocation())
}

predicate func_7(Variable vumax_val_2029, BlockStmt target_10, ExprStmt target_11, ExprStmt target_12, RelationalOperation target_7) {
		 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
		and target_7.getGreaterOperand().(VariableAccess).getTarget()=vumax_val_2029
		and target_7.getLesserOperand() instanceof Literal
		and target_7.getParent().(IfStmt).getThen()=target_10
		and target_11.getExpr().(AssignLShiftExpr).getRValue().(VariableAccess).getLocation().isBefore(target_7.getGreaterOperand().(VariableAccess).getLocation())
		and target_7.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignRShiftExpr).getRValue().(VariableAccess).getLocation())
}

predicate func_8(RelationalOperation target_6, Function func, BlockStmt target_8) {
		target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mark_reg_unknown")
		and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
		and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
		and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="dst_reg"
		and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_insn *")
		and target_8.getParent().(IfStmt).getCondition()=target_6
		and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vumax_val_2029, RelationalOperation target_9) {
		 (target_9 instanceof GTExpr or target_9 instanceof LTExpr)
		and target_9.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="umax_value"
		and target_9.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
		and target_9.getLesserOperand().(BinaryBitwiseOperation).getLeftOperand().(Literal).getValue()="1"
		and target_9.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getLeftOperand().(Literal).getValue()="63"
		and target_9.getLesserOperand().(BinaryBitwiseOperation).getRightOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget()=vumax_val_2029
}

predicate func_10(RelationalOperation target_7, Function func, BlockStmt target_10) {
		target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mark_reg_unknown")
		and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
		and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
		and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="dst_reg"
		and target_10.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_insn *")
		and target_10.getParent().(IfStmt).getCondition()=target_7
		and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vumax_val_2029, ExprStmt target_11) {
		target_11.getExpr().(AssignLShiftExpr).getLValue().(PointerFieldAccess).getTarget().getName()="umax_value"
		and target_11.getExpr().(AssignLShiftExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
		and target_11.getExpr().(AssignLShiftExpr).getRValue().(VariableAccess).getTarget()=vumax_val_2029
}

predicate func_12(Variable vumax_val_2029, ExprStmt target_12) {
		target_12.getExpr().(AssignRShiftExpr).getLValue().(PointerFieldAccess).getTarget().getName()="umin_value"
		and target_12.getExpr().(AssignRShiftExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_reg_state *")
		and target_12.getExpr().(AssignRShiftExpr).getRValue().(VariableAccess).getTarget()=vumax_val_2029
}

from Function func, Variable vumax_val_2029, Literal target_0, Literal target_1, VariableAccess target_4, VariableAccess target_5, RelationalOperation target_6, RelationalOperation target_7, BlockStmt target_8, RelationalOperation target_9, BlockStmt target_10, ExprStmt target_11, ExprStmt target_12
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(vumax_val_2029, target_8, target_9)
and not func_3(vumax_val_2029, target_10, target_11, target_12)
and func_4(vumax_val_2029, target_8, target_4)
and func_5(vumax_val_2029, target_10, target_5)
and func_6(vumax_val_2029, target_8, target_9, target_6)
and func_7(vumax_val_2029, target_10, target_11, target_12, target_7)
and func_8(target_6, func, target_8)
and func_9(vumax_val_2029, target_9)
and func_10(target_7, func, target_10)
and func_11(vumax_val_2029, target_11)
and func_12(vumax_val_2029, target_12)
and vumax_val_2029.getType().hasName("u64")
and vumax_val_2029.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
