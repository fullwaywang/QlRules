/**
 * @name linux-276af8efb05c8e47acf2738a5609dd72acfc703f-qm_congestion_task
 * @id cpp/linux/276af8efb05c8e47acf2738a5609dd72acfc703f/qm-congestion-task
 * @description linux-276af8efb05c8e47acf2738a5609dd72acfc703f-drivers/soc/fsl/qbman/qman.c-qm_congestion_task CVE-2024-35806
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vp_1453, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_lock")
	and not target_0.getTarget().hasName("spin_lock_irq")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1453
}

predicate func_1(Variable vp_1453, FunctionCall target_1) {
	target_1.getTarget().hasName("spin_unlock")
	and not target_1.getTarget().hasName("spin_unlock_irq")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1453
}

predicate func_2(Variable vp_1453, FunctionCall target_2) {
	target_2.getTarget().hasName("spin_unlock")
	and not target_2.getTarget().hasName("spin_unlock_irq")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cgr_lock"
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1453
}

from Function func, Variable vp_1453, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2
where
func_0(vp_1453, target_0)
and func_1(vp_1453, target_1)
and func_2(vp_1453, target_2)
and vp_1453.getType().hasName("qman_portal *")
and vp_1453.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
