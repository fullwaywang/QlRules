/**
 * @name linux-d328c09ee9f15ee5a26431f5aad7c9239fa85e62-cifs_debug_data_proc_show
 * @id cpp/linux/d328c09ee9f15ee5a26431f5aad7c9239fa85e62/cifs-debug-data-proc-show
 * @description linux-d328c09ee9f15ee5a26431f5aad7c9239fa85e62-fs/smb/client/cifs_debug.c-cifs_debug_data_proc_show CVE-2023-52752
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vses_279, ExprStmt target_3, ValueFieldAccess target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ses_lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_0.getLocation().isBefore(target_3.getLocation())
	and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vses_279, ExprStmt target_3, LogicalOrExpr target_5) {
exists(IfStmt target_1 |
	target_1.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ses_status"
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ses_lock"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vses_279, ExprStmt target_6, ExprStmt target_7, VariableCall target_8) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ses_lock"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_2.getLocation().isBefore(target_6.getLocation())
	and target_7.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Function func, ExprStmt target_3) {
	target_3.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vses_279, ValueFieldAccess target_4) {
	target_4.getTarget().getName()="next"
	and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="smb_ses_list"
	and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
}

predicate func_5(Variable vses_279, LogicalOrExpr target_5) {
	target_5.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="serverDomain"
	and target_5.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_5.getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_5.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="serverOS"
	and target_5.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_5.getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_5.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="serverNOS"
	and target_5.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_5.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
}

predicate func_6(Variable vses_279, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_6.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="\n\tSecurity type: %s "
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("get_security_type_str")
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="select_sectype"
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("TCP_Server_Info *")
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("TCP_Server_Info *")
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="sectype"
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
}

predicate func_7(Variable vses_279, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("seq_printf")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("seq_file *")
	and target_7.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="\n\t%d) Name: %s  Domain: %s Uses: %d OS: %s \n\tNOS: %s\tCapability: 0x%x\n\tSMB session status: %d "
	and target_7.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_7.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="ip_addr"
	and target_7.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_7.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="serverDomain"
	and target_7.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_7.getExpr().(FunctionCall).getArgument(5).(PointerFieldAccess).getTarget().getName()="ses_count"
	and target_7.getExpr().(FunctionCall).getArgument(5).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_7.getExpr().(FunctionCall).getArgument(6).(PointerFieldAccess).getTarget().getName()="serverOS"
	and target_7.getExpr().(FunctionCall).getArgument(6).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_7.getExpr().(FunctionCall).getArgument(7).(PointerFieldAccess).getTarget().getName()="serverNOS"
	and target_7.getExpr().(FunctionCall).getArgument(7).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_7.getExpr().(FunctionCall).getArgument(8).(PointerFieldAccess).getTarget().getName()="capabilities"
	and target_7.getExpr().(FunctionCall).getArgument(8).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
	and target_7.getExpr().(FunctionCall).getArgument(9).(PointerFieldAccess).getTarget().getName()="ses_status"
	and target_7.getExpr().(FunctionCall).getArgument(9).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
}

predicate func_8(Variable vses_279, VariableCall target_8) {
	target_8.getExpr().(PointerFieldAccess).getTarget().getName()="select_sectype"
	and target_8.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_8.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("TCP_Server_Info *")
	and target_8.getArgument(0).(VariableAccess).getTarget().getType().hasName("TCP_Server_Info *")
	and target_8.getArgument(1).(PointerFieldAccess).getTarget().getName()="sectype"
	and target_8.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vses_279
}

from Function func, Variable vses_279, ExprStmt target_3, ValueFieldAccess target_4, LogicalOrExpr target_5, ExprStmt target_6, ExprStmt target_7, VariableCall target_8
where
not func_0(vses_279, target_3, target_4)
and not func_1(vses_279, target_3, target_5)
and not func_2(vses_279, target_6, target_7, target_8)
and func_3(func, target_3)
and func_4(vses_279, target_4)
and func_5(vses_279, target_5)
and func_6(vses_279, target_6)
and func_7(vses_279, target_7)
and func_8(vses_279, target_8)
and vses_279.getType().hasName("cifs_ses *")
and vses_279.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
