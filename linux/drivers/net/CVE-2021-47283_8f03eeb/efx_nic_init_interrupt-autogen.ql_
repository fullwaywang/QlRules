/**
 * @name linux-8f03eeb6e0a0a0b8d617ee0a4bce729e47130036-efx_nic_init_interrupt
 * @id cpp/linux/8f03eeb6e0a0a0b8d617ee0a4bce729e47130036/efx-nic-init-interrupt
 * @description linux-8f03eeb6e0a0a0b8d617ee0a4bce729e47130036-drivers/net/ethernet/sfc/nic.c-efx_nic_init_interrupt CVE-2021-47283
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vefx_77, ExprStmt target_1, PointerFieldAccess target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="irqs_hooked"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vefx_77
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vefx_77, Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="irqs_hooked"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vefx_77
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vefx_77, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="rx_cpu_rmap"
	and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="net_dev"
	and target_2.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vefx_77
}

from Function func, Parameter vefx_77, ExprStmt target_1, PointerFieldAccess target_2
where
not func_0(vefx_77, target_1, target_2, func)
and func_1(vefx_77, func, target_1)
and func_2(vefx_77, target_2)
and vefx_77.getType().hasName("efx_nic *")
and vefx_77.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
