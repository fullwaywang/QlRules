/**
 * @name linux-b0327c84e91a0f4f0abced8cb83ec86a7083f086-f2fs_read_multi_pages
 * @id cpp/linux/b0327c84e91a0f4f0abced8cb83ec86a7083f086/f2fs-read-multi-pages
 * @description linux-b0327c84e91a0f4f0abced8cb83ec86a7083f086-fs/f2fs/data.c-f2fs_read_multi_pages CVE-2023-52852
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(FunctionCall target_2, Function func) {
exists(BreakStmt target_0 |
	target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vdic_2250, FunctionCall target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("f2fs_decompress_cluster")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdic_2250
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vdic_2250, FunctionCall target_2) {
	target_2.getTarget().hasName("atomic_dec_and_test")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="remaining_pages"
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdic_2250
}

from Function func, Variable vdic_2250, ExprStmt target_1, FunctionCall target_2
where
not func_0(target_2, func)
and func_1(vdic_2250, target_2, target_1)
and func_2(vdic_2250, target_2)
and vdic_2250.getType().hasName("decompress_io_ctx *")
and vdic_2250.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
