/**
 * @name linux-6c42227c3467549ddc65efe99c869021d2f4a570-cec_adap_g_log_addrs
 * @id cpp/linux/6c42227c3467549ddc65efe99c869021d2f4a570/cec-adap-g-log-addrs
 * @description linux-6c42227c3467549ddc65efe99c869021d2f4a570-drivers/media/cec/core/cec-api.c-cec_adap_g_log_addrs CVE-2020-36766
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vadap_144, Variable vlog_addrs_147, NotExpr target_4, ValueFieldAccess target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("__memcpy")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vlog_addrs_147
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="log_addrs"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadap_144
	and target_0.getArgument(2).(SizeofExprOperator).getValue()="92"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_5.getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_1(Parameter vadap_144, VariableAccess target_1) {
	target_1.getTarget()=vadap_144
}

*/
predicate func_2(Parameter vadap_144, Variable vlog_addrs_147, VariableAccess target_2) {
	target_2.getTarget()=vlog_addrs_147
	and target_2.getParent().(AssignExpr).getLValue() = target_2
	and target_2.getParent().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="log_addrs"
	and target_2.getParent().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadap_144
}

predicate func_3(Parameter vadap_144, Variable vlog_addrs_147, AssignExpr target_3) {
	target_3.getLValue().(VariableAccess).getTarget()=vlog_addrs_147
	and target_3.getRValue().(PointerFieldAccess).getTarget().getName()="log_addrs"
	and target_3.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadap_144
}

predicate func_4(Parameter vadap_144, NotExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="is_configured"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadap_144
}

predicate func_5(Variable vlog_addrs_147, ValueFieldAccess target_5) {
	target_5.getTarget().getName()="log_addr"
	and target_5.getQualifier().(VariableAccess).getTarget()=vlog_addrs_147
}

from Function func, Parameter vadap_144, Variable vlog_addrs_147, VariableAccess target_2, AssignExpr target_3, NotExpr target_4, ValueFieldAccess target_5
where
not func_0(vadap_144, vlog_addrs_147, target_4, target_5)
and func_2(vadap_144, vlog_addrs_147, target_2)
and func_3(vadap_144, vlog_addrs_147, target_3)
and func_4(vadap_144, target_4)
and func_5(vlog_addrs_147, target_5)
and vadap_144.getType().hasName("cec_adapter *")
and vlog_addrs_147.getType().hasName("cec_log_addrs")
and vadap_144.getFunction() = func
and vlog_addrs_147.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
