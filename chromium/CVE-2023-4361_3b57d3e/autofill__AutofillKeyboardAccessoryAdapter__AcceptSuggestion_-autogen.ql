/**
 * @name chromium-3b57d3e90b4ce28a23dd7029add35ce9834600a9-autofill__AutofillKeyboardAccessoryAdapter__AcceptSuggestion_
 * @id cpp/chromium/3b57d3e90b4ce28a23dd7029add35ce9834600a9/autofillautofillkeyboardaccessoryadapteracceptsuggestion
 * @description chromium-3b57d3e90b4ce28a23dd7029add35ce9834600a9-chrome/browser/ui/autofill/autofill_popup_controller_impl.cc-autofill__AutofillKeyboardAccessoryAdapter__AcceptSuggestion_ CVE-2023-4361
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(FunctionCall target_0 |
	exists(PointerFieldAccess obj_0 | obj_0=target_0.getQualifier() |
		obj_0.getTarget().getName()="controller_"
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	)
	and target_0.getTarget().hasName("operator bool")
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Parameter vindex_117) {
exists(FunctionCall target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getQualifier() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="controller_"
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
	)
	and exists(FunctionCall obj_2 | obj_2=target_1.getArgument(0) |
		obj_2.getTarget().hasName("OffsetIndexFor")
		and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
		and obj_2.getArgument(0).(VariableAccess).getTarget()=vindex_117
	)
	and target_1.getTarget().hasName("AcceptSuggestion")
)
}

predicate func_2(Function func, SwitchStmt target_2) {
	exists(BlockStmt obj_0 | obj_0=target_2.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getTarget().hasName("__builtin_expect")
				and obj_2.getValue()="0"
			)
			and obj_1.getElse().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("NotReached")
		)
		and obj_0.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="0"
		and obj_0.getStmt(1).(SwitchCase).toString() = "default: "
	)
	and target_2.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

/*predicate func_3(Function func, SwitchCase target_3) {
	target_3.getExpr().(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

*/
/*predicate func_4(Function func, SwitchCase target_4) {
	target_4.toString() = "default: "
	and target_4.getEnclosingFunction() = func
}

*/
/*predicate func_6(Function func, FunctionCall target_6) {
	target_6.getTarget().hasName("__builtin_expect")
	and target_6.getValue()="0"
	and target_6.getEnclosingFunction() = func
}

*/
/*predicate func_8(Function func, FunctionCall target_8) {
	target_8.getTarget().hasName("NotReached")
	and target_8.getEnclosingFunction() = func
}

*/
from Function func, Parameter vindex_117, SwitchStmt target_2
where
not func_0(func)
and not func_1(vindex_117)
and func_2(func, target_2)
and vindex_117.getType().hasName("int")
and vindex_117.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
