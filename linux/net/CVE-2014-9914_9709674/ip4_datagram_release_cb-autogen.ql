/**
 * @name linux-9709674e68646cee5a24e3000b3558d25412203a-ip4_datagram_release_cb
 * @id cpp/linux/9709674e68646cee5a24e3000b3558d25412203a/ip4-datagram-release-cb
 * @description linux-9709674e68646cee5a24e3000b3558d25412203a-net/ipv4/datagram.c-ip4_datagram_release_cb CVE-2014-9914
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_89, FunctionCall target_0) {
	target_0.getTarget().hasName("__sk_dst_set")
	and not target_0.getTarget().hasName("sk_dst_set")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsk_89
	and target_0.getArgument(1) instanceof AddressOfExpr
}

predicate func_1(ExprStmt target_20, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("rcu_read_lock")
	and target_1.getLocation().isBefore(target_20.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getType().hasName("dst_entry *")
	and target_2.getRValue() instanceof FunctionCall
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Function func) {
exists(LogicalOrExpr target_3 |
	target_3.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("dst_entry *")
	and target_3.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="obsolete"
	and target_3.getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("dst_entry *")
	and target_3.getParent().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_3.getParent().(LogicalOrExpr).getRightOperand() instanceof FunctionCall
	and target_3.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen() instanceof ReturnStmt
	and target_3.getEnclosingFunction() = func)
}

predicate func_5(Function func) {
exists(VariableCall target_5 |
	target_5.getExpr().(PointerFieldAccess).getTarget().getName()="check"
	and target_5.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_5.getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("dst_entry *")
	and target_5.getArgument(0).(VariableAccess).getType().hasName("dst_entry *")
	and target_5.getArgument(1) instanceof Literal
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(ExprStmt target_10, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("dst_entry *")
	and target_6.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition() instanceof NotExpr
	and target_6.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen() instanceof AddressOfExpr
	and target_6.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getLocation().isBefore(target_10.getLocation()))
}

predicate func_7(Parameter vsk_89, ExprStmt target_10, FunctionCall target_21, Function func) {
exists(ExprStmt target_7 |
	target_7.getExpr().(FunctionCall).getTarget().hasName("sk_dst_set")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_89
	and target_7.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("dst_entry *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
	and target_7.getLocation().isBefore(target_10.getLocation())
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_21.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_9(ExprStmt target_10, Function func) {
exists(ExprStmt target_9 |
	target_9.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
	and target_9.getLocation().isBefore(target_10.getLocation()))
}

predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Parameter vsk_89, FunctionCall target_11) {
	target_11.getTarget().hasName("__sk_dst_get")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vsk_89
}

predicate func_12(Variable vrt_95, ExprStmt target_22, NotExpr target_12) {
	target_12.getOperand().(FunctionCall).getTarget().hasName("IS_ERR")
	and target_12.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrt_95
	and target_12.getParent().(IfStmt).getThen()=target_22
}

predicate func_13(Variable vrt_95, AddressOfExpr target_13) {
	target_13.getOperand().(PointerFieldAccess).getTarget().getName()="dst"
	and target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrt_95
	and target_13.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_14(Parameter vsk_89, VariableAccess target_14) {
	target_14.getTarget()=vsk_89
	and target_14.getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand() instanceof FunctionCall
}

predicate func_16(Function func, ReturnStmt target_16) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_16
}

predicate func_17(LogicalOrExpr target_23, Function func, ReturnStmt target_17) {
	target_17.getParent().(IfStmt).getCondition()=target_23
	and target_17.getEnclosingFunction() = func
}

predicate func_18(Parameter vsk_89, FunctionCall target_18) {
	target_18.getTarget().hasName("__sk_dst_check")
	and target_18.getArgument(0).(VariableAccess).getTarget()=vsk_89
	and target_18.getArgument(1) instanceof Literal
	and target_18.getParent().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_18.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen() instanceof ReturnStmt
}

predicate func_19(Function func, IfStmt target_19) {
	target_19.getCondition() instanceof NotExpr
	and target_19.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_19
}

predicate func_20(Function func, ExprStmt target_20) {
	target_20.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("const ip_options_rcu *")
	and target_20.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_20.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(DoStmt).getCondition() instanceof Literal
	and target_20.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(VariableAccess).getTarget().getType().hasName("ip_options_rcu *")
	and target_20.getEnclosingFunction() = func
}

predicate func_21(Parameter vsk_89, FunctionCall target_21) {
	target_21.getTarget().hasName("sock_net")
	and target_21.getArgument(0).(VariableAccess).getTarget()=vsk_89
}

predicate func_22(Function func, ExprStmt target_22) {
	target_22.getExpr() instanceof FunctionCall
	and target_22.getEnclosingFunction() = func
}

predicate func_23(Function func, LogicalOrExpr target_23) {
	target_23.getLeftOperand().(NotExpr).getOperand() instanceof FunctionCall
	and target_23.getRightOperand() instanceof FunctionCall
	and target_23.getEnclosingFunction() = func
}

from Function func, Parameter vsk_89, Variable vrt_95, FunctionCall target_0, ExprStmt target_1, ExprStmt target_10, FunctionCall target_11, NotExpr target_12, AddressOfExpr target_13, VariableAccess target_14, ReturnStmt target_16, ReturnStmt target_17, FunctionCall target_18, IfStmt target_19, ExprStmt target_20, FunctionCall target_21, ExprStmt target_22, LogicalOrExpr target_23
where
func_0(vsk_89, target_0)
and func_1(target_20, func, target_1)
and not func_2(func)
and not func_3(func)
and not func_5(func)
and not func_6(target_10, func)
and not func_7(vsk_89, target_10, target_21, func)
and not func_9(target_10, func)
and func_10(func, target_10)
and func_11(vsk_89, target_11)
and func_12(vrt_95, target_22, target_12)
and func_13(vrt_95, target_13)
and func_14(vsk_89, target_14)
and func_16(func, target_16)
and func_17(target_23, func, target_17)
and func_18(vsk_89, target_18)
and func_19(func, target_19)
and func_20(func, target_20)
and func_21(vsk_89, target_21)
and func_22(func, target_22)
and func_23(func, target_23)
and vsk_89.getType().hasName("sock *")
and vrt_95.getType().hasName("rtable *")
and vsk_89.getFunction() = func
and vrt_95.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
