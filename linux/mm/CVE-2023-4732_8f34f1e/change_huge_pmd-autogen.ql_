/**
 * @name linux-8f34f1eac3820fc2722e5159acceb22545b30b0d-change_huge_pmd
 * @id cpp/linux/8f34f1eac3820fc2722e5159acceb22545b30b0d/change-huge-pmd
 * @description linux-8f34f1eac3820fc2722e5159acceb22545b30b0d-mm/huge_memory.c-change_huge_pmd CVE-2023-4732
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpmd_1804, Variable vnewpmd_1829, FunctionCall target_1, PointerDereferenceExpr target_2, ExprStmt target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("pmd_swp_uffd_wp")
	and target_0.getCondition().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vpmd_1804
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnewpmd_1829
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pmd_swp_mkuffd_wp")
	and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewpmd_1829
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("is_write_migration_entry")
	and target_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("swp_entry_t")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vpmd_1804, ExprStmt target_4, PointerDereferenceExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vpmd_1804
	and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Parameter vpmd_1804, Variable vnewpmd_1829, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("set_pmd_at")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("mm_struct *")
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vpmd_1804
	and target_3.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vnewpmd_1829
}

predicate func_4(Variable vnewpmd_1829, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnewpmd_1829
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pmd_swp_mksoft_dirty")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewpmd_1829
}

from Function func, Parameter vpmd_1804, Variable vnewpmd_1829, FunctionCall target_1, PointerDereferenceExpr target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vpmd_1804, vnewpmd_1829, target_1, target_2, target_3, target_4)
and func_1(func, target_1)
and func_2(vpmd_1804, target_4, target_2)
and func_3(vpmd_1804, vnewpmd_1829, target_3)
and func_4(vnewpmd_1829, target_4)
and vpmd_1804.getType().hasName("pmd_t *")
and vnewpmd_1829.getType().hasName("pmd_t")
and vpmd_1804.getFunction() = func
and vnewpmd_1829.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
