/**
 * @name linux-9ce8135accf103f7333af472709125878704fdd4-f2fs_mark_inode_dirty_sync
 * @id cpp/linux/9ce8135accf103f7333af472709125878704fdd4/f2fs-mark-inode-dirty-sync
 * @description linux-9ce8135accf103f7333af472709125878704fdd4-fs/f2fs/inode.c-f2fs_mark_inode_dirty_sync CVE-2024-42297
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_25, IfStmt target_1, FunctionCall target_2, FunctionCall target_3, Function func) {
exists(IfStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getCondition() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().hasName("F2FS_I_SB")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vinode_25
			)
			and obj_1.getTarget().getName()="sb"
		)
		and obj_0.getTarget().hasName("f2fs_readonly")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vinode_25, IfStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getCondition() |
		obj_0.getTarget().hasName("f2fs_inode_dirtied")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vinode_25
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("bool")
	)
}

predicate func_2(Parameter vinode_25, FunctionCall target_2) {
	target_2.getTarget().hasName("is_inode_flag_set")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vinode_25
}

predicate func_3(Parameter vinode_25, FunctionCall target_3) {
	target_3.getTarget().hasName("f2fs_inode_dirtied")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vinode_25
	and target_3.getArgument(1).(VariableAccess).getTarget().getType().hasName("bool")
}

from Function func, Parameter vinode_25, IfStmt target_1, FunctionCall target_2, FunctionCall target_3
where
not func_0(vinode_25, target_1, target_2, target_3, func)
and func_1(vinode_25, target_1)
and func_2(vinode_25, target_2)
and func_3(vinode_25, target_3)
and vinode_25.getType().hasName("inode *")
and vinode_25.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
