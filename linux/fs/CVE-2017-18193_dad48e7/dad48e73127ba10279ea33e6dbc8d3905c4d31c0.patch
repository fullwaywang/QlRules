commit dad48e73127ba10279ea33e6dbc8d3905c4d31c0
Author: Yunlei He <heyunlei@huawei.com>
Date:   Fri May 19 15:06:12 2017 +0800

    f2fs: fix a bug caused by NULL extent tree
    
    Thread A:					Thread B:
    
    -f2fs_remount
        -sbi->mount_opt.opt = 0;
    						<--- -f2fs_iget
    						         -do_read_inode
    							     -f2fs_init_extent_tree
    							         -F2FS_I(inode)->extent_tree is NULL
            -default_options && parse_options
    	    -remount return
    						<---  -f2fs_map_blocks
    						          -f2fs_lookup_extent_tree
                                                                  -f2fs_bug_on(sbi, !et);
    
    The same problem with f2fs_new_inode.
    
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

diff --git a/fs/f2fs/extent_cache.c b/fs/f2fs/extent_cache.c
index 2f98d70..ff2352a 100644
--- a/fs/f2fs/extent_cache.c
+++ b/fs/f2fs/extent_cache.c
@@ -320,7 +320,7 @@ static void __drop_largest_extent(struct inode *inode,
 }
 
 /* return true, if inode page is changed */
-bool f2fs_init_extent_tree(struct inode *inode, struct f2fs_extent *i_ext)
+static bool __f2fs_init_extent_tree(struct inode *inode, struct f2fs_extent *i_ext)
 {
 	struct f2fs_sb_info *sbi = F2FS_I_SB(inode);
 	struct extent_tree *et;
@@ -358,6 +358,16 @@ bool f2fs_init_extent_tree(struct inode *inode, struct f2fs_extent *i_ext)
 	return false;
 }
 
+bool f2fs_init_extent_tree(struct inode *inode, struct f2fs_extent *i_ext)
+{
+	bool ret =  __f2fs_init_extent_tree(inode, i_ext);
+
+	if (!F2FS_I(inode)->extent_tree)
+		set_inode_flag(inode, FI_NO_EXTENT);
+
+	return ret;
+}
+
 static bool f2fs_lookup_extent_tree(struct inode *inode, pgoff_t pgofs,
 							struct extent_info *ei)
 {
