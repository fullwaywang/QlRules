/**
 * @name v8-79f617b009c4d8128413a07abed7f0fbe5b65308-v8__internal__MicrotaskQueueBuiltinsAssembler__RewindEnteredContext
 * @id cpp/v8/79f617b009c4d8128413a07abed7f0fbe5b65308/v8internalmicrotaskqueuebuiltinsassemblerrewindenteredcontext
 * @description v8-79f617b009c4d8128413a07abed7f0fbe5b65308-src/builtins/builtins-microtask-queue-gen.cc-v8__internal__MicrotaskQueueBuiltinsAssembler__RewindEnteredContext CVE-2022-0470
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(Literal).getValue()="1"
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("Check")
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="IntPtrLessThan(IntPtrConstant(0), size)"
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof StringLiteral
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(3) instanceof Literal
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("Check")
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="IntPtrLessThanOrEqual(saved_entered_context_count, size)"
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof StringLiteral
	and target_0.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(3) instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("StoreNoWriteBarrier")
	and target_1.getExpr().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_1.getExpr().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("PointerRepresentation")
	and target_1.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("operator v8::internal::compiler::Node *")
	and target_1.getExpr().(FunctionCall).getArgument(1).(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("TNode<RawPtrT>")
	and target_1.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("operator v8::internal::compiler::Node *")
	and target_1.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("TNode<IntPtrT>")
	and target_1.getExpr().(FunctionCall).getArgument(3).(FunctionCall).getTarget().hasName("operator v8::internal::compiler::Node *")
	and target_1.getExpr().(FunctionCall).getArgument(3).(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("TNode<IntPtrT>")
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
