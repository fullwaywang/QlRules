/**
 * @name linux-90f17e47f1e209c6a3c92a1d038a0a80c95c460e-cachefiles_withdraw_volumes
 * @id cpp/linux/90f17e47f1e209c6a3c92a1d038a0a80c95c460e/cachefiles-withdraw-volumes
 * @description linux-90f17e47f1e209c6a3c92a1d038a0a80c95c460e-fs/cachefiles/cache.c-cachefiles_withdraw_volumes CVE-2024-41058
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvolume_322, NotExpr target_8, ExprStmt target_9, AddressOfExpr target_10) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="vcookie"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvolume_322
			)
			and obj_1.getTarget().hasName("fscache_try_get_volume")
		)
		and obj_0.getLValue().(VariableAccess).getType().hasName("fscache_volume *")
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_4.getCondition()=target_8
		)
	)
	and target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vcache_317, NotExpr target_8, PointerFieldAccess target_11, AddressOfExpr target_12) {
exists(IfStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getArgument(0) |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="object_list_lock"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vcache_317
					)
				)
				and obj_2.getTarget().hasName("spin_unlock")
			)
		)
		and obj_0.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("cpu_relax")
	)
	and exists(BlockStmt obj_5 | obj_5=target_1.getParent() |
		exists(IfStmt obj_6 | obj_6=obj_5.getParent() |
			obj_6.getThen().(BlockStmt).getStmt(2)=target_1
			and obj_6.getCondition()=target_8
		)
	)
	and target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getType().hasName("fscache_volume *")
	and target_11.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Function func) {
exists(ExprStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("fscache_put_volume")
		and obj_0.getArgument(0).(VariableAccess).getType().hasName("fscache_volume *")
	)
	and target_2.getEnclosingFunction() = func
)
}

predicate func_4(Parameter vcache_317, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="object_list_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vcache_317
			)
		)
		and obj_0.getTarget().hasName("spin_lock")
	)
}

predicate func_5(Parameter vcache_317, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="object_list_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vcache_317
			)
		)
		and obj_0.getTarget().hasName("spin_unlock")
	)
}

predicate func_6(Variable vvolume_322, IfStmt target_6) {
	target_6.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vvolume_322
}

predicate func_7(Variable vvolume_322, ExprStmt target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getExpr() |
		obj_0.getTarget().hasName("cachefiles_withdraw_volume")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvolume_322
	)
}

predicate func_8(Parameter vcache_317, NotExpr target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="volumes"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vcache_317
			)
		)
		and obj_0.getTarget().hasName("list_empty")
	)
}

predicate func_9(Variable vvolume_322, ExprStmt target_9) {
	exists(AssignExpr obj_0 | obj_0=target_9.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vvolume_322
		and obj_0.getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("void *")
	)
}

predicate func_10(Variable vvolume_322, AddressOfExpr target_10) {
	exists(PointerFieldAccess obj_0 | obj_0=target_10.getOperand() |
		obj_0.getTarget().getName()="cache_link"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvolume_322
	)
}

predicate func_11(Parameter vcache_317, PointerFieldAccess target_11) {
	exists(AddressOfExpr obj_0 | obj_0=target_11.getQualifier() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="volumes"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vcache_317
		)
	)
	and target_11.getTarget().getName()="next"
}

predicate func_12(Parameter vcache_317, AddressOfExpr target_12) {
	exists(PointerFieldAccess obj_0 | obj_0=target_12.getOperand() |
		obj_0.getTarget().getName()="object_list_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcache_317
	)
}

from Function func, Variable vvolume_322, Parameter vcache_317, ExprStmt target_4, ExprStmt target_5, IfStmt target_6, ExprStmt target_7, NotExpr target_8, ExprStmt target_9, AddressOfExpr target_10, PointerFieldAccess target_11, AddressOfExpr target_12
where
not func_0(vvolume_322, target_8, target_9, target_10)
and not func_1(vcache_317, target_8, target_11, target_12)
and not func_2(func)
and func_4(vcache_317, target_4)
and func_5(vcache_317, target_5)
and func_6(vvolume_322, target_6)
and func_7(vvolume_322, target_7)
and func_8(vcache_317, target_8)
and func_9(vvolume_322, target_9)
and func_10(vvolume_322, target_10)
and func_11(vcache_317, target_11)
and func_12(vcache_317, target_12)
and vvolume_322.getType().hasName("cachefiles_volume *")
and vcache_317.getType().hasName("cachefiles_cache *")
and vvolume_322.(LocalVariable).getFunction() = func
and vcache_317.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
