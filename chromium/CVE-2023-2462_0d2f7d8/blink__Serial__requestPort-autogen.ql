/**
 * @name chromium-0d2f7d8d41ac2bc092cd21174236cfa4be96f0ae-blink__Serial__requestPort
 * @id cpp/chromium/0d2f7d8d41ac2bc092cd21174236cfa4be96f0ae/blinkserialrequestport
 * @description chromium-0d2f7d8d41ac2bc092cd21174236cfa4be96f0ae-third_party/blink/renderer/modules/serial/serial.cc-blink__Serial__requestPort CVE-2023-2462
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BlockStmt target_9, Function func, FunctionCall target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getQualifier() |
		obj_0.getTarget().hasName("GetExecutionContext")
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	)
	and target_0.getTarget().hasName("IsFeatureEnabled")
	and not target_0.getTarget().hasName("ShouldBlockSerialServiceCall")
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_9
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("GetSupplementable")
	and target_1.getQualifier() instanceof ThisExpr
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Function func, ThisExpr target_2) {
	target_2.getType() instanceof PointerType
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vexception_state_114, VariableAccess target_3) {
	target_3.getTarget()=vexception_state_114
}

predicate func_4(BlockStmt target_10, Function func, NotExpr target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getOperand() |
		obj_0.getTarget().hasName("DomWindow")
		and obj_0.getQualifier() instanceof ThisExpr
	)
	and target_4.getParent().(IfStmt).getThen()=target_10
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vexception_state_114, Variable vkContextGone, NotExpr target_4, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("ThrowDOMException")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_114
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vkContextGone
	)
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_6(Parameter vexception_state_114, Variable vkFeaturePolicyBlocked, Function func, IfStmt target_6) {
	exists(BlockStmt obj_0 | obj_0=target_6.getThen() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("ThrowSecurityError")
				and obj_2.getQualifier().(VariableAccess).getTarget()=vexception_state_114
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vkFeaturePolicyBlocked
			)
		)
		and obj_0.getStmt(1).(ReturnStmt).getExpr().(ConstructorCall).getType() instanceof VoidType
	)
	and target_6.getCondition().(NotExpr).getOperand() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

/*predicate func_7(Parameter vexception_state_114, Variable vkFeaturePolicyBlocked, NotExpr target_11, ExprStmt target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getExpr() |
		obj_0.getTarget().hasName("ThrowSecurityError")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_114
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vkFeaturePolicyBlocked
	)
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

*/
/*predicate func_8(NotExpr target_11, Function func, ReturnStmt target_8) {
	target_8.getExpr().(ConstructorCall).getType() instanceof VoidType
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
	and target_8.getEnclosingFunction() = func
}

*/
predicate func_9(Function func, BlockStmt target_9) {
	target_9.getStmt(0) instanceof ExprStmt
	and target_9.getStmt(1) instanceof ReturnStmt
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Function func, BlockStmt target_10) {
	target_10.getStmt(0) instanceof ExprStmt
	and target_10.getStmt(1).(ReturnStmt).getExpr().(ConstructorCall).getType() instanceof VoidType
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, NotExpr target_11) {
	target_11.getOperand() instanceof FunctionCall
	and target_11.getEnclosingFunction() = func
}

from Function func, Parameter vexception_state_114, Variable vkContextGone, Variable vkFeaturePolicyBlocked, FunctionCall target_0, ThisExpr target_2, VariableAccess target_3, NotExpr target_4, ExprStmt target_5, IfStmt target_6, BlockStmt target_9, BlockStmt target_10, NotExpr target_11
where
func_0(target_9, func, target_0)
and not func_1(func)
and func_2(func, target_2)
and func_3(vexception_state_114, target_3)
and func_4(target_10, func, target_4)
and func_5(vexception_state_114, vkContextGone, target_4, target_5)
and func_6(vexception_state_114, vkFeaturePolicyBlocked, func, target_6)
and func_9(func, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and vexception_state_114.getType().hasName("ExceptionState &")
and vkContextGone.getType() instanceof ArrayType
and vkFeaturePolicyBlocked.getType() instanceof ArrayType
and vexception_state_114.getFunction() = func
and not vkContextGone.getParentScope+() = func
and not vkFeaturePolicyBlocked.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
