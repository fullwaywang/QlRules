/**
 * @name cpython-f7666e828cc3d5873136473ea36ba2013d624fa1-PyInit_pyexpat
 * @id cpp/cpython/f7666e828cc3d5873136473ea36ba2013d624fa1/pyinit-pyexpat
 * @description cpython-f7666e828cc3d5873136473ea36ba2013d624fa1-Modules/pyexpat.c-PyInit_pyexpat CVE-2018-14647
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="168"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, StringLiteral target_1) {
		target_1.getValue()="pyexpat.expat_CAPI 1.0"
		and not target_1.getValue()="pyexpat.expat_CAPI 1.1"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vcapi_1655, ExprStmt target_3, AddressOfExpr target_4, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="SetHashSalt"
		and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vcapi_1655
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation()))
}

predicate func_3(Variable vcapi_1655, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="DefaultUnknownEncodingHandler"
		and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vcapi_1655
}

predicate func_4(Variable vcapi_1655, AddressOfExpr target_4) {
		target_4.getOperand().(VariableAccess).getTarget()=vcapi_1655
}

from Function func, Variable vcapi_1655, SizeofExprOperator target_0, StringLiteral target_1, ExprStmt target_3, AddressOfExpr target_4
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(vcapi_1655, target_3, target_4, func)
and func_3(vcapi_1655, target_3)
and func_4(vcapi_1655, target_4)
and vcapi_1655.getType().hasName("PyExpat_CAPI")
and vcapi_1655.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
