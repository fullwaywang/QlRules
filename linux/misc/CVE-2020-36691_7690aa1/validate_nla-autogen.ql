/**
 * @name linux-7690aa1cdf7c4565ad6b013b324c28b685505e24-validate_nla
 * @id cpp/linux/7690aa1cdf7c4565ad6b013b324c28b685505e24/validate-nla
 * @description linux-7690aa1cdf7c4565ad6b013b324c28b685505e24-lib/nlattr.c-validate_nla CVE-2020-36691
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvalidate_158, Parameter vextack_159, Variable vpt_162, Parameter vnla_157, FunctionCall target_0) {
		target_0.getTarget().hasName("__nla_validate")
		and not target_0.getTarget().hasName("__nla_validate_parse")
		and target_0.getArgument(0).(FunctionCall).getTarget().hasName("nla_data")
		and target_0.getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnla_157
		and target_0.getArgument(1).(FunctionCall).getTarget().hasName("nla_len")
		and target_0.getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnla_157
		and target_0.getArgument(2).(PointerFieldAccess).getTarget().getName()="len"
		and target_0.getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpt_162
		and target_0.getArgument(3).(ValueFieldAccess).getTarget().getName()="nested_policy"
		and target_0.getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_0.getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpt_162
		and target_0.getArgument(4).(VariableAccess).getTarget()=vvalidate_158
		and target_0.getArgument(5).(VariableAccess).getTarget()=vextack_159
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_2(Function func) {
	exists(AddExpr target_2 |
		target_2.getAnOperand().(VariableAccess).getType().hasName("unsigned int")
		and target_2.getAnOperand().(Literal).getValue()="1"
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
		and target_2.getEnclosingFunction() = func)
}

from Function func, Parameter vvalidate_158, Parameter vextack_159, Variable vpt_162, Parameter vnla_157, FunctionCall target_0
where
func_0(vvalidate_158, vextack_159, vpt_162, vnla_157, target_0)
and not func_2(func)
and vvalidate_158.getType().hasName("unsigned int")
and vextack_159.getType().hasName("netlink_ext_ack *")
and vpt_162.getType().hasName("const nla_policy *")
and vnla_157.getType().hasName("const nlattr *")
and vvalidate_158.getFunction() = func
and vextack_159.getFunction() = func
and vpt_162.(LocalVariable).getFunction() = func
and vnla_157.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
