/**
 * @name linux-a499b03bf36b0c2e3b958a381d828678ab0ffc5e-__nft_release_tables
 * @id cpp/linux/a499b03bf36b0c2e3b958a381d828678ab0ffc5e/--nft-release-tables
 * @description linux-a499b03bf36b0c2e3b958a381d828678ab0ffc5e-net/netfilter/nf_tables_api.c-__nft_release_tables CVE-2021-47394
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtable_9609, ExprStmt target_1, FunctionCall target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("list_del")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="list"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtable_9609
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtable_9609, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("__nft_release_table")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vtable_9609
}

predicate func_2(Variable vtable_9609, FunctionCall target_2) {
	target_2.getTarget().hasName("nft_table_has_owner")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vtable_9609
}

from Function func, Variable vtable_9609, ExprStmt target_1, FunctionCall target_2
where
not func_0(vtable_9609, target_1, target_2)
and func_1(vtable_9609, target_1)
and func_2(vtable_9609, target_2)
and vtable_9609.getType().hasName("nft_table *")
and vtable_9609.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
