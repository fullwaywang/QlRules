/**
 * @name linux-24d7275ce2791829953ed4e72f68277ceb2571c6-smaps_pmd_entry
 * @id cpp/linux/24d7275ce2791829953ed4e72f68277ceb2571c6/smaps-pmd-entry
 * @description linux-24d7275ce2791829953ed4e72f68277ceb2571c6-smaps_pmd_entry CVE-2023-1582
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(FunctionCall target_3, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_0.getEnclosingFunction() = func)
}

predicate func_2(Variable vpage_559, Variable ventry_565, FunctionCall target_3, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpage_559
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pfn_swap_entry_to_page")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ventry_565
		and target_2.getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Variable ventry_565, FunctionCall target_3) {
		target_3.getTarget().hasName("is_migration_entry")
		and target_3.getArgument(0).(VariableAccess).getTarget()=ventry_565
}

from Function func, Variable vpage_559, Variable ventry_565, ExprStmt target_2, FunctionCall target_3
where
not func_0(target_3, func)
and func_2(vpage_559, ventry_565, target_3, target_2)
and func_3(ventry_565, target_3)
and vpage_559.getType().hasName("page *")
and ventry_565.getType().hasName("swp_entry_t")
and vpage_559.(LocalVariable).getFunction() = func
and ventry_565.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
