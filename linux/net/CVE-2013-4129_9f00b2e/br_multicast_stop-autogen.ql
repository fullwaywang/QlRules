/**
 * @name linux-9f00b2e7cf241fa389733d41b6-br_multicast_stop
 * @id cpp/linux/9f00b2e7cf241fa389733d41b6/br-multicast-stop
 * @description linux-9f00b2e7cf241fa389733d41b6-net/bridge/br_multicast.c-br_multicast_stop CVE-2013-4129
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmp_1656, AddressOfExpr target_1, AddressOfExpr target_2) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="timer_armed"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmp_1656
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vmp_1656, AddressOfExpr target_1) {
		target_1.getOperand().(PointerFieldAccess).getTarget().getName()="timer"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmp_1656
}

predicate func_2(Variable vmp_1656, AddressOfExpr target_2) {
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="rcu"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmp_1656
}

from Function func, Variable vmp_1656, AddressOfExpr target_1, AddressOfExpr target_2
where
not func_0(vmp_1656, target_1, target_2)
and func_1(vmp_1656, target_1)
and func_2(vmp_1656, target_2)
and vmp_1656.getType().hasName("net_bridge_mdb_entry *")
and vmp_1656.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
