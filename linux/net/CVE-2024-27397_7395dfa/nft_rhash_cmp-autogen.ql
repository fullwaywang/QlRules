/**
 * @name linux-7395dfacfff65e9938ac0889dafa1ab01e987d15-nft_rhash_cmp
 * @id cpp/linux/7395dfacfff65e9938ac0889dafa1ab01e987d15/nft-rhash-cmp
 * @description linux-7395dfacfff65e9938ac0889dafa1ab01e987d15-net/netfilter/nft_set_hash.c-nft_rhash_cmp CVE-2024-27397
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhe_59, ReturnStmt target_2, FunctionCall target_0) {
	target_0.getTarget().hasName("nft_set_elem_expired")
	and not target_0.getTarget().hasName("__nft_set_elem_expired")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ext"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhe_59
	and target_0.getParent().(IfStmt).getThen()=target_2
}

predicate func_1(Variable vx_58, PointerFieldAccess target_3, NotExpr target_4) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="tstamp"
	and target_1.getQualifier().(VariableAccess).getTarget()=vx_58
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(VariableAccess).getLocation())
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(FunctionCall target_0, Function func, ReturnStmt target_2) {
	target_2.getExpr().(Literal).getValue()="1"
	and target_2.getParent().(IfStmt).getCondition()=target_0
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vx_58, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="klen"
	and target_3.getQualifier().(PointerFieldAccess).getTarget().getName()="set"
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vx_58
}

predicate func_4(Variable vx_58, Variable vhe_59, NotExpr target_4) {
	target_4.getOperand().(FunctionCall).getTarget().hasName("nft_set_elem_active")
	and target_4.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ext"
	and target_4.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhe_59
	and target_4.getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="genmask"
	and target_4.getOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vx_58
}

from Function func, Variable vx_58, Variable vhe_59, FunctionCall target_0, ReturnStmt target_2, PointerFieldAccess target_3, NotExpr target_4
where
func_0(vhe_59, target_2, target_0)
and not func_1(vx_58, target_3, target_4)
and func_2(target_0, func, target_2)
and func_3(vx_58, target_3)
and func_4(vx_58, vhe_59, target_4)
and vx_58.getType().hasName("const nft_rhash_cmp_arg *")
and vhe_59.getType().hasName("const nft_rhash_elem *")
and vx_58.(LocalVariable).getFunction() = func
and vhe_59.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
