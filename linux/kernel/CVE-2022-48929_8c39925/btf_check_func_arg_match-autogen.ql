/**
 * @name linux-8c39925e98d498b9531343066ef82ae39e41adae-btf_check_func_arg_match
 * @id cpp/linux/8c39925e98d498b9531343066ef82ae39e41adae/btf-check-func-arg-match
 * @description linux-8c39925e98d498b9531343066ef82ae39e41adae-kernel/bpf/btf.c-btf_check_func_arg_match CVE-2022-48929
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreg_5479, BlockStmt target_4, ExprStmt target_5) {
exists(FunctionCall target_0 |
	exists(PointerFieldAccess obj_0 | obj_0=target_0.getArgument(0) |
		obj_0.getTarget().getName()="type"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vreg_5479
	)
	and exists(ArrayExpr obj_1 | obj_1=target_0.getParent() |
		exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArrayOffset() |
			obj_2.getTarget().getName()="type"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vreg_5479
		)
		and obj_1.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
		and obj_1.getParent().(IfStmt).getThen()=target_4
	)
	and target_0.getTarget().hasName("base_type")
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vreg_5479, NotExpr target_6) {
exists(FunctionCall target_1 |
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getArgument(0) |
		obj_0.getTarget().getName()="type"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vreg_5479
	)
	and target_1.getTarget().hasName("base_type")
	and target_1.getParent().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getOperand().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vreg_5479, BlockStmt target_4, PointerFieldAccess target_2) {
	exists(ArrayExpr obj_0 | obj_0=target_2.getParent() |
		obj_0.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
		and obj_0.getParent().(IfStmt).getThen()=target_4
	)
	and target_2.getTarget().getName()="type"
	and target_2.getQualifier().(VariableAccess).getTarget()=vreg_5479
}

predicate func_3(Variable vreg_5479, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="type"
	and target_3.getQualifier().(VariableAccess).getTarget()=vreg_5479
	and target_3.getParent().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
}

predicate func_4(Variable vreg_5479, BlockStmt target_4) {
	exists(ExprStmt obj_0 | obj_0=target_4.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getLValue().(VariableAccess).getTarget().getType().hasName("const btf *")
			and obj_1.getRValue().(VariableAccess).getTarget().getType().hasName("btf *")
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_4.getStmt(1) |
		exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
			exists(PointerDereferenceExpr obj_4 | obj_4=obj_3.getRValue() |
				exists(ArrayExpr obj_5 | obj_5=obj_4.getOperand() |
					exists(PointerFieldAccess obj_6 | obj_6=obj_5.getArrayOffset() |
						obj_6.getTarget().getName()="type"
						and obj_6.getQualifier().(VariableAccess).getTarget()=vreg_5479
					)
					and obj_5.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
				)
			)
			and obj_3.getLValue().(VariableAccess).getTarget().getType().hasName("u32")
		)
	)
}

predicate func_5(Variable vreg_5479, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(PointerDereferenceExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayOffset() |
					obj_3.getTarget().getName()="type"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vreg_5479
				)
				and obj_2.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("u32")
	)
}

predicate func_6(Variable vreg_5479, NotExpr target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(3) |
			obj_1.getTarget().getName()="off"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vreg_5479
		)
		and obj_0.getTarget().hasName("btf_struct_ids_match")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_log *")
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("const btf *")
		and obj_0.getArgument(2).(VariableAccess).getTarget().getType().hasName("u32")
		and obj_0.getArgument(4).(VariableAccess).getTarget().getType().hasName("const btf *")
		and obj_0.getArgument(5).(VariableAccess).getTarget().getType().hasName("u32")
	)
}

from Function func, Variable vreg_5479, PointerFieldAccess target_2, PointerFieldAccess target_3, BlockStmt target_4, ExprStmt target_5, NotExpr target_6
where
not func_0(vreg_5479, target_4, target_5)
and not func_1(vreg_5479, target_6)
and func_2(vreg_5479, target_4, target_2)
and func_3(vreg_5479, target_3)
and func_4(vreg_5479, target_4)
and func_5(vreg_5479, target_5)
and func_6(vreg_5479, target_6)
and vreg_5479.getType().hasName("bpf_reg_state *")
and vreg_5479.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
