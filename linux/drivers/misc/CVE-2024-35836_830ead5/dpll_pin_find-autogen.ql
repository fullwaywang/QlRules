/**
 * @name linux-830ead5fb0c5855ce4d70ba2ed4a673b5f1e7d9b-dpll_pin_find
 * @id cpp/linux/830ead5fb0c5855ce4d70ba2ed4a673b5f1e7d9b/dpll-pin-find
 * @description linux-830ead5fb0c5855ce4d70ba2ed4a673b5f1e7d9b-drivers/dpll/dpll_netlink.c-dpll_pin_find CVE-2024-35836
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpin_1020, ExprStmt target_3) {
exists(AddressOfExpr target_0 |
	target_0.getOperand().(PointerFieldAccess).getTarget().getName()="prop"
	and target_0.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpin_1020
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("const dpll_pin_properties *")
	and target_0.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vpin_1020, VariableAccess target_1) {
	target_1.getTarget()=vpin_1020
}

predicate func_2(Variable vpin_1020, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="prop"
	and target_2.getQualifier().(VariableAccess).getTarget()=vpin_1020
}

predicate func_3(Variable vpin_1020, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bool")
	and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getTarget().getType().hasName("u64")
	and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="clock_id"
	and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpin_1020
	and target_3.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("u64")
}

from Function func, Variable vpin_1020, VariableAccess target_1, PointerFieldAccess target_2, ExprStmt target_3
where
not func_0(vpin_1020, target_3)
and func_1(vpin_1020, target_1)
and func_2(vpin_1020, target_2)
and func_3(vpin_1020, target_3)
and vpin_1020.getType().hasName("dpll_pin *")
and vpin_1020.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
