/**
 * @name linux-1871c6020d7308afb99127bba51f04548e7ca84e-kvm_mmu_unprotect_page_virt
 * @id cpp/linux/1871c6020d7308afb99127bba51f04548e7ca84e/kvm-mmu-unprotect-page-virt
 * @description linux-1871c6020d7308afb99127bba51f04548e7ca84e-arch/x86/kvm/mmu.c-kvm_mmu_unprotect_page_virt CVE-2010-0298
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvcpu_2735, Parameter vgva_2735, ValueFieldAccess target_4, AddressOfExpr target_5) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("kvm_mmu_gva_to_gpa_read")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vvcpu_2735
		and target_0.getArgument(1).(VariableAccess).getTarget()=vgva_2735
		and target_0.getArgument(2).(Literal).getValue()="0"
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("gpa_t")
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
		and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_2735, VariableAccess target_1) {
		target_1.getTarget()=vvcpu_2735
		and target_1.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_2(Parameter vgva_2735, VariableAccess target_2) {
		target_2.getTarget()=vgva_2735
		and target_2.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_3(Parameter vvcpu_2735, Parameter vgva_2735, VariableCall target_3) {
		target_3.getExpr().(ValueFieldAccess).getTarget().getName()="gva_to_gpa"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="mmu"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_2735
		and target_3.getArgument(0).(VariableAccess).getTarget()=vvcpu_2735
		and target_3.getArgument(1).(VariableAccess).getTarget()=vgva_2735
}

predicate func_4(Parameter vvcpu_2735, ValueFieldAccess target_4) {
		target_4.getTarget().getName()="mmu"
		and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_2735
}

predicate func_5(Parameter vvcpu_2735, AddressOfExpr target_5) {
		target_5.getOperand().(PointerFieldAccess).getTarget().getName()="mmu_lock"
		and target_5.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="kvm"
		and target_5.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_2735
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_lock")
}

from Function func, Parameter vvcpu_2735, Parameter vgva_2735, VariableAccess target_1, VariableAccess target_2, VariableCall target_3, ValueFieldAccess target_4, AddressOfExpr target_5
where
not func_0(vvcpu_2735, vgva_2735, target_4, target_5)
and func_1(vvcpu_2735, target_1)
and func_2(vgva_2735, target_2)
and func_3(vvcpu_2735, vgva_2735, target_3)
and func_4(vvcpu_2735, target_4)
and func_5(vvcpu_2735, target_5)
and vvcpu_2735.getType().hasName("kvm_vcpu *")
and vgva_2735.getType().hasName("gva_t")
and vvcpu_2735.getFunction() = func
and vgva_2735.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
