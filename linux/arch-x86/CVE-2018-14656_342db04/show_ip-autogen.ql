/**
 * @name linux-342db04ae71273322f0011384a9ed414df8bdae4-show_ip
 * @id cpp/linux/342db04ae71273322f0011384a9ed414df8bdae4/show-ip
 * @description linux-342db04ae71273322f0011384a9ed414df8bdae4-arch/x86/kernel/dumpstack.c-show_ip CVE-2018-14656
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vregs_109, VariableAccess target_0) {
	target_0.getTarget()=vregs_109
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("show_opcodes")
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ip"
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
}

predicate func_1(Parameter vregs_109, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="ip"
	and target_1.getQualifier().(VariableAccess).getTarget()=vregs_109
}

from Function func, Parameter vregs_109, VariableAccess target_0, PointerFieldAccess target_1
where
func_0(vregs_109, target_0)
and func_1(vregs_109, target_1)
and vregs_109.getType().hasName("pt_regs *")
and vregs_109.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
