/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-alg_setkey
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/alg-setkey
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-crypto/af_alg.c-alg_setkey CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vukey_200, Parameter vkeylen_201, Variable vkey_205, FunctionCall target_3, ExprStmt target_4) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("copy_from_sockptr")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vkey_205
	and target_0.getArgument(1).(VariableAccess).getTarget()=vukey_200
	and target_0.getArgument(2).(VariableAccess).getTarget()=vkeylen_201
	and target_0.getParent().(IfStmt).getThen() instanceof GotoStmt
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getArgument(1).(VariableAccess).getLocation())
	and target_0.getArgument(2).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vukey_200, Parameter vkeylen_201, Variable vkey_205, VariableAccess target_1) {
	target_1.getTarget()=vkey_205
	and target_1.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vukey_200
	and target_1.getParent().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vkeylen_201
	and target_1.getParent().(FunctionCall).getParent().(IfStmt).getThen() instanceof GotoStmt
}

/*predicate func_2(Parameter vukey_200, Parameter vkeylen_201, Variable vkey_205, VariableAccess target_2) {
	target_2.getTarget()=vkeylen_201
	and target_2.getParent().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_205
	and target_2.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vukey_200
	and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen() instanceof GotoStmt
}

*/
predicate func_3(Parameter vukey_200, Parameter vkeylen_201, Variable vkey_205, FunctionCall target_3) {
	target_3.getTarget().hasName("copy_from_user")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vkey_205
	and target_3.getArgument(1).(VariableAccess).getTarget()=vukey_200
	and target_3.getArgument(2).(VariableAccess).getTarget()=vkeylen_201
	and target_3.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_4(Parameter vkeylen_201, Variable vkey_205, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="setkey"
	and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const af_alg_type *")
	and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="private"
	and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("alg_sock *")
	and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(VariableAccess).getTarget()=vkey_205
	and target_4.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(VariableAccess).getTarget()=vkeylen_201
}

from Function func, Parameter vukey_200, Parameter vkeylen_201, Variable vkey_205, VariableAccess target_1, FunctionCall target_3, ExprStmt target_4
where
not func_0(vukey_200, vkeylen_201, vkey_205, target_3, target_4)
and func_1(vukey_200, vkeylen_201, vkey_205, target_1)
and func_3(vukey_200, vkeylen_201, vkey_205, target_3)
and func_4(vkeylen_201, vkey_205, target_4)
and vukey_200.getType().hasName("char *")
and vkeylen_201.getType().hasName("unsigned int")
and vkey_205.getType().hasName("u8 *")
and vukey_200.getFunction() = func
and vkeylen_201.getFunction() = func
and vkey_205.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
