/**
 * @name linux-f77dc8a75859e559f3238a6d906206259227985e-fastrpc_req_mmap
 * @id cpp/linux/f77dc8a75859e559f3238a6d906206259227985e/fastrpc-req-mmap
 * @description linux-f77dc8a75859e559f3238a6d906206259227985e-drivers/misc/fastrpc.c-fastrpc_req_mmap CVE-2024-46741
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_1866, ExprStmt target_1, ExprStmt target_4, ReturnStmt target_2, Function func) {
exists(ReturnStmt target_0 |
	target_0.getExpr().(VariableAccess).getTarget()=verr_1866
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(VariableAccess).getLocation())
	and target_0.getExpr().(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vbuf_1860, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("fastrpc_buf_free")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vbuf_1860
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable verr_1866, Function func, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=verr_1866
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(VariableAccess target_5, Function func, GotoStmt target_3) {
	target_3.getName() ="err_invoke"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable verr_1866, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=verr_1866
		and obj_0.getRValue().(UnaryMinusExpr).getValue()="-14"
	)
}

predicate func_5(Variable verr_1866, BlockStmt target_6, VariableAccess target_5) {
	target_5.getTarget()=verr_1866
	and target_5.getParent().(IfStmt).getThen()=target_6
}

predicate func_6(Function func, BlockStmt target_6) {
	exists(ExprStmt obj_0 | obj_0=target_6.getStmt(0) |
		exists(StmtExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(1) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("_dev_err")
						and obj_4.getArgument(0).(VariableAccess).getTarget().getType().hasName("device *")
						and obj_4.getArgument(1).(StringLiteral).getValue()="mmap error (len 0x%08llx)\n"
						and obj_4.getArgument(2).(PointerFieldAccess).getTarget().getName()="size"
					)
				)
				and obj_2.getStmt(0).(DoStmt).getCondition() instanceof Literal
			)
		)
	)
	and target_6.getEnclosingFunction() = func
}

from Function func, Variable vbuf_1860, Variable verr_1866, ExprStmt target_1, ReturnStmt target_2, GotoStmt target_3, ExprStmt target_4, VariableAccess target_5, BlockStmt target_6
where
not func_0(verr_1866, target_1, target_4, target_2, func)
and func_1(vbuf_1860, func, target_1)
and func_2(verr_1866, func, target_2)
and func_3(target_5, func, target_3)
and func_4(verr_1866, target_4)
and func_5(verr_1866, target_6, target_5)
and func_6(func, target_6)
and vbuf_1860.getType().hasName("fastrpc_buf *")
and verr_1866.getType().hasName("int")
and vbuf_1860.(LocalVariable).getFunction() = func
and verr_1866.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
