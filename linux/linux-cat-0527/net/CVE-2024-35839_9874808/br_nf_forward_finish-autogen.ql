/**
 * @name linux-9874808878d9eed407e3977fd11fee49de1e1d86-br_nf_forward_finish
 * @id cpp/linux/9874808878d9eed407e3977fd11fee49de1e1d86/br-nf-forward-finish
 * @description linux-9874808878d9eed407e3977fd11fee49de1e1d86-net/bridge/br_netfilter_hooks.c-br_nf_forward_finish CVE-2024-35839
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnet_543, Parameter vskb_543, Variable vin_546, LogicalAndExpr target_3, ExprStmt target_4, ExprStmt target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("nf_bridge_get_physindev")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vskb_543
	and target_0.getArgument(1).(VariableAccess).getTarget()=vnet_543
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vin_546
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getArgument(1).(VariableAccess).getLocation())
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vskb_543, Variable vin_546, LogicalAndExpr target_3, ExprStmt target_6, ExprStmt target_7) {
exists(IfStmt target_1 |
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vin_546
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_543
	and target_1.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(Literal).getValue()="0"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_2(Variable vnf_bridge_545, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="physindev"
	and target_2.getQualifier().(VariableAccess).getTarget()=vnf_bridge_545
}

predicate func_3(Parameter vnet_543, Parameter vskb_543, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(NotExpr).getOperand().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(ValueFieldAccess).getTarget().getName()="vlan_all"
	and target_3.getLeftOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="protocol"
	and target_3.getLeftOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_3.getLeftOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_3.getLeftOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(FunctionCall).getTarget().hasName("__builtin_bswap16")
	and target_3.getLeftOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(FunctionCall).getValue()="1544"
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("is_vlan_arp")
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_543
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnet_543
}

predicate func_4(Parameter vnet_543, Parameter vskb_543, Variable vin_546, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("br_nf_hook_thresh")
	and target_4.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="2"
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnet_543
	and target_4.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_4.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vskb_543
	and target_4.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vin_546
	and target_4.getExpr().(FunctionCall).getArgument(5).(ValueFieldAccess).getTarget().getName()="dev"
	and target_4.getExpr().(FunctionCall).getArgument(5).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getExpr().(FunctionCall).getArgument(5).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getExpr().(FunctionCall).getArgument(5).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getExpr().(FunctionCall).getArgument(5).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_543
}

predicate func_5(Parameter vskb_543, Variable vnf_bridge_545, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="frag_max_size"
	and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnf_bridge_545
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="frag_max_size"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_543
}

predicate func_6(Parameter vskb_543, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="pkt_type"
	and target_6.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_6.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_6.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_543
	and target_6.getExpr().(AssignExpr).getRValue().(Literal).getValue()="3"
}

predicate func_7(Variable vnf_bridge_545, Variable vin_546, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vin_546
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="physindev"
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnf_bridge_545
}

from Function func, Parameter vnet_543, Parameter vskb_543, Variable vnf_bridge_545, Variable vin_546, PointerFieldAccess target_2, LogicalAndExpr target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7
where
not func_0(vnet_543, vskb_543, vin_546, target_3, target_4, target_5)
and not func_1(vskb_543, vin_546, target_3, target_6, target_7)
and func_2(vnf_bridge_545, target_2)
and func_3(vnet_543, vskb_543, target_3)
and func_4(vnet_543, vskb_543, vin_546, target_4)
and func_5(vskb_543, vnf_bridge_545, target_5)
and func_6(vskb_543, target_6)
and func_7(vnf_bridge_545, vin_546, target_7)
and vnet_543.getType().hasName("net *")
and vskb_543.getType().hasName("sk_buff *")
and vnf_bridge_545.getType().hasName("nf_bridge_info *")
and vin_546.getType().hasName("net_device *")
and vnet_543.getFunction() = func
and vskb_543.getFunction() = func
and vnf_bridge_545.(LocalVariable).getFunction() = func
and vin_546.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
