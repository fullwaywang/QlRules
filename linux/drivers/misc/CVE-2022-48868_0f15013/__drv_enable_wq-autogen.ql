/**
 * @name linux-0f150134dd795ffcd60b798a85ab737d8d010fb7-__drv_enable_wq
 * @id cpp/linux/0f150134dd795ffcd60b798a85ab737d8d010fb7/--drv-enable-wq
 * @description linux-0f150134dd795ffcd60b798a85ab737d8d010fb7-drivers/dma/idxd/device.c-__drv_enable_wq CVE-2022-48868
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrc_1174, Parameter vwq_1170, FunctionCall target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget()=vrc_1174
	)
	and target_0.getTarget().hasName("idxd_wq_disable")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vwq_1170
}

predicate func_1(Variable vrc_1174, Function func, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vrc_1174
		and obj_0.getRValue() instanceof FunctionCall
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vrc_1174, DoStmt target_3, ExprStmt target_1, ReturnStmt target_4, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vrc_1174
	and target_2.getGreaterOperand().(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_3
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getLesserOperand().(VariableAccess).getLocation())
	and target_2.getLesserOperand().(VariableAccess).getLocation().isBefore(target_4.getExpr().(VariableAccess).getLocation())
}

predicate func_3(Function func, DoStmt target_3) {
	exists(BlockStmt obj_0 | obj_0=target_3.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(ExprStmt obj_2 | obj_2=obj_1.getThen() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getTarget().hasName("__dynamic_dev_dbg")
					and obj_3.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
					and obj_3.getArgument(1).(VariableAccess).getTarget().getType().hasName("device *")
					and obj_3.getArgument(2).(StringLiteral).getValue()="wq %s disable failed\n"
					and obj_3.getArgument(3).(FunctionCall).getTarget().hasName("dev_name")
				)
			)
			and obj_1.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
		)
	)
	and target_3.getCondition() instanceof Literal
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vrc_1174, ReturnStmt target_4) {
	target_4.getExpr().(VariableAccess).getTarget()=vrc_1174
}

from Function func, Variable vrc_1174, Parameter vwq_1170, FunctionCall target_0, ExprStmt target_1, RelationalOperation target_2, DoStmt target_3, ReturnStmt target_4
where
func_0(vrc_1174, vwq_1170, target_0)
and func_1(vrc_1174, func, target_1)
and func_2(vrc_1174, target_3, target_1, target_4, target_2)
and func_3(func, target_3)
and func_4(vrc_1174, target_4)
and vrc_1174.getType().hasName("int")
and vwq_1170.getType().hasName("idxd_wq *")
and vrc_1174.(LocalVariable).getFunction() = func
and vwq_1170.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
