/**
 * @name linux-7dc40713618c884bf07c030d1ab1f47a9dc1f310-i915_gem_context_destroy_ioctl
 * @id cpp/linux/7dc40713618c884bf07c030d1ab1f47a9dc1f310/i915-gem-context-destroy-ioctl
 * @description linux-7dc40713618c884bf07c030d1ab1f47a9dc1f310-drivers/gpu/drm/i915/i915_gem_context.c-i915_gem_context_destroy_ioctl CVE-2020-7053
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vctx_876, FunctionCall target_0) {
		target_0.getTarget().hasName("i915_gem_context_put")
		and not target_0.getTarget().hasName("mutex_unlock")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vctx_876
}

predicate func_1(Variable vfile_priv_875, AddressOfExpr target_16) {
	exists(AddressOfExpr target_1 |
		target_1.getOperand().(PointerFieldAccess).getTarget().getName()="context_idr_lock"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_priv_875
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mutex_lock_interruptible_nested")
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(VariableAccess target_11, Function func) {
	exists(ReturnStmt target_2 |
		target_2.getExpr().(UnaryMinusExpr).getValue()="-4"
		and target_2.getParent().(IfStmt).getCondition()=target_11
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vfile_priv_875, AddressOfExpr target_16) {
	exists(AddressOfExpr target_3 |
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="context_idr_lock"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_priv_875
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Function func) {
	exists(FunctionCall target_4 |
		target_4.getTarget().hasName("mutex_lock_nested")
		and target_4.getArgument(0) instanceof AddressOfExpr
		and target_4.getArgument(1).(Literal).getValue()="0"
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Parameter vdev_871, AddressOfExpr target_5) {
		target_5.getOperand().(PointerFieldAccess).getTarget().getName()="struct_mutex"
		and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_871
		and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mutex_lock_interruptible_nested")
		and target_5.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_6(Variable vargs_874, PointerFieldAccess target_6) {
		target_6.getTarget().getName()="ctx_id"
		and target_6.getQualifier().(VariableAccess).getTarget()=vargs_874
		and target_6.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_7(Variable vfile_priv_875, VariableAccess target_7) {
		target_7.getTarget()=vfile_priv_875
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_8(Function func, DeclStmt target_8) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Variable vargs_874, Variable vfile_priv_875, Variable vctx_876, FunctionCall target_9) {
		target_9.getTarget().hasName("i915_gem_context_lookup")
		and target_9.getArgument(0).(VariableAccess).getTarget()=vfile_priv_875
		and target_9.getArgument(1).(PointerFieldAccess).getTarget().getName()="ctx_id"
		and target_9.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vargs_874
		and target_9.getParent().(AssignExpr).getRValue() = target_9
		and target_9.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vctx_876
}

predicate func_10(Variable vret_877, AssignExpr target_10) {
		target_10.getLValue().(VariableAccess).getTarget()=vret_877
		and target_10.getRValue().(FunctionCall).getTarget().hasName("mutex_lock_interruptible_nested")
		and target_10.getRValue().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_10.getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_11(Variable vret_877, VariableAccess target_11) {
		target_11.getTarget()=vret_877
		and target_11.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_12(VariableAccess target_11, Function func, GotoStmt target_12) {
		target_12.getParent().(IfStmt).getCondition()=target_11
		and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable vctx_876, PointerFieldAccess target_13) {
		target_13.getTarget().getName()="user_handle"
		and target_13.getQualifier().(VariableAccess).getTarget()=vctx_876
}

predicate func_14(Function func, ExprStmt target_14) {
		target_14.getExpr() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_16(Variable vfile_priv_875, AddressOfExpr target_16) {
		target_16.getOperand().(PointerFieldAccess).getTarget().getName()="context_idr"
		and target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_priv_875
}

from Function func, Parameter vdev_871, Variable vargs_874, Variable vfile_priv_875, Variable vctx_876, Variable vret_877, FunctionCall target_0, AddressOfExpr target_5, PointerFieldAccess target_6, VariableAccess target_7, DeclStmt target_8, FunctionCall target_9, AssignExpr target_10, VariableAccess target_11, GotoStmt target_12, PointerFieldAccess target_13, ExprStmt target_14, AddressOfExpr target_16
where
func_0(vctx_876, target_0)
and not func_1(vfile_priv_875, target_16)
and not func_2(target_11, func)
and not func_3(vfile_priv_875, target_16)
and not func_4(func)
and func_5(vdev_871, target_5)
and func_6(vargs_874, target_6)
and func_7(vfile_priv_875, target_7)
and func_8(func, target_8)
and func_9(vargs_874, vfile_priv_875, vctx_876, target_9)
and func_10(vret_877, target_10)
and func_11(vret_877, target_11)
and func_12(target_11, func, target_12)
and func_13(vctx_876, target_13)
and func_14(func, target_14)
and func_16(vfile_priv_875, target_16)
and vdev_871.getType().hasName("drm_device *")
and vargs_874.getType().hasName("drm_i915_gem_context_destroy *")
and vfile_priv_875.getType().hasName("drm_i915_file_private *")
and vctx_876.getType().hasName("i915_gem_context *")
and vret_877.getType().hasName("int")
and vdev_871.getFunction() = func
and vargs_874.(LocalVariable).getFunction() = func
and vfile_priv_875.(LocalVariable).getFunction() = func
and vctx_876.(LocalVariable).getFunction() = func
and vret_877.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
