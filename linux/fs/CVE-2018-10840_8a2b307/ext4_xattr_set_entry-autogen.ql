/**
 * @name linux-8a2b307c21d4b290e3cbe33f768f194286d07c23-ext4_xattr_set_entry
 * @id cpp/linux/8a2b307c21d4b290e3cbe33f768f194286d07c23/ext4-xattr-set-entry
 * @description linux-8a2b307c21d4b290e3cbe33f768f194286d07c23-fs/ext4/xattr.c-ext4_xattr_set_entry CVE-2018-10840
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhere_1564, BlockStmt target_2, ExprStmt target_3, LogicalAndExpr target_4) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand().(PointerFieldAccess).getTarget().getName()="e_value_size"
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhere_1564
	and target_0.getParent().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="e_value_offs"
	and target_0.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhere_1564
	and target_0.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vs_1559, Variable vhere_1564, BlockStmt target_2, NotExpr target_1) {
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="not_found"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_1559
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="e_value_offs"
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhere_1564
	and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	target_2.getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__memmove")
	and target_2.getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("void *")
	and target_2.getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_2.getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
	and target_2.getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("void *")
	and target_2.getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("void *")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vhere_1564, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("ext4_xattr_inode_free_quota")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("inode *")
	and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="e_value_size"
	and target_3.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhere_1564
}

predicate func_4(Variable vhere_1564, LogicalAndExpr target_4) {
	target_4.getLeftOperand() instanceof NotExpr
	and target_4.getRightOperand().(PointerFieldAccess).getTarget().getName()="e_value_offs"
	and target_4.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhere_1564
}

from Function func, Parameter vs_1559, Variable vhere_1564, NotExpr target_1, BlockStmt target_2, ExprStmt target_3, LogicalAndExpr target_4
where
not func_0(vhere_1564, target_2, target_3, target_4)
and func_1(vs_1559, vhere_1564, target_2, target_1)
and func_2(func, target_2)
and func_3(vhere_1564, target_3)
and func_4(vhere_1564, target_4)
and vs_1559.getType().hasName("ext4_xattr_search *")
and vhere_1564.getType().hasName("ext4_xattr_entry *")
and vs_1559.getFunction() = func
and vhere_1564.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
