/**
 * @name linux-233087ca063686964a53c829d547c7571e3f67bf-fd_locked_ioctl
 * @id cpp/linux/233087ca063686964a53c829d547c7571e3f67bf/fd-locked-ioctl
 * @description linux-233087ca063686964a53c829d547c7571e3f67bf-fd_locked_ioctl CVE-2022-33981
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcmd_3367, Parameter vparam_3368, Variable vi_3372, FunctionCall target_0) {
		target_0.getTarget().hasName("raw_cmd_ioctl")
		and not target_0.getTarget().hasName("floppy_raw_cmd_ioctl")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vcmd_3367
		and target_0.getArgument(1).(VariableAccess).getTarget()=vparam_3368
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_3372
}

predicate func_1(Variable vtype_3371, ReturnStmt target_11, VariableAccess target_1) {
		target_1.getTarget()=vtype_3371
		and target_1.getParent().(IfStmt).getThen()=target_11
}

predicate func_2(Variable vdrive_3370, VariableAccess target_2) {
		target_2.getTarget()=vdrive_3370
		and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Function func, DeclStmt target_3) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vtype_3371, VariableAccess target_12, IfStmt target_4) {
		target_4.getCondition().(VariableAccess).getTarget()=vtype_3371
		and target_4.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_12
}

predicate func_5(Variable vdrive_3370, VariableAccess target_12, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("set_floppy")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdrive_3370
		and target_5.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_12
}

predicate func_6(Variable vi_3372, VariableAccess target_12, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_3372
		and target_6.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_12
}

predicate func_7(Variable vi_3372, VariableAccess target_12, IfStmt target_7) {
		target_7.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vi_3372
		and target_7.getCondition().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-4"
		and target_7.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-4"
		and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_12
}

predicate func_8(Variable vi_3372, EqualityOperation target_13, VariableAccess target_8) {
		target_8.getTarget()=vi_3372
		and target_13.getAnOperand().(VariableAccess).getLocation().isBefore(target_8.getLocation())
}

predicate func_9(Variable vdrive_3370, VariableAccess target_12, ExprStmt target_5, IfStmt target_9) {
		target_9.getCondition().(FunctionCall).getTarget().hasName("lock_fdc")
		and target_9.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdrive_3370
		and target_9.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-4"
		and target_9.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_12
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_10(VariableAccess target_12, Function func, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("process_fd_request")
		and target_10.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_12
		and target_10.getEnclosingFunction() = func
}

predicate func_11(VariableAccess target_1, Function func, ReturnStmt target_11) {
		target_11.getExpr() instanceof UnaryMinusExpr
		and target_11.getParent().(IfStmt).getCondition()=target_1
		and target_11.getEnclosingFunction() = func
}

predicate func_12(Parameter vcmd_3367, VariableAccess target_12) {
		target_12.getTarget()=vcmd_3367
}

predicate func_13(Variable vi_3372, EqualityOperation target_13) {
		target_13.getAnOperand().(VariableAccess).getTarget()=vi_3372
		and target_13.getAnOperand() instanceof UnaryMinusExpr
}

from Function func, Parameter vcmd_3367, Parameter vparam_3368, Variable vdrive_3370, Variable vtype_3371, Variable vi_3372, FunctionCall target_0, VariableAccess target_1, VariableAccess target_2, DeclStmt target_3, IfStmt target_4, ExprStmt target_5, ExprStmt target_6, IfStmt target_7, VariableAccess target_8, IfStmt target_9, ExprStmt target_10, ReturnStmt target_11, VariableAccess target_12, EqualityOperation target_13
where
func_0(vcmd_3367, vparam_3368, vi_3372, target_0)
and func_1(vtype_3371, target_11, target_1)
and func_2(vdrive_3370, target_2)
and func_3(func, target_3)
and func_4(vtype_3371, target_12, target_4)
and func_5(vdrive_3370, target_12, target_5)
and func_6(vi_3372, target_12, target_6)
and func_7(vi_3372, target_12, target_7)
and func_8(vi_3372, target_13, target_8)
and func_9(vdrive_3370, target_12, target_5, target_9)
and func_10(target_12, func, target_10)
and func_11(target_1, func, target_11)
and func_12(vcmd_3367, target_12)
and func_13(vi_3372, target_13)
and vcmd_3367.getType().hasName("unsigned int")
and vparam_3368.getType().hasName("unsigned long")
and vdrive_3370.getType().hasName("int")
and vtype_3371.getType().hasName("int")
and vi_3372.getType().hasName("int")
and vcmd_3367.getFunction() = func
and vparam_3368.getFunction() = func
and vdrive_3370.(LocalVariable).getFunction() = func
and vtype_3371.(LocalVariable).getFunction() = func
and vi_3372.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
