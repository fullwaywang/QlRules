/**
 * @name linux-2d45a02d0166caf2627fe91897c6ffc3b19514c4-sctp_setsockopt_auto_asconf
 * @id cpp/linux/2d45a02d0166caf2627fe91897c6ffc3b19514c4/sctp-setsockopt-auto-asconf
 * @description linux-2d45a02d0166caf2627fe91897c6ffc3b19514c4-net/sctp/socket.c-sctp_setsockopt_auto_asconf CVE-2015-3212
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_3568, LogicalAndExpr target_2, FunctionCall target_3, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("spin_lock_bh")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="addr_wq_lock"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sctp"
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("sock_net")
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_3568
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_2.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_3568, FunctionCall target_3, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_bh")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="addr_wq_lock"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sctp"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("sock_net")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_3568
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vsk_3568, LogicalAndExpr target_2) {
		target_2.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sctp_is_ep_boundall")
		and target_2.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_3568
		and target_2.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Parameter vsk_3568, FunctionCall target_3) {
		target_3.getTarget().hasName("sock_net")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vsk_3568
}

from Function func, Parameter vsk_3568, LogicalAndExpr target_2, FunctionCall target_3
where
not func_0(vsk_3568, target_2, target_3, func)
and not func_1(vsk_3568, target_3, func)
and func_2(vsk_3568, target_2)
and func_3(vsk_3568, target_3)
and vsk_3568.getType().hasName("sock *")
and vsk_3568.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
