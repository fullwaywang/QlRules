/**
 * @name linux-76ca8da989c7d97a7f76c75d475fe95a584439d7-bigben_probe
 * @id cpp/linux/76ca8da989c7d97a7f76c75d475fe95a584439d7/bigben-probe
 * @description linux-76ca8da989c7d97a7f76c75d475fe95a584439d7-drivers/hid/hid-bigbenff.c-bigben_probe CVE-2023-25012
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbigben_366) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("bigben_schedule_work")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbigben_366)
}

predicate func_1(Variable vbigben_366, VariableAccess target_1) {
	target_1.getTarget()=vbigben_366
	and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vbigben_366, FunctionCall target_2) {
	target_2.getTarget().hasName("schedule_work")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="worker"
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbigben_366
}

from Function func, Variable vbigben_366, VariableAccess target_1, FunctionCall target_2
where
not func_0(vbigben_366)
and func_1(vbigben_366, target_1)
and func_2(vbigben_366, target_2)
and vbigben_366.getType().hasName("bigben_device *")
and vbigben_366.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
