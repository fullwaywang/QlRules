/**
 * @name linux-9369830518688ecd5b08ffc08ab3302ce2b5d0f7-__bpf_async_init
 * @id cpp/linux/9369830518688ecd5b08ffc08ab3302ce2b5d0f7/--bpf-async-init
 * @description linux-9369830518688ecd5b08ffc08ab3302ce2b5d0f7-kernel/bpf/helpers.c-__bpf_async_init CVE-2024-42239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofTypeOperator target_0) {
	target_0.getType() instanceof LongType
	and target_0.getValue()="120"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vt_1173, EqualityOperation target_2, ExprStmt target_3, AddressOfExpr target_4) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="cancelling"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vt_1173
			)
		)
		and obj_0.getTarget().hasName("atomic_set")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_3 | obj_3=target_1.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(2)=target_1
			and obj_4.getCondition()=target_2
		)
	)
	and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Function func, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget().getType().hasName("bpf_async_type")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vt_1173, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vt_1173
		and obj_0.getRValue().(VariableAccess).getTarget().getType().hasName("bpf_async_cb *")
	)
}

predicate func_4(Variable vt_1173, AddressOfExpr target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getOperand() |
		obj_0.getTarget().getName()="timer"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vt_1173
	)
}

from Function func, Variable vt_1173, SizeofTypeOperator target_0, EqualityOperation target_2, ExprStmt target_3, AddressOfExpr target_4
where
func_0(func, target_0)
and not func_1(vt_1173, target_2, target_3, target_4)
and func_2(func, target_2)
and func_3(vt_1173, target_3)
and func_4(vt_1173, target_4)
and vt_1173.getType().hasName("bpf_hrtimer *")
and vt_1173.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
