/**
 * @name linux-305d568b72f17f674155a2a8275f865f207b3808-rdma_resolve_addr
 * @id cpp/linux/305d568b72f17f674155a2a8275f865f207b3808/rdma-resolve-addr
 * @description linux-305d568b72f17f674155a2a8275f865f207b3808-drivers/infiniband/core/cma.c-rdma_resolve_addr CVE-2021-47391
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vid_priv_3414, EqualityOperation target_1, ExprStmt target_2, FunctionCall target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(PointerFieldAccess).getTarget().getName()="used_resolve_ip"
	and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vid_priv_3414
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("rdma_addr_cancel")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="dev_addr"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="addr"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="route"
	and target_0.getElse().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="used_resolve_ip"
	and target_0.getElse().(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vid_priv_3414
	and target_0.getElse().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, EqualityOperation target_1) {
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="sa_family"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const sockaddr *")
	and target_1.getRightOperand().(Literal).getValue()="27"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vid_priv_3414, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("cma_resolve_ib_addr")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vid_priv_3414
}

predicate func_3(Variable vid_priv_3414, FunctionCall target_3) {
	target_3.getTarget().hasName("cma_src_addr")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vid_priv_3414
}

from Function func, Variable vid_priv_3414, EqualityOperation target_1, ExprStmt target_2, FunctionCall target_3
where
not func_0(vid_priv_3414, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vid_priv_3414, target_2)
and func_3(vid_priv_3414, target_3)
and vid_priv_3414.getType().hasName("rdma_id_private *")
and vid_priv_3414.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
