/**
 * @name linux-05ae1f0fe9c6c5ead08b306e665763a352d20716-ice_process_vflr_event
 * @id cpp/linux/05ae1f0fe9c6c5ead08b306e665763a352d20716/ice-process-vflr-event
 * @description linux-05ae1f0fe9c6c5ead08b306e665763a352d20716-drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c-ice_process_vflr_event CVE-2022-48941
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvf_1721, BitwiseAndExpr target_3) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="cfg_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvf_1721
			)
		)
		and obj_0.getTarget().hasName("mutex_lock_nested")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_4.getCondition()=target_3
		)
	)
)
}

predicate func_1(Variable vvf_1721, BitwiseAndExpr target_3, ExprStmt target_2) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="cfg_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvf_1721
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and exists(BlockStmt obj_3 | obj_3=target_1.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(2)=target_1
			and obj_4.getCondition()=target_3
		)
	)
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Variable vvf_1721, BitwiseAndExpr target_3, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("ice_reset_vf")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vvf_1721
	)
	and target_2.getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, BitwiseAndExpr target_3) {
	exists(BinaryBitwiseOperation obj_0 | obj_0=target_3.getRightOperand() |
		obj_0.getLeftOperand().(Literal).getValue()="1"
		and obj_0.getRightOperand().(VariableAccess).getTarget().getType().hasName("u32")
	)
	and target_3.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u32")
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vvf_1721, ExprStmt target_2, BitwiseAndExpr target_3
where
not func_0(vvf_1721, target_3)
and not func_1(vvf_1721, target_3, target_2)
and func_2(vvf_1721, target_3, target_2)
and func_3(func, target_3)
and vvf_1721.getType().hasName("ice_vf *")
and vvf_1721.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
