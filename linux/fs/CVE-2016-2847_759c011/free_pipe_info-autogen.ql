/**
 * @name linux-759c01142a5d0f364a462346168a56de28a80f52-free_pipe_info
 * @id cpp/linux/759c01142a5d0f364a462346168a56de28a80f52/free-pipe-info
 * @description linux-759c01142a5d0f364a462346168a56de28a80f52-fs/pipe.c-free_pipe_info CVE-2016-2847
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpipe_606, ForStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("account_pipe_buffers")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpipe_606
	and target_0.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="buffers"
	and target_0.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_606
	and target_0.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(Parameter vpipe_606, ForStmt target_2, RelationalOperation target_3, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("free_uid")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_606
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vpipe_606, ForStmt target_2) {
	target_2.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="buffers"
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_606
	and target_2.getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(PointerFieldAccess).getTarget().getName()="ops"
	and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("pipe_buffer *")
	and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="release"
	and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vpipe_606
	and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(VariableCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("pipe_buffer *")
}

predicate func_3(Parameter vpipe_606, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="buffers"
	and target_3.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpipe_606
}

from Function func, Parameter vpipe_606, ForStmt target_2, RelationalOperation target_3
where
not func_0(vpipe_606, target_2, func)
and not func_1(vpipe_606, target_2, target_3, func)
and func_2(vpipe_606, target_2)
and func_3(vpipe_606, target_3)
and vpipe_606.getType().hasName("pipe_inode_info *")
and vpipe_606.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
