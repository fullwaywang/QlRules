/**
 * @name linux-a68e564adcaa69b0930809fb64d9d5f7d9c32ba9-__open_session
 * @id cpp/linux/a68e564adcaa69b0930809fb64d9d5f7d9c32ba9/--open-session
 * @description linux-a68e564adcaa69b0930809fb64d9d5f7d9c32ba9-fs/ceph/mds_client.c-__open_session CVE-2023-52732
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable v__UNIQUE_ID_ddebug1090_1483, VariableAccess target_1) {
	target_1.getTarget()=v__UNIQUE_ID_ddebug1090_1483
	and target_1.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("arch_static_branch_jump")
}

predicate func_2(Variable v__UNIQUE_ID_ddebug1090_1483, VariableAccess target_2) {
	target_2.getTarget()=v__UNIQUE_ID_ddebug1090_1483
	and target_2.getParent().(ValueFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("arch_static_branch")
}

predicate func_3(Variable v__UNIQUE_ID_ddebug1090_1483, VariableAccess target_3) {
	target_3.getTarget()=v__UNIQUE_ID_ddebug1090_1483
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="ceph: %.*s %12.12s:%-4d : open_session to mds%d (%s)\n"
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SubExpr).getValue()="3"
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(StringLiteral).getValue()="    "
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(FunctionCall).getTarget().hasName("kbasename")
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(5) instanceof Literal
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(6).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(7).(FunctionCall).getTarget().hasName("ceph_mds_state_name")
	and target_3.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(7).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_4(ExprStmt target_5, Function func) {
exists(IfStmt target_4 |
	target_4.getCondition().(EqualityOperation).getLeftOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_4.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_5.getLocation()))
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ceph_mdsmap_get_state")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="mdsmap"
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ceph_mds_client *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getEnclosingFunction() = func
}

from Function func, Variable v__UNIQUE_ID_ddebug1090_1483, VariableAccess target_1, VariableAccess target_2, VariableAccess target_3, ExprStmt target_5
where
func_1(v__UNIQUE_ID_ddebug1090_1483, target_1)
and func_2(v__UNIQUE_ID_ddebug1090_1483, target_2)
and func_3(v__UNIQUE_ID_ddebug1090_1483, target_3)
and not func_4(target_5, func)
and func_5(func, target_5)
and v__UNIQUE_ID_ddebug1090_1483.getType().hasName("_ddebug")
and v__UNIQUE_ID_ddebug1090_1483.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
