commit 49b22e06a947727a6d1c802d2d9ad92420b90fc5
Author: Gao Xiang <xiang@kernel.org>
Date:   Mon Jul 22 11:51:10 2024 +0800

    erofs: fix race in z_erofs_get_gbuf()
    
    commit 7dc5537c3f8be87e005f0844a7626c987914f8fd upstream.
    
    In z_erofs_get_gbuf(), the current task may be migrated to another
    CPU between `z_erofs_gbuf_id()` and `spin_lock(&gbuf->lock)`.
    
    Therefore, z_erofs_put_gbuf() will trigger the following issue
    which was found by stress test:
    
    <2>[772156.434168] kernel BUG at fs/erofs/zutil.c:58!
    ..
    <4>[772156.435007]
    <4>[772156.439237] CPU: 0 PID: 3078 Comm: stress Kdump: loaded Tainted: G            E      6.10.0-rc7+ #2
    <4>[772156.439239] Hardware name: Alibaba Cloud Alibaba Cloud ECS, BIOS 1.0.0 01/01/2017
    <4>[772156.439241] pstate: 83400005 (Nzcv daif +PAN -UAO +TCO +DIT -SSBS BTYPE=--)
    <4>[772156.439243] pc : z_erofs_put_gbuf+0x64/0x70 [erofs]
    <4>[772156.439252] lr : z_erofs_lz4_decompress+0x600/0x6a0 [erofs]
    ..
    <6>[772156.445958] stress (3127): drop_caches: 1
    <4>[772156.446120] Call trace:
    <4>[772156.446121]  z_erofs_put_gbuf+0x64/0x70 [erofs]
    <4>[772156.446761]  z_erofs_lz4_decompress+0x600/0x6a0 [erofs]
    <4>[772156.446897]  z_erofs_decompress_queue+0x740/0xa10 [erofs]
    <4>[772156.447036]  z_erofs_runqueue+0x428/0x8c0 [erofs]
    <4>[772156.447160]  z_erofs_readahead+0x224/0x390 [erofs]
    ..
    
    Fixes: f36f3010f676 ("erofs: rename per-CPU buffers to global buffer pool and make it configurable")
    Cc: <stable@vger.kernel.org> # 6.10+
    Reviewed-by: Chunhai Guo <guochunhai@vivo.com>
    Reviewed-by: Sandeep Dhavale <dhavale@google.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20240722035110.3456740-1-hsiangkao@linux.alibaba.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/fs/erofs/zutil.c b/fs/erofs/zutil.c
index b80f612867c2..9b53883e5caf 100644
--- a/fs/erofs/zutil.c
+++ b/fs/erofs/zutil.c
@@ -38,11 +38,13 @@ void *z_erofs_get_gbuf(unsigned int requiredpages)
 {
 	struct z_erofs_gbuf *gbuf;
 
+	migrate_disable();
 	gbuf = &z_erofs_gbufpool[z_erofs_gbuf_id()];
 	spin_lock(&gbuf->lock);
 	/* check if the buffer is too small */
 	if (requiredpages > gbuf->nrpages) {
 		spin_unlock(&gbuf->lock);
+		migrate_enable();
 		/* (for sparse checker) pretend gbuf->lock is still taken */
 		__acquire(gbuf->lock);
 		return NULL;
@@ -57,6 +59,7 @@ void z_erofs_put_gbuf(void *ptr) __releases(gbuf->lock)
 	gbuf = &z_erofs_gbufpool[z_erofs_gbuf_id()];
 	DBG_BUGON(gbuf->ptr != ptr);
 	spin_unlock(&gbuf->lock);
+	migrate_enable();
 }
 
 int z_erofs_gbuf_growsize(unsigned int nrpages)
