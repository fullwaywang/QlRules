/**
 * @name linux-929473ea05db455ad88cdc081f2adc556b8dc48f-host_start
 * @id cpp/linux/929473ea05db455ad88cdc081f2adc556b8dc48f/host-start
 * @description linux-929473ea05db455ad88cdc081f2adc556b8dc48f-drivers/usb/chipidea/host.c-host_start CVE-2013-2058
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vci_41, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="platdata"
	and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vci_41
	and target_0.getCondition().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="8"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("hw_write")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vci_41
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(BinaryBitwiseOperation).getValue()="16"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(BinaryBitwiseOperation).getValue()="16"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vci_41, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="hcd"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vci_41
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("usb_hcd *")
}

from Function func, Parameter vci_41, ExprStmt target_1
where
not func_0(vci_41, target_1, func)
and func_1(vci_41, target_1)
and vci_41.getType().hasName("ci13xxx *")
and vci_41.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
