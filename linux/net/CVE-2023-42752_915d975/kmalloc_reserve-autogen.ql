/**
 * @name linux-915d975b2ffa58a14bfcf16fafe00c41315949ff-kmalloc_reserve
 * @id cpp/linux/915d975b2ffa58a14bfcf16fafe00c41315949ff/kmalloc-reserve
 * @description linux-915d975b2ffa58a14bfcf16fafe00c41315949ff-kmalloc_reserve CVE-2023-42752
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vsize_549, Variable vobj_size_553, ExprStmt target_4, LogicalAndExpr target_5, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vsize_549
		and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vobj_size_553
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_4.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_5.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vsize_549, Variable vobj_size_553, AssignExpr target_3) {
		target_3.getLValue().(VariableAccess).getTarget()=vobj_size_553
		and target_3.getRValue().(FunctionCall).getTarget().hasName("kmalloc_size_roundup")
		and target_3.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vobj_size_553
		and target_3.getParent().(AssignExpr).getRValue() = target_3
		and target_3.getParent().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vsize_549
}

predicate func_4(Parameter vsize_549, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vsize_549
		and target_4.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("is_power_of_2")
		and target_4.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(AddExpr).getValue()="640"
		and target_4.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(AddExpr).getValue()="704"
		and target_4.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(AddExpr).getValue()="640"
}

predicate func_5(Variable vobj_size_553, LogicalAndExpr target_5) {
		target_5.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vobj_size_553
		and target_5.getAnOperand().(RelationalOperation).getGreaterOperand().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("is_power_of_2")
		and target_5.getAnOperand().(RelationalOperation).getGreaterOperand().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(AddExpr).getValue()="640"
		and target_5.getAnOperand().(RelationalOperation).getGreaterOperand().(ConditionalExpr).getThen().(AddExpr).getValue()="704"
		and target_5.getAnOperand().(RelationalOperation).getGreaterOperand().(ConditionalExpr).getElse().(AddExpr).getValue()="640"
		and target_5.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("gfp_t")
		and target_5.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(BitwiseOrExpr).getValue()="4194321"
}

from Function func, Parameter vsize_549, Variable vobj_size_553, AssignExpr target_3, ExprStmt target_4, LogicalAndExpr target_5
where
not func_1(vsize_549, vobj_size_553, target_4, target_5, func)
and func_3(vsize_549, vobj_size_553, target_3)
and func_4(vsize_549, target_4)
and func_5(vobj_size_553, target_5)
and vsize_549.getType().hasName("unsigned int *")
and vobj_size_553.getType().hasName("unsigned int")
and vsize_549.getFunction() = func
and vobj_size_553.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
