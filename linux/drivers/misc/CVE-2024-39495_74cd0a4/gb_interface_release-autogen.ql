/**
 * @name linux-74cd0a421896b2e07eafe7da4275302bfecef201-gb_interface_release
 * @id cpp/linux/74cd0a421896b2e07eafe7da4275302bfecef201/gb-interface-release
 * @description linux-74cd0a421896b2e07eafe7da4275302bfecef201-drivers/greybus/interface.c-gb_interface_release CVE-2024-39495
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vintf_693, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="mode_switch_work"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vintf_693
			)
		)
		and obj_0.getTarget().hasName("cancel_work_sync")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vintf_693, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vintf_693
	)
}

predicate func_2(Variable vintf_693, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("trace_gb_interface_release")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vintf_693
	)
}

from Function func, Variable vintf_693, ExprStmt target_1, ExprStmt target_2
where
not func_0(vintf_693, target_1, target_2, func)
and func_1(vintf_693, target_1)
and func_2(vintf_693, target_2)
and vintf_693.getType().hasName("gb_interface *")
and vintf_693.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
