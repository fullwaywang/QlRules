/**
 * @name linux-e99476497687ef9e850748fe6d232264f30bc8f9-sctp_mt_check
 * @id cpp/linux/e99476497687ef9e850748fe6d232264f30bc8f9/sctp-mt-check
 * @description linux-e99476497687ef9e850748fe6d232264f30bc8f9-net/netfilter/xt_sctp.c-sctp_mt_check CVE-2023-39193
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinfo_150, IfStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="flag_count"
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_150
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(AddExpr).getValue()="4"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vinfo_150, IfStmt target_1) {
	target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_150
	and target_1.getCondition().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="4294967288"
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
}

from Function func, Variable vinfo_150, IfStmt target_1
where
not func_0(vinfo_150, target_1, func)
and func_1(vinfo_150, target_1)
and vinfo_150.getType().hasName("const xt_sctp_info *")
and vinfo_150.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
