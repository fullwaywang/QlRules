/**
 * @name linux-45e093ae2830cd1264677d47ff9a95a71f5d9f9c-tipc_nl_publ_dump
 * @id cpp/linux/45e093ae2830cd1264677d47ff9a95a71f5d9f9c/tipc-nl-publ-dump
 * @description linux-45e093ae2830cd1264677d47ff9a95a71f5d9f9c-net/tipc/socket.c-tipc_nl_publ_dump CVE-2016-4951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vattrs_2849, NotExpr target_1, AddressOfExpr target_2, ArrayExpr target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vattrs_2849
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_3.getArrayBase().(VariableAccess).getLocation()))
}

predicate func_1(Function func, NotExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vattrs_2849, AddressOfExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vattrs_2849
}

predicate func_3(Variable vattrs_2849, ArrayExpr target_3) {
	target_3.getArrayBase().(VariableAccess).getTarget()=vattrs_2849
}

from Function func, Variable vattrs_2849, NotExpr target_1, AddressOfExpr target_2, ArrayExpr target_3
where
not func_0(vattrs_2849, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vattrs_2849, target_2)
and func_3(vattrs_2849, target_3)
and vattrs_2849.getType().hasName("nlattr **")
and vattrs_2849.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
