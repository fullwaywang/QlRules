/**
 * @name linux-7dc40713618c884bf07c030d1ab1f47a9dc1f310-i915_gem_context_create_ioctl
 * @id cpp/linux/7dc40713618c884bf07c030d1ab1f47a9dc1f310/i915-gem-context-create-ioctl
 * @description linux-7dc40713618c884bf07c030d1ab1f47a9dc1f310-drivers/gpu/drm/i915/i915_gem_context.c-i915_gem_context_create_ioctl CVE-2020-7053
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_816, IfStmt target_6, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="struct_mutex"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_816
	and target_6.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(FunctionCall target_7, Function func) {
exists(ReturnStmt target_1 |
	target_1.getExpr() instanceof FunctionCall
	and target_1.getParent().(IfStmt).getCondition()=target_7
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Parameter vdev_816, ExprStmt target_8, AddressOfExpr target_9) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("mutex_lock_nested")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="struct_mutex"
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_816
	and target_2.getArgument(1).(Literal).getValue()="0"
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vctx_822, Variable vret_823, FunctionCall target_3) {
	target_3.getTarget().hasName("PTR_ERR")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vctx_822
	and target_3.getParent().(AssignExpr).getRValue() = target_3
	and target_3.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_823
}

predicate func_4(Variable vret_823, AssignExpr target_4) {
	target_4.getLValue().(VariableAccess).getTarget()=vret_823
	and target_4.getRValue() instanceof FunctionCall
}

predicate func_5(FunctionCall target_7, Function func, GotoStmt target_5) {
	target_5.getName() ="err_unlock"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vret_823, IfStmt target_6) {
	target_6.getCondition().(VariableAccess).getTarget()=vret_823
	and target_6.getThen().(GotoStmt).getName() ="err_ctx"
}

predicate func_7(Variable vctx_822, FunctionCall target_7) {
	target_7.getTarget().hasName("IS_ERR")
	and target_7.getArgument(0).(VariableAccess).getTarget()=vctx_822
}

predicate func_8(Variable vret_823, Parameter vdev_816, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_823
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("i915_mutex_lock_interruptible")
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_816
}

predicate func_9(Parameter vdev_816, AddressOfExpr target_9) {
	target_9.getOperand().(PointerFieldAccess).getTarget().getName()="struct_mutex"
	and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_816
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

from Function func, Variable vctx_822, Variable vret_823, Parameter vdev_816, ExprStmt target_0, FunctionCall target_3, AssignExpr target_4, GotoStmt target_5, IfStmt target_6, FunctionCall target_7, ExprStmt target_8, AddressOfExpr target_9
where
func_0(vdev_816, target_6, target_0)
and not func_1(target_7, func)
and not func_2(vdev_816, target_8, target_9)
and func_3(vctx_822, vret_823, target_3)
and func_4(vret_823, target_4)
and func_5(target_7, func, target_5)
and func_6(vret_823, target_6)
and func_7(vctx_822, target_7)
and func_8(vret_823, vdev_816, target_8)
and func_9(vdev_816, target_9)
and vctx_822.getType().hasName("i915_gem_context *")
and vret_823.getType().hasName("int")
and vdev_816.getType().hasName("drm_device *")
and vctx_822.(LocalVariable).getFunction() = func
and vret_823.(LocalVariable).getFunction() = func
and vdev_816.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
