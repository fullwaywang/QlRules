/**
 * @name linux-a41537e69b4aa43f0fea02498c2595a81267383b-ext4_file_write_iter
 * @id cpp/linux/a41537e69b4aa43f0fea02498c2595a81267383b/ext4-file-write-iter
 * @description linux-a41537e69b4aa43f0fea02498c2595a81267383b-fs/ext4/file.c-ext4_file_write_iter CVE-2014-8086
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable voverwrite_99, Parameter viocb_92, VariableAccess target_1, ExprStmt target_0) {
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="private"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=viocb_92
		and target_0.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=voverwrite_99
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_1(Variable vo_direct_98, BlockStmt target_2, VariableAccess target_1) {
		target_1.getTarget()=vo_direct_98
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
		target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("blk_start_plug")
		and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("blk_plug")
		and target_2.getStmt(1) instanceof ExprStmt
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("ext4_should_dioread_nolock")
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("mutex *")
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nrpages"
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="f_mapping"
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("loff_t")
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getTarget().hasName("i_size_read")
		and target_2.getStmt(2).(IfStmt).getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("inode *")
		and target_2.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="m_lblk"
		and target_2.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks")
		and target_2.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("loff_t")
		and target_2.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_2.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="m_len"
		and target_2.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_map_blocks")
		and target_2.getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(ValueFieldAccess).getTarget().getName()="m_lblk"
		and target_2.getEnclosingFunction() = func
}

from Function func, Variable vo_direct_98, Variable voverwrite_99, Parameter viocb_92, ExprStmt target_0, VariableAccess target_1, BlockStmt target_2
where
func_0(voverwrite_99, viocb_92, target_1, target_0)
and func_1(vo_direct_98, target_2, target_1)
and func_2(func, target_2)
and vo_direct_98.getType().hasName("int")
and voverwrite_99.getType().hasName("int")
and viocb_92.getType().hasName("kiocb *")
and vo_direct_98.(LocalVariable).getFunction() = func
and voverwrite_99.(LocalVariable).getFunction() = func
and viocb_92.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
