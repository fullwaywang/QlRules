commit 5ade5fbdbbb1f023bb70730ba4d74146c8bc7eb9
Author: Hao Ge <gehao@kylinos.cn>
Date:   Mon May 13 13:33:38 2024 +0800

    eventfs: Fix a possible null pointer dereference in eventfs_find_events()
    
    commit d4e9a968738bf66d3bb852dd5588d4c7afd6d7f4 upstream.
    
    In function eventfs_find_events,there is a potential null pointer
    that may be caused by calling update_events_attr which will perform
    some operations on the members of the ei struct when ei is NULL.
    
    Hence,When ei->is_freed is set,return NULL directly.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20240513053338.63017-1-hao.ge@linux.dev
    
    Cc: stable@vger.kernel.org
    Fixes: 8186fff7ab64 ("tracefs/eventfs: Use root and instance inodes as default ownership")
    Signed-off-by: Hao Ge <gehao@kylinos.cn>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/fs/tracefs/event_inode.c b/fs/tracefs/event_inode.c
index 3b785f4ca95e..94518a039a99 100644
--- a/fs/tracefs/event_inode.c
+++ b/fs/tracefs/event_inode.c
@@ -345,10 +345,9 @@ static struct eventfs_inode *eventfs_find_events(struct dentry *dentry)
 		 * If the ei is being freed, the ownership of the children
 		 * doesn't matter.
 		 */
-		if (ei->is_freed) {
-			ei = NULL;
-			break;
-		}
+		if (ei->is_freed)
+			return NULL;
+
 		// Walk upwards until you find the events inode
 	} while (!ei->is_events);
 
