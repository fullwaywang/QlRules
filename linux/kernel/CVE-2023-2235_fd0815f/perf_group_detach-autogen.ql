/**
 * @name linux-fd0815f632c24878e325821943edccc7fde947a2-perf_group_detach
 * @id cpp/linux/fd0815f632c24878e325821943edccc7fde947a2/perf-group-detach
 * @description linux-fd0815f632c24878e325821943edccc7fde947a2-kernel/events/core.c-perf_group_detach CVE-2023-2235
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vevent_2123, ExprStmt target_3, VariableAccess target_0) {
	target_0.getTarget()=vevent_2123
	and vevent_2123.getIndex() = 0
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getLocation())
}

predicate func_1(BlockStmt target_4, Function func) {
exists(BitwiseAndExpr target_1 |
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="attach_state"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("perf_event *")
	and target_1.getRightOperand().(Literal).getValue()="1"
	and target_1.getParent().(IfStmt).getThen()=target_4
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Parameter vevent_2123, BlockStmt target_4, NotExpr target_2) {
	target_2.getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="__rb_parent_color"
	and target_2.getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="group_node"
	and target_2.getOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_2123
	and target_2.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="group_node"
	and target_2.getOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_2123
	and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Parameter vevent_2123, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="group_caps"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("perf_event *")
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="group_caps"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_2123
}

predicate func_4(Parameter vevent_2123, BlockStmt target_4) {
	target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("add_event_to_groups")
	and target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("perf_event *")
	and target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="ctx"
	and target_4.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_2123
	and target_4.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="state"
	and target_4.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("perf_event *")
	and target_4.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_tail")
	and target_4.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="active_list"
	and target_4.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("perf_event *")
	and target_4.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("get_event_list")
	and target_4.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("perf_event *")
}

from Function func, Parameter vevent_2123, VariableAccess target_0, NotExpr target_2, ExprStmt target_3, BlockStmt target_4
where
func_0(vevent_2123, target_3, target_0)
and not func_1(target_4, func)
and func_2(vevent_2123, target_4, target_2)
and func_3(vevent_2123, target_3)
and func_4(vevent_2123, target_4)
and vevent_2123.getType().hasName("perf_event *")
and vevent_2123.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
