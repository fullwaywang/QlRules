/**
 * @name linux-234f3ce485d54017f15cf5e0699cff4100121601-em_call
 * @id cpp/linux/234f3ce485d54017f15cf5e0699cff4100121601/em-call
 * @description linux-234f3ce485d54017f15cf5e0699cff4100121601-arch/x86/kvm/emulate.c-em_call CVE-2014-3647
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getType().hasName("int")
	and target_0.getRValue() instanceof FunctionCall
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("int")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_2(Variable vrel_2908, Parameter vctxt_2906, FunctionCall target_2) {
	target_2.getTarget().hasName("jmp_rel")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vctxt_2906
	and target_2.getArgument(1).(VariableAccess).getTarget()=vrel_2908
}

from Function func, Variable vrel_2908, Parameter vctxt_2906, FunctionCall target_2
where
not func_0(func)
and not func_1(func)
and func_2(vrel_2908, vctxt_2906, target_2)
and vrel_2908.getType().hasName("long")
and vctxt_2906.getType().hasName("x86_emulate_ctxt *")
and vrel_2908.(LocalVariable).getFunction() = func
and vctxt_2906.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
