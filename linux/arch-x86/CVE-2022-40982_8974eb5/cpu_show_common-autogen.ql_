/**
 * @name linux-8974eb588283b7d44a7c91fa09fcbaf380339f3a-cpu_show_common
 * @id cpp/linux/8974eb588283b7d44a7c91fa09fcbaf380339f3a/cpu-show-common
 * @description linux-8974eb588283b7d44a7c91fa09fcbaf380339f3a-arch/x86/kernel/cpu/bugs.c-cpu_show_common CVE-2022-40982
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(SwitchCase target_0 |
	target_0.getExpr().(AddExpr).getValue()="702"
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vbuf_2386, VariableAccess target_2, FunctionCall target_3, FunctionCall target_4) {
exists(ReturnStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("gds_show_state")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbuf_2386
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_2
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vbug_2386, VariableAccess target_2) {
	target_2.getTarget()=vbug_2386
}

predicate func_3(Parameter vbuf_2386, FunctionCall target_3) {
	target_3.getTarget().hasName("retbleed_show_state")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vbuf_2386
}

predicate func_4(Parameter vbuf_2386, FunctionCall target_4) {
	target_4.getTarget().hasName("sysfs_emit")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vbuf_2386
	and target_4.getArgument(1).(StringLiteral).getValue()="Vulnerable\n"
}

from Function func, Parameter vbuf_2386, Parameter vbug_2386, VariableAccess target_2, FunctionCall target_3, FunctionCall target_4
where
not func_0(func)
and not func_1(vbuf_2386, target_2, target_3, target_4)
and func_2(vbug_2386, target_2)
and func_3(vbuf_2386, target_3)
and func_4(vbuf_2386, target_4)
and vbuf_2386.getType().hasName("char *")
and vbug_2386.getType().hasName("unsigned int")
and vbuf_2386.getFunction() = func
and vbug_2386.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
