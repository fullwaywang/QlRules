commit ed8cd3b2cd61004cab85380c52b1817aca1ca49b
Author: Xi Wang <xi.wang@gmail.com>
Date:   Mon Apr 23 04:06:41 2012 -0400

    drm/i915: fix integer overflow in i915_gem_execbuffer2()
    
    On 32-bit systems, a large args->buffer_count from userspace via ioctl
    may overflow the allocation size, leading to out-of-bounds access.
    
    This vulnerability was introduced in commit 8408c282 ("drm/i915:
    First try a normal large kmalloc for the temporary exec buffers").
    
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

diff --git a/drivers/gpu/drm/i915/i915_gem_execbuffer.c b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
index f51a696..7c50e58 100644
--- a/drivers/gpu/drm/i915/i915_gem_execbuffer.c
+++ b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
@@ -1404,7 +1404,8 @@ i915_gem_execbuffer2(struct drm_device *dev, void *data,
 	struct drm_i915_gem_exec_object2 *exec2_list = NULL;
 	int ret;
 
-	if (args->buffer_count < 1) {
+	if (args->buffer_count < 1 ||
+	    args->buffer_count > UINT_MAX / sizeof(*exec2_list)) {
 		DRM_DEBUG("execbuf2 with %d buffers\n", args->buffer_count);
 		return -EINVAL;
 	}
