/**
 * @name linux-df4d92549f23e1c037e83323aff58a21b3de7fe0-ip_forward
 * @id cpp/linux/df4d92549f23e1c037e83323aff58a21b3de7fe0/ip-forward
 * @description linux-df4d92549f23e1c037e83323aff58a21b3de7fe0-net/ipv4/ip_forward.c-ip_forward CVE-2015-1465
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_73, ExprStmt target_5, LogicalAndExpr target_6, Literal target_0) {
	target_0.getValue()="1"
	and not target_0.getValue()="0"
	and target_0.getParent().(AssignOrExpr).getParent().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getParent().(AssignOrExpr).getParent().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
	and target_0.getParent().(AssignOrExpr).getParent().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_73
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getParent().(AssignOrExpr).getParent().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getParent().(AssignOrExpr).getParent().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="16777216"
	and not target_1.getValue()="5"
	and target_1.getParent().(BitwiseAndExpr).getParent().(LogicalAndExpr).getLeftOperand() instanceof BitwiseAndExpr
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func) {
exists(BinaryBitwiseOperation target_2 |
	target_2.getValue()="1"
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Parameter vskb_73, ExprStmt target_7, LogicalAndExpr target_8) {
exists(BitwiseAndExpr target_3 |
	target_3.getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
	and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_73
	and target_3.getRightOperand().(BinaryBitwiseOperation).getValue()="32"
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Variable vrt_77, BitwiseAndExpr target_4) {
	target_4.getLeftOperand().(PointerFieldAccess).getTarget().getName()="rt_flags"
	and target_4.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrt_77
	and target_4.getRightOperand() instanceof Literal
}

predicate func_5(Parameter vskb_73, Variable vrt_77, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrt_77
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("skb_rtable")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_73
}

predicate func_6(Parameter vskb_73, LogicalAndExpr target_6) {
	target_6.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ip_may_fragment")
	and target_6.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_73
	and target_6.getRightOperand().(FunctionCall).getTarget().hasName("ip_exceeds_mtu")
	and target_6.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_73
	and target_6.getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
}

predicate func_7(Parameter vskb_73, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("iphdr *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ip_hdr")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_73
}

predicate func_8(Parameter vskb_73, LogicalAndExpr target_8) {
	target_8.getLeftOperand().(LogicalAndExpr).getLeftOperand() instanceof BitwiseAndExpr
	and target_8.getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="srr"
	and target_8.getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ip_options *")
	and target_8.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("skb_sec_path")
	and target_8.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_73
}

from Function func, Parameter vskb_73, Variable vrt_77, Literal target_0, Literal target_1, BitwiseAndExpr target_4, ExprStmt target_5, LogicalAndExpr target_6, ExprStmt target_7, LogicalAndExpr target_8
where
func_0(vskb_73, target_5, target_6, target_0)
and func_1(func, target_1)
and not func_2(func)
and not func_3(vskb_73, target_7, target_8)
and func_4(vrt_77, target_4)
and func_5(vskb_73, vrt_77, target_5)
and func_6(vskb_73, target_6)
and func_7(vskb_73, target_7)
and func_8(vskb_73, target_8)
and vskb_73.getType().hasName("sk_buff *")
and vrt_77.getType().hasName("rtable *")
and vskb_73.getFunction() = func
and vrt_77.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
