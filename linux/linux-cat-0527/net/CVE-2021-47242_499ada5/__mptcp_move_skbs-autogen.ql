/**
 * @name linux-499ada5073361c631f2a3c4a8aed44d53b6f82ec-__mptcp_move_skbs
 * @id cpp/linux/499ada5073361c631f2a3c4a8aed44d53b6f82ec/--mptcp-move-skbs
 * @description linux-499ada5073361c631f2a3c4a8aed44d53b6f82ec-net/mptcp/protocol.c-__mptcp_move_skbs CVE-2021-47242
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_1929, Variable vssk_1935, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sk_err"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vssk_1935
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__mptcp_error_report")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1929
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vssk_1935, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("unlock_sock_fast")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vssk_1935
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("bool")
}

predicate func_2(Variable vsk_1929, AddressOfExpr target_2) {
	target_2.getOperand().(ValueFieldAccess).getTarget().getName()="slock"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1929
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock_bh")
}

predicate func_3(Variable vsk_1929, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="sk_receive_queue"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1929
}

predicate func_4(Variable vssk_1935, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("tcp_cleanup_rbuf")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vssk_1935
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vsk_1929, Variable vssk_1935, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3, ExprStmt target_4
where
not func_0(vsk_1929, vssk_1935, target_1, target_2, target_3, target_4)
and func_1(vssk_1935, target_1)
and func_2(vsk_1929, target_2)
and func_3(vsk_1929, target_3)
and func_4(vssk_1935, target_4)
and vsk_1929.getType().hasName("sock *")
and vssk_1935.getType().hasName("sock *")
and vsk_1929.(LocalVariable).getFunction() = func
and vssk_1935.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
