/**
 * @name linux-dbcc7d57bffc0c8cac9dac11bec548597d59a6a5-get_old_root
 * @id cpp/linux/dbcc7d57bffc0c8cac9dac11bec548597d59a6a5/get-old-root
 * @description linux-dbcc7d57bffc0c8cac9dac11bec548597d59a6a5-get_old_root CVE-2021-28964
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vold_1334, StmtExpr target_2, ExprStmt target_3, ExprStmt target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("btrfs_tree_read_lock")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_1334
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vold_1334, StmtExpr target_2, ExprStmt target_4, ExprStmt target_5) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("btrfs_tree_read_unlock")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_1334
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(2)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Function func, StmtExpr target_2) {
		target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
		and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(DoStmt).getCondition() instanceof Literal
		and target_2.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(DoStmt).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vold_1334, NotExpr target_6, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("free_extent_buffer")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_1334
		and target_3.getParent().(IfStmt).getCondition()=target_6
}

predicate func_4(Variable vold_1334, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("extent_buffer *")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("btrfs_clone_extent_buffer")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_1334
}

predicate func_5(Variable vold_1334, StmtExpr target_2, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("free_extent_buffer")
		and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_1334
		and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_6(Variable vold_1334, NotExpr target_6) {
		target_6.getOperand().(FunctionCall).getTarget().hasName("IS_ERR")
		and target_6.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vold_1334
}

from Function func, Variable vold_1334, StmtExpr target_2, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5, NotExpr target_6
where
not func_0(vold_1334, target_2, target_3, target_4)
and not func_1(vold_1334, target_2, target_4, target_5)
and func_2(func, target_2)
and func_3(vold_1334, target_6, target_3)
and func_4(vold_1334, target_4)
and func_5(vold_1334, target_2, target_5)
and func_6(vold_1334, target_6)
and vold_1334.getType().hasName("extent_buffer *")
and vold_1334.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
