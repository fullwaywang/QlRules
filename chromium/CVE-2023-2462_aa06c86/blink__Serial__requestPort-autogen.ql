/**
 * @name chromium-aa06c8661961d40785c11a436cfdb35e2270dff0-blink__Serial__requestPort
 * @id cpp/chromium/aa06c8661961d40785c11a436cfdb35e2270dff0/blinkserialrequestport
 * @description chromium-aa06c8661961d40785c11a436cfdb35e2270dff0-third_party/blink/renderer/modules/serial/serial.cc-blink__Serial__requestPort CVE-2023-2462
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vexception_state_149, BlockStmt target_2, ExprStmt target_3) {
exists(AddressOfExpr target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getArgument(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().hasName("GetSupplementable")
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
			)
			and obj_1.getTarget().hasName("DomWindow")
		)
		and exists(FunctionCall obj_3 | obj_3=obj_0.getArgument(1) |
			obj_3.getTarget().hasName("GetExecutionContext")
			and obj_3.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and obj_0.getArgument(2).(VariableAccess).getTarget()=vexception_state_149
		and obj_0.getParent().(IfStmt).getThen()=target_2
	)
	and target_0.getOperand().(VariableAccess).getTarget()=vexception_state_149
	and target_0.getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vexception_state_149, BlockStmt target_2, VariableAccess target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getArgument(0) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().hasName("GetSupplementable")
				and obj_2.getQualifier().(ThisExpr).getType() instanceof PointerType
			)
			and obj_1.getTarget().hasName("DomWindow")
		)
		and exists(FunctionCall obj_3 | obj_3=obj_0.getArgument(1) |
			obj_3.getTarget().hasName("GetExecutionContext")
			and obj_3.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and obj_0.getParent().(IfStmt).getThen()=target_2
	)
	and target_1.getTarget()=vexception_state_149
}

predicate func_2(Function func, BlockStmt target_2) {
	target_2.getStmt(0).(ReturnStmt).getExpr().(ConstructorCall).getType() instanceof VoidType
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vexception_state_149, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("ThrowSecurityError")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vexception_state_149
		and obj_0.getArgument(0).(StringLiteral).getValue()="Must be handling a user gesture to show a permission request."
	)
}

from Function func, Parameter vexception_state_149, VariableAccess target_1, BlockStmt target_2, ExprStmt target_3
where
not func_0(vexception_state_149, target_2, target_3)
and func_1(vexception_state_149, target_2, target_1)
and func_2(func, target_2)
and func_3(vexception_state_149, target_3)
and vexception_state_149.getType().hasName("ExceptionState &")
and vexception_state_149.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
