/**
 * @name linux-de9f869616dd95e95c00bdd6b0fcd3421e8a4323-get_seg_limit
 * @id cpp/linux/de9f869616dd95e95c00bdd6b0fcd3421e8a4323/get-seg-limit
 * @description linux-de9f869616dd95e95c00bdd6b0fcd3421e8a4323-arch/x86/lib/insn-eval.c-get_seg_limit CVE-2019-13233
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vdesc_695, Variable vsel_697, ReturnStmt target_10, NotExpr target_12, NotExpr target_13) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("get_desc")
		and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdesc_695
		and target_1.getArgument(1).(VariableAccess).getTarget()=vsel_697
		and target_1.getParent().(NotExpr).getOperand().(VariableAccess).getTarget()=vdesc_695
		and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_10
		and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_12.getOperand().(VariableAccess).getLocation())
		and target_13.getOperand().(VariableAccess).getLocation().isBefore(target_1.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Variable vdesc_695, NotExpr target_12, ExprStmt target_7) {
	exists(AddressOfExpr target_2 |
		target_2.getOperand().(VariableAccess).getTarget()=vdesc_695
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_desc_limit")
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdesc_695
		and target_12.getOperand().(VariableAccess).getLocation().isBefore(target_2.getOperand().(VariableAccess).getLocation())
		and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vdesc_695, ExprStmt target_7, IfStmt target_14) {
	exists(ValueFieldAccess target_3 |
		target_3.getTarget().getName()="g"
		and target_3.getQualifier().(VariableAccess).getTarget()=vdesc_695
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
		and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_14.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vsel_697, VariableAccess target_4) {
		target_4.getTarget()=vsel_697
		and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_5(Variable vdesc_695, Variable vsel_697, AssignExpr target_5) {
		target_5.getLValue().(VariableAccess).getTarget()=vdesc_695
		and target_5.getRValue().(FunctionCall).getTarget().hasName("get_desc")
		and target_5.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsel_697
}

predicate func_6(Variable vdesc_695, ReturnStmt target_10, VariableAccess target_6) {
		target_6.getTarget()=vdesc_695
		and target_6.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_10
}

predicate func_7(Variable vdesc_695, Variable vlimit_696, Function func, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vlimit_696
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_desc_limit")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdesc_695
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

/*predicate func_8(Variable vdesc_695, VariableAccess target_8) {
		target_8.getTarget()=vdesc_695
		and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_desc_limit")
}

*/
predicate func_9(Variable vdesc_695, PointerFieldAccess target_9) {
		target_9.getTarget().getName()="g"
		and target_9.getQualifier().(VariableAccess).getTarget()=vdesc_695
}

predicate func_10(NotExpr target_12, Function func, ReturnStmt target_10) {
		target_10.getExpr().(Literal).getValue()="0"
		and target_10.getParent().(IfStmt).getCondition()=target_12
		and target_10.getEnclosingFunction() = func
}

predicate func_12(Variable vdesc_695, NotExpr target_12) {
		target_12.getOperand().(VariableAccess).getTarget()=vdesc_695
}

predicate func_13(Variable vsel_697, NotExpr target_13) {
		target_13.getOperand().(VariableAccess).getTarget()=vsel_697
}

predicate func_14(Variable vdesc_695, Variable vlimit_696, IfStmt target_14) {
		target_14.getCondition().(PointerFieldAccess).getTarget().getName()="g"
		and target_14.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdesc_695
		and target_14.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vlimit_696
		and target_14.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=vlimit_696
		and target_14.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
		and target_14.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(AddExpr).getAnOperand().(HexLiteral).getValue()="4095"
}

from Function func, Variable vdesc_695, Variable vlimit_696, Variable vsel_697, VariableAccess target_4, AssignExpr target_5, VariableAccess target_6, ExprStmt target_7, PointerFieldAccess target_9, ReturnStmt target_10, NotExpr target_12, NotExpr target_13, IfStmt target_14
where
not func_1(vdesc_695, vsel_697, target_10, target_12, target_13)
and not func_2(vdesc_695, target_12, target_7)
and not func_3(vdesc_695, target_7, target_14)
and func_4(vsel_697, target_4)
and func_5(vdesc_695, vsel_697, target_5)
and func_6(vdesc_695, target_10, target_6)
and func_7(vdesc_695, vlimit_696, func, target_7)
and func_9(vdesc_695, target_9)
and func_10(target_12, func, target_10)
and func_12(vdesc_695, target_12)
and func_13(vsel_697, target_13)
and func_14(vdesc_695, vlimit_696, target_14)
and vdesc_695.getType().hasName("desc_struct *")
and vlimit_696.getType().hasName("unsigned long")
and vsel_697.getType().hasName("short")
and vdesc_695.(LocalVariable).getFunction() = func
and vlimit_696.(LocalVariable).getFunction() = func
and vsel_697.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
