/**
 * @name linux-3a359798b176183ef09efb7a3dc59abad1cc7104-llcp_sock_create
 * @id cpp/linux/3a359798b176183ef09efb7a3dc59abad1cc7104/llcp-sock-create
 * @description linux-3a359798b176183ef09efb7a3dc59abad1cc7104-net/nfc/llcp_sock.c-llcp_sock_create CVE-2019-17056
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("capable")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(Literal).getValue()="13"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vsock_995, Variable vllcp_rawsock_ops, EqualityOperation target_3, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ops"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_995
	and target_1.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vllcp_rawsock_ops
	and target_1.getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Parameter vsock_995, Variable vllcp_sock_ops, EqualityOperation target_3, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ops"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_995
	and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vllcp_sock_ops
	and target_2.getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Parameter vsock_995, EqualityOperation target_3) {
	target_3.getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_3.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_995
}

from Function func, Parameter vsock_995, Variable vllcp_rawsock_ops, Variable vllcp_sock_ops, ExprStmt target_1, ExprStmt target_2, EqualityOperation target_3
where
not func_0(target_3, func)
and func_1(vsock_995, vllcp_rawsock_ops, target_3, target_1)
and func_2(vsock_995, vllcp_sock_ops, target_3, target_2)
and func_3(vsock_995, target_3)
and vsock_995.getType().hasName("socket *")
and vllcp_rawsock_ops.getType().hasName("const proto_ops")
and vllcp_sock_ops.getType().hasName("const proto_ops")
and vsock_995.getFunction() = func
and not vllcp_rawsock_ops.getParentScope+() = func
and not vllcp_sock_ops.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
