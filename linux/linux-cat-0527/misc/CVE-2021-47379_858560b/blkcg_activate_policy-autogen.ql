/**
 * @name linux-858560b27645e7e97aca37ee8f232cccd658fbd2-blkcg_activate_policy
 * @id cpp/linux/858560b27645e7e97aca37ee8f232cccd658fbd2/blkcg-activate-policy
 * @description linux-858560b27645e7e97aca37ee8f232cccd658fbd2-block/blk-cgroup.c-blkcg_activate_policy CVE-2021-47379
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("blkcg *")
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("blkcg *")
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, IfStmt target_2) {
	target_2.getCondition().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="pd"
	and target_2.getCondition().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("blkcg_gq *")
	and target_2.getCondition().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="plid"
	and target_2.getCondition().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const blkcg_policy *")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="pd_free_fn"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const blkcg_policy *")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="pd"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("blkcg_gq *")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(0).(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="plid"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(VariableCall).getArgument(0).(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const blkcg_policy *")
	and target_2.getEnclosingFunction() = func
}

from Function func, IfStmt target_2
where
not func_0(target_2, func)
and not func_1(func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
