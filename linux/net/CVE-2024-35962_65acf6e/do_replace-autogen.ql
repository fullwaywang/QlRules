/**
 * @name linux-65acf6e0501ac8880a4f73980d01b5d27648b956-do_replace
 * @id cpp/linux/65acf6e0501ac8880a4f73980d01b5d27648b956/do-replace
 * @description linux-65acf6e0501ac8880a4f73980d01b5d27648b956-net/ipv4/netfilter/arp_tables.c-do_replace CVE-2024-35962
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vlen_951, Variable vtmp_954, ExprStmt target_1, RelationalOperation target_2, EqualityOperation target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_951
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="size"
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmp_954
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getRightOperand().(SizeofExprOperator).getValue()="80"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_3.getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtmp_954, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ValueFieldAccess).getTarget().getName()="name"
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmp_954
	and target_1.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(SubExpr).getValue()="31"
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_2(Parameter vlen_951, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vlen_951
	and target_2.getGreaterOperand().(SizeofExprOperator).getValue()="80"
}

predicate func_3(Variable vtmp_954, EqualityOperation target_3) {
	target_3.getLeftOperand().(ValueFieldAccess).getTarget().getName()="num_counters"
	and target_3.getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vtmp_954
	and target_3.getRightOperand().(Literal).getValue()="0"
}

from Function func, Parameter vlen_951, Variable vtmp_954, ExprStmt target_1, RelationalOperation target_2, EqualityOperation target_3
where
not func_0(vlen_951, vtmp_954, target_1, target_2, target_3, func)
and func_1(vtmp_954, target_1)
and func_2(vlen_951, target_2)
and func_3(vtmp_954, target_3)
and vlen_951.getType().hasName("unsigned int")
and vtmp_954.getType().hasName("arpt_replace")
and vlen_951.getFunction() = func
and vtmp_954.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
