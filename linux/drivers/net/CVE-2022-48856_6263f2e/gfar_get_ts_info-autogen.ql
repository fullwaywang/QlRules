/**
 * @name linux-6263f2eb93a85ad7df504daf0c341a7fb6bbe8a6-gfar_get_ts_info
 * @id cpp/linux/6263f2eb93a85ad7df504daf0c341a7fb6bbe8a6/gfar-get-ts-info
 * @description linux-6263f2eb93a85ad7df504daf0c341a7fb6bbe8a6-drivers/net/ethernet/freescale/gianfar_ethtool.c-gfar_get_ts_info CVE-2022-48856
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vptp_node_1517, VariableAccess target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("of_node_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vptp_node_1517
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_2.getCondition()=target_1
		)
	)
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vptp_node_1517, BlockStmt target_3, VariableAccess target_1) {
	target_1.getTarget()=vptp_node_1517
	and target_1.getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Variable vptp_node_1517, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("of_find_device_by_node")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vptp_node_1517
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("platform_device *")
	)
}

predicate func_3(Variable vptp_node_1517, BlockStmt target_3) {
	exists(ExprStmt obj_0 | obj_0=target_3.getStmt(0) |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("of_find_device_by_node")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vptp_node_1517
			)
			and obj_1.getLValue().(VariableAccess).getTarget().getType().hasName("platform_device *")
		)
	)
	and exists(IfStmt obj_3 | obj_3=target_3.getStmt(1) |
		exists(ExprStmt obj_4 | obj_4=obj_3.getThen() |
			exists(AssignExpr obj_5 | obj_5=obj_4.getExpr() |
				exists(FunctionCall obj_6 | obj_6=obj_5.getRValue() |
					obj_6.getTarget().hasName("platform_get_drvdata")
					and obj_6.getArgument(0).(VariableAccess).getTarget().getType().hasName("platform_device *")
				)
				and obj_5.getLValue().(VariableAccess).getTarget().getType().hasName("qoriq_ptp *")
			)
		)
		and obj_3.getCondition().(VariableAccess).getTarget().getType().hasName("platform_device *")
	)
}

from Function func, Variable vptp_node_1517, VariableAccess target_1, ExprStmt target_2, BlockStmt target_3
where
not func_0(vptp_node_1517, target_1, target_2)
and func_1(vptp_node_1517, target_3, target_1)
and func_2(vptp_node_1517, target_2)
and func_3(vptp_node_1517, target_3)
and vptp_node_1517.getType().hasName("device_node *")
and vptp_node_1517.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
