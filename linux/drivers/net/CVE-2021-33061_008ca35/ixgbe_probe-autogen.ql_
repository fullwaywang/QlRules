/**
 * @name linux-008ca35f6e87be1d60b6af3d1ae247c6d5c2531d-ixgbe_probe
 * @id cpp/linux/008ca35f6e87be1d60b6af3d1ae247c6d5c2531d/ixgbe-probe
 * @description linux-008ca35f6e87be1d60b6af3d1ae247c6d5c2531d-drivers/net/ethernet/intel/ixgbe/ixgbe_main.c-ixgbe_probe CVE-2021-33061
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vadapter_10633, SwitchStmt target_1, ExprStmt target_2, ValueFieldAccess target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="type"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="mac"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="hw"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadapter_10633
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="flags2"
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadapter_10633
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="524288"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vadapter_10633, SwitchStmt target_1) {
	target_1.getExpr().(ValueFieldAccess).getTarget().getName()="type"
	and target_1.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="mac"
	and target_1.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="hw"
	and target_1.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadapter_10633
	and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="udp_tunnel_nic_info"
	and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
	and target_1.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const udp_tunnel_nic_info")
	and target_1.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="udp_tunnel_nic_info"
	and target_1.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
	and target_1.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const udp_tunnel_nic_info")
}

predicate func_2(Variable vadapter_10633, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ixgbe_sw_init")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vadapter_10633
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const ixgbe_info *")
}

predicate func_3(Variable vadapter_10633, ValueFieldAccess target_3) {
	target_3.getTarget().getName()="type"
	and target_3.getQualifier().(ValueFieldAccess).getTarget().getName()="mac"
	and target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="hw"
	and target_3.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadapter_10633
}

from Function func, Variable vadapter_10633, SwitchStmt target_1, ExprStmt target_2, ValueFieldAccess target_3
where
not func_0(vadapter_10633, target_1, target_2, target_3, func)
and func_1(vadapter_10633, target_1)
and func_2(vadapter_10633, target_2)
and func_3(vadapter_10633, target_3)
and vadapter_10633.getType().hasName("ixgbe_adapter *")
and vadapter_10633.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
