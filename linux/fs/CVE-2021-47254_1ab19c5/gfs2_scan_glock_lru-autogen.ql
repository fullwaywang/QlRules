/**
 * @name linux-1ab19c5de4c537ec0d9b21020395a5b5a6c059b2-gfs2_scan_glock_lru
 * @id cpp/linux/1ab19c5de4c537ec0d9b21020395a5b5a6c059b2/gfs2-scan-glock-lru
 * @description linux-1ab19c5de4c537ec0d9b21020395a5b5a6c059b2-fs/gfs2/glock.c-gfs2_scan_glock_lru CVE-2021-47254
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vgl_1830, NotExpr target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("clear_bit")
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="gl_flags"
	and target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgl_1830
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_1(Variable vgl_1830, NotExpr target_1) {
	target_1.getOperand().(FunctionCall).getTarget().hasName("test_bit")
	and target_1.getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="gl_flags"
	and target_1.getOperand().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgl_1830
}

from Function func, Variable vgl_1830, ExprStmt target_0, NotExpr target_1
where
func_0(vgl_1830, target_1, target_0)
and func_1(vgl_1830, target_1)
and vgl_1830.getType().hasName("gfs2_glock *")
and vgl_1830.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
