/**
 * @name linux-d0021b252eaf65ca07ed14f0d66425dd9ccab9a6-tipc_net_start
 * @id cpp/linux/d0021b252eaf65ca07ed14f0d66425dd9ccab9a6/tipc-net-start
 * @description linux-d0021b252eaf65ca07ed14f0d66425dd9ccab9a6-net/tipc/net.c-tipc_net_start CVE-2010-1187
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vres_272, FunctionCall target_0) {
		target_0.getTarget().hasName("tipc_bearer_init")
		and not target_0.getTarget().hasName("tipc_cltr_init")
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vres_272
}

predicate func_1(Variable vres_272, LogicalOrExpr target_4, FunctionCall target_1) {
		target_1.getTarget().hasName("net_init")
		and not target_1.getTarget().hasName("tipc_bclink_init")
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vres_272
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getLocation())
}

predicate func_2(Variable vres_272, BlockStmt target_6, AssignExpr target_2) {
		target_2.getLValue().(VariableAccess).getTarget()=vres_272
		and target_2.getRValue().(FunctionCall).getTarget().hasName("tipc_bclink_init")
		and target_2.getParent().(LogicalOrExpr).getAnOperand() instanceof LogicalOrExpr
		and target_2.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_3(Variable vres_272, AssignExpr target_3) {
		target_3.getLValue().(VariableAccess).getTarget()=vres_272
		and target_3.getRValue().(FunctionCall).getTarget().hasName("tipc_cltr_init")
}

predicate func_4(Variable vres_272, BlockStmt target_6, LogicalOrExpr target_4) {
		target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vres_272
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(AssignExpr).getRValue() instanceof FunctionCall
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vres_272
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand().(LogicalOrExpr).getAnOperand().(AssignExpr).getRValue() instanceof FunctionCall
		and target_4.getAnOperand().(LogicalOrExpr).getAnOperand() instanceof AssignExpr
		and target_4.getAnOperand() instanceof AssignExpr
		and target_4.getParent().(IfStmt).getThen()=target_6
}

predicate func_6(Variable vres_272, BlockStmt target_6) {
		target_6.getStmt(0).(ReturnStmt).getExpr().(VariableAccess).getTarget()=vres_272
}

from Function func, Variable vres_272, FunctionCall target_0, FunctionCall target_1, AssignExpr target_2, AssignExpr target_3, LogicalOrExpr target_4, BlockStmt target_6
where
func_0(vres_272, target_0)
and func_1(vres_272, target_4, target_1)
and func_2(vres_272, target_6, target_2)
and func_3(vres_272, target_3)
and func_4(vres_272, target_6, target_4)
and func_6(vres_272, target_6)
and vres_272.getType().hasName("int")
and vres_272.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
