/**
 * @name frr-ff6db1027f8f36df657ff2e5ea167773752537ed-bgp_capability_msg_parse
 * @id cpp/frr/ff6db1027f8f36df657ff2e5ea167773752537ed/bgp-capability-msg-parse
 * @description frr-ff6db1027f8f36df657ff2e5ea167773752537ed-bgpd/bgp_packet.c-bgp_capability_msg_parse CVE-2022-37032
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v_xref_2625, Initializer target_0) {
		target_0.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="xref"
		and target_0.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v_xref_2625
}

predicate func_1(Variable v_xref_2649, Initializer target_1) {
		target_1.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="xref"
		and target_1.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v_xref_2649
}

predicate func_2(Variable v_xref_2659, Initializer target_2) {
		target_2.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="xref"
		and target_2.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v_xref_2659
}

predicate func_3(Variable v_xref_2685, Initializer target_3) {
		target_3.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="xref"
		and target_3.getExpr().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v_xref_2685
}

predicate func_4(Parameter vpeer_2582, Variable vhdr_2587, ExprStmt target_9, ExprStmt target_10) {
	exists(IfStmt target_4 |
		target_4.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="length"
		and target_4.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdr_2587
		and target_4.getCondition().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getType() instanceof LongType
		and target_4.getCondition().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getValue()="4"
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("zlog_ref")
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="%pBP Capability structure is not properly filled out, expected at least %zu bytes but header length specified is %d"
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vpeer_2582
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(SizeofTypeOperator).getType() instanceof LongType
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(SizeofTypeOperator).getValue()="4"
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="length"
		and target_9.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
		and target_4.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_9(Parameter vpeer_2582, Variable vhdr_2587, ExprStmt target_9) {
		target_9.getExpr().(FunctionCall).getTarget().hasName("zlog_ref")
		and target_9.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const xref_logmsg")
		and target_9.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="%s CAPABILITY has action: %d, code: %u, length %u"
		and target_9.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="host"
		and target_9.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpeer_2582
		and target_9.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("uint8_t")
		and target_9.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getTarget().getName()="code"
		and target_9.getExpr().(FunctionCall).getArgument(4).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdr_2587
		and target_9.getExpr().(FunctionCall).getArgument(5).(PointerFieldAccess).getTarget().getName()="length"
		and target_9.getExpr().(FunctionCall).getArgument(5).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhdr_2587
}

predicate func_10(Parameter vpeer_2582, Variable v_xref_2625, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("zlog_ref")
		and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=v_xref_2625
		and target_10.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="%s Capability length error"
		and target_10.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="host"
		and target_10.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpeer_2582
}

from Function func, Parameter vpeer_2582, Variable vhdr_2587, Variable v_xref_2625, Variable v_xref_2649, Variable v_xref_2659, Variable v_xref_2685, Initializer target_0, Initializer target_1, Initializer target_2, Initializer target_3, ExprStmt target_9, ExprStmt target_10
where
func_0(v_xref_2625, target_0)
and func_1(v_xref_2649, target_1)
and func_2(v_xref_2659, target_2)
and func_3(v_xref_2685, target_3)
and not func_4(vpeer_2582, vhdr_2587, target_9, target_10)
and func_9(vpeer_2582, vhdr_2587, target_9)
and func_10(vpeer_2582, v_xref_2625, target_10)
and vpeer_2582.getType().hasName("peer *")
and vhdr_2587.getType().hasName("capability_header *")
and v_xref_2625.getType().hasName("const xref_logmsg")
and v_xref_2649.getType().hasName("const xref_logmsg")
and v_xref_2659.getType().hasName("const xref_logmsg")
and v_xref_2685.getType().hasName("const xref_logmsg")
and vpeer_2582.getFunction() = func
and vhdr_2587.(LocalVariable).getFunction() = func
and v_xref_2625.(LocalVariable).getFunction() = func
and v_xref_2649.(LocalVariable).getFunction() = func
and v_xref_2659.(LocalVariable).getFunction() = func
and v_xref_2685.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
