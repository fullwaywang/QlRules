/**
 * @name linux-246c320a8cfe0b11d81a4af38fa9985ef0cc9a4c-detach_vmas_to_be_unmapped
 * @id cpp/linux/246c320a8cfe0b11d81a4af38fa9985ef0cc9a4c/detach-vmas-to-be-unmapped
 * @description linux-246c320a8cfe0b11d81a4af38fa9985ef0cc9a4c-mm/mmap.c-detach_vmas_to_be_unmapped CVE-2020-29369
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvma_2624, ExprStmt target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vvma_2624
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="vm_flags"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_2624
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="256"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vprev_2625, ExprStmt target_5, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vprev_2625
	and target_2.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="vm_flags"
	and target_2.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vprev_2625
	and target_2.getCondition().(LogicalAndExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getLocation().isBefore(target_2.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_3(Function func) {
exists(ReturnStmt target_3 |
	func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_4(Parameter vvma_2624, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("vma_gap_update")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_2624
}

predicate func_5(Parameter vprev_2625, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="highest_vm_end"
	and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mm_struct *")
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getTarget()=vprev_2625
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("vm_end_gap")
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vprev_2625
	and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
}

from Function func, Parameter vvma_2624, Parameter vprev_2625, ExprStmt target_4, ExprStmt target_5
where
not func_0(vvma_2624, target_4, func)
and not func_2(vprev_2625, target_5, func)
and not func_3(func)
and func_4(vvma_2624, target_4)
and func_5(vprev_2625, target_5)
and vvma_2624.getType().hasName("vm_area_struct *")
and vprev_2625.getType().hasName("vm_area_struct *")
and vvma_2624.getFunction() = func
and vprev_2625.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
