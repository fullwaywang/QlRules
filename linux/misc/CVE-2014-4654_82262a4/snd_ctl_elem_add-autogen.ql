/**
 * @name linux-82262a46627bebb0febcc26664746c25cef08563-snd_ctl_elem_add
 * @id cpp/linux/82262a46627bebb0febcc26664746c25cef08563/snd-ctl-elem-add
 * @description linux-82262a46627bebb0febcc26664746c25cef08563-sound/core/control.c-snd_ctl_elem_add CVE-2014-4654
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreplace_1148, IfStmt target_17, VariableAccess target_0) {
		target_0.getTarget()=vreplace_1148
		and vreplace_1148.getIndex() = 2
		and target_0.getLocation().isBefore(target_17.getCondition().(VariableAccess).getLocation())
}

predicate func_1(Variable verr_1155, Variable vcard_1150, Variable v_kctl_1151, FunctionCall target_1) {
		target_1.getTarget().hasName("snd_ctl_remove")
		and not target_1.getTarget().hasName("snd_ctl_remove_user_ctl")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vcard_1150
		and target_1.getArgument(1).(VariableAccess).getTarget()=v_kctl_1151
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
}

predicate func_2(Parameter vreplace_1148, ExprStmt target_20, IfStmt target_17, VariableAccess target_2) {
		target_2.getTarget()=vreplace_1148
		and vreplace_1148.getIndex() = 2
		and target_2.getParent().(IfStmt).getThen()=target_20
		and target_17.getCondition().(VariableAccess).getLocation().isBefore(target_2.getLocation())
}

predicate func_4(VariableAccess target_16, Function func) {
	exists(ReturnStmt target_4 |
		target_4.getExpr().(VariableAccess).getType().hasName("int")
		and target_4.getParent().(IfStmt).getCondition()=target_16
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vcard_1150, AddressOfExpr target_5) {
		target_5.getOperand().(PointerFieldAccess).getTarget().getName()="controls_rwsem"
		and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_1150
		and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(Variable vcard_1150, AddressOfExpr target_6) {
		target_6.getOperand().(PointerFieldAccess).getTarget().getName()="controls_rwsem"
		and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_1150
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_7(Variable verr_1155, ReturnStmt target_21, RelationalOperation target_7) {
		 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
		and target_7.getLesserOperand().(VariableAccess).getTarget()=verr_1155
		and target_7.getGreaterOperand().(Literal).getValue()="0"
		and target_7.getParent().(IfStmt).getThen()=target_21
}

predicate func_8(Variable vcard_1150, ReturnStmt target_22, RelationalOperation target_8) {
		 (target_8 instanceof GEExpr or target_8 instanceof LEExpr)
		and target_8.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="user_ctl_count"
		and target_8.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcard_1150
		and target_8.getLesserOperand().(Literal).getValue()="32"
		and target_8.getParent().(LogicalAndExpr).getAnOperand() instanceof NotExpr
		and target_8.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_22
}

predicate func_9(Parameter vinfo_1148, AddressOfExpr target_9) {
		target_9.getOperand().(PointerFieldAccess).getTarget().getName()="id"
		and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_1148
		and target_9.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_10(Parameter vreplace_1148, ExprStmt target_23, VariableAccess target_10) {
		target_10.getTarget()=vreplace_1148
		and target_10.getParent().(IfStmt).getThen()=target_23
}

predicate func_11(Parameter vreplace_1148, ReturnStmt target_22, LogicalAndExpr target_11) {
		target_11.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vreplace_1148
		and target_11.getAnOperand() instanceof RelationalOperation
		and target_11.getParent().(IfStmt).getThen()=target_22
}

predicate func_12(Function func, FunctionCall target_12) {
		target_12.getTarget().hasName("down_write")
		and target_12.getArgument(0) instanceof AddressOfExpr
		and target_12.getEnclosingFunction() = func
}

predicate func_13(Variable vcard_1150, Variable v_kctl_1151, Function func, ExprStmt target_13) {
		target_13.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v_kctl_1151
		and target_13.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("snd_ctl_find_id")
		and target_13.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcard_1150
		and target_13.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1) instanceof AddressOfExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
}

predicate func_14(Variable verr_1155, Function func, ExprStmt target_14) {
		target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
		and target_14.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_16(Variable v_kctl_1151, BlockStmt target_24, ExprStmt target_13, ExprStmt target_23, VariableAccess target_16) {
		target_16.getTarget()=v_kctl_1151
		and target_16.getParent().(IfStmt).getThen()=target_24
		and target_13.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_16.getLocation())
}

predicate func_17(Variable verr_1155, Parameter vreplace_1148, VariableAccess target_16, IfStmt target_17) {
		target_17.getCondition().(VariableAccess).getTarget()=vreplace_1148
		and target_17.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
		and target_17.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and target_17.getElse().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
		and target_17.getElse().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-16"
		and target_17.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
}

predicate func_18(Variable verr_1155, Parameter vreplace_1148, VariableAccess target_16, IfStmt target_18) {
		target_18.getCondition().(VariableAccess).getTarget()=vreplace_1148
		and target_18.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_1155
		and target_18.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-2"
		and target_18.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
}

predicate func_19(Function func, ExprStmt target_19) {
		target_19.getExpr().(FunctionCall).getTarget().hasName("up_write")
		and target_19.getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_19
}

predicate func_20(Function func, ExprStmt target_20) {
		target_20.getExpr() instanceof AssignExpr
		and target_20.getEnclosingFunction() = func
}

predicate func_21(Variable verr_1155, RelationalOperation target_7, ReturnStmt target_21) {
		target_21.getExpr().(VariableAccess).getTarget()=verr_1155
		and target_21.getParent().(IfStmt).getCondition()=target_7
}

predicate func_22(LogicalAndExpr target_11, Function func, ReturnStmt target_22) {
		target_22.getExpr().(UnaryMinusExpr).getValue()="-12"
		and target_22.getParent().(IfStmt).getCondition()=target_11
		and target_22.getEnclosingFunction() = func
}

predicate func_23(Function func, ExprStmt target_23) {
		target_23.getExpr() instanceof AssignExpr
		and target_23.getEnclosingFunction() = func
}

predicate func_24(Function func, BlockStmt target_24) {
		target_24.getStmt(0) instanceof IfStmt
		and target_24.getEnclosingFunction() = func
}

from Function func, Variable verr_1155, Variable vcard_1150, Variable v_kctl_1151, Parameter vinfo_1148, Parameter vreplace_1148, VariableAccess target_0, FunctionCall target_1, VariableAccess target_2, AddressOfExpr target_5, AddressOfExpr target_6, RelationalOperation target_7, RelationalOperation target_8, AddressOfExpr target_9, VariableAccess target_10, LogicalAndExpr target_11, FunctionCall target_12, ExprStmt target_13, ExprStmt target_14, VariableAccess target_16, IfStmt target_17, IfStmt target_18, ExprStmt target_19, ExprStmt target_20, ReturnStmt target_21, ReturnStmt target_22, ExprStmt target_23, BlockStmt target_24
where
func_0(vreplace_1148, target_17, target_0)
and func_1(verr_1155, vcard_1150, v_kctl_1151, target_1)
and func_2(vreplace_1148, target_20, target_17, target_2)
and not func_4(target_16, func)
and func_5(vcard_1150, target_5)
and func_6(vcard_1150, target_6)
and func_7(verr_1155, target_21, target_7)
and func_8(vcard_1150, target_22, target_8)
and func_9(vinfo_1148, target_9)
and func_10(vreplace_1148, target_23, target_10)
and func_11(vreplace_1148, target_22, target_11)
and func_12(func, target_12)
and func_13(vcard_1150, v_kctl_1151, func, target_13)
and func_14(verr_1155, func, target_14)
and func_16(v_kctl_1151, target_24, target_13, target_23, target_16)
and func_17(verr_1155, vreplace_1148, target_16, target_17)
and func_18(verr_1155, vreplace_1148, target_16, target_18)
and func_19(func, target_19)
and func_20(func, target_20)
and func_21(verr_1155, target_7, target_21)
and func_22(target_11, func, target_22)
and func_23(func, target_23)
and func_24(func, target_24)
and verr_1155.getType().hasName("int")
and vcard_1150.getType().hasName("snd_card *")
and v_kctl_1151.getType().hasName("snd_kcontrol *")
and vinfo_1148.getType().hasName("snd_ctl_elem_info *")
and vreplace_1148.getType().hasName("int")
and verr_1155.(LocalVariable).getFunction() = func
and vcard_1150.(LocalVariable).getFunction() = func
and v_kctl_1151.(LocalVariable).getFunction() = func
and vinfo_1148.getFunction() = func
and vreplace_1148.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
