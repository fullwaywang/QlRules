/**
 * @name linux-46612b751c4941c5c0472ddf04027e877ae5990f-soft_offline_in_use_page
 * @id cpp/linux/46612b751c4941c5c0472ddf04027e877ae5990f/soft-offline-in-use-page
 * @description linux-46612b751c4941c5c0472ddf04027e877ae5990f-mm/memory-failure.c-soft_offline_in_use_page CVE-2019-10124
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhpage_1825, LogicalAndExpr target_9, LogicalOrExpr target_10, VariableAccess target_0) {
	target_0.getTarget()=vhpage_1825
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lock_page")
	and target_9.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getLocation())
	and target_0.getLocation().isBefore(target_10.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_1(Variable vhpage_1825, ExprStmt target_11, VariableAccess target_1) {
	target_1.getTarget()=vhpage_1825
	and target_1.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageAnon")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vhpage_1825, ExprStmt target_12, VariableAccess target_2) {
	target_2.getTarget()=vhpage_1825
	and target_2.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("split_huge_page")
	and target_2.getLocation().isBefore(target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_3(Variable vhpage_1825, NotExpr target_13, NotExpr target_14, VariableAccess target_3) {
	target_3.getTarget()=vhpage_1825
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("unlock_page")
	and target_13.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getLocation())
	and target_3.getLocation().isBefore(target_14.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_4(Variable vhpage_1825, ExprStmt target_12, ExprStmt target_15, VariableAccess target_4) {
	target_4.getTarget()=vhpage_1825
	and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageAnon")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getLocation())
	and target_4.getLocation().isBefore(target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_5(Variable vhpage_1825, NotExpr target_14, ExprStmt target_16, VariableAccess target_5) {
	target_5.getTarget()=vhpage_1825
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("put_page")
	and target_14.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getLocation())
	and target_5.getLocation().isBefore(target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_6(Variable vhpage_1825, ExprStmt target_15, ExprStmt target_8, VariableAccess target_6) {
	target_6.getTarget()=vhpage_1825
	and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("unlock_page")
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getLocation())
	and target_6.getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_7(Parameter vpage_1821, LogicalAndExpr target_9, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("get_hwpoison_page")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_1821
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_8(Variable vhpage_1825, LogicalAndExpr target_9, ExprStmt target_16, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("put_page")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_9(Parameter vpage_1821, Variable vhpage_1825, LogicalAndExpr target_9) {
	target_9.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageHuge")
	and target_9.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpage_1821
	and target_9.getRightOperand().(FunctionCall).getTarget().hasName("PageTransHuge")
	and target_9.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
}

predicate func_10(Variable vhpage_1825, LogicalOrExpr target_10) {
	target_10.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("PageAnon")
	and target_10.getLeftOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
	and target_10.getRightOperand().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_10.getRightOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("split_huge_page")
	and target_10.getRightOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
	and target_10.getRightOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_11(Variable vhpage_1825, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("lock_page")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
}

predicate func_12(Variable vhpage_1825, LogicalOrExpr target_10, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("unlock_page")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_13(Variable vhpage_1825, NotExpr target_13) {
	target_13.getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("split_huge_page")
	and target_13.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
}

predicate func_14(Variable vhpage_1825, ExprStmt target_17, NotExpr target_14) {
	target_14.getOperand().(FunctionCall).getTarget().hasName("PageAnon")
	and target_14.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
	and target_14.getParent().(IfStmt).getThen()=target_17
}

predicate func_15(Variable vhpage_1825, LogicalOrExpr target_10, ExprStmt target_15) {
	target_15.getExpr().(FunctionCall).getTarget().hasName("put_page")
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
	and target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_16(Variable vhpage_1825, LogicalAndExpr target_9, ExprStmt target_16) {
	target_16.getExpr().(FunctionCall).getTarget().hasName("unlock_page")
	and target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhpage_1825
	and target_16.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_17(Parameter vpage_1821, ExprStmt target_17) {
	target_17.getExpr().(FunctionCall).getTarget().hasName("printk")
	and target_17.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="6soft offline: %#lx: non anonymous thp\n"
	and target_17.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vpage_1821
	and target_17.getExpr().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
}

from Function func, Parameter vpage_1821, Variable vhpage_1825, VariableAccess target_0, VariableAccess target_1, VariableAccess target_2, VariableAccess target_3, VariableAccess target_4, VariableAccess target_5, VariableAccess target_6, ExprStmt target_7, ExprStmt target_8, LogicalAndExpr target_9, LogicalOrExpr target_10, ExprStmt target_11, ExprStmt target_12, NotExpr target_13, NotExpr target_14, ExprStmt target_15, ExprStmt target_16, ExprStmt target_17
where
func_0(vhpage_1825, target_9, target_10, target_0)
and func_1(vhpage_1825, target_11, target_1)
and func_2(vhpage_1825, target_12, target_2)
and func_3(vhpage_1825, target_13, target_14, target_3)
and func_4(vhpage_1825, target_12, target_15, target_4)
and func_5(vhpage_1825, target_14, target_16, target_5)
and func_6(vhpage_1825, target_15, target_8, target_6)
and func_7(vpage_1821, target_9, target_7)
and func_8(vhpage_1825, target_9, target_16, target_8)
and func_9(vpage_1821, vhpage_1825, target_9)
and func_10(vhpage_1825, target_10)
and func_11(vhpage_1825, target_11)
and func_12(vhpage_1825, target_10, target_12)
and func_13(vhpage_1825, target_13)
and func_14(vhpage_1825, target_17, target_14)
and func_15(vhpage_1825, target_10, target_15)
and func_16(vhpage_1825, target_9, target_16)
and func_17(vpage_1821, target_17)
and vpage_1821.getType().hasName("page *")
and vhpage_1825.getType().hasName("page *")
and vpage_1821.getFunction() = func
and vhpage_1825.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
