/**
 * @name linux-4b5db93e7f2afbdfe3b78e37879a85290187e6f1-llcp_sock_connect
 * @id cpp/linux/4b5db93e7f2afbdfe3b78e37879a85290187e6f1/llcp-sock-connect
 * @description linux-4b5db93e7f2afbdfe3b78e37879a85290187e6f1-net/nfc/llcp_sock.c-llcp_sock_connect CVE-2020-25673
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_652, Variable vret_657, ExprStmt target_1, EqualityOperation target_2, ExprStmt target_3, ExprStmt target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_652
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_657
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-115"
	and target_0.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="error"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("nfc_dev *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nfc_get_device")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev_idx"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sockaddr_nfc_llcp *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vsk_652, EqualityOperation target_2) {
	target_2.getLeftOperand().(ValueFieldAccess).getTarget().getName()="skc_state"
	and target_2.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_2.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_652
}

predicate func_3(Variable vsk_652, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("nfc_llcp_sock_link")
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="connecting_sockets"
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nfc_llcp_local *")
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsk_652
}

predicate func_4(Variable vret_657, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_657
	and target_4.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-106"
}

from Function func, Variable vsk_652, Variable vret_657, ExprStmt target_1, EqualityOperation target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vsk_652, vret_657, target_1, target_2, target_3, target_4, func)
and func_1(func, target_1)
and func_2(vsk_652, target_2)
and func_3(vsk_652, target_3)
and func_4(vret_657, target_4)
and vsk_652.getType().hasName("sock *")
and vret_657.getType().hasName("int")
and vsk_652.(LocalVariable).getFunction() = func
and vret_657.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
