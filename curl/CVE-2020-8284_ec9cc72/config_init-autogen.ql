/**
 * @name curl-ec9cc725d598ac-config_init
 * @id cpp/curl/ec9cc725d598ac/config-init
 * @description curl-ec9cc725d598ac-src/tool_cfgable.c-config_init CVE-2020-8284
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vconfig_29, ExprStmt target_1, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ftp_skip_ip"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconfig_29
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
		and (func.getEntryPoint().(BlockStmt).getStmt(13)=target_0 or func.getEntryPoint().(BlockStmt).getStmt(13).getFollowingStmt()=target_0)
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vconfig_29, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="http09_allowed"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconfig_29
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Parameter vconfig_29, ExprStmt target_1
where
not func_0(vconfig_29, target_1, func)
and func_1(vconfig_29, target_1)
and vconfig_29.getType().hasName("OperationConfig *")
and vconfig_29.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
