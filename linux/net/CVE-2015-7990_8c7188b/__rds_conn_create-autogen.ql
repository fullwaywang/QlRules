/**
 * @name linux-8c7188b23474cca017b3ef354c4a58456f68303a-__rds_conn_create
 * @id cpp/linux/8c7188b23474cca017b3ef354c4a58456f68303a/--rds-conn-create
 * @description linux-8c7188b23474cca017b3ef354c4a58456f68303a-net/rds/connection.c-__rds_conn_create CVE-2015-7990
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vconn_126, Variable vrds_conn_slab, FunctionCall target_0) {
	target_0.getTarget().hasName("kmem_cache_free")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vrds_conn_slab
	and target_0.getArgument(1).(VariableAccess).getTarget()=vconn_126
}

predicate func_1(Parameter vtrans_123, Variable vconn_126, Function func, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vtrans_123
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vconn_126
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-19"
	and target_1.getThen().(BlockStmt).getStmt(2).(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

/*predicate func_2(EqualityOperation target_5, Function func, ExprStmt target_2) {
	target_2.getExpr() instanceof FunctionCall
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_2.getEnclosingFunction() = func
}

*/
/*predicate func_3(Variable vconn_126, EqualityOperation target_5, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vconn_126
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ERR_PTR")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-19"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

*/
/*predicate func_4(EqualityOperation target_5, Function func, GotoStmt target_4) {
	target_4.getName() ="out"
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_4.getEnclosingFunction() = func
}

*/
predicate func_5(Parameter vtrans_123, EqualityOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vtrans_123
	and target_5.getRightOperand() instanceof Literal
}

from Function func, Parameter vtrans_123, Variable vconn_126, Variable vrds_conn_slab, FunctionCall target_0, IfStmt target_1, EqualityOperation target_5
where
func_0(vconn_126, vrds_conn_slab, target_0)
and func_1(vtrans_123, vconn_126, func, target_1)
and func_5(vtrans_123, target_5)
and vtrans_123.getType().hasName("rds_transport *")
and vconn_126.getType().hasName("rds_connection *")
and vrds_conn_slab.getType().hasName("kmem_cache *")
and vtrans_123.getFunction() = func
and vconn_126.(LocalVariable).getFunction() = func
and not vrds_conn_slab.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
