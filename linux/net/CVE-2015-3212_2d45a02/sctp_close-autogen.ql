/**
 * @name linux-2d45a02d0166caf2627fe91897c6ffc3b19514c4-sctp_close
 * @id cpp/linux/2d45a02d0166caf2627fe91897c6ffc3b19514c4/sctp-close
 * @description linux-2d45a02d0166caf2627fe91897c6ffc3b19514c4-net/sctp/socket.c-sctp_close CVE-2015-3212
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("local_bh_disable")
	and not target_0.getTarget().hasName("spin_lock_bh")
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("local_bh_enable")
	and not target_1.getTarget().hasName("spin_unlock_bh")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vnet_1475, ExprStmt target_4) {
exists(AddressOfExpr target_2 |
	target_2.getOperand().(ValueFieldAccess).getTarget().getName()="addr_wq_lock"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sctp"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_1475
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vnet_1475) {
exists(AddressOfExpr target_3 |
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="addr_wq_lock"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sctp"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_1475
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall)
}

predicate func_4(Variable vnet_1475, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("sctp_primitive_SHUTDOWN")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnet_1475
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sctp_association *")
	and target_4.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

from Function func, Variable vnet_1475, FunctionCall target_0, FunctionCall target_1, ExprStmt target_4
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(vnet_1475, target_4)
and not func_3(vnet_1475)
and func_4(vnet_1475, target_4)
and vnet_1475.getType().hasName("net *")
and vnet_1475.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
