/**
 * @name linux-00af2aa93b76b1bade471ad0d0525d4d29ca5cc0-smc_pnet_create_pnetids_list
 * @id cpp/linux/00af2aa93b76b1bade471ad0d0525d4d29ca5cc0/smc-pnet-create-pnetids-list
 * @description linux-00af2aa93b76b1bade471ad0d0525d4d29ca5cc0-net/smc/smc_pnet.c-smc_pnet_create_pnetids_list CVE-2024-35934
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnet_804, ExprStmt target_1, PointerFieldAccess target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("list_empty")
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_base_head"
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_804
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("rtnl_lock")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vnet_804, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="next"
	and target_2.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dev_base_head"
	and target_2.getQualifier().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnet_804
}

from Function func, Parameter vnet_804, ExprStmt target_1, PointerFieldAccess target_2
where
not func_0(vnet_804, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vnet_804, target_2)
and vnet_804.getType().hasName("net *")
and vnet_804.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
