/**
 * @name linux-d2d73e6d4822140445ad4a7b1c6091e0f5fe703b-pcs_set_mux
 * @id cpp/linux/d2d73e6d4822140445ad4a7b1c6091e0f5fe703b/pcs-set-mux
 * @description linux-d2d73e6d4822140445ad4a7b1c6091e0f5fe703b-drivers/pinctrl/pinctrl-single.c-pcs_set_mux CVE-2022-48708
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfunction_366, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vfunction_366
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vfunction_366, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("pcs_function *")
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="data"
	and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfunction_366
}

predicate func_2(Variable vfunction_366, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfunction_366
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pinmux_generic_get_function")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("pinctrl_dev *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vfunction_366, ExprStmt target_1, ExprStmt target_2
where
not func_0(vfunction_366, target_1, target_2, func)
and func_1(vfunction_366, target_1)
and func_2(vfunction_366, target_2)
and vfunction_366.getType().hasName("function_desc *")
and vfunction_366.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
