/**
 * @name memcached-0f605245cf3f37c2efe4e225237ad17256ea2a34-process_bin_delete
 * @id cpp/memcached/0f605245cf3f37c2efe4e225237ad17256ea2a34/process-bin-delete
 * @description memcached-0f605245cf3f37c2efe4e225237ad17256ea2a34-memcached.c-process_bin_delete CVE-2013-0179
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, StringLiteral target_0) {
		target_0.getValue()="Deleting %s\n"
		and not target_0.getValue()="Deleting "
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vkey_2187, Variable vnkey_2188, Variable vstderr, RelationalOperation target_4, ExprStmt target_6, ExprStmt target_8) {
	exists(ForStmt target_1 |
		target_1.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_1.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("int")
		and target_1.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vnkey_2188
		and target_1.getUpdate().(PrefixIncrExpr).getOperand().(VariableAccess).getType().hasName("int")
		and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fprintf")
		and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vstderr
		and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="%c"
		and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vkey_2187
		and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(ArrayExpr).getArrayOffset().(VariableAccess).getType().hasName("int")
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vstderr, RelationalOperation target_4) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("fprintf")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vstderr
		and target_2.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="\n"
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4)
}

predicate func_3(Variable vkey_2187, Variable vstderr, VariableAccess target_3) {
		target_3.getTarget()=vkey_2187
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fprintf")
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vstderr
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
}

predicate func_4(RelationalOperation target_4) {
		 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
		and target_4.getGreaterOperand().(ValueFieldAccess).getTarget().getName()="verbose"
		and target_4.getGreaterOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("settings")
		and target_4.getLesserOperand().(Literal).getValue()="1"
}

predicate func_6(Variable vkey_2187, Variable vnkey_2188, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("stats_prefix_record_delete")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_2187
		and target_6.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnkey_2188
}

predicate func_8(Variable vkey_2187, Variable vstderr, ExprStmt target_8) {
		target_8.getExpr().(FunctionCall).getTarget().hasName("fprintf")
		and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vstderr
		and target_8.getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
		and target_8.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vkey_2187
}

from Function func, Variable vkey_2187, Variable vnkey_2188, Variable vstderr, StringLiteral target_0, VariableAccess target_3, RelationalOperation target_4, ExprStmt target_6, ExprStmt target_8
where
func_0(func, target_0)
and not func_1(vkey_2187, vnkey_2188, vstderr, target_4, target_6, target_8)
and not func_2(vstderr, target_4)
and func_3(vkey_2187, vstderr, target_3)
and func_4(target_4)
and func_6(vkey_2187, vnkey_2188, target_6)
and func_8(vkey_2187, vstderr, target_8)
and vkey_2187.getType().hasName("char *")
and vnkey_2188.getType().hasName("size_t")
and vstderr.getType().hasName("FILE *")
and vkey_2187.(LocalVariable).getFunction() = func
and vnkey_2188.(LocalVariable).getFunction() = func
and not vstderr.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
