/**
 * @name chromium-bb8e17b942b8b1de0a58b2dce34197e00a3b6525-extensions__WebViewFindHelper__DispatchFindUpdateEvent
 * @id cpp/chromium/bb8e17b942b8b1de0a58b2dce34197e00a3b6525/extensionswebviewfindhelperdispatchfindupdateevent
 * @description chromium-bb8e17b942b8b1de0a58b2dce34197e00a3b6525-extensions/browser/guest_view/web_view/web_view_find_helper.cc-extensions__WebViewFindHelper__DispatchFindUpdateEvent CVE-2023-2930
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("DCheck")
	and not target_0.getTarget().hasName("Check")
	and target_0.getArgument(0).(StringLiteral).getValue()="webview_guest_"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("DCheck")
	and not target_1.getTarget().hasName("Check")
	and target_1.getArgument(0).(StringLiteral).getValue()="find_update_event_.get()"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func) {
exists(FunctionCall target_2 |
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getQualifier() |
		obj_0.getTarget().getName()="find_update_event_"
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	)
	and target_2.getTarget().hasName("operator bool")
	and target_2.getEnclosingFunction() = func
)
}

predicate func_4(Function func, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="find_update_event_"
	and target_4.getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, FunctionCall target_5) {
	exists(PointerFieldAccess obj_0 | obj_0=target_5.getQualifier() |
		obj_0.getTarget().getName()="find_update_event_"
		and obj_0.getQualifier().(ThisExpr).getType() instanceof PointerType
	)
	and target_5.getTarget().hasName("get")
	and target_5.getEnclosingFunction() = func
}

from Function func, FunctionCall target_0, FunctionCall target_1, PointerFieldAccess target_4, FunctionCall target_5
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(func)
and func_4(func, target_4)
and func_5(func, target_5)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
