/**
 * @name linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fuse_lookup
 * @id cpp/linux/5d069dbe8aaf2a197142558b6fb2978189ba3454/fuse-lookup
 * @description linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fuse_lookup CVE-2020-36322
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdir_455, ExprStmt target_1, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("fuse_is_bad")
		and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_455
		and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("ERR_PTR")
		and target_0.getThen().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(UnaryMinusExpr).getValue()="-5"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vdir_455, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("bool")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("fuse_lock_inode")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_455
}

from Function func, Parameter vdir_455, ExprStmt target_1
where
not func_0(vdir_455, target_1, func)
and func_1(vdir_455, target_1)
and vdir_455.getType().hasName("inode *")
and vdir_455.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
