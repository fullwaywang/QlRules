/**
 * @name linux-e99502f76271d6bc4e374fe368c50c67a1fd3070-xen_irq_init
 * @id cpp/linux/e99502f76271d6bc4e374fe368c50c67a1fd3070/xen-irq-init
 * @description linux-e99502f76271d6bc4e374fe368c50c67a1fd3070-xen_irq_init CVE-2020-27673
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="48"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vinfo_431, ExprStmt target_2, AddressOfExpr target_3, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="eoi_list"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_431
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vinfo_431, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("set_info_for_irq")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinfo_431
}

predicate func_3(Variable vinfo_431, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="list"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinfo_431
}

from Function func, Variable vinfo_431, SizeofExprOperator target_0, ExprStmt target_2, AddressOfExpr target_3
where
func_0(func, target_0)
and not func_1(vinfo_431, target_2, target_3, func)
and func_2(vinfo_431, target_2)
and func_3(vinfo_431, target_3)
and vinfo_431.getType().hasName("irq_info *")
and vinfo_431.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
