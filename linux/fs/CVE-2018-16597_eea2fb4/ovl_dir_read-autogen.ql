/**
 * @name linux-eea2fb4851e9dcbab6b991aaf47e2e024f1f55a0-ovl_dir_read
 * @id cpp/linux/eea2fb4851e9dcbab6b991aaf47e2e024f1f55a0/ovl-dir-read
 * @description linux-eea2fb4851e9dcbab6b991aaf47e2e024f1f55a0-fs/overlayfs/readdir.c-ovl_dir_read CVE-2018-16597
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrdd_232, ExprStmt target_2, ExprStmt target_3, LogicalAndExpr target_1) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand() instanceof LogicalAndExpr
		and target_0.getAnOperand().(PointerFieldAccess).getTarget().getName()="dentry"
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrdd_232
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vrdd_232, Variable verr_235, ExprStmt target_2, LogicalAndExpr target_1) {
		target_1.getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_235
		and target_1.getAnOperand().(PointerFieldAccess).getTarget().getName()="first_maybe_whiteout"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrdd_232
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Parameter vrdd_232, Variable verr_235, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_235
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ovl_check_whiteouts")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dentry"
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("path *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrdd_232
}

predicate func_3(Parameter vrdd_232, Variable verr_235, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_235
		and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="err"
		and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrdd_232
}

from Function func, Parameter vrdd_232, Variable verr_235, LogicalAndExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vrdd_232, target_2, target_3, target_1)
and func_1(vrdd_232, verr_235, target_2, target_1)
and func_2(vrdd_232, verr_235, target_2)
and func_3(vrdd_232, verr_235, target_3)
and vrdd_232.getType().hasName("ovl_readdir_data *")
and verr_235.getType().hasName("int")
and vrdd_232.getFunction() = func
and verr_235.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
