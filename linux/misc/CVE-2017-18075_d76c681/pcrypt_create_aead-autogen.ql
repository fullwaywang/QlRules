/**
 * @name linux-d76c68109f37cb85b243a1cf0f40313afd2bae68-pcrypt_create_aead
 * @id cpp/linux/d76c68109f37cb85b243a1cf0f40313afd2bae68/pcrypt-create-aead
 * @description linux-d76c68109f37cb85b243a1cf0f40313afd2bae68-crypto/pcrypt.c-pcrypt_create_aead CVE-2017-18075
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinst_278, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="free"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinst_278
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vinst_278, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("aead_register_instance")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("crypto_template *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinst_278
}

predicate func_2(Variable vinst_278, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="decrypt"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="alg"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinst_278
}

from Function func, Variable vinst_278, ExprStmt target_1, ExprStmt target_2
where
not func_0(vinst_278, target_1, target_2, func)
and func_1(vinst_278, target_1)
and func_2(vinst_278, target_2)
and vinst_278.getType().hasName("aead_instance *")
and vinst_278.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
