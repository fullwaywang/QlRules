/**
 * @name linux-9ad46f1fef421d43cdab3a7d1744b2f43b54dae0-event_sched_out
 * @id cpp/linux/9ad46f1fef421d43cdab3a7d1744b2f43b54dae0/event-sched-out
 * @description linux-9ad46f1fef421d43cdab3a7d1744b2f43b54dae0-kernel/events/core.c-event_sched_out CVE-2024-43869
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalAndExpr target_11, Function func, ExprStmt target_0) {
	exists(StmtExpr obj_0 | obj_0=target_0.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(IfStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getCondition() |
					obj_3.getTarget().hasName("__builtin_expect")
					and obj_3.getArgument(1) instanceof Literal
				)
				and obj_2.getThen().(DoStmt).getCondition() instanceof Literal
			)
			and exists(ExprStmt obj_4 | obj_4=obj_1.getStmt(2) |
				exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
					obj_5.getTarget().hasName("__builtin_expect")
					and obj_5.getArgument(1) instanceof Literal
				)
			)
		)
	)
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
	and target_0.getEnclosingFunction() = func
}

/*predicate func_2(Variable v__ret_warn_on_2402, Variable v__flags_2402, IfStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getCondition() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_2402
		and obj_0.getArgument(1) instanceof Literal
	)
	and exists(DoStmt obj_1 | obj_1=target_2.getThen() |
		exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
			exists(DoStmt obj_3 | obj_3=obj_2.getStmt(2) |
				exists(BlockStmt obj_4 | obj_4=obj_3.getStmt() |
					exists(AsmStmt obj_5 | obj_5=obj_4.getStmt(0) |
						exists(SizeofTypeOperator obj_6 | obj_6=obj_5.getChild(3) |
							obj_6.getType() instanceof LongType
							and obj_6.getValue()="12"
						)
						and obj_5.getChild(0) instanceof StringLiteral
						and obj_5.getChild(1) instanceof Literal
						and obj_5.getChild(2).(VariableAccess).getTarget()=v__flags_2402
					)
				)
				and obj_3.getCondition() instanceof Literal
			)
		)
		and obj_1.getCondition() instanceof Literal
	)
}

*/
/*predicate func_4(Function func, ExprStmt target_4) {
	target_4.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1149"
	and target_4.getEnclosingFunction() = func
}

*/
/*predicate func_5(Function func, AsmStmt target_5) {
	target_5.getChild(0).(Literal).getValue()="1149"
	and target_5.getEnclosingFunction() = func
}

*/
/*predicate func_6(Variable v__flags_2402, DoStmt target_6) {
	exists(BlockStmt obj_0 | obj_0=target_6.getStmt() |
		exists(AsmStmt obj_1 | obj_1=obj_0.getStmt(0) |
			exists(SizeofTypeOperator obj_2 | obj_2=obj_1.getChild(3) |
				obj_2.getType() instanceof LongType
				and obj_2.getValue()="12"
			)
			and obj_1.getChild(0) instanceof StringLiteral
			and obj_1.getChild(1) instanceof Literal
			and obj_1.getChild(2).(VariableAccess).getTarget()=v__flags_2402
		)
	)
	and target_6.getCondition() instanceof Literal
}

*/
/*predicate func_7(Variable v__flags_2402, AsmStmt target_7) {
	exists(SizeofTypeOperator obj_0 | obj_0=target_7.getChild(3) |
		obj_0.getType() instanceof LongType
		and obj_0.getValue()="12"
	)
	and target_7.getChild(0) instanceof StringLiteral
	and target_7.getChild(1) instanceof Literal
	and target_7.getChild(2).(VariableAccess).getTarget()=v__flags_2402
}

*/
/*predicate func_8(Function func, ExprStmt target_8) {
	target_8.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1150"
	and target_8.getEnclosingFunction() = func
}

*/
/*predicate func_9(Function func, AsmStmt target_9) {
	target_9.getChild(0).(Literal).getValue()="1150"
	and target_9.getEnclosingFunction() = func
}

*/
/*predicate func_10(Variable v__ret_warn_on_2402, ExprStmt target_10) {
	exists(FunctionCall obj_0 | obj_0=target_10.getExpr() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_2402
		and obj_0.getArgument(1) instanceof Literal
	)
}

*/
predicate func_11(Function func, LogicalAndExpr target_11) {
	exists(LogicalAndExpr obj_0 | obj_0=target_11.getLeftOperand() |
		exists(NotExpr obj_1 | obj_1=obj_0.getRightOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="pending_work"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("perf_event *")
			)
		)
		and obj_0.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("perf_event_state")
	)
	and exists(NotExpr obj_3 | obj_3=target_11.getRightOperand() |
		exists(FunctionCall obj_4 | obj_4=obj_3.getOperand() |
			exists(AddressOfExpr obj_5 | obj_5=obj_4.getArgument(1) |
				exists(PointerFieldAccess obj_6 | obj_6=obj_5.getOperand() |
					obj_6.getTarget().getName()="pending_task"
					and obj_6.getQualifier().(VariableAccess).getTarget().getType().hasName("perf_event *")
				)
			)
			and obj_4.getTarget().hasName("task_work_add")
			and obj_4.getArgument(0).(FunctionCall).getTarget().hasName("get_current")
		)
	)
	and target_11.getEnclosingFunction() = func
}

from Function func, Variable v__ret_warn_on_2402, Variable v__flags_2402, ExprStmt target_0, LogicalAndExpr target_11
where
func_0(target_11, func, target_0)
and func_11(func, target_11)
and v__ret_warn_on_2402.getType().hasName("int")
and v__flags_2402.getType().hasName("int")
and v__ret_warn_on_2402.(LocalVariable).getFunction() = func
and v__flags_2402.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
