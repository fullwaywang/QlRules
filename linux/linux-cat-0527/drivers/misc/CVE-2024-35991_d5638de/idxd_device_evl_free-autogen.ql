/**
 * @name linux-d5638de827cff0fce77007e426ec0ffdedf68a44-idxd_device_evl_free
 * @id cpp/linux/d5638de827cff0fce77007e426ec0ffdedf68a44/idxd-device-evl-free
 * @description linux-d5638de827cff0fce77007e426ec0ffdedf68a44-drivers/dma/idxd/device.c-idxd_device_evl_free CVE-2024-35991
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vevl_816, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_lock")
	and not target_0.getTarget().hasName("mutex_lock_nested")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevl_816
}

predicate func_1(Variable vevl_816, FunctionCall target_1) {
	target_1.getTarget().hasName("spin_unlock")
	and not target_1.getTarget().hasName("mutex_unlock")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevl_816
}

from Function func, Variable vevl_816, FunctionCall target_0, FunctionCall target_1
where
func_0(vevl_816, target_0)
and func_1(vevl_816, target_1)
and vevl_816.getType().hasName("idxd_evl *")
and vevl_816.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
