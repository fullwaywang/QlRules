/**
 * @name linux-f5c779b7ddbda30866cf2a27c63e34158f858c73-ksmbd_tcp_readv
 * @id cpp/linux/f5c779b7ddbda30866cf2a27c63e34158f858c73/ksmbd-tcp-readv
 * @description linux-f5c779b7ddbda30866cf2a27c63e34158f858c73-fs/ksmbd/transport_tcp.c-ksmbd_tcp_readv CVE-2023-32257
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vconn_312, BlockStmt target_3) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("ksmbd_conn_need_reconnect")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vconn_312
	and target_0.getParent().(IfStmt).getThen()=target_3)
}

predicate func_1(Variable vconn_312, VariableAccess target_1) {
	target_1.getTarget()=vconn_312
}

predicate func_2(Variable vconn_312, BlockStmt target_3, EqualityOperation target_2) {
	target_2.getLeftOperand().(PointerFieldAccess).getTarget().getName()="status"
	and target_2.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_312
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Function func, BlockStmt target_3) {
	target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-11"
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vconn_312, VariableAccess target_1, EqualityOperation target_2, BlockStmt target_3
where
not func_0(vconn_312, target_3)
and func_1(vconn_312, target_1)
and func_2(vconn_312, target_3, target_2)
and func_3(func, target_3)
and vconn_312.getType().hasName("ksmbd_conn *")
and vconn_312.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
