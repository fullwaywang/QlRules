/**
 * @name linux-04d80663f67ccef893061b49ec8a42ff7045ae84-mwifiex_usb_recv
 * @id cpp/linux/04d80663f67ccef893061b49ec8a42ff7045ae84/mwifiex-usb-recv
 * @description linux-04d80663f67ccef893061b49ec8a42ff7045ae84-drivers/net/wireless/marvell/mwifiex/usb.c-mwifiex_usb_recv CVE-2021-43976
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_63, VariableAccess target_4, ExprStmt target_5, ReturnStmt target_6) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_63
	and target_0.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_4
	and target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_6.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(VariableAccess target_4, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="exit_restore_skb"
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_4
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, UnaryMinusExpr target_2) {
	target_2.getValue()="-1"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(VariableAccess target_4, Function func, ReturnStmt target_3) {
	target_3.getExpr() instanceof UnaryMinusExpr
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_4
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vrecv_type_61, VariableAccess target_4) {
	target_4.getTarget()=vrecv_type_61
}

predicate func_5(Variable vret_63, RelationalOperation target_7, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_63
	and target_5.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_6(Variable vret_63, ReturnStmt target_6) {
	target_6.getExpr().(VariableAccess).getTarget()=vret_63
}

predicate func_7(BlockStmt target_8, Function func, RelationalOperation target_7) {
	 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
	and target_7.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_7.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_7.getLesserOperand().(Literal).getValue()="2048"
	and target_7.getParent().(IfStmt).getThen()=target_8
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vret_63, BlockStmt target_8) {
	target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_mwifiex_dbg")
	and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("mwifiex_adapter *")
	and target_8.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="EVENT: event body too large\n"
	and target_8.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_63
	and target_8.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
}

from Function func, Variable vrecv_type_61, Variable vret_63, UnaryMinusExpr target_2, ReturnStmt target_3, VariableAccess target_4, ExprStmt target_5, ReturnStmt target_6, RelationalOperation target_7, BlockStmt target_8
where
not func_0(vret_63, target_4, target_5, target_6)
and not func_1(target_4, func)
and func_2(func, target_2)
and func_3(target_4, func, target_3)
and func_4(vrecv_type_61, target_4)
and func_5(vret_63, target_7, target_5)
and func_6(vret_63, target_6)
and func_7(target_8, func, target_7)
and func_8(vret_63, target_8)
and vrecv_type_61.getType().hasName("u32")
and vret_63.getType().hasName("int")
and vrecv_type_61.(LocalVariable).getFunction() = func
and vret_63.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
