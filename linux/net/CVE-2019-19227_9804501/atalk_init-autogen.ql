/**
 * @name linux-9804501fa1228048857910a6bf23e085aade37cc-atalk_init
 * @id cpp/linux/9804501fa1228048857910a6bf23e085aade37cc/atalk-init
 * @description linux-9804501fa1228048857910a6bf23e085aade37cc-net/appletalk/ddp.c-atalk_init CVE-2019-19227
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(NotExpr target_6, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="out_sock"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable vrc_1913, IfStmt target_7) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getTarget()=vrc_1913
	and target_2.getRValue().(FunctionCall).getTarget().hasName("aarp_proto_init")
	and target_7.getCondition().(VariableAccess).getLocation().isBefore(target_2.getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Variable vrc_1913, ExprStmt target_8, Function func) {
exists(IfStmt target_3 |
	target_3.getCondition().(VariableAccess).getTarget()=vrc_1913
	and target_3.getThen().(GotoStmt).getName() ="out_dev"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_8.getLocation()))
}

predicate func_4(Variable vatalk_err_snap, VariableAccess target_4) {
	target_4.getTarget()=vatalk_err_snap
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
}

predicate func_5(Function func, FunctionCall target_5) {
	target_5.getTarget().hasName("aarp_proto_init")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, NotExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget().getType().hasName("datalink_proto *")
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vrc_1913, IfStmt target_7) {
	target_7.getCondition().(VariableAccess).getTarget()=vrc_1913
	and target_7.getThen().(GotoStmt).getName() ="out_sock"
}

predicate func_8(Variable vrc_1913, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1913
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("atalk_proc_init")
}

from Function func, Variable vatalk_err_snap, Variable vrc_1913, VariableAccess target_4, FunctionCall target_5, NotExpr target_6, IfStmt target_7, ExprStmt target_8
where
not func_1(target_6, func)
and not func_2(vrc_1913, target_7)
and not func_3(vrc_1913, target_8, func)
and func_4(vatalk_err_snap, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
and func_7(vrc_1913, target_7)
and func_8(vrc_1913, target_8)
and vatalk_err_snap.getType() instanceof ArrayType
and vrc_1913.getType().hasName("int")
and not vatalk_err_snap.getParentScope+() = func
and vrc_1913.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
