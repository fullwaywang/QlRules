/**
 * @name linux-c88e739b1fad662240e99ecbd0bdaac871717987-__media_device_enum_links
 * @id cpp/linux/c88e739b1fad662240e99ecbd0bdaac871717987/--media-device-enum-links
 * @description linux-c88e739b1fad662240e99ecbd0bdaac871717987-drivers/media/media-device.c-__media_device_enum_links CVE-2014-9895
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpad_144, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vpad_144
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="20"
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(Variable vlink_156, ExprStmt target_4) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vlink_156
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="52"
	and target_1.getLocation().isBefore(target_4.getLocation()))
}

predicate func_2(Variable vpad_144, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("media_device_kpad_to_upad")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="pads"
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("media_entity *")
	and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vpad_144
}

predicate func_4(Variable vlink_156, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("media_device_kpad_to_upad")
	and target_4.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="source"
	and target_4.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="links"
	and target_4.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("media_entity *")
	and target_4.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_4.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="source"
	and target_4.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vlink_156
}

from Function func, Variable vpad_144, Variable vlink_156, ExprStmt target_2, ExprStmt target_4
where
not func_0(vpad_144, target_2)
and not func_1(vlink_156, target_4)
and func_2(vpad_144, target_2)
and func_4(vlink_156, target_4)
and vpad_144.getType().hasName("media_pad_desc")
and vlink_156.getType().hasName("media_link_desc")
and vpad_144.(LocalVariable).getFunction() = func
and vlink_156.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
