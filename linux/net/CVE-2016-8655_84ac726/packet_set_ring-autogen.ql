/**
 * @name linux-84ac7260236a49c79eede91617700174c2c19b0c-packet_set_ring
 * @id cpp/linux/84ac7260236a49c79eede91617700174c2c19b0c/packet-set-ring
 * @description linux-84ac7260236a49c79eede91617700174c2c19b0c-net/packet/af_packet.c-packet_set_ring CVE-2016-8655
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_4154, IfStmt target_2, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_4154
	and target_2.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Parameter vsk_4154, IfStmt target_3, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("release_sock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_4154
	and target_1.getLocation().isBefore(target_3.getLocation())
}

predicate func_2(Function func, IfStmt target_2) {
	target_2.getCondition().(PointerFieldAccess).getTarget().getName()="tp_block_nr"
	and target_2.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tpacket_req *")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-16"
	and target_2.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="pg_vec"
	and target_2.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="out"
	and target_2.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
	and target_2.getElse().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getElse().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tp_frame_nr"
	and target_2.getElse().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getElse().(BlockStmt).getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="out"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget().getType().hasName("pgv *")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("free_pg_vec")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("pgv *")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="tp_block_nr"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tpacket_req *")
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vsk_4154, ExprStmt target_0, ExprStmt target_1, IfStmt target_2, IfStmt target_3
where
func_0(vsk_4154, target_2, target_0)
and func_1(vsk_4154, target_3, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and vsk_4154.getType().hasName("sock *")
and vsk_4154.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
