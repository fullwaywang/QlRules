/**
 * @name linux-29eb31542787e1019208a2e1047bb7c76c069536-yam_siocdevprivate
 * @id cpp/linux/29eb31542787e1019208a2e1047bb7c76c069536/yam-siocdevprivate
 * @description linux-29eb31542787e1019208a2e1047bb7c76c069536-yam_siocdevprivate CVE-2022-24959
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ReturnStmt target_4, Function func) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand() instanceof EqualityOperation
		and target_0.getAnOperand() instanceof RelationalOperation
		and target_0.getParent().(IfStmt).getThen()=target_4
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vym_927, ReturnStmt target_4, EqualityOperation target_1) {
		target_1.getAnOperand().(PointerFieldAccess).getTarget().getName()="cmd"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vym_927
		and target_1.getAnOperand().(Literal).getValue()="3"
		and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vym_927, BlockStmt target_5, RelationalOperation target_2) {
		 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
		and target_2.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="bitrate"
		and target_2.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vym_927
		and target_2.getLesserOperand().(Literal).getValue()="57600"
		and target_2.getParent().(IfStmt).getThen()=target_5
}

predicate func_3(Variable vym_927, VariableAccess target_6, IfStmt target_3) {
		target_3.getCondition() instanceof RelationalOperation
		and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vym_927
		and target_3.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_6
}

predicate func_4(EqualityOperation target_1, Function func, ReturnStmt target_4) {
		target_4.getExpr().(UnaryMinusExpr).getValue()="-22"
		and target_4.getParent().(IfStmt).getCondition()=target_1
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vym_927, BlockStmt target_5) {
		target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_5.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vym_927
		and target_5.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
}

predicate func_6(Variable vioctl_cmd_928, VariableAccess target_6) {
		target_6.getTarget()=vioctl_cmd_928
}

from Function func, Variable vym_927, Variable vioctl_cmd_928, EqualityOperation target_1, RelationalOperation target_2, IfStmt target_3, ReturnStmt target_4, BlockStmt target_5, VariableAccess target_6
where
not func_0(target_4, func)
and func_1(vym_927, target_4, target_1)
and func_2(vym_927, target_5, target_2)
and func_3(vym_927, target_6, target_3)
and func_4(target_1, func, target_4)
and func_5(vym_927, target_5)
and func_6(vioctl_cmd_928, target_6)
and vym_927.getType().hasName("yamdrv_ioctl_mcs *")
and vioctl_cmd_928.getType().hasName("int")
and vym_927.(LocalVariable).getFunction() = func
and vioctl_cmd_928.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
