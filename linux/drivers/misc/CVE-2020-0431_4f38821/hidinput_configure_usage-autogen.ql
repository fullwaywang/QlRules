/**
 * @name linux-4f3882177240a1f55e45a3d241d3121341bead78-hidinput_configure_usage
 * @id cpp/linux/4f3882177240a1f55e45a3d241d3121341bead78/hidinput-configure-usage
 * @description linux-4f3882177240a1f55e45a3d241d3121341bead78-drivers/hid/hid-input.c-hidinput_configure_usage CVE-2020-0431
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vusage_560, EqualityOperation target_6, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="type"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vusage_560
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Function func, ReturnStmt target_4) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(LogicalAndExpr target_7, Function func, GotoStmt target_5) {
		target_5.getParent().(IfStmt).getCondition()=target_7
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Parameter vusage_560, EqualityOperation target_6) {
		target_6.getAnOperand().(PointerFieldAccess).getTarget().getName()="type"
		and target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vusage_560
		and target_6.getAnOperand().(Literal).getValue()="1"
}

predicate func_7(Parameter vusage_560, LogicalAndExpr target_7) {
		target_7.getAnOperand().(PointerFieldAccess).getTarget().getName()="input_mapped"
		and target_7.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_7.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hid_device *")
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="input_mapped"
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hid_device *")
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("hid_device *")
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("hid_input *")
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("hid_field *")
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(3).(VariableAccess).getTarget()=vusage_560
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long *")
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableCall).getArgument(5).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_7.getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
}

from Function func, Parameter vusage_560, ReturnStmt target_4, GotoStmt target_5, EqualityOperation target_6, LogicalAndExpr target_7
where
not func_1(vusage_560, target_6, func)
and func_4(func, target_4)
and func_5(target_7, func, target_5)
and func_6(vusage_560, target_6)
and func_7(vusage_560, target_7)
and vusage_560.getType().hasName("hid_usage *")
and vusage_560.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
