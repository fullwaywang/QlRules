/**
 * @name linux-b27c4577557045f1ab3cdfeabfc7f3cd24aca1fe-fc_rport_prli_resp
 * @id cpp/linux/b27c4577557045f1ab3cdfeabfc7f3cd24aca1fe/fc-rport-prli-resp
 * @description linux-b27c4577557045f1ab3cdfeabfc7f3cd24aca1fe-drivers/scsi/libfc/fc_rport.c-fc_rport_prli_resp CVE-2021-47308
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrdata_1118, EqualityOperation target_3, ExprStmt target_4, ExprStmt target_1) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="spp_type"
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrdata_1118
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(AddExpr).getValue()="9"
	and target_0.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_0.getThen().(BlockStmt).getStmt(1) instanceof IfStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(10)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_4.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vrdata_1118, Variable vprov_1125, Variable vfc_passive_prov, EqualityOperation target_3, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vprov_1125
	and target_1.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vfc_passive_prov
	and target_1.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="spp_type"
	and target_1.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrdata_1118
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_2(Variable vrdata_1118, Variable vpp_1122, Variable vtemp_spp_1123, Variable vprov_1125, EqualityOperation target_3, IfStmt target_2) {
	target_2.getCondition().(VariableAccess).getTarget()=vprov_1125
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtemp_spp_1123
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="16"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="prli"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vprov_1125
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vrdata_1118
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="prli_spp_len"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="prli"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpp_1122
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="spp"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getArgument(2).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpp_1122
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtemp_spp_1123
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, EqualityOperation target_3) {
	target_3.getLeftOperand().(VariableAccess).getTarget().getType().hasName("u8")
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vrdata_1118, ExprStmt target_4) {
	target_4.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="flags"
	and target_4.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrdata_1118
	and target_4.getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="8"
}

from Function func, Variable vrdata_1118, Variable vpp_1122, Variable vtemp_spp_1123, Variable vprov_1125, Variable vfc_passive_prov, ExprStmt target_1, IfStmt target_2, EqualityOperation target_3, ExprStmt target_4
where
not func_0(vrdata_1118, target_3, target_4, target_1)
and func_1(vrdata_1118, vprov_1125, vfc_passive_prov, target_3, target_1)
and func_2(vrdata_1118, vpp_1122, vtemp_spp_1123, vprov_1125, target_3, target_2)
and func_3(func, target_3)
and func_4(vrdata_1118, target_4)
and vrdata_1118.getType().hasName("fc_rport_priv *")
and vpp_1122.getType().hasName("struct <unnamed> *")
and vtemp_spp_1123.getType().hasName("fc_els_spp")
and vprov_1125.getType().hasName("fc4_prov *")
and vfc_passive_prov.getType() instanceof ArrayType
and vrdata_1118.(LocalVariable).getFunction() = func
and vpp_1122.(LocalVariable).getFunction() = func
and vtemp_spp_1123.(LocalVariable).getFunction() = func
and vprov_1125.(LocalVariable).getFunction() = func
and not vfc_passive_prov.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
