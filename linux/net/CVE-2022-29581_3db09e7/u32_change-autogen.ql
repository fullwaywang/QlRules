/**
 * @name linux-3db09e762dc79584a69c10d74a6b98f89a9979f8-u32_change
 * @id cpp/linux/3db09e762dc79584a69c10d74a6b98f89a9979f8/u32-change
 * @description linux-3db09e762dc79584a69c10d74a6b98f89a9979f8-net/sched/cls_u32.c-u32_change CVE-2022-29581
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnew_881, ExprStmt target_6) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("__u32_destroy_key")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vnew_881
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vnew_881, NotExpr target_7) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("__u32_destroy_key")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vnew_881
	and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vnew_881, VariableAccess target_2) {
	target_2.getTarget()=vnew_881
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_3(Variable vnew_881, VariableAccess target_3) {
	target_3.getTarget()=vnew_881
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_4(Variable vnew_881, ExprStmt target_6, FunctionCall target_4) {
	target_4.getTarget().hasName("u32_destroy_key")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vnew_881
	and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_5(Variable vnew_881, NotExpr target_7, FunctionCall target_5) {
	target_5.getTarget().hasName("u32_destroy_key")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vnew_881
	and target_5.getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_6(Variable vnew_881, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("u32_replace_hw_knode")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("tcf_proto *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vnew_881
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u32")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("netlink_ext_ack *")
}

predicate func_7(Variable vnew_881, NotExpr target_7) {
	target_7.getOperand().(FunctionCall).getTarget().hasName("tc_in_hw")
	and target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="flags"
	and target_7.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_881
}

from Function func, Variable vnew_881, VariableAccess target_2, VariableAccess target_3, FunctionCall target_4, FunctionCall target_5, ExprStmt target_6, NotExpr target_7
where
not func_0(vnew_881, target_6)
and not func_1(vnew_881, target_7)
and func_2(vnew_881, target_2)
and func_3(vnew_881, target_3)
and func_4(vnew_881, target_6, target_4)
and func_5(vnew_881, target_7, target_5)
and func_6(vnew_881, target_6)
and func_7(vnew_881, target_7)
and vnew_881.getType().hasName("tc_u_knode *")
and vnew_881.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
