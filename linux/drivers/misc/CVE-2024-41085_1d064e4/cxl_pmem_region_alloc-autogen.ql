/**
 * @name linux-1d064e4fbebcf5b18dc10c1f3973487eb163b600-cxl_pmem_region_alloc
 * @id cpp/linux/1d064e4fbebcf5b18dc10c1f3973487eb163b600/cxl-pmem-region-alloc
 * @description linux-1d064e4fbebcf5b18dc10c1f3973487eb163b600-drivers/cxl/core/region.c-cxl_pmem_region_alloc CVE-2024-41085
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcxlmd_2707, ExprStmt target_2) {
exists(PointerFieldAccess target_0 |
	exists(VariableAccess obj_0 | obj_0=target_0.getQualifier() |
		obj_0.getTarget()=vcxlmd_2707
		and obj_0.getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
	)
	and target_0.getTarget().getName()="endpoint"
)
}

predicate func_1(Variable vcxlmd_2707, VariableAccess target_1) {
	target_1.getTarget()=vcxlmd_2707
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("cxl_find_nvdimm_bridge")
}

predicate func_2(Variable vcxlmd_2707, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="cxlmd"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("cxl_pmem_region_mapping *")
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vcxlmd_2707
	)
}

from Function func, Variable vcxlmd_2707, VariableAccess target_1, ExprStmt target_2
where
not func_0(vcxlmd_2707, target_2)
and func_1(vcxlmd_2707, target_1)
and func_2(vcxlmd_2707, target_2)
and vcxlmd_2707.getType().hasName("cxl_memdev *")
and vcxlmd_2707.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
