/**
 * @name linux-76ec0e33707282d5321555698d902f4e067aff37-xe_devcoredump_read
 * @id cpp/linux/76ec0e33707282d5321555698d902f4e067aff37/xe-devcoredump-read
 * @description linux-76ec0e33707282d5321555698d902f4e067aff37-drivers/gpu/drm/xe/xe_devcoredump.c-xe_devcoredump_read CVE-2024-42081
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vxe_77, ExprStmt target_9, ExprStmt target_11, Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vxe_77
		and obj_0.getRValue() instanceof FunctionCall
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_9.getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vss_78, ExprStmt target_9, AddressOfExpr target_13, Function func) {
exists(ExprStmt target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vss_78
		and obj_0.getRValue() instanceof AddressOfExpr
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_9.getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vcoredump_76, FunctionCall target_2) {
	target_2.getTarget().hasName("coredump_to_xe")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vcoredump_76
}

predicate func_3(Variable vcoredump_76, AddressOfExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="snapshot"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcoredump_76
	)
}

predicate func_4(Variable vcoredump_76, VariableAccess target_4) {
	target_4.getTarget()=vcoredump_76
	and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_5(Function func, Initializer target_5) {
	target_5.getExpr() instanceof FunctionCall
	and target_5.getExpr().getEnclosingFunction() = func
}

predicate func_6(Function func, Initializer target_6) {
	target_6.getExpr() instanceof AddressOfExpr
	and target_6.getExpr().getEnclosingFunction() = func
}

predicate func_7(Parameter vdata_74, Variable vcoredump_76, ReturnStmt target_14, LogicalOrExpr target_7) {
	exists(NotExpr obj_0 | obj_0=target_7.getRightOperand() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("coredump_to_xe")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vcoredump_76
		)
	)
	and target_7.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vdata_74
	and target_7.getParent().(IfStmt).getThen()=target_14
}

/*predicate func_8(Parameter vdata_74, VariableAccess target_8) {
	target_8.getTarget()=vdata_74
}

*/
predicate func_9(Variable vss_78, ExprStmt target_9) {
	exists(FunctionCall obj_0 | obj_0=target_9.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="work"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vss_78
			)
		)
		and obj_0.getTarget().hasName("flush_work")
	)
}

predicate func_11(Variable vxe_77, ExprStmt target_11) {
	exists(FunctionCall obj_0 | obj_0=target_11.getExpr() |
		obj_0.getTarget().hasName("xe_device_snapshot_print")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vxe_77
		and obj_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("drm_printer")
	)
}

predicate func_13(Variable vss_78, AddressOfExpr target_13) {
	exists(PointerFieldAccess obj_0 | obj_0=target_13.getOperand() |
		obj_0.getTarget().getName()="work"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vss_78
	)
}

predicate func_14(Function func, ReturnStmt target_14) {
	target_14.getExpr().(UnaryMinusExpr).getValue()="-19"
	and target_14.getEnclosingFunction() = func
}

from Function func, Parameter vdata_74, Variable vcoredump_76, Variable vxe_77, Variable vss_78, FunctionCall target_2, AddressOfExpr target_3, VariableAccess target_4, Initializer target_5, Initializer target_6, LogicalOrExpr target_7, ExprStmt target_9, ExprStmt target_11, AddressOfExpr target_13, ReturnStmt target_14
where
not func_0(vxe_77, target_9, target_11, func)
and not func_1(vss_78, target_9, target_13, func)
and func_2(vcoredump_76, target_2)
and func_3(vcoredump_76, target_3)
and func_4(vcoredump_76, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
and func_7(vdata_74, vcoredump_76, target_14, target_7)
and func_9(vss_78, target_9)
and func_11(vxe_77, target_11)
and func_13(vss_78, target_13)
and func_14(func, target_14)
and vdata_74.getType().hasName("void *")
and vcoredump_76.getType().hasName("xe_devcoredump *")
and vxe_77.getType().hasName("xe_device *")
and vss_78.getType().hasName("xe_devcoredump_snapshot *")
and vdata_74.getFunction() = func
and vcoredump_76.(LocalVariable).getFunction() = func
and vxe_77.(LocalVariable).getFunction() = func
and vss_78.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
