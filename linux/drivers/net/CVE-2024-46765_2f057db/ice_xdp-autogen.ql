/**
 * @name linux-2f057db2fb29bc209c103050647562e60554d3d3-ice_xdp
 * @id cpp/linux/2f057db2fb29bc209c103050647562e60554d3d3/ice-xdp
 * @description linux-2f057db2fb29bc209c103050647562e60554d3d3-drivers/net/ethernet/intel/ice/ice_main.c-ice_xdp CVE-2024-46765
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvsi_3016, SwitchStmt target_13, EqualityOperation target_14, FunctionCall target_8, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="xdp_state_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvsi_3016
			)
		)
		and obj_0.getTarget().hasName("mutex_lock_nested")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_13.getLocation())
	and target_14.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(PointerFieldAccess target_15, Function func) {
exists(ExprStmt target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		obj_0.getLValue().(VariableAccess).getType().hasName("int")
		and obj_0.getRValue() instanceof FunctionCall
	)
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_15
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(PointerFieldAccess target_15, Function func) {
exists(BreakStmt target_2 |
	target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_15
	and target_2.getEnclosingFunction() = func
)
}

predicate func_3(PointerFieldAccess target_15, Function func) {
exists(ExprStmt target_3 |
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		obj_0.getLValue().(VariableAccess).getType().hasName("int")
		and obj_0.getRValue() instanceof FunctionCall
	)
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_15
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(PointerFieldAccess target_15, Function func) {
exists(BreakStmt target_4 |
	target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_15
	and target_4.getEnclosingFunction() = func
)
}

predicate func_5(PointerFieldAccess target_15, Function func) {
exists(ExprStmt target_5 |
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		obj_0.getLValue().(VariableAccess).getType().hasName("int")
		and obj_0.getRValue() instanceof UnaryMinusExpr
	)
	and target_5.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_15
	and target_5.getEnclosingFunction() = func
)
}

predicate func_6(Variable vvsi_3016, FunctionCall target_9, Function func) {
exists(ExprStmt target_6 |
	exists(FunctionCall obj_0 | obj_0=target_6.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="xdp_state_lock"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvsi_3016
			)
		)
		and obj_0.getTarget().hasName("mutex_unlock")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_9.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_8(Parameter vxdp_3013, Variable vvsi_3016, FunctionCall target_8) {
	exists(ValueFieldAccess obj_0 | obj_0=target_8.getArgument(1) |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="(unknown field)"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vxdp_3013
			)
			and obj_1.getTarget().getName()="(unknown field)"
		)
		and obj_0.getTarget().getName()="prog"
	)
	and exists(ValueFieldAccess obj_3 | obj_3=target_8.getArgument(2) |
		exists(ValueFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
				obj_5.getTarget().getName()="(unknown field)"
				and obj_5.getQualifier().(VariableAccess).getTarget()=vxdp_3013
			)
			and obj_4.getTarget().getName()="(unknown field)"
		)
		and obj_3.getTarget().getName()="extack"
	)
	and target_8.getTarget().hasName("ice_xdp_setup_prog")
	and target_8.getArgument(0).(VariableAccess).getTarget()=vvsi_3016
}

predicate func_9(Parameter vxdp_3013, Variable vvsi_3016, FunctionCall target_9) {
	exists(ValueFieldAccess obj_0 | obj_0=target_9.getArgument(1) |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="(unknown field)"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vxdp_3013
			)
			and obj_1.getTarget().getName()="xsk"
		)
		and obj_0.getTarget().getName()="pool"
	)
	and exists(ValueFieldAccess obj_3 | obj_3=target_9.getArgument(2) |
		exists(ValueFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
				obj_5.getTarget().getName()="(unknown field)"
				and obj_5.getQualifier().(VariableAccess).getTarget()=vxdp_3013
			)
			and obj_4.getTarget().getName()="xsk"
		)
		and obj_3.getTarget().getName()="queue_id"
	)
	and target_9.getTarget().hasName("ice_xsk_pool_setup")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vvsi_3016
}

predicate func_10(Function func, UnaryMinusExpr target_10) {
	target_10.getValue()="-22"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(PointerFieldAccess target_15, Function func, ReturnStmt target_11) {
	target_11.getExpr() instanceof FunctionCall
	and target_11.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_15
	and target_11.getEnclosingFunction() = func
}

predicate func_12(PointerFieldAccess target_15, Function func, ReturnStmt target_12) {
	target_12.getExpr() instanceof UnaryMinusExpr
	and target_12.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_15
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Parameter vxdp_3013, SwitchStmt target_13) {
	exists(PointerFieldAccess obj_0 | obj_0=target_13.getExpr() |
		obj_0.getTarget().getName()="command"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vxdp_3013
	)
	and exists(BlockStmt obj_1 | obj_1=target_13.getStmt() |
		obj_1.getStmt(1).(ReturnStmt).getExpr() instanceof FunctionCall
		and obj_1.getStmt(3) instanceof ReturnStmt
		and obj_1.getStmt(4).(SwitchCase).toString() = "default: "
		and obj_1.getStmt(5) instanceof ReturnStmt
	)
}

predicate func_14(Variable vvsi_3016, EqualityOperation target_14) {
	exists(PointerFieldAccess obj_0 | obj_0=target_14.getLeftOperand() |
		obj_0.getTarget().getName()="type"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vvsi_3016
	)
}

predicate func_15(Parameter vxdp_3013, PointerFieldAccess target_15) {
	target_15.getTarget().getName()="command"
	and target_15.getQualifier().(VariableAccess).getTarget()=vxdp_3013
}

from Function func, Parameter vxdp_3013, Variable vvsi_3016, FunctionCall target_8, FunctionCall target_9, UnaryMinusExpr target_10, ReturnStmt target_11, ReturnStmt target_12, SwitchStmt target_13, EqualityOperation target_14, PointerFieldAccess target_15
where
not func_0(vvsi_3016, target_13, target_14, target_8, func)
and not func_1(target_15, func)
and not func_2(target_15, func)
and not func_3(target_15, func)
and not func_4(target_15, func)
and not func_5(target_15, func)
and not func_6(vvsi_3016, target_9, func)
and func_8(vxdp_3013, vvsi_3016, target_8)
and func_9(vxdp_3013, vvsi_3016, target_9)
and func_10(func, target_10)
and func_11(target_15, func, target_11)
and func_12(target_15, func, target_12)
and func_13(vxdp_3013, target_13)
and func_14(vvsi_3016, target_14)
and func_15(vxdp_3013, target_15)
and vxdp_3013.getType().hasName("netdev_bpf *")
and vvsi_3016.getType().hasName("ice_vsi *")
and vxdp_3013.getFunction() = func
and vvsi_3016.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
