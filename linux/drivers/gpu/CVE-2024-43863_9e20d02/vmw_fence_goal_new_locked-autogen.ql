/**
 * @name linux-9e20d028d8d1deb1e7fed18f22ffc01669cf3237-vmw_fence_goal_new_locked
 * @id cpp/linux/9e20d028d8d1deb1e7fed18f22ffc01669cf3237/vmw-fence-goal-new-locked
 * @description linux-9e20d028d8d1deb1e7fed18f22ffc01669cf3237-drivers/gpu/drm/vmwgfx/vmwgfx_fence.c-vmw_fence_goal_new_locked CVE-2024-43863
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func) {
exists(CommaExpr target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getRightOperand() |
		obj_0.getLValue().(VariableAccess).getType().hasName("vmw_fence_obj *")
		and obj_0.getRValue() instanceof StmtExpr
	)
	and target_1.getLeftOperand() instanceof AssignExpr
	and target_1.getEnclosingFunction() = func
)
}

predicate func_2(Variable vfence_414, NotExpr target_6) {
exists(CommaExpr target_2 |
	exists(AssignExpr obj_0 | obj_0=target_2.getLeftOperand() |
		obj_0.getLValue().(VariableAccess).getTarget()=vfence_414
		and obj_0.getRValue().(VariableAccess).getType().hasName("vmw_fence_obj *")
	)
	and exists(AssignExpr obj_1 | obj_1=target_2.getRightOperand() |
		exists(StmtExpr obj_2 | obj_2=obj_1.getRValue() |
			exists(BlockStmt obj_3 | obj_3=obj_2.getStmt() |
				obj_3.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
				and obj_3.getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getType().hasName("void *")
			)
		)
		and obj_1.getLValue().(VariableAccess).getType().hasName("vmw_fence_obj *")
	)
	and target_6.getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_4(Variable vfence_414, Variable v__mptr_424, AssignExpr target_4) {
	exists(StmtExpr obj_0 | obj_0=target_4.getRValue() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(2) |
				exists(PointerArithmeticOperation obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getLeftOperand().(VariableAccess).getTarget()=v__mptr_424
					and obj_3.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="64"
				)
			)
			and obj_1.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
		)
	)
	and target_4.getLValue().(VariableAccess).getTarget()=vfence_414
}

predicate func_5(Variable vfence_414, Variable v__mptr_1_424, StmtExpr target_5) {
	exists(BlockStmt obj_0 | obj_0=target_5.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			obj_1.getCondition().(Literal).getValue()="0"
			and obj_1.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
		)
		and exists(ExprStmt obj_2 | obj_2=obj_0.getStmt(2) |
			exists(PointerArithmeticOperation obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_424
				and obj_3.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="64"
			)
		)
	)
	and exists(AssignExpr obj_4 | obj_4=target_5.getParent() |
		obj_4.getRValue() = target_5
		and obj_4.getLValue().(VariableAccess).getTarget()=vfence_414
	)
}

predicate func_6(Variable vfence_414, NotExpr target_6) {
	exists(EqualityOperation obj_0 | obj_0=target_6.getOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="head"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfence_414
			)
		)
		and exists(AddressOfExpr obj_3 | obj_3=obj_0.getRightOperand() |
			exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
				obj_4.getTarget().getName()="fence_list"
				and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("vmw_fence_manager *")
			)
		)
	)
}

from Function func, Variable vfence_414, Variable v__mptr_424, Variable v__mptr_1_424, AssignExpr target_4, StmtExpr target_5, NotExpr target_6
where
not func_1(func)
and not func_2(vfence_414, target_6)
and func_4(vfence_414, v__mptr_424, target_4)
and func_5(vfence_414, v__mptr_1_424, target_5)
and func_6(vfence_414, target_6)
and vfence_414.getType().hasName("vmw_fence_obj *")
and v__mptr_424.getType().hasName("void *")
and v__mptr_1_424.getType().hasName("void *")
and vfence_414.(LocalVariable).getFunction() = func
and v__mptr_424.(LocalVariable).getFunction() = func
and v__mptr_1_424.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
