/**
 * @name linux-17048e8a083fec7ad841d88ef0812707fbc7e39f-ext4_fallocate
 * @id cpp/linux/17048e8a083fec7ad841d88ef0812707fbc7e39f/ext4-fallocate
 * @description linux-17048e8a083fec7ad841d88ef0812707fbc7e39f-fs/ext4/extents.c-ext4_fallocate CVE-2015-8839
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinode_4919, ExprStmt target_3, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("ext4_inode_block_unlocked_dio")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_4919
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vinode_4919, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("inode_dio_wait")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_4919
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1)
}

predicate func_2(Variable vinode_4919, FunctionCall target_4, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("ext4_inode_resume_unlocked_dio")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_4919
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vinode_4919, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("inode_newsize_ok")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_4919
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("loff_t")
}

predicate func_4(Variable vinode_4919, FunctionCall target_4) {
		target_4.getTarget().hasName("EXT4_SB")
		and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_4919
}

from Function func, Variable vinode_4919, ExprStmt target_3, FunctionCall target_4
where
not func_0(vinode_4919, target_3, func)
and not func_1(vinode_4919, func)
and not func_2(vinode_4919, target_4, func)
and func_3(vinode_4919, target_3)
and func_4(vinode_4919, target_4)
and vinode_4919.getType().hasName("inode *")
and vinode_4919.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
