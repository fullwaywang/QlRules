/**
 * @name linux-0ce5964b82f212f4df6a9813f09a0b5de15bd9c8-adf_dev_aer_schedule_reset
 * @id cpp/linux/0ce5964b82f212f4df6a9813f09a0b5de15bd9c8/adf-dev-aer-schedule-reset
 * @description linux-0ce5964b82f212f4df6a9813f09a0b5de15bd9c8-drivers/crypto/qat/qat_common/adf_aer.c-adf_dev_aer_schedule_reset CVE-2024-39493
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vreset_data_169, NotExpr target_2, AddressOfExpr target_3, ExprStmt target_1) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="reset_work"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vreset_data_169
			)
		)
		and obj_0.getTarget().hasName("cancel_work_sync")
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_4.getCondition()=target_2
		)
	)
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vreset_data_169, NotExpr target_2, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vreset_data_169
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vreset_data_169, AddressOfExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="compl"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vreset_data_169
	)
	and exists(FunctionCall obj_1 | obj_1=target_3.getParent() |
		exists(Initializer obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getTarget().hasName("wait_for_completion_timeout")
				and obj_3.getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
			)
		)
	)
}

from Function func, Variable vreset_data_169, ExprStmt target_1, NotExpr target_2, AddressOfExpr target_3
where
not func_0(vreset_data_169, target_2, target_3, target_1)
and func_1(vreset_data_169, target_2, target_1)
and func_2(func, target_2)
and func_3(vreset_data_169, target_3)
and vreset_data_169.getType().hasName("adf_reset_dev_data *")
and vreset_data_169.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
