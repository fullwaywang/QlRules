/**
 * @name linux-5800dc5c19f34e6e03b5adab1282535cb102fafd-paravirt_patch_jmp
 * @id cpp/linux/5800dc5c19f34e6e03b5adab1282535cb102fafd/paravirt-patch-jmp
 * @description linux-5800dc5c19f34e6e03b5adab1282535cb102fafd-arch/x86/kernel/paravirt.c-paravirt_patch_jmp CVE-2018-15594
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(RelationalOperation target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vlen_104, RelationalOperation target_2, ReturnStmt target_1) {
	target_1.getExpr().(VariableAccess).getTarget()=vlen_104
	and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Parameter vlen_104, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vlen_104
	and target_2.getGreaterOperand().(Literal).getValue()="5"
}

from Function func, Parameter vlen_104, ReturnStmt target_1, RelationalOperation target_2
where
not func_0(target_2, func)
and func_1(vlen_104, target_2, target_1)
and func_2(vlen_104, target_2)
and vlen_104.getType().hasName("unsigned int")
and vlen_104.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
