/**
 * @name linux-bfca5fb4e97c46503ddfc582335917b0cc228264-rpc_clnt_remove_pipedir
 * @id cpp/linux/bfca5fb4e97c46503ddfc582335917b0cc228264/rpc-clnt-remove-pipedir
 * @description linux-bfca5fb4e97c46503ddfc582335917b0cc228264-net/sunrpc/clnt.c-rpc_clnt_remove_pipedir CVE-2023-52803
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vclnt_107, Variable vpipefs_sb_110, VariableAccess target_2, FunctionCall target_3, ExprStmt target_1, IfStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vpipefs_sb_110
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="pipefs_sb"
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclnt_107
	and target_0.getThen() instanceof ExprStmt
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_4.getCondition().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vclnt_107, VariableAccess target_2, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("__rpc_clnt_remove_pipedir")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vclnt_107
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vpipefs_sb_110, VariableAccess target_2) {
	target_2.getTarget()=vpipefs_sb_110
}

predicate func_3(Parameter vclnt_107, FunctionCall target_3) {
	target_3.getTarget().hasName("rpc_net_ns")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vclnt_107
}

predicate func_4(Variable vpipefs_sb_110, IfStmt target_4) {
	target_4.getCondition().(VariableAccess).getTarget()=vpipefs_sb_110
	and target_4.getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_4.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("rpc_put_sb_net")
	and target_4.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
}

from Function func, Parameter vclnt_107, Variable vpipefs_sb_110, ExprStmt target_1, VariableAccess target_2, FunctionCall target_3, IfStmt target_4
where
not func_0(vclnt_107, vpipefs_sb_110, target_2, target_3, target_1, target_4)
and func_1(vclnt_107, target_2, target_1)
and func_2(vpipefs_sb_110, target_2)
and func_3(vclnt_107, target_3)
and func_4(vpipefs_sb_110, target_4)
and vclnt_107.getType().hasName("rpc_clnt *")
and vpipefs_sb_110.getType().hasName("super_block *")
and vclnt_107.getFunction() = func
and vpipefs_sb_110.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
