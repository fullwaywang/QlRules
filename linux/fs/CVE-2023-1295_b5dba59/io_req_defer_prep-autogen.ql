/**
 * @name linux-b5dba59e0cf7e2cc4d3b3b1ac5fe81ddf21959eb-io_req_defer_prep
 * @id cpp/linux/b5dba59e0cf7e2cc4d3b3b1ac5fe81ddf21959eb/io-req-defer-prep
 * @description linux-b5dba59e0cf7e2cc4d3b3b1ac5fe81ddf21959eb-fs/io_uring.c-io_req_defer_prep CVE-2023-1295
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vsqe_3202, Variable vret_3204, Parameter vreq_3201, PointerFieldAccess target_3, ExprStmt target_4, ExprStmt target_5) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_3204
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("io_close_prep")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_3201
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsqe_3202
		and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_3
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(PointerFieldAccess target_3, Function func) {
	exists(BreakStmt target_2 |
		target_2.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_3
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Parameter vreq_3201, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="opcode"
		and target_3.getQualifier().(VariableAccess).getTarget()=vreq_3201
}

predicate func_4(Parameter vsqe_3202, Variable vret_3204, Parameter vreq_3201, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_3204
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("io_openat_prep")
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_3201
		and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsqe_3202
}

predicate func_5(Parameter vreq_3201, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_5.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="4io_uring: unhandled opcode %d\n"
		and target_5.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="opcode"
		and target_5.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_3201
}

from Function func, Parameter vsqe_3202, Variable vret_3204, Parameter vreq_3201, PointerFieldAccess target_3, ExprStmt target_4, ExprStmt target_5
where
not func_1(vsqe_3202, vret_3204, vreq_3201, target_3, target_4, target_5)
and not func_2(target_3, func)
and func_3(vreq_3201, target_3)
and func_4(vsqe_3202, vret_3204, vreq_3201, target_4)
and func_5(vreq_3201, target_5)
and vsqe_3202.getType().hasName("const io_uring_sqe *")
and vret_3204.getType().hasName("ssize_t")
and vreq_3201.getType().hasName("io_kiocb *")
and vsqe_3202.getFunction() = func
and vret_3204.(LocalVariable).getFunction() = func
and vreq_3201.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
