/**
 * @name chromium-55e32689fd4e3c70cadda854a18cca7152090877-content__RenderFrameDevToolsAgentHost__AttachSession_
 * @id cpp/chromium/55e32689fd4e3c70cadda854a18cca7152090877/contentrenderframedevtoolsagenthostattachsession
 * @description chromium-55e32689fd4e3c70cadda854a18cca7152090877-content/browser/devtools/service_worker_devtools_agent_host.cc-content__RenderFrameDevToolsAgentHost__AttachSession_ CVE-2024-0810
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsession_315, FunctionCall target_1, ExprStmt target_2) {
exists(FunctionCall target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getQualifier() |
		obj_0.getTarget().hasName("GetClient")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vsession_315
	)
	and exists(FunctionCall obj_1 | obj_1=target_0.getParent() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getArgument(0) |
					obj_4.getTarget().hasName("GetId")
					and obj_4.getQualifier().(ThisExpr).getType() instanceof PointerType
				)
				and exists(ConditionalExpr obj_5 | obj_5=obj_3.getArgument(1) |
					exists(PointerFieldAccess obj_6 | obj_6=obj_5.getCondition() |
						obj_6.getTarget().getName()="frame_host_"
						and obj_6.getQualifier().(ThisExpr).getType() instanceof PointerType
					)
					and exists(FunctionCall obj_7 | obj_7=obj_5.getThen() |
						exists(PointerFieldAccess obj_8 | obj_8=obj_7.getQualifier() |
							obj_8.getTarget().getName()="frame_host_"
							and obj_8.getQualifier().(ThisExpr).getType() instanceof PointerType
						)
						and obj_7.getTarget().hasName("devtools_frame_token")
					)
					and obj_5.getElse().(ConstructorCall).getType() instanceof VoidType
				)
				and exists(FunctionCall obj_9 | obj_9=obj_3.getArgument(2) |
					obj_9.getTarget().hasName("GetIOContext")
					and obj_9.getQualifier().(ThisExpr).getType() instanceof PointerType
				)
				and exists(FunctionCall obj_10 | obj_10=obj_3.getArgument(3) |
					exists(FunctionCall obj_11 | obj_11=obj_10.getArgument(1) |
						obj_11.getTarget().hasName("Unretained")
						and obj_11.getArgument(0).(ThisExpr).getType() instanceof PointerType
					)
					and obj_10.getTarget().hasName("BindRepeating")
				)
				and exists(FunctionCall obj_12 | obj_12=obj_3.getArgument(4) |
					exists(FunctionCall obj_13 | obj_13=obj_12.getQualifier() |
						obj_13.getTarget().hasName("GetClient")
						and obj_13.getQualifier().(VariableAccess).getTarget()=vsession_315
					)
					and obj_12.getTarget().hasName("MayReadLocalFiles")
				)
				and obj_3.getTarget().hasName("CreateAndAddHandler")
				and obj_3.getQualifier().(VariableAccess).getTarget()=vsession_315
			)
		)
	)
	and target_0.getTarget().hasName("IsTrusted")
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_0.getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation())
	and target_0.getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vsession_315, FunctionCall target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getParent() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
					exists(FunctionCall obj_4 | obj_4=obj_3.getArgument(0) |
						obj_4.getTarget().hasName("GetId")
						and obj_4.getQualifier().(ThisExpr).getType() instanceof PointerType
					)
					and exists(ConditionalExpr obj_5 | obj_5=obj_3.getArgument(1) |
						exists(PointerFieldAccess obj_6 | obj_6=obj_5.getCondition() |
							obj_6.getTarget().getName()="frame_host_"
							and obj_6.getQualifier().(ThisExpr).getType() instanceof PointerType
						)
						and exists(FunctionCall obj_7 | obj_7=obj_5.getThen() |
							exists(PointerFieldAccess obj_8 | obj_8=obj_7.getQualifier() |
								obj_8.getTarget().getName()="frame_host_"
								and obj_8.getQualifier().(ThisExpr).getType() instanceof PointerType
							)
							and obj_7.getTarget().hasName("devtools_frame_token")
						)
						and obj_5.getElse().(ConstructorCall).getType() instanceof VoidType
					)
					and exists(FunctionCall obj_9 | obj_9=obj_3.getArgument(2) |
						obj_9.getTarget().hasName("GetIOContext")
						and obj_9.getQualifier().(ThisExpr).getType() instanceof PointerType
					)
					and exists(FunctionCall obj_10 | obj_10=obj_3.getArgument(3) |
						exists(FunctionCall obj_11 | obj_11=obj_10.getArgument(1) |
							obj_11.getTarget().hasName("Unretained")
							and obj_11.getArgument(0).(ThisExpr).getType() instanceof PointerType
						)
						and obj_10.getTarget().hasName("BindRepeating")
					)
					and obj_3.getTarget().hasName("CreateAndAddHandler")
					and obj_3.getQualifier().(VariableAccess).getTarget()=vsession_315
					and obj_3.getArgument(4).(FunctionCall).getTarget().hasName("MayReadLocalFiles")
				)
			)
		)
	)
	and target_1.getTarget().hasName("GetClient")
	and target_1.getQualifier().(VariableAccess).getTarget()=vsession_315
}

predicate func_2(Parameter vsession_315, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().hasName("GetIOContext")
			and obj_1.getQualifier().(ThisExpr).getType() instanceof PointerType
		)
		and exists(FunctionCall obj_2 | obj_2=obj_0.getArgument(1) |
			exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(1) |
				obj_3.getTarget().hasName("Unretained")
				and obj_3.getArgument(0).(ThisExpr).getType() instanceof PointerType
			)
			and obj_2.getTarget().hasName("BindRepeating")
			and obj_2.getArgument(0).(LambdaExpression).getType() instanceof LocalClass
		)
		and obj_0.getTarget().hasName("CreateAndAddHandler")
		and obj_0.getQualifier().(VariableAccess).getTarget()=vsession_315
	)
}

from Function func, Parameter vsession_315, FunctionCall target_1, ExprStmt target_2
where
not func_0(vsession_315, target_1, target_2)
and func_1(vsession_315, target_1)
and func_2(vsession_315, target_2)
and vsession_315.getType().hasName("DevToolsSession *")
and vsession_315.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
