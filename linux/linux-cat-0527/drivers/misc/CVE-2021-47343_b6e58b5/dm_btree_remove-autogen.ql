/**
 * @name linux-b6e58b5466b2959f83034bead2e2e1395cca8aeb-dm_btree_remove
 * @id cpp/linux/b6e58b5466b2959f83034bead2e2e1395cca8aeb/dm-btree-remove
 * @description linux-b6e58b5466b2959f83034bead2e2e1395cca8aeb-drivers/md/persistent-data/dm-btree-remove.c-dm_btree_remove CVE-2021-47343
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vr_522, ExprStmt target_1, RelationalOperation target_2, ReturnStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vr_522
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vnew_root_519, Variable vspine_523, Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vnew_root_519
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("shadow_root")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vspine_523
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vr_522, RelationalOperation target_2) {
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(VariableAccess).getTarget()=vr_522
	and target_2.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_3(Variable vr_522, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vr_522
}

from Function func, Parameter vnew_root_519, Variable vr_522, Variable vspine_523, ExprStmt target_1, RelationalOperation target_2, ReturnStmt target_3
where
not func_0(vr_522, target_1, target_2, target_3, func)
and func_1(vnew_root_519, vspine_523, func, target_1)
and func_2(vr_522, target_2)
and func_3(vr_522, target_3)
and vnew_root_519.getType().hasName("dm_block_t *")
and vr_522.getType().hasName("int")
and vspine_523.getType().hasName("shadow_spine")
and vnew_root_519.getFunction() = func
and vr_522.(LocalVariable).getFunction() = func
and vspine_523.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
