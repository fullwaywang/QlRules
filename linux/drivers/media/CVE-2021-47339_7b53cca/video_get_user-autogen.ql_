/**
 * @name linux-7b53cca764f9b291b7907fcd39d9e66ad728ee0b-video_get_user
 * @id cpp/linux/7b53cca764f9b291b7907fcd39d9e66ad728ee0b/video-get-user
 * @description linux-7b53cca764f9b291b7907fcd39d9e66ad728ee0b-drivers/media/v4l2-core/v4l2-ioctl.c-video_get_user CVE-2021-47339
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vparg_3095, Variable vn_3099, FunctionCall target_2, FunctionCall target_3, ExprStmt target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vparg_3095
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vn_3099
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vparg_3095, Variable vn_3099, FunctionCall target_2, ExprStmt target_4, PointerArithmeticOperation target_5, LogicalAndExpr target_6) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vparg_3095
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vn_3099
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(VariableAccess).getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_6.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_2(Function func, FunctionCall target_2) {
	target_2.getTarget().hasName("in_compat_syscall")
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vparg_3095, Variable vn_3099, FunctionCall target_3) {
	target_3.getTarget().hasName("copy_from_user")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vparg_3095
	and target_3.getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
	and target_3.getArgument(2).(VariableAccess).getTarget()=vn_3099
}

predicate func_4(Parameter vparg_3095, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("v4l2_compat_get_user")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("void *")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vparg_3095
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_5(Parameter vparg_3095, Variable vn_3099, PointerArithmeticOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vparg_3095
	and target_5.getRightOperand().(VariableAccess).getTarget()=vn_3099
}

predicate func_6(Variable vn_3099, LogicalAndExpr target_6) {
	target_6.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vn_3099
	and target_6.getRightOperand().(RelationalOperation).getGreaterOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_6.getRightOperand().(RelationalOperation).getGreaterOperand().(BitwiseAndExpr).getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(AddExpr).getValue()="16"
	and target_6.getRightOperand().(RelationalOperation).getGreaterOperand().(BitwiseAndExpr).getRightOperand().(SubExpr).getValue()="16383"
}

from Function func, Parameter vparg_3095, Variable vn_3099, FunctionCall target_2, FunctionCall target_3, ExprStmt target_4, PointerArithmeticOperation target_5, LogicalAndExpr target_6
where
not func_0(vparg_3095, vn_3099, target_2, target_3, target_4)
and not func_1(vparg_3095, vn_3099, target_2, target_4, target_5, target_6)
and func_2(func, target_2)
and func_3(vparg_3095, vn_3099, target_3)
and func_4(vparg_3095, target_4)
and func_5(vparg_3095, vn_3099, target_5)
and func_6(vn_3099, target_6)
and vparg_3095.getType().hasName("void *")
and vn_3099.getType().hasName("unsigned int")
and vparg_3095.getFunction() = func
and vn_3099.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
