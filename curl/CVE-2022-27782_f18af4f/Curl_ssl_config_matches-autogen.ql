/**
 * @name curl-f18af4f874-Curl_ssl_config_matches
 * @id cpp/curl/f18af4f874/curl-ssl-config-matches
 * @description curl-f18af4f874-lib/vtls/vtls.c-Curl_ssl_config_matches CVE-2022-27782
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof LogicalAndExpr
		and target_0.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="ssl_options"
		and target_0.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="ssl_options"
		and target_0.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof EqualityOperation
		and target_0.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof EqualityOperation
		and target_0.getAnOperand().(LogicalAndExpr).getAnOperand() instanceof EqualityOperation
		and target_0.getAnOperand() instanceof FunctionCall
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vneedle_131, Parameter vdata_130, LogicalAndExpr target_21) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("Curl_safecmp")
		and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="username"
		and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_1.getArgument(1).(PointerFieldAccess).getTarget().getName()="username"
		and target_1.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
		and target_21.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vneedle_131, Parameter vdata_130, LogicalAndExpr target_21) {
	exists(FunctionCall target_2 |
		target_2.getTarget().hasName("Curl_safecmp")
		and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="password"
		and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_2.getArgument(1).(PointerFieldAccess).getTarget().getName()="password"
		and target_2.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
		and target_21.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vneedle_131, Parameter vdata_130, LogicalAndExpr target_21) {
	exists(EqualityOperation target_3 |
		target_3.getAnOperand().(PointerFieldAccess).getTarget().getName()="authtype"
		and target_3.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_3.getAnOperand().(PointerFieldAccess).getTarget().getName()="authtype"
		and target_3.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
		and target_21.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vneedle_131, Parameter vdata_130, LogicalAndExpr target_21) {
	exists(FunctionCall target_4 |
		target_4.getTarget().hasName("Curl_safe_strcasecompare")
		and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="CRLfile"
		and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_4.getArgument(1).(PointerFieldAccess).getTarget().getName()="CRLfile"
		and target_4.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
		and target_21.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Parameter vneedle_131, Parameter vdata_130, LogicalAndExpr target_5) {
		target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="version"
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="version"
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="version_max"
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="version_max"
		and target_5.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_6(Parameter vneedle_131, Parameter vdata_130, EqualityOperation target_6) {
		target_6.getAnOperand().(PointerFieldAccess).getTarget().getName()="verifypeer"
		and target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_6.getAnOperand().(PointerFieldAccess).getTarget().getName()="verifypeer"
		and target_6.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_7(Parameter vneedle_131, Parameter vdata_130, EqualityOperation target_7) {
		target_7.getAnOperand().(PointerFieldAccess).getTarget().getName()="verifyhost"
		and target_7.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_7.getAnOperand().(PointerFieldAccess).getTarget().getName()="verifyhost"
		and target_7.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_8(Parameter vneedle_131, Parameter vdata_130, EqualityOperation target_8) {
		target_8.getAnOperand().(PointerFieldAccess).getTarget().getName()="verifystatus"
		and target_8.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_8.getAnOperand().(PointerFieldAccess).getTarget().getName()="verifystatus"
		and target_8.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_9(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_9) {
		target_9.getTarget().hasName("blobcmp")
		and target_9.getArgument(0).(PointerFieldAccess).getTarget().getName()="cert_blob"
		and target_9.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_9.getArgument(1).(PointerFieldAccess).getTarget().getName()="cert_blob"
		and target_9.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_10(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_10) {
		target_10.getTarget().hasName("blobcmp")
		and target_10.getArgument(0).(PointerFieldAccess).getTarget().getName()="ca_info_blob"
		and target_10.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_10.getArgument(1).(PointerFieldAccess).getTarget().getName()="ca_info_blob"
		and target_10.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_11(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_11) {
		target_11.getTarget().hasName("blobcmp")
		and target_11.getArgument(0).(PointerFieldAccess).getTarget().getName()="issuercert_blob"
		and target_11.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_11.getArgument(1).(PointerFieldAccess).getTarget().getName()="issuercert_blob"
		and target_11.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_12(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_12) {
		target_12.getTarget().hasName("Curl_safecmp")
		and target_12.getArgument(0).(PointerFieldAccess).getTarget().getName()="CApath"
		and target_12.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_12.getArgument(1).(PointerFieldAccess).getTarget().getName()="CApath"
		and target_12.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_13(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_13) {
		target_13.getTarget().hasName("Curl_safecmp")
		and target_13.getArgument(0).(PointerFieldAccess).getTarget().getName()="CAfile"
		and target_13.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_13.getArgument(1).(PointerFieldAccess).getTarget().getName()="CAfile"
		and target_13.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_14(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_14) {
		target_14.getTarget().hasName("Curl_safecmp")
		and target_14.getArgument(0).(PointerFieldAccess).getTarget().getName()="issuercert"
		and target_14.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_14.getArgument(1).(PointerFieldAccess).getTarget().getName()="issuercert"
		and target_14.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_15(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_15) {
		target_15.getTarget().hasName("Curl_safecmp")
		and target_15.getArgument(0).(PointerFieldAccess).getTarget().getName()="clientcert"
		and target_15.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_15.getArgument(1).(PointerFieldAccess).getTarget().getName()="clientcert"
		and target_15.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_16(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_16) {
		target_16.getTarget().hasName("Curl_safecmp")
		and target_16.getArgument(0).(PointerFieldAccess).getTarget().getName()="random_file"
		and target_16.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_16.getArgument(1).(PointerFieldAccess).getTarget().getName()="random_file"
		and target_16.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_17(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_17) {
		target_17.getTarget().hasName("Curl_safecmp")
		and target_17.getArgument(0).(PointerFieldAccess).getTarget().getName()="egdsocket"
		and target_17.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_17.getArgument(1).(PointerFieldAccess).getTarget().getName()="egdsocket"
		and target_17.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_18(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_18) {
		target_18.getTarget().hasName("Curl_safe_strcasecompare")
		and target_18.getArgument(0).(PointerFieldAccess).getTarget().getName()="cipher_list"
		and target_18.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_18.getArgument(1).(PointerFieldAccess).getTarget().getName()="cipher_list"
		and target_18.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_19(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_19) {
		target_19.getTarget().hasName("Curl_safe_strcasecompare")
		and target_19.getArgument(0).(PointerFieldAccess).getTarget().getName()="cipher_list13"
		and target_19.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_19.getArgument(1).(PointerFieldAccess).getTarget().getName()="cipher_list13"
		and target_19.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_20(Parameter vneedle_131, Parameter vdata_130, FunctionCall target_20) {
		target_20.getTarget().hasName("Curl_safe_strcasecompare")
		and target_20.getArgument(0).(PointerFieldAccess).getTarget().getName()="curves"
		and target_20.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_20.getArgument(1).(PointerFieldAccess).getTarget().getName()="curves"
		and target_20.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

predicate func_21(Parameter vneedle_131, Parameter vdata_130, LogicalAndExpr target_21) {
		target_21.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
		and target_21.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
		and target_21.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
		and target_21.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
		and target_21.getAnOperand().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
		and target_21.getAnOperand().(FunctionCall).getTarget().hasName("Curl_safe_strcasecompare")
		and target_21.getAnOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="pinned_key"
		and target_21.getAnOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_130
		and target_21.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="pinned_key"
		and target_21.getAnOperand().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vneedle_131
}

from Function func, Parameter vneedle_131, Parameter vdata_130, LogicalAndExpr target_5, EqualityOperation target_6, EqualityOperation target_7, EqualityOperation target_8, FunctionCall target_9, FunctionCall target_10, FunctionCall target_11, FunctionCall target_12, FunctionCall target_13, FunctionCall target_14, FunctionCall target_15, FunctionCall target_16, FunctionCall target_17, FunctionCall target_18, FunctionCall target_19, FunctionCall target_20, LogicalAndExpr target_21
where
not func_0(func)
and not func_1(vneedle_131, vdata_130, target_21)
and not func_2(vneedle_131, vdata_130, target_21)
and not func_3(vneedle_131, vdata_130, target_21)
and not func_4(vneedle_131, vdata_130, target_21)
and func_5(vneedle_131, vdata_130, target_5)
and func_6(vneedle_131, vdata_130, target_6)
and func_7(vneedle_131, vdata_130, target_7)
and func_8(vneedle_131, vdata_130, target_8)
and func_9(vneedle_131, vdata_130, target_9)
and func_10(vneedle_131, vdata_130, target_10)
and func_11(vneedle_131, vdata_130, target_11)
and func_12(vneedle_131, vdata_130, target_12)
and func_13(vneedle_131, vdata_130, target_13)
and func_14(vneedle_131, vdata_130, target_14)
and func_15(vneedle_131, vdata_130, target_15)
and func_16(vneedle_131, vdata_130, target_16)
and func_17(vneedle_131, vdata_130, target_17)
and func_18(vneedle_131, vdata_130, target_18)
and func_19(vneedle_131, vdata_130, target_19)
and func_20(vneedle_131, vdata_130, target_20)
and func_21(vneedle_131, vdata_130, target_21)
and vneedle_131.getType().hasName("ssl_primary_config *")
and vdata_130.getType().hasName("ssl_primary_config *")
and vneedle_131.getFunction() = func
and vdata_130.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
