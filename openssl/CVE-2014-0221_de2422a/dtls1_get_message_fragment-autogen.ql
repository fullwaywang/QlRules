/**
 * @name openssl-de2422affbe24262496f477edeb1c04017907eb4-dtls1_get_message_fragment
 * @id cpp/openssl/de2422affbe24262496f477edeb1c04017907eb4/dtls1-get-message-fragment
 * @description openssl-de2422affbe24262496f477edeb1c04017907eb4-ssl/d1_both.c-dtls1_get_message_fragment CVE-2014-0221
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalAndExpr target_2, Function func) {
	exists(GotoStmt target_0 |
		target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Parameter vst1_783, Parameter vstn_783, Parameter vmax_783, Parameter vok_783, Parameter vs_783, LogicalAndExpr target_2, ReturnStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("dtls1_get_message_fragment")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_783
		and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vst1_783
		and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vstn_783
		and target_1.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vmax_783
		and target_1.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vok_783
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Function func, LogicalAndExpr target_2) {
		target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("unsigned char[12]")
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("unsigned char[12]")
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="2"
		and target_2.getAnOperand().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_2.getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("unsigned char[12]")
		and target_2.getAnOperand().(EqualityOperation).getAnOperand().(ArrayExpr).getArrayOffset().(Literal).getValue()="3"
		and target_2.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_2.getEnclosingFunction() = func
}

from Function func, Parameter vst1_783, Parameter vstn_783, Parameter vmax_783, Parameter vok_783, Parameter vs_783, ReturnStmt target_1, LogicalAndExpr target_2
where
not func_0(target_2, func)
and func_1(vst1_783, vstn_783, vmax_783, vok_783, vs_783, target_2, target_1)
and func_2(func, target_2)
and vst1_783.getType().hasName("int")
and vstn_783.getType().hasName("int")
and vmax_783.getType().hasName("long")
and vok_783.getType().hasName("int *")
and vs_783.getType().hasName("SSL *")
and vst1_783.getFunction() = func
and vstn_783.getFunction() = func
and vmax_783.getFunction() = func
and vok_783.getFunction() = func
and vs_783.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
