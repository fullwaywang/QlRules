/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-j1939_sk_setsockopt
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/j1939-sk-setsockopt
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/can/j1939/socket.c-j1939_sk_setsockopt CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptval_649, Parameter voptlen_649, FunctionCall target_0) {
	target_0.getTarget().hasName("memdup_user")
	and not target_0.getTarget().hasName("memdup_sockptr")
	and target_0.getArgument(0).(VariableAccess).getTarget()=voptval_649
	and target_0.getArgument(1).(VariableAccess).getTarget()=voptlen_649
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("j1939_filter *")
}

predicate func_1(Parameter voptval_649, BlockStmt target_8, IfStmt target_9) {
exists(NotExpr target_1 |
	target_1.getOperand().(FunctionCall).getTarget().hasName("sockptr_is_null")
	and target_1.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=voptval_649
	and target_1.getParent().(IfStmt).getThen()=target_8
	and target_1.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getCondition().(VariableAccess).getLocation()))
}

predicate func_3(Parameter voptval_649, Parameter voptlen_649, ReturnStmt target_10, ExprStmt target_11, FunctionCall target_7) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("copy_from_sockptr")
	and target_3.getArgument(0) instanceof AddressOfExpr
	and target_3.getArgument(1).(VariableAccess).getTarget()=voptval_649
	and target_3.getArgument(2).(VariableAccess).getTarget()=voptlen_649
	and target_3.getParent().(IfStmt).getThen()=target_10
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getArgument(1).(VariableAccess).getLocation())
	and target_3.getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_4(Parameter voptval_649, Parameter voptlen_649, Variable vtmp_653, ReturnStmt target_10, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vtmp_653
	and target_4.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voptval_649
	and target_4.getParent().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=voptlen_649
	and target_4.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_10
}

/*predicate func_5(Parameter voptval_649, Parameter voptlen_649, Variable vtmp_653, ReturnStmt target_10, VariableAccess target_5) {
	target_5.getTarget()=voptlen_649
	and target_5.getParent().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vtmp_653
	and target_5.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voptval_649
	and target_5.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_10
}

*/
predicate func_6(Parameter voptval_649, BlockStmt target_8, VariableAccess target_6) {
	target_6.getTarget()=voptval_649
	and target_6.getParent().(IfStmt).getThen()=target_8
}

predicate func_7(Parameter voptval_649, Parameter voptlen_649, ReturnStmt target_10, FunctionCall target_7) {
	target_7.getTarget().hasName("copy_from_user")
	and target_7.getArgument(0) instanceof AddressOfExpr
	and target_7.getArgument(1).(VariableAccess).getTarget()=voptval_649
	and target_7.getArgument(2).(VariableAccess).getTarget()=voptlen_649
	and target_7.getParent().(IfStmt).getThen()=target_10
}

predicate func_8(Parameter voptlen_649, BlockStmt target_8) {
	target_8.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(RemExpr).getLeftOperand().(VariableAccess).getTarget()=voptlen_649
	and target_8.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(RemExpr).getRightOperand().(SizeofExprOperator).getValue()="32"
	and target_8.getStmt(2).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_8.getStmt(2).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_8.getStmt(3).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=voptlen_649
	and target_8.getStmt(3).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(MulExpr).getValue()="16384"
	and target_8.getStmt(3).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
}

predicate func_9(Parameter voptval_649, Parameter voptlen_649, IfStmt target_9) {
	target_9.getCondition().(VariableAccess).getTarget()=voptval_649
	and target_9.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(RemExpr).getLeftOperand().(VariableAccess).getTarget()=voptlen_649
	and target_9.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(RemExpr).getRightOperand().(SizeofExprOperator).getValue()="32"
	and target_9.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_9.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_9.getThen().(BlockStmt).getStmt(3).(IfStmt).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=voptlen_649
	and target_9.getThen().(BlockStmt).getStmt(3).(IfStmt).getCondition().(RelationalOperation).getLesserOperand().(MulExpr).getValue()="16384"
	and target_9.getThen().(BlockStmt).getStmt(3).(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
}

predicate func_10(Function func, ReturnStmt target_10) {
	target_10.getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Parameter voptval_649, Parameter voptlen_649, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("j1939_sk_setsockopt_flag")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("j1939_sock *")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voptval_649
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=voptlen_649
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(BinaryBitwiseOperation).getValue()="8"
}

from Function func, Parameter voptval_649, Parameter voptlen_649, Variable vtmp_653, FunctionCall target_0, AddressOfExpr target_4, VariableAccess target_6, FunctionCall target_7, BlockStmt target_8, IfStmt target_9, ReturnStmt target_10, ExprStmt target_11
where
func_0(voptval_649, voptlen_649, target_0)
and not func_1(voptval_649, target_8, target_9)
and not func_3(voptval_649, voptlen_649, target_10, target_11, target_7)
and func_4(voptval_649, voptlen_649, vtmp_653, target_10, target_4)
and func_6(voptval_649, target_8, target_6)
and func_7(voptval_649, voptlen_649, target_10, target_7)
and func_8(voptlen_649, target_8)
and func_9(voptval_649, voptlen_649, target_9)
and func_10(func, target_10)
and func_11(voptval_649, voptlen_649, target_11)
and voptval_649.getType().hasName("char *")
and voptlen_649.getType().hasName("unsigned int")
and vtmp_653.getType().hasName("int")
and voptval_649.getFunction() = func
and voptlen_649.getFunction() = func
and vtmp_653.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
