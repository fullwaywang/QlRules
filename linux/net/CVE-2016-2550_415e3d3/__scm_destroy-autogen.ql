/**
 * @name linux-415e3d3e90ce9e18727e8843ae343eda5a58fad6-__scm_destroy
 * @id cpp/linux/415e3d3e90ce9e18727e8843ae343eda5a58fad6/--scm-destroy
 * @description linux-415e3d3e90ce9e18727e8843ae343eda5a58fad6-net/core/scm.c-__scm_destroy CVE-2016-2550
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfpl_115, VariableAccess target_1, ArrayExpr target_2, ExprStmt target_3) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("free_uid")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_115
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vfpl_115, BlockStmt target_4, VariableAccess target_1) {
	target_1.getTarget()=vfpl_115
	and target_1.getParent().(IfStmt).getThen()=target_4
}

predicate func_2(Variable vfpl_115, ArrayExpr target_2) {
	target_2.getArrayBase().(PointerFieldAccess).getTarget().getName()="fp"
	and target_2.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_115
	and target_2.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_3(Variable vfpl_115, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfpl_115
}

predicate func_4(Variable vfpl_115, BlockStmt target_4) {
	target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="fp"
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("scm_cookie *")
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_4.getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="count"
	and target_4.getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_115
	and target_4.getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(Literal).getValue()="1"
	and target_4.getStmt(1).(ForStmt).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getStmt(1).(ForStmt).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_4.getStmt(1).(ForStmt).getUpdate().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getStmt(1).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("fput")
	and target_4.getStmt(1).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="fp"
	and target_4.getStmt(1).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_115
	and target_4.getStmt(1).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vfpl_115, VariableAccess target_1, ArrayExpr target_2, ExprStmt target_3, BlockStmt target_4
where
not func_0(vfpl_115, target_1, target_2, target_3)
and func_1(vfpl_115, target_4, target_1)
and func_2(vfpl_115, target_2)
and func_3(vfpl_115, target_3)
and func_4(vfpl_115, target_4)
and vfpl_115.getType().hasName("scm_fp_list *")
and vfpl_115.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
