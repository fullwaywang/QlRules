/**
 * @name linux-23adbe12ef7d3d4195e80800ab36b37bee28cd03-inode_change_ok
 * @id cpp/linux/23adbe12ef7d3d4195e80800ab36b37bee28cd03/inode-change-ok
 * @description linux-23adbe12ef7d3d4195e80800ab36b37bee28cd03-fs/attr.c-inode_change_ok CVE-2014-4014
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_31, FunctionCall target_0) {
	target_0.getTarget().hasName("inode_capable")
	and not target_0.getTarget().hasName("capable_wrt_inode_uidgid")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vinode_31
	and target_0.getArgument(1).(Literal).getValue()="0"
}

predicate func_1(Parameter vinode_31, FunctionCall target_1) {
	target_1.getTarget().hasName("inode_capable")
	and not target_1.getTarget().hasName("capable_wrt_inode_uidgid")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vinode_31
	and target_1.getArgument(1).(Literal).getValue()="0"
}

predicate func_2(Parameter vinode_31, FunctionCall target_2) {
	target_2.getTarget().hasName("inode_capable")
	and not target_2.getTarget().hasName("capable_wrt_inode_uidgid")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vinode_31
	and target_2.getArgument(1).(Literal).getValue()="4"
}

from Function func, Parameter vinode_31, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2
where
func_0(vinode_31, target_0)
and func_1(vinode_31, target_1)
and func_2(vinode_31, target_2)
and vinode_31.getType().hasName("const inode *")
and vinode_31.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
