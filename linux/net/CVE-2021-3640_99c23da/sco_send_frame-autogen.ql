/**
 * @name linux-99c23da0eed4fd20cae8243f2b51e10e66aa0951-sco_send_frame
 * @id cpp/linux/99c23da0eed4fd20cae8243f2b51e10e66aa0951/sco-send-frame
 * @description linux-99c23da0eed4fd20cae8243f2b51e10e66aa0951-sco_send_frame CVE-2021-3640
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vlen_283, FunctionCall target_2, ReturnStmt target_8) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("__memcpy")
		and target_1.getArgument(0) instanceof FunctionCall
		and target_1.getArgument(1).(VariableAccess).getType().hasName("void *")
		and target_1.getArgument(2).(VariableAccess).getTarget()=vlen_283
		and target_2.getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getArgument(2).(VariableAccess).getLocation())
		and target_1.getArgument(2).(VariableAccess).getLocation().isBefore(target_8.getExpr().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vmsg_283, Parameter vlen_283, Variable vskb_286, BlockStmt target_9, FunctionCall target_2) {
		target_2.getTarget().hasName("skb_put")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vskb_286
		and target_2.getArgument(1).(VariableAccess).getTarget()=vlen_283
		and target_2.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmsg_283
		and target_2.getParent().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vlen_283
		and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_9
}

/*predicate func_3(Parameter vmsg_283, Parameter vlen_283, Variable vskb_286, BlockStmt target_9, VariableAccess target_3) {
		target_3.getTarget()=vlen_283
		and target_3.getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("skb_put")
		and target_3.getParent().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_286
		and target_3.getParent().(FunctionCall).getArgument(0).(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vlen_283
		and target_3.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmsg_283
		and target_3.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_9
}

*/
predicate func_4(Parameter vmsg_283, PointerFieldAccess target_4) {
		target_4.getTarget().getName()="msg_flags"
		and target_4.getQualifier().(VariableAccess).getTarget()=vmsg_283
}

predicate func_5(Parameter vmsg_283, Parameter vlen_283, Variable vskb_286, Function func, IfStmt target_5) {
		target_5.getCondition().(FunctionCall).getTarget().hasName("memcpy_from_msg")
		and target_5.getCondition().(FunctionCall).getArgument(0) instanceof FunctionCall
		and target_5.getCondition().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmsg_283
		and target_5.getCondition().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vlen_283
		and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree_skb")
		and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_286
		and target_5.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

/*predicate func_6(Variable vskb_286, FunctionCall target_6) {
		target_6.getTarget().hasName("kfree_skb")
		and target_6.getArgument(0).(VariableAccess).getTarget()=vskb_286
}

*/
/*predicate func_7(FunctionCall target_10, Function func, ReturnStmt target_7) {
		target_7.getExpr().(UnaryMinusExpr).getValue()="-14"
		and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
		and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(Parameter vlen_283, ReturnStmt target_8) {
		target_8.getExpr().(VariableAccess).getTarget()=vlen_283
}

predicate func_9(Function func, BlockStmt target_9) {
		target_9.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
		and target_9.getStmt(1) instanceof ReturnStmt
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Parameter vmsg_283, Parameter vlen_283, FunctionCall target_10) {
		target_10.getTarget().hasName("memcpy_from_msg")
		and target_10.getArgument(0) instanceof FunctionCall
		and target_10.getArgument(1).(VariableAccess).getTarget()=vmsg_283
		and target_10.getArgument(2).(VariableAccess).getTarget()=vlen_283
}

from Function func, Parameter vmsg_283, Parameter vlen_283, Variable vskb_286, FunctionCall target_2, PointerFieldAccess target_4, IfStmt target_5, ReturnStmt target_8, BlockStmt target_9, FunctionCall target_10
where
not func_1(vlen_283, target_2, target_8)
and func_2(vmsg_283, vlen_283, vskb_286, target_9, target_2)
and func_4(vmsg_283, target_4)
and func_5(vmsg_283, vlen_283, vskb_286, func, target_5)
and func_8(vlen_283, target_8)
and func_9(func, target_9)
and func_10(vmsg_283, vlen_283, target_10)
and vmsg_283.getType().hasName("msghdr *")
and vlen_283.getType().hasName("int")
and vskb_286.getType().hasName("sk_buff *")
and vmsg_283.getFunction() = func
and vlen_283.getFunction() = func
and vskb_286.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
