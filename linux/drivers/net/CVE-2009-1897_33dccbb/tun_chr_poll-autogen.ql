/**
 * @name linux-33dccbb050bbe35b88ca8cf1228dcf3e4d4b3554-tun_chr_poll
 * @id cpp/linux/33dccbb050bbe35b88ca8cf1228dcf3e4d4b3554/tun-chr-poll
 * @description linux-33dccbb050bbe35b88ca8cf1228dcf3e4d4b3554-drivers/net/tun.c-tun_chr_poll CVE-2009-1897
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_2(Variable vmask_464, ExprStmt target_4, Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getTarget().hasName("__builtin_constant_p")
		and target_2.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(LogicalOrExpr).getAnOperand().(FunctionCall).getTarget().hasName("sock_writeable")
		and target_2.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(LogicalOrExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("sock *")
		and target_2.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(LogicalOrExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("test_and_set_bit")
		and target_2.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(LogicalOrExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("sock_writeable")
		and target_2.getCondition().(ConditionalExpr).getCondition().(FunctionCall).getArgument(0).(LogicalOrExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("sock *")
		and target_2.getCondition().(ConditionalExpr).getThen().(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(FunctionCall).getTarget().hasName("sock_writeable")
		and target_2.getCondition().(ConditionalExpr).getThen().(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("sock *")
		and target_2.getCondition().(ConditionalExpr).getThen().(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(FunctionCall).getTarget().hasName("sock_writeable")
		and target_2.getCondition().(ConditionalExpr).getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_2.getCondition().(ConditionalExpr).getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(IfStmt).getCondition().(VariableAccess).getType().hasName("int")
		and target_2.getCondition().(ConditionalExpr).getElse().(StmtExpr).getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(VariableAccess).getType().hasName("int")
		and target_2.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vmask_464
		and target_2.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue() instanceof BitwiseOrExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_4.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Function func, BitwiseOrExpr target_3) {
		target_3.getValue()="260"
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vmask_464, ExprStmt target_4) {
		target_4.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vmask_464
		and target_4.getExpr().(AssignOrExpr).getRValue().(BitwiseOrExpr).getValue()="65"
}

from Function func, Variable vmask_464, BitwiseOrExpr target_3, ExprStmt target_4
where
not func_2(vmask_464, target_4, func)
and func_3(func, target_3)
and func_4(vmask_464, target_4)
and vmask_464.getType().hasName("unsigned int")
and vmask_464.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
