/**
 * @name chromium-933b9fad3a5396495f52e44259bcbb61e7913311-ipcz__NodeLinkMemory__GetInitialRouterLinkState
 * @id cpp/chromium/933b9fad3a5396495f52e44259bcbb61e7913311/ipcznodelinkmemorygetinitialrouterlinkstate
 * @description chromium-933b9fad3a5396495f52e44259bcbb61e7913311-third_party/ipcz/src/ipcz/node_link_memory.cc-ipcz__NodeLinkMemory__GetInitialRouterLinkState CVE-2023-3732
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vstate_258, Variable vdescriptor_260) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("FromDescriptorUnsafe")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vdescriptor_260
	and target_0.getArgument(1).(VariableAccess).getTarget()=vstate_258
	and target_0.getParent().(ConstructorCall).getParent().(ReturnStmt).getExpr().(ConstructorCall).getArgument(1) instanceof ConstructorCall
)
}

predicate func_1(Variable vdescriptor_260, VariableAccess target_1) {
	target_1.getTarget()=vdescriptor_260
	and target_1.getParent().(ConstructorCall).getParent().(ConstructorCall).getArgument(1) instanceof ConstructorCall
}

predicate func_2(Variable vstate_258, VariableAccess target_2) {
	target_2.getTarget()=vstate_258
	and target_2.getParent().(ConstructorCall).getParent().(ConstructorCall).getArgument(1) instanceof ConstructorCall
}

predicate func_3(Variable vstate_258, Variable vdescriptor_260, ConstructorCall target_3) {
	target_3.getArgument(0).(VariableAccess).getTarget()=vdescriptor_260
	and target_3.getArgument(1).(VariableAccess).getTarget()=vstate_258
}

from Function func, Variable vstate_258, Variable vdescriptor_260, VariableAccess target_1, VariableAccess target_2, ConstructorCall target_3
where
not func_0(vstate_258, vdescriptor_260)
and func_1(vdescriptor_260, target_1)
and func_2(vstate_258, target_2)
and func_3(vstate_258, vdescriptor_260, target_3)
and vstate_258.getType().hasName("RouterLinkState *")
and vdescriptor_260.getType().hasName("FragmentDescriptor")
and vstate_258.(LocalVariable).getFunction() = func
and vdescriptor_260.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
