/**
 * @name linux-94062790aedb505bdda209b10bea47b294d6394f-tcp_send_fin
 * @id cpp/linux/94062790aedb505bdda209b10bea47b294d6394f/tcp-send-fin
 * @description linux-94062790aedb505bdda209b10bea47b294d6394f-net/ipv4/tcp_output.c-tcp_send_fin CVE-2024-36905
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_3537, ExprStmt target_3) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("sk_gfp_mask")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsk_3537
	and target_0.getArgument(1).(BitwiseOrExpr).getValue()="10272"
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alloc_skb_fclone")
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(BitwiseAndExpr).getValue()="320"
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="sk_allocation"
	and target_0.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_3537
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_3537, VariableAccess target_1) {
	target_1.getTarget()=vsk_3537
	and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alloc_skb_fclone")
	and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(BitwiseAndExpr).getValue()="320"
	and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="sk_allocation"
}

predicate func_2(Parameter vsk_3537, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="sk_allocation"
	and target_2.getQualifier().(VariableAccess).getTarget()=vsk_3537
}

predicate func_3(Parameter vsk_3537, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("sk_forced_mem_schedule")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_3537
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="truesize"
	and target_3.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
}

from Function func, Parameter vsk_3537, VariableAccess target_1, PointerFieldAccess target_2, ExprStmt target_3
where
not func_0(vsk_3537, target_3)
and func_1(vsk_3537, target_1)
and func_2(vsk_3537, target_2)
and func_3(vsk_3537, target_3)
and vsk_3537.getType().hasName("sock *")
and vsk_3537.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
