/**
 * @name linux-d5f9023fa61ee8b94f37a93f08e94b136cf1e463-bcm_delete_rx_op
 * @id cpp/linux/d5f9023fa61ee8b94f37a93f08e94b136cf1e463/bcm-delete-rx-op
 * @description linux-d5f9023fa61ee8b94f37a93f08e94b136cf1e463-net/can/bcm.c-bcm_delete_rx_op CVE-2021-3609
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalAndExpr target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("synchronize_rcu")
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func, LogicalAndExpr target_1) {
	target_1.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="can_id"
	and target_1.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_op *")
	and target_1.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="can_id"
	and target_1.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_msg_head *")
	and target_1.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ifindex"
	and target_1.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_op *")
	and target_1.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_op *")
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2048"
	and target_1.getRightOperand().(EqualityOperation).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getRightOperand().(EqualityOperation).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bcm_msg_head *")
	and target_1.getRightOperand().(EqualityOperation).getRightOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2048"
	and target_1.getEnclosingFunction() = func
}

from Function func, LogicalAndExpr target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
