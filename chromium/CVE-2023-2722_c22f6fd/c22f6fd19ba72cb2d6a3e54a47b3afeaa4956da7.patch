commit c22f6fd19ba72cb2d6a3e54a47b3afeaa4956da7	c22f6fd19ba72cb2d6a3e54a47b3afeaa4956da7
Author: Vinny Persky <vinnypersky@google.com>
Date:   Tue Apr 4 23:40:27 2023 +0000

    Fix manual fallback bubble crash on Clank due to no WebContents
    
    This CL fixes a manual fallback bubble crash on Clank when the user
    triggers the snackbar, but then closes the tab and tries to click "view
    card" on the snackbar in a new tab. In this scenario, the web contents
    are destroyed so it will crash.
    
    This CL ensures that if the original web contents are destroyed, it also
    destroys the snackbar so that the user can't trigger any further action
    on it.
    
    Bug: 1400905
    Change-Id: I0e14c049e15c6aa8851ab17a39493323c0ecaaf5
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4119951
    Reviewed-by: Christoph Schwering <schwering@google.com>
    Commit-Queue: Vinny Persky <vinnypersky@google.com>
    Cr-Commit-Position: refs/heads/main@{#1126317}

diff --git a/chrome/browser/ui/autofill/chrome_autofill_client.cc b/chrome/browser/ui/autofill/chrome_autofill_client.cc
index 0afb8a9466d1b..35cf2e60bce3b 100644
--- a/chrome/browser/ui/autofill/chrome_autofill_client.cc
+++ b/chrome/browser/ui/autofill/chrome_autofill_client.cc
@@ -110,6 +110,7 @@
 #include "chrome/browser/ui/android/autofill/card_name_fix_flow_view_android.h"
 #include "chrome/browser/ui/android/infobars/autofill_credit_card_filling_infobar.h"
 #include "chrome/browser/ui/android/infobars/autofill_offer_notification_infobar.h"
+#include "chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.h"
 #include "chrome/browser/ui/autofill/payments/offer_notification_controller_android.h"
 #include "components/autofill/core/browser/payments/autofill_credit_card_filling_infobar_delegate_mobile.h"
 #include "components/autofill/core/browser/payments/autofill_offer_notification_infobar_delegate_mobile.h"
@@ -994,7 +995,11 @@ void ChromeAutofillClient::OnVirtualCardDataAvailable(
   if (features::IsAutofillManualFallbackEnabled() ||
       base::FeatureList::IsEnabled(
           autofill::features::kAutofillEnableManualFallbackForVirtualCards)) {
-    (new AutofillSnackbarControllerImpl(web_contents()))->Show();
+    if (!autofill_snackbar_controller_impl_) {
+      autofill_snackbar_controller_impl_ =
+          std::make_unique<AutofillSnackbarControllerImpl>(web_contents());
+    }
+    autofill_snackbar_controller_impl_->Show();
   }
 #else
   VirtualCardManualFallbackBubbleControllerImpl::CreateForWebContents(
diff --git a/chrome/browser/ui/autofill/chrome_autofill_client.h b/chrome/browser/ui/autofill/chrome_autofill_client.h
index 69f42f5bf59ea..cb856ad0beaba 100644
--- a/chrome/browser/ui/autofill/chrome_autofill_client.h
+++ b/chrome/browser/ui/autofill/chrome_autofill_client.h
@@ -46,6 +46,9 @@ namespace autofill {
 struct AutofillErrorDialogContext;
 class AutofillOptimizationGuide;
 class AutofillPopupControllerImpl;
+#if BUILDFLAG(IS_ANDROID)
+class AutofillSnackbarControllerImpl;
+#endif  // BUILDFLAG(IS_ANDROID)
 struct VirtualCardEnrollmentFields;
 class VirtualCardEnrollmentManager;
 struct VirtualCardManualFallbackBubbleOptions;
@@ -318,6 +321,8 @@ class ChromeAutofillClient : public ContentAutofillClient,
   CardNameFixFlowControllerImpl card_name_fix_flow_controller_;
   SaveUpdateAddressProfileFlowManager save_update_address_profile_flow_manager_;
   TouchToFillCreditCardController touch_to_fill_credit_card_controller_{this};
+  std::unique_ptr<AutofillSnackbarControllerImpl>
+      autofill_snackbar_controller_impl_;
 #endif
   std::unique_ptr<CardUnmaskPromptControllerImpl> unmask_controller_;
   AutofillErrorDialogControllerImpl autofill_error_dialog_controller_;
diff --git a/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.cc b/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.cc
index f111dce991ed5..862647e034ddd 100644
--- a/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.cc
+++ b/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.cc
@@ -31,19 +31,13 @@ void AutofillSnackbarControllerImpl::Show() {
   base::UmaHistogramBoolean("Autofill.Snackbar.VirtualCard.Shown", true);
 }
 
-void AutofillSnackbarControllerImpl::Dismiss() {
-  if (!autofill_snackbar_view_)
-    return;
-  autofill_snackbar_view_->Dismiss();
-}
-
 void AutofillSnackbarControllerImpl::SetViewForTesting(
     AutofillSnackbarView* view) {
   autofill_snackbar_view_ = view;
 }
 
 void AutofillSnackbarControllerImpl::OnActionClicked() {
-  ManualFillingControllerImpl::GetOrCreate(web_contents_)
+  ManualFillingControllerImpl::GetOrCreate(GetWebContents())
       ->ShowAccessorySheetTab(autofill::AccessoryTabType::CREDIT_CARDS);
   base::UmaHistogramBoolean("Autofill.Snackbar.VirtualCard.ActionClicked",
                             true);
@@ -67,4 +61,12 @@ content::WebContents* AutofillSnackbarControllerImpl::GetWebContents() const {
   return web_contents_;
 }
 
+void AutofillSnackbarControllerImpl::Dismiss() {
+  if (!autofill_snackbar_view_) {
+    return;
+  }
+
+  autofill_snackbar_view_->Dismiss();
+}
+
 }  // namespace autofill
diff --git a/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.h b/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.h
index 708af68699fd3..fcc89fed3a2a7 100644
--- a/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.h
+++ b/chrome/browser/ui/autofill/payments/autofill_snackbar_controller_impl.h
@@ -28,7 +28,7 @@ class AutofillSnackbarControllerImpl : public AutofillSnackbarController {
   void Show();
   void SetViewForTesting(AutofillSnackbarView* view);
 
-  // AutofillSnackbarController implementation.
+  // AutofillSnackbarController:
   void OnActionClicked() override;
   void OnDismissed() override;
   std::u16string GetMessageText() const override;
@@ -41,6 +41,7 @@ class AutofillSnackbarControllerImpl : public AutofillSnackbarController {
   void Dismiss();
 
   raw_ptr<content::WebContents> web_contents_;
+
   raw_ptr<AutofillSnackbarView> autofill_snackbar_view_ = nullptr;
 };
 
