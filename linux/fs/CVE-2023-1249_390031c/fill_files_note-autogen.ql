/**
 * @name linux-390031c942116d4733310f0684beb8db19885fe6-fill_files_note
 * @id cpp/linux/390031c942116d4733310f0684beb8db19885fe6/fill-files-note
 * @description linux-390031c942116d4733310f0684beb8db19885fe6-fs/binfmt_elf.c-fill_files_note CVE-2023-1249
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr().(PointerFieldAccess).getTarget().getName()="mm"
	and target_0.getExpr().(PointerFieldAccess).getQualifier() instanceof FunctionCall
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Variable vvma_1647, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="vm_file"
	and target_1.getQualifier().(VariableAccess).getTarget()=vvma_1647
}

predicate func_2(Variable vvma_1647, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="vm_start"
	and target_2.getQualifier().(VariableAccess).getTarget()=vvma_1647
}

predicate func_3(Variable vvma_1647, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="vm_end"
	and target_3.getQualifier().(VariableAccess).getTarget()=vvma_1647
}

predicate func_4(Variable vvma_1647, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="vm_pgoff"
	and target_4.getQualifier().(VariableAccess).getTarget()=vvma_1647
}

predicate func_5(Variable vvma_1647, Variable vstart_end_ofs_1650, ExprStmt target_27, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vstart_end_ofs_1650
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="vm_pgoff"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1647
	and target_5.getLocation().isBefore(target_27.getLocation())
}

predicate func_7(Function func) {
exists(PointerFieldAccess target_7 |
	target_7.getTarget().getName()="vma_count"
	and target_7.getQualifier().(VariableAccess).getType().hasName("coredump_params *")
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(Function func) {
exists(AssignExpr target_8 |
	target_8.getLValue().(VariableAccess).getType().hasName("int")
	and target_8.getRValue() instanceof Literal
	and target_8.getEnclosingFunction() = func)
}

predicate func_9(Function func) {
exists(RelationalOperation target_9 |
	 (target_9 instanceof GTExpr or target_9 instanceof LTExpr)
	and target_9.getLesserOperand().(VariableAccess).getType().hasName("int")
	and target_9.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="vma_count"
	and target_9.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("coredump_params *")
	and target_9.getEnclosingFunction() = func)
}

predicate func_10(Function func) {
exists(PostfixIncrExpr target_10 |
	target_10.getOperand().(VariableAccess).getType().hasName("int")
	and target_10.getEnclosingFunction() = func)
}

predicate func_12(Function func) {
exists(AddressOfExpr target_12 |
	target_12.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="vma_meta"
	and target_12.getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("coredump_params *")
	and target_12.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getType().hasName("int")
	and target_12.getEnclosingFunction() = func)
}

predicate func_17(Function func) {
exists(PointerFieldAccess target_17 |
	target_17.getTarget().getName()="vma_count"
	and target_17.getQualifier().(VariableAccess).getType().hasName("coredump_params *")
	and target_17.getEnclosingFunction() = func)
}

predicate func_20(Function func, FunctionCall target_20) {
	target_20.getTarget().hasName("get_current")
	and target_20.getEnclosingFunction() = func
}

predicate func_22(Variable vmm_1646, ValueFieldAccess target_22) {
	target_22.getTarget().getName()="map_count"
	and target_22.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_22.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_1646
	and target_22.getParent().(AssignExpr).getRValue() = target_22
	and target_22.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_23(Variable vmm_1646, Variable vvma_1647, AssignExpr target_23) {
	target_23.getLValue().(VariableAccess).getTarget()=vvma_1647
	and target_23.getRValue().(ValueFieldAccess).getTarget().getName()="mmap"
	and target_23.getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_23.getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_1646
}

predicate func_24(Variable vvma_1647, EqualityOperation target_24) {
	target_24.getLeftOperand().(VariableAccess).getTarget()=vvma_1647
	and target_24.getRightOperand() instanceof Literal
}

predicate func_25(Variable vvma_1647, AssignExpr target_25) {
	target_25.getLValue().(VariableAccess).getTarget()=vvma_1647
	and target_25.getRValue().(PointerFieldAccess).getTarget().getName()="vm_next"
	and target_25.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1647
}

predicate func_26(Variable vmm_1646, ValueFieldAccess target_26) {
	target_26.getTarget().getName()="map_count"
	and target_26.getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_26.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmm_1646
}

predicate func_27(Function func, ExprStmt target_27) {
	target_27.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_27.getEnclosingFunction() = func
}

from Function func, Variable vmm_1646, Variable vvma_1647, Variable vstart_end_ofs_1650, Initializer target_0, PointerFieldAccess target_1, PointerFieldAccess target_2, PointerFieldAccess target_3, PointerFieldAccess target_4, ExprStmt target_5, FunctionCall target_20, ValueFieldAccess target_22, AssignExpr target_23, EqualityOperation target_24, AssignExpr target_25, ValueFieldAccess target_26, ExprStmt target_27
where
func_0(func, target_0)
and func_1(vvma_1647, target_1)
and func_2(vvma_1647, target_2)
and func_3(vvma_1647, target_3)
and func_4(vvma_1647, target_4)
and func_5(vvma_1647, vstart_end_ofs_1650, target_27, target_5)
and not func_7(func)
and not func_8(func)
and not func_9(func)
and not func_10(func)
and not func_12(func)
and not func_17(func)
and func_20(func, target_20)
and func_22(vmm_1646, target_22)
and func_23(vmm_1646, vvma_1647, target_23)
and func_24(vvma_1647, target_24)
and func_25(vvma_1647, target_25)
and func_26(vmm_1646, target_26)
and func_27(func, target_27)
and vmm_1646.getType().hasName("mm_struct *")
and vvma_1647.getType().hasName("vm_area_struct *")
and vstart_end_ofs_1650.getType().hasName("long *")
and vmm_1646.(LocalVariable).getFunction() = func
and vvma_1647.(LocalVariable).getFunction() = func
and vstart_end_ofs_1650.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
