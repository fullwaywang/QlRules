/**
 * @name linux-9c0530e898f384c5d279bfcebd8bb17af1105873-adis_update_scan_mode_burst
 * @id cpp/linux/9c0530e898f384c5d279bfcebd8bb17af1105873/adis-update-scan-mode-burst
 * @description linux-9c0530e898f384c5d279bfcebd8bb17af1105873-drivers/iio/imu/adis_buffer.c-adis_update_scan_mode_burst CVE-2019-19061
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vadis_25, NotExpr target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="xfer"
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadis_25
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3)
}

predicate func_1(Variable vadis_25, NotExpr target_3, ExprStmt target_4) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="xfer"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadis_25
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(NotExpr target_3, Function func, ReturnStmt target_2) {
		target_2.getExpr().(UnaryMinusExpr).getValue()="-12"
		and target_2.getParent().(IfStmt).getCondition()=target_3
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vadis_25, NotExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="buffer"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadis_25
}

predicate func_4(Variable vadis_25, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u8 *")
		and target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="buffer"
		and target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadis_25
		and target_4.getExpr().(AssignExpr).getRValue().(PointerArithmeticOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vadis_25, ReturnStmt target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(vadis_25, target_3)
and not func_1(vadis_25, target_3, target_4)
and func_2(target_3, func, target_2)
and func_3(vadis_25, target_3)
and func_4(vadis_25, target_4)
and vadis_25.getType().hasName("adis *")
and vadis_25.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
