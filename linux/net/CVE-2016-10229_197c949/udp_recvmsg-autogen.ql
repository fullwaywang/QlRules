/**
 * @name linux-197c949e7798fbf28cfadc69d9ca0c2abbf93191-udp_recvmsg
 * @id cpp/linux/197c949e7798fbf28cfadc69d9ca0c2abbf93191/udp-recvmsg
 * @description linux-197c949e7798fbf28cfadc69d9ca0c2abbf93191-net/ipv4/udp.c-udp_recvmsg CVE-2016-10229
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(LogicalOrExpr target_5, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
		and target_0.getExpr().(AssignExpr).getRValue().(NotExpr).getOperand() instanceof FunctionCall
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func) {
	exists(NotExpr target_1 |
		target_1.getOperand().(VariableAccess).getType().hasName("bool")
		and target_1.getParent().(IfStmt).getThen() instanceof GotoStmt
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(ExprStmt target_6, Function func) {
	exists(LogicalOrExpr target_2 |
		target_2.getAnOperand().(VariableAccess).getType().hasName("bool")
		and target_2.getAnOperand() instanceof FunctionCall
		and target_2.getParent().(IfStmt).getThen()=target_6
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vskb_1269, FunctionCall target_3) {
		target_3.getTarget().hasName("udp_lib_checksum_complete")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vskb_1269
		and target_3.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_4(Variable vskb_1269, ExprStmt target_6, FunctionCall target_4) {
		target_4.getTarget().hasName("skb_csum_unnecessary")
		and target_4.getArgument(0).(VariableAccess).getTarget()=vskb_1269
		and target_4.getParent().(IfStmt).getThen()=target_6
}

predicate func_5(Variable vskb_1269, LogicalOrExpr target_5) {
		target_5.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_5.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_5.getAnOperand().(PointerFieldAccess).getTarget().getName()="partial_cov"
		and target_5.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
		and target_5.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1269
}

predicate func_6(Variable vskb_1269, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("skb_copy_datagram_msg")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_1269
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getType() instanceof LongType
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getValue()="8"
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("msghdr *")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vskb_1269, FunctionCall target_3, FunctionCall target_4, LogicalOrExpr target_5, ExprStmt target_6
where
not func_0(target_5, func)
and not func_1(func)
and not func_2(target_6, func)
and func_3(vskb_1269, target_3)
and func_4(vskb_1269, target_6, target_4)
and func_5(vskb_1269, target_5)
and func_6(vskb_1269, target_6)
and vskb_1269.getType().hasName("sk_buff *")
and vskb_1269.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
