/**
 * @name linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-check_helper_mem_access
 * @id cpp/linux/c25b2ae136039ffa820c26138ed4a5e5f3ab3841/check-helper-mem-access
 * @description linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-kernel/bpf/verifier.c-check_helper_mem_access CVE-2022-23222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_4(Function func, StringLiteral target_4) {
	target_4.getValue()="R%d type=%s expected=%s\n"
	and not target_4.getValue()="R%d type=%s "
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vreg_4809, Parameter venv_4805, ExprStmt target_11) {
exists(FunctionCall target_5 |
	target_5.getTarget().hasName("reg_type_str")
	and target_5.getArgument(0).(VariableAccess).getTarget()=venv_4805
	and target_5.getArgument(1).(PointerFieldAccess).getTarget().getName()="type"
	and target_5.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4809
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4805
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3) instanceof ArrayExpr
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4) instanceof ArrayExpr
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_6(Parameter venv_4805, PointerFieldAccess target_12) {
exists(ExprStmt target_6 |
	target_6.getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4805
	and target_6.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="expected=%s\n"
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("reg_type_str")
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4805
	and target_6.getExpr().(FunctionCall).getArgument(2).(FunctionCall).getArgument(1) instanceof EnumConstantAccess
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_12)
}

predicate func_7(Variable vreg_4809, Variable vreg_type_str, PointerFieldAccess target_7) {
	target_7.getTarget().getName()="type"
	and target_7.getQualifier().(VariableAccess).getTarget()=vreg_4809
	and target_7.getParent().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vreg_type_str
}

predicate func_9(Variable vreg_4809, Variable vreg_type_str, Parameter venv_4805, ArrayExpr target_9) {
	target_9.getArrayBase().(VariableAccess).getTarget()=vreg_type_str
	and target_9.getArrayOffset().(PointerFieldAccess).getTarget().getName()="type"
	and target_9.getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4809
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4805
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vreg_type_str
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(ArrayExpr).getArrayOffset() instanceof EnumConstantAccess
}

/*predicate func_10(Variable vreg_4809, Variable vreg_type_str, Parameter venv_4805, ArrayExpr target_10) {
	target_10.getArrayBase().(VariableAccess).getTarget()=vreg_type_str
	and target_10.getArrayOffset() instanceof EnumConstantAccess
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4805
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vreg_type_str
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="type"
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4809
}

*/
predicate func_11(Parameter venv_4805, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4805
	and target_11.getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
	and target_11.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getExpr().(FunctionCall).getArgument(3) instanceof ArrayExpr
	and target_11.getExpr().(FunctionCall).getArgument(4) instanceof ArrayExpr
}

predicate func_12(Variable vreg_4809, PointerFieldAccess target_12) {
	target_12.getTarget().getName()="type"
	and target_12.getQualifier().(VariableAccess).getTarget()=vreg_4809
}

from Function func, Variable vreg_4809, Variable vreg_type_str, Parameter venv_4805, StringLiteral target_4, PointerFieldAccess target_7, ArrayExpr target_9, ExprStmt target_11, PointerFieldAccess target_12
where
func_4(func, target_4)
and not func_5(vreg_4809, venv_4805, target_11)
and not func_6(venv_4805, target_12)
and func_7(vreg_4809, vreg_type_str, target_7)
and func_9(vreg_4809, vreg_type_str, venv_4805, target_9)
and func_11(venv_4805, target_11)
and func_12(vreg_4809, target_12)
and vreg_4809.getType().hasName("bpf_reg_state *")
and vreg_type_str.getType() instanceof ArrayType
and venv_4805.getType().hasName("bpf_verifier_env *")
and vreg_4809.(LocalVariable).getFunction() = func
and not vreg_type_str.getParentScope+() = func
and venv_4805.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
