/**
 * @name linux-3ce5efad47b62c57a4f5c54248347085a750ce0e-nr_recvmsg
 * @id cpp/linux/3ce5efad47b62c57a4f5c54248347085a750ce0e/nr-recvmsg
 * @description linux-3ce5efad47b62c57a4f5c54248347085a750ce0e-net/netrom/af_netrom.c-nr_recvmsg CVE-2013-3232
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsax_1138, EqualityOperation target_1) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsax_1138
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1)
}

predicate func_1(Variable vsax_1138, EqualityOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vsax_1138
	and target_1.getRightOperand().(Literal).getValue()="0"
}

from Function func, Variable vsax_1138, EqualityOperation target_1
where
not func_0(vsax_1138, target_1)
and func_1(vsax_1138, target_1)
and vsax_1138.getType().hasName("sockaddr_ax25 *")
and vsax_1138.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
