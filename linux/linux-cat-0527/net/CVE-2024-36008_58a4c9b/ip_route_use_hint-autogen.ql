/**
 * @name linux-58a4c9b1e5a3e53c9148e80b90e1e43897ce77d1-ip_route_use_hint
 * @id cpp/linux/58a4c9b1e5a3e53c9148e80b90e1e43897ce77d1/ip-route-use-hint
 * @description linux-58a4c9b1e5a3e53c9148e80b90e1e43897ce77d1-net/ipv4/route.c-ip_route_use_hint CVE-2024-36008
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vin_dev_2163, IfStmt target_1, LogicalAndExpr target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vin_dev_2163
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ipv4_is_multicast")
	and target_1.getCondition().(LogicalOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("__be32")
	and target_1.getCondition().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("ipv4_is_lbcast")
	and target_1.getCondition().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("__be32")
	and target_1.getThen().(GotoStmt).getName() ="martian_source"
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vin_dev_2163, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(FunctionCall).getTarget().hasName("ipv4_is_loopback")
	and target_3.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("__be32")
	and target_3.getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_3.getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("ipv4_devconf_get")
	and target_3.getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vin_dev_2163
}

from Function func, Variable vin_dev_2163, IfStmt target_1, LogicalAndExpr target_3
where
not func_0(vin_dev_2163, target_1, target_3, func)
and func_1(func, target_1)
and func_3(vin_dev_2163, target_3)
and vin_dev_2163.getType().hasName("in_device *")
and vin_dev_2163.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
