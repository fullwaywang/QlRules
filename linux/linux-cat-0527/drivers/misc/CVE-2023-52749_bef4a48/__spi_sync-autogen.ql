/**
 * @name linux-bef4a48f4ef798c4feddf045d49e53c8a97d5e37-__spi_sync
 * @id cpp/linux/bef4a48f4ef798c4feddf045d49e53c8a97d5e37/--spi-sync
 * @description linux-bef4a48f4ef798c4feddf045d49e53c8a97d5e37-drivers/spi/spi.c-__spi_sync CVE-2023-52749
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vctlr_4188, ExprStmt target_1, AsmStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__spi_check_suspended")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctlr_4188
	and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-108"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getChild(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("__spi_validate")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("spi_device *")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("spi_message *")
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vctlr_4188, AsmStmt target_3) {
	target_3.getChild(0).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_3.getChild(1).(PointerFieldAccess).getTarget().getName()="pcpu_statistics"
	and target_3.getChild(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctlr_4188
}

from Function func, Variable vctlr_4188, ExprStmt target_1, AsmStmt target_3
where
not func_0(vctlr_4188, target_1, target_3, func)
and func_1(func, target_1)
and func_3(vctlr_4188, target_3)
and vctlr_4188.getType().hasName("spi_controller *")
and vctlr_4188.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
