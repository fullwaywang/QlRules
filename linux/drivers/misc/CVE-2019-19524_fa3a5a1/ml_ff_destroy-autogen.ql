/**
 * @name linux-fa3a5a1880c91bb92594ad42dfe9eedad7996b86-ml_ff_destroy
 * @id cpp/linux/fa3a5a1880c91bb92594ad42dfe9eedad7996b86/ml-ff-destroy
 * @description linux-fa3a5a1880c91bb92594ad42dfe9eedad7996b86-drivers/input/ff-memless.c-ml_ff_destroy CVE-2019-19524
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vml_490, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("del_timer_sync")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="timer"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vml_490
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vml_490, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="private"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vml_490
}

from Function func, Variable vml_490, ExprStmt target_1
where
not func_0(vml_490, target_1, func)
and func_1(vml_490, target_1)
and vml_490.getType().hasName("ml_device *")
and vml_490.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
