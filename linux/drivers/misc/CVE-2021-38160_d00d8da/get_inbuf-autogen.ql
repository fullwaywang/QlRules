/**
 * @name linux-d00d8da5869a2608e97cfede094dfc5e11462a46-get_inbuf
 * @id cpp/linux/d00d8da5869a2608e97cfede094dfc5e11462a46/get-inbuf
 * @description linux-d00d8da5869a2608e97cfede094dfc5e11462a46-get_inbuf CVE-2021-38160
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbuf_470, Variable vlen_471, AddressOfExpr target_2) {
	exists(BuiltInChooseExpr target_0 |
		target_0.getChild(0).(LogicalAndExpr).getValue()="0"
		and target_0.getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_471
		and target_0.getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="size"
		and target_0.getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_470
		and target_0.getChild(1).(ConditionalExpr).getThen().(VariableAccess).getTarget()=vlen_471
		and target_0.getChild(1).(ConditionalExpr).getElse().(PointerFieldAccess).getTarget().getName()="size"
		and target_0.getChild(1).(ConditionalExpr).getElse().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_470
		and target_0.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("size_t")
		and target_0.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("size_t")
		and target_0.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getThen().(VariableAccess).getType().hasName("size_t")
		and target_0.getChild(2).(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(ConditionalExpr).getElse().(VariableAccess).getType().hasName("size_t")
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="len"
		and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_470
		and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getChild(1).(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vbuf_470, Variable vlen_471, VariableAccess target_1) {
		target_1.getTarget()=vlen_471
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="len"
		and target_1.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuf_470
}

predicate func_2(Variable vlen_471, AddressOfExpr target_2) {
		target_2.getOperand().(VariableAccess).getTarget()=vlen_471
}

from Function func, Variable vbuf_470, Variable vlen_471, VariableAccess target_1, AddressOfExpr target_2
where
not func_0(vbuf_470, vlen_471, target_2)
and func_1(vbuf_470, vlen_471, target_1)
and func_2(vlen_471, target_2)
and vbuf_470.getType().hasName("port_buffer *")
and vlen_471.getType().hasName("unsigned int")
and vbuf_470.(LocalVariable).getFunction() = func
and vlen_471.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
