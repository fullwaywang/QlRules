/**
 * @name linux-32c231164b762dddefa13af5a0101032c70b50ef-l2tp_ip_bind
 * @id cpp/linux/32c231164b762dddefa13af5a0101032c70b50ef/l2tp-ip-bind
 * @description linux-32c231164b762dddefa13af5a0101032c70b50ef-net/l2tp/l2tp_ip.c-l2tp_ip_bind CVE-2016-10200
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_246, IfStmt target_2, IfStmt target_0) {
	target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sock_flag")
	and target_0.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_246
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_0.getLocation().isBefore(target_2.getLocation())
}

predicate func_1(NotExpr target_3, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="out"
	and target_1.getParent().(IfStmt).getCondition()=target_3
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, IfStmt target_2) {
	target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getType() instanceof LongType
	and target_2.getCondition().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getValue()="16"
	and target_2.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vsk_246, NotExpr target_3) {
	target_3.getOperand().(FunctionCall).getTarget().hasName("sock_flag")
	and target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_246
}

from Function func, Parameter vsk_246, IfStmt target_0, IfStmt target_2, NotExpr target_3
where
func_0(vsk_246, target_2, target_0)
and not func_1(target_3, func)
and func_2(func, target_2)
and func_3(vsk_246, target_3)
and vsk_246.getType().hasName("sock *")
and vsk_246.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
