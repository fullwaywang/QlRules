/**
 * @name linux-318aaf34f1179b39fa9c30fa0f3288b645beee39-sas_eh_handle_sas_errors
 * @id cpp/linux/318aaf34f1179b39fa9c30fa0f3288b645beee39/sas-eh-handle-sas-errors
 * @description linux-318aaf34f1179b39fa9c30fa0f3288b645beee39-drivers/scsi/libsas/sas_scsi_host.c-sas_eh_handle_sas_errors CVE-2018-10021
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcmd_573, AddressOfExpr target_4, FunctionCall target_0) {
	target_0.getTarget().hasName("sas_eh_defer_cmd")
	and not target_0.getTarget().hasName("sas_eh_finish_cmd")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vcmd_573
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
}

predicate func_1(Variable vcmd_573, ExprStmt target_7, FunctionCall target_1) {
	target_1.getTarget().hasName("sas_eh_defer_cmd")
	and not target_1.getTarget().hasName("sas_eh_finish_cmd")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vcmd_573
	and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_2(Variable vcmd_573, PointerFieldAccess target_8, ExprStmt target_9, FunctionCall target_2) {
	target_2.getTarget().hasName("sas_eh_defer_cmd")
	and not target_2.getTarget().hasName("sas_eh_finish_cmd")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vcmd_573
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

predicate func_3(Variable vcmd_573, VariableAccess target_10) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("sas_eh_finish_cmd")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcmd_573
	and target_3.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_10)
}

predicate func_4(Variable vcmd_573, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="eh_entry"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcmd_573
	and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del_init")
}

predicate func_7(Variable vcmd_573, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sas_recover_lu")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sas_task *")
	and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcmd_573
}

predicate func_8(Variable vcmd_573, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="lun"
	and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="device"
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcmd_573
}

predicate func_9(Variable vcmd_573, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("sas_scsi_clear_queue_lu")
	and target_9.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("list_head *")
	and target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcmd_573
}

predicate func_10(Variable vres_574, VariableAccess target_10) {
	target_10.getTarget()=vres_574
}

from Function func, Variable vcmd_573, Variable vres_574, FunctionCall target_0, FunctionCall target_1, FunctionCall target_2, AddressOfExpr target_4, ExprStmt target_7, PointerFieldAccess target_8, ExprStmt target_9, VariableAccess target_10
where
func_0(vcmd_573, target_4, target_0)
and func_1(vcmd_573, target_7, target_1)
and func_2(vcmd_573, target_8, target_9, target_2)
and not func_3(vcmd_573, target_10)
and func_4(vcmd_573, target_4)
and func_7(vcmd_573, target_7)
and func_8(vcmd_573, target_8)
and func_9(vcmd_573, target_9)
and func_10(vres_574, target_10)
and vcmd_573.getType().hasName("scsi_cmnd *")
and vres_574.getType().hasName("task_disposition")
and vcmd_573.(LocalVariable).getFunction() = func
and vres_574.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
