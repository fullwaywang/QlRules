/**
 * @name linux-21f8aaee0c62708654988ce092838aa7df4d25d8-ath_tx_aggr_sleep
 * @id cpp/linux/21f8aaee0c62708654988ce092838aa7df4d25d8/ath-tx-aggr-sleep
 * @description linux-21f8aaee0c62708654988ce092838aa7df4d25d8-drivers/net/wireless/ath/ath9k/xmit.c-ath_tx_aggr_sleep CVE-2014-2672
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsc_1435, Variable vtxq_1440, NotExpr target_2, ExprStmt target_3) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("ath_txq_unlock")
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsc_1435
		and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vtxq_1440
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(NotExpr target_2, Function func, ContinueStmt target_1) {
		target_1.getParent().(IfStmt).getCondition()=target_2
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, NotExpr target_2) {
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="sched"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ath_atx_tid *")
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vsc_1435, Variable vtxq_1440, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("ath_txq_lock")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsc_1435
		and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vtxq_1440
}

from Function func, Parameter vsc_1435, Variable vtxq_1440, ContinueStmt target_1, NotExpr target_2, ExprStmt target_3
where
not func_0(vsc_1435, vtxq_1440, target_2, target_3)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and func_3(vsc_1435, vtxq_1440, target_3)
and vsc_1435.getType().hasName("ath_softc *")
and vtxq_1440.getType().hasName("ath_txq *")
and vsc_1435.getFunction() = func
and vtxq_1440.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
