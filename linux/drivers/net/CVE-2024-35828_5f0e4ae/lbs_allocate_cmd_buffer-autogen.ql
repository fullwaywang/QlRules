/**
 * @name linux-5f0e4aede01cb01fa633171f0533affd25328c3a-lbs_allocate_cmd_buffer
 * @id cpp/linux/5f0e4aede01cb01fa633171f0533affd25328c3a/lbs-allocate-cmd-buffer
 * @description linux-5f0e4aede01cb01fa633171f0533affd25328c3a-drivers/net/wireless/marvell/libertas/cmd.c-lbs_allocate_cmd_buffer CVE-2024-35828
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_7, Function func) {
exists(ReturnStmt target_0 |
	target_0.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_7.getLocation()))
}

predicate func_1(Variable vi_1117, Variable vcmdarray_1118, AddressOfExpr target_8, Function func) {
exists(ForStmt target_1 |
	target_1.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vi_1117
	and target_1.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof Literal
	and target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vi_1117
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="10"
	and target_1.getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vi_1117
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(ValueFieldAccess).getTarget().getName()="cmdbuf"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcmdarray_1118
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1117
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="cmdbuf"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="cmdbuf"
	and target_1.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_8.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_1.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

/*predicate func_2(Variable vi_1117, AddressOfExpr target_8) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getTarget()=vi_1117
	and target_2.getRValue() instanceof Literal
	and target_8.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_2.getLValue().(VariableAccess).getLocation()))
}

*/
predicate func_3(Parameter vpriv_1113, ExprStmt target_9, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="cmd_array"
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_1113
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt
	and target_9.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vpriv_1113, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cmd_array"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_1113
	and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_6(Variable vret_1115, AssignExpr target_6) {
	target_6.getLValue().(VariableAccess).getTarget()=vret_1115
	and target_6.getRValue() instanceof Literal
}

predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr() instanceof AssignExpr
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vi_1117, Variable vcmdarray_1118, AddressOfExpr target_8) {
	target_8.getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcmdarray_1118
	and target_8.getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1117
}

predicate func_9(Parameter vpriv_1113, Variable vi_1117, Variable vcmdarray_1118, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("lbs_cleanup_and_insert_cmd")
	and target_9.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpriv_1113
	and target_9.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vcmdarray_1118
	and target_9.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1117
}

from Function func, Parameter vpriv_1113, Variable vret_1115, Variable vi_1117, Variable vcmdarray_1118, AssignExpr target_6, ExprStmt target_7, AddressOfExpr target_8, ExprStmt target_9
where
not func_0(target_7, func)
and not func_1(vi_1117, vcmdarray_1118, target_8, func)
and not func_3(vpriv_1113, target_9, func)
and not func_4(vpriv_1113, func)
and func_6(vret_1115, target_6)
and func_7(func, target_7)
and func_8(vi_1117, vcmdarray_1118, target_8)
and func_9(vpriv_1113, vi_1117, vcmdarray_1118, target_9)
and vpriv_1113.getType().hasName("lbs_private *")
and vret_1115.getType().hasName("int")
and vi_1117.getType().hasName("u32")
and vcmdarray_1118.getType().hasName("cmd_ctrl_node *")
and vpriv_1113.getFunction() = func
and vret_1115.(LocalVariable).getFunction() = func
and vi_1117.(LocalVariable).getFunction() = func
and vcmdarray_1118.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
