/**
 * @name linux-ad67b74d2469d9b82aaa572d76474c95bc484d57-pointer
 * @id cpp/linux/ad67b74d2469d9b82aaa572d76474c95bc484d57/pointer
 * @description linux-ad67b74d2469d9b82aaa572d76474c95bc484d57-lib/vsprintf.c-pointer CVE-2018-20449
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vend_1759, Parameter vptr_1759, Parameter vspec_1760, Parameter vbuf_1759, FunctionCall target_0) {
		target_0.getTarget().hasName("number")
		and not target_0.getTarget().hasName("ptr_to_id")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_1759
		and target_0.getArgument(1).(VariableAccess).getTarget()=vend_1759
		and target_0.getArgument(2).(VariableAccess).getTarget()=vptr_1759
		and target_0.getArgument(3).(VariableAccess).getTarget()=vspec_1760
}

predicate func_1(Parameter vspec_1760, Function func, ExprStmt target_1) {
		target_1.getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flags"
		and target_1.getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_1.getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="32"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vspec_1760, Variable vdefault_width_1762, Function func, IfStmt target_2) {
		target_2.getCondition().(EqualityOperation).getAnOperand().(ValueFieldAccess).getTarget().getName()="field_width"
		and target_2.getCondition().(EqualityOperation).getAnOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_2.getCondition().(EqualityOperation).getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="field_width"
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vdefault_width_1762
		and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flags"
		and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="16"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

/*predicate func_3(Parameter vspec_1760, Variable vdefault_width_1762, EqualityOperation target_6, ExprStmt target_4, ExprStmt target_7, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="field_width"
		and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vdefault_width_1762
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_3.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_7.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
}

*/
predicate func_4(Parameter vspec_1760, ExprStmt target_4) {
		target_4.getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flags"
		and target_4.getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_4.getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="16"
}

predicate func_5(Parameter vspec_1760, Function func, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="base"
		and target_5.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_5.getExpr().(AssignExpr).getRValue().(Literal).getValue()="16"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(BlockStmt target_8, Function func, EqualityOperation target_6) {
		target_6.getAnOperand() instanceof ValueFieldAccess
		and target_6.getAnOperand() instanceof UnaryMinusExpr
		and target_6.getParent().(IfStmt).getThen()=target_8
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Parameter vspec_1760, Variable vdefault_width_1762, EqualityOperation target_9, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="field_width"
		and target_7.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_7.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vdefault_width_1762
		and target_7.getParent().(IfStmt).getCondition()=target_9
}

predicate func_8(Function func, BlockStmt target_8) {
		target_8.getStmt(0) instanceof ExprStmt
		and target_8.getStmt(1) instanceof ExprStmt
		and target_8.getEnclosingFunction() = func
}

predicate func_9(Parameter vspec_1760, ExprStmt target_7, EqualityOperation target_9) {
		target_9.getAnOperand().(ValueFieldAccess).getTarget().getName()="field_width"
		and target_9.getAnOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vspec_1760
		and target_9.getAnOperand().(UnaryMinusExpr).getValue()="-1"
		and target_9.getParent().(IfStmt).getThen()=target_7
}

from Function func, Parameter vend_1759, Parameter vptr_1759, Parameter vspec_1760, Variable vdefault_width_1762, Parameter vbuf_1759, FunctionCall target_0, ExprStmt target_1, IfStmt target_2, ExprStmt target_4, ExprStmt target_5, EqualityOperation target_6, ExprStmt target_7, BlockStmt target_8, EqualityOperation target_9
where
func_0(vend_1759, vptr_1759, vspec_1760, vbuf_1759, target_0)
and func_1(vspec_1760, func, target_1)
and func_2(vspec_1760, vdefault_width_1762, func, target_2)
and func_4(vspec_1760, target_4)
and func_5(vspec_1760, func, target_5)
and func_6(target_8, func, target_6)
and func_7(vspec_1760, vdefault_width_1762, target_9, target_7)
and func_8(func, target_8)
and func_9(vspec_1760, target_7, target_9)
and vend_1759.getType().hasName("char *")
and vptr_1759.getType().hasName("void *")
and vspec_1760.getType().hasName("printf_spec")
and vdefault_width_1762.getType().hasName("const int")
and vbuf_1759.getType().hasName("char *")
and vend_1759.getFunction() = func
and vptr_1759.getFunction() = func
and vspec_1760.getFunction() = func
and vdefault_width_1762.(LocalVariable).getFunction() = func
and vbuf_1759.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
