/**
 * @name linux-d872e7b5fe38f325f5206b6872746fa02c2b4819-pm8001_exec_internal_tmf_task
 * @id cpp/linux/d872e7b5fe38f325f5206b6872746fa02c2b4819/pm8001-exec-internal-tmf-task
 * @description linux-d872e7b5fe38f325f5206b6872746fa02c2b4819-drivers/scsi/pm8001/pm8001_sas.c-pm8001_exec_internal_tmf_task CVE-2022-48791
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BitwiseAndExpr target_1, Function func) {
exists(IfStmt target_0 |
	exists(ExprStmt obj_0 | obj_0=target_0.getThen() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="task"
				and obj_2.getQualifier().(VariableAccess).getType().hasName("pm8001_ccb_info *")
			)
			and obj_1.getRValue().(Literal).getValue()="0"
		)
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getParent() |
		exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
			obj_4.getThen().(BlockStmt).getStmt(2)=target_0
			and obj_4.getCondition()=target_1
		)
	)
	and target_0.getCondition().(VariableAccess).getType().hasName("pm8001_ccb_info *")
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Function func, BitwiseAndExpr target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getLeftOperand() |
		obj_0.getTarget().getName()="task_state_flags"
		and obj_0.getQualifier().(VariableAccess).getTarget().getType().hasName("sas_task *")
	)
	and target_1.getRightOperand().(Literal).getValue()="4"
	and target_1.getEnclosingFunction() = func
}

from Function func, BitwiseAndExpr target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
