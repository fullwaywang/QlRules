/**
 * @name linux-b27d47950e481f292c0a5ad57357edb9d95d03ba-xennet_get_responses
 * @id cpp/linux/b27d47950e481f292c0a5ad57357edb9d95d03ba/xennet-get-responses
 * @description linux-b27d47950e481f292c0a5ad57357edb9d95d03ba-drivers/net/xen-netfront.c-xennet_get_responses CVE-2021-28712
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vqueue_939) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("xennet_set_rx_rsp_cons")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vqueue_939
	and target_0.getArgument(1) instanceof AddExpr)
}

predicate func_1(Variable vcons_946, Variable vslots_954, AddExpr target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vcons_946
	and target_1.getRightOperand().(VariableAccess).getTarget()=vslots_954
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue() instanceof ValueFieldAccess
}

predicate func_2(Parameter vqueue_939, VariableAccess target_2) {
	target_2.getTarget()=vqueue_939
}

predicate func_3(Parameter vqueue_939, AssignExpr target_3) {
	target_3.getLValue().(ValueFieldAccess).getTarget().getName()="rsp_cons"
	and target_3.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rx"
	and target_3.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vqueue_939
	and target_3.getRValue() instanceof AddExpr
}

from Function func, Variable vcons_946, Variable vslots_954, Parameter vqueue_939, AddExpr target_1, VariableAccess target_2, AssignExpr target_3
where
not func_0(vqueue_939)
and func_1(vcons_946, vslots_954, target_1)
and func_2(vqueue_939, target_2)
and func_3(vqueue_939, target_3)
and vcons_946.getType().hasName("RING_IDX")
and vslots_954.getType().hasName("int")
and vqueue_939.getType().hasName("netfront_queue *")
and vcons_946.(LocalVariable).getFunction() = func
and vslots_954.(LocalVariable).getFunction() = func
and vqueue_939.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
