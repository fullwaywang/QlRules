/**
 * @name linux-6b6bc5b8bd2d4ca9e1efa9ae0f98a0b0687ace75-emac_remove
 * @id cpp/linux/6b6bc5b8bd2d4ca9e1efa9ae0f98a0b0687ace75/emac-remove
 * @description linux-6b6bc5b8bd2d4ca9e1efa9ae0f98a0b0687ace75-drivers/net/ethernet/qualcomm/emac/emac.c-emac_remove CVE-2023-2483
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnetdev_724, ExprStmt target_4, FunctionCall target_5, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("netif_carrier_off")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_724
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_4.getLocation())
	and target_5.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vnetdev_724, ExprStmt target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("netif_tx_disable")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_724
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation()))
}

predicate func_2(Variable vadpt_725, ExprStmt target_6, AddressOfExpr target_7, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("free_irq")
	and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="irq"
	and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="irq"
	and target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadpt_725
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="irq"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadpt_725
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_6.getLocation())
	and target_7.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vadpt_725, ExprStmt target_6, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("cancel_work_sync")
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="work_thread"
	and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadpt_725
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_6.getLocation()))
}

predicate func_4(Variable vnetdev_724, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("unregister_netdev")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnetdev_724
}

predicate func_5(Variable vnetdev_724, FunctionCall target_5) {
	target_5.getTarget().hasName("netdev_priv")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vnetdev_724
}

predicate func_6(Variable vadpt_725, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("emac_clks_teardown")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vadpt_725
}

predicate func_7(Variable vadpt_725, AddressOfExpr target_7) {
	target_7.getOperand().(ValueFieldAccess).getTarget().getName()="napi"
	and target_7.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="rx_q"
	and target_7.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadpt_725
}

from Function func, Variable vnetdev_724, Variable vadpt_725, ExprStmt target_4, FunctionCall target_5, ExprStmt target_6, AddressOfExpr target_7
where
not func_0(vnetdev_724, target_4, target_5, func)
and not func_1(vnetdev_724, target_4, func)
and not func_2(vadpt_725, target_6, target_7, func)
and not func_3(vadpt_725, target_6, func)
and func_4(vnetdev_724, target_4)
and func_5(vnetdev_724, target_5)
and func_6(vadpt_725, target_6)
and func_7(vadpt_725, target_7)
and vnetdev_724.getType().hasName("net_device *")
and vadpt_725.getType().hasName("emac_adapter *")
and vnetdev_724.(LocalVariable).getFunction() = func
and vadpt_725.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
