commit fe2ead240c31e8d158713beca9d0681a6e6a53ab
Author: Jan Kara <jack@suse.cz>
Date:   Mon Jun 17 17:41:51 2024 +0200

    udf: Fix bogus checksum computation in udf_rename()
    
    [ Upstream commit 27ab33854873e6fb958cb074681a0107cc2ecc4c ]
    
    Syzbot reports uninitialized memory access in udf_rename() when updating
    checksum of '..' directory entry of a moved directory. This is indeed
    true as we pass on-stack diriter.fi to the udf_update_tag() and because
    that has only struct fileIdentDesc included in it and not the impUse or
    name fields, the checksumming function is going to checksum random stack
    contents beyond the end of the structure. This is actually harmless
    because the following udf_fiiter_write_fi() will recompute the checksum
    from on-disk buffers where everything is properly included. So all that
    is needed is just removing the bogus calculation.
    
    Fixes: e9109a92d2a9 ("udf: Convert udf_rename() to new directory iteration code")
    Link: https://lore.kernel.org/all/000000000000cf405f060d8f75a9@google.com/T/
    Link: https://patch.msgid.link/20240617154201.29512-1-jack@suse.cz
    Reported-by: syzbot+d31185aa54170f7fc1f5@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/fs/udf/namei.c b/fs/udf/namei.c
index ae55ab8859b6..605f182da42c 100644
--- a/fs/udf/namei.c
+++ b/fs/udf/namei.c
@@ -874,8 +874,6 @@ static int udf_rename(struct mnt_idmap *idmap, struct inode *old_dir,
 	if (has_diriter) {
 		diriter.fi.icb.extLocation =
 					cpu_to_lelb(UDF_I(new_dir)->i_location);
-		udf_update_tag((char *)&diriter.fi,
-			       udf_dir_entry_len(&diriter.fi));
 		udf_fiiter_write_fi(&diriter, NULL);
 		udf_fiiter_release(&diriter);
 
