/**
 * @name linux-946e51f2bf37f1656916eb75bd0742ba33983c28-ncp_dget_fpos
 * @id cpp/linux/946e51f2bf37f1656916eb75bd0742ba33983c28/ncp-dget-fpos
 * @description linux-946e51f2bf37f1656916eb75bd0742ba33983c28-fs/ncpfs/dir.c-ncp_dget_fpos CVE-2014-8559
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdent_390) {
exists(PointerFieldAccess target_0 |
	target_0.getTarget().getName()="d_child"
	and target_0.getQualifier().(VariableAccess).getTarget()=vdent_390)
}

predicate func_1(Variable vdent_390, EqualityOperation target_10) {
exists(PointerFieldAccess target_1 |
	target_1.getTarget().getName()="d_child"
	and target_1.getQualifier().(VariableAccess).getTarget()=vdent_390
	and target_1.getQualifier().(VariableAccess).getLocation().isBefore(target_10.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Function func, PointerDereferenceExpr target_2) {
	target_2.getOperand().(Literal).getValue()="0"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, PointerDereferenceExpr target_3) {
	target_3.getOperand().(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vdent_390, VariableAccess target_4) {
	target_4.getTarget()=vdent_390
}

predicate func_5(Variable vdent_390, VariableAccess target_5) {
	target_5.getTarget()=vdent_390
}

predicate func_6(Function func, ValueFieldAccess target_6) {
	target_6.getTarget().getName()="d_u"
	and target_6.getQualifier() instanceof PointerDereferenceExpr
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable vdent_390, ValueFieldAccess target_7) {
	target_7.getTarget().getName()="d_child"
	and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="d_u"
	and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdent_390
}

predicate func_8(Variable vdent_390, EqualityOperation target_10, ValueFieldAccess target_8) {
	target_8.getTarget().getName()="d_child"
	and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="d_u"
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdent_390
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_9(Function func, ValueFieldAccess target_9) {
	target_9.getTarget().getName()="d_u"
	and target_9.getQualifier() instanceof PointerDereferenceExpr
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vdent_390, BlockStmt target_11, EqualityOperation target_10) {
	target_10.getLeftOperand().(PointerFieldAccess).getTarget().getName()="d_fsdata"
	and target_10.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdent_390
	and target_10.getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_10.getParent().(IfStmt).getThen()=target_11
}

predicate func_11(Variable vdent_390, BlockStmt target_11) {
	target_11.getStmt(0).(IfStmt).getCondition().(PointerFieldAccess).getTarget().getName()="d_inode"
	and target_11.getStmt(0).(IfStmt).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdent_390
	and target_11.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dget")
	and target_11.getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdent_390
	and target_11.getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdent_390
	and target_11.getStmt(0).(IfStmt).getElse().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Variable vdent_390, PointerDereferenceExpr target_2, PointerDereferenceExpr target_3, VariableAccess target_4, VariableAccess target_5, ValueFieldAccess target_6, ValueFieldAccess target_7, ValueFieldAccess target_8, ValueFieldAccess target_9, EqualityOperation target_10, BlockStmt target_11
where
not func_0(vdent_390)
and not func_1(vdent_390, target_10)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vdent_390, target_4)
and func_5(vdent_390, target_5)
and func_6(func, target_6)
and func_7(vdent_390, target_7)
and func_8(vdent_390, target_10, target_8)
and func_9(func, target_9)
and func_10(vdent_390, target_11, target_10)
and func_11(vdent_390, target_11)
and vdent_390.getType().hasName("dentry *")
and vdent_390.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
