/**
 * @name linux-c3111b3cf3889bfa7b73ebff83d7397db9b7e5e0-ufshcd_abort_one
 * @id cpp/linux/c3111b3cf3889bfa7b73ebff83d7397db9b7e5e0/ufshcd-abort-one
 * @description linux-c3111b3cf3889bfa7b73ebff83d7397db9b7e5e0-drivers/ufs/core/ufshcd.c-ufshcd_abort_one CVE-2024-41053
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhwq_6355, LogicalAndExpr target_1, ExprStmt target_2, AddressOfExpr target_3) {
exists(IfStmt target_0 |
	exists(BlockStmt obj_0 | obj_0=target_0.getParent() |
		exists(IfStmt obj_1 | obj_1=obj_0.getParent() |
			obj_1.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_1.getCondition()=target_1
		)
	)
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vhwq_6355
	and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, LogicalAndExpr target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getLeftOperand() |
		obj_0.getTarget().hasName("is_mcq_enabled")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("ufs_hba *")
	)
	and exists(EqualityOperation obj_1 | obj_1=target_1.getRightOperand() |
		obj_1.getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int *")
		and obj_1.getRightOperand().(Literal).getValue()="0"
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vhwq_6355, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getArgument(1) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArgument(0) |
					obj_3.getTarget().getName()="cmd"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("ufshcd_lrb *")
				)
				and obj_2.getTarget().hasName("scsi_cmd_to_rq")
			)
			and obj_1.getTarget().hasName("ufshcd_mcq_req_to_hwq")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("ufs_hba *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vhwq_6355
	)
}

predicate func_3(Variable vhwq_6355, AddressOfExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="cq_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vhwq_6355
	)
	and target_3.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

from Function func, Variable vhwq_6355, LogicalAndExpr target_1, ExprStmt target_2, AddressOfExpr target_3
where
not func_0(vhwq_6355, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vhwq_6355, target_2)
and func_3(vhwq_6355, target_3)
and vhwq_6355.getType().hasName("ufs_hw_queue *")
and vhwq_6355.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
