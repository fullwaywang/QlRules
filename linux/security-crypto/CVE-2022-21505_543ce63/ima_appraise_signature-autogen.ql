/**
 * @name linux-543ce63b664e2c2f9533d089a4664b559c3e6b5b-ima_appraise_signature
 * @id cpp/linux/543ce63b664e2c2f9533d089a4664b559c3e6b5b/ima-appraise-signature
 * @description linux-543ce63b664e2c2f9533d089a4664b559c3e6b5b-security/integrity/ima/ima_policy.c-ima_appraise_signature CVE-2022-21505
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vid_2240, ExprStmt target_1, RelationalOperation target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vid_2240
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getType().hasName("int")
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("security_locked_down")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vid_2240, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ima_hooks")
	and target_1.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_1.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vid_2240
}

predicate func_2(Parameter vid_2240, RelationalOperation target_2) {
	 (target_2 instanceof GEExpr or target_2 instanceof LEExpr)
	and target_2.getGreaterOperand().(VariableAccess).getTarget()=vid_2240
}

from Function func, Parameter vid_2240, ExprStmt target_1, RelationalOperation target_2
where
not func_0(vid_2240, target_1, target_2, func)
and func_1(vid_2240, target_1)
and func_2(vid_2240, target_2)
and vid_2240.getType().hasName("kernel_read_file_id")
and vid_2240.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
