/**
 * @name linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-check_ctx_access
 * @id cpp/linux/c25b2ae136039ffa820c26138ed4a5e5f3ab3841/check-ctx-access
 * @description linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-kernel/bpf/verifier.c-check_ctx_access CVE-2022-23222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("base_type")
	and target_1.getArgument(0) instanceof PointerDereferenceExpr
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Parameter vreg_type_3617, PointerDereferenceExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vreg_type_3617
}

predicate func_3(Parameter vreg_type_3617, BlockStmt target_4, LogicalOrExpr target_3) {
	target_3.getLeftOperand().(EqualityOperation).getLeftOperand() instanceof PointerDereferenceExpr
	and target_3.getLeftOperand().(EqualityOperation).getRightOperand() instanceof EnumConstantAccess
	and target_3.getRightOperand().(EqualityOperation).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vreg_type_3617
	and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(Function func, BlockStmt target_4) {
	target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("btf **")
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="btf"
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_4.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_insn_access_aux")
	and target_4.getEnclosingFunction() = func
}

from Function func, Parameter vreg_type_3617, PointerDereferenceExpr target_2, LogicalOrExpr target_3, BlockStmt target_4
where
not func_1(func)
and func_2(vreg_type_3617, target_2)
and func_3(vreg_type_3617, target_4, target_3)
and func_4(func, target_4)
and vreg_type_3617.getType().hasName("bpf_reg_type *")
and vreg_type_3617.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
