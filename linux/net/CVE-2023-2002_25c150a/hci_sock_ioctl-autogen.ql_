/**
 * @name linux-25c150ac103a4ebeed0319994c742a90634ddf18-hci_sock_ioctl
 * @id cpp/linux/25c150ac103a4ebeed0319994c742a90634ddf18/hci-sock-ioctl
 * @description linux-25c150ac103a4ebeed0319994c742a90634ddf18-net/bluetooth/hci_sock.c-hci_sock_ioctl CVE-2023-2002
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("capable")
	and not target_0.getTarget().hasName("sk_capable")
	and target_0.getArgument(0).(Literal).getValue()="12"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getEnclosingFunction() = func
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("hci_sock_set_flag")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_2.getEnclosingFunction() = func
}

from Function func, FunctionCall target_0, ExprStmt target_2
where
func_0(target_2, func, target_0)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
