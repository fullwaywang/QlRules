/**
 * @name linux-3d2a9d642512c21a12d19b9250e7a835dcb41a79-hfi1_mmu_rb_register
 * @id cpp/linux/3d2a9d642512c21a12d19b9250e7a835dcb41a79/hfi1-mmu-rb-register
 * @description linux-3d2a9d642512c21a12d19b9250e7a835dcb41a79-hfi1_mmu_rb_register CVE-2020-27835
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhandlr_100, VariableAccess target_0) {
		target_0.getTarget()=vhandlr_100
		and target_0.getParent().(AssignExpr).getLValue() = target_0
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kmalloc")
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofExprOperator).getValue()="288"
		and target_0.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
}

predicate func_1(Variable vhandlr_100, VariableAccess target_1) {
		target_1.getTarget()=vhandlr_100
		and target_1.getParent().(PointerDereferenceExpr).getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kmalloc")
		and target_1.getParent().(PointerDereferenceExpr).getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(SizeofExprOperator).getValue()="288"
		and target_1.getParent().(PointerDereferenceExpr).getParent().(SizeofExprOperator).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
}

/*predicate func_2(Function func, SizeofExprOperator target_2) {
		target_2.getValue()="288"
		and target_2.getEnclosingFunction() = func
}

*/
predicate func_3(Variable vhandlr_100, ReturnStmt target_27, VariableAccess target_3) {
		target_3.getTarget()=vhandlr_100
		and target_3.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_27
}

predicate func_4(Variable vhandlr_100, VariableAccess target_4) {
		target_4.getTarget()=vhandlr_100
}

predicate func_5(Variable vhandlr_100, VariableAccess target_5) {
		target_5.getTarget()=vhandlr_100
}

predicate func_6(Variable vhandlr_100, VariableAccess target_6) {
		target_6.getTarget()=vhandlr_100
}

predicate func_7(Variable vhandlr_100, VariableAccess target_7) {
		target_7.getTarget()=vhandlr_100
		and target_7.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("INIT_HLIST_NODE")
		and target_7.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="hlist"
}

predicate func_8(Variable vhandlr_100, VariableAccess target_8) {
		target_8.getTarget()=vhandlr_100
		and target_8.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
		and target_8.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
}

predicate func_9(Function func, StringLiteral target_9) {
		target_9.getValue()="&handlr->lock"
		and not target_9.getValue()="&h->lock"
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vhandlr_100, VariableAccess target_10) {
		target_10.getTarget()=vhandlr_100
}

predicate func_11(Variable vhandlr_100, VariableAccess target_11) {
		target_11.getTarget()=vhandlr_100
		and target_11.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__init_work")
		and target_11.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="del_work"
		and target_11.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_12(Variable vhandlr_100, VariableAccess target_12) {
		target_12.getTarget()=vhandlr_100
}

predicate func_13(Variable vhandlr_100, VariableAccess target_13) {
		target_13.getTarget()=vhandlr_100
		and target_13.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lockdep_init_map")
		and target_13.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="(work_completion)(&handlr->del_work)"
		and target_13.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
}

/*predicate func_14(Function func, StringLiteral target_14) {
		target_14.getValue()="(work_completion)(&handlr->del_work)"
		and not target_14.getValue()="(work_completion)(&h->del_work)"
		and target_14.getEnclosingFunction() = func
}

*/
predicate func_15(Variable vhandlr_100, VariableAccess target_15) {
		target_15.getTarget()=vhandlr_100
		and target_15.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
}

predicate func_16(Variable vhandlr_100, VariableAccess target_16) {
		target_16.getTarget()=vhandlr_100
}

predicate func_17(Variable vhandlr_100, VariableAccess target_17) {
		target_17.getTarget()=vhandlr_100
		and target_17.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
		and target_17.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="del_list"
}

predicate func_18(Variable vhandlr_100, VariableAccess target_18) {
		target_18.getTarget()=vhandlr_100
		and target_18.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("INIT_LIST_HEAD")
		and target_18.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lru_list"
}

predicate func_19(Variable vhandlr_100, VariableAccess target_19) {
		target_19.getTarget()=vhandlr_100
}

predicate func_20(Variable vhandlr_100, VariableAccess target_20) {
		target_20.getTarget()=vhandlr_100
		and target_20.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mmu_notifier_register")
		and target_20.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mn"
		and target_20.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="mm"
		and target_20.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandlr_100
}

predicate func_21(Variable vhandlr_100, VariableAccess target_21) {
		target_21.getTarget()=vhandlr_100
		and target_21.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
}

predicate func_22(Variable vhandlr_100, VariableAccess target_22) {
		target_22.getTarget()=vhandlr_100
		and target_22.getParent().(AssignExpr).getRValue() = target_22
		and target_22.getParent().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("mmu_rb_handler **")
}

predicate func_23(Variable vhandlr_100) {
	exists(FunctionCall target_23 |
		target_23.getTarget().hasName("get_current")
		and target_23.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mmu_notifier_register")
		and target_23.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mn"
		and target_23.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandlr_100
		and target_23.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="mm"
		and target_23.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandlr_100)
}

predicate func_24(Parameter vmm_95, Variable vhandlr_100, AssignExpr target_24) {
		target_24.getLValue().(PointerFieldAccess).getTarget().getName()="mm"
		and target_24.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandlr_100
		and target_24.getRValue().(VariableAccess).getTarget()=vmm_95
}

predicate func_25(Variable vhandlr_100, Variable vret_101, Function func, ExprStmt target_25) {
		target_25.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_101
		and target_25.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mmu_notifier_register")
		and target_25.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mn"
		and target_25.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandlr_100
		and target_25.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="mm"
		and target_25.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandlr_100
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_25
}

/*predicate func_26(Variable vhandlr_100, ExprStmt target_28, VariableAccess target_26) {
		target_26.getTarget()=vhandlr_100
		and target_26.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("mmu_notifier_register")
		and target_26.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mn"
		and target_26.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandlr_100
		and target_26.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="mm"
		and target_26.getLocation().isBefore(target_28.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

*/
predicate func_27(Function func, ReturnStmt target_27) {
		target_27.getExpr().(UnaryMinusExpr).getValue()="-12"
		and target_27.getEnclosingFunction() = func
}

predicate func_28(Variable vhandlr_100, ExprStmt target_28) {
		target_28.getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_28.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhandlr_100
}

from Function func, Parameter vmm_95, Variable vhandlr_100, Variable vret_101, VariableAccess target_0, VariableAccess target_1, VariableAccess target_3, VariableAccess target_4, VariableAccess target_5, VariableAccess target_6, VariableAccess target_7, VariableAccess target_8, StringLiteral target_9, VariableAccess target_10, VariableAccess target_11, VariableAccess target_12, VariableAccess target_13, VariableAccess target_15, VariableAccess target_16, VariableAccess target_17, VariableAccess target_18, VariableAccess target_19, VariableAccess target_20, VariableAccess target_21, VariableAccess target_22, AssignExpr target_24, ExprStmt target_25, ReturnStmt target_27, ExprStmt target_28
where
func_0(vhandlr_100, target_0)
and func_1(vhandlr_100, target_1)
and func_3(vhandlr_100, target_27, target_3)
and func_4(vhandlr_100, target_4)
and func_5(vhandlr_100, target_5)
and func_6(vhandlr_100, target_6)
and func_7(vhandlr_100, target_7)
and func_8(vhandlr_100, target_8)
and func_9(func, target_9)
and func_10(vhandlr_100, target_10)
and func_11(vhandlr_100, target_11)
and func_12(vhandlr_100, target_12)
and func_13(vhandlr_100, target_13)
and func_15(vhandlr_100, target_15)
and func_16(vhandlr_100, target_16)
and func_17(vhandlr_100, target_17)
and func_18(vhandlr_100, target_18)
and func_19(vhandlr_100, target_19)
and func_20(vhandlr_100, target_20)
and func_21(vhandlr_100, target_21)
and func_22(vhandlr_100, target_22)
and not func_23(vhandlr_100)
and func_24(vmm_95, vhandlr_100, target_24)
and func_25(vhandlr_100, vret_101, func, target_25)
and func_27(func, target_27)
and func_28(vhandlr_100, target_28)
and vmm_95.getType().hasName("mm_struct *")
and vhandlr_100.getType().hasName("mmu_rb_handler *")
and vret_101.getType().hasName("int")
and vmm_95.getFunction() = func
and vhandlr_100.(LocalVariable).getFunction() = func
and vret_101.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
