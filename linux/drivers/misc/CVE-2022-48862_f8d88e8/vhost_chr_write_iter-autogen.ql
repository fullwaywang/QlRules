/**
 * @name linux-f8d88e86e90ea1002226d7ac2430152bfea003d1-vhost_chr_write_iter
 * @id cpp/linux/f8d88e86e90ea1002226d7ac2430152bfea003d1/vhost-chr-write-iter
 * @description linux-f8d88e86e90ea1002226d7ac2430152bfea003d1-drivers/vhost/vhost.c-vhost_chr_write_iter CVE-2022-48862
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmsg_1141, Variable vret_1143, IfStmt target_1, AddressOfExpr target_3, ExprStmt target_4, Function func) {
exists(IfStmt target_0 |
	exists(EqualityOperation obj_0 | obj_0=target_0.getCondition() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="size"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vmsg_1141
		)
		and obj_0.getRightOperand().(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getThen() |
		exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(0) |
			exists(AssignExpr obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getLValue().(VariableAccess).getTarget()=vret_1143
				and obj_4.getRValue().(UnaryMinusExpr).getValue()="-22"
			)
		)
		and obj_2.getStmt(1).(GotoStmt).getName() ="done"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(EqualityOperation).getLeftOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vmsg_1141, Variable vret_1143, IfStmt target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getCondition() |
		obj_0.getTarget().getName()="msg_handler"
		and obj_0.getQualifier().(VariableAccess).getTarget().getType().hasName("vhost_dev *")
	)
	and exists(ExprStmt obj_1 | obj_1=target_1.getThen() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getExpr() |
			exists(VariableCall obj_3 | obj_3=obj_2.getRValue() |
				exists(PointerFieldAccess obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().getName()="msg_handler"
					and obj_4.getQualifier().(VariableAccess).getTarget().getType().hasName("vhost_dev *")
				)
				and obj_3.getArgument(0).(VariableAccess).getTarget().getType().hasName("vhost_dev *")
				and obj_3.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmsg_1141
			)
			and obj_2.getLValue().(VariableAccess).getTarget()=vret_1143
		)
	)
	and exists(ExprStmt obj_5 | obj_5=target_1.getElse() |
		exists(AssignExpr obj_6 | obj_6=obj_5.getExpr() |
			exists(FunctionCall obj_7 | obj_7=obj_6.getRValue() |
				obj_7.getTarget().hasName("vhost_process_iotlb_msg")
				and obj_7.getArgument(0).(VariableAccess).getTarget().getType().hasName("vhost_dev *")
				and obj_7.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmsg_1141
			)
			and obj_6.getLValue().(VariableAccess).getTarget()=vret_1143
		)
	)
}

predicate func_3(Variable vmsg_1141, AddressOfExpr target_3) {
	exists(VariableCall obj_0 | obj_0=target_3.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(VariableCall obj_2 | obj_2=obj_1.getRValue() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getTarget().getName()="msg_handler"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("vhost_dev *")
				)
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("vhost_dev *")
			)
		)
	)
	and target_3.getOperand().(VariableAccess).getTarget()=vmsg_1141
}

predicate func_4(Variable vret_1143, EqualityOperation target_5, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget()=vret_1143
		and obj_0.getRValue().(UnaryMinusExpr).getValue()="-22"
	)
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_5(Variable vret_1143, EqualityOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vret_1143
	and target_5.getRightOperand().(SizeofExprOperator).getValue()="32"
}

from Function func, Variable vmsg_1141, Variable vret_1143, IfStmt target_1, AddressOfExpr target_3, ExprStmt target_4, EqualityOperation target_5
where
not func_0(vmsg_1141, vret_1143, target_1, target_3, target_4, func)
and func_1(vmsg_1141, vret_1143, target_1)
and func_3(vmsg_1141, target_3)
and func_4(vret_1143, target_5, target_4)
and func_5(vret_1143, target_5)
and vmsg_1141.getType().hasName("vhost_iotlb_msg")
and vret_1143.getType().hasName("int")
and vmsg_1141.(LocalVariable).getFunction() = func
and vret_1143.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
