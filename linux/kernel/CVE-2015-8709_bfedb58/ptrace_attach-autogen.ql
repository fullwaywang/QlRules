/**
 * @name linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-ptrace_attach
 * @id cpp/linux/bfedb589252c01fa505ac9f6f2a3d5d68d707ef4/ptrace-attach
 * @description linux-bfedb589252c01fa505ac9f6f2a3d5d68d707ef4-kernel/ptrace.c-ptrace_attach CVE-2015-8709
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr().(StmtExpr).getStmt() instanceof BlockStmt
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Parameter vflags_299, ExprStmt target_8, IfStmt target_1) {
	target_1.getCondition().(FunctionCall).getTarget().hasName("ns_capable")
	and target_1.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_1.getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier() instanceof StmtExpr
	and target_1.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="19"
	and target_1.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vflags_299
	and target_1.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="4"
	and target_8.getLocation().isBefore(target_1.getLocation())
}

predicate func_4(Parameter vtask_297) {
exists(PointerFieldAccess target_4 |
	target_4.getTarget().getName()="mm"
	and target_4.getQualifier().(VariableAccess).getTarget()=vtask_297)
}

predicate func_7(Parameter vtask_297, VariableAccess target_7) {
	target_7.getTarget()=vtask_297
	and target_7.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Function func, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("rcu_read_lock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

/*predicate func_9(Variable v________p1_348, StmtExpr target_9) {
	target_9.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_9.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(VariableAccess).getTarget()=v________p1_348
	and target_9.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("ns_capable")
	and target_9.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_9.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="19"
}

*/
/*predicate func_14(Parameter vtask_297, Variable v__u_348, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("__read_once_size")
	and target_14.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="real_cred"
	and target_14.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_297
	and target_14.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_14.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v__u_348
	and target_14.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
}

*/
/*predicate func_15(Parameter vtask_297, Variable v__u_348, ExprStmt target_15) {
	target_15.getExpr().(FunctionCall).getTarget().hasName("__read_once_size_nocheck")
	and target_15.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="real_cred"
	and target_15.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtask_297
	and target_15.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getTarget().getName()="__c"
	and target_15.getExpr().(FunctionCall).getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v__u_348
	and target_15.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
}

*/
/*predicate func_16(Variable v__u_348, ExprStmt target_16) {
	target_16.getExpr().(ValueFieldAccess).getTarget().getName()="__val"
	and target_16.getExpr().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=v__u_348
}

*/
/*predicate func_18(Function func, DoStmt target_18) {
	target_18.getCondition() instanceof Literal
	and target_18.getEnclosingFunction() = func
}

*/
/*predicate func_19(Variable v_________p1_348, ExprStmt target_19) {
	target_19.getExpr().(VariableAccess).getTarget()=v_________p1_348
}

*/
/*predicate func_20(Variable v__warned_348, DoStmt target_20) {
	target_20.getCondition() instanceof Literal
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__warned_348
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand() instanceof Literal
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("rcu_read_lock_held")
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_348
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lockdep_rcu_suspicious")
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_20.getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
}

*/
/*predicate func_22(Variable v__warned_348, IfStmt target_22) {
	target_22.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_22.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__warned_348
	and target_22.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand() instanceof Literal
	and target_22.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("rcu_read_lock_held")
	and target_22.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_348
	and target_22.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("lockdep_rcu_suspicious")
	and target_22.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_22.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_22.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
}

*/
/*predicate func_23(Variable v__warned_348, BlockStmt target_33, LogicalAndExpr target_23) {
	target_23.getLeftOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_23.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__warned_348
	and target_23.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand() instanceof Literal
	and target_23.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("rcu_read_lock_held")
	and target_23.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_33
}

*/
/*predicate func_24(Variable v__warned_348, VariableAccess target_24) {
	target_24.getTarget()=v__warned_348
	and target_24.getParent().(NotExpr).getParent().(LogicalAndExpr).getParent().(LogicalAndExpr).getParent().(IfStmt).getParent().(BlockStmt).getParent().(DoStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("ns_capable")
}

*/
/*predicate func_25(BlockStmt target_33, Function func, NotExpr target_25) {
	target_25.getOperand().(LogicalOrExpr).getLeftOperand() instanceof Literal
	and target_25.getOperand().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("rcu_read_lock_held")
	and target_25.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_33
	and target_25.getEnclosingFunction() = func
}

*/
/*predicate func_26(Variable v__warned_348, LogicalAndExpr target_34, ExprStmt target_26) {
	target_26.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__warned_348
	and target_26.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_34
}

*/
/*predicate func_27(LogicalAndExpr target_34, Function func, ExprStmt target_27) {
	target_27.getExpr().(FunctionCall).getTarget().hasName("lockdep_rcu_suspicious")
	and target_27.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_27.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_27.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="suspicious rcu_dereference_check() usage"
	and target_27.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_34
	and target_27.getEnclosingFunction() = func
}

*/
/*predicate func_29(Variable v________p1_348, ExprStmt target_29) {
	target_29.getExpr().(VariableAccess).getTarget()=v________p1_348
}

*/
predicate func_30(Function func, ExprStmt target_30) {
	target_30.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_30
}

predicate func_33(Function func, BlockStmt target_33) {
	target_33.getStmt(0) instanceof ExprStmt
	and target_33.getStmt(1) instanceof ExprStmt
	and target_33.getEnclosingFunction() = func
}

predicate func_34(Function func, LogicalAndExpr target_34) {
	target_34.getLeftOperand() instanceof LogicalAndExpr
	and target_34.getRightOperand() instanceof NotExpr
	and target_34.getEnclosingFunction() = func
}

from Function func, Parameter vtask_297, Parameter vflags_299, Variable v________p1_348, Variable v_________p1_348, Variable v__u_348, Variable v__warned_348, Initializer target_0, IfStmt target_1, VariableAccess target_7, ExprStmt target_8, ExprStmt target_30, BlockStmt target_33, LogicalAndExpr target_34
where
func_0(func, target_0)
and func_1(vflags_299, target_8, target_1)
and not func_4(vtask_297)
and func_7(vtask_297, target_7)
and func_8(func, target_8)
and func_30(func, target_30)
and func_33(func, target_33)
and func_34(func, target_34)
and vtask_297.getType().hasName("task_struct *")
and vflags_299.getType().hasName("unsigned long")
and v________p1_348.getType().hasName("cred *")
and v_________p1_348.getType().hasName("const cred *")
and v__u_348.getType().hasName("union <unnamed>")
and v__warned_348.getType().hasName("bool")
and vtask_297.getFunction() = func
and vflags_299.getFunction() = func
and v________p1_348.(LocalVariable).getFunction() = func
and v_________p1_348.(LocalVariable).getFunction() = func
and v__u_348.(LocalVariable).getFunction() = func
and v__warned_348.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
