/**
 * @name linux-bd7a3fe770ebd8391d1c7d072ff88e9e76d063eb-usb_parse_configuration
 * @id cpp/linux/bd7a3fe770ebd8391d1c7d072ff88e9e76d063eb/usb-parse-configuration
 * @description linux-bd7a3fe770ebd8391d1c7d072ff88e9e76d063eb-drivers/usb/core/config.c-usb_parse_configuration CVE-2017-16531
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vheader_552, EqualityOperation target_9, LogicalOrExpr target_10) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("usb_interface_assoc_descriptor *")
	and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vheader_552
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_10.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(BlockStmt target_11, Function func) {
exists(RelationalOperation target_2 |
	 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
	and target_2.getLesserOperand().(PointerFieldAccess).getTarget().getName()="bLength"
	and target_2.getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("usb_interface_assoc_descriptor *")
	and target_2.getGreaterOperand().(Literal).getValue()="8"
	and target_2.getParent().(IfStmt).getThen()=target_11
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vddev_544, Variable vcfgno_546, ExprStmt target_12, ExprStmt target_13) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("dev_warn")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vddev_544
	and target_3.getArgument(1).(StringLiteral).getValue()="config %d has an invalid interface association descriptor of length %d, skipping\n"
	and target_3.getArgument(2).(VariableAccess).getTarget()=vcfgno_546
	and target_3.getArgument(3).(PointerFieldAccess).getTarget().getName()="bLength"
	and target_3.getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("usb_interface_assoc_descriptor *")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation())
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(EqualityOperation target_7, Function func) {
exists(ContinueStmt target_4 |
	target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_4
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable viad_num_555, Variable vddev_544, Variable vcfgno_546, EqualityOperation target_9, ExprStmt target_15) {
exists(IfStmt target_5 |
	target_5.getCondition() instanceof EqualityOperation
	and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_warn")
	and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_544
	and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="found more Interface Association Descriptors than allocated for in configuration %d\n"
	and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vcfgno_546
	and target_5.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue() instanceof ArrayExpr
	and target_5.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("usb_interface_assoc_descriptor *")
	and target_5.getElse().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=viad_num_555
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_5
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

/*predicate func_6(EqualityOperation target_7, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(AssignExpr).getLValue() instanceof ArrayExpr
	and target_6.getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("usb_interface_assoc_descriptor *")
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_6
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_6.getEnclosingFunction() = func)
}

*/
predicate func_7(Variable viad_num_555, BlockStmt target_11, EqualityOperation target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget()=viad_num_555
	and target_7.getRightOperand().(DivExpr).getValue()="16"
	and target_7.getParent().(IfStmt).getThen()=target_11
}

predicate func_8(Variable vheader_552, Variable viad_num_555, Parameter vconfig_542, ArrayExpr target_8) {
	target_8.getArrayBase().(PointerFieldAccess).getTarget().getName()="intf_assoc"
	and target_8.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconfig_542
	and target_8.getArrayOffset().(VariableAccess).getTarget()=viad_num_555
	and target_8.getParent().(AssignExpr).getLValue() = target_8
	and target_8.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=vheader_552
}

predicate func_9(Variable vheader_552, EqualityOperation target_9) {
	target_9.getLeftOperand().(PointerFieldAccess).getTarget().getName()="bDescriptorType"
	and target_9.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vheader_552
	and target_9.getRightOperand().(Literal).getValue()="11"
}

predicate func_10(Variable vheader_552, LogicalOrExpr target_10) {
	target_10.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bDescriptorType"
	and target_10.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vheader_552
	and target_10.getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_10.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bDescriptorType"
	and target_10.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vheader_552
	and target_10.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="2"
}

predicate func_11(Variable vddev_544, Variable vcfgno_546, BlockStmt target_11) {
	target_11.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_warn")
	and target_11.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_544
	and target_11.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="found more Interface Association Descriptors than allocated for in configuration %d\n"
	and target_11.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vcfgno_546
}

predicate func_12(Variable vddev_544, Variable vcfgno_546, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("dev_warn")
	and target_12.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_544
	and target_12.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="found more Interface Association Descriptors than allocated for in configuration %d\n"
	and target_12.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vcfgno_546
}

predicate func_13(Variable vheader_552, Variable vddev_544, Variable vcfgno_546, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("dev_warn")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_544
	and target_13.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="config %d contains an unexpected descriptor of type 0x%X, skipping\n"
	and target_13.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vcfgno_546
	and target_13.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="bDescriptorType"
	and target_13.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vheader_552
}

predicate func_15(Variable vddev_544, Variable vcfgno_546, ExprStmt target_15) {
	target_15.getExpr().(FunctionCall).getTarget().hasName("dev_warn")
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vddev_544
	and target_15.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="config %d has an invalid interface number: %d but max is %d\n"
	and target_15.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vcfgno_546
	and target_15.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_15.getExpr().(FunctionCall).getArgument(4).(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_15.getExpr().(FunctionCall).getArgument(4).(SubExpr).getRightOperand().(Literal).getValue()="1"
}

from Function func, Variable vheader_552, Variable viad_num_555, Parameter vconfig_542, Variable vddev_544, Variable vcfgno_546, EqualityOperation target_7, ArrayExpr target_8, EqualityOperation target_9, LogicalOrExpr target_10, BlockStmt target_11, ExprStmt target_12, ExprStmt target_13, ExprStmt target_15
where
not func_0(vheader_552, target_9, target_10)
and not func_2(target_11, func)
and not func_3(vddev_544, vcfgno_546, target_12, target_13)
and not func_4(target_7, func)
and not func_5(viad_num_555, vddev_544, vcfgno_546, target_9, target_15)
and func_7(viad_num_555, target_11, target_7)
and func_8(vheader_552, viad_num_555, vconfig_542, target_8)
and func_9(vheader_552, target_9)
and func_10(vheader_552, target_10)
and func_11(vddev_544, vcfgno_546, target_11)
and func_12(vddev_544, vcfgno_546, target_12)
and func_13(vheader_552, vddev_544, vcfgno_546, target_13)
and func_15(vddev_544, vcfgno_546, target_15)
and vheader_552.getType().hasName("usb_descriptor_header *")
and viad_num_555.getType().hasName("unsigned int")
and vconfig_542.getType().hasName("usb_host_config *")
and vddev_544.getType().hasName("device *")
and vcfgno_546.getType().hasName("int")
and vheader_552.(LocalVariable).getFunction() = func
and viad_num_555.(LocalVariable).getFunction() = func
and vconfig_542.getFunction() = func
and vddev_544.(LocalVariable).getFunction() = func
and vcfgno_546.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
