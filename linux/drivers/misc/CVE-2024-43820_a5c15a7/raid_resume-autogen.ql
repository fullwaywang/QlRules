/**
 * @name linux-a5c15a78c0e1631b7df822b56e8b6424e4d1ca3e-raid_resume
 * @id cpp/linux/a5c15a78c0e1631b7df822b56e8b6424e4d1ca3e/raid-resume
 * @description linux-a5c15a78c0e1631b7df822b56e8b6424e4d1ca3e-drivers/md/dm-raid.c-raid_resume CVE-2024-43820
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

/*predicate func_0(Function func, Literal target_0) {
	exists(LogicalAndExpr obj_0 | obj_0=target_0.getParent() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getParent() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRightOperand() |
					exists(EqualityOperation obj_4 | obj_4=obj_3.getArgument(0) |
						obj_4.getLeftOperand() instanceof AddressOfExpr
						and obj_4.getRightOperand() instanceof Literal
					)
					and obj_3.getTarget().hasName("__builtin_constant_p")
				)
			)
		)
	)
	and target_0.getValue()="1"
	and not target_0.getValue()="4107"
	and target_0.getEnclosingFunction() = func
}

*/
/*predicate func_1(Function func, FunctionCall target_1) {
	exists(EqualityOperation obj_0 | obj_0=target_1.getArgument(0) |
		obj_0.getLeftOperand() instanceof AddressOfExpr
		and obj_0.getRightOperand() instanceof Literal
	)
	and target_1.getTarget().hasName("__builtin_constant_p")
	and not target_1.getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_1.getEnclosingFunction() = func
}

*/
predicate func_2(Function func, FunctionCall target_2) {
	exists(LogicalAndExpr obj_0 | obj_0=target_2.getParent() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getRightOperand() |
					exists(EqualityOperation obj_4 | obj_4=obj_3.getArgument(0) |
						obj_4.getLeftOperand() instanceof AddressOfExpr
						and obj_4.getRightOperand() instanceof Literal
					)
					and obj_3.getTarget().hasName("__builtin_constant_p")
				)
				and obj_2.getLeftOperand().(Literal).getValue()="1"
			)
			and obj_1.getRightOperand() instanceof EqualityOperation
		)
	)
	and target_2.getTarget().hasName("__builtin_constant_p")
	and not target_2.getTarget().hasName("lock_is_held")
	and target_2.getArgument(0).(PointerDereferenceExpr).getOperand() instanceof AddressOfExpr
	and target_2.getEnclosingFunction() = func
}

predicate func_4(Variable vmddev_4086, ExprStmt target_16, ExprStmt target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getExpr() |
		obj_0.getTarget().hasName("mddev_lock_nointr")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vmddev_4086
	)
	and target_16.getLocation().isBefore(target_4.getLocation())
}

predicate func_5(Variable vmddev_4086) {
exists(StmtExpr target_5 |
	exists(BlockStmt obj_0 | obj_0=target_5.getStmt() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().getName()="sync_thread"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vmddev_4086
			)
		)
		and obj_0.getStmt(0).(DoStmt).getCondition() instanceof Literal
	)
)
}

/*predicate func_6(Variable vmddev_4086) {
exists(NotExpr target_6 |
	exists(FunctionCall obj_0 | obj_0=target_6.getOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(AddressOfExpr obj_3 | obj_3=obj_2.getQualifier() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getOperand() |
						obj_4.getTarget().getName()="reconfig_mutex"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vmddev_4086
					)
				)
				and obj_2.getTarget().getName()="dep_map"
			)
		)
		and obj_0.getTarget().hasName("lock_is_held")
	)
)
}

*/
/*predicate func_7(Variable vmddev_4086) {
exists(AddressOfExpr target_7 |
	exists(PointerFieldAccess obj_0 | obj_0=target_7.getOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="reconfig_mutex"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vmddev_4086
			)
		)
		and obj_0.getTarget().getName()="dep_map"
	)
	and target_7.getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
)
}

*/
/*predicate func_8(Function func) {
exists(FunctionCall target_8 |
	target_8.getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_8.getEnclosingFunction() = func
)
}

*/
/*predicate func_9(Function func) {
exists(NotExpr target_9 |
	exists(LogicalAndExpr obj_0 | obj_0=target_9.getParent() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getLeftOperand() instanceof Literal
				and obj_2.getRightOperand() instanceof FunctionCall
			)
			and obj_1.getRightOperand() instanceof EqualityOperation
		)
		and obj_0.getRightOperand() instanceof FunctionCall
	)
	and target_9.getOperand().(VariableAccess).getType().hasName("bool")
	and target_9.getEnclosingFunction() = func
)
}

*/
predicate func_10(Variable vmddev_4086, VariableAccess target_10) {
	target_10.getTarget()=vmddev_4086
	and target_10.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(NEExpr).getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
}

predicate func_11(Variable vmddev_4086, VariableAccess target_11) {
	target_11.getTarget()=vmddev_4086
}

predicate func_12(Variable vmddev_4086, ConditionalExpr target_12) {
	exists(LogicalAndExpr obj_0 | obj_0=target_12.getCondition() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(LogicalAndExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getLeftOperand() instanceof Literal
				and obj_2.getRightOperand() instanceof FunctionCall
			)
			and exists(EqualityOperation obj_3 | obj_3=obj_1.getRightOperand() |
				exists(AddressOfExpr obj_4 | obj_4=obj_3.getLeftOperand() |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getOperand() |
						obj_5.getTarget().getName()="recovery"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vmddev_4086
					)
				)
				and obj_3.getRightOperand() instanceof Literal
			)
		)
		and obj_0.getRightOperand() instanceof FunctionCall
	)
	and exists(FunctionCall obj_6 | obj_6=target_12.getThen() |
		exists(AddressOfExpr obj_7 | obj_7=obj_6.getArgument(1) |
			exists(PointerFieldAccess obj_8 | obj_8=obj_7.getOperand() |
				obj_8.getTarget().getName()="recovery"
				and obj_8.getQualifier().(VariableAccess).getTarget()=vmddev_4086
			)
		)
		and obj_6.getTarget().hasName("const_test_bit")
		and obj_6.getArgument(0) instanceof EnumConstantAccess
	)
	and exists(FunctionCall obj_9 | obj_9=target_12.getElse() |
		exists(AddressOfExpr obj_10 | obj_10=obj_9.getArgument(1) |
			exists(PointerFieldAccess obj_11 | obj_11=obj_10.getOperand() |
				obj_11.getTarget().getName()="recovery"
				and obj_11.getQualifier().(VariableAccess).getTarget()=vmddev_4086
			)
		)
		and obj_9.getTarget().hasName("_test_bit")
	)
}

predicate func_13(Variable vmddev_4086, AddressOfExpr target_13) {
	exists(PointerFieldAccess obj_0 | obj_0=target_13.getOperand() |
		obj_0.getTarget().getName()="recovery"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vmddev_4086
	)
	and target_13.getParent().(NEExpr).getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
}

/*predicate func_14(Variable vmddev_4086, EqualityOperation target_14) {
	exists(AddressOfExpr obj_0 | obj_0=target_14.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().getName()="recovery"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vmddev_4086
		)
	)
	and target_14.getRightOperand() instanceof Literal
}

*/
predicate func_15(Variable vmddev_4086, AddressOfExpr target_15) {
	exists(PointerFieldAccess obj_0 | obj_0=target_15.getOperand() |
		obj_0.getTarget().getName()="recovery"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vmddev_4086
	)
	and target_15.getParent().(PointerDereferenceExpr).getParent().(FunctionCall).getParent().(LogicalAndExpr).getRightOperand() instanceof FunctionCall
}

predicate func_16(Function func, ExprStmt target_16) {
	exists(FunctionCall obj_0 | obj_0=target_16.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(1) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="runtime_flags"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("raid_set *")
			)
		)
		and obj_0.getTarget().hasName("clear_bit")
		and obj_0.getArgument(0).(Literal).getValue()="9"
	)
	and target_16.getEnclosingFunction() = func
}

from Function func, Variable vmddev_4086, FunctionCall target_2, ExprStmt target_4, VariableAccess target_10, VariableAccess target_11, ConditionalExpr target_12, AddressOfExpr target_13, AddressOfExpr target_15, ExprStmt target_16
where
func_2(func, target_2)
and func_4(vmddev_4086, target_16, target_4)
and not func_5(vmddev_4086)
and func_10(vmddev_4086, target_10)
and func_11(vmddev_4086, target_11)
and func_12(vmddev_4086, target_12)
and func_13(vmddev_4086, target_13)
and func_15(vmddev_4086, target_15)
and func_16(func, target_16)
and vmddev_4086.getType().hasName("mddev *")
and vmddev_4086.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
