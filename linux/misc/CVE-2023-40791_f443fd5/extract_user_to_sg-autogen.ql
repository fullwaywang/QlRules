/**
 * @name linux-f443fd5af5dbd531f880d3645d5dd36976cf087f-extract_user_to_sg
 * @id cpp/linux/f443fd5af5dbd531f880d3645d5dd36976cf087f/extract-user-to-sg
 * @description linux-f443fd5af5dbd531f880d3645d5dd36976cf087f-extract_user_to_sg CVE-2023-40791
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsgtable_1107, FunctionCall target_0) {
		target_0.getTarget().hasName("put_page")
		and not target_0.getTarget().hasName("unpin_user_page")
		and target_0.getArgument(0).(FunctionCall).getTarget().hasName("sg_page")
		and target_0.getArgument(0).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="sgl"
		and target_0.getArgument(0).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsgtable_1107
		and target_0.getArgument(0).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(PrefixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nents"
		and target_0.getArgument(0).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(PrefixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsgtable_1107
}

from Function func, Parameter vsgtable_1107, FunctionCall target_0
where
func_0(vsgtable_1107, target_0)
and vsgtable_1107.getType().hasName("sg_table *")
and vsgtable_1107.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
