/**
 * @name linux-571567e0277008459750f0728f246086b2659429-ip6_send_skb
 * @id cpp/linux/571567e0277008459750f0728f246086b2659429/ip6-send-skb
 * @description linux-571567e0277008459750f0728f246086b2659429-net/ipv6/ip6_output.c-ip6_send_skb CVE-2024-44987
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("rcu_read_lock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
)
}

predicate func_1(Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_2(Function func, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getArgument(1) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="(unknown field)"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("sk_buff *")
				)
				and obj_2.getTarget().getName()="sk"
			)
			and obj_1.getTarget().hasName("ip6_local_out")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
			and obj_1.getArgument(2).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, ExprStmt target_2
where
not func_0(target_2, func)
and not func_1(func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
