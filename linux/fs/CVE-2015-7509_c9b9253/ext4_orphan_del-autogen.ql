/**
 * @name linux-c9b92530a723ac5ef8e352885a1862b18f31b2f5-ext4_orphan_del
 * @id cpp/linux/c9b92530a723ac5ef8e352885a1862b18f31b2f5/ext4-orphan-del
 * @description linux-c9b92530a723ac5ef8e352885a1862b18f31b2f5-fs/ext4/namei.c-ext4_orphan_del CVE-2015-7509
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_2437, ExprStmt target_6, ExprStmt target_7) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("EXT4_SB")
		and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
		and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_2437
		and target_6.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vsbi_2441, Parameter vhandle_2437, NotExpr target_1) {
		target_1.getOperand().(VariableAccess).getTarget()=vhandle_2437
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="s_journal"
		and target_1.getParent().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2441
		and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_2(Parameter vhandle_2437, ReturnStmt target_8, LogicalAndExpr target_2) {
		target_2.getAnOperand().(VariableAccess).getTarget()=vhandle_2437
		and target_2.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ext4_handle_valid")
		and target_2.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhandle_2437
		and target_2.getParent().(IfStmt).getThen()=target_8
}

/*predicate func_3(Parameter vhandle_2437, FunctionCall target_3) {
		target_3.getTarget().hasName("ext4_handle_valid")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vhandle_2437
}

*/
predicate func_4(Variable vsbi_2441, LogicalAndExpr target_4) {
		target_4.getAnOperand().(PointerFieldAccess).getTarget().getName()="s_journal"
		and target_4.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2441
		and target_4.getAnOperand() instanceof NotExpr
		and target_4.getParent().(IfStmt).getThen() instanceof GotoStmt
}

/*predicate func_5(Variable vsbi_2441, ExprStmt target_9, EqualityOperation target_10, VariableAccess target_5) {
		target_5.getTarget()=vsbi_2441
		and target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_5.getLocation())
		and target_5.getLocation().isBefore(target_10.getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

*/
predicate func_6(Parameter vinode_2437, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_6.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="remove inode %lu from orphan list\n"
		and target_6.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="i_ino"
		and target_6.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_2437
}

predicate func_7(Parameter vinode_2437, Parameter vhandle_2437, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_reserve_inode_write")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhandle_2437
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vinode_2437
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ext4_iloc")
}

predicate func_8(Function func, ReturnStmt target_8) {
		target_8.getExpr().(Literal).getValue()="0"
		and target_8.getEnclosingFunction() = func
}

predicate func_9(Variable vsbi_2441, Parameter vinode_2437, ExprStmt target_9) {
		target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsbi_2441
		and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("EXT4_SB")
		and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
		and target_9.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_2437
}

predicate func_10(Variable vsbi_2441, EqualityOperation target_10) {
		target_10.getAnOperand().(VariableAccess).getTarget().getType().hasName("list_head *")
		and target_10.getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="s_orphan"
		and target_10.getAnOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_2441
}

from Function func, Variable vsbi_2441, Parameter vinode_2437, Parameter vhandle_2437, NotExpr target_1, LogicalAndExpr target_2, LogicalAndExpr target_4, ExprStmt target_6, ExprStmt target_7, ReturnStmt target_8, ExprStmt target_9, EqualityOperation target_10
where
not func_0(vinode_2437, target_6, target_7)
and func_1(vsbi_2441, vhandle_2437, target_1)
and func_2(vhandle_2437, target_8, target_2)
and func_4(vsbi_2441, target_4)
and func_6(vinode_2437, target_6)
and func_7(vinode_2437, vhandle_2437, target_7)
and func_8(func, target_8)
and func_9(vsbi_2441, vinode_2437, target_9)
and func_10(vsbi_2441, target_10)
and vsbi_2441.getType().hasName("ext4_sb_info *")
and vinode_2437.getType().hasName("inode *")
and vhandle_2437.getType().hasName("handle_t *")
and vsbi_2441.(LocalVariable).getFunction() = func
and vinode_2437.getFunction() = func
and vhandle_2437.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
