/**
 * @name linux-6c8991f41546c3c472503dff1ea9daaddf9331c2-mlx5e_route_lookup_ipv6
 * @id cpp/linux/6c8991f41546c3c472503dff1ea9daaddf9331c2/mlx5e-route-lookup-ipv6
 * @description linux-6c8991f41546c3c472503dff1ea9daaddf9331c2-drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c-mlx5e_route_lookup_ipv6 CVE-2020-1749
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vipv6_stub, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="ipv6_dst_lookup"
	and target_0.getQualifier().(VariableAccess).getTarget()=vipv6_stub
}

predicate func_1(Parameter vfl6_291, Variable vdst_295, Variable vipv6_stub, AddressOfExpr target_12) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getTarget()=vdst_295
	and target_1.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup_flow"
	and target_1.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
	and target_1.getRValue().(VariableCall).getArgument(0) instanceof FunctionCall
	and target_1.getRValue().(VariableCall).getArgument(1) instanceof Literal
	and target_1.getRValue().(VariableCall).getArgument(2).(VariableAccess).getTarget()=vfl6_291
	and target_1.getRValue().(VariableCall).getArgument(3) instanceof Literal
	and target_1.getRValue().(VariableCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vdst_295, ReturnStmt target_13, AddressOfExpr target_14) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("IS_ERR")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vdst_295
	and target_2.getParent().(IfStmt).getThen()=target_13
	and target_14.getOperand().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vdst_295, ExprStmt target_15) {
exists(FunctionCall target_3 |
	target_3.getTarget().hasName("PTR_ERR")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vdst_295
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_15.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Parameter vmirred_dev_288, FunctionCall target_4) {
	target_4.getTarget().hasName("dev_net")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vmirred_dev_288
	and target_4.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_6(Variable vdst_295, VariableAccess target_6) {
	target_6.getTarget()=vdst_295
	and target_6.getParent().(AddressOfExpr).getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_7(Parameter vfl6_291, VariableAccess target_7) {
	target_7.getTarget()=vfl6_291
	and target_7.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_9(Parameter vfl6_291, Variable vdst_295, Variable vret_298, Variable vipv6_stub, AssignExpr target_9) {
	target_9.getLValue().(VariableAccess).getTarget()=vret_298
	and target_9.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="ipv6_dst_lookup"
	and target_9.getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipv6_stub
	and target_9.getRValue().(VariableCall).getArgument(0) instanceof FunctionCall
	and target_9.getRValue().(VariableCall).getArgument(1) instanceof Literal
	and target_9.getRValue().(VariableCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdst_295
	and target_9.getRValue().(VariableCall).getArgument(3).(VariableAccess).getTarget()=vfl6_291
}

predicate func_10(Variable vret_298, ReturnStmt target_13, RelationalOperation target_10) {
	 (target_10 instanceof GTExpr or target_10 instanceof LTExpr)
	and target_10.getLesserOperand().(VariableAccess).getTarget()=vret_298
	and target_10.getGreaterOperand() instanceof Literal
	and target_10.getParent().(IfStmt).getThen()=target_13
}

predicate func_11(Variable vret_298, RelationalOperation target_10, VariableAccess target_11) {
	target_11.getTarget()=vret_298
	and target_10.getLesserOperand().(VariableAccess).getLocation().isBefore(target_11.getLocation())
}

predicate func_12(Parameter vfl6_291, AddressOfExpr target_12) {
	target_12.getOperand().(PointerFieldAccess).getTarget().getName()="daddr"
	and target_12.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfl6_291
}

predicate func_13(Variable vret_298, ReturnStmt target_13) {
	target_13.getExpr().(VariableAccess).getTarget()=vret_298
}

predicate func_14(Variable vdst_295, AddressOfExpr target_14) {
	target_14.getOperand().(VariableAccess).getTarget()=vdst_295
}

predicate func_15(Variable vdst_295, ExprStmt target_15) {
	target_15.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("u8 *")
	and target_15.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ip6_dst_hoplimit")
	and target_15.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdst_295
}

from Function func, Parameter vmirred_dev_288, Parameter vfl6_291, Variable vdst_295, Variable vret_298, Variable vipv6_stub, PointerFieldAccess target_0, FunctionCall target_4, VariableAccess target_6, VariableAccess target_7, AssignExpr target_9, RelationalOperation target_10, VariableAccess target_11, AddressOfExpr target_12, ReturnStmt target_13, AddressOfExpr target_14, ExprStmt target_15
where
func_0(vipv6_stub, target_0)
and not func_1(vfl6_291, vdst_295, vipv6_stub, target_12)
and not func_2(vdst_295, target_13, target_14)
and not func_3(vdst_295, target_15)
and func_4(vmirred_dev_288, target_4)
and func_6(vdst_295, target_6)
and func_7(vfl6_291, target_7)
and func_9(vfl6_291, vdst_295, vret_298, vipv6_stub, target_9)
and func_10(vret_298, target_13, target_10)
and func_11(vret_298, target_10, target_11)
and func_12(vfl6_291, target_12)
and func_13(vret_298, target_13)
and func_14(vdst_295, target_14)
and func_15(vdst_295, target_15)
and vmirred_dev_288.getType().hasName("net_device *")
and vfl6_291.getType().hasName("flowi6 *")
and vdst_295.getType().hasName("dst_entry *")
and vret_298.getType().hasName("int")
and vipv6_stub.getType().hasName("const ipv6_stub *")
and vmirred_dev_288.getFunction() = func
and vfl6_291.getFunction() = func
and vdst_295.(LocalVariable).getFunction() = func
and vret_298.(LocalVariable).getFunction() = func
and not vipv6_stub.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
