/**
 * @name linux-415e3d3e90ce9e18727e8843ae343eda5a58fad6-scm_fp_dup
 * @id cpp/linux/415e3d3e90ce9e18727e8843ae343eda5a58fad6/scm-fp-dup
 * @description linux-415e3d3e90ce9e18727e8843ae343eda5a58fad6-net/core/scm.c-scm_fp_dup CVE-2016-2550
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnew_fpl_327, Parameter vfpl_325, VariableAccess target_1, ExprStmt target_2, ReturnStmt target_3, ArrayExpr target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="user"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_fpl_327
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_uid")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_325
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(VariableAccess).getLocation())
	and target_4.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnew_fpl_327, BlockStmt target_5, VariableAccess target_1) {
	target_1.getTarget()=vnew_fpl_327
	and target_1.getParent().(IfStmt).getThen()=target_5
}

predicate func_2(Variable vnew_fpl_327, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="max"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_fpl_327
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="count"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnew_fpl_327
}

predicate func_3(Variable vnew_fpl_327, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vnew_fpl_327
}

predicate func_4(Parameter vfpl_325, ArrayExpr target_4) {
	target_4.getArrayBase().(PointerFieldAccess).getTarget().getName()="fp"
	and target_4.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_325
	and target_4.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_5(Parameter vfpl_325, BlockStmt target_5) {
	target_5.getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getStmt(0).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_5.getStmt(0).(ForStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getStmt(0).(ForStmt).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="count"
	and target_5.getStmt(0).(ForStmt).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_325
	and target_5.getStmt(0).(ForStmt).getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getStmt(0).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("get_file")
	and target_5.getStmt(0).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="fp"
	and target_5.getStmt(0).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfpl_325
	and target_5.getStmt(0).(ForStmt).getStmt().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vnew_fpl_327, Parameter vfpl_325, VariableAccess target_1, ExprStmt target_2, ReturnStmt target_3, ArrayExpr target_4, BlockStmt target_5
where
not func_0(vnew_fpl_327, vfpl_325, target_1, target_2, target_3, target_4)
and func_1(vnew_fpl_327, target_5, target_1)
and func_2(vnew_fpl_327, target_2)
and func_3(vnew_fpl_327, target_3)
and func_4(vfpl_325, target_4)
and func_5(vfpl_325, target_5)
and vnew_fpl_327.getType().hasName("scm_fp_list *")
and vfpl_325.getType().hasName("scm_fp_list *")
and vnew_fpl_327.(LocalVariable).getFunction() = func
and vfpl_325.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
