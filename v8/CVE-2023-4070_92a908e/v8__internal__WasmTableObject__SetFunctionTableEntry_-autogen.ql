/**
 * @name v8-92a908e24a0150eca0c31ada47db7f5db71ffd4c-v8__internal__WasmTableObject__SetFunctionTableEntry_
 * @id cpp/v8/92a908e24a0150eca0c31ada47db7f5db71ffd4c/v8internalwasmtableobjectsetfunctiontableentry
 * @description v8-92a908e24a0150eca0c31ada47db7f5db71ffd4c-test/unittests/wasm/function-body-decoder-unittest.cc-v8__internal__WasmTableObject__SetFunctionTableEntry_ CVE-2023-4070
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter ventry_280, Parameter visolate_276, BlockStmt target_2, FunctionCall target_3, ConstructorCall target_4) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof FunctionCall
	and target_0.getRightOperand().(FunctionCall).getTarget().hasName("IsNull")
	and target_0.getRightOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=ventry_280
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=visolate_276
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getRightOperand().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter ventry_280, Parameter visolate_276, BlockStmt target_2, FunctionCall target_1) {
	target_1.getTarget().hasName("IsWasmNull")
	and target_1.getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=ventry_280
	and target_1.getArgument(0).(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_276
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Parameter visolate_276, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ClearDispatchTables")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=visolate_276
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("Handle<WasmTableObject>")
	and target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget().getType().hasName("Handle<FixedArray>")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("operator v8::internal::Object")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("wasm_null")
	and target_2.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(FunctionCall).getQualifier().(FunctionCall).getQualifier().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_276
}

predicate func_3(Parameter ventry_280, FunctionCall target_3) {
	target_3.getQualifier().(VariableAccess).getTarget()=ventry_280
}

predicate func_4(Parameter visolate_276, ConstructorCall target_4) {
	target_4.getArgument(0).(VariableAccess).getTarget()=visolate_276
}

from Function func, Parameter ventry_280, Parameter visolate_276, FunctionCall target_1, BlockStmt target_2, FunctionCall target_3, ConstructorCall target_4
where
not func_0(ventry_280, visolate_276, target_2, target_3, target_4)
and func_1(ventry_280, visolate_276, target_2, target_1)
and func_2(visolate_276, target_2)
and func_3(ventry_280, target_3)
and func_4(visolate_276, target_4)
and ventry_280.getType().hasName("Handle<Object>")
and visolate_276.getType().hasName("Isolate *")
and ventry_280.getFunction() = func
and visolate_276.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
