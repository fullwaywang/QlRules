/**
 * @name linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fuse_xattr_get
 * @id cpp/linux/5d069dbe8aaf2a197142558b6fb2978189ba3454/fuse-xattr-get
 * @description linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fs/fuse/xattr.c-fuse_xattr_get CVE-2020-36322
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_178, FunctionCall target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("fuse_is_bad")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_178
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vinode_178, FunctionCall target_1) {
	target_1.getTarget().hasName("fuse_getxattr")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vinode_178
	and target_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("const char *")
	and target_1.getArgument(2).(VariableAccess).getTarget().getType().hasName("void *")
	and target_1.getArgument(3).(VariableAccess).getTarget().getType().hasName("size_t")
}

from Function func, Parameter vinode_178, FunctionCall target_1
where
not func_0(vinode_178, target_1, func)
and func_1(vinode_178, target_1)
and vinode_178.getType().hasName("inode *")
and vinode_178.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
