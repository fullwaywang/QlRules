/**
 * @name linux-92ee3c60ec9fe64404dc035e7c41277d74aa26cb-snd_pcm_attach_substream
 * @id cpp/linux/92ee3c60ec9fe64404dc035e7c41277d74aa26cb/snd-pcm-attach-substream
 * @description linux-92ee3c60ec9fe64404dc035e7c41277d74aa26cb-sound/core/pcm.c-snd_pcm_attach_substream CVE-2022-1048
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="1192"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vruntime_889, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(DoStmt target_1 |
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__mutex_init")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="buffer_mutex"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_889
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="&runtime->buffer_mutex"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("lock_class_key")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vruntime_889, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="runtime"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("snd_pcm_substream *")
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vruntime_889
}

predicate func_3(Variable vruntime_889, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="state"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="status"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_889
	and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Variable vruntime_889, SizeofExprOperator target_0, ExprStmt target_2, ExprStmt target_3
where
func_0(func, target_0)
and not func_1(vruntime_889, target_2, target_3, func)
and func_2(vruntime_889, target_2)
and func_3(vruntime_889, target_3)
and vruntime_889.getType().hasName("snd_pcm_runtime *")
and vruntime_889.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
