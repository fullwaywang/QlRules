/**
 * @name linux-26928c8f00f6bb0e194f3957fe51c69d36838eb2-of_phy_leds
 * @id cpp/linux/26928c8f00f6bb0e194f3957fe51c69d36838eb2/of-phy-leds
 * @description linux-26928c8f00f6bb0e194f3957fe51c69d36838eb2-drivers/net/phy/phy_device.c-of_phy_leds CVE-2024-46767
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vleds_3150, VariableAccess target_2, AssignExpr target_3) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("of_node_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vleds_3150
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_2.getCondition()=target_2
		)
	)
	and target_3.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vleds_3150, Function func) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("of_node_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vleds_3150
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt
)
}

predicate func_2(Variable verr_3151, BlockStmt target_4, VariableAccess target_2) {
	target_2.getTarget()=verr_3151
	and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable vleds_3150, AssignExpr target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getRValue() |
		obj_0.getTarget().hasName("of_get_next_available_child")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vleds_3150
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("device_node *")
	)
	and target_3.getLValue().(VariableAccess).getTarget().getType().hasName("device_node *")
}

predicate func_4(Variable verr_3151, BlockStmt target_4) {
	exists(ExprStmt obj_0 | obj_0=target_4.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().hasName("of_node_put")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("device_node *")
		)
	)
	and exists(ExprStmt obj_2 | obj_2=target_4.getStmt(1) |
		exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
			obj_3.getTarget().hasName("phy_leds_unregister")
			and obj_3.getArgument(0).(VariableAccess).getTarget().getType().hasName("phy_device *")
		)
	)
	and target_4.getStmt(2).(ReturnStmt).getExpr().(VariableAccess).getTarget()=verr_3151
}

from Function func, Variable vleds_3150, Variable verr_3151, VariableAccess target_2, AssignExpr target_3, BlockStmt target_4
where
not func_0(vleds_3150, target_2, target_3)
and not func_1(vleds_3150, func)
and func_2(verr_3151, target_4, target_2)
and func_3(vleds_3150, target_3)
and func_4(verr_3151, target_4)
and vleds_3150.getType().hasName("device_node *")
and verr_3151.getType().hasName("int")
and vleds_3150.(LocalVariable).getFunction() = func
and verr_3151.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
