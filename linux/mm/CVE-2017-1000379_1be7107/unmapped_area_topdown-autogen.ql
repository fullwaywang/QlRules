/**
 * @name linux-1be7107fbe18eed3e319a6c3e83c78254b693acb-unmapped_area_topdown
 * @id cpp/linux/1be7107fbe18eed3e319a6c3e83c78254b693acb/unmapped-area-topdown
 * @description linux-1be7107fbe18eed3e319a6c3e83c78254b693acb-arch/x86/mm/hugetlbpage.c-unmapped_area_topdown CVE-2017-1000379
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvma_1858, ExprStmt target_9, LogicalAndExpr target_10) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("vm_end_gap")
		and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_9.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vvma_1858, ExprStmt target_11, ValueFieldAccess target_12) {
	exists(FunctionCall target_1 |
		target_1.getTarget().hasName("vm_start_gap")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vvma_1858
		and target_1.getParent().(AssignExpr).getRValue() = target_1
		and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation())
		and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_12.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vvma_1858, ExprStmt target_13) {
	exists(FunctionCall target_2 |
		target_2.getTarget().hasName("vm_end_gap")
		and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vvma_1858, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="vm_prev"
		and target_3.getQualifier().(VariableAccess).getTarget()=vvma_1858
}

predicate func_4(Variable vvma_1858, PointerFieldAccess target_4) {
		target_4.getTarget().getName()="vm_prev"
		and target_4.getQualifier().(VariableAccess).getTarget()=vvma_1858
}

predicate func_5(Variable vvma_1858, VariableAccess target_5) {
		target_5.getTarget()=vvma_1858
}

predicate func_6(Variable vvma_1858, LogicalAndExpr target_10, PointerFieldAccess target_6) {
		target_6.getTarget().getName()="vm_end"
		and target_6.getQualifier().(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_10.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_7(Variable vvma_1858, PointerFieldAccess target_7) {
		target_7.getTarget().getName()="vm_start"
		and target_7.getQualifier().(VariableAccess).getTarget()=vvma_1858
}

predicate func_8(Variable vvma_1858, ExprStmt target_13, PointerFieldAccess target_8) {
		target_8.getTarget().getName()="vm_end"
		and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_9(Variable vvma_1858, ExprStmt target_9) {
		target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_9.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_9.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_9.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getTarget().getName()="vm_end"
		and target_9.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_9.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_9.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
}

predicate func_10(Variable vvma_1858, LogicalAndExpr target_10) {
		target_10.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_10.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_10.getAnOperand().(ValueFieldAccess).getTarget().getName()="rb_right"
		and target_10.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vm_rb"
		and target_10.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
}

predicate func_11(Variable vvma_1858, ExprStmt target_11) {
		target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vvma_1858
		and target_11.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("vm_area_struct *")
}

predicate func_12(Variable vvma_1858, ValueFieldAccess target_12) {
		target_12.getTarget().getName()="rb_left"
		and target_12.getQualifier().(PointerFieldAccess).getTarget().getName()="vm_rb"
		and target_12.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
}

predicate func_13(Variable vvma_1858, EqualityOperation target_14, ExprStmt target_13) {
		target_13.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned long")
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getTarget().getName()="vm_end"
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vm_prev"
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
		and target_13.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
		and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
}

predicate func_14(Variable vvma_1858, EqualityOperation target_14) {
		target_14.getAnOperand().(VariableAccess).getTarget().getType().hasName("rb_node *")
		and target_14.getAnOperand().(ValueFieldAccess).getTarget().getName()="rb_right"
		and target_14.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vm_rb"
		and target_14.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvma_1858
}

from Function func, Variable vvma_1858, PointerFieldAccess target_3, PointerFieldAccess target_4, VariableAccess target_5, PointerFieldAccess target_6, PointerFieldAccess target_7, PointerFieldAccess target_8, ExprStmt target_9, LogicalAndExpr target_10, ExprStmt target_11, ValueFieldAccess target_12, ExprStmt target_13, EqualityOperation target_14
where
not func_0(vvma_1858, target_9, target_10)
and not func_1(vvma_1858, target_11, target_12)
and not func_2(vvma_1858, target_13)
and func_3(vvma_1858, target_3)
and func_4(vvma_1858, target_4)
and func_5(vvma_1858, target_5)
and func_6(vvma_1858, target_10, target_6)
and func_7(vvma_1858, target_7)
and func_8(vvma_1858, target_13, target_8)
and func_9(vvma_1858, target_9)
and func_10(vvma_1858, target_10)
and func_11(vvma_1858, target_11)
and func_12(vvma_1858, target_12)
and func_13(vvma_1858, target_14, target_13)
and func_14(vvma_1858, target_14)
and vvma_1858.getType().hasName("vm_area_struct *")
and vvma_1858.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
