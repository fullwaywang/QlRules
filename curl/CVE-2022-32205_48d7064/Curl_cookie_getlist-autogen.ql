/**
 * @name curl-48d7064a49148f0394-Curl_cookie_getlist
 * @id cpp/curl/48d7064a49148f0394/curl-cookie-getlist
 * @description curl-48d7064a49148f0394-lib/cookie.c-Curl_cookie_getlist CVE-2022-32205
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmatches_1385, VariableAccess target_3, ExprStmt target_4, IfStmt target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vmatches_1385
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="150"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("Curl_infof")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("Curl_easy *")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="Included max number of cookies (%u) in request!"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vmatches_1385
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_4.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_5.getCondition().(VariableAccess).getLocation()))
}

predicate func_2(Function func, LabelStmt target_2) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vnewco_1382, VariableAccess target_3) {
		target_3.getTarget()=vnewco_1382
}

predicate func_4(Variable vmatches_1385, ExprStmt target_4) {
		target_4.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=vmatches_1385
}

predicate func_5(Variable vmatches_1385, IfStmt target_5) {
		target_5.getCondition().(VariableAccess).getTarget()=vmatches_1385
		and target_5.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("Cookie **")
		and target_5.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(VariableAccess).getTarget().getType().hasName("curl_malloc_callback")
		and target_5.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(MulExpr).getLeftOperand().(SizeofTypeOperator).getType() instanceof LongType
		and target_5.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(MulExpr).getLeftOperand().(SizeofTypeOperator).getValue()="8"
		and target_5.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(MulExpr).getRightOperand().(VariableAccess).getTarget()=vmatches_1385
}

from Function func, Variable vnewco_1382, Variable vmatches_1385, LabelStmt target_2, VariableAccess target_3, ExprStmt target_4, IfStmt target_5
where
not func_0(vmatches_1385, target_3, target_4, target_5)
and func_2(func, target_2)
and func_3(vnewco_1382, target_3)
and func_4(vmatches_1385, target_4)
and func_5(vmatches_1385, target_5)
and vnewco_1382.getType().hasName("Cookie *")
and vmatches_1385.getType().hasName("size_t")
and vnewco_1382.(LocalVariable).getFunction() = func
and vmatches_1385.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
