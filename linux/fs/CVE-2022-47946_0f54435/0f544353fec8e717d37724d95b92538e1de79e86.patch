commit 0f544353fec8e717d37724d95b92538e1de79e86
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Nov 16 09:43:39 2022 +0100

    io_uring: kill goto error handling in io_sqpoll_wait_sq()
    
    Hunk extracted from commit 70aacfe66136809d7f080f89c492c278298719f4
    upstream.
    
    If the sqpoll thread has died, the out condition doesn't remove the
    waiting task from the waitqueue. The goto and check are not needed, just
    make it a break condition after setting the error value. That ensures
    that we always remove ourselves from sqo_sq_wait waitqueue.
    
    Reported-by: Xingyuan Mo <hdthky0@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/fs/io_uring.c b/fs/io_uring.c
index 05f360b..d1cb1ad 100644
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@ -9038,7 +9038,7 @@ static int io_sqpoll_wait_sq(struct io_ring_ctx *ctx)
 
 		if (unlikely(ctx->sqo_dead)) {
 			ret = -EOWNERDEAD;
-			goto out;
+			break;
 		}
 
 		if (!io_sqring_full(ctx))
@@ -9048,7 +9048,6 @@ static int io_sqpoll_wait_sq(struct io_ring_ctx *ctx)
 	} while (!signal_pending(current));
 
 	finish_wait(&ctx->sqo_sq_wait, &wait);
-out:
 	return ret;
 }
 
