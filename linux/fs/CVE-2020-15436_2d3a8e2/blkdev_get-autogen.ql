/**
 * @name linux-2d3a8e2deddea6c89961c422ec0c5b851e648c14-blkdev_get
 * @id cpp/linux/2d3a8e2deddea6c89961c422ec0c5b851e648c14/blkdev-get
 * @description linux-2d3a8e2deddea6c89961c422ec0c5b851e648c14-fs/block_dev.c-blkdev_get CVE-2020-15436
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vres_1718, Parameter vbdev_1715, LogicalAndExpr target_1, ReturnStmt target_2, AddressOfExpr target_3, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(VariableAccess).getTarget()=vres_1718
		and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bdput")
		and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbdev_1715
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(VariableAccess).getLocation())
		and target_0.getCondition().(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableAccess).getLocation())
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vres_1718, Parameter vbdev_1715, LogicalAndExpr target_1) {
		target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vres_1718
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("fmode_t")
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="bd_write_holder"
		and target_1.getAnOperand().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbdev_1715
		and target_1.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_1.getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("gendisk *")
		and target_1.getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="256"
}

predicate func_2(Variable vres_1718, ReturnStmt target_2) {
		target_2.getExpr().(VariableAccess).getTarget()=vres_1718
}

predicate func_3(Parameter vbdev_1715, AddressOfExpr target_3) {
		target_3.getOperand().(PointerFieldAccess).getTarget().getName()="bd_mutex"
		and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbdev_1715
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
}

from Function func, Variable vres_1718, Parameter vbdev_1715, LogicalAndExpr target_1, ReturnStmt target_2, AddressOfExpr target_3
where
not func_0(vres_1718, vbdev_1715, target_1, target_2, target_3, func)
and func_1(vres_1718, vbdev_1715, target_1)
and func_2(vres_1718, target_2)
and func_3(vbdev_1715, target_3)
and vres_1718.getType().hasName("int")
and vbdev_1715.getType().hasName("block_device *")
and vres_1718.(LocalVariable).getFunction() = func
and vbdev_1715.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
