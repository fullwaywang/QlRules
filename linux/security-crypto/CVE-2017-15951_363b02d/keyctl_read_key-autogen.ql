/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-keyctl_read_key
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/keyctl-read-key
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/keyctl.c-keyctl_read_key CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_758, UnaryMinusExpr target_0) {
		target_0.getValue()="-126"
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758
}

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="1"
		and not target_1.getValue()="0"
		and target_1.getParent().(ConditionalExpr).getParent().(IfStmt).getCondition() instanceof ConditionalExpr
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vkey_756, Variable vret_758, ExprStmt target_7, ExprStmt target_8, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("key_read_state")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vkey_756
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_3(Variable vret_758, BlockStmt target_9) {
	exists(RelationalOperation target_3 |
		 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
		and target_3.getLesserOperand().(VariableAccess).getTarget()=vret_758
		and target_3.getGreaterOperand().(Literal).getValue()="0"
		and target_3.getParent().(IfStmt).getThen()=target_9)
}

predicate func_4(ConditionalExpr target_6, Function func) {
	exists(GotoStmt target_4 |
		target_4.getParent().(IfStmt).getCondition()=target_6
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vkey_756, VariableAccess target_5) {
		target_5.getTarget()=vkey_756
		and target_5.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ConditionalExpr).getThen() instanceof FunctionCall
}

predicate func_6(Variable vkey_756, BlockStmt target_9, ConditionalExpr target_6) {
		target_6.getCondition() instanceof Literal
		and target_6.getThen().(FunctionCall).getTarget().hasName("constant_test_bit")
		and target_6.getThen().(FunctionCall).getArgument(0).(Literal).getValue()="5"
		and target_6.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_6.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_756
		and target_6.getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
		and target_6.getElse().(FunctionCall).getArgument(0).(Literal).getValue()="5"
		and target_6.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_6.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_756
		and target_6.getParent().(IfStmt).getThen()=target_9
}

predicate func_7(Variable vkey_756, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vkey_756
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("key_ref_to_ptr")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("key_ref_t")
}

predicate func_8(Variable vret_758, FunctionCall target_10, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758
		and target_8.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-126"
		and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_10
}

predicate func_9(Variable vret_758, BlockStmt target_9) {
		target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_758
		and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
}

predicate func_10(Function func, FunctionCall target_10) {
		target_10.getTarget().hasName("IS_ERR")
		and target_10.getArgument(0).(VariableAccess).getTarget().getType().hasName("key_ref_t")
		and target_10.getEnclosingFunction() = func
}

from Function func, Variable vkey_756, Variable vret_758, UnaryMinusExpr target_0, Literal target_1, VariableAccess target_5, ConditionalExpr target_6, ExprStmt target_7, ExprStmt target_8, BlockStmt target_9, FunctionCall target_10
where
func_0(vret_758, target_0)
and func_1(func, target_1)
and not func_2(vkey_756, vret_758, target_7, target_8, func)
and not func_3(vret_758, target_9)
and not func_4(target_6, func)
and func_5(vkey_756, target_5)
and func_6(vkey_756, target_9, target_6)
and func_7(vkey_756, target_7)
and func_8(vret_758, target_10, target_8)
and func_9(vret_758, target_9)
and func_10(func, target_10)
and vkey_756.getType().hasName("key *")
and vret_758.getType().hasName("long")
and vkey_756.(LocalVariable).getFunction() = func
and vret_758.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
