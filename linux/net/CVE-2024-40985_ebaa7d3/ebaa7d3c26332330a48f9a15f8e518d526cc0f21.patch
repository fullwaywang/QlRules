commit ebaa7d3c26332330a48f9a15f8e518d526cc0f21
Author: Dmitry Safonov <0x7f454c46@gmail.com>
Date:   Wed Jun 19 01:29:04 2024 +0100

    net/tcp_ao: Don't leak ao_info on error-path
    
    commit f9ae848904289ddb16c7c9e4553ed4c64300de49 upstream.
    
    It seems I introduced it together with TCP_AO_CMDF_AO_REQUIRED, on
    version 5 [1] of TCP-AO patches. Quite frustrative that having all these
    selftests that I've written, running kmemtest & kcov was always in todo.
    
    [1]: https://lore.kernel.org/netdev/20230215183335.800122-5-dima@arista.com/
    
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Closes: https://lore.kernel.org/netdev/20240617072451.1403e1d2@kernel.org/
    Fixes: 0aadc73995d0 ("net/tcp: Prevent TCP-MD5 with TCP-AO being set")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Safonov <0x7f454c46@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20240619-tcp-ao-required-leak-v1-1-6408f3c94247@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/ipv4/tcp_ao.c b/net/ipv4/tcp_ao.c
index 37c42b63ff99..09c0fa6756b7 100644
--- a/net/ipv4/tcp_ao.c
+++ b/net/ipv4/tcp_ao.c
@@ -1968,8 +1968,10 @@ static int tcp_ao_info_cmd(struct sock *sk, unsigned short int family,
 		first = true;
 	}
 
-	if (cmd.ao_required && tcp_ao_required_verify(sk))
-		return -EKEYREJECTED;
+	if (cmd.ao_required && tcp_ao_required_verify(sk)) {
+		err = -EKEYREJECTED;
+		goto out;
+	}
 
 	/* For sockets in TCP_CLOSED it's possible set keys that aren't
 	 * matching the future peer (address/port/VRF/etc),
