/**
 * @name linux-c8e252586f8d5de906385d8cf6385fee289a825e-copy_regset_to_user
 * @id cpp/linux/c8e252586f8d5de906385d8cf6385fee289a825e/copy-regset-to-user
 * @description linux-c8e252586f8d5de906385d8cf6385fee289a825e-include/linux/regset.h-copy_regset_to_user CVE-2012-1097
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vregset_336, VariableCall target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="get"
		and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_336
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-95"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vregset_336, VariableCall target_2) {
		target_2.getExpr().(PointerFieldAccess).getTarget().getName()="get"
		and target_2.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregset_336
		and target_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
		and target_2.getArgument(1).(VariableAccess).getTarget()=vregset_336
		and target_2.getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_2.getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_2.getArgument(4).(Literal).getValue()="0"
		and target_2.getArgument(5).(VariableAccess).getTarget().getType().hasName("void *")
}

from Function func, Variable vregset_336, VariableCall target_2
where
not func_0(vregset_336, target_2, func)
and func_2(vregset_336, target_2)
and vregset_336.getType().hasName("const user_regset *")
and vregset_336.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
