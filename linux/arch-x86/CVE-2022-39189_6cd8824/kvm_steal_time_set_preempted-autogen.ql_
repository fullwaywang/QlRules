/**
 * @name linux-6cd88243c7e03845a450795e134b488fc2afb736-kvm_steal_time_set_preempted
 * @id cpp/linux/6cd88243c7e03845a450795e134b488fc2afb736/kvm-steal-time-set-preempted
 * @description linux-6cd88243c7e03845a450795e134b488fc2afb736-arch/x86/kvm/x86.c-kvm_steal_time_set_preempted CVE-2022-39189
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvcpu_4621, IfStmt target_2, AddressOfExpr target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getTarget().getName()="at_instruction_boundary"
	and target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4621
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="preemption_other"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="stat"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4621
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_4621, IfStmt target_2, NotExpr target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getTarget().getName()="preemption_reported"
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="stat"
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4621
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_1.getExpr().(PostfixIncrExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vvcpu_4621, IfStmt target_2) {
	target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="msr_val"
	and target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="st"
	and target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4621
	and target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
}

predicate func_3(Parameter vvcpu_4621, AddressOfExpr target_3) {
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="cache"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="st"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4621
}

predicate func_4(Parameter vvcpu_4621, NotExpr target_4) {
	target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="msr_val"
	and target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="st"
	and target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
	and target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_4621
	and target_4.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
}

from Function func, Parameter vvcpu_4621, IfStmt target_2, AddressOfExpr target_3, NotExpr target_4
where
not func_0(vvcpu_4621, target_2, target_3, func)
and not func_1(vvcpu_4621, target_2, target_4, func)
and func_2(vvcpu_4621, target_2)
and func_3(vvcpu_4621, target_3)
and func_4(vvcpu_4621, target_4)
and vvcpu_4621.getType().hasName("kvm_vcpu *")
and vvcpu_4621.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
