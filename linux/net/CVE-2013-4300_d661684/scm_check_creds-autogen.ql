/**
 * @name linux-d661684cf6820331feae71146c35da83d794467e-scm_check_creds
 * @id cpp/linux/d661684cf6820331feae71146c35da83d794467e/scm-check-creds
 * @description linux-d661684cf6820331feae71146c35da83d794467e-net/core/scm.c-scm_check_creds CVE-2013-4300
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("task_active_pid_ns")
	and target_0.getArgument(0) instanceof FunctionCall
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("ns_capable")
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="pid_ns"
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="nsproxy"
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier() instanceof FunctionCall
	and target_0.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(1).(Literal).getValue()="21"
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("get_current")
	and target_1.getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("ns_capable")
	and target_1.getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="user_ns"
	and target_1.getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="pid_ns"
	and target_1.getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(LogicalOrExpr).getRightOperand().(FunctionCall).getArgument(1).(Literal).getValue()="21"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="pid_ns"
	and target_2.getQualifier().(PointerFieldAccess).getTarget().getName()="nsproxy"
	and target_2.getQualifier().(PointerFieldAccess).getQualifier() instanceof FunctionCall
	and target_2.getEnclosingFunction() = func
}

from Function func, FunctionCall target_1, PointerFieldAccess target_2
where
not func_0(func)
and func_1(func, target_1)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
