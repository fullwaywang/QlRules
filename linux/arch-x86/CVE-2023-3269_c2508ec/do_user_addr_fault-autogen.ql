/**
 * @name linux-c2508ec5a58db67093f4fb8bf89a9a7c53a109e9-do_user_addr_fault
 * @id cpp/linux/c2508ec5a58db67093f4fb8bf89a9a7c53a109e9/do-user-addr-fault
 * @description linux-c2508ec5a58db67093f4fb8bf89a9a7c53a109e9-arch/x86/mm/fault.c-do_user_addr_fault CVE-2023-3269
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, ExprStmt target_18, ExprStmt target_13, FunctionCall target_0) {
	target_0.getTarget().hasName("bad_area")
	and not target_0.getTarget().hasName("bad_area_nosemaphore")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_0.getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_0.getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_1(Parameter vaddress_1233, Variable vvma_1235, Variable vmm_1237, FunctionCall target_1) {
	target_1.getTarget().hasName("find_vma")
	and not target_1.getTarget().hasName("lock_mm_and_find_vma")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vmm_1237
	and target_1.getArgument(1).(VariableAccess).getTarget()=vaddress_1233
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vvma_1235
}

predicate func_2(Parameter vregs_1231, BlockStmt target_21, NotExpr target_2) {
	target_2.getOperand().(FunctionCall).getTarget().hasName("user_mode")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_2.getParent().(LogicalAndExpr).getRightOperand() instanceof NotExpr
	and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_21
}

predicate func_3(Variable vmm_1237, VariableAccess target_3) {
	target_3.getTarget()=vmm_1237
	and target_3.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_4(Parameter vregs_1231, VariableAccess target_4) {
	target_4.getTarget()=vregs_1231
	and target_4.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_5(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, Variable vmm_1237, Function func, IfStmt target_5) {
	target_5.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_5.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("mmap_read_trylock")
	and target_5.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_1237
	and target_5.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("search_exception_tables")
	and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ip"
	and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bad_area_nosemaphore")
	and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_5.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_5.getThen().(BlockStmt).getStmt(1) instanceof LabelStmt
	and target_5.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mmap_read_lock")
	and target_5.getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_1237
	and target_5.getElse().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_5.getElse().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_sleep")
	and target_5.getElse().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_5.getElse().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_5.getElse().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("might_resched")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

/*predicate func_6(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, FunctionCall target_22, IfStmt target_6) {
	target_6.getCondition().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_6.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("search_exception_tables")
	and target_6.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ip"
	and target_6.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vregs_1231
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bad_area_nosemaphore")
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
}

*/
/*predicate func_7(Variable vmm_1237, FunctionCall target_22, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("mmap_read_lock")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_1237
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
}

*/
/*predicate func_8(FunctionCall target_22, Function func, DoStmt target_8) {
	target_8.getCondition() instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_sleep")
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_8.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("might_resched")
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
	and target_8.getEnclosingFunction() = func
}

*/
/*predicate func_9(Function func, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("__might_sleep")
	and target_9.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_9.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_9.getEnclosingFunction() = func
}

*/
/*predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("might_resched")
	and target_10.getEnclosingFunction() = func
}

*/
predicate func_11(Parameter vaddress_1233, Function func, IfStmt target_11) {
	target_11.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_11.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getTarget().getName()="vm_start"
	and target_11.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="(unknown field)"
	and target_11.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vaddress_1233
	and target_11.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_11.getThen().(GotoStmt).getName() ="good_area"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, Function func, IfStmt target_12) {
	target_12.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_12.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="vm_flags"
	and target_12.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="256"
	and target_12.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bad_area")
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_12.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
}

predicate func_13(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, FunctionCall target_23, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("bad_area")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_13.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
}

/*predicate func_14(FunctionCall target_23, Function func, ReturnStmt target_14) {
	target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
	and target_14.getEnclosingFunction() = func
}

*/
predicate func_15(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, Variable vvma_1235, Function func, IfStmt target_15) {
	target_15.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_15.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("expand_stack")
	and target_15.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvma_1235
	and target_15.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vaddress_1233
	and target_15.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_15.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bad_area")
	and target_15.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_15.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_15.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

/*predicate func_16(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, FunctionCall target_24, ExprStmt target_13, ExprStmt target_25, NotExpr target_26, ExprStmt target_16) {
	target_16.getExpr().(FunctionCall).getTarget().hasName("bad_area")
	and target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_16.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_16.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_16.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_24
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_16.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_25.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_16.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_26.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

*/
/*predicate func_17(FunctionCall target_24, Function func, ReturnStmt target_17) {
	target_17.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_24
	and target_17.getEnclosingFunction() = func
}

*/
predicate func_18(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, LogicalAndExpr target_28, ExprStmt target_18) {
	target_18.getExpr().(FunctionCall).getTarget().hasName("bad_area_nosemaphore")
	and target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_18.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_18.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_18.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_28
}

predicate func_21(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, LogicalAndExpr target_28, BlockStmt target_21) {
	target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bad_area_nosemaphore")
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_21.getParent().(IfStmt).getCondition()=target_28
}

predicate func_22(Function func, FunctionCall target_22) {
	target_22.getTarget().hasName("__builtin_expect")
	and target_22.getArgument(0) instanceof NotExpr
	and target_22.getArgument(1) instanceof Literal
	and target_22.getEnclosingFunction() = func
}

predicate func_23(Function func, FunctionCall target_23) {
	target_23.getTarget().hasName("__builtin_expect")
	and target_23.getArgument(0) instanceof NotExpr
	and target_23.getArgument(1) instanceof Literal
	and target_23.getEnclosingFunction() = func
}

predicate func_24(Function func, FunctionCall target_24) {
	target_24.getTarget().hasName("__builtin_expect")
	and target_24.getArgument(0) instanceof NotExpr
	and target_24.getArgument(1) instanceof Literal
	and target_24.getEnclosingFunction() = func
}

predicate func_25(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, Variable vvma_1235, ExprStmt target_25) {
	target_25.getExpr().(FunctionCall).getTarget().hasName("bad_area_access_error")
	and target_25.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_25.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_25.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_25.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vvma_1235
}

predicate func_26(Parameter verror_code_1232, Variable vvma_1235, BlockStmt target_29, NotExpr target_26) {
	target_26.getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("access_error")
	and target_26.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=verror_code_1232
	and target_26.getOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvma_1235
	and target_26.getParent().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_26.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_29
}

predicate func_28(Function func, LogicalAndExpr target_28) {
	target_28.getLeftOperand() instanceof NotExpr
	and target_28.getRightOperand() instanceof NotExpr
	and target_28.getEnclosingFunction() = func
}

predicate func_29(Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, Variable vvma_1235, BlockStmt target_29) {
	target_29.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("bad_area_access_error")
	and target_29.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vregs_1231
	and target_29.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=verror_code_1232
	and target_29.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vaddress_1233
	and target_29.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vvma_1235
}

from Function func, Parameter vregs_1231, Parameter verror_code_1232, Parameter vaddress_1233, Variable vvma_1235, Variable vmm_1237, FunctionCall target_0, FunctionCall target_1, NotExpr target_2, VariableAccess target_3, VariableAccess target_4, IfStmt target_5, IfStmt target_11, IfStmt target_12, ExprStmt target_13, IfStmt target_15, ExprStmt target_18, BlockStmt target_21, FunctionCall target_22, FunctionCall target_23, FunctionCall target_24, ExprStmt target_25, NotExpr target_26, LogicalAndExpr target_28, BlockStmt target_29
where
func_0(vregs_1231, verror_code_1232, vaddress_1233, target_18, target_13, target_0)
and func_1(vaddress_1233, vvma_1235, vmm_1237, target_1)
and func_2(vregs_1231, target_21, target_2)
and func_3(vmm_1237, target_3)
and func_4(vregs_1231, target_4)
and func_5(vregs_1231, verror_code_1232, vaddress_1233, vmm_1237, func, target_5)
and func_11(vaddress_1233, func, target_11)
and func_12(vregs_1231, verror_code_1232, vaddress_1233, func, target_12)
and func_13(vregs_1231, verror_code_1232, vaddress_1233, target_23, target_13)
and func_15(vregs_1231, verror_code_1232, vaddress_1233, vvma_1235, func, target_15)
and func_18(vregs_1231, verror_code_1232, vaddress_1233, target_28, target_18)
and func_21(vregs_1231, verror_code_1232, vaddress_1233, target_28, target_21)
and func_22(func, target_22)
and func_23(func, target_23)
and func_24(func, target_24)
and func_25(vregs_1231, verror_code_1232, vaddress_1233, vvma_1235, target_25)
and func_26(verror_code_1232, vvma_1235, target_29, target_26)
and func_28(func, target_28)
and func_29(vregs_1231, verror_code_1232, vaddress_1233, vvma_1235, target_29)
and vregs_1231.getType().hasName("pt_regs *")
and verror_code_1232.getType().hasName("unsigned long")
and vaddress_1233.getType().hasName("unsigned long")
and vvma_1235.getType().hasName("vm_area_struct *")
and vmm_1237.getType().hasName("mm_struct *")
and vregs_1231.getFunction() = func
and verror_code_1232.getFunction() = func
and vaddress_1233.getFunction() = func
and vvma_1235.(LocalVariable).getFunction() = func
and vmm_1237.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
