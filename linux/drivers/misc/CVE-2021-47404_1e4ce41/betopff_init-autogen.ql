/**
 * @name linux-1e4ce418b1cb1a810256b5fb3fd33d22d1325993-betopff_init
 * @id cpp/linux/1e4ce418b1cb1a810256b5fb3fd33d22d1325993/betopff-init
 * @description linux-1e4ce418b1cb1a810256b5fb3fd33d22d1325993-drivers/hid/hid-betopff.c-betopff_init CVE-2021-47404
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr() instanceof StmtExpr
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Variable vhidinput_59, Initializer target_1) {
	target_1.getExpr().(PointerFieldAccess).getTarget().getName()="input"
	and target_1.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhidinput_59
}

predicate func_2(Parameter vhid_55, IfStmt target_9, AddressOfExpr target_10, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(FunctionCall).getTarget().hasName("list_empty")
	and target_2.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="inputs"
	and target_2.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhid_55
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_2.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_9.getLocation())
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Variable vhidinput_59, IfStmt target_9, Function func) {
exists(ExprStmt target_5 |
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vhidinput_59
	and target_5.getExpr().(AssignExpr).getRValue() instanceof StmtExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getLocation().isBefore(target_9.getLocation()))
}

predicate func_6(Variable vhidinput_59, Variable vdev_63, IfStmt target_9, ExprStmt target_12, Function func) {
exists(ExprStmt target_6 |
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdev_63
	and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="input"
	and target_6.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhidinput_59
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getLocation().isBefore(target_9.getLocation())
	and target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_12.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_7(Variable v__mptr_60, StmtExpr target_7) {
	target_7.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_7.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_7.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_60
	and target_7.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

predicate func_8(Variable vhidinput_59, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="input"
	and target_8.getQualifier().(VariableAccess).getTarget()=vhidinput_59
}

predicate func_9(Function func, IfStmt target_9) {
	target_9.getCondition().(FunctionCall).getTarget().hasName("list_empty")
	and target_9.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("list_head *")
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_9.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Parameter vhid_55, AddressOfExpr target_10) {
	target_10.getOperand().(ValueFieldAccess).getTarget().getName()="report_list"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="report_enum"
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhid_55
	and target_10.getOperand().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
}

predicate func_12(Variable vdev_63, ExprStmt target_12) {
	target_12.getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_12.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="80"
	and target_12.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="ffbit"
	and target_12.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_63
}

from Function func, Parameter vhid_55, Variable vhidinput_59, Variable v__mptr_60, Variable vdev_63, Initializer target_0, Initializer target_1, StmtExpr target_7, PointerFieldAccess target_8, IfStmt target_9, AddressOfExpr target_10, ExprStmt target_12
where
func_0(func, target_0)
and func_1(vhidinput_59, target_1)
and not func_2(vhid_55, target_9, target_10, func)
and not func_5(vhidinput_59, target_9, func)
and not func_6(vhidinput_59, vdev_63, target_9, target_12, func)
and func_7(v__mptr_60, target_7)
and func_8(vhidinput_59, target_8)
and func_9(func, target_9)
and func_10(vhid_55, target_10)
and func_12(vdev_63, target_12)
and vhid_55.getType().hasName("hid_device *")
and vhidinput_59.getType().hasName("hid_input *")
and v__mptr_60.getType().hasName("void *")
and vdev_63.getType().hasName("input_dev *")
and vhid_55.getFunction() = func
and vhidinput_59.(LocalVariable).getFunction() = func
and v__mptr_60.(LocalVariable).getFunction() = func
and vdev_63.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
