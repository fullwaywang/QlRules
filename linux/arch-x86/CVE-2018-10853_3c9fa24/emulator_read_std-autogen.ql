/**
 * @name linux-3c9fa24ca7c9c47605672916491f79e8ccacb9e6-emulator_read_std
 * @id cpp/linux/3c9fa24ca7c9c47605672916491f79e8ccacb9e6/emulator-read-std
 * @description linux-3c9fa24ca7c9c47605672916491f79e8ccacb9e6-arch/x86/kvm/x86.c-emulator_read_std CVE-2018-10853
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvcpu_4816, FunctionCall target_4, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="get_cpl"
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("kvm_x86_ops *")
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_4816
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="3"
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getType().hasName("u32")
	and target_0.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="4"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getArgument(3).(VariableAccess).getLocation()))
}

predicate func_4(Variable vvcpu_4816, FunctionCall target_4) {
	target_4.getTarget().hasName("kvm_read_guest_virt_helper")
	and target_4.getArgument(0).(VariableAccess).getTarget().getType().hasName("gva_t")
	and target_4.getArgument(1).(VariableAccess).getTarget().getType().hasName("void *")
	and target_4.getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_4.getArgument(3).(VariableAccess).getTarget()=vvcpu_4816
	and target_4.getArgument(4) instanceof Literal
	and target_4.getArgument(5).(VariableAccess).getTarget().getType().hasName("x86_exception *")
}

from Function func, Variable vvcpu_4816, FunctionCall target_4
where
not func_0(vvcpu_4816, target_4, func)
and func_4(vvcpu_4816, target_4)
and vvcpu_4816.getType().hasName("kvm_vcpu *")
and vvcpu_4816.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
