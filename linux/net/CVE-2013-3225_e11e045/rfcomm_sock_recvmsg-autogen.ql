/**
 * @name linux-e11e0455c0d7d3d62276a0c55d9dfbc16779d691-rfcomm_sock_recvmsg
 * @id cpp/linux/e11e0455c0d7d3d62276a0c55d9dfbc16779d691/rfcomm-sock-recvmsg
 * @description linux-e11e0455c0d7d3d62276a0c55d9dfbc16779d691-net/bluetooth/rfcomm/sock.c-rfcomm_sock_recvmsg CVE-2013-3225
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vmsg_603, FunctionCall target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="msg_namelen"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_603
	and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Function func, FunctionCall target_1) {
	target_1.getTarget().hasName("test_and_clear_bit")
	and target_1.getArgument(0).(Literal).getValue()="8"
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("rfcomm_dlc *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vmsg_603, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("bt_sock_stream_recvmsg")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kiocb *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("socket *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vmsg_603
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("size_t")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Parameter vmsg_603, FunctionCall target_1, ExprStmt target_2
where
not func_0(vmsg_603, target_1, target_2)
and func_1(func, target_1)
and func_2(vmsg_603, target_2)
and vmsg_603.getType().hasName("msghdr *")
and vmsg_603.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
