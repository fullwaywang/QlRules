/**
 * @name linux-f6d8bd051c391c1c0458a30b2a7abcd939329259-inet_sk_reselect_saddr
 * @id cpp/linux/f6d8bd051c391c1c0458a30b2a7abcd939329259/inet-sk-reselect-saddr
 * @description linux-f6d8bd051c391c1c0458a30b2a7abcd939329259-net/ipv4/af_inet.c-inet_sk_reselect_saddr CVE-2012-3552
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinet_1103, IfStmt target_9, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ip_options_rcu *")
	and target_0.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_0.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerFieldAccess).getTarget().getName()="inet_opt"
	and target_0.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_9.getLocation()))
}

/*predicate func_1(Variable vinet_1103, ExprStmt target_10) {
exists(LogicalAndExpr target_1 |
	target_1.getLeftOperand().(FunctionCall).getTarget().hasName("debug_lockdep_rcu_enabled")
	and target_1.getRightOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
	and target_1.getParent().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="opt"
	and target_1.getParent().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="srr"
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_1.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
	and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_10)
}

*/
/*predicate func_2(Parameter vsk_1101, Variable vinet_1103, ExprStmt target_10, FunctionCall target_11, BitwiseOrExpr target_12) {
exists(NotExpr target_2 |
	target_2.getOperand().(ValueFieldAccess).getTarget().getName()="owned"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_lock"
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1101
	and target_2.getParent().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="opt"
	and target_2.getParent().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="srr"
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_2.getParent().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
	and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_10
	and target_11.getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

*/
predicate func_3(ExprStmt target_10, Function func) {
exists(LogicalAndExpr target_3 |
	target_3.getLeftOperand().(VariableAccess).getType().hasName("ip_options_rcu *")
	and target_3.getRightOperand().(ValueFieldAccess).getTarget().getName()="srr"
	and target_3.getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_3.getRightOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ip_options_rcu *")
	and target_3.getParent().(IfStmt).getThen()=target_10
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Function func) {
exists(ValueFieldAccess target_4 |
	target_4.getTarget().getName()="faddr"
	and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ip_options_rcu *")
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Variable vinet_1103, VariableAccess target_5) {
	target_5.getTarget()=vinet_1103
}

predicate func_6(Variable vinet_1103, PointerFieldAccess target_6) {
	target_6.getTarget().getName()="opt"
	and target_6.getQualifier().(VariableAccess).getTarget()=vinet_1103
}

predicate func_7(Variable vinet_1103, PointerFieldAccess target_7) {
	target_7.getTarget().getName()="srr"
	and target_7.getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_7.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
}

predicate func_8(Variable vinet_1103, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="faddr"
	and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
}

predicate func_9(Variable vinet_1103, IfStmt target_9) {
	target_9.getCondition().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="opt"
	and target_9.getCondition().(LogicalAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
	and target_9.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="srr"
	and target_9.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_9.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
	and target_9.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("__be32")
	and target_9.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="faddr"
	and target_9.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_9.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
}

predicate func_10(Variable vinet_1103, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("__be32")
	and target_10.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="faddr"
	and target_10.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="opt"
	and target_10.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_1103
}

predicate func_11(Parameter vsk_1101, FunctionCall target_11) {
	target_11.getTarget().hasName("inet_sk")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vsk_1101
}

predicate func_12(Parameter vsk_1101, BitwiseOrExpr target_12) {
	target_12.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="tos"
	and target_12.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("inet_sk")
	and target_12.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1101
	and target_12.getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="30"
	and target_12.getRightOperand().(FunctionCall).getTarget().hasName("sock_flag")
	and target_12.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1101
}

from Function func, Parameter vsk_1101, Variable vinet_1103, VariableAccess target_5, PointerFieldAccess target_6, PointerFieldAccess target_7, PointerFieldAccess target_8, IfStmt target_9, ExprStmt target_10, FunctionCall target_11, BitwiseOrExpr target_12
where
not func_0(vinet_1103, target_9, func)
and not func_3(target_10, func)
and not func_4(func)
and func_5(vinet_1103, target_5)
and func_6(vinet_1103, target_6)
and func_7(vinet_1103, target_7)
and func_8(vinet_1103, target_8)
and func_9(vinet_1103, target_9)
and func_10(vinet_1103, target_10)
and func_11(vsk_1101, target_11)
and func_12(vsk_1101, target_12)
and vsk_1101.getType().hasName("sock *")
and vinet_1103.getType().hasName("inet_sock *")
and vsk_1101.getFunction() = func
and vinet_1103.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
