/**
 * @name linux-8821f5dc187bdf16cfb32ef5aa8c3035273fa79a-mt_touch_input_mapping
 * @id cpp/linux/8821f5dc187bdf16cfb32ef5aa8c3035273fa79a/mt-touch-input-mapping
 * @description linux-8821f5dc187bdf16cfb32ef5aa8c3035273fa79a-drivers/hid/hid-multitouch.c-mt_touch_input_mapping CVE-2013-2897
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfield_405, Parameter vusage_405, PointerFieldAccess target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="index"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfield_405
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="maxfield"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="report"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfield_405
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="usage_index"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vusage_405
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="report_count"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfield_405
	and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="1"
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_1
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vusage_405, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="hid"
	and target_1.getQualifier().(VariableAccess).getTarget()=vusage_405
}

predicate func_2(Parameter vfield_405, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("set_abs")
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="input"
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hid_input *")
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="58"
	and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vfield_405
	and target_2.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="sn_pressure"
	and target_2.getExpr().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mt_class *")
}

predicate func_3(Parameter vfield_405, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cc_index"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mt_device *")
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="index"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfield_405
}

predicate func_4(Parameter vusage_405, PointerFieldAccess target_1, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("mt_store_field")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vusage_405
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("mt_device *")
	and target_4.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("hid_input *")
	and target_4.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_1
}

predicate func_5(Parameter vusage_405, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cc_value_index"
	and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("mt_device *")
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="usage_index"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vusage_405
}

from Function func, Parameter vfield_405, Parameter vusage_405, PointerFieldAccess target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5
where
not func_0(vfield_405, vusage_405, target_1, target_2, target_3, target_4, target_5)
and func_1(vusage_405, target_1)
and func_2(vfield_405, target_2)
and func_3(vfield_405, target_3)
and func_4(vusage_405, target_1, target_4)
and func_5(vusage_405, target_5)
and vfield_405.getType().hasName("hid_field *")
and vusage_405.getType().hasName("hid_usage *")
and vfield_405.getFunction() = func
and vusage_405.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
