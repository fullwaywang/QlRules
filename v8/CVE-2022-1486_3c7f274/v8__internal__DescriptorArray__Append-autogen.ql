/**
 * @name v8-3c7f274770e90b766ed554a6ca599e70341c9735-v8__internal__DescriptorArray__Append
 * @id cpp/v8/3c7f274770e90b766ed554a6ca599e70341c9735/v8internaldescriptorarrayappend
 * @description v8-3c7f274770e90b766ed554a6ca599e70341c9735-src/objects/descriptor-array-inl.h-v8__internal__DescriptorArray__Append CVE-2022-1486
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdesc_239, Initializer target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("hash")
	and target_0.getExpr().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("GetKey")
	and target_0.getExpr().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vdesc_239
}

predicate func_1(Variable vhash_246, VariableAccess target_1) {
	target_1.getTarget()=vhash_246
	and target_1.getParent().(LEExpr).getLesserOperand() instanceof FunctionCall
	and target_1.getParent().(LEExpr).getParent().(IfStmt).getThen() instanceof BreakStmt
}

predicate func_2(IfStmt target_9, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("uint32_t")
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getLocation().isBefore(target_9.getLocation())
	and target_2.getEnclosingFunction() = func)
}

predicate func_4(Function func) {
exists(IfStmt target_4 |
	target_4.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_4.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("uint32_t")
	and target_4.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(EqualityOperation).getRightOperand().(VariableAccess).getType().hasName("uint32_t")
	and target_4.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_4.getThen() instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_5(Variable vinsertion_248, Parameter vdesc_239, ExprStmt target_10, FunctionCall target_11, Function func) {
exists(ExprStmt target_5 |
	target_5.getExpr().(FunctionCall).getTarget().hasName("CheckNameCollisionDuringInsertion")
	and target_5.getExpr().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdesc_239
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("uint32_t")
	and target_5.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vinsertion_248
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getFollowingStmt() instanceof ReturnStmt
	and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
	and target_11.getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_6(Variable vno_gc_240, DestructorCall target_13, Function func) {
exists(ReturnStmt target_6 |
	target_6.getImplicitDestructorCall(0).(DestructorCall).getQualifier().(VariableAccess).getTarget()=vno_gc_240
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
	and target_6.getFollowingStmt() instanceof ReturnStmt
	and target_6.getImplicitDestructorCall(0).(DestructorCall).getQualifier().(VariableAccess).getLocation().isBefore(target_13.getQualifier().(VariableAccess).getLocation()))
}

predicate func_7(Variable vhash_246, Variable vkey_251, FunctionCall target_7) {
	target_7.getTarget().hasName("hash")
	and target_7.getQualifier().(VariableAccess).getTarget()=vkey_251
	and target_7.getParent().(LEExpr).getGreaterOperand().(VariableAccess).getTarget()=vhash_246
	and target_7.getParent().(LEExpr).getParent().(IfStmt).getThen() instanceof BreakStmt
}

predicate func_8(Variable vno_gc_240, Function func, ReturnStmt target_8) {
	target_8.getImplicitDestructorCall(0).(DestructorCall).getQualifier().(VariableAccess).getTarget()=vno_gc_240
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Variable vhash_246, IfStmt target_9) {
	target_9.getCondition().(RelationalOperation).getLesserOperand() instanceof FunctionCall
	and target_9.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vhash_246
}

predicate func_10(Variable vinsertion_248, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("SetSortedKey")
	and target_10.getExpr().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinsertion_248
	and target_10.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_11(Parameter vdesc_239, FunctionCall target_11) {
	target_11.getTarget().hasName("GetKey")
	and target_11.getQualifier().(VariableAccess).getTarget()=vdesc_239
}

predicate func_13(Variable vno_gc_240, DestructorCall target_13) {
	target_13.getQualifier().(VariableAccess).getTarget()=vno_gc_240
}

from Function func, Variable vno_gc_240, Variable vhash_246, Variable vinsertion_248, Variable vkey_251, Parameter vdesc_239, Initializer target_0, VariableAccess target_1, FunctionCall target_7, ReturnStmt target_8, IfStmt target_9, ExprStmt target_10, FunctionCall target_11, DestructorCall target_13
where
func_0(vdesc_239, target_0)
and func_1(vhash_246, target_1)
and not func_2(target_9, func)
and not func_4(func)
and not func_5(vinsertion_248, vdesc_239, target_10, target_11, func)
and not func_6(vno_gc_240, target_13, func)
and func_7(vhash_246, vkey_251, target_7)
and func_8(vno_gc_240, func, target_8)
and func_9(vhash_246, target_9)
and func_10(vinsertion_248, target_10)
and func_11(vdesc_239, target_11)
and func_13(vno_gc_240, target_13)
and vno_gc_240.getType().hasName("DisallowGarbageCollection")
and vhash_246.getType().hasName("uint32_t")
and vinsertion_248.getType().hasName("int")
and vkey_251.getType().hasName("Name")
and vdesc_239.getType().hasName("Descriptor *")
and vno_gc_240.(LocalVariable).getFunction() = func
and vhash_246.(LocalVariable).getFunction() = func
and vinsertion_248.(LocalVariable).getFunction() = func
and vkey_251.(LocalVariable).getFunction() = func
and vdesc_239.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
