/**
 * @name openssl-fe3b639dc19b325846f4f6801f2f4604f56e3de3-ossl_punycode_decode
 * @id cpp/openssl/fe3b639dc19b325846f4f6801f2f4604f56e3de3/ossl-punycode-decode
 * @description openssl-fe3b639dc19b325846f4f6801f2f4604f56e3de3-crypto/punycode.c-ossl_punycode_decode CVE-2022-3602
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vwritten_out_124, Variable vmax_out_125, ReturnStmt target_4, ExprStmt target_5, MulExpr target_6, RelationalOperation target_7) {
	exists(RelationalOperation target_0 |
		 (target_0 instanceof GEExpr or target_0 instanceof LEExpr)
		and target_0.getGreaterOperand().(VariableAccess).getTarget()=vwritten_out_124
		and target_0.getLesserOperand().(VariableAccess).getTarget()=vmax_out_125
		and target_0.getParent().(IfStmt).getThen()=target_4
		and target_5.getExpr().(AssignRemExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getGreaterOperand().(VariableAccess).getLocation())
		and target_0.getGreaterOperand().(VariableAccess).getLocation().isBefore(target_6.getLeftOperand().(SubExpr).getLeftOperand().(VariableAccess).getLocation())
		and target_7.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vwritten_out_124, Variable vmax_out_125, ReturnStmt target_4, VariableAccess target_1) {
		target_1.getTarget()=vwritten_out_124
		and target_1.getParent().(GTExpr).getLesserOperand().(VariableAccess).getTarget()=vmax_out_125
		and target_1.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_4
}

/*predicate func_2(Variable vwritten_out_124, Variable vmax_out_125, ReturnStmt target_4, VariableAccess target_2) {
		target_2.getTarget()=vmax_out_125
		and target_2.getParent().(GTExpr).getGreaterOperand().(VariableAccess).getTarget()=vwritten_out_124
		and target_2.getParent().(GTExpr).getParent().(IfStmt).getThen()=target_4
}

*/
predicate func_3(Variable vwritten_out_124, Variable vmax_out_125, ReturnStmt target_4, RelationalOperation target_3) {
		 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
		and target_3.getGreaterOperand().(VariableAccess).getTarget()=vwritten_out_124
		and target_3.getLesserOperand().(VariableAccess).getTarget()=vmax_out_125
		and target_3.getParent().(IfStmt).getThen()=target_4
}

predicate func_4(RelationalOperation target_3, Function func, ReturnStmt target_4) {
		target_4.getExpr().(Literal).getValue()="0"
		and target_4.getParent().(IfStmt).getCondition()=target_3
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vwritten_out_124, ExprStmt target_5) {
		target_5.getExpr().(AssignRemExpr).getLValue().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_5.getExpr().(AssignRemExpr).getRValue().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vwritten_out_124
		and target_5.getExpr().(AssignRemExpr).getRValue().(AddExpr).getAnOperand().(Literal).getValue()="1"
}

predicate func_6(Variable vwritten_out_124, MulExpr target_6) {
		target_6.getLeftOperand().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vwritten_out_124
		and target_6.getLeftOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_6.getRightOperand().(SizeofExprOperator).getValue()="4"
}

predicate func_7(Variable vmax_out_125, RelationalOperation target_7) {
		 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
		and target_7.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		and target_7.getLesserOperand().(VariableAccess).getTarget()=vmax_out_125
}

from Function func, Variable vwritten_out_124, Variable vmax_out_125, VariableAccess target_1, RelationalOperation target_3, ReturnStmt target_4, ExprStmt target_5, MulExpr target_6, RelationalOperation target_7
where
not func_0(vwritten_out_124, vmax_out_125, target_4, target_5, target_6, target_7)
and func_1(vwritten_out_124, vmax_out_125, target_4, target_1)
and func_3(vwritten_out_124, vmax_out_125, target_4, target_3)
and func_4(target_3, func, target_4)
and func_5(vwritten_out_124, target_5)
and func_6(vwritten_out_124, target_6)
and func_7(vmax_out_125, target_7)
and vwritten_out_124.getType().hasName("size_t")
and vmax_out_125.getType().hasName("unsigned int")
and vwritten_out_124.(LocalVariable).getFunction() = func
and vmax_out_125.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
