/**
 * @name linux-b3defb791b26ea0683a93a4f49c77ec45ec96f10-snd_seq_ioctl
 * @id cpp/linux/b3defb791b26ea0683a93a4f49c77ec45ec96f10/snd-seq-ioctl
 * @description linux-b3defb791b26ea0683a93a4f49c77ec45ec96f10-sound/core/seq/seq_clientmgr.c-snd_seq_ioctl CVE-2018-1000004
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vclient_2088, ExprStmt target_2, NotExpr target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ioctl_mutex"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclient_2088
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vclient_2088, IfStmt target_4, ExprStmt target_2, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ioctl_mutex"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vclient_2088
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vclient_2088, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="func"
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const ioctl_handler *")
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vclient_2088
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("union <unnamed>")
}

predicate func_3(Variable vclient_2088, NotExpr target_3) {
	target_3.getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vclient_2088
}

predicate func_4(Function func, IfStmt target_4) {
	target_4.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="cmd"
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="cmd"
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="cmd"
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const ioctl_handler *")
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="2147483648"
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("copy_to_user")
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("union <unnamed>")
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(IfStmt).getCondition().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_4.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(IfStmt).getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_4.getEnclosingFunction() = func
}

from Function func, Variable vclient_2088, ExprStmt target_2, NotExpr target_3, IfStmt target_4
where
not func_0(vclient_2088, target_2, target_3, func)
and not func_1(vclient_2088, target_4, target_2, func)
and func_2(vclient_2088, target_2)
and func_3(vclient_2088, target_3)
and func_4(func, target_4)
and vclient_2088.getType().hasName("snd_seq_client *")
and vclient_2088.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
