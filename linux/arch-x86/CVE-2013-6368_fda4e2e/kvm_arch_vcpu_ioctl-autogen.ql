/**
 * @name linux-fda4e2e85589191b123d31cdc21fd33ee70f50fd-kvm_arch_vcpu_ioctl
 * @id cpp/linux/fda4e2e85589191b123d31cdc21fd33ee70f50fd/kvm-arch-vcpu-ioctl
 * @description linux-fda4e2e85589191b123d31cdc21fd33ee70f50fd-arch/x86/kvm/x86.c-kvm_arch_vcpu_ioctl CVE-2013-6368
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvcpu_3095, Variable vva_3209, FunctionCall target_0) {
	target_0.getTarget().hasName("kvm_lapic_set_vapic_addr")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vvcpu_3095
	and target_0.getArgument(1).(ValueFieldAccess).getTarget().getName()="vapic_addr"
	and target_0.getArgument(1).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vva_3209
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr() instanceof FunctionCall
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vvcpu_3095, Variable vva_3209, FunctionCall target_0, ExprStmt target_2
where
func_0(vvcpu_3095, vva_3209, target_0)
and func_2(func, target_2)
and vvcpu_3095.getType().hasName("kvm_vcpu *")
and vva_3209.getType().hasName("kvm_vapic_addr")
and vvcpu_3095.(LocalVariable).getFunction() = func
and vva_3209.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
