/**
 * @name linux-65eea8edc315589d6c993cf12dbb5d0e9ef1fe4e-fd_locked_ioctl
 * @id cpp/linux/65eea8edc315589d6c993cf12dbb5d0e9ef1fe4e/fd-locked-ioctl
 * @description linux-65eea8edc315589d6c993cf12dbb5d0e9ef1fe4e-drivers/block/floppy.c-fd_locked_ioctl CVE-2018-7755
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinparam_3402, Variable voutparam_3403, VariableAccess target_2, AddressOfExpr target_3, AddressOfExpr target_4) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="g"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vinparam_3402
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voutparam_3403
	and target_0.getExpr().(FunctionCall).getArgument(2).(BuiltInOperationBuiltInOffsetOf).getValue()="24"
	and target_0.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_2
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vinparam_3402, Variable voutparam_3403, VariableAccess target_2, AddressOfExpr target_5) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=voutparam_3403
	and target_1.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="g"
	and target_1.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vinparam_3402
	and target_1.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_2
	and target_1.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vcmd_3389, VariableAccess target_2) {
	target_2.getTarget()=vcmd_3389
}

predicate func_3(Variable vinparam_3402, AddressOfExpr target_3) {
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="g"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vinparam_3402
}

predicate func_4(Variable voutparam_3403, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=voutparam_3403
}

predicate func_5(Variable vinparam_3402, AddressOfExpr target_5) {
	target_5.getOperand().(ValueFieldAccess).getTarget().getName()="f"
	and target_5.getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vinparam_3402
}

from Function func, Parameter vcmd_3389, Variable vinparam_3402, Variable voutparam_3403, VariableAccess target_2, AddressOfExpr target_3, AddressOfExpr target_4, AddressOfExpr target_5
where
not func_0(vinparam_3402, voutparam_3403, target_2, target_3, target_4)
and not func_1(vinparam_3402, voutparam_3403, target_2, target_5)
and func_2(vcmd_3389, target_2)
and func_3(vinparam_3402, target_3)
and func_4(voutparam_3403, target_4)
and func_5(vinparam_3402, target_5)
and vcmd_3389.getType().hasName("unsigned int")
and vinparam_3402.getType().hasName("inparam")
and voutparam_3403.getType().hasName("const void *")
and vcmd_3389.getFunction() = func
and vinparam_3402.(LocalVariable).getFunction() = func
and voutparam_3403.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
