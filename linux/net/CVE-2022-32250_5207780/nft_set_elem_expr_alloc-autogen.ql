/**
 * @name linux-520778042ccca019f3ffa136dd0ca565c486cedd-nft_set_elem_expr_alloc
 * @id cpp/linux/520778042ccca019f3ffa136dd0ca565c486cedd/nft-set-elem-expr-alloc
 * @description linux-520778042ccca019f3ffa136dd0ca565c486cedd-net/netfilter/nf_tables_api.c-nft_set_elem_expr_alloc CVE-2022-32250
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vexpr_5408, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="type"
	and target_0.getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_0.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpr_5408
}

predicate func_1(Variable vexpr_5408, Function func, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="type"
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpr_5408
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_1.getThen().(GotoStmt).getName() ="err_set_elem_expr"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

from Function func, Variable vexpr_5408, PointerFieldAccess target_0, IfStmt target_1
where
func_0(vexpr_5408, target_0)
and func_1(vexpr_5408, func, target_1)
and vexpr_5408.getType().hasName("nft_expr *")
and vexpr_5408.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
