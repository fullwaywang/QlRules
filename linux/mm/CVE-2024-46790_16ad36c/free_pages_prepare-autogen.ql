/**
 * @name linux-16ad36c8e66a26626e7d0224100b433483a2acef-free_pages_prepare
 * @id cpp/linux/16ad36c8e66a26626e7d0224100b433483a2acef/free-pages-prepare
 * @description linux-16ad36c8e66a26626e7d0224100b433483a2acef-mm/page_alloc.c-free_pages_prepare CVE-2024-46790
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpage_1035, LogicalAndExpr target_1, ExprStmt target_2, NotExpr target_3) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("clear_page_tag_ref")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpage_1035
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(3)=target_0
			and obj_2.getCondition()=target_1
		)
	)
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(NotExpr).getOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vpage_1035, LogicalAndExpr target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getLeftOperand() |
		exists(NotExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(NotExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().hasName("PageHWPoison")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=vpage_1035
				)
			)
		)
		and obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and target_1.getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_2(Parameter vpage_1035, LogicalAndExpr target_1, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(BinaryBitwiseOperation obj_1 | obj_1=obj_0.getArgument(1) |
			obj_1.getLeftOperand().(Literal).getValue()="1"
			and obj_1.getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
		)
		and obj_0.getTarget().hasName("pgalloc_tag_sub")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpage_1035
	)
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
}

predicate func_3(Parameter vpage_1035, NotExpr target_3) {
	exists(NotExpr obj_0 | obj_0=target_3.getOperand() |
		exists(LogicalAndExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(EqualityOperation obj_2 | obj_2=obj_1.getRightOperand() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getTarget().hasName("compound_order")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=vpage_1035
				)
				and obj_2.getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
			)
			and obj_1.getLeftOperand().(VariableAccess).getTarget().getType().hasName("bool")
		)
	)
}

from Function func, Parameter vpage_1035, LogicalAndExpr target_1, ExprStmt target_2, NotExpr target_3
where
not func_0(vpage_1035, target_1, target_2, target_3)
and func_1(vpage_1035, target_1)
and func_2(vpage_1035, target_1, target_2)
and func_3(vpage_1035, target_3)
and vpage_1035.getType().hasName("page *")
and vpage_1035.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
