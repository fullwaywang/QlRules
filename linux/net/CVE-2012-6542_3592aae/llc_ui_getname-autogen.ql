/**
 * @name linux-3592aaeb80290bda0f2cf0b5456c97bfc638b192-llc_ui_getname
 * @id cpp/linux/3592aaeb80290bda0f2cf0b5456c97bfc638b192/llc-ui-getname
 * @description linux-3592aaeb80290bda0f2cf0b5456c97bfc638b192-net/llc/af_llc.c-llc_ui_getname CVE-2012-6542
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="0"
	and not target_0.getValue()="9"
	and target_0.getParent() instanceof Initializer
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func) {
exists(UnaryMinusExpr target_1 |
	target_1.getValue()="-9"
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Parameter vuaddr_966, Parameter vuaddrlen_967, Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vuaddr_966
	and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getExpr().(FunctionCall).getArgument(2).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vuaddrlen_967
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

from Function func, Parameter vuaddr_966, Parameter vuaddrlen_967, Literal target_0, ExprStmt target_2
where
func_0(func, target_0)
and not func_1(func)
and func_2(vuaddr_966, vuaddrlen_967, func, target_2)
and vuaddr_966.getType().hasName("sockaddr *")
and vuaddrlen_967.getType().hasName("int *")
and vuaddr_966.getFunction() = func
and vuaddrlen_967.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
