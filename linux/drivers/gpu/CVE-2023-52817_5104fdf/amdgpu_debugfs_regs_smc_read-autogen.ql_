/**
 * @name linux-5104fdf50d326db2c1a994f8b35dcd46e63ae4ad-amdgpu_debugfs_regs_smc_read
 * @id cpp/linux/5104fdf50d326db2c1a994f8b35dcd46e63ae4ad/amdgpu-debugfs-regs-smc-read
 * @description linux-5104fdf50d326db2c1a994f8b35dcd46e63ae4ad-drivers/gpu/drm/amd/amdgpu/amdgpu_debugfs.c-amdgpu_debugfs_regs_smc_read CVE-2023-52817
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vadev_747, IfStmt target_1, PointerFieldAccess target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="smc_rreg"
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vadev_747
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(LogicalOrExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_1.getCondition().(LogicalOrExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(HexLiteral).getValue()="3"
	and target_1.getCondition().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("loff_t *")
	and target_1.getCondition().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getRightOperand().(HexLiteral).getValue()="3"
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Variable vadev_747, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="dev"
	and target_3.getQualifier().(FunctionCall).getTarget().hasName("adev_to_drm")
	and target_3.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vadev_747
}

from Function func, Variable vadev_747, IfStmt target_1, PointerFieldAccess target_3
where
not func_0(vadev_747, target_1, target_3, func)
and func_1(func, target_1)
and func_3(vadev_747, target_3)
and vadev_747.getType().hasName("amdgpu_device *")
and vadev_747.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
