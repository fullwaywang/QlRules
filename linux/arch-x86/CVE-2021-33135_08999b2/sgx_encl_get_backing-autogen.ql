/**
 * @name linux-08999b2489b4c9b939d7483dbd03702ee4576d96-sgx_encl_get_backing
 * @id cpp/linux/08999b2489b4c9b939d7483dbd03702ee4576d96/sgx-encl-get-backing
 * @description linux-08999b2489b4c9b939d7483dbd03702ee4576d96-arch/x86/kernel/cpu/sgx/encl.c-sgx_encl_get_backing CVE-2021-33135
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

/*predicate func_0(Parameter vpage_index_579, VariableAccess target_0) {
	target_0.getTarget()=vpage_index_579
	and vpage_index_579.getIndex() = 1
}

*/
/*predicate func_1(Parameter vpage_index_579, ExprStmt target_14, Literal target_1) {
	target_1.getValue()="5"
	and not target_1.getValue()="12"
	and target_1.getParent().(RShiftExpr).getParent().(AddExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=vpage_index_579
	and target_1.getParent().(RShiftExpr).getParent().(AddExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
}

*/
predicate func_2(Parameter vpage_index_579, Initializer target_2) {
	target_2.getExpr().(AddExpr).getLeftOperand() instanceof AddExpr
	and target_2.getExpr().(AddExpr).getRightOperand().(BinaryBitwiseOperation).getLeftOperand().(VariableAccess).getTarget()=vpage_index_579
	and target_2.getExpr().(AddExpr).getRightOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="5"
}

predicate func_3(Parameter vencl_579, Variable vpcmd_index_582, VariableAccess target_3) {
	target_3.getTarget()=vpcmd_index_582
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sgx_encl_get_backing_page")
	and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vencl_579
}

predicate func_4(Function func, SubExpr target_4) {
	target_4.getValue()="31"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vencl_579, Parameter vpage_index_579) {
exists(FunctionCall target_5 |
	target_5.getTarget().hasName("sgx_encl_get_backing_page_pcmd_offset")
	and target_5.getArgument(0).(VariableAccess).getTarget()=vencl_579
	and target_5.getArgument(1).(VariableAccess).getTarget()=vpage_index_579)
}

predicate func_6(Function func, BinaryBitwiseOperation target_6) {
	target_6.getValue()="4096"
	and target_6.getEnclosingFunction() = func
}

predicate func_8(Parameter vencl_579, Variable vpcmd_index_582, VariableAccess target_8) {
	target_8.getTarget()=vencl_579
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sgx_encl_get_backing_page")
	and target_8.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpcmd_index_582
}

predicate func_9(Parameter vencl_579, VariableAccess target_9) {
	target_9.getTarget()=vencl_579
}

predicate func_10(Parameter vpage_index_579, VariableAccess target_10) {
	target_10.getTarget()=vpage_index_579
}

predicate func_11(Parameter vencl_579, AddExpr target_11) {
	target_11.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="size"
	and target_11.getLeftOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vencl_579
	and target_11.getLeftOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="12"
	and target_11.getRightOperand() instanceof Literal
}

predicate func_12(Parameter vpage_index_579, MulExpr target_12) {
	target_12.getLeftOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vpage_index_579
	and target_12.getLeftOperand().(BitwiseAndExpr).getRightOperand() instanceof SubExpr
	and target_12.getRightOperand().(SizeofTypeOperator).getType() instanceof LongType
	and target_12.getRightOperand().(SizeofTypeOperator).getValue()="128"
	and target_12.getParent().(AssignExpr).getRValue() = target_12
	and target_12.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="pcmd_offset"
	and target_12.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("sgx_backing *")
}

predicate func_13(Function func, SizeofTypeOperator target_13) {
	target_13.getType() instanceof LongType
	and target_13.getValue()="128"
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Parameter vencl_579, Parameter vpage_index_579, ExprStmt target_14) {
	target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("page *")
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sgx_encl_get_backing_page")
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vencl_579
	and target_14.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpage_index_579
}

from Function func, Parameter vencl_579, Parameter vpage_index_579, Variable vpcmd_index_582, Initializer target_2, VariableAccess target_3, SubExpr target_4, BinaryBitwiseOperation target_6, VariableAccess target_8, VariableAccess target_9, VariableAccess target_10, AddExpr target_11, MulExpr target_12, SizeofTypeOperator target_13, ExprStmt target_14
where
func_2(vpage_index_579, target_2)
and func_3(vencl_579, vpcmd_index_582, target_3)
and func_4(func, target_4)
and not func_5(vencl_579, vpage_index_579)
and func_6(func, target_6)
and func_8(vencl_579, vpcmd_index_582, target_8)
and func_9(vencl_579, target_9)
and func_10(vpage_index_579, target_10)
and func_11(vencl_579, target_11)
and func_12(vpage_index_579, target_12)
and func_13(func, target_13)
and func_14(vencl_579, vpage_index_579, target_14)
and vencl_579.getType().hasName("sgx_encl *")
and vpage_index_579.getType().hasName("unsigned long")
and vpcmd_index_582.getType().hasName("unsigned long")
and vencl_579.getFunction() = func
and vpage_index_579.getFunction() = func
and vpcmd_index_582.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
