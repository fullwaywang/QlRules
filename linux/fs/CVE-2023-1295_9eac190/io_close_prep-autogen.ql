/**
 * @name linux-9eac1904d3364254d622bf2c771c4f85cd435fc2-io_close_prep
 * @id cpp/linux/9eac1904d3364254d622bf2c771c4f85cd435fc2/io-close-prep
 * @description linux-9eac1904d3364254d622bf2c771c4f85cd435fc2-fs/io_uring.c-io_close_prep CVE-2023-1295
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_4476, Function func, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("io_req_init_async")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_4476
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Variable vio_uring_fops, Parameter vreq_4476, Function func, IfStmt target_1) {
	target_1.getCondition().(LogicalAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="file"
	and target_1.getCondition().(LogicalAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_1.getCondition().(LogicalAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_4476
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="f_op"
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="file"
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_4476
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vio_uring_fops
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-9"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vreq_4476, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="put_file"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="close"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_2.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_4476
	and target_2.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

from Function func, Variable vio_uring_fops, Parameter vreq_4476, ExprStmt target_0, IfStmt target_1, ExprStmt target_2
where
func_0(vreq_4476, func, target_0)
and func_1(vio_uring_fops, vreq_4476, func, target_1)
and func_2(vreq_4476, func, target_2)
and vio_uring_fops.getType().hasName("const file_operations")
and vreq_4476.getType().hasName("io_kiocb *")
and not vio_uring_fops.getParentScope+() = func
and vreq_4476.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
