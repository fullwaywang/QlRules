commit 5af10dfd0afc559bb4b0f7e3e8227a1578333995
Author: Andrea Arcangeli <aarcange@redhat.com>
Date:   Thu Aug 10 15:23:38 2017 -0700

    userfaultfd: hugetlbfs: remove superfluous page unlock in VM_SHARED case
    
    huge_add_to_page_cache->add_to_page_cache implicitly unlocks the page
    before returning in case of errors.
    
    The error returned was -EEXIST by running UFFDIO_COPY on a non-hole
    offset of a VM_SHARED hugetlbfs mapping.  It was an userland bug that
    triggered it and the kernel must cope with it returning -EEXIST from
    ioctl(UFFDIO_COPY) as expected.
    
      page dumped because: VM_BUG_ON_PAGE(!PageLocked(page))
      kernel BUG at mm/filemap.c:964!
      invalid opcode: 0000 [#1] SMP
      CPU: 1 PID: 22582 Comm: qemu-system-x86 Not tainted 4.11.11-300.fc26.x86_64 #1
      RIP: unlock_page+0x4a/0x50
      Call Trace:
        hugetlb_mcopy_atomic_pte+0xc0/0x320
        mcopy_atomic+0x96f/0xbe0
        userfaultfd_ioctl+0x218/0xe90
        do_vfs_ioctl+0xa5/0x600
        SyS_ioctl+0x79/0x90
        entry_SYSCALL_64_fastpath+0x1a/0xa9
    
    Link: http://lkml.kernel.org/r/20170802165145.22628-2-aarcange@redhat.com
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Tested-by: Maxime Coquelin <maxime.coquelin@redhat.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Alexey Perevalov <a.perevalov@samsung.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/hugetlb.c b/mm/hugetlb.c
index a1a0ac0a..31e207c 100644
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@ -4062,9 +4062,9 @@ int hugetlb_mcopy_atomic_pte(struct mm_struct *dst_mm,
 	return ret;
 out_release_unlock:
 	spin_unlock(ptl);
-out_release_nounlock:
 	if (vm_shared)
 		unlock_page(page);
+out_release_nounlock:
 	put_page(page);
 	goto out;
 }
