/**
 * @name linux-a6f80fb7b5986fda663d94079d3bba0937a6b6ff-ecryptfs_release_messaging
 * @id cpp/linux/a6f80fb7b5986fda663d94079d3bba0937a6b6ff/ecryptfs-release-messaging
 * @description linux-a6f80fb7b5986fda663d94079d3bba0937a6b6ff-fs/ecryptfs/messaging.c-ecryptfs_release_messaging CVE-2010-2492
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vecryptfs_hash_buckets, BlockStmt target_2, VariableAccess target_0) {
		target_0.getTarget()=vecryptfs_hash_buckets
		and target_0.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_0.getParent().(LTExpr).getParent().(ForStmt).getStmt()=target_2
}

predicate func_1(Variable vecryptfs_hash_buckets, BlockStmt target_2) {
	exists(BinaryBitwiseOperation target_1 |
		target_1.getLeftOperand().(Literal).getValue()="1"
		and target_1.getRightOperand().(VariableAccess).getType().hasName("int")
		and target_1.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getParent().(LTExpr).getGreaterOperand().(VariableAccess).getTarget()=vecryptfs_hash_buckets
		and target_1.getParent().(LTExpr).getParent().(ForStmt).getStmt()=target_2)
}

predicate func_2(Function func, BlockStmt target_2) {
		target_2.getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("hlist_node *")
		and target_2.getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="first"
		and target_2.getStmt(1).(ForStmt).getCondition().(LogicalAndExpr).getAnOperand().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget().getType().hasName("hlist_node *")
		and target_2.getStmt(1).(ForStmt).getCondition().(LogicalAndExpr).getAnOperand().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(Literal).getValue()="1"
		and target_2.getStmt(1).(ForStmt).getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("hlist_node *")
		and target_2.getStmt(1).(ForStmt).getUpdate().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="next"
		and target_2.getStmt(1).(ForStmt).getUpdate().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("hlist_node *")
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ecryptfs_exorcise_daemon")
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ecryptfs_daemon *")
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="<3>%s: Error whilst attempting to destroy daemon; rc = [%d]. Dazed and confused, but trying to continue.\n"
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
		and target_2.getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getEnclosingFunction() = func
}

from Function func, Variable vecryptfs_hash_buckets, VariableAccess target_0, BlockStmt target_2
where
func_0(vecryptfs_hash_buckets, target_2, target_0)
and not func_1(vecryptfs_hash_buckets, target_2)
and func_2(func, target_2)
and vecryptfs_hash_buckets.getType().hasName("int")
and not vecryptfs_hash_buckets.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
