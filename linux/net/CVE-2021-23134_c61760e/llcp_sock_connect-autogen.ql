/**
 * @name linux-c61760e6940dd4039a7f5e84a6afc9cdbf4d82b6-llcp_sock_connect
 * @id cpp/linux/c61760e6940dd4039a7f5e84a6afc9cdbf4d82b6/llcp-sock-connect
 * @description linux-c61760e6940dd4039a7f5e84a6afc9cdbf4d82b6-llcp_sock_connect CVE-2021-23134
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vllcp_sock_653, EqualityOperation target_2, ExprStmt target_3, ExprStmt target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="local"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_653
		and target_0.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vllcp_sock_653, ExprStmt target_5, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="local"
		and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_653
		and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vllcp_sock_653, EqualityOperation target_2) {
		target_2.getAnOperand().(PointerFieldAccess).getTarget().getName()="ssap"
		and target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_653
		and target_2.getAnOperand().(Literal).getValue()="255"
}

predicate func_3(Variable vllcp_sock_653, EqualityOperation target_2, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("nfc_llcp_local_put")
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="local"
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_653
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
}

predicate func_4(Variable vllcp_sock_653, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="reserved_ssap"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_653
		and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ssap"
		and target_4.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_653
}

predicate func_5(Variable vllcp_sock_653, Function func, ExprStmt target_5) {
		target_5.getExpr().(FunctionCall).getTarget().hasName("nfc_llcp_local_put")
		and target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="local"
		and target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vllcp_sock_653
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

from Function func, Variable vllcp_sock_653, EqualityOperation target_2, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5
where
not func_0(vllcp_sock_653, target_2, target_3, target_4)
and not func_1(vllcp_sock_653, target_5, func)
and func_2(vllcp_sock_653, target_2)
and func_3(vllcp_sock_653, target_2, target_3)
and func_4(vllcp_sock_653, target_4)
and func_5(vllcp_sock_653, func, target_5)
and vllcp_sock_653.getType().hasName("nfc_llcp_sock *")
and vllcp_sock_653.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
