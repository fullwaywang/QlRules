/**
 * @name linux-e268337dfe26dfc7efd422a804dbb27977a3cccc-mem_read
 * @id cpp/linux/e268337dfe26dfc7efd422a804dbb27977a3cccc/mem-read
 * @description linux-e268337dfe26dfc7efd422a804dbb27977a3cccc-fs/proc/base.c-mem_read CVE-2012-0056
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
		target_0.getExpr().(FunctionCall).getTarget().hasName("get_proc_task")
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="d_inode"
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier() instanceof ValueFieldAccess
		and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="3"
		and not target_1.getValue()="0"
		and target_1.getParent().(UnaryMinusExpr).getParent().(Initializer).getExpr() instanceof UnaryMinusExpr
		and target_1.getEnclosingFunction() = func
}

predicate func_2(NotExpr target_23, Function func) {
	exists(ReturnStmt target_2 |
		target_2.getExpr().(Literal).getValue()="0"
		and target_2.getParent().(IfStmt).getCondition()=target_23
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(NotExpr target_24, Function func) {
	exists(ReturnStmt target_3 |
		target_3.getExpr() instanceof UnaryMinusExpr
		and target_3.getParent().(IfStmt).getCondition()=target_24
		and target_3.getEnclosingFunction() = func)
}

predicate func_4(Variable vret_767, UnaryMinusExpr target_4) {
		target_4.getValue()="-5"
		and target_4.getParent().(AssignExpr).getRValue() = target_4
		and target_4.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_767
}

predicate func_5(Variable vret_767, UnaryMinusExpr target_5) {
		target_5.getValue()="-12"
		and target_5.getParent().(AssignExpr).getRValue() = target_5
		and target_5.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_767
}

predicate func_6(Parameter vfile_761, PointerFieldAccess target_6) {
		target_6.getTarget().getName()="private_data"
		and target_6.getQualifier().(VariableAccess).getTarget()=vfile_761
		and target_6.getParent().(NEExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="self_exec_id"
		and target_6.getParent().(NEExpr).getAnOperand().(PointerFieldAccess).getQualifier() instanceof FunctionCall
		and target_6.getParent().(NEExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_7(Variable vmm_768, VariableAccess target_7) {
		target_7.getTarget()=vmm_768
		and target_7.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_9(Parameter vfile_761, PointerFieldAccess target_9) {
		target_9.getTarget().getName()="d_inode"
		and target_9.getQualifier().(ValueFieldAccess).getTarget().getName()="dentry"
		and target_9.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="f_path"
		and target_9.getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_761
}

predicate func_10(Function func, Initializer target_10) {
		target_10.getExpr().(UnaryMinusExpr).getValue()="-3"
		and target_10.getExpr().getEnclosingFunction() = func
}

predicate func_11(Function func, DeclStmt target_11) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Variable vtask_764, ExprStmt target_16, VariableAccess target_12) {
		target_12.getTarget()=vtask_764
		and target_12.getParent().(NotExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
		and target_12.getLocation().isBefore(target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_13(NotExpr target_23, Function func, GotoStmt target_13) {
		target_13.getParent().(IfStmt).getCondition()=target_23
		and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vret_767, Function func, ExprStmt target_14) {
		target_14.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_767
		and target_14.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_15(NotExpr target_24, Function func, GotoStmt target_15) {
		target_15.getParent().(IfStmt).getCondition()=target_24
		and target_15.getEnclosingFunction() = func
}

predicate func_16(Variable vtask_764, Variable vmm_768, Function func, ExprStmt target_16) {
		target_16.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmm_768
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("check_mem_permission")
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_764
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_16
}

predicate func_17(Variable vret_767, Variable vmm_768, Function func, ExprStmt target_17) {
		target_17.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_767
		and target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("PTR_ERR")
		and target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_768
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
}

predicate func_18(Variable vmm_768, Function func, IfStmt target_18) {
		target_18.getCondition().(FunctionCall).getTarget().hasName("IS_ERR")
		and target_18.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_768
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_18
}

predicate func_19(Variable vret_767, ExprStmt target_17, Function func, ExprStmt target_19) {
		target_19.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_767
		and target_19.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_19
		and target_17.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_19.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
}

predicate func_20(Parameter vfile_761, Function func, IfStmt target_20) {
		target_20.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="private_data"
		and target_20.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_761
		and target_20.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="self_exec_id"
		and target_20.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
}

predicate func_21(Variable vmm_768, Function func, ExprStmt target_21) {
		target_21.getExpr().(FunctionCall).getTarget().hasName("mmput")
		and target_21.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmm_768
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_21
}

predicate func_22(Variable vtask_764, Function func, ExprStmt target_22) {
		target_22.getExpr().(FunctionCall).getTarget().hasName("put_task_struct")
		and target_22.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtask_764
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_22
}

predicate func_23(Variable vtask_764, NotExpr target_23) {
		target_23.getOperand().(VariableAccess).getTarget()=vtask_764
}

predicate func_24(Function func, NotExpr target_24) {
		target_24.getOperand().(VariableAccess).getTarget().getType().hasName("char *")
		and target_24.getEnclosingFunction() = func
}

from Function func, Variable vtask_764, Variable vret_767, Variable vmm_768, Parameter vfile_761, Initializer target_0, Literal target_1, UnaryMinusExpr target_4, UnaryMinusExpr target_5, PointerFieldAccess target_6, VariableAccess target_7, PointerFieldAccess target_9, Initializer target_10, DeclStmt target_11, VariableAccess target_12, GotoStmt target_13, ExprStmt target_14, GotoStmt target_15, ExprStmt target_16, ExprStmt target_17, IfStmt target_18, ExprStmt target_19, IfStmt target_20, ExprStmt target_21, ExprStmt target_22, NotExpr target_23, NotExpr target_24
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(target_23, func)
and not func_3(target_24, func)
and func_4(vret_767, target_4)
and func_5(vret_767, target_5)
and func_6(vfile_761, target_6)
and func_7(vmm_768, target_7)
and func_9(vfile_761, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and func_12(vtask_764, target_16, target_12)
and func_13(target_23, func, target_13)
and func_14(vret_767, func, target_14)
and func_15(target_24, func, target_15)
and func_16(vtask_764, vmm_768, func, target_16)
and func_17(vret_767, vmm_768, func, target_17)
and func_18(vmm_768, func, target_18)
and func_19(vret_767, target_17, func, target_19)
and func_20(vfile_761, func, target_20)
and func_21(vmm_768, func, target_21)
and func_22(vtask_764, func, target_22)
and func_23(vtask_764, target_23)
and func_24(func, target_24)
and vtask_764.getType().hasName("task_struct *")
and vret_767.getType().hasName("int")
and vmm_768.getType().hasName("mm_struct *")
and vfile_761.getType().hasName("file *")
and vtask_764.(LocalVariable).getFunction() = func
and vret_767.(LocalVariable).getFunction() = func
and vmm_768.(LocalVariable).getFunction() = func
and vfile_761.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
