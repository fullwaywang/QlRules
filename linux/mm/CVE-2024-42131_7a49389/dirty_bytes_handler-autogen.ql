/**
 * @name linux-7a49389771ae7666f4dc3426e2a4594bf23ae290-dirty_bytes_handler
 * @id cpp/linux/7a49389771ae7666f4dc3426e2a4594bf23ae290/dirty-bytes-handler
 * @description linux-7a49389771ae7666f4dc3426e2a4594bf23ae290-mm/page-writeback.c-dirty_bytes_handler CVE-2024-42131
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vold_bytes_551, Variable vvm_dirty_bytes, LogicalAndExpr target_1) {
exists(IfStmt target_0 |
	exists(RelationalOperation obj_0 | obj_0=target_0.getCondition() |
		exists(DivExpr obj_1 | obj_1=obj_0.getGreaterOperand() |
			exists(SubExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				exists(AddExpr obj_3 | obj_3=obj_2.getLeftOperand() |
					obj_3.getLeftOperand().(VariableAccess).getTarget()=vvm_dirty_bytes
					and obj_3.getRightOperand().(BinaryBitwiseOperation).getValue()="4096"
				)
				and obj_2.getRightOperand().(Literal).getValue()="1"
			)
			and obj_1.getRightOperand().(BinaryBitwiseOperation).getValue()="4096"
		)
		and obj_0.getLesserOperand().(ComplementExpr).getValue()="4294967295"
	)
	and exists(BlockStmt obj_4 | obj_4=target_0.getThen() |
		exists(ExprStmt obj_5 | obj_5=obj_4.getStmt(0) |
			exists(AssignExpr obj_6 | obj_6=obj_5.getExpr() |
				obj_6.getLValue().(VariableAccess).getTarget()=vvm_dirty_bytes
				and obj_6.getRValue().(VariableAccess).getTarget()=vold_bytes_551
			)
		)
		and obj_4.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-34"
	)
	and exists(BlockStmt obj_7 | obj_7=target_0.getParent() |
		exists(IfStmt obj_8 | obj_8=obj_7.getParent() |
			obj_8.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_8.getCondition()=target_1
		)
	)
)
}

predicate func_1(Variable vold_bytes_551, Variable vvm_dirty_bytes, LogicalAndExpr target_1) {
	exists(LogicalAndExpr obj_0 | obj_0=target_1.getLeftOperand() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
			and obj_1.getRightOperand().(Literal).getValue()="0"
		)
		and obj_0.getRightOperand().(VariableAccess).getTarget().getType().hasName("int")
	)
	and exists(EqualityOperation obj_2 | obj_2=target_1.getRightOperand() |
		obj_2.getLeftOperand().(VariableAccess).getTarget()=vvm_dirty_bytes
		and obj_2.getRightOperand().(VariableAccess).getTarget()=vold_bytes_551
	)
}

from Function func, Variable vold_bytes_551, Variable vvm_dirty_bytes, LogicalAndExpr target_1
where
not func_0(vold_bytes_551, vvm_dirty_bytes, target_1)
and func_1(vold_bytes_551, vvm_dirty_bytes, target_1)
and vold_bytes_551.getType().hasName("unsigned long")
and vvm_dirty_bytes.getType().hasName("unsigned long")
and vold_bytes_551.(LocalVariable).getFunction() = func
and not vvm_dirty_bytes.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
