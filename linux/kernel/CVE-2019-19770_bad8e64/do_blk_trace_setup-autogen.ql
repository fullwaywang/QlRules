/**
 * @name linux-bad8e64fb19d3a0de5e564d9a7271c31bd684369-do_blk_trace_setup
 * @id cpp/linux/bad8e64fb19d3a0de5e564d9a7271c31bd684369/do-blk-trace-setup
 * @description linux-bad8e64fb19d3a0de5e564d9a7271c31bd684369-kernel/trace/blktrace.c-do_blk_trace_setup CVE-2019-19770
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbt_482, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="dir"
	and target_0.getQualifier().(VariableAccess).getTarget()=vbt_482
}

predicate func_1(Parameter vbdev_479, Variable vdir_483, Parameter vq_478, ExprStmt target_13, ExprStmt target_14, ExprStmt target_15) {
exists(LogicalAndExpr target_1 |
	target_1.getLeftOperand().(FunctionCall).getTarget().hasName("queue_is_mq")
	and target_1.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vq_478
	and target_1.getRightOperand().(VariableAccess).getTarget()=vbdev_479
	and target_1.getParent().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdir_483
	and target_1.getParent().(LogicalAndExpr).getRightOperand() instanceof NotExpr
	and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_13
	and target_14.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getRightOperand().(VariableAccess).getLocation())
	and target_15.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vbdev_479, Variable vdir_483, ExprStmt target_13) {
exists(EqualityOperation target_2 |
	target_2.getLeftOperand().(VariableAccess).getTarget()=vbdev_479
	and target_2.getRightOperand().(PointerFieldAccess).getTarget().getName()="bd_contains"
	and target_2.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbdev_479
	and target_2.getParent().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdir_483
	and target_2.getParent().(LogicalAndExpr).getRightOperand() instanceof NotExpr
	and target_2.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_13)
}

predicate func_4(Parameter vbuts_480, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="name"
	and target_4.getQualifier().(VariableAccess).getTarget()=vbuts_480
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_5(Variable vret_484, Function func, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_484
	and target_5.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-2"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Parameter vbuts_480, Variable vdir_483, Variable vblk_debugfs_root, Function func, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdir_483
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("debugfs_lookup")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="name"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuts_480
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vblk_debugfs_root
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

/*predicate func_7(Parameter vbuts_480, Variable vdir_483, Variable vblk_debugfs_root, FunctionCall target_7) {
	target_7.getTarget().hasName("debugfs_lookup")
	and target_7.getArgument(0).(PointerFieldAccess).getTarget().getName()="name"
	and target_7.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuts_480
	and target_7.getArgument(1).(VariableAccess).getTarget()=vblk_debugfs_root
	and target_7.getParent().(AssignExpr).getRValue() = target_7
	and target_7.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdir_483
}

*/
predicate func_8(Variable vdir_483, ExprStmt target_16, NotExpr target_8) {
	target_8.getOperand().(VariableAccess).getTarget()=vdir_483
	and target_8.getParent().(IfStmt).getThen()=target_16
}

predicate func_9(Variable vbt_482, Variable vdir_483, Function func, IfStmt target_9) {
	target_9.getCondition().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdir_483
	and target_9.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dir"
	and target_9.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbt_482
	and target_9.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dput")
	and target_9.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdir_483
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

/*predicate func_10(Variable vbt_482, Variable vdir_483, ExprStmt target_13, LogicalAndExpr target_17, ExprStmt target_18, ExprStmt target_19, VariableAccess target_10) {
	target_10.getTarget()=vdir_483
	and target_10.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dir"
	and target_10.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbt_482
	and target_10.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_13
	and target_17.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_10.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_10.getParent().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_10.getLocation())
}

*/
/*predicate func_11(Variable vbt_482, Variable vdir_483, ExprStmt target_13, NotExpr target_11) {
	target_11.getOperand().(PointerFieldAccess).getTarget().getName()="dir"
	and target_11.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbt_482
	and target_11.getParent().(LogicalAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdir_483
	and target_11.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_13
}

*/
/*predicate func_12(Variable vdir_483, FunctionCall target_12) {
	target_12.getTarget().hasName("dput")
	and target_12.getArgument(0).(VariableAccess).getTarget()=vdir_483
}

*/
predicate func_13(Function func, ExprStmt target_13) {
	target_13.getExpr() instanceof FunctionCall
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Parameter vbdev_479, Variable vbt_482, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("blk_trace_setup_lba")
	and target_14.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbt_482
	and target_14.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vbdev_479
}

predicate func_15(Parameter vq_478, ExprStmt target_15) {
	target_15.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="blk_trace"
	and target_15.getExpr().(AssignExpr).getLValue().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vq_478
	and target_15.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("uintptr_t")
}

predicate func_16(Parameter vbuts_480, Variable vbt_482, Variable vdir_483, Variable vblk_debugfs_root, ExprStmt target_16) {
	target_16.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="dir"
	and target_16.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbt_482
	and target_16.getExpr().(AssignExpr).getRValue().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdir_483
	and target_16.getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("debugfs_create_dir")
	and target_16.getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="name"
	and target_16.getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuts_480
	and target_16.getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vblk_debugfs_root
}

predicate func_17(Variable vbt_482, LogicalAndExpr target_17) {
	target_17.getLeftOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
	and target_17.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbt_482
	and target_17.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("uintptr_t")
	and target_17.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
}

predicate func_18(Variable vbt_482, ExprStmt target_18) {
	target_18.getExpr().(FunctionCall).getTarget().hasName("blk_trace_free")
	and target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbt_482
}

predicate func_19(Parameter vbuts_480, Variable vbt_482, Variable vdir_483, ExprStmt target_19) {
	target_19.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="rchan"
	and target_19.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbt_482
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("relay_open")
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(StringLiteral).getValue()="trace"
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vdir_483
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="buf_size"
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuts_480
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getTarget().getName()="buf_nr"
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbuts_480
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("rchan_callbacks")
	and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vbt_482
}

from Function func, Parameter vbdev_479, Parameter vbuts_480, Variable vbt_482, Variable vdir_483, Variable vret_484, Parameter vq_478, Variable vblk_debugfs_root, PointerFieldAccess target_0, PointerFieldAccess target_4, ExprStmt target_5, ExprStmt target_6, NotExpr target_8, IfStmt target_9, ExprStmt target_13, ExprStmt target_14, ExprStmt target_15, ExprStmt target_16, LogicalAndExpr target_17, ExprStmt target_18, ExprStmt target_19
where
func_0(vbt_482, target_0)
and not func_1(vbdev_479, vdir_483, vq_478, target_13, target_14, target_15)
and not func_2(vbdev_479, vdir_483, target_13)
and func_4(vbuts_480, target_4)
and func_5(vret_484, func, target_5)
and func_6(vbuts_480, vdir_483, vblk_debugfs_root, func, target_6)
and func_8(vdir_483, target_16, target_8)
and func_9(vbt_482, vdir_483, func, target_9)
and func_13(func, target_13)
and func_14(vbdev_479, vbt_482, target_14)
and func_15(vq_478, target_15)
and func_16(vbuts_480, vbt_482, vdir_483, vblk_debugfs_root, target_16)
and func_17(vbt_482, target_17)
and func_18(vbt_482, target_18)
and func_19(vbuts_480, vbt_482, vdir_483, target_19)
and vbdev_479.getType().hasName("block_device *")
and vbuts_480.getType().hasName("blk_user_trace_setup *")
and vbt_482.getType().hasName("blk_trace *")
and vdir_483.getType().hasName("dentry *")
and vret_484.getType().hasName("int")
and vq_478.getType().hasName("request_queue *")
and vblk_debugfs_root.getType().hasName("dentry *")
and vbdev_479.getFunction() = func
and vbuts_480.getFunction() = func
and vbt_482.(LocalVariable).getFunction() = func
and vdir_483.(LocalVariable).getFunction() = func
and vret_484.(LocalVariable).getFunction() = func
and vq_478.getFunction() = func
and not vblk_debugfs_root.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
