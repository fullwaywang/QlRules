/**
 * @name linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-check_mem_reg
 * @id cpp/linux/c25b2ae136039ffa820c26138ed4a5e5f3ab3841/check-mem-reg
 * @description linux-c25b2ae136039ffa820c26138ed4a5e5f3ab3841-kernel/bpf/verifier.c-check_mem_reg CVE-2022-23222
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreg_4860, BlockStmt target_1, FunctionCall target_0) {
	target_0.getTarget().hasName("reg_type_may_be_null")
	and not target_0.getTarget().hasName("type_may_be_null")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="type"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4860
	and target_0.getParent().(IfStmt).getThen()=target_1
}

predicate func_1(Parameter vreg_4860, BlockStmt target_1) {
	target_1.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mark_ptr_not_null_reg")
	and target_1.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreg_4860
	and target_1.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("check_helper_mem_access")
	and target_1.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("bpf_verifier_env *")
	and target_1.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("u32")
	and target_1.getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(Literal).getValue()="0"
}

from Function func, Parameter vreg_4860, FunctionCall target_0, BlockStmt target_1
where
func_0(vreg_4860, target_1, target_0)
and func_1(vreg_4860, target_1)
and vreg_4860.getType().hasName("bpf_reg_state *")
and vreg_4860.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
