/**
 * @name linux-9c6d189f0c1c59ba9a32326ec82a0b367a3cd47b-uinput_validate_absinfo
 * @id cpp/linux/9c6d189f0c1c59ba9a32326ec82a0b367a3cd47b/uinput-validate-absinfo
 * @description linux-9c6d189f0c1c59ba9a32326ec82a0b367a3cd47b-drivers/input/misc/uinput.c-uinput_validate_absinfo CVE-2024-46745
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmax_413, Parameter vcode_410, ExprStmt target_1, Function func) {
exists(IfStmt target_0 |
	exists(LogicalAndExpr obj_0 | obj_0=target_0.getCondition() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getLeftOperand().(VariableAccess).getTarget()=vcode_410
			and obj_1.getRightOperand().(Literal).getValue()="47"
		)
		and exists(RelationalOperation obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getGreaterOperand().(VariableAccess).getTarget()=vmax_413
			and obj_2.getLesserOperand().(Literal).getValue()="99"
		)
	)
	and exists(BlockStmt obj_3 | obj_3=target_0.getThen() |
		exists(ExprStmt obj_4 | obj_4=obj_3.getStmt(0) |
			exists(FunctionCall obj_5 | obj_5=obj_4.getExpr() |
				obj_5.getTarget().hasName("printk")
				and obj_5.getArgument(0).(StringLiteral).getValue()="7%s: unreasonably large number of slots requested: %d\n"
				and obj_5.getArgument(1).(StringLiteral).getValue()="uinput"
				and obj_5.getArgument(2).(VariableAccess).getTarget()=vmax_413
			)
		)
		and obj_3.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(FunctionCall).getArgument(5).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vmax_413, Parameter vcode_410, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(3) |
			obj_1.getTarget().getName()="flat"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("const input_absinfo *")
		)
		and obj_0.getTarget().hasName("printk")
		and obj_0.getArgument(0).(StringLiteral).getValue()="7%s: abs_flat #%02x out of range: %d (min:%d/max:%d)\n"
		and obj_0.getArgument(1).(StringLiteral).getValue()="uinput"
		and obj_0.getArgument(2).(VariableAccess).getTarget()=vcode_410
		and obj_0.getArgument(4).(VariableAccess).getTarget().getType().hasName("int")
		and obj_0.getArgument(5).(VariableAccess).getTarget()=vmax_413
	)
}

from Function func, Variable vmax_413, Parameter vcode_410, ExprStmt target_1
where
not func_0(vmax_413, vcode_410, target_1, func)
and func_1(vmax_413, vcode_410, target_1)
and vmax_413.getType().hasName("int")
and vcode_410.getType().hasName("unsigned int")
and vmax_413.(LocalVariable).getFunction() = func
and vcode_410.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
