/**
 * @name linux-bdf533de6968-find_check_entry
 * @id cpp/linux/bdf533de6968/find-check-entry
 * @description linux-bdf533de6968-net/ipv4/netfilter/arp_tables.c-find_check_entry CVE-2016-4997
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vname_519, Variable vret_523, Parameter ve_519, Function func, ExprStmt target_0) {
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_523
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("check_entry")
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=ve_519
		and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vname_519
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
}

predicate func_1(Variable vret_523, Function func, IfStmt target_1) {
		target_1.getCondition().(VariableAccess).getTarget()=vret_523
		and target_1.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=vret_523
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

from Function func, Parameter vname_519, Variable vret_523, Parameter ve_519, ExprStmt target_0, IfStmt target_1
where
func_0(vname_519, vret_523, ve_519, func, target_0)
and func_1(vret_523, func, target_1)
and vname_519.getType().hasName("const char *")
and vret_523.getType().hasName("int")
and ve_519.getType().hasName("arpt_entry *")
and vname_519.getFunction() = func
and vret_523.(LocalVariable).getFunction() = func
and ve_519.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
