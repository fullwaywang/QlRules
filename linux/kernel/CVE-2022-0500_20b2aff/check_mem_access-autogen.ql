/**
 * @name linux-20b2aff4bc15bda809f994761d5719827d66c0b4-check_mem_access
 * @id cpp/linux/20b2aff4bc15bda809f994761d5719827d66c0b4/check-mem-access
 * @description linux-20b2aff4bc15bda809f994761d5719827d66c0b4-kernel/bpf/verifier.c-check_mem_access CVE-2022-0500
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_2(Variable vreg_4337, BlockStmt target_28, FunctionCall target_29) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("base_type")
	and target_2.getArgument(0).(PointerFieldAccess).getTarget().getName()="type"
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_2.getParent().(EQExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_2.getParent().(EQExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_2.getParent().(EQExpr).getRightOperand() instanceof EnumConstantAccess
	and target_2.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_28
	and target_2.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_29.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Function func) {
exists(AssignExpr target_4 |
	target_4.getLValue().(VariableAccess).getType().hasName("const char *")
	and target_4.getRValue() instanceof StringLiteral
	and target_4.getEnclosingFunction() = func)
}

predicate func_5(Function func) {
exists(AssignExpr target_5 |
	target_5.getLValue().(VariableAccess).getType().hasName("u32 *")
	and target_5.getRValue() instanceof AddressOfExpr
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Function func) {
exists(AssignExpr target_6 |
	target_6.getLValue().(VariableAccess).getType().hasName("const char *")
	and target_6.getRValue() instanceof StringLiteral
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(LogicalAndExpr target_30, Function func) {
exists(ExprStmt target_7 |
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("u32 *")
	and target_7.getExpr().(AssignExpr).getRValue() instanceof AddressOfExpr
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(1)=target_7
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_30
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(Parameter venv_4332, Parameter vregno_4332, Parameter voff_4333, Variable vreg_4337, Variable vsize_4339, Variable verr_4339, EqualityOperation target_31, FunctionCall target_29, AddressOfExpr target_17, ExprStmt target_32, ExprStmt target_34, LogicalAndExpr target_18) {
exists(ExprStmt target_8 |
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_4339
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("check_buffer_access")
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vreg_4337
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=voff_4333
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vsize_4339
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(VariableAccess).getType().hasName("const char *")
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(7).(VariableAccess).getType().hasName("u32 *")
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_8
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_31
	and target_29.getArgument(0).(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_17.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_32.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation())
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getLocation())
	and target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_18.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_11(Parameter vt_4333, ExprStmt target_37, EqualityOperation target_38, LogicalAndExpr target_30) {
exists(LogicalOrExpr target_11 |
	target_11.getLeftOperand().(VariableAccess).getType().hasName("bool")
	and target_11.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vt_4333
	and target_11.getParent().(LogicalAndExpr).getLeftOperand() instanceof LogicalAndExpr
	and target_11.getParent().(LogicalAndExpr).getRightOperand() instanceof RelationalOperation
	and target_11.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_37
	and target_38.getLeftOperand().(VariableAccess).getLocation().isBefore(target_11.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_13(Parameter venv_4332, Parameter vvalue_regno_4334, Variable vregs_4336, FunctionCall target_13) {
	target_13.getTarget().hasName("mark_reg_unknown")
	and target_13.getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_13.getArgument(1).(VariableAccess).getTarget()=vregs_4336
	and target_13.getArgument(2).(VariableAccess).getTarget()=vvalue_regno_4334
}

predicate func_14(Variable verr_4339, NotExpr target_14) {
	target_14.getOperand().(VariableAccess).getTarget()=verr_4339
}

predicate func_15(Parameter vt_4333, EqualityOperation target_15) {
	target_15.getLeftOperand().(VariableAccess).getTarget()=vt_4333
}

predicate func_16(Variable vreg_4337, BlockStmt target_28, PointerFieldAccess target_16) {
	target_16.getTarget().getName()="type"
	and target_16.getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_16.getParent().(EQExpr).getRightOperand() instanceof EnumConstantAccess
	and target_16.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_28
}

predicate func_17(Parameter venv_4332, Parameter vregno_4332, Parameter voff_4333, Variable vreg_4337, Variable vsize_4339, AddressOfExpr target_17) {
	target_17.getOperand().(PointerFieldAccess).getTarget().getName()="max_rdonly_access"
	and target_17.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="aux"
	and target_17.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="prog"
	and target_17.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_4332
	and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("check_buffer_access")
	and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vreg_4337
	and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=voff_4333
	and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vsize_4339
	and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(StringLiteral).getValue()="rdonly"
}

predicate func_18(Parameter vvalue_regno_4334, Variable verr_4339, ExprStmt target_39, LogicalAndExpr target_18) {
	target_18.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=verr_4339
	and target_18.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vvalue_regno_4334
	and target_18.getRightOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_18.getParent().(IfStmt).getThen()=target_39
}

predicate func_19(Variable vreg_4337, BlockStmt target_40, PointerFieldAccess target_19) {
	target_19.getTarget().getName()="type"
	and target_19.getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_19.getParent().(EQExpr).getRightOperand() instanceof EnumConstantAccess
	and target_19.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_40
}

predicate func_20(Parameter venv_4332, AddressOfExpr target_20) {
	target_20.getOperand().(PointerFieldAccess).getTarget().getName()="max_rdwr_access"
	and target_20.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="aux"
	and target_20.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="prog"
	and target_20.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=venv_4332
	and target_20.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_21(Parameter venv_4332, Parameter vregno_4332, Variable vreg_4337, EqualityOperation target_41, BlockStmt target_21) {
	target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="R%d invalid mem access '%s'\n"
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getTarget().hasName("reg_type_str")
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="type"
	and target_21.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_21.getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-13"
	and target_21.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_41
}

predicate func_24(Parameter venv_4332, Parameter vregno_4332, Parameter voff_4333, Parameter vvalue_regno_4334, Variable vregs_4336, Variable vreg_4337, Variable vsize_4339, Variable verr_4339, EqualityOperation target_42, IfStmt target_24) {
	target_24.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_24.getCondition().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_24.getCondition().(EqualityOperation).getRightOperand() instanceof EnumConstantAccess
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_4339
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("check_buffer_access")
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vreg_4337
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=voff_4333
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vsize_4339
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6) instanceof StringLiteral
	and target_24.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(7) instanceof AddressOfExpr
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand() instanceof EqualityOperation
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vvalue_regno_4334
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mark_reg_unknown")
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vregs_4336
	and target_24.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vvalue_regno_4334
	and target_24.getElse() instanceof BlockStmt
	and target_24.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_42
}

/*predicate func_25(Parameter venv_4332, Parameter vregno_4332, Parameter voff_4333, Variable vreg_4337, Variable vsize_4339, Variable verr_4339, AssignExpr target_25) {
	target_25.getLValue().(VariableAccess).getTarget()=verr_4339
	and target_25.getRValue().(FunctionCall).getTarget().hasName("check_buffer_access")
	and target_25.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_25.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vreg_4337
	and target_25.getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_25.getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=voff_4333
	and target_25.getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vsize_4339
	and target_25.getRValue().(FunctionCall).getArgument(6) instanceof StringLiteral
	and target_25.getRValue().(FunctionCall).getArgument(7) instanceof AddressOfExpr
}

*/
/*predicate func_26(Parameter vvalue_regno_4334, ExprStmt target_37, ExprStmt target_39, LogicalAndExpr target_26) {
	target_26.getLeftOperand() instanceof NotExpr
	and target_26.getRightOperand() instanceof EqualityOperation
	and target_26.getParent().(LogicalAndExpr).getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vvalue_regno_4334
	and target_26.getParent().(LogicalAndExpr).getRightOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_26.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_37
}

*/
/*predicate func_27(Parameter vvalue_regno_4334, ExprStmt target_37, ExprStmt target_39, RelationalOperation target_27) {
	 (target_27 instanceof GEExpr or target_27 instanceof LEExpr)
	and target_27.getGreaterOperand().(VariableAccess).getTarget()=vvalue_regno_4334
	and target_27.getLesserOperand().(Literal).getValue()="0"
	and target_27.getParent().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand() instanceof NotExpr
	and target_27.getParent().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand() instanceof EqualityOperation
	and target_27.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_37
}

*/
predicate func_28(Parameter venv_4332, Parameter vregno_4332, Parameter vt_4333, BlockStmt target_28) {
	target_28.getStmt(0).(IfStmt).getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vt_4333
	and target_28.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_28.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_28.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="R%d cannot write into %s\n"
	and target_28.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_28.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getTarget().hasName("reg_type_str")
	and target_28.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_28.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="type"
}

predicate func_29(Parameter venv_4332, Parameter vregno_4332, Variable vreg_4337, FunctionCall target_29) {
	target_29.getTarget().hasName("reg_type_str")
	and target_29.getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_29.getArgument(1).(PointerFieldAccess).getTarget().getName()="type"
	and target_29.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_29.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_29.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_29.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="R%d cannot write into %s\n"
	and target_29.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
}

predicate func_30(Function func, LogicalAndExpr target_30) {
	target_30.getLeftOperand() instanceof LogicalAndExpr
	and target_30.getRightOperand() instanceof RelationalOperation
	and target_30.getEnclosingFunction() = func
}

predicate func_31(Variable vreg_4337, EqualityOperation target_31) {
	target_31.getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_31.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_31.getRightOperand() instanceof EnumConstantAccess
}

predicate func_32(Parameter venv_4332, Parameter vregno_4332, Variable vreg_4337, EqualityOperation target_38, ExprStmt target_32) {
	target_32.getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_32.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_32.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="R%d cannot write into %s\n"
	and target_32.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_32.getExpr().(FunctionCall).getArgument(3).(FunctionCall).getTarget().hasName("reg_type_str")
	and target_32.getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_32.getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="type"
	and target_32.getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_32.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_38
}

predicate func_34(Parameter venv_4332, Parameter vregno_4332, Parameter voff_4333, Parameter vt_4333, Parameter vvalue_regno_4334, Variable vregs_4336, Variable vsize_4339, Variable verr_4339, ExprStmt target_34) {
	target_34.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_4339
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("check_ptr_to_map_access")
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vregs_4336
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=voff_4333
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vsize_4339
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(5).(VariableAccess).getTarget()=vt_4333
	and target_34.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(6).(VariableAccess).getTarget()=vvalue_regno_4334
}

predicate func_37(Parameter venv_4332, Parameter vvalue_regno_4334, Variable vregs_4336, LogicalAndExpr target_30, ExprStmt target_37) {
	target_37.getExpr().(FunctionCall).getTarget().hasName("mark_reg_unknown")
	and target_37.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_37.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vregs_4336
	and target_37.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vvalue_regno_4334
	and target_37.getParent().(IfStmt).getCondition()=target_30
}

predicate func_38(Parameter vt_4333, BlockStmt target_43, EqualityOperation target_38) {
	target_38.getLeftOperand().(VariableAccess).getTarget()=vt_4333
	and target_38.getParent().(IfStmt).getThen()=target_43
}

predicate func_39(Function func, ExprStmt target_39) {
	target_39.getExpr() instanceof FunctionCall
	and target_39.getEnclosingFunction() = func
}

predicate func_40(Parameter venv_4332, Parameter vvalue_regno_4334, Variable vregs_4336, BlockStmt target_40) {
	target_40.getStmt(0).(ExprStmt).getExpr() instanceof AssignExpr
	and target_40.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand() instanceof LogicalAndExpr
	and target_40.getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand() instanceof RelationalOperation
	and target_40.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mark_reg_unknown")
	and target_40.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_40.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vregs_4336
	and target_40.getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vvalue_regno_4334
}

predicate func_41(Variable vreg_4337, EqualityOperation target_41) {
	target_41.getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_41.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_41.getRightOperand() instanceof EnumConstantAccess
}

predicate func_42(Variable vreg_4337, EqualityOperation target_42) {
	target_42.getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_42.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
}

predicate func_43(Parameter venv_4332, Parameter vregno_4332, Variable vreg_4337, EqualityOperation target_38, BlockStmt target_43) {
	target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("verbose")
	and target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="R%d cannot write into %s\n"
	and target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vregno_4332
	and target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getTarget().hasName("reg_type_str")
	and target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=venv_4332
	and target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="type"
	and target_43.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreg_4337
	and target_43.getParent().(IfStmt).getCondition()=target_38
}

from Function func, Parameter venv_4332, Parameter vregno_4332, Parameter voff_4333, Parameter vt_4333, Parameter vvalue_regno_4334, Variable vregs_4336, Variable vreg_4337, Variable vsize_4339, Variable verr_4339, FunctionCall target_13, NotExpr target_14, EqualityOperation target_15, PointerFieldAccess target_16, AddressOfExpr target_17, LogicalAndExpr target_18, PointerFieldAccess target_19, AddressOfExpr target_20, BlockStmt target_21, IfStmt target_24, BlockStmt target_28, FunctionCall target_29, LogicalAndExpr target_30, EqualityOperation target_31, ExprStmt target_32, ExprStmt target_34, ExprStmt target_37, EqualityOperation target_38, ExprStmt target_39, BlockStmt target_40, EqualityOperation target_41, EqualityOperation target_42, BlockStmt target_43
where
not func_2(vreg_4337, target_28, target_29)
and not func_4(func)
and not func_5(func)
and not func_6(func)
and not func_7(target_30, func)
and not func_8(venv_4332, vregno_4332, voff_4333, vreg_4337, vsize_4339, verr_4339, target_31, target_29, target_17, target_32, target_34, target_18)
and not func_11(vt_4333, target_37, target_38, target_30)
and func_13(venv_4332, vvalue_regno_4334, vregs_4336, target_13)
and func_14(verr_4339, target_14)
and func_15(vt_4333, target_15)
and func_16(vreg_4337, target_28, target_16)
and func_17(venv_4332, vregno_4332, voff_4333, vreg_4337, vsize_4339, target_17)
and func_18(vvalue_regno_4334, verr_4339, target_39, target_18)
and func_19(vreg_4337, target_40, target_19)
and func_20(venv_4332, target_20)
and func_21(venv_4332, vregno_4332, vreg_4337, target_41, target_21)
and func_24(venv_4332, vregno_4332, voff_4333, vvalue_regno_4334, vregs_4336, vreg_4337, vsize_4339, verr_4339, target_42, target_24)
and func_28(venv_4332, vregno_4332, vt_4333, target_28)
and func_29(venv_4332, vregno_4332, vreg_4337, target_29)
and func_30(func, target_30)
and func_31(vreg_4337, target_31)
and func_32(venv_4332, vregno_4332, vreg_4337, target_38, target_32)
and func_34(venv_4332, vregno_4332, voff_4333, vt_4333, vvalue_regno_4334, vregs_4336, vsize_4339, verr_4339, target_34)
and func_37(venv_4332, vvalue_regno_4334, vregs_4336, target_30, target_37)
and func_38(vt_4333, target_43, target_38)
and func_39(func, target_39)
and func_40(venv_4332, vvalue_regno_4334, vregs_4336, target_40)
and func_41(vreg_4337, target_41)
and func_42(vreg_4337, target_42)
and func_43(venv_4332, vregno_4332, vreg_4337, target_38, target_43)
and venv_4332.getType().hasName("bpf_verifier_env *")
and vregno_4332.getType().hasName("u32")
and voff_4333.getType().hasName("int")
and vt_4333.getType().hasName("bpf_access_type")
and vvalue_regno_4334.getType().hasName("int")
and vregs_4336.getType().hasName("bpf_reg_state *")
and vreg_4337.getType().hasName("bpf_reg_state *")
and vsize_4339.getType().hasName("int")
and verr_4339.getType().hasName("int")
and venv_4332.getFunction() = func
and vregno_4332.getFunction() = func
and voff_4333.getFunction() = func
and vt_4333.getFunction() = func
and vvalue_regno_4334.getFunction() = func
and vregs_4336.(LocalVariable).getFunction() = func
and vreg_4337.(LocalVariable).getFunction() = func
and vsize_4339.(LocalVariable).getFunction() = func
and verr_4339.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
