/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-l2cap_sock_setsockopt_old
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/l2cap-sock-setsockopt-old
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/bluetooth/l2cap_sock.c-l2cap_sock_setsockopt_old CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptval_706, Variable vlen_711, BlockStmt target_14, FunctionCall target_5) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("copy_from_sockptr")
	and target_0.getArgument(0) instanceof AddressOfExpr
	and target_0.getArgument(1).(VariableAccess).getTarget()=voptval_706
	and target_0.getArgument(2).(VariableAccess).getTarget()=vlen_711
	and target_0.getParent().(IfStmt).getThen()=target_14
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_5.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter voptval_706, Variable vopt_712, BlockStmt target_15, FunctionCall target_5, AsmStmt target_11, BitwiseAndExpr target_16) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("copy_from_sockptr")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopt_712
	and target_1.getArgument(1).(VariableAccess).getTarget()=voptval_706
	and target_1.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_1.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_1.getParent().(IfStmt).getThen()=target_15
	and target_5.getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getArgument(1).(VariableAccess).getLocation())
	and target_1.getArgument(1).(VariableAccess).getLocation().isBefore(target_11.getChild(3).(VariableAccess).getLocation())
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_16.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_2(Parameter voptval_706, Variable vopts_710, Variable vlen_711, BlockStmt target_14, AddressOfExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vopts_710
	and target_2.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voptval_706
	and target_2.getParent().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vlen_711
	and target_2.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_14
}

/*predicate func_3(Parameter voptval_706, Variable vopts_710, Variable vlen_711, BlockStmt target_14, VariableAccess target_3) {
	target_3.getTarget()=vlen_711
	and target_3.getParent().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopts_710
	and target_3.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=voptval_706
	and target_3.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_14
}

*/
predicate func_4(Variable v__val_gu_785, Variable vopt_712, VariableAccess target_4) {
	target_4.getTarget()=vopt_712
	and target_4.getParent().(AssignExpr).getLValue() = target_4
	and target_4.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_785
}

predicate func_5(Parameter voptval_706, Variable vlen_711, BlockStmt target_14, FunctionCall target_5) {
	target_5.getTarget().hasName("copy_from_user")
	and target_5.getArgument(0) instanceof AddressOfExpr
	and target_5.getArgument(1).(VariableAccess).getTarget()=voptval_706
	and target_5.getArgument(2).(VariableAccess).getTarget()=vlen_711
	and target_5.getParent().(IfStmt).getThen()=target_14
}

predicate func_6(Variable v__ret_gu_785, Variable v__val_gu_785, Variable vcurrent_stack_pointer, Parameter voptval_706, Variable vopt_712, BlockStmt target_15, StmtExpr target_6) {
	target_6.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(Literal).getValue()="0"
	and target_6.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_6.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_6.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(0).(VariableAccess).getTarget()=v__ret_gu_785
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(1).(VariableAccess).getTarget()=v__val_gu_785
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(3).(VariableAccess).getTarget()=voptval_706
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(4).(SizeofExprOperator).getValue()="4"
	and target_6.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vopt_712
	and target_6.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_785
	and target_6.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_6.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_785
	and target_6.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_6.getParent().(IfStmt).getThen()=target_15
}

/*predicate func_9(Function func, ExprStmt target_9) {
	target_9.getExpr().(Literal).getValue()="0"
	and target_9.getEnclosingFunction() = func
}

*/
/*predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_10.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_10.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_10.getEnclosingFunction() = func
}

*/
predicate func_11(Variable v__ret_gu_785, Variable v__val_gu_785, Variable vcurrent_stack_pointer, Parameter voptval_706, AsmStmt target_11) {
	target_11.getChild(0).(VariableAccess).getTarget()=v__ret_gu_785
	and target_11.getChild(1).(VariableAccess).getTarget()=v__val_gu_785
	and target_11.getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_11.getChild(3).(VariableAccess).getTarget()=voptval_706
	and target_11.getChild(4).(SizeofExprOperator).getValue()="4"
}

/*predicate func_12(Variable v__val_gu_785, Variable vopt_712, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vopt_712
	and target_12.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_785
}

*/
/*predicate func_13(Variable v__ret_gu_785, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_785
	and target_13.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

*/
predicate func_14(FunctionCall target_5, Function func, BlockStmt target_14) {
	target_14.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_14.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_14.getParent().(IfStmt).getCondition()=target_5
	and target_14.getEnclosingFunction() = func
}

predicate func_15(StmtExpr target_6, Function func, BlockStmt target_15) {
	target_15.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_15.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_15.getParent().(IfStmt).getCondition()=target_6
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Variable vopt_712, BitwiseAndExpr target_16) {
	target_16.getLeftOperand().(VariableAccess).getTarget()=vopt_712
	and target_16.getRightOperand().(Literal).getValue()="64"
}

from Function func, Variable v__ret_gu_785, Variable v__val_gu_785, Variable vcurrent_stack_pointer, Parameter voptval_706, Variable vopts_710, Variable vlen_711, Variable vopt_712, AddressOfExpr target_2, VariableAccess target_4, FunctionCall target_5, StmtExpr target_6, AsmStmt target_11, BlockStmt target_14, BlockStmt target_15, BitwiseAndExpr target_16
where
not func_0(voptval_706, vlen_711, target_14, target_5)
and not func_1(voptval_706, vopt_712, target_15, target_5, target_11, target_16)
and func_2(voptval_706, vopts_710, vlen_711, target_14, target_2)
and func_4(v__val_gu_785, vopt_712, target_4)
and func_5(voptval_706, vlen_711, target_14, target_5)
and func_6(v__ret_gu_785, v__val_gu_785, vcurrent_stack_pointer, voptval_706, vopt_712, target_15, target_6)
and func_11(v__ret_gu_785, v__val_gu_785, vcurrent_stack_pointer, voptval_706, target_11)
and func_14(target_5, func, target_14)
and func_15(target_6, func, target_15)
and func_16(vopt_712, target_16)
and v__ret_gu_785.getType().hasName("int")
and v__val_gu_785.getType().hasName("unsigned int")
and vcurrent_stack_pointer.getType().hasName("unsigned long")
and voptval_706.getType().hasName("char *")
and vopts_710.getType().hasName("l2cap_options")
and vlen_711.getType().hasName("int")
and vopt_712.getType().hasName("u32")
and v__ret_gu_785.(LocalVariable).getFunction() = func
and v__val_gu_785.(LocalVariable).getFunction() = func
and not vcurrent_stack_pointer.getParentScope+() = func
and voptval_706.getFunction() = func
and vopts_710.(LocalVariable).getFunction() = func
and vlen_711.(LocalVariable).getFunction() = func
and vopt_712.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
