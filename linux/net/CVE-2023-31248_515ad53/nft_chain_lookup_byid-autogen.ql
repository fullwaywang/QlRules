/**
 * @name linux-515ad530795c118f012539ed76d02bacfd426d89-nft_chain_lookup_byid
 * @id cpp/linux/515ad530795c118f012539ed76d02bacfd426d89/nft-chain-lookup-byid
 * @description linux-515ad530795c118f012539ed76d02bacfd426d89-net/netfilter/nf_tables_api.c-nft_chain_lookup_byid CVE-2023-31248
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vchain_2709, ReturnStmt target_2, LogicalAndExpr target_1) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof LogicalAndExpr
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="genmask"
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_2709
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(VariableAccess).getType().hasName("u8")
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vtable_2701, Variable vid_2705, Variable vtrans_2706, Variable vchain_2709, ReturnStmt target_2, LogicalAndExpr target_1) {
	target_1.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="msg_type"
	and target_1.getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtrans_2706
	and target_1.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="table"
	and target_1.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchain_2709
	and target_1.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget()=vtable_2701
	and target_1.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vid_2705
	and target_1.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="chain_id"
	and target_1.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="data"
	and target_1.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtrans_2706
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vchain_2709, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=vchain_2709
}

from Function func, Parameter vtable_2701, Variable vid_2705, Variable vtrans_2706, Variable vchain_2709, LogicalAndExpr target_1, ReturnStmt target_2
where
not func_0(vchain_2709, target_2, target_1)
and func_1(vtable_2701, vid_2705, vtrans_2706, vchain_2709, target_2, target_1)
and func_2(vchain_2709, target_2)
and vtable_2701.getType().hasName("const nft_table *")
and vid_2705.getType().hasName("u32")
and vtrans_2706.getType().hasName("nft_trans *")
and vchain_2709.getType().hasName("nft_chain *")
and vtable_2701.getFunction() = func
and vid_2705.(LocalVariable).getFunction() = func
and vtrans_2706.(LocalVariable).getFunction() = func
and vchain_2709.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
