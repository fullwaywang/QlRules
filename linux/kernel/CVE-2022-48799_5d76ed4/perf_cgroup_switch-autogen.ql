/**
 * @name linux-5d76ed4223403f90421782adb2f20a9ecbc93186-perf_cgroup_switch
 * @id cpp/linux/5d76ed4223403f90421782adb2f20a9ecbc93186/perf-cgroup-switch
 * @description linux-5d76ed4223403f90421782adb2f20a9ecbc93186-kernel/events/core.c-perf_cgroup_switch CVE-2022-48799
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="423"
	and not target_0.getValue()="424"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="424"
	and not target_1.getValue()="425"
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Function func) {
exists(CommaExpr target_3 |
	exists(AssignExpr obj_0 | obj_0=target_3.getRightOperand() |
		obj_0.getLValue().(VariableAccess).getType().hasName("perf_cpu_context *")
		and obj_0.getRValue() instanceof StmtExpr
	)
	and target_3.getLeftOperand() instanceof AssignExpr
	and target_3.getEnclosingFunction() = func
)
}

predicate func_4(Variable vcpuctx_719, NotExpr target_12) {
exists(CommaExpr target_4 |
	exists(AssignExpr obj_0 | obj_0=target_4.getLeftOperand() |
		obj_0.getLValue().(VariableAccess).getTarget()=vcpuctx_719
		and obj_0.getRValue().(VariableAccess).getType().hasName("perf_cpu_context *")
	)
	and exists(AssignExpr obj_1 | obj_1=target_4.getRightOperand() |
		exists(StmtExpr obj_2 | obj_2=obj_1.getRValue() |
			exists(BlockStmt obj_3 | obj_3=obj_2.getStmt() |
				obj_3.getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
				and obj_3.getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getType().hasName("void *")
			)
		)
		and obj_1.getLValue().(VariableAccess).getType().hasName("perf_cpu_context *")
	)
	and target_12.getOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getLeftOperand().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_6(Variable v__ret_warn_on_746, ExprStmt target_8) {
exists(IfStmt target_6 |
	exists(FunctionCall obj_0 | obj_0=target_6.getCondition() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_746
		and obj_0.getArgument(1) instanceof Literal
	)
	and exists(DoStmt obj_1 | obj_1=target_6.getThen() |
		exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
			exists(DoStmt obj_3 | obj_3=obj_2.getStmt(0) |
				exists(BlockStmt obj_4 | obj_4=obj_3.getStmt() |
					exists(AsmStmt obj_5 | obj_5=obj_4.getStmt(0) |
						exists(SizeofTypeOperator obj_6 | obj_6=obj_5.getChild(3) |
							obj_6.getType() instanceof LongType
							and obj_6.getValue()="12"
						)
						and obj_5.getChild(0) instanceof StringLiteral
						and obj_5.getChild(1) instanceof Literal
					)
				)
				and obj_3.getCondition() instanceof Literal
			)
		)
		and obj_1.getCondition() instanceof Literal
	)
	and target_6.getLocation().isBefore(target_8.getLocation())
)
}

predicate func_8(Variable v__ret_warn_on_746, ExprStmt target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getExpr() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_746
		and obj_0.getArgument(1) instanceof Literal
	)
}

predicate func_9(Variable vcpuctx_719, Variable v__mptr_730, Variable v__cond_730, AssignExpr target_9) {
	exists(StmtExpr obj_0 | obj_0=target_9.getRValue() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(DoStmt obj_2 | obj_2=obj_1.getStmt(1) |
				exists(BlockStmt obj_3 | obj_3=obj_2.getStmt() |
					obj_3.getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_730
					and obj_3.getStmt(3).(DoStmt).getCondition().(Literal).getValue()="0"
				)
				and obj_2.getCondition().(Literal).getValue()="0"
			)
			and exists(ExprStmt obj_4 | obj_4=obj_1.getStmt(2) |
				exists(PointerArithmeticOperation obj_5 | obj_5=obj_4.getExpr() |
					obj_5.getLeftOperand().(VariableAccess).getTarget()=v__mptr_730
					and obj_5.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="592"
				)
			)
		)
	)
	and target_9.getLValue().(VariableAccess).getTarget()=vcpuctx_719
}

predicate func_10(Variable vcpuctx_719, Variable v__mptr_1_730, Variable v__cond_1_730, StmtExpr target_10) {
	exists(BlockStmt obj_0 | obj_0=target_10.getStmt() |
		exists(DoStmt obj_1 | obj_1=obj_0.getStmt(1) |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				obj_2.getStmt(2).(IfStmt).getCondition().(VariableAccess).getTarget()=v__cond_1_730
				and obj_2.getStmt(3).(DoStmt).getCondition().(Literal).getValue()="0"
			)
			and obj_1.getCondition().(Literal).getValue()="0"
		)
		and exists(ExprStmt obj_3 | obj_3=obj_0.getStmt(2) |
			exists(PointerArithmeticOperation obj_4 | obj_4=obj_3.getExpr() |
				obj_4.getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_730
				and obj_4.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="592"
			)
		)
	)
	and exists(AssignExpr obj_5 | obj_5=target_10.getParent() |
		obj_5.getRValue() = target_10
		and obj_5.getLValue().(VariableAccess).getTarget()=vcpuctx_719
	)
}

predicate func_11(Variable v__ret_warn_on_731, ExprStmt target_11) {
	exists(FunctionCall obj_0 | obj_0=target_11.getExpr() |
		obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_731
		and obj_0.getArgument(1) instanceof Literal
	)
}

predicate func_12(Variable vcpuctx_719, NotExpr target_12) {
	exists(EqualityOperation obj_0 | obj_0=target_12.getOperand() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="cgrp_cpuctx_entry"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vcpuctx_719
			)
		)
		and obj_0.getRightOperand().(VariableAccess).getTarget().getType().hasName("list_head *")
	)
}

from Function func, Variable vcpuctx_719, Variable v__mptr_730, Variable v__cond_730, Variable v__mptr_1_730, Variable v__cond_1_730, Variable v__ret_warn_on_731, Variable v__ret_warn_on_746, Literal target_0, Literal target_1, ExprStmt target_8, AssignExpr target_9, StmtExpr target_10, ExprStmt target_11, NotExpr target_12
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_3(func)
and not func_4(vcpuctx_719, target_12)
and not func_6(v__ret_warn_on_746, target_8)
and func_8(v__ret_warn_on_746, target_8)
and func_9(vcpuctx_719, v__mptr_730, v__cond_730, target_9)
and func_10(vcpuctx_719, v__mptr_1_730, v__cond_1_730, target_10)
and func_11(v__ret_warn_on_731, target_11)
and func_12(vcpuctx_719, target_12)
and vcpuctx_719.getType().hasName("perf_cpu_context *")
and v__mptr_730.getType().hasName("void *")
and v__cond_730.getType().hasName("bool")
and v__mptr_1_730.getType().hasName("void *")
and v__cond_1_730.getType().hasName("bool")
and v__ret_warn_on_731.getType().hasName("int")
and v__ret_warn_on_746.getType().hasName("int")
and vcpuctx_719.(LocalVariable).getFunction() = func
and v__mptr_730.(LocalVariable).getFunction() = func
and v__cond_730.(LocalVariable).getFunction() = func
and v__mptr_1_730.(LocalVariable).getFunction() = func
and v__cond_1_730.(LocalVariable).getFunction() = func
and v__ret_warn_on_731.(LocalVariable).getFunction() = func
and v__ret_warn_on_746.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
