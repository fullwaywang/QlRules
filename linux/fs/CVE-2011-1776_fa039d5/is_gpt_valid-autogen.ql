/**
 * @name linux-fa039d5f6b126fbd65eefa05db2f67e44df8f121-is_gpt_valid
 * @id cpp/linux/fa039d5f6b126fbd65eefa05db2f67e44df8f121/is-gpt-valid
 * @description linux-fa039d5f6b126fbd65eefa05db2f67e44df8f121-fs/partitions/efi.c-is_gpt_valid CVE-2011-1776
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vgpt_294, PointerDereferenceExpr target_1, PointerDereferenceExpr target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="sizeof_partition_entry"
		and target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vgpt_294
		and target_0.getCondition().(EqualityOperation).getAnOperand().(SizeofTypeOperator).getType() instanceof LongType
		and target_0.getCondition().(EqualityOperation).getAnOperand().(SizeofTypeOperator).getValue()="128"
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
		and target_0.getThen().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerDereferenceExpr).getOperand().(VariableAccess).getLocation().isBefore(target_2.getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vgpt_294, PointerDereferenceExpr target_1) {
		target_1.getOperand().(VariableAccess).getTarget()=vgpt_294
		and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
		and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
		and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="GPT: last_usable_lba incorrect: %lld > %lld\n"
		and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="last_usable_lba"
		and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("u64")
}

predicate func_2(Parameter vgpt_294, PointerDereferenceExpr target_2) {
		target_2.getOperand().(VariableAccess).getTarget()=vgpt_294
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alloc_read_gpt_entries")
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("parsed_partitions *")
}

from Function func, Parameter vgpt_294, PointerDereferenceExpr target_1, PointerDereferenceExpr target_2
where
not func_0(vgpt_294, target_1, target_2, func)
and func_1(vgpt_294, target_1)
and func_2(vgpt_294, target_2)
and vgpt_294.getType().hasName("gpt_header **")
and vgpt_294.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
