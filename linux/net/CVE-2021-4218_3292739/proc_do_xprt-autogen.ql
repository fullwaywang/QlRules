/**
 * @name linux-32927393dc1ccd60fb2bdc05b9e8e88753761469-proc_do_xprt
 * @id cpp/linux/32927393dc1ccd60fb2bdc05b9e8e88753761469/proc-do-xprt
 * @description linux-32927393dc1ccd60fb2bdc05b9e8e88753761469-net/sunrpc/sysctl.c-proc_do_xprt CVE-2021-4218
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuffer_63, Parameter vlenp_63, Parameter vppos_63, Variable vtmpbuf_65, Variable vlen_66, FunctionCall target_0) {
	target_0.getTarget().hasName("simple_read_from_buffer")
	and not target_0.getTarget().hasName("memory_read_from_buffer")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuffer_63
	and target_0.getArgument(1).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vlenp_63
	and target_0.getArgument(2).(VariableAccess).getTarget()=vppos_63
	and target_0.getArgument(3).(VariableAccess).getTarget()=vtmpbuf_65
	and target_0.getArgument(4).(VariableAccess).getTarget()=vlen_66
}

from Function func, Parameter vbuffer_63, Parameter vlenp_63, Parameter vppos_63, Variable vtmpbuf_65, Variable vlen_66, FunctionCall target_0
where
func_0(vbuffer_63, vlenp_63, vppos_63, vtmpbuf_65, vlen_66, target_0)
and vbuffer_63.getType().hasName("void *")
and vlenp_63.getType().hasName("size_t *")
and vppos_63.getType().hasName("loff_t *")
and vtmpbuf_65.getType().hasName("char[256]")
and vlen_66.getType().hasName("size_t")
and vbuffer_63.getFunction() = func
and vlenp_63.getFunction() = func
and vppos_63.getFunction() = func
and vtmpbuf_65.(LocalVariable).getFunction() = func
and vlen_66.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
