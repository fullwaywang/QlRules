/**
 * @name linux-eadb2f47a3ced5c64b23b90fd2a3463f63726066-kgdb_cpu_enter
 * @id cpp/linux/eadb2f47a3ced5c64b23b90fd2a3463f63726066/kgdb-cpu-enter
 * @description linux-eadb2f47a3ced5c64b23b90fd2a3463f63726066-kernel/debug/debug_core.c-kgdb_cpu_enter CVE-2022-21499
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdbg_kdb_mode, VariableAccess target_1, IfStmt target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("security_locked_down")
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getCondition().(Literal).getValue()="1"
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vdbg_kdb_mode
	and target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getCondition().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vdbg_kdb_mode, BlockStmt target_3, VariableAccess target_1) {
	target_1.getTarget()=vdbg_kdb_mode
	and target_1.getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Variable vdbg_kdb_mode, IfStmt target_2) {
	target_2.getCondition().(VariableAccess).getTarget()=vdbg_kdb_mode
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kdb_stub")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kgdb_state *")
	and target_2.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("gdb_serial_stub")
	and target_2.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kgdb_state *")
}

predicate func_3(Function func, BlockStmt target_3) {
	target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kdb_stub")
	and target_3.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kgdb_state *")
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vdbg_kdb_mode, VariableAccess target_1, IfStmt target_2, BlockStmt target_3
where
not func_0(vdbg_kdb_mode, target_1, target_2)
and func_1(vdbg_kdb_mode, target_3, target_1)
and func_2(vdbg_kdb_mode, target_2)
and func_3(func, target_3)
and vdbg_kdb_mode.getType().hasName("int")
and not vdbg_kdb_mode.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
