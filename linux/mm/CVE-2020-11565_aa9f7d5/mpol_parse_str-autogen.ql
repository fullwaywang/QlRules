/**
 * @name linux-aa9f7d5172fac9bf1f09e678c35e287a40a7b7dd-mpol_parse_str
 * @id cpp/linux/aa9f7d5172fac9bf1f09e678c35e287a40a7b7dd/mpol-parse-str
 * @description linux-aa9f7d5172fac9bf1f09e678c35e287a40a7b7dd-mm/mempolicy.c-mpol_parse_str CVE-2020-11565
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnodes_2876, VariableAccess target_1, AddressOfExpr target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__nodes_empty")
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vnodes_2876
	and target_0.getCondition().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="1024"
	and target_0.getThen().(GotoStmt).getName() ="out"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnodelist_2877, BlockStmt target_3, VariableAccess target_1) {
	target_1.getTarget()=vnodelist_2877
	and target_1.getParent().(IfStmt).getThen()=target_3
}

predicate func_2(Variable vnodes_2876, AddressOfExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vnodes_2876
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__nodes_clear")
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="1024"
}

predicate func_3(Function func, BlockStmt target_3) {
	target_3.getStmt(1).(WhileStmt).getCondition().(FunctionCall).getTarget().hasName("isdigit")
	and target_3.getStmt(1).(WhileStmt).getCondition().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_3.getStmt(1).(WhileStmt).getStmt().(ExprStmt).getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_3.getStmt(2).(IfStmt).getCondition().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("char *")
	and target_3.getStmt(2).(IfStmt).getThen().(GotoStmt).getName() ="out"
	and target_3.getEnclosingFunction() = func
}

from Function func, Variable vnodes_2876, Variable vnodelist_2877, VariableAccess target_1, AddressOfExpr target_2, BlockStmt target_3
where
not func_0(vnodes_2876, target_1, target_2)
and func_1(vnodelist_2877, target_3, target_1)
and func_2(vnodes_2876, target_2)
and func_3(func, target_3)
and vnodes_2876.getType().hasName("nodemask_t")
and vnodelist_2877.getType().hasName("char *")
and vnodes_2876.(LocalVariable).getFunction() = func
and vnodelist_2877.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
