/**
 * @name linux-c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d-snd_rawmidi_kernel_read1
 * @id cpp/linux/c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d/snd-rawmidi-kernel-read1
 * @description linux-c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d-sound/core/rawmidi.c-snd_rawmidi_kernel_read1 CVE-2020-27786
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vruntime_1020, WhileStmt target_8, AddressOfExpr target_9, LogicalAndExpr target_10, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("snd_rawmidi_buffer_ref")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vruntime_1020
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_8.getLocation())
	and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_10.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(FunctionCall target_11, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and target_1.getParent().(IfStmt).getCondition()=target_11
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(VariableAccess target_12, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(VariableAccess).getType().hasName("int")
	and target_2.getThen().(GotoStmt).getName() ="out"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_12
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vruntime_1020, ExprStmt target_13, AddressOfExpr target_14, AddressOfExpr target_15, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("snd_rawmidi_buffer_unref")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vruntime_1020
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_13.getLocation())
	and target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_15.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_5(Function func, UnaryMinusExpr target_5) {
	target_5.getValue()="-14"
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vresult_1019, FunctionCall target_11, ReturnStmt target_6) {
	target_6.getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vresult_1019
	and target_6.getExpr().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_6.getExpr().(ConditionalExpr).getThen().(VariableAccess).getTarget()=vresult_1019
	and target_6.getExpr().(ConditionalExpr).getElse() instanceof UnaryMinusExpr
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_11
}

predicate func_7(Variable vresult_1019, ExprStmt target_16, VariableAccess target_7) {
	target_7.getTarget()=vresult_1019
	and target_16.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation().isBefore(target_7.getLocation())
}

predicate func_8(Variable vruntime_1020, WhileStmt target_8) {
	target_8.getCondition().(LogicalAndExpr).getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("long")
	and target_8.getCondition().(LogicalAndExpr).getLeftOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_8.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="avail"
	and target_8.getCondition().(LogicalAndExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("long")
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="buffer_size"
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="appl_ptr"
	and target_8.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(SubExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
}

predicate func_9(Variable vruntime_1020, AddressOfExpr target_9) {
	target_9.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_9.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_9.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

predicate func_10(Variable vruntime_1020, LogicalAndExpr target_10) {
	target_10.getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("long")
	and target_10.getLeftOperand().(RelationalOperation).getLesserOperand().(Literal).getValue()="0"
	and target_10.getRightOperand().(PointerFieldAccess).getTarget().getName()="avail"
	and target_10.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
}

predicate func_11(Variable vruntime_1020, Variable vresult_1019, FunctionCall target_11) {
	target_11.getTarget().hasName("copy_to_user")
	and target_11.getArgument(0).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned char *")
	and target_11.getArgument(0).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vresult_1019
	and target_11.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_11.getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_11.getArgument(1).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_11.getArgument(2).(VariableAccess).getTarget().getType().hasName("long")
}

predicate func_12(Parameter vuserbuf_1015, BlockStmt target_17, VariableAccess target_12) {
	target_12.getTarget()=vuserbuf_1015
	and target_12.getParent().(IfStmt).getThen()=target_17
}

predicate func_13(Variable vruntime_1020, Function func, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irqrestore")
	and target_13.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_13.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_13
}

predicate func_14(Variable vruntime_1020, AddressOfExpr target_14) {
	target_14.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_14.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("spinlock_check")
}

predicate func_15(Variable vruntime_1020, AddressOfExpr target_15) {
	target_15.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_15.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_15.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irqrestore")
	and target_15.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
}

predicate func_16(Variable vresult_1019, ExprStmt target_16) {
	target_16.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vresult_1019
	and target_16.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getTarget().getType().hasName("long")
}

predicate func_17(Variable vruntime_1020, Parameter vuserbuf_1015, Variable vresult_1019, BlockStmt target_17) {
	target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock_irqrestore")
	and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_17.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_17.getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("copy_to_user")
	and target_17.getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=vuserbuf_1015
	and target_17.getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget()=vresult_1019
	and target_17.getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="buffer"
	and target_17.getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vruntime_1020
	and target_17.getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_17.getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("long")
	and target_17.getStmt(1).(IfStmt).getThen() instanceof BlockStmt
}

from Function func, Variable vruntime_1020, Parameter vuserbuf_1015, Variable vresult_1019, UnaryMinusExpr target_5, ReturnStmt target_6, VariableAccess target_7, WhileStmt target_8, AddressOfExpr target_9, LogicalAndExpr target_10, FunctionCall target_11, VariableAccess target_12, ExprStmt target_13, AddressOfExpr target_14, AddressOfExpr target_15, ExprStmt target_16, BlockStmt target_17
where
not func_0(vruntime_1020, target_8, target_9, target_10, func)
and not func_1(target_11, func)
and not func_2(target_12, func)
and not func_3(vruntime_1020, target_13, target_14, target_15, func)
and func_5(func, target_5)
and func_6(vresult_1019, target_11, target_6)
and func_7(vresult_1019, target_16, target_7)
and func_8(vruntime_1020, target_8)
and func_9(vruntime_1020, target_9)
and func_10(vruntime_1020, target_10)
and func_11(vruntime_1020, vresult_1019, target_11)
and func_12(vuserbuf_1015, target_17, target_12)
and func_13(vruntime_1020, func, target_13)
and func_14(vruntime_1020, target_14)
and func_15(vruntime_1020, target_15)
and func_16(vresult_1019, target_16)
and func_17(vruntime_1020, vuserbuf_1015, vresult_1019, target_17)
and vruntime_1020.getType().hasName("snd_rawmidi_runtime *")
and vuserbuf_1015.getType().hasName("unsigned char *")
and vresult_1019.getType().hasName("long")
and vruntime_1020.(LocalVariable).getFunction() = func
and vuserbuf_1015.getFunction() = func
and vresult_1019.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
