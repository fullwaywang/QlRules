/**
 * @name linux-79636f636126775436a11ee9cf00a9253a33ac11-batadv_purge_orig_ref
 * @id cpp/linux/79636f636126775436a11ee9cf00a9253a33ac11/batadv-purge-orig-ref
 * @description linux-79636f636126775436a11ee9cf00a9253a33ac11-net/batman-adv/originator.c-batadv_purge_orig_ref CVE-2024-40981
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhead_1350, ExprStmt target_1, ExprStmt target_2) {
exists(IfStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getCondition() |
		obj_0.getTarget().hasName("hlist_empty")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vhead_1350
	)
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					obj_3.getTarget().getName()="list_locks"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("batadv_hashtable *")
				)
				and obj_2.getArrayOffset().(VariableAccess).getTarget().getType().hasName("u32")
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("spinlock_t *")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vhead_1350, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(ArrayExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getArrayBase() |
					obj_3.getTarget().getName()="table"
					and obj_3.getQualifier().(VariableAccess).getTarget().getType().hasName("batadv_hashtable *")
				)
				and obj_2.getArrayOffset().(VariableAccess).getTarget().getType().hasName("u32")
			)
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vhead_1350
	)
}

from Function func, Variable vhead_1350, ExprStmt target_1, ExprStmt target_2
where
not func_0(vhead_1350, target_1, target_2)
and func_1(func, target_1)
and func_2(vhead_1350, target_2)
and vhead_1350.getType().hasName("hlist_head *")
and vhead_1350.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
