/**
 * @name linux-48bd024b8a40d73ad6b086de2615738da0c7004f-ovl_iterate
 * @id cpp/linux/48bd024b8a40d73ad6b086de2615738da0c7004f/ovl-iterate
 * @description linux-48bd024b8a40d73ad6b086de2615738da0c7004f-fs/overlayfs/readdir.c-ovl_iterate CVE-2020-16120
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdentry_744, IfStmt target_18, LogicalOrExpr target_20, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("const cred *")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ovl_override_creds")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="d_sb"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdentry_744
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_18.getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_20.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_746, LogicalOrExpr target_20) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_746
	and target_1.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20)
}

predicate func_2(Variable verr_746, LogicalOrExpr target_20) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_746
	and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getElse().(BlockStmt).getStmt(0)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20)
}

predicate func_3(PointerFieldAccess target_22, Function func) {
exists(GotoStmt target_3 |
	target_3.getName() ="out"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Variable verr_746, NotExpr target_23) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_746
	and target_4.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_4
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23)
}

predicate func_5(FunctionCall target_24, Function func) {
exists(GotoStmt target_5 |
	target_5.getName() ="out"
	and target_5.getParent().(IfStmt).getCondition()=target_24
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(VariableAccess target_25, Function func) {
exists(GotoStmt target_6 |
	target_6.getName() ="out"
	and target_6.getParent().(IfStmt).getCondition()=target_25
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(Variable verr_746, ReturnStmt target_12, Function func) {
exists(ExprStmt target_7 |
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_746
	and target_7.getExpr().(AssignExpr).getRValue() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
	and target_7.getFollowingStmt() instanceof ReturnStmt
	and target_12.getExpr().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_8(Function func) {
exists(ExprStmt target_8 |
	target_8.getExpr().(FunctionCall).getTarget().hasName("revert_creds")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("const cred *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
	and target_8.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_9(Parameter vctx_741, Parameter vfile_741, FunctionCall target_9) {
	target_9.getTarget().hasName("ovl_iterate_real")
	and target_9.getArgument(0).(VariableAccess).getTarget()=vfile_741
	and target_9.getArgument(1).(VariableAccess).getTarget()=vctx_741
}

predicate func_10(Variable vod_743, Parameter vctx_741, FunctionCall target_10) {
	target_10.getTarget().hasName("iterate_dir")
	and target_10.getArgument(0).(PointerFieldAccess).getTarget().getName()="realfile"
	and target_10.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vod_743
	and target_10.getArgument(1).(VariableAccess).getTarget()=vctx_741
}

predicate func_11(Variable vcache_767, FunctionCall target_11) {
	target_11.getTarget().hasName("PTR_ERR")
	and target_11.getArgument(0).(VariableAccess).getTarget()=vcache_767
}

predicate func_12(Variable verr_746, VariableAccess target_25, ReturnStmt target_12) {
	target_12.getExpr().(VariableAccess).getTarget()=verr_746
	and target_12.getParent().(IfStmt).getCondition()=target_25
}

predicate func_14(LogicalOrExpr target_20, Function func, ReturnStmt target_14) {
	target_14.getExpr() instanceof FunctionCall
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_20
	and target_14.getEnclosingFunction() = func
}

predicate func_15(PointerFieldAccess target_22, Function func, ReturnStmt target_15) {
	target_15.getExpr() instanceof FunctionCall
	and target_15.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_22
	and target_15.getEnclosingFunction() = func
}

predicate func_16(FunctionCall target_24, Function func, ReturnStmt target_16) {
	target_16.getExpr() instanceof FunctionCall
	and target_16.getParent().(IfStmt).getCondition()=target_24
	and target_16.getEnclosingFunction() = func
}

predicate func_17(Function func, ReturnStmt target_17) {
	target_17.getExpr() instanceof Literal
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
}

predicate func_18(Parameter vctx_741, Parameter vfile_741, IfStmt target_18) {
	target_18.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="pos"
	and target_18.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_741
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ovl_dir_reset")
	and target_18.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_741
}

predicate func_20(Variable vdentry_744, Parameter vfile_741, LogicalOrExpr target_20) {
	target_20.getLeftOperand().(FunctionCall).getTarget().hasName("ovl_xino_bits")
	and target_20.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="d_sb"
	and target_20.getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdentry_744
	and target_20.getRightOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ovl_same_fs")
	and target_20.getRightOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="d_sb"
	and target_20.getRightOperand().(LogicalAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdentry_744
	and target_20.getRightOperand().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ovl_is_impure_dir")
	and target_20.getRightOperand().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_741
	and target_20.getRightOperand().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("ovl_path_type")
	and target_20.getRightOperand().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="d_parent"
	and target_20.getRightOperand().(LogicalAndExpr).getRightOperand().(LogicalOrExpr).getRightOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdentry_744
}

predicate func_22(Variable vod_743, PointerFieldAccess target_22) {
	target_22.getTarget().getName()="is_real"
	and target_22.getQualifier().(VariableAccess).getTarget()=vod_743
}

predicate func_23(Variable vod_743, NotExpr target_23) {
	target_23.getOperand().(PointerFieldAccess).getTarget().getName()="cache"
	and target_23.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vod_743
}

predicate func_24(Variable vcache_767, FunctionCall target_24) {
	target_24.getTarget().hasName("IS_ERR")
	and target_24.getArgument(0).(VariableAccess).getTarget()=vcache_767
}

predicate func_25(Variable verr_746, VariableAccess target_25) {
	target_25.getTarget()=verr_746
}

from Function func, Variable vod_743, Variable vdentry_744, Variable verr_746, Variable vcache_767, Parameter vctx_741, Parameter vfile_741, FunctionCall target_9, FunctionCall target_10, FunctionCall target_11, ReturnStmt target_12, ReturnStmt target_14, ReturnStmt target_15, ReturnStmt target_16, ReturnStmt target_17, IfStmt target_18, LogicalOrExpr target_20, PointerFieldAccess target_22, NotExpr target_23, FunctionCall target_24, VariableAccess target_25
where
not func_0(vdentry_744, target_18, target_20, func)
and not func_1(verr_746, target_20)
and not func_2(verr_746, target_20)
and not func_3(target_22, func)
and not func_4(verr_746, target_23)
and not func_5(target_24, func)
and not func_6(target_25, func)
and not func_7(verr_746, target_12, func)
and not func_8(func)
and func_9(vctx_741, vfile_741, target_9)
and func_10(vod_743, vctx_741, target_10)
and func_11(vcache_767, target_11)
and func_12(verr_746, target_25, target_12)
and func_14(target_20, func, target_14)
and func_15(target_22, func, target_15)
and func_16(target_24, func, target_16)
and func_17(func, target_17)
and func_18(vctx_741, vfile_741, target_18)
and func_20(vdentry_744, vfile_741, target_20)
and func_22(vod_743, target_22)
and func_23(vod_743, target_23)
and func_24(vcache_767, target_24)
and func_25(verr_746, target_25)
and vod_743.getType().hasName("ovl_dir_file *")
and vdentry_744.getType().hasName("dentry *")
and verr_746.getType().hasName("int")
and vcache_767.getType().hasName("ovl_dir_cache *")
and vctx_741.getType().hasName("dir_context *")
and vfile_741.getType().hasName("file *")
and vod_743.(LocalVariable).getFunction() = func
and vdentry_744.(LocalVariable).getFunction() = func
and verr_746.(LocalVariable).getFunction() = func
and vcache_767.(LocalVariable).getFunction() = func
and vctx_741.getFunction() = func
and vfile_741.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
