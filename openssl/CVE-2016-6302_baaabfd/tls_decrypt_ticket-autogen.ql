/**
 * @name openssl-baaabfd8fdcec04a691695fad9a664bea43202b6-tls_decrypt_ticket
 * @id cpp/openssl/baaabfd8fdcec04a691695fad9a664bea43202b6/tls-decrypt-ticket
 * @description openssl-baaabfd8fdcec04a691695fad9a664bea43202b6-ssl/t1_lib.c-tls_decrypt_ticket CVE-2016-6302
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="48"
		and not target_0.getValue()="16"
		and target_0.getParent().(LTExpr).getParent().(IfStmt).getCondition() instanceof RelationalOperation
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter veticklen_3393, Variable vmlen_3399, Variable vctx_3402, ReturnStmt target_4, ExprStmt target_7) {
	exists(RelationalOperation target_1 |
		 (target_1 instanceof GEExpr or target_1 instanceof LEExpr)
		and target_1.getLesserOperand().(VariableAccess).getTarget()=veticklen_3393
		and target_1.getGreaterOperand().(AddExpr).getAnOperand().(AddExpr).getAnOperand().(Literal).getValue()="16"
		and target_1.getGreaterOperand().(AddExpr).getAnOperand().(AddExpr).getAnOperand().(FunctionCall).getTarget().hasName("EVP_CIPHER_CTX_iv_length")
		and target_1.getGreaterOperand().(AddExpr).getAnOperand().(AddExpr).getAnOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vctx_3402
		and target_1.getGreaterOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vmlen_3399
		and target_1.getParent().(IfStmt).getThen()=target_4
		and target_1.getLesserOperand().(VariableAccess).getLocation().isBefore(target_7.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable vhctx_3401, RelationalOperation target_6, AddressOfExpr target_11) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("HMAC_CTX_cleanup")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vhctx_3401
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_11.getOperand().(VariableAccess).getLocation()))
}

predicate func_3(Variable vctx_3402, RelationalOperation target_6, AddressOfExpr target_12) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(FunctionCall).getTarget().hasName("EVP_CIPHER_CTX_cleanup")
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vctx_3402
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_3
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_12.getOperand().(VariableAccess).getLocation()))
}

predicate func_4(RelationalOperation target_6, Function func, ReturnStmt target_4) {
		target_4.getExpr().(Literal).getValue()="2"
		and target_4.getParent().(IfStmt).getCondition()=target_6
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter veticklen_3393, ReturnStmt target_4, VariableAccess target_5) {
		target_5.getTarget()=veticklen_3393
		and target_5.getParent().(LTExpr).getGreaterOperand() instanceof Literal
		and target_5.getParent().(LTExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_6(Parameter veticklen_3393, ReturnStmt target_4, RelationalOperation target_6) {
		 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
		and target_6.getLesserOperand().(VariableAccess).getTarget()=veticklen_3393
		and target_6.getGreaterOperand() instanceof Literal
		and target_6.getParent().(IfStmt).getThen()=target_4
}

predicate func_7(Parameter veticklen_3393, Variable vmlen_3399, ExprStmt target_7) {
		target_7.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=veticklen_3393
		and target_7.getExpr().(AssignSubExpr).getRValue().(VariableAccess).getTarget()=vmlen_3399
}

predicate func_11(Variable vhctx_3401, AddressOfExpr target_11) {
		target_11.getOperand().(VariableAccess).getTarget()=vhctx_3401
		and target_11.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("HMAC_CTX_init")
}

predicate func_12(Variable vctx_3402, AddressOfExpr target_12) {
		target_12.getOperand().(VariableAccess).getTarget()=vctx_3402
		and target_12.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("EVP_CIPHER_CTX_init")
}

from Function func, Parameter veticklen_3393, Variable vmlen_3399, Variable vhctx_3401, Variable vctx_3402, Literal target_0, ReturnStmt target_4, VariableAccess target_5, RelationalOperation target_6, ExprStmt target_7, AddressOfExpr target_11, AddressOfExpr target_12
where
func_0(func, target_0)
and not func_1(veticklen_3393, vmlen_3399, vctx_3402, target_4, target_7)
and not func_2(vhctx_3401, target_6, target_11)
and not func_3(vctx_3402, target_6, target_12)
and func_4(target_6, func, target_4)
and func_5(veticklen_3393, target_4, target_5)
and func_6(veticklen_3393, target_4, target_6)
and func_7(veticklen_3393, vmlen_3399, target_7)
and func_11(vhctx_3401, target_11)
and func_12(vctx_3402, target_12)
and veticklen_3393.getType().hasName("int")
and vmlen_3399.getType().hasName("int")
and vhctx_3401.getType().hasName("HMAC_CTX")
and vctx_3402.getType().hasName("EVP_CIPHER_CTX")
and veticklen_3393.getFunction() = func
and vmlen_3399.(LocalVariable).getFunction() = func
and vhctx_3401.(LocalVariable).getFunction() = func
and vctx_3402.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
