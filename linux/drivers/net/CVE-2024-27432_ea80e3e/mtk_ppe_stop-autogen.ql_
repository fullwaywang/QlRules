/**
 * @name linux-ea80e3ed09ab2c2b75724faf5484721753e92c31-mtk_ppe_stop
 * @id cpp/linux/ea80e3ed09ab2c2b75724faf5484721753e92c31/mtk-ppe-stop
 * @description linux-ea80e3ed09ab2c2b75724faf5484721753e92c31-drivers/net/ethernet/mediatek/mtk_ppe.c-mtk_ppe_stop CVE-2024-27432
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vval_1078, ExprStmt target_8, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vval_1078
	and target_0.getExpr().(AssignExpr).getRValue() instanceof BitwiseOrExpr
	and target_8.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Parameter vppe_1076, Variable vval_1078, ExprStmt target_8, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("ppe_clear")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vppe_1076
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="540"
	and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vval_1078
	and target_8.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Variable vval_1078) {
exists(BitwiseOrExpr target_2 |
	target_2.getValue()="200576"
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vval_1078)
}

predicate func_3(Function func) {
exists(IfStmt target_3 |
	target_3.getCondition() instanceof FunctionCall
	and target_3.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-110"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt)
}

/*predicate func_4(Function func) {
exists(UnaryMinusExpr target_4 |
	target_4.getValue()="-110"
	and target_4.getEnclosingFunction() = func)
}

*/
predicate func_6(Variable vval_1078, BitwiseOrExpr target_6) {
	target_6.getValue()="3968"
	and target_6.getParent().(AssignExpr).getRValue() = target_6
	and target_6.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vval_1078
}

predicate func_7(Parameter vppe_1076, FunctionCall target_7) {
	target_7.getTarget().hasName("mtk_ppe_wait_busy")
	and target_7.getArgument(0).(VariableAccess).getTarget()=vppe_1076
}

predicate func_8(Parameter vppe_1076, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("ppe_w32")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vppe_1076
	and target_8.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="516"
	and target_8.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

from Function func, Parameter vppe_1076, Variable vval_1078, ExprStmt target_0, ExprStmt target_1, BitwiseOrExpr target_6, FunctionCall target_7, ExprStmt target_8
where
func_0(vval_1078, target_8, target_0)
and func_1(vppe_1076, vval_1078, target_8, target_1)
and not func_2(vval_1078)
and not func_3(func)
and func_6(vval_1078, target_6)
and func_7(vppe_1076, target_7)
and func_8(vppe_1076, target_8)
and vppe_1076.getType().hasName("mtk_ppe *")
and vval_1078.getType().hasName("u32")
and vppe_1076.getFunction() = func
and vval_1078.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
