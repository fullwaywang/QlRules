/**
 * @name linux-6acb47d1a318e5b3b7115354ebc4ea060c59d3a1-serdes_simple_xlate
 * @id cpp/linux/6acb47d1a318e5b3b7115354ebc4ea060c59d3a1/serdes-simple-xlate
 * @description linux-6acb47d1a318e5b3b7115354ebc4ea060c59d3a1-drivers/phy/mscc/phy-ocelot-serdes.c-serdes_simple_xlate CVE-2018-20854
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vi_201) {
exists(RelationalOperation target_0 |
	 (target_0 instanceof GTExpr or target_0 instanceof LTExpr)
	and target_0.getLesserOperand().(VariableAccess).getTarget()=vi_201
	and target_0.getGreaterOperand() instanceof AddExpr)
}

predicate func_1(Variable vi_201, AddExpr target_1) {
	target_1.getValue()="9"
	and target_1.getParent().(LEExpr).getLesserOperand().(VariableAccess).getTarget()=vi_201
}

/*predicate func_2(Variable vi_201, VariableAccess target_2) {
	target_2.getTarget()=vi_201
	and target_2.getParent().(LEExpr).getGreaterOperand().(AddExpr).getValue()="9"
}

*/
predicate func_3(Variable vi_201, RelationalOperation target_3) {
	 (target_3 instanceof GEExpr or target_3 instanceof LEExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget()=vi_201
	and target_3.getGreaterOperand() instanceof AddExpr
}

from Function func, Variable vi_201, AddExpr target_1, RelationalOperation target_3
where
not func_0(vi_201)
and func_1(vi_201, target_1)
and func_3(vi_201, target_3)
and vi_201.getType().hasName("unsigned int")
and vi_201.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
