/**
 * @name linux-fc1092f51567277509563800a3c56732070b6aa4-__ip_make_skb
 * @id cpp/linux/fc1092f51567277509563800a3c56732070b6aa4/--ip-make-skb
 * @description linux-fc1092f51567277509563800a3c56732070b6aa4-net/ipv4/ip_output.c-__ip_make_skb CVE-2024-36927
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="1"
	and not target_0.getValue()="2"
	and target_0.getParent().(LogicalAndExpr).getParent().(LogicalAndExpr).getLeftOperand() instanceof LogicalAndExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vfl4_1384, ExprStmt target_18, ExprStmt target_19) {
exists(BitwiseAndExpr target_1 |
	target_1.getLeftOperand().(ValueFieldAccess).getTarget().getName()="flowic_flags"
	and target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__fl_common"
	and target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfl4_1384
	and target_1.getRightOperand().(Literal).getValue()="2"
	and target_18.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_19.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Function func, ConditionalExpr target_2) {
	target_2.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand() instanceof Literal
	and target_2.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
	and target_2.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_2.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="inet_flags"
	and target_2.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_2.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("__builtin_constant_p")
	and target_2.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="inet_flags"
	and target_2.getThen().(FunctionCall).getTarget().hasName("const_test_bit")
	and target_2.getThen().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="inet_flags"
	and target_2.getElse().(FunctionCall).getTarget().hasName("_test_bit")
	and target_2.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="inet_flags"
	and target_2.getEnclosingFunction() = func
}

/*predicate func_5(Variable v__mptr_1476, ExprStmt target_5) {
	target_5.getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1476
	and target_5.getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

*/
/*predicate func_8(Variable v__mptr_1_1476, ExprStmt target_8) {
	target_8.getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_1_1476
	and target_8.getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

*/
/*predicate func_11(Variable v__mptr_2_1476, ExprStmt target_11) {
	target_11.getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_2_1476
	and target_11.getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

*/
/*predicate func_14(Variable v__mptr_3_1476, ExprStmt target_14) {
	target_14.getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_3_1476
	and target_14.getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

*/
/*predicate func_17(Variable v__mptr_4_1476, ExprStmt target_17) {
	target_17.getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget()=v__mptr_4_1476
	and target_17.getExpr().(PointerArithmeticOperation).getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

*/
predicate func_18(Parameter vfl4_1384, ExprStmt target_18) {
	target_18.getExpr().(FunctionCall).getTarget().hasName("ip_copy_addrs")
	and target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("iphdr *")
	and target_18.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfl4_1384
}

predicate func_19(Parameter vfl4_1384, ExprStmt target_19) {
	target_19.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("u8")
	and target_19.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="type"
	and target_19.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="icmpt"
	and target_19.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="uli"
	and target_19.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfl4_1384
}

from Function func, Parameter vfl4_1384, Variable v__mptr_1476, Variable v__mptr_1_1476, Variable v__mptr_2_1476, Variable v__mptr_3_1476, Variable v__mptr_4_1476, Literal target_0, ConditionalExpr target_2, ExprStmt target_18, ExprStmt target_19
where
func_0(func, target_0)
and not func_1(vfl4_1384, target_18, target_19)
and func_2(func, target_2)
and func_18(vfl4_1384, target_18)
and func_19(vfl4_1384, target_19)
and vfl4_1384.getType().hasName("flowi4 *")
and v__mptr_1476.getType().hasName("void *")
and v__mptr_1_1476.getType().hasName("void *")
and v__mptr_2_1476.getType().hasName("void *")
and v__mptr_3_1476.getType().hasName("void *")
and v__mptr_4_1476.getType().hasName("void *")
and vfl4_1384.getFunction() = func
and v__mptr_1476.(LocalVariable).getFunction() = func
and v__mptr_1_1476.(LocalVariable).getFunction() = func
and v__mptr_2_1476.(LocalVariable).getFunction() = func
and v__mptr_3_1476.(LocalVariable).getFunction() = func
and v__mptr_4_1476.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
