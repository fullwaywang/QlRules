/**
 * @name linux-2f1a6be12ab6c8470d5776e68644726c94257c54-btrfs_ioctl_qgroup_assign
 * @id cpp/linux/2f1a6be12ab6c8470d5776e68644726c94257c54/btrfs-ioctl-qgroup-assign
 * @description linux-2f1a6be12ab6c8470d5776e68644726c94257c54-fs/btrfs/ioctl.c-btrfs_ioctl_qgroup_assign CVE-2023-1611
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfs_info_3702, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="qgroup_ioctl_lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfs_info_3702
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(Variable vfs_info_3702, IfStmt target_4, ExprStmt target_5, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="qgroup_ioctl_lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfs_info_3702
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("btrfs_run_qgroups")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("btrfs_trans_handle *")
	and target_2.getEnclosingFunction() = func
}

predicate func_4(Variable vfs_info_3702, IfStmt target_4) {
	target_4.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__btrfs_handle_fs_error")
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfs_info_3702
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof Literal
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(4).(StringLiteral).getValue()="failed to update qgroup status and info"
}

predicate func_5(Variable vfs_info_3702, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("__btrfs_handle_fs_error")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfs_info_3702
	and target_5.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_5.getExpr().(FunctionCall).getArgument(2) instanceof Literal
	and target_5.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(FunctionCall).getArgument(4).(StringLiteral).getValue()="failed to update qgroup status and info"
}

from Function func, Variable vfs_info_3702, ExprStmt target_2, IfStmt target_4, ExprStmt target_5
where
not func_0(vfs_info_3702, target_2, func)
and not func_1(vfs_info_3702, target_4, target_5, func)
and func_2(func, target_2)
and func_4(vfs_info_3702, target_4)
and func_5(vfs_info_3702, target_5)
and vfs_info_3702.getType().hasName("btrfs_fs_info *")
and vfs_info_3702.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
