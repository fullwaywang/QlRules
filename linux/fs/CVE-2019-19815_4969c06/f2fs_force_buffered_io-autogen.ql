/**
 * @name linux-4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6-f2fs_force_buffered_io
 * @id cpp/linux/4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6/f2fs-force-buffered-io
 * @description linux-4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6-fs/f2fs/f2fs.h-f2fs_force_buffered_io CVE-2019-19815
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_3667, ReturnStmt target_2, LogicalAndExpr target_3, FunctionCall target_4) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof FunctionCall
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="i_flags"
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_3667
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="256"
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vinode_3667, ReturnStmt target_2, FunctionCall target_1) {
	target_1.getTarget().hasName("is_sbi_flag_set")
	and target_1.getArgument(0).(FunctionCall).getTarget().hasName("F2FS_I_SB")
	and target_1.getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_3667
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(FunctionCall target_1, Function func, ReturnStmt target_2) {
	target_2.getParent().(IfStmt).getCondition()=target_1
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vinode_3667, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="opt"
	and target_3.getLeftOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="mount_opt"
	and target_3.getLeftOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("f2fs_sb_info *")
	and target_3.getLeftOperand().(LogicalAndExpr).getLeftOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="262144"
	and target_3.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getLeftOperand().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_3.getRightOperand().(FunctionCall).getTarget().hasName("block_unaligned_IO")
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_3667
	and target_3.getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("kiocb *")
	and target_3.getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("iov_iter *")
}

predicate func_4(Parameter vinode_3667, ReturnStmt target_2, FunctionCall target_4) {
	target_4.getTarget().hasName("F2FS_I_SB")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vinode_3667
	and target_4.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_2
}

from Function func, Parameter vinode_3667, FunctionCall target_1, ReturnStmt target_2, LogicalAndExpr target_3, FunctionCall target_4
where
not func_0(vinode_3667, target_2, target_3, target_4)
and func_1(vinode_3667, target_2, target_1)
and func_2(target_1, func, target_2)
and func_3(vinode_3667, target_3)
and func_4(vinode_3667, target_2, target_4)
and vinode_3667.getType().hasName("inode *")
and vinode_3667.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
