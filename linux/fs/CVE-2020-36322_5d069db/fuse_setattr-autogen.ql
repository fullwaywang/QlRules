/**
 * @name linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fuse_setattr
 * @id cpp/linux/5d069dbe8aaf2a197142558b6fb2978189ba3454/fuse-setattr
 * @description linux-5d069dbe8aaf2a197142558b6fb2978189ba3454-fs/fuse/dir.c-fuse_setattr CVE-2020-36322
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinode_1740, IfStmt target_1, FunctionCall target_2, FunctionCall target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("fuse_is_bad")
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_1740
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-5"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vinode_1740, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("fuse_allow_current_process")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("get_fuse_conn")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_1740
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-13"
}

predicate func_2(Variable vinode_1740, FunctionCall target_2) {
	target_2.getTarget().hasName("get_fuse_conn")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vinode_1740
}

predicate func_3(Variable vinode_1740, FunctionCall target_3) {
	target_3.getTarget().hasName("get_fuse_conn")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vinode_1740
	and target_3.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("fuse_allow_current_process")
}

from Function func, Variable vinode_1740, IfStmt target_1, FunctionCall target_2, FunctionCall target_3
where
not func_0(vinode_1740, target_1, target_2, target_3, func)
and func_1(vinode_1740, target_1)
and func_2(vinode_1740, target_2)
and func_3(vinode_1740, target_3)
and vinode_1740.getType().hasName("inode *")
and vinode_1740.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
