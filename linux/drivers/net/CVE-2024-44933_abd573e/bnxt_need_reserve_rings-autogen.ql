/**
 * @name linux-abd573e9ad2ba64eaa6418a5f4eec819de28f205-bnxt_need_reserve_rings
 * @id cpp/linux/abd573e9ad2ba64eaa6418a5f4eec819de28f205/bnxt-need-reserve-rings
 * @description linux-abd573e9ad2ba64eaa6418a5f4eec819de28f205-drivers/net/ethernet/broadcom/bnxt/bnxt.c-bnxt_need_reserve_rings CVE-2024-44933
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbp_7428, IfStmt target_3, LogicalAndExpr target_4, Function func) {
exists(IfStmt target_0 |
	exists(NotExpr obj_0 | obj_0=target_0.getCondition() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().getName()="fw_cap"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vbp_7428
			)
			and obj_1.getRightOperand().(BinaryBitwiseOperation).getValue()="8"
		)
	)
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getLeftOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vbp_7428, NotExpr target_5, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("bnxt_check_rss_tbl_no_rmgr")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vbp_7428
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_2(NotExpr target_5, Function func, ReturnStmt target_2) {
	target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vbp_7428, IfStmt target_3) {
	exists(LogicalAndExpr obj_0 | obj_0=target_3.getCondition() |
		exists(EqualityOperation obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().getName()="resv_tx_rings"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("bnxt_hw_resc *")
			)
			and exists(PointerFieldAccess obj_3 | obj_3=obj_1.getRightOperand() |
				obj_3.getTarget().getName()="tx_nr_rings"
				and obj_3.getQualifier().(VariableAccess).getTarget()=vbp_7428
			)
		)
		and exists(RelationalOperation obj_4 | obj_4=obj_0.getRightOperand() |
			exists(PointerFieldAccess obj_5 | obj_5=obj_4.getGreaterOperand() |
				obj_5.getTarget().getName()="hwrm_spec_code"
				and obj_5.getQualifier().(VariableAccess).getTarget()=vbp_7428
			)
			and obj_4.getLesserOperand().(HexLiteral).getValue()="67073"
		)
	)
}

predicate func_4(Parameter vbp_7428, LogicalAndExpr target_4) {
	exists(EqualityOperation obj_0 | obj_0=target_4.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="resv_tx_rings"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("bnxt_hw_resc *")
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getTarget().getName()="tx_nr_rings"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vbp_7428
		)
	)
	and exists(RelationalOperation obj_3 | obj_3=target_4.getRightOperand() |
		exists(PointerFieldAccess obj_4 | obj_4=obj_3.getGreaterOperand() |
			obj_4.getTarget().getName()="hwrm_spec_code"
			and obj_4.getQualifier().(VariableAccess).getTarget()=vbp_7428
		)
		and obj_3.getLesserOperand().(HexLiteral).getValue()="67073"
	)
}

predicate func_5(Parameter vbp_7428, NotExpr target_5) {
	exists(BitwiseAndExpr obj_0 | obj_0=target_5.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="fw_cap"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vbp_7428
		)
		and obj_0.getRightOperand().(BinaryBitwiseOperation).getValue()="8"
	)
}

from Function func, Parameter vbp_7428, ExprStmt target_1, ReturnStmt target_2, IfStmt target_3, LogicalAndExpr target_4, NotExpr target_5
where
not func_0(vbp_7428, target_3, target_4, func)
and func_1(vbp_7428, target_5, target_1)
and func_2(target_5, func, target_2)
and func_3(vbp_7428, target_3)
and func_4(vbp_7428, target_4)
and func_5(vbp_7428, target_5)
and vbp_7428.getType().hasName("bnxt *")
and vbp_7428.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
