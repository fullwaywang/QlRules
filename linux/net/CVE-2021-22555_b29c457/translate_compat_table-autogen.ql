/**
 * @name linux-b29c457a6511435960115c0f548c4360d5f4801d-translate_compat_table
 * @id cpp/linux/b29c457a6511435960115c0f548c4360d5f4801d/translate-compat-table
 * @description linux-b29c457a6511435960115c0f548c4360d5f4801d-net/ipv4/netfilter/arp_tables.c-translate_compat_table CVE-2021-0937
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnewinfo_1160, Variable vsize_1164, NotExpr target_1, ExprStmt target_2, ExprStmt target_3, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="entries"
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewinfo_1160
		and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vsize_1164
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Variable vnewinfo_1160, NotExpr target_1) {
		target_1.getOperand().(VariableAccess).getTarget()=vnewinfo_1160
}

predicate func_2(Variable vnewinfo_1160, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="number"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewinfo_1160
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_entries"
		and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("const compat_arpt_replace *")
}

predicate func_3(Variable vnewinfo_1160, Variable vsize_1164, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnewinfo_1160
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("xt_alloc_table_info")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsize_1164
}

from Function func, Variable vnewinfo_1160, Variable vsize_1164, NotExpr target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vnewinfo_1160, vsize_1164, target_1, target_2, target_3, func)
and func_1(vnewinfo_1160, target_1)
and func_2(vnewinfo_1160, target_2)
and func_3(vnewinfo_1160, vsize_1164, target_3)
and vnewinfo_1160.getType().hasName("xt_table_info *")
and vsize_1164.getType().hasName("unsigned int")
and vnewinfo_1160.(LocalVariable).getFunction() = func
and vsize_1164.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
