/**
 * @name linux-ba480dd4db9f1798541eb2d1c423fc95feee8d36-check_leaf
 * @id cpp/linux/ba480dd4db9f1798541eb2d1c423fc95feee8d36/check-leaf
 * @description linux-ba480dd4db9f1798541eb2d1c423fc95feee8d36-fs/btrfs/tree-checker.c-check_leaf CVE-2018-14612
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfs_info_481, Parameter vleaf_481, LogicalAndExpr target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("u64")
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="2"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("u64")
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="4"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("u64")
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="5"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getType().hasName("u64")
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="18446744073709551607"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("generic_err")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfs_info_481
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vleaf_481
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(StringLiteral).getValue()="invalid root, root %llu must never be empty"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(4).(VariableAccess).getType().hasName("u64")
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-117"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vleaf_481, FunctionCall target_2) {
	target_2.getTarget().hasName("btrfs_header_owner")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vleaf_481
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="objectid"
	and target_2.getParent().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("btrfs_key")
}

predicate func_3(Parameter vleaf_481, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("u32")
	and target_3.getLeftOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("btrfs_header_flag")
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vleaf_481
	and target_3.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="2"
}

predicate func_4(Parameter vfs_info_481, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("btrfs_root *")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("btrfs_get_fs_root")
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfs_info_481
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("btrfs_key")
}

from Function func, Parameter vfs_info_481, Parameter vleaf_481, FunctionCall target_2, LogicalAndExpr target_3, ExprStmt target_4
where
not func_0(vfs_info_481, vleaf_481, target_3, target_4)
and func_2(vleaf_481, target_2)
and func_3(vleaf_481, target_3)
and func_4(vfs_info_481, target_4)
and vfs_info_481.getType().hasName("btrfs_fs_info *")
and vleaf_481.getType().hasName("extent_buffer *")
and vfs_info_481.getFunction() = func
and vleaf_481.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
