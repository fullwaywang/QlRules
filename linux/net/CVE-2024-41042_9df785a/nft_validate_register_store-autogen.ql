/**
 * @name linux-9df785aeb7dcc8efd1d4110bb27d26005298ebae-nft_validate_register_store
 * @id cpp/linux/9df785aeb7dcc8efd1d4110bb27d26005298ebae/nft-validate-register-store
 * @description linux-9df785aeb7dcc8efd1d4110bb27d26005298ebae-net/netfilter/nf_tables_api.c-nft_validate_register_store CVE-2024-41042
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctx_11048, Parameter vdata_11050, FunctionCall target_0) {
	exists(ValueFieldAccess obj_0 | obj_0=target_0.getArgument(1) |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="(unknown field)"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vdata_11050
			)
			and obj_1.getTarget().getName()="verdict"
		)
		and obj_0.getTarget().getName()="chain"
	)
	and exists(AssignExpr obj_3 | obj_3=target_0.getParent() |
		obj_3.getRValue() = target_0
		and obj_3.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_0.getTarget().hasName("nf_tables_check_loops")
	and not target_0.getTarget().hasName("nft_chain_validate")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vctx_11048
}

from Function func, Parameter vctx_11048, Parameter vdata_11050, FunctionCall target_0
where
func_0(vctx_11048, vdata_11050, target_0)
and vctx_11048.getType().hasName("const nft_ctx *")
and vdata_11050.getType().hasName("const nft_data *")
and vctx_11048.getFunction() = func
and vdata_11050.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
