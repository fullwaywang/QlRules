/**
 * @name linux-e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3-qib_write
 * @id cpp/linux/e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3/qib-write
 * @description linux-e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3-drivers/infiniband/hw/qib/qib_file_ops.c-qib_write CVE-2016-4565
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_1, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-13"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_1.getCondition().(RelationalOperation).getGreaterOperand().(SizeofExprOperator).getValue()="4"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ssize_t")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-22"
	and target_1.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="bail"
	and target_1.getEnclosingFunction() = func
}

from Function func, IfStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
