/**
 * @name linux-a43cfc87caaf46710c8027a8c23b8a55f1078f19-binder_selftest_alloc
 * @id cpp/linux/a43cfc87caaf46710c8027a8c23b8a55f1078f19/binder-selftest-alloc
 * @description linux-a43cfc87caaf46710c8027a8c23b8a55f1078f19-drivers/android/binder_alloc_selftest.c-binder_selftest_alloc CVE-2023-20928
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter valloc_283, ExprStmt target_3) {
exists(PointerFieldAccess target_0 |
	target_0.getTarget().getName()="vma_addr"
	and target_0.getQualifier().(VariableAccess).getTarget()=valloc_283
	and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter valloc_283, VariableAccess target_1) {
	target_1.getTarget()=valloc_283
}

predicate func_2(Parameter valloc_283, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="vma"
	and target_2.getQualifier().(VariableAccess).getTarget()=valloc_283
}

predicate func_3(Parameter valloc_283, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("binder_selftest_alloc_offset")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=valloc_283
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("size_t[5]")
	and target_3.getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

from Function func, Parameter valloc_283, VariableAccess target_1, PointerFieldAccess target_2, ExprStmt target_3
where
not func_0(valloc_283, target_3)
and func_1(valloc_283, target_1)
and func_2(valloc_283, target_2)
and func_3(valloc_283, target_3)
and valloc_283.getType().hasName("binder_alloc *")
and valloc_283.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
