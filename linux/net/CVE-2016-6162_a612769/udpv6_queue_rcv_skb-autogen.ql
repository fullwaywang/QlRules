/**
 * @name linux-a612769774a30e4fc143c4cb6395c12573415660-udpv6_queue_rcv_skb
 * @id cpp/linux/a612769774a30e4fc143c4cb6395c12573415660/udpv6-queue-rcv-skb
 * @description linux-a612769774a30e4fc143c4cb6395c12573415660-net/ipv6/udp.c-udpv6_queue_rcv_skb CVE-2016-6162
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_556, ExprStmt target_1, FunctionCall target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="len"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_556
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(SizeofTypeOperator).getValue()="8"
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(GotoStmt).getName() ="drop"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vskb_556, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("udp_csum_pull_header")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_556
}

predicate func_2(Parameter vskb_556, FunctionCall target_2) {
	target_2.getTarget().hasName("sk_filter")
	and target_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_2.getArgument(1).(VariableAccess).getTarget()=vskb_556
}

from Function func, Parameter vskb_556, ExprStmt target_1, FunctionCall target_2
where
not func_0(vskb_556, target_1, target_2, func)
and func_1(vskb_556, target_1)
and func_2(vskb_556, target_2)
and vskb_556.getType().hasName("sk_buff *")
and vskb_556.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
