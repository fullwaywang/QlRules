/**
 * @name linux-89ac597e3e807b91e2ebd6a7c36fec7b97290233-btrfs_qgroup_rescan_worker
 * @id cpp/linux/89ac597e3e807b91e2ebd6a7c36fec7b97290233/btrfs-qgroup-rescan-worker
 * @description linux-89ac597e3e807b91e2ebd6a7c36fec7b97290233-fs/btrfs/qgroup.c-btrfs_qgroup_rescan_worker CVE-2023-52896
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(IfStmt target_4, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
	and target_0.getLocation().isBefore(target_4.getLocation())
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Variable vtrans_3208, ExprStmt target_2, ExprStmt target_5, Function func) {
exists(IfStmt target_1 |
	exists(BlockStmt obj_0 | obj_0=target_1.getThen() |
		obj_0.getStmt(0) instanceof ExprStmt
		and obj_0.getStmt(1) instanceof IfStmt
	)
	and exists(BlockStmt obj_1 | obj_1=target_1.getElse() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLValue().(VariableAccess).getTarget()=vtrans_3208
				and obj_3.getRValue().(Literal).getValue()="0"
			)
		)
	)
	and target_1.getCondition().(VariableAccess).getType().hasName("bool")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getElse().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vfs_info_3205, Variable vtrans_3208, Function func, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="quota_root"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfs_info_3205
			)
			and obj_1.getTarget().hasName("btrfs_start_transaction")
			and obj_1.getArgument(1).(Literal).getValue()="1"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vtrans_3208
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

predicate func_3(Variable vfs_info_3205, Variable vtrans_3208, Variable verr_3209, Function func, IfStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getCondition() |
		obj_0.getTarget().hasName("IS_ERR")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vtrans_3208
	)
	and exists(BlockStmt obj_1 | obj_1=target_3.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getRValue() |
					obj_4.getTarget().hasName("PTR_ERR")
					and obj_4.getArgument(0).(VariableAccess).getTarget()=vtrans_3208
				)
				and obj_3.getLValue().(VariableAccess).getTarget()=verr_3209
			)
		)
		and exists(ExprStmt obj_5 | obj_5=obj_1.getStmt(1) |
			exists(AssignExpr obj_6 | obj_6=obj_5.getExpr() |
				obj_6.getLValue().(VariableAccess).getTarget()=vtrans_3208
				and obj_6.getRValue().(Literal).getValue()="0"
			)
		)
		and exists(ExprStmt obj_7 | obj_7=obj_1.getStmt(2) |
			exists(FunctionCall obj_8 | obj_8=obj_7.getExpr() |
				obj_8.getTarget().hasName("btrfs_printk")
				and obj_8.getArgument(0).(VariableAccess).getTarget()=vfs_info_3205
				and obj_8.getArgument(1).(StringLiteral).getValue()="3fail to start transaction for status update: %d"
				and obj_8.getArgument(2).(VariableAccess).getTarget()=verr_3209
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Variable vtrans_3208, Variable verr_3209, IfStmt target_4) {
	exists(RelationalOperation obj_0 | obj_0=target_4.getCondition() |
		obj_0.getGreaterOperand().(VariableAccess).getTarget()=verr_3209
		and obj_0.getLesserOperand().(Literal).getValue()="0"
	)
	and exists(ExprStmt obj_1 | obj_1=target_4.getThen() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
			obj_2.getTarget().hasName("btrfs_commit_transaction")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vtrans_3208
		)
	)
	and exists(ExprStmt obj_3 | obj_3=target_4.getElse() |
		exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
			obj_4.getTarget().hasName("btrfs_end_transaction")
			and obj_4.getArgument(0).(VariableAccess).getTarget()=vtrans_3208
		)
	)
}

predicate func_5(Variable vtrans_3208, RelationalOperation target_6, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("btrfs_end_transaction")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vtrans_3208
	)
	and target_5.getParent().(IfStmt).getCondition()=target_6
}

predicate func_6(Variable verr_3209, ExprStmt target_7, RelationalOperation target_6) {
	 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
	and target_6.getGreaterOperand().(VariableAccess).getTarget()=verr_3209
	and target_6.getLesserOperand().(Literal).getValue()="0"
	and target_6.getParent().(IfStmt).getThen()=target_7
}

predicate func_7(Variable vtrans_3208, ExprStmt target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getExpr() |
		obj_0.getTarget().hasName("btrfs_commit_transaction")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vtrans_3208
	)
}

from Function func, Variable vfs_info_3205, Variable vtrans_3208, Variable verr_3209, ExprStmt target_2, IfStmt target_3, IfStmt target_4, ExprStmt target_5, RelationalOperation target_6, ExprStmt target_7
where
not func_0(target_4, func)
and not func_1(vtrans_3208, target_2, target_5, func)
and func_2(vfs_info_3205, vtrans_3208, func, target_2)
and func_3(vfs_info_3205, vtrans_3208, verr_3209, func, target_3)
and func_4(vtrans_3208, verr_3209, target_4)
and func_5(vtrans_3208, target_6, target_5)
and func_6(verr_3209, target_7, target_6)
and func_7(vtrans_3208, target_7)
and vfs_info_3205.getType().hasName("btrfs_fs_info *")
and vtrans_3208.getType().hasName("btrfs_trans_handle *")
and verr_3209.getType().hasName("int")
and vfs_info_3205.(LocalVariable).getFunction() = func
and vtrans_3208.(LocalVariable).getFunction() = func
and verr_3209.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
