/**
 * @name linux-8f828aa48812ced28aa39cb3cfe55ef2444d03dd-slab_free_hook
 * @id cpp/linux/8f828aa48812ced28aa39cb3cfe55ef2444d03dd/slab-free-hook
 * @description linux-8f828aa48812ced28aa39cb3cfe55ef2444d03dd-mm/slub.c-slab_free_hook CVE-2024-36892
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v__fortify_size_2102, ExprStmt target_12, ExprStmt target_0) {
	target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getTarget().hasName("fortify_memset_chk")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__fortify_size_2102
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("__builtin_object_size")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("__builtin_object_size")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getTarget().hasName("__builtin_memset")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=v__fortify_size_2102
	and target_12.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Parameter vs_2070) {
exists(AssignExpr target_1 |
	target_1.getLValue().(VariableAccess).getType().hasName("unsigned int")
	and target_1.getRValue().(FunctionCall).getTarget().hasName("get_info_end")
	and target_1.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vs_2070)
}

predicate func_2(Variable v__fortify_size_2102, FunctionCall target_13) {
exists(ExprStmt target_2 |
	target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getTarget().hasName("fortify_memset_chk")
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__fortify_size_2102
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("__builtin_object_size")
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getLeftOperand().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("__builtin_object_size")
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getTarget().hasName("__builtin_memset")
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(CommaExpr).getRightOperand().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=v__fortify_size_2102
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_13)
}

predicate func_7(Parameter vs_2070, VariableAccess target_7) {
	target_7.getTarget()=vs_2070
}

predicate func_8(Parameter vs_2070, PointerFieldAccess target_8) {
	target_8.getTarget().getName()="inuse"
	and target_8.getQualifier().(VariableAccess).getTarget()=vs_2070
}

predicate func_9(Parameter vs_2070, PointerFieldAccess target_9) {
	target_9.getTarget().getName()="inuse"
	and target_9.getQualifier().(VariableAccess).getTarget()=vs_2070
}

predicate func_10(Parameter vs_2070, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="inuse"
	and target_10.getQualifier().(VariableAccess).getTarget()=vs_2070
}

predicate func_11(Parameter vs_2070, PointerFieldAccess target_11) {
	target_11.getTarget().getName()="inuse"
	and target_11.getQualifier().(VariableAccess).getTarget()=vs_2070
}

predicate func_12(Parameter vs_2070, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_2070
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="2"
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getTarget().getName()="red_left_pad"
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_2070
	and target_12.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
}

predicate func_13(Function func, FunctionCall target_13) {
	target_13.getTarget().hasName("__builtin_expect")
	and target_13.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("bool")
	and target_13.getArgument(1).(Literal).getValue()="0"
	and target_13.getEnclosingFunction() = func
}

from Function func, Parameter vs_2070, Variable v__fortify_size_2102, ExprStmt target_0, VariableAccess target_7, PointerFieldAccess target_8, PointerFieldAccess target_9, PointerFieldAccess target_10, PointerFieldAccess target_11, ExprStmt target_12, FunctionCall target_13
where
func_0(v__fortify_size_2102, target_12, target_0)
and not func_1(vs_2070)
and not func_2(v__fortify_size_2102, target_13)
and func_7(vs_2070, target_7)
and func_8(vs_2070, target_8)
and func_9(vs_2070, target_9)
and func_10(vs_2070, target_10)
and func_11(vs_2070, target_11)
and func_12(vs_2070, target_12)
and func_13(func, target_13)
and vs_2070.getType().hasName("kmem_cache *")
and v__fortify_size_2102.getType().hasName("size_t")
and vs_2070.getFunction() = func
and v__fortify_size_2102.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
