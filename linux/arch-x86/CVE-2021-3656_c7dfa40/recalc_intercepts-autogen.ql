/**
 * @name linux-c7dfa4009965a9b2d7b329ee970eb8da0d32f0bc-recalc_intercepts
 * @id cpp/linux/c7dfa4009965a9b2d7b329ee970eb8da0d32f0bc/recalc-intercepts
 * @description linux-c7dfa4009965a9b2d7b329ee970eb8da0d32f0bc-arch/x86/kvm/svm/nested.c-recalc_intercepts CVE-2021-3656
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vc_124, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("vmcb_set_intercept")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_124
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vc_124, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("vmcb_set_intercept")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_124
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_2(Variable vc_124, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("vmcb_clr_intercept")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vc_124
}

from Function func, Variable vc_124, ExprStmt target_2
where
not func_0(vc_124, target_2, func)
and not func_1(vc_124, func)
and func_2(vc_124, target_2)
and vc_124.getType().hasName("vmcb_control_area *")
and vc_124.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
