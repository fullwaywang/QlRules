/**
 * @name linux-24d5f16e407b75bc59d5419b957a9cab423b2681-__iwl_mvm_remove_time_event
 * @id cpp/linux/24d5f16e407b75bc59d5419b957a9cab423b2681/--iwl-mvm-remove-time-event
 * @description linux-24d5f16e407b75bc59d5419b957a9cab423b2681-drivers/net/wireless/intel/iwlwifi/mvm/time-event.c-__iwl_mvm_remove_time_event CVE-2021-47415
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmvmvif_665, ExprStmt target_3, LogicalAndExpr target_5, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vmvmvif_665
	and target_0.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_3.getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_5.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vte_data_661, FunctionCall target_1) {
	target_1.getTarget().hasName("iwl_mvm_vif_from_mac80211")
	and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="vif"
	and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vte_data_661
}

predicate func_2(Function func, Initializer target_2) {
	target_2.getExpr() instanceof FunctionCall
	and target_2.getExpr().getEnclosingFunction() = func
}

predicate func_3(Parameter vte_data_661, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("nl80211_iftype")
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="type"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vif"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vte_data_661
}

predicate func_5(Variable vmvmvif_665, LogicalAndExpr target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vmvmvif_665
	and target_5.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("u32")
}

from Function func, Variable vmvmvif_665, Parameter vte_data_661, FunctionCall target_1, Initializer target_2, ExprStmt target_3, LogicalAndExpr target_5
where
not func_0(vmvmvif_665, target_3, target_5, func)
and func_1(vte_data_661, target_1)
and func_2(func, target_2)
and func_3(vte_data_661, target_3)
and func_5(vmvmvif_665, target_5)
and vmvmvif_665.getType().hasName("iwl_mvm_vif *")
and vte_data_661.getType().hasName("iwl_mvm_time_event_data *")
and vmvmvif_665.(LocalVariable).getFunction() = func
and vte_data_661.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
