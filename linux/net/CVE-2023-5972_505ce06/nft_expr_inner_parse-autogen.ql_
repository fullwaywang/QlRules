/**
 * @name linux-505ce0630ad5d31185695f8a29dde8d29f28faa7-nft_expr_inner_parse
 * @id cpp/linux/505ce0630ad5d31185695f8a29dde8d29f28faa7/nft-expr-inner-parse
 * @description linux-505ce0630ad5d31185695f8a29dde8d29f28faa7-net/netfilter/nf_tables_api.c-nft_expr_inner_parse CVE-2023-5972
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vtb_3160, ReturnStmt target_2, ExprStmt target_3, NotExpr target_1) {
exists(LogicalOrExpr target_0 |
	target_0.getLeftOperand() instanceof NotExpr
	and target_0.getRightOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_3160
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation())
	and target_0.getRightOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_1.getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation()))
}

predicate func_1(Variable vtb_3160, ReturnStmt target_2, NotExpr target_1) {
	target_1.getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_3160
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ReturnStmt target_2) {
	target_2.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vtb_3160, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nla_parse_nested_deprecated")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vtb_3160
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SubExpr).getValue()="2"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("const nlattr *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(Literal).getValue()="0"
}

from Function func, Variable vtb_3160, NotExpr target_1, ReturnStmt target_2, ExprStmt target_3
where
not func_0(vtb_3160, target_2, target_3, target_1)
and func_1(vtb_3160, target_2, target_1)
and func_2(func, target_2)
and func_3(vtb_3160, target_3)
and vtb_3160.getType().hasName("nlattr *[3]")
and vtb_3160.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
