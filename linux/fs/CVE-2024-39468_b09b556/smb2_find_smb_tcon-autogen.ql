/**
 * @name linux-b09b556e48968317887a11243a5331a7bc00ece5-smb2_find_smb_tcon
 * @id cpp/linux/b09b556e48968317887a11243a5331a7bc00ece5/smb2-find-smb-tcon
 * @description linux-b09b556e48968317887a11243a5331a7bc00ece5-fs/smb/client/smb2transport.c-smb2_find_smb_tcon CVE-2024-39468
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcifs_tcp_ses_lock, ExprStmt target_1, ExprStmt target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("spin_unlock")
		and obj_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcifs_tcp_ses_lock
	)
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(NotExpr target_2, Function func, ExprStmt target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("cifs_put_smb_ses")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("cifs_ses *")
	)
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget().getType().hasName("cifs_tcon *")
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vcifs_tcp_ses_lock, ExprStmt target_0, ExprStmt target_1, NotExpr target_2
where
func_0(vcifs_tcp_ses_lock, target_1, target_0)
and func_1(target_2, func, target_1)
and func_2(func, target_2)
and vcifs_tcp_ses_lock.getType().hasName("spinlock_t")
and not vcifs_tcp_ses_lock.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
