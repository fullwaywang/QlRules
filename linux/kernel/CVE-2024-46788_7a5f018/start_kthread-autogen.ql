/**
 * @name linux-7a5f01828edf152c144d27cf63de446fdf2dc222-start_kthread
 * @id cpp/linux/7a5f01828edf152c144d27cf63de446fdf2dc222/start-kthread
 * @description linux-7a5f01828edf152c144d27cf63de446fdf2dc222-kernel/trace/trace_osnoise.c-start_kthread CVE-2024-46788
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vcpu_1996, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("cpumask_set_cpu")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vcpu_1996
		and obj_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("cpumask")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(AddExpr).getRightOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vcpu_1996, ExprStmt target_1) {
	exists(AddExpr obj_0 | obj_0=target_1.getExpr() |
		exists(ArrayExpr obj_1 | obj_1=obj_0.getRightOperand() |
			obj_1.getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
			and obj_1.getArrayOffset().(VariableAccess).getTarget()=vcpu_1996
		)
		and obj_0.getLeftOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	)
}

from Function func, Parameter vcpu_1996, ExprStmt target_1
where
not func_0(vcpu_1996, target_1, func)
and func_1(vcpu_1996, target_1)
and vcpu_1996.getType().hasName("unsigned int")
and vcpu_1996.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
