/**
 * @name linux-ee22082c3e2f230028afa0e22aa8773b1de3c919-vc4_hdmi_audio_init
 * @id cpp/linux/ee22082c3e2f230028afa0e22aa8773b1de3c919/vc4-hdmi-audio-init
 * @description linux-ee22082c3e2f230028afa0e22aa8773b1de3c919-drivers/gpu/drm/vc4/vc4_hdmi.c-vc4_hdmi_audio_init CVE-2022-48852
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcodec_pdev_1470, Parameter vvc4_hdmi_1463, ExprStmt target_1, FunctionCall target_2, AddressOfExpr target_3, ExprStmt target_4, Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="audio"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vvc4_hdmi_1463
			)
			and obj_1.getTarget().getName()="codec_pdev"
		)
		and obj_0.getRValue().(VariableAccess).getTarget()=vcodec_pdev_1470
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vvc4_hdmi_1463, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="cpus"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("snd_soc_dai_link *")
		)
		and exists(AddressOfExpr obj_2 | obj_2=obj_0.getRValue() |
			exists(ValueFieldAccess obj_3 | obj_3=obj_2.getOperand() |
				exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
					obj_4.getTarget().getName()="audio"
					and obj_4.getQualifier().(VariableAccess).getTarget()=vvc4_hdmi_1463
				)
				and obj_3.getTarget().getName()="cpu"
			)
		)
	)
}

predicate func_2(Variable vcodec_pdev_1470, FunctionCall target_2) {
	target_2.getTarget().hasName("PTR_ERR")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vcodec_pdev_1470
}

predicate func_3(Variable vcodec_pdev_1470, AddressOfExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="dev"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vcodec_pdev_1470
	)
}

predicate func_4(Parameter vvc4_hdmi_1463, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="audio"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vvc4_hdmi_1463
				)
				and obj_2.getTarget().getName()="dma_data"
			)
			and obj_1.getTarget().getName()="maxburst"
		)
		and obj_0.getRValue().(Literal).getValue()="2"
	)
}

from Function func, Variable vcodec_pdev_1470, Parameter vvc4_hdmi_1463, ExprStmt target_1, FunctionCall target_2, AddressOfExpr target_3, ExprStmt target_4
where
not func_0(vcodec_pdev_1470, vvc4_hdmi_1463, target_1, target_2, target_3, target_4, func)
and func_1(vvc4_hdmi_1463, target_1)
and func_2(vcodec_pdev_1470, target_2)
and func_3(vcodec_pdev_1470, target_3)
and func_4(vvc4_hdmi_1463, target_4)
and vcodec_pdev_1470.getType().hasName("platform_device *")
and vvc4_hdmi_1463.getType().hasName("vc4_hdmi *")
and vcodec_pdev_1470.(LocalVariable).getFunction() = func
and vvc4_hdmi_1463.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
