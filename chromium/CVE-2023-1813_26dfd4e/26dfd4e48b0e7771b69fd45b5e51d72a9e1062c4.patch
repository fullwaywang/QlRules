commit 26dfd4e48b0e7771b69fd45b5e51d72a9e1062c4	26dfd4e48b0e7771b69fd45b5e51d72a9e1062c4
Author: Danil Somsikov <dsv@chromium.org>
Date:   Mon Mar 27 18:04:59 2023 +0000

    Extended DevToolsExtensionFileAccessTest to cover mixed case scheme
    
    Bug: 1423258
    Change-Id: I414d6c4128612d948d7d9a0ae84940d20a0165e3
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4372948
    Auto-Submit: Danil Somsikov <dsv@chromium.org>
    Commit-Queue: Alex Gough <ajgo@chromium.org>
    Reviewed-by: Alex Gough <ajgo@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1122527}

diff --git a/chrome/browser/devtools/devtools_browsertest.cc b/chrome/browser/devtools/devtools_browsertest.cc
index b1faa9dbad182..8d8bc53fb77d3 100644
--- a/chrome/browser/devtools/devtools_browsertest.cc
+++ b/chrome/browser/devtools/devtools_browsertest.cc
@@ -1769,7 +1769,7 @@ IN_PROC_BROWSER_TEST_F(DevToolsExtensionTest,
 
 class DevToolsExtensionFileAccessTest : public DevToolsExtensionTest {
  protected:
-  void Run(bool allow_file_access) {
+  void Run(bool allow_file_access, const std::string& url_scheme) {
     extensions::TestExtensionDir dir;
 
     dir.WriteManifest(BuildExtensionManifest("File Access", "devtools.html"));
@@ -1793,28 +1793,36 @@ class DevToolsExtensionFileAccessTest : public DevToolsExtensionTest {
                 .AppendASCII("content/test/data/devtools/navigation.html"))
             .spec();
 
-    base::ReplaceFirstSubstringAfterOffset(&file_url, 0, "file:///", "file:");
-
     const Extension* extension =
         LoadExtensionFromPath(dir.UnpackedPath(), allow_file_access);
     ASSERT_TRUE(extension);
 
     std::string url = base::StringPrintf(
-        R"(data:text/html,<script>//%%23%%20sourceMappingURL=data:application/json,{"version":3,"sources":["file:%s"]}</script>)",
-        file_url.c_str());
+        R"(data:text/html,<script>//%%23%%20sourceMappingURL=data:application/json,{"version":3,"sources":["%s:%s"]}</script>)",
+        url_scheme.c_str(), file_url.c_str() + strlen("file:///"));
     OpenDevToolsWindow(url, false);
     RunTestFunction(window_, "waitForTestResultsAsMessage");
   }
 };
 
+IN_PROC_BROWSER_TEST_F(DevToolsExtensionFileAccessTest,
+                       CanGetFileResourceWithFileAccess) {
+  Run(true, "file:///");
+}
+
 IN_PROC_BROWSER_TEST_F(DevToolsExtensionFileAccessTest,
                        CantGetFileResourceWithoutFileAccess) {
-  Run(false);
+  Run(false, "file:///");
 }
 
 IN_PROC_BROWSER_TEST_F(DevToolsExtensionFileAccessTest,
-                       CanGetFileResourceWithFileAccess) {
-  Run(true);
+                       CantGetFileResourceWithoutFileAccessNoSlashes) {
+  Run(false, "file:");
+}
+
+IN_PROC_BROWSER_TEST_F(DevToolsExtensionFileAccessTest,
+                       CantGetFileResourceWithoutFileAccessMixedCase) {
+  Run(false, "fILe:");
 }
 
 // Tests that scripts are not duplicated after Scripts Panel switch.
