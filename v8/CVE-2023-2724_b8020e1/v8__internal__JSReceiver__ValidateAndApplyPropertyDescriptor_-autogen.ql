/**
 * @name v8-b8020e1973d7d3a50b17c076cd948f079e59f9e5-v8__internal__JSReceiver__ValidateAndApplyPropertyDescriptor_
 * @id cpp/v8/b8020e1973d7d3a50b17c076cd948f079e59f9e5/v8internaljsreceivervalidateandapplypropertydescriptor
 * @description v8-b8020e1973d7d3a50b17c076cd948f079e59f9e5-src/runtime/runtime-object.cc-v8__internal__JSReceiver__ValidateAndApplyPropertyDescriptor_ CVE-2023-2724
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vgetter_1535, Variable vsetter_1539, Parameter vit_1479, Parameter vdesc_1480, FunctionCall target_0) {
	target_0.getTarget().hasName("DefineAccessor")
	and not target_0.getTarget().hasName("DefineOwnAccessorIgnoreAttributes")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vit_1479
	and target_0.getArgument(1).(VariableAccess).getTarget()=vgetter_1535
	and target_0.getArgument(2).(VariableAccess).getTarget()=vsetter_1539
	and target_0.getArgument(3).(FunctionCall).getTarget().hasName("ToAttributes")
	and target_0.getArgument(3).(FunctionCall).getQualifier().(VariableAccess).getTarget()=vdesc_1480
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="1653"
	and not target_1.getValue()="1654"
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="../../src/objects/js-objects.cc"
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="PropertyDescriptor::IsAccessorDescriptor(current) && desc_is_accessor_descriptor"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="1715"
	and not target_2.getValue()="1716"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="../../src/objects/js-objects.cc"
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="desc_is_accessor_descriptor || (desc_is_generic_descriptor && PropertyDescriptor::IsAccessorDescriptor(current))"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vattrs_1679, Variable vgetter_1716, Variable vsetter_1722, Parameter vit_1479, FunctionCall target_3) {
	target_3.getTarget().hasName("DefineAccessor")
	and not target_3.getTarget().hasName("DefineOwnAccessorIgnoreAttributes")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vit_1479
	and target_3.getArgument(1).(VariableAccess).getTarget()=vgetter_1716
	and target_3.getArgument(2).(VariableAccess).getTarget()=vsetter_1722
	and target_3.getArgument(3).(VariableAccess).getTarget()=vattrs_1679
}

from Function func, Variable vgetter_1535, Variable vsetter_1539, Variable vattrs_1679, Variable vgetter_1716, Variable vsetter_1722, Parameter vit_1479, Parameter vdesc_1480, FunctionCall target_0, Literal target_1, Literal target_2, FunctionCall target_3
where
func_0(vgetter_1535, vsetter_1539, vit_1479, vdesc_1480, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and func_3(vattrs_1679, vgetter_1716, vsetter_1722, vit_1479, target_3)
and vgetter_1535.getType().hasName("Handle<Object>")
and vsetter_1539.getType().hasName("Handle<Object>")
and vattrs_1679.getType().hasName("PropertyAttributes")
and vgetter_1716.getType().hasName("Handle<Object>")
and vsetter_1722.getType().hasName("Handle<Object>")
and vit_1479.getType().hasName("LookupIterator *")
and vdesc_1480.getType().hasName("PropertyDescriptor *")
and vgetter_1535.(LocalVariable).getFunction() = func
and vsetter_1539.(LocalVariable).getFunction() = func
and vattrs_1679.(LocalVariable).getFunction() = func
and vgetter_1716.(LocalVariable).getFunction() = func
and vsetter_1722.(LocalVariable).getFunction() = func
and vit_1479.getFunction() = func
and vdesc_1480.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
