commit 4b22aa42bd4d2d630ef1854c139275c3532937cb
Author: Xiyu Yang <xiyuyang19@fudan.edu.cn>
Date:   Thu Sep 9 12:32:38 2021 +0800

    net/sunrpc: fix reference count leaks in rpc_sysfs_xprt_state_change
    
    [ Upstream commit 776d794f28c95051bc70405a7b1fa40115658a18 ]
    
    The refcount leak issues take place in an error handling path. When the
    3rd argument buf doesn't match with "offline", "online" or "remove", the
    function simply returns -EINVAL and forgets to decrease the reference
    count of a rpc_xprt object and a rpc_xprt_switch object increased by
    rpc_sysfs_xprt_kobj_get_xprt() and
    rpc_sysfs_xprt_kobj_get_xprt_switch(), causing reference count leaks of
    both unused objects.
    
    Fix this issue by jumping to the error handling path labelled with
    out_put when buf matches none of "offline", "online" or "remove".
    
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/net/sunrpc/sysfs.c b/net/sunrpc/sysfs.c
index 9a6f17e18f73..379cf0e4d965 100644
--- a/net/sunrpc/sysfs.c
+++ b/net/sunrpc/sysfs.c
@@ -291,8 +291,10 @@ static ssize_t rpc_sysfs_xprt_state_change(struct kobject *kobj,
 		online = 1;
 	else if (!strncmp(buf, "remove", 6))
 		remove = 1;
-	else
-		return -EINVAL;
+	else {
+		count = -EINVAL;
+		goto out_put;
+	}
 
 	if (wait_on_bit_lock(&xprt->state, XPRT_LOCKED, TASK_KILLABLE)) {
 		count = -EINTR;
