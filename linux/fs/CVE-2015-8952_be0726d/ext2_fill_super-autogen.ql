/**
 * @name linux-be0726d33cb8f411945884664924bed3cb8c70ee-ext2_fill_super
 * @id cpp/linux/be0726d33cb8f411945884664924bed3cb8c70ee/ext2-fill-super
 * @description linux-be0726d33cb8f411945884664924bed3cb8c70ee-fs/ext2/super.c-ext2_fill_super CVE-2015-8952
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="784"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vsbi_785, ExprStmt target_4, AddressOfExpr target_5, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s_mb_cache"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_785
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext2_xattr_create_cache")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vsbi_785, Parameter vsb_782, ExprStmt target_4, ExprStmt target_6, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="s_mb_cache"
	and target_2.getCondition().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_785
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ext2_msg")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_782
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="Failed to create an mb_cache"
	and target_2.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="failed_mount3"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_4.getLocation())
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vsbi_785, ExprStmt target_7, AddressOfExpr target_8, Function func) {
exists(IfStmt target_3 |
	target_3.getCondition().(PointerFieldAccess).getTarget().getName()="s_mb_cache"
	and target_3.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_785
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ext2_xattr_destroy_cache")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="s_mb_cache"
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_785
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_7.getLocation())
	and target_3.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Parameter vsb_782, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="s_op"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsb_782
	and target_4.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const super_operations")
}

predicate func_5(Variable vsbi_785, Parameter vsb_782, AddressOfExpr target_5) {
	target_5.getOperand().(PointerFieldAccess).getTarget().getName()="s_dirs_counter"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_785
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__percpu_counter_init")
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("ext2_count_dirs")
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_782
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(BitwiseOrExpr).getValue()="37748928"
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("lock_class_key")
}

predicate func_6(Parameter vsb_782, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("ext2_msg")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_782
	and target_6.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
	and target_6.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="error: insufficient memory"
}

predicate func_7(Variable vsbi_785, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("percpu_counter_destroy")
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="s_freeblocks_counter"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_785
}

predicate func_8(Variable vsbi_785, AddressOfExpr target_8) {
	target_8.getOperand().(PointerFieldAccess).getTarget().getName()="s_freeblocks_counter"
	and target_8.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsbi_785
	and target_8.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("percpu_counter_destroy")
}

from Function func, Variable vsbi_785, Parameter vsb_782, SizeofExprOperator target_0, ExprStmt target_4, AddressOfExpr target_5, ExprStmt target_6, ExprStmt target_7, AddressOfExpr target_8
where
func_0(func, target_0)
and not func_1(vsbi_785, target_4, target_5, func)
and not func_2(vsbi_785, vsb_782, target_4, target_6, func)
and not func_3(vsbi_785, target_7, target_8, func)
and func_4(vsb_782, target_4)
and func_5(vsbi_785, vsb_782, target_5)
and func_6(vsb_782, target_6)
and func_7(vsbi_785, target_7)
and func_8(vsbi_785, target_8)
and vsbi_785.getType().hasName("ext2_sb_info *")
and vsb_782.getType().hasName("super_block *")
and vsbi_785.(LocalVariable).getFunction() = func
and vsb_782.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
