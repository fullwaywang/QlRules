/**
 * @name linux-407ecd1bd726f240123f704620d46e285ff30dd9-ef100_update_stats
 * @id cpp/linux/407ecd1bd726f240123f704620d46e285ff30dd9/ef100-update-stats
 * @description linux-407ecd1bd726f240123f704620d46e285ff30dd9-ef100_update_stats CVE-2022-3106
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmc_stats_604, ExprStmt target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vmc_stats_604
		and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Variable vmc_stats_604, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("efx_nic_copy_stats")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("efx_nic *")
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vmc_stats_604
}

from Function func, Variable vmc_stats_604, ExprStmt target_2
where
not func_0(vmc_stats_604, target_2, func)
and func_2(vmc_stats_604, target_2)
and vmc_stats_604.getType().hasName("__le64 *")
and vmc_stats_604.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
