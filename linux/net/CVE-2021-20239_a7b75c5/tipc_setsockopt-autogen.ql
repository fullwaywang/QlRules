/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-tipc_setsockopt
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/tipc-setsockopt
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/tipc/socket.c-tipc_setsockopt CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vov_3106, Variable vvalue_3111, ReturnStmt target_16, AsmStmt target_11, ExprStmt target_17) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("copy_from_sockptr")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vvalue_3111
	and target_0.getArgument(1).(VariableAccess).getTarget()=vov_3106
	and target_0.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_0.getParent().(IfStmt).getThen()=target_16
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_11.getChild(3).(VariableAccess).getLocation())
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vov_3106, ReturnStmt target_18, FunctionCall target_14) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("copy_from_sockptr")
	and target_1.getArgument(0) instanceof AddressOfExpr
	and target_1.getArgument(1).(VariableAccess).getTarget()=vov_3106
	and target_1.getArgument(2) instanceof SizeofExprOperator
	and target_1.getParent().(IfStmt).getThen()=target_18
	and target_1.getArgument(1).(VariableAccess).getLocation().isBefore(target_14.getArgument(1).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vov_3106, ReturnStmt target_20, FunctionCall target_14, LogicalOrExpr target_21) {
exists(NotExpr target_2 |
	target_2.getOperand().(FunctionCall).getTarget().hasName("sockptr_is_null")
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vov_3106
	and target_2.getParent().(LogicalOrExpr).getLeftOperand().(VariableAccess).getTarget()=vov_3106
	and target_2.getParent().(LogicalOrExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_20
	and target_14.getArgument(1).(VariableAccess).getLocation().isBefore(target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_2.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_21.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vov_3106, Variable vmreq_3110, ReturnStmt target_18, AddressOfExpr target_3) {
	target_3.getOperand().(VariableAccess).getTarget()=vmreq_3110
	and target_3.getParent().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vov_3106
	and target_3.getParent().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="16"
	and target_3.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_18
}

/*predicate func_4(Function func, SizeofExprOperator target_4) {
	target_4.getValue()="16"
	and target_4.getEnclosingFunction() = func
}

*/
predicate func_5(Variable vvalue_3111, Variable v__val_gu_3127, VariableAccess target_5) {
	target_5.getTarget()=vvalue_3111
	and target_5.getParent().(AssignExpr).getLValue() = target_5
	and target_5.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_3127
}

predicate func_6(Variable vcurrent_stack_pointer, Parameter vov_3106, Variable vvalue_3111, Variable v__ret_gu_3127, Variable v__val_gu_3127, ReturnStmt target_16, StmtExpr target_6) {
	target_6.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(Literal).getValue()="0"
	and target_6.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_6.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_6.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(0).(VariableAccess).getTarget()=v__ret_gu_3127
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(1).(VariableAccess).getTarget()=v__val_gu_3127
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(3).(VariableAccess).getTarget()=vov_3106
	and target_6.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(4).(SizeofExprOperator).getValue()="4"
	and target_6.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vvalue_3111
	and target_6.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_3127
	and target_6.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_6.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_3127
	and target_6.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_6.getParent().(IfStmt).getThen()=target_16
}

/*predicate func_9(Function func, ExprStmt target_9) {
	target_9.getExpr().(Literal).getValue()="0"
	and target_9.getEnclosingFunction() = func
}

*/
/*predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_10.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_10.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_10.getEnclosingFunction() = func
}

*/
predicate func_11(Variable vcurrent_stack_pointer, Parameter vov_3106, Variable v__ret_gu_3127, Variable v__val_gu_3127, AsmStmt target_11) {
	target_11.getChild(0).(VariableAccess).getTarget()=v__ret_gu_3127
	and target_11.getChild(1).(VariableAccess).getTarget()=v__val_gu_3127
	and target_11.getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_11.getChild(3).(VariableAccess).getTarget()=vov_3106
	and target_11.getChild(4).(SizeofExprOperator).getValue()="4"
}

/*predicate func_12(Variable vvalue_3111, Variable v__val_gu_3127, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vvalue_3111
	and target_12.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_3127
}

*/
/*predicate func_13(Variable v__ret_gu_3127, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_3127
	and target_13.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

*/
predicate func_14(Parameter vov_3106, ReturnStmt target_18, FunctionCall target_14) {
	target_14.getTarget().hasName("copy_from_user")
	and target_14.getArgument(0) instanceof AddressOfExpr
	and target_14.getArgument(1).(VariableAccess).getTarget()=vov_3106
	and target_14.getArgument(2) instanceof SizeofExprOperator
	and target_14.getParent().(IfStmt).getThen()=target_18
}

predicate func_15(Parameter vov_3106, ReturnStmt target_20, VariableAccess target_15) {
	target_15.getTarget()=vov_3106
	and target_15.getParent().(LogicalOrExpr).getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_15.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_20
}

predicate func_16(StmtExpr target_6, Function func, ReturnStmt target_16) {
	target_16.getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_16.getParent().(IfStmt).getCondition()=target_6
	and target_16.getEnclosingFunction() = func
}

predicate func_17(Variable vvalue_3111, ExprStmt target_17) {
	target_17.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("tsk_set_importance")
	and target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_17.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvalue_3111
}

predicate func_18(FunctionCall target_14, Function func, ReturnStmt target_18) {
	target_18.getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_18.getParent().(IfStmt).getCondition()=target_14
	and target_18.getEnclosingFunction() = func
}

predicate func_20(LogicalOrExpr target_21, Function func, ReturnStmt target_20) {
	target_20.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_20.getParent().(IfStmt).getCondition()=target_21
	and target_20.getEnclosingFunction() = func
}

predicate func_21(Parameter vov_3106, LogicalOrExpr target_21) {
	target_21.getLeftOperand().(VariableAccess).getTarget()=vov_3106
	and target_21.getRightOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

from Function func, Variable vcurrent_stack_pointer, Parameter vov_3106, Variable vmreq_3110, Variable vvalue_3111, Variable v__ret_gu_3127, Variable v__val_gu_3127, AddressOfExpr target_3, VariableAccess target_5, StmtExpr target_6, AsmStmt target_11, FunctionCall target_14, VariableAccess target_15, ReturnStmt target_16, ExprStmt target_17, ReturnStmt target_18, ReturnStmt target_20, LogicalOrExpr target_21
where
not func_0(vov_3106, vvalue_3111, target_16, target_11, target_17)
and not func_1(vov_3106, target_18, target_14)
and not func_2(vov_3106, target_20, target_14, target_21)
and func_3(vov_3106, vmreq_3110, target_18, target_3)
and func_5(vvalue_3111, v__val_gu_3127, target_5)
and func_6(vcurrent_stack_pointer, vov_3106, vvalue_3111, v__ret_gu_3127, v__val_gu_3127, target_16, target_6)
and func_11(vcurrent_stack_pointer, vov_3106, v__ret_gu_3127, v__val_gu_3127, target_11)
and func_14(vov_3106, target_18, target_14)
and func_15(vov_3106, target_20, target_15)
and func_16(target_6, func, target_16)
and func_17(vvalue_3111, target_17)
and func_18(target_14, func, target_18)
and func_20(target_21, func, target_20)
and func_21(vov_3106, target_21)
and vcurrent_stack_pointer.getType().hasName("unsigned long")
and vov_3106.getType().hasName("char *")
and vmreq_3110.getType().hasName("tipc_group_req")
and vvalue_3111.getType().hasName("u32")
and v__ret_gu_3127.getType().hasName("int")
and v__val_gu_3127.getType().hasName("unsigned int")
and not vcurrent_stack_pointer.getParentScope+() = func
and vov_3106.getFunction() = func
and vmreq_3110.(LocalVariable).getFunction() = func
and vvalue_3111.(LocalVariable).getFunction() = func
and v__ret_gu_3127.(LocalVariable).getFunction() = func
and v__val_gu_3127.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
