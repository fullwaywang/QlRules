/**
 * @name linux-1ae88b2e4-nfs_direct_write_schedule_segment
 * @id cpp/linux/1ae88b2e4/nfs-direct-write-schedule-segment
 * @description linux-1ae88b2e4-fs/nfs/direct.c-nfs_direct_write_schedule_segment CVE-2011-4325
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdata_721, FunctionCall target_0) {
		target_0.getTarget().hasName("nfs_writedata_release")
		and not target_0.getTarget().hasName("nfs_writedata_free")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vdata_721
}

predicate func_1(Variable vdata_721, FunctionCall target_1) {
		target_1.getTarget().hasName("nfs_writedata_release")
		and not target_1.getTarget().hasName("nfs_writedata_free")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vdata_721
}

predicate func_2(Variable vctx_700, VariableAccess target_2) {
		target_2.getTarget()=vctx_700
		and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_3(Variable vdata_721, Variable vctx_700, FunctionCall target_3) {
		target_3.getTarget().hasName("get_nfs_open_context")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vctx_700
		and target_3.getParent().(AssignExpr).getRValue() = target_3
		and target_3.getParent().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="context"
		and target_3.getParent().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="args"
		and target_3.getParent().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_721
}

from Function func, Variable vdata_721, Variable vctx_700, FunctionCall target_0, FunctionCall target_1, VariableAccess target_2, FunctionCall target_3
where
func_0(vdata_721, target_0)
and func_1(vdata_721, target_1)
and func_2(vctx_700, target_2)
and func_3(vdata_721, vctx_700, target_3)
and vdata_721.getType().hasName("nfs_write_data *")
and vctx_700.getType().hasName("nfs_open_context *")
and vdata_721.(LocalVariable).getFunction() = func
and vctx_700.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
