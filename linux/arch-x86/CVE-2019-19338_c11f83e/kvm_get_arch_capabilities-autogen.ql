/**
 * @name linux-c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa-kvm_get_arch_capabilities
 * @id cpp/linux/c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa/kvm-get-arch-capabilities
 * @description linux-c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa-arch/x86/kvm/x86.c-kvm_get_arch_capabilities CVE-2019-19338
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, ComplementExpr target_0) {
		target_0.getValue()="18446744073709551359"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func) {
	exists(BitwiseOrExpr target_1 |
		target_1.getValue()="384"
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, BinaryBitwiseOperation target_2) {
		target_2.getValue()="256"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Variable vdata_1284, ExprStmt target_6, BinaryBitwiseOperation target_3) {
		target_3.getValue()="128"
		and target_3.getParent().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdata_1284
		and target_3.getParent().(BitwiseAndExpr).getParent().(IfStmt).getThen()=target_6
}

predicate func_4(Variable vdata_1284, NotExpr target_7, IfStmt target_4) {
		target_4.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vdata_1284
		and target_4.getCondition().(BitwiseAndExpr).getRightOperand() instanceof BinaryBitwiseOperation
		and target_4.getThen().(ExprStmt).getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vdata_1284
		and target_4.getThen().(ExprStmt).getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="18446744073709551583"
		and target_4.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_7
}

predicate func_5(Variable vdata_1284, Function func, ExprStmt target_5) {
		target_5.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vdata_1284
		and target_5.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="18446744073709551487"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Function func, ExprStmt target_6) {
		target_6.getExpr() instanceof AssignAndExpr
		and target_6.getEnclosingFunction() = func
}

predicate func_7(Function func, NotExpr target_7) {
		target_7.getOperand().(ConditionalExpr).getCondition().(LogicalAndExpr).getValue()="0"
		and target_7.getOperand().(ConditionalExpr).getThen().(Literal).getValue()="1"
		and target_7.getOperand().(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("test_bit")
		and target_7.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="299"
		and target_7.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
		and target_7.getOperand().(ConditionalExpr).getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("cpuinfo_x86")
		and target_7.getEnclosingFunction() = func
}

from Function func, Variable vdata_1284, ComplementExpr target_0, BinaryBitwiseOperation target_2, BinaryBitwiseOperation target_3, IfStmt target_4, ExprStmt target_5, ExprStmt target_6, NotExpr target_7
where
func_0(func, target_0)
and not func_1(func)
and func_2(func, target_2)
and func_3(vdata_1284, target_6, target_3)
and func_4(vdata_1284, target_7, target_4)
and func_5(vdata_1284, func, target_5)
and func_6(func, target_6)
and func_7(func, target_7)
and vdata_1284.getType().hasName("u64")
and vdata_1284.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
