commit fafb51a67fb883eb2dde352539df939a251851be
Author: zhenwei pi <pizhenwei@bytedance.com>
Date:   Mon Sep 4 14:10:45 2023 +0800

    virtio-blk: fix implicit overflow on virtio_max_dma_size
    
    The following codes have an implicit conversion from size_t to u32:
    (u32)max_size = (size_t)virtio_max_dma_size(vdev);
    
    This may lead overflow, Ex (size_t)4G -> (u32)0. Once
    virtio_max_dma_size() has a larger size than U32_MAX, use U32_MAX
    instead.
    
    Signed-off-by: zhenwei pi <pizhenwei@bytedance.com>
    Message-Id: <20230904061045.510460-1-pizhenwei@bytedance.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>

diff --git a/drivers/block/virtio_blk.c b/drivers/block/virtio_blk.c
index 1fe011676d07..4a4b9bad551e 100644
--- a/drivers/block/virtio_blk.c
+++ b/drivers/block/virtio_blk.c
@@ -1313,6 +1313,7 @@ static int virtblk_probe(struct virtio_device *vdev)
 	u16 min_io_size;
 	u8 physical_block_exp, alignment_offset;
 	unsigned int queue_depth;
+	size_t max_dma_size;
 
 	if (!vdev->config->get) {
 		dev_err(&vdev->dev, "%s failure: config access disabled\n",
@@ -1411,7 +1412,8 @@ static int virtblk_probe(struct virtio_device *vdev)
 	/* No real sector limit. */
 	blk_queue_max_hw_sectors(q, UINT_MAX);
 
-	max_size = virtio_max_dma_size(vdev);
+	max_dma_size = virtio_max_dma_size(vdev);
+	max_size = max_dma_size > U32_MAX ? U32_MAX : max_dma_size;
 
 	/* Host can optionally specify maximum segment size and number of
 	 * segments. */
