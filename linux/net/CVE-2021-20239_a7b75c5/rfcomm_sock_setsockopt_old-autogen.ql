/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-rfcomm_sock_setsockopt_old
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/rfcomm-sock-setsockopt-old
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/bluetooth/rfcomm/sock.c-rfcomm_sock_setsockopt_old CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptval_647, Variable vopt_651, BlockStmt target_10, AsmStmt target_7, BitwiseAndExpr target_11) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("copy_from_sockptr")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vopt_651
	and target_0.getArgument(1).(VariableAccess).getTarget()=voptval_647
	and target_0.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_0.getParent().(IfStmt).getThen()=target_10
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getChild(3).(VariableAccess).getLocation())
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_11.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vopt_651, Variable v__val_gu_659, VariableAccess target_1) {
	target_1.getTarget()=vopt_651
	and target_1.getParent().(AssignExpr).getLValue() = target_1
	and target_1.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_659
}

predicate func_2(Parameter voptval_647, Variable vopt_651, Variable v__ret_gu_659, Variable v__val_gu_659, Variable vcurrent_stack_pointer, BlockStmt target_10, StmtExpr target_2) {
	target_2.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_2.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_2.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(0).(VariableAccess).getTarget()=v__ret_gu_659
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(1).(VariableAccess).getTarget()=v__val_gu_659
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(3).(VariableAccess).getTarget()=voptval_647
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(4).(SizeofExprOperator).getValue()="4"
	and target_2.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vopt_651
	and target_2.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_659
	and target_2.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_659
	and target_2.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_10
}

/*predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(Literal).getValue()="0"
	and target_5.getEnclosingFunction() = func
}

*/
/*predicate func_6(Function func, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_6.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_6.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_6.getEnclosingFunction() = func
}

*/
predicate func_7(Parameter voptval_647, Variable v__ret_gu_659, Variable v__val_gu_659, Variable vcurrent_stack_pointer, AsmStmt target_7) {
	target_7.getChild(0).(VariableAccess).getTarget()=v__ret_gu_659
	and target_7.getChild(1).(VariableAccess).getTarget()=v__val_gu_659
	and target_7.getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_7.getChild(3).(VariableAccess).getTarget()=voptval_647
	and target_7.getChild(4).(SizeofExprOperator).getValue()="4"
}

/*predicate func_8(Variable vopt_651, Variable v__val_gu_659, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vopt_651
	and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_659
}

*/
/*predicate func_9(Variable v__ret_gu_659, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_9.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_659
	and target_9.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

*/
predicate func_10(Function func, BlockStmt target_10) {
	target_10.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_10.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-14"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Variable vopt_651, BitwiseAndExpr target_11) {
	target_11.getLeftOperand().(VariableAccess).getTarget()=vopt_651
	and target_11.getRightOperand().(Literal).getValue()="64"
}

from Function func, Parameter voptval_647, Variable vopt_651, Variable v__ret_gu_659, Variable v__val_gu_659, Variable vcurrent_stack_pointer, VariableAccess target_1, StmtExpr target_2, AsmStmt target_7, BlockStmt target_10, BitwiseAndExpr target_11
where
not func_0(voptval_647, vopt_651, target_10, target_7, target_11)
and func_1(vopt_651, v__val_gu_659, target_1)
and func_2(voptval_647, vopt_651, v__ret_gu_659, v__val_gu_659, vcurrent_stack_pointer, target_10, target_2)
and func_7(voptval_647, v__ret_gu_659, v__val_gu_659, vcurrent_stack_pointer, target_7)
and func_10(func, target_10)
and func_11(vopt_651, target_11)
and voptval_647.getType().hasName("char *")
and vopt_651.getType().hasName("u32")
and v__ret_gu_659.getType().hasName("int")
and v__val_gu_659.getType().hasName("unsigned int")
and vcurrent_stack_pointer.getType().hasName("unsigned long")
and voptval_647.getFunction() = func
and vopt_651.(LocalVariable).getFunction() = func
and v__ret_gu_659.(LocalVariable).getFunction() = func
and v__val_gu_659.(LocalVariable).getFunction() = func
and not vcurrent_stack_pointer.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
