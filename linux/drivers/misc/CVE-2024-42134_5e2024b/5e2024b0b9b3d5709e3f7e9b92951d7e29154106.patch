commit 5e2024b0b9b3d5709e3f7e9b92951d7e29154106
Author: Li Zhang <zhanglikernel@gmail.com>
Date:   Sat Mar 16 13:25:54 2024 +0800

    virtio-pci: Check if is_avq is NULL
    
    [ Upstream commit c8fae27d141a32a1624d0d0d5419d94252824498 ]
    
    [bug]
    In the virtio_pci_common.c function vp_del_vqs, vp_dev->is_avq is involved
    to determine whether it is admin virtqueue, but this function vp_dev->is_avq
     may be empty. For installations, virtio_pci_legacy does not assign a value
     to vp_dev->is_avq.
    
    [fix]
    Check whether it is vp_dev->is_avq before use.
    
    [test]
    Test with virsh Attach device
    Before this patch, the following command would crash the guest system
    
    After applying the patch, everything seems to be working fine.
    
    Signed-off-by: Li Zhang <zhanglikernel@gmail.com>
    Message-Id: <1710566754-3532-1-git-send-email-zhanglikernel@gmail.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/drivers/virtio/virtio_pci_common.c b/drivers/virtio/virtio_pci_common.c
index 584af7816532..f6b0b00e4599 100644
--- a/drivers/virtio/virtio_pci_common.c
+++ b/drivers/virtio/virtio_pci_common.c
@@ -236,7 +236,7 @@ void vp_del_vqs(struct virtio_device *vdev)
 	int i;
 
 	list_for_each_entry_safe(vq, n, &vdev->vqs, list) {
-		if (vp_dev->is_avq(vdev, vq->index))
+		if (vp_dev->is_avq && vp_dev->is_avq(vdev, vq->index))
 			continue;
 
 		if (vp_dev->per_vq_vectors) {
