/**
 * @name linux-9ef8d83e8e25d5f1811b3a38eb1484f85f64296c-vmw_user_surface_base_release
 * @id cpp/linux/9ef8d83e8e25d5f1811b3a38eb1484f85f64296c/vmw-user-surface-base-release
 * @description linux-9ef8d83e8e25d5f1811b3a38eb1484f85f64296c-drivers/gpu/drm/vmwgfx/vmwgfx_surface.c-vmw_user_surface_base_release CVE-2023-33952
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vp_base_682, Initializer target_0) {
		target_0.getExpr().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vp_base_682
}

predicate func_1(Variable vres_687, FunctionCall target_1) {
		target_1.getTarget().hasName("vmw_resource_unreference")
		and not target_1.getTarget().hasName("atomic_dec")
		and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vres_687
}

predicate func_4(Function func) {
	exists(FunctionCall target_4 |
		target_4.getTarget().hasName("vmw_user_bo_lookup")
		and target_4.getArgument(0).(VariableAccess).getType().hasName("drm_file *")
		and target_4.getArgument(1).(VariableAccess).getType().hasName("uint32_t")
		and target_4.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("vmw_bo *")
		and target_4.getEnclosingFunction() = func)
}

predicate func_5(ExprStmt target_23, Function func) {
	exists(NotExpr target_5 |
		target_5.getOperand().(VariableAccess).getType().hasName("int")
		and target_5.getParent().(IfStmt).getThen()=target_23
		and target_5.getEnclosingFunction() = func)
}

predicate func_6(Function func) {
	exists(IfStmt target_6 |
		target_6.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getType().hasName("uint32_t")
		and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("atomic_dec")
		and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="cpu_writers"
		and target_6.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("vmw_bo *")
		and target_6.getEnclosingFunction() = func)
}

/*predicate func_7(Function func) {
	exists(AddressOfExpr target_7 |
		target_7.getOperand().(PointerFieldAccess).getTarget().getName()="cpu_writers"
		and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("vmw_bo *")
		and target_7.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_7.getEnclosingFunction() = func)
}

*/
predicate func_8(Function func) {
	exists(FunctionCall target_8 |
		target_8.getTarget().hasName("ttm_bo_put")
		and target_8.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tbo"
		and target_8.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("vmw_bo *")
		and target_8.getEnclosingFunction() = func)
}

predicate func_12(Parameter vp_base_682, VariableAccess target_12) {
		target_12.getTarget()=vp_base_682
}

predicate func_16(Variable v__mptr_686, PointerArithmeticOperation target_16) {
		target_16.getLeftOperand().(VariableAccess).getTarget()=v__mptr_686
		and target_16.getRightOperand().(BuiltInOperationBuiltInOffsetOf).getValue()="0"
}

predicate func_17(Function func, DeclStmt target_17) {
		func.getEntryPoint().(BlockStmt).getAStmt()=target_17
}

predicate func_18(Variable vbase_684, Variable vres_687, ExprStmt target_23, LogicalAndExpr target_18) {
		target_18.getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="shareable"
		and target_18.getAnOperand().(LogicalAndExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbase_684
		and target_18.getAnOperand().(LogicalAndExpr).getAnOperand().(VariableAccess).getTarget()=vres_687
		and target_18.getAnOperand().(PointerFieldAccess).getTarget().getName()="guest_memory_bo"
		and target_18.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_687
		and target_18.getParent().(IfStmt).getThen()=target_23
}

predicate func_19(Variable vres_687, LogicalAndExpr target_18, AddressOfExpr target_25, PointerFieldAccess target_19) {
		target_19.getTarget().getName()="guest_memory_bo"
		and target_19.getQualifier().(VariableAccess).getTarget()=vres_687
		and target_18.getAnOperand().(LogicalAndExpr).getAnOperand().(VariableAccess).getLocation().isBefore(target_19.getQualifier().(VariableAccess).getLocation())
		and target_19.getQualifier().(VariableAccess).getLocation().isBefore(target_25.getOperand().(VariableAccess).getLocation())
}

predicate func_20(Parameter vp_base_682, AssignExpr target_20) {
		target_20.getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget()=vp_base_682
		and target_20.getRValue().(Literal).getValue()="0"
}

predicate func_21(Function func, ExprStmt target_21) {
		target_21.getExpr() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_21
}

predicate func_22(Variable vres_687, VariableAccess target_22) {
		target_22.getTarget()=vres_687
		and target_22.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_23(Variable vres_687, ExprStmt target_23) {
		target_23.getExpr().(FunctionCall).getTarget().hasName("drm_gem_object_put")
		and target_23.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="base"
		and target_23.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="tbo"
		and target_23.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="guest_memory_bo"
		and target_23.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_687
}

predicate func_25(Variable vres_687, AddressOfExpr target_25) {
		target_25.getOperand().(VariableAccess).getTarget()=vres_687
}

from Function func, Parameter vp_base_682, Variable vbase_684, Variable v__mptr_686, Variable vres_687, Initializer target_0, FunctionCall target_1, VariableAccess target_12, PointerArithmeticOperation target_16, DeclStmt target_17, LogicalAndExpr target_18, PointerFieldAccess target_19, AssignExpr target_20, ExprStmt target_21, VariableAccess target_22, ExprStmt target_23, AddressOfExpr target_25
where
func_0(vp_base_682, target_0)
and func_1(vres_687, target_1)
and not func_4(func)
and not func_5(target_23, func)
and not func_6(func)
and not func_8(func)
and func_12(vp_base_682, target_12)
and func_16(v__mptr_686, target_16)
and func_17(func, target_17)
and func_18(vbase_684, vres_687, target_23, target_18)
and func_19(vres_687, target_18, target_25, target_19)
and func_20(vp_base_682, target_20)
and func_21(func, target_21)
and func_22(vres_687, target_22)
and func_23(vres_687, target_23)
and func_25(vres_687, target_25)
and vp_base_682.getType().hasName("ttm_base_object **")
and vbase_684.getType().hasName("ttm_base_object *")
and v__mptr_686.getType().hasName("void *")
and vres_687.getType().hasName("vmw_resource *")
and vp_base_682.getFunction() = func
and vbase_684.(LocalVariable).getFunction() = func
and v__mptr_686.(LocalVariable).getFunction() = func
and vres_687.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
