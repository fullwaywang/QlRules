/**
 * @name linux-b65235f6e102354ccafda601eaa1c5bef5284d21-svm_set_x2apic_msr_interception
 * @id cpp/linux/b65235f6e102354ccafda601eaa1c5bef5284d21/svm-set-x2apic-msr-interception
 * @description linux-b65235f6e102354ccafda601eaa1c5bef5284d21-arch/x86/kvm/svm/svm.c-svm_set_x2apic_msr_interception CVE-2023-5090
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vx2avic_enabled, NotExpr target_0) {
	target_0.getOperand().(VariableAccess).getTarget()=vx2avic_enabled
	and target_0.getParent().(LogicalOrExpr).getRightOperand() instanceof NotExpr
	and target_0.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen() instanceof ReturnStmt
}

predicate func_1(Parameter vsvm_909, LogicalOrExpr target_1) {
	target_1.getLeftOperand() instanceof NotExpr
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("apic_x2apic_mode")
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="apic"
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="arch"
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="vcpu"
	and target_1.getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsvm_909
	and target_1.getParent().(IfStmt).getThen() instanceof ReturnStmt
}

from Function func, Variable vx2avic_enabled, Parameter vsvm_909, NotExpr target_0, LogicalOrExpr target_1
where
func_0(vx2avic_enabled, target_0)
and func_1(vsvm_909, target_1)
and vx2avic_enabled.getType().hasName("bool")
and vsvm_909.getType().hasName("vcpu_svm *")
and not vx2avic_enabled.getParentScope+() = func
and vsvm_909.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
