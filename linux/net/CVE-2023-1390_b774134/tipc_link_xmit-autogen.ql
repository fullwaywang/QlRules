/**
 * @name linux-b77413446408fdd256599daf00d5be72b5f3e7c6-tipc_link_xmit
 * @id cpp/linux/b77413446408fdd256599daf00d5be72b5f3e7c6/tipc-link-xmit
 * @description linux-b77413446408fdd256599daf00d5be72b5f3e7c6-tipc_link_xmit CVE-2023-1390
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpkt_cnt_1040, RelationalOperation target_8, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vpkt_cnt_1040
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_0.getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_8.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vhdr_1033, FunctionCall target_4, NotExpr target_9, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vhdr_1033
		and target_1.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_4.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_9.getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vimp_1041, ArrayExpr target_11, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vimp_1041
		and target_2.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_11.getArrayOffset().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vlist_1030, FunctionCall target_3) {
		target_3.getTarget().hasName("buf_msg")
		and target_3.getArgument(0).(FunctionCall).getTarget().hasName("skb_peek")
		and target_3.getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vlist_1030
}

predicate func_4(Variable vhdr_1033, FunctionCall target_4) {
		target_4.getTarget().hasName("msg_importance")
		and target_4.getArgument(0).(VariableAccess).getTarget()=vhdr_1033
}

predicate func_5(Function func, Initializer target_5) {
		target_5.getExpr() instanceof FunctionCall
		and target_5.getExpr().getEnclosingFunction() = func
}

predicate func_6(Function func, Initializer target_6) {
		target_6.getExpr() instanceof FunctionCall
		and target_6.getExpr().getEnclosingFunction() = func
}

predicate func_8(Variable vpkt_cnt_1040, RelationalOperation target_8) {
		 (target_8 instanceof GTExpr or target_8 instanceof LTExpr)
		and target_8.getGreaterOperand().(VariableAccess).getTarget()=vpkt_cnt_1040
		and target_8.getLesserOperand().(Literal).getValue()="1"
}

predicate func_9(Variable vhdr_1033, NotExpr target_9) {
		target_9.getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getTarget().hasName("msg_size")
		and target_9.getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vhdr_1033
		and target_9.getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_11(Variable vimp_1041, ArrayExpr target_11) {
		target_11.getArrayBase().(PointerFieldAccess).getTarget().getName()="backlog"
		and target_11.getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("tipc_link *")
		and target_11.getArrayOffset().(VariableAccess).getTarget()=vimp_1041
		and target_11.getParent().(ValueFieldAccess).getParent().(GEExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_11.getParent().(ValueFieldAccess).getParent().(GEExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Parameter vlist_1030, Variable vhdr_1033, Variable vpkt_cnt_1040, Variable vimp_1041, FunctionCall target_3, FunctionCall target_4, Initializer target_5, Initializer target_6, RelationalOperation target_8, NotExpr target_9, ArrayExpr target_11
where
not func_0(vpkt_cnt_1040, target_8, func)
and not func_1(vhdr_1033, target_4, target_9, func)
and not func_2(vimp_1041, target_11, func)
and func_3(vlist_1030, target_3)
and func_4(vhdr_1033, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
and func_8(vpkt_cnt_1040, target_8)
and func_9(vhdr_1033, target_9)
and func_11(vimp_1041, target_11)
and vlist_1030.getType().hasName("sk_buff_head *")
and vhdr_1033.getType().hasName("tipc_msg *")
and vpkt_cnt_1040.getType().hasName("int")
and vimp_1041.getType().hasName("int")
and vlist_1030.getFunction() = func
and vhdr_1033.(LocalVariable).getFunction() = func
and vpkt_cnt_1040.(LocalVariable).getFunction() = func
and vimp_1041.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
