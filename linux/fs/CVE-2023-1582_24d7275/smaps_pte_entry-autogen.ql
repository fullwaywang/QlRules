/**
 * @name linux-24d7275ce2791829953ed4e72f68277ceb2571c6-smaps_pte_entry
 * @id cpp/linux/24d7275ce2791829953ed4e72f68277ceb2571c6/smaps-pte-entry
 * @description linux-24d7275ce2791829953ed4e72f68277ceb2571c6-smaps_pte_entry CVE-2023-1582
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vswpent_524, FunctionCall target_3, ExprStmt target_2) {
	exists(IfStmt target_0 |
		target_0.getCondition().(FunctionCall).getTarget().hasName("is_migration_entry")
		and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vswpent_524
		and target_0.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("bool")
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vpage_519, Variable vswpent_524, NotExpr target_4, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpage_519
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pfn_swap_entry_to_page")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vswpent_524
		and target_2.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Variable vswpent_524, FunctionCall target_3) {
		target_3.getTarget().hasName("is_pfn_swap_entry")
		and target_3.getArgument(0).(VariableAccess).getTarget()=vswpent_524
}

predicate func_4(Variable vswpent_524, NotExpr target_4) {
		target_4.getOperand().(FunctionCall).getTarget().hasName("non_swap_entry")
		and target_4.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vswpent_524
}

from Function func, Variable vpage_519, Variable vswpent_524, ExprStmt target_2, FunctionCall target_3, NotExpr target_4
where
not func_0(vswpent_524, target_3, target_2)
and func_2(vpage_519, vswpent_524, target_4, target_2)
and func_3(vswpent_524, target_3)
and func_4(vswpent_524, target_4)
and vpage_519.getType().hasName("page *")
and vswpent_524.getType().hasName("swp_entry_t")
and vpage_519.(LocalVariable).getFunction() = func
and vswpent_524.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
