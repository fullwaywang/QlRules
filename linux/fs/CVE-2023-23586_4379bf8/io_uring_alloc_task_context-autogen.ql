/**
 * @name linux-4379bf8bd70b5de6bba7d53015b0c36c57a634ee-io_uring_alloc_task_context
 * @id cpp/linux/4379bf8bd70b5de6bba7d53015b0c36c57a634ee/io-uring-alloc-task-context
 * @description linux-4379bf8bd70b5de6bba7d53015b0c36c57a634ee-fs/io_uring.c-io_uring_alloc_task_context CVE-2023-23586
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
	target_0.getValue()="496"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vtctx_7913, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("io_init_identity")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="__identity"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtctx_7913
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Variable vtctx_7913, Function func, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="identity"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtctx_7913
	and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="__identity"
	and target_2.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtctx_7913
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

from Function func, Variable vtctx_7913, SizeofExprOperator target_0, ExprStmt target_1, ExprStmt target_2
where
func_0(func, target_0)
and func_1(vtctx_7913, func, target_1)
and func_2(vtctx_7913, func, target_2)
and vtctx_7913.getType().hasName("io_uring_task *")
and vtctx_7913.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
