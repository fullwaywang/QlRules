/**
 * @name linux-a880b28a71e3-binder_thread_release
 * @id cpp/linux/a880b28a71e3/binder-thread-release
 * @description linux-a880b28a71e3-binder_thread_release CVE-2021-39698
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vthread_4361, FunctionCall target_0) {
		target_0.getTarget().hasName("__wake_up")
		and not target_0.getTarget().hasName("wake_up_pollfree")
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="wait"
		and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vthread_4361
		and target_0.getArgument(1).(BitwiseOrExpr).getValue()="3"
		and target_0.getArgument(2).(Literal).getValue()="1"
		and target_0.getArgument(3).(BitwiseOrExpr).getValue()="16400"
}

predicate func_1(Parameter vthread_4361, BlockStmt target_9, BitwiseAndExpr target_1) {
		target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="looper"
		and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vthread_4361
		and target_1.getParent().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
		and target_1.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_9
}

predicate func_2(Parameter vthread_4361, AddressOfExpr target_2) {
		target_2.getOperand().(PointerFieldAccess).getTarget().getName()="wait"
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vthread_4361
		and target_2.getParent().(FunctionCall).getParent().(LogicalAndExpr).getAnOperand() instanceof FunctionCall
}

predicate func_3(BlockStmt target_9, Function func, LogicalAndExpr target_3) {
		target_3.getAnOperand() instanceof BitwiseAndExpr
		and target_3.getAnOperand().(FunctionCall).getTarget().hasName("waitqueue_active")
		and target_3.getAnOperand().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_3.getParent().(IfStmt).getThen()=target_9
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Parameter vthread_4361, AddressOfExpr target_2, ExprStmt target_10, PointerFieldAccess target_4) {
		target_4.getTarget().getName()="wait"
		and target_4.getQualifier().(VariableAccess).getTarget()=vthread_4361
		and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(VariableAccess).getLocation())
		and target_4.getQualifier().(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_9(Function func, BlockStmt target_9) {
		target_9.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Parameter vthread_4361, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("_binder_inner_proc_unlock")
		and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="proc"
		and target_10.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vthread_4361
		and target_10.getExpr().(FunctionCall).getArgument(1) instanceof Literal
}

from Function func, Parameter vthread_4361, FunctionCall target_0, BitwiseAndExpr target_1, AddressOfExpr target_2, LogicalAndExpr target_3, PointerFieldAccess target_4, BlockStmt target_9, ExprStmt target_10
where
func_0(vthread_4361, target_0)
and func_1(vthread_4361, target_9, target_1)
and func_2(vthread_4361, target_2)
and func_3(target_9, func, target_3)
and func_4(vthread_4361, target_2, target_10, target_4)
and func_9(func, target_9)
and func_10(vthread_4361, target_10)
and vthread_4361.getType().hasName("binder_thread *")
and vthread_4361.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
