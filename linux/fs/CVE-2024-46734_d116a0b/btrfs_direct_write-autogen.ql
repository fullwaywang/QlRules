/**
 * @name linux-d116a0b0e02f395cedfb8c725bd67480aa7c428c-btrfs_direct_write
 * @id cpp/linux/d116a0b0e02f395cedfb8c725bd67480aa7c428c/btrfs-direct-write
 * @description linux-d116a0b0e02f395cedfb8c725bd67480aa7c428c-fs/btrfs/file.c-btrfs_direct_write CVE-2024-46734
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfile_1915, PointerFieldAccess target_0) {
	target_0.getTarget().getName()="private_data"
	and target_0.getQualifier().(VariableAccess).getTarget()=vfile_1915
}

predicate func_1(Variable vfile_1915, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="private_data"
	and target_1.getQualifier().(VariableAccess).getTarget()=vfile_1915
}

predicate func_2(Variable vfile_1915, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="private_data"
	and target_2.getQualifier().(VariableAccess).getTarget()=vfile_1915
}

predicate func_3(Function func) {
exists(ConditionalExpr target_3 |
	exists(FunctionCall obj_0 | obj_0=target_3.getCondition() |
		exists(NotExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(NotExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(EqualityOperation obj_3 | obj_3=obj_2.getOperand() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getLeftOperand() |
						obj_4.getTarget().getName()="journal_info"
						and obj_4.getQualifier().(FunctionCall).getTarget().hasName("get_current")
					)
					and obj_3.getRightOperand() instanceof Literal
				)
			)
		)
		and obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(1) instanceof Literal
	)
	and exists(FunctionCall obj_5 | obj_5=target_3.getElse() |
		obj_5.getTarget().hasName("assertfail")
		and obj_5.getArgument(0).(StringLiteral).getValue()="current->journal_info == NULL"
		and obj_5.getArgument(1) instanceof StringLiteral
		and obj_5.getArgument(2) instanceof Literal
	)
	and target_3.getThen() instanceof Literal
	and target_3.getEnclosingFunction() = func
)
}

/*predicate func_4(Variable vhave_private_1997, ExprStmt target_22) {
exists(EqualityOperation target_4 |
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getLeftOperand() |
		obj_0.getTarget().getName()="journal_info"
		and obj_0.getQualifier().(FunctionCall).getTarget().hasName("get_current")
	)
	and exists(NotExpr obj_1 | obj_1=target_4.getParent() |
		obj_1.getOperand().(VariableAccess).getTarget()=vhave_private_1997
		and obj_1.getParent().(IfStmt).getThen()=target_22
	)
	and target_4.getRightOperand() instanceof Literal
)
}

*/
/*predicate func_5(Function func) {
exists(FunctionCall target_5 |
	target_5.getTarget().hasName("get_current")
	and target_5.getEnclosingFunction() = func
)
}

*/
predicate func_6(Function func) {
exists(FunctionCall target_6 |
	target_6.getTarget().hasName("get_current")
	and target_6.getEnclosingFunction() = func
)
}

predicate func_8(Function func) {
exists(FunctionCall target_8 |
	target_8.getTarget().hasName("get_current")
	and target_8.getEnclosingFunction() = func
)
}

predicate func_11(FunctionCall target_23, Function func, DeclStmt target_11) {
	target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
	and target_11.getEnclosingFunction() = func
}

predicate func_12(FunctionCall target_23, Function func, DeclStmt target_12) {
	target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
	and target_12.getEnclosingFunction() = func
}

predicate func_13(FunctionCall target_23, Function func, DeclStmt target_13) {
	target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
	and target_13.getEnclosingFunction() = func
}

predicate func_14(Variable vfile_1915, Variable vstack_private_1995, Variable vhave_private_1997, FunctionCall target_23, IfStmt target_14) {
	exists(ExprStmt obj_0 | obj_0=target_14.getThen() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="private_data"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfile_1915
			)
			and obj_1.getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vstack_private_1995
		)
	)
	and target_14.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vhave_private_1997
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
}

/*predicate func_15(Variable vhave_private_1997, ExprStmt target_24, DeclStmt target_13, NotExpr target_25, VariableAccess target_15) {
	target_15.getTarget()=vhave_private_1997
	and target_15.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_24
	and target_15.getLocation().isBefore(target_25.getOperand().(VariableAccess).getLocation())
}

*/
/*predicate func_16(Variable vfile_1915, Variable vstack_private_1995, AddressOfExpr target_16) {
	exists(AssignExpr obj_0 | obj_0=target_16.getParent() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="private_data"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vfile_1915
		)
		and obj_0.getRValue() = target_16
	)
	and target_16.getOperand().(VariableAccess).getTarget()=vstack_private_1995
}

*/
predicate func_17(Variable vfile_1915, Variable vprivate_1996, AssignExpr target_17) {
	exists(PointerFieldAccess obj_0 | obj_0=target_17.getRValue() |
		obj_0.getTarget().getName()="private_data"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vfile_1915
	)
	and target_17.getLValue().(VariableAccess).getTarget()=vprivate_1996
}

predicate func_18(Variable vprivate_1996, AssignExpr target_18) {
	exists(PointerFieldAccess obj_0 | obj_0=target_18.getLValue() |
		obj_0.getTarget().getName()="fsync_skip_inode_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vprivate_1996
	)
}

predicate func_19(Variable vprivate_1996, AssignExpr target_19) {
	exists(PointerFieldAccess obj_0 | obj_0=target_19.getLValue() |
		obj_0.getTarget().getName()="fsync_skip_inode_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vprivate_1996
	)
}

predicate func_20(Variable vfile_1915, Variable vhave_private_1997, FunctionCall target_23, IfStmt target_20) {
	exists(ExprStmt obj_0 | obj_0=target_20.getThen() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getExpr() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
				obj_2.getTarget().getName()="private_data"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfile_1915
			)
			and obj_1.getRValue().(Literal).getValue()="0"
		)
	)
	and target_20.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vhave_private_1997
	and target_20.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_23
}

/*predicate func_21(Variable vhave_private_1997, ExprStmt target_22, NotExpr target_26, VariableAccess target_21) {
	target_21.getTarget()=vhave_private_1997
	and target_21.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_22
	and target_26.getOperand().(VariableAccess).getLocation().isBefore(target_21.getLocation())
}

*/
predicate func_22(Variable vfile_1915, ExprStmt target_22) {
	exists(AssignExpr obj_0 | obj_0=target_22.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="private_data"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vfile_1915
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
}

predicate func_23(Function func, FunctionCall target_23) {
	target_23.getTarget().hasName("IS_ERR_OR_NULL")
	and target_23.getArgument(0).(VariableAccess).getTarget().getType().hasName("iomap_dio *")
	and target_23.getEnclosingFunction() = func
}

predicate func_24(Variable vfile_1915, ExprStmt target_24) {
	exists(AssignExpr obj_0 | obj_0=target_24.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="private_data"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vfile_1915
		)
		and obj_0.getRValue() instanceof AddressOfExpr
	)
}

predicate func_25(Variable vhave_private_1997, NotExpr target_25) {
	target_25.getOperand().(VariableAccess).getTarget()=vhave_private_1997
}

predicate func_26(Variable vhave_private_1997, NotExpr target_26) {
	target_26.getOperand().(VariableAccess).getTarget()=vhave_private_1997
}

from Function func, Variable vfile_1915, Variable vstack_private_1995, Variable vprivate_1996, Variable vhave_private_1997, PointerFieldAccess target_0, PointerFieldAccess target_1, PointerFieldAccess target_2, DeclStmt target_11, DeclStmt target_12, DeclStmt target_13, IfStmt target_14, AssignExpr target_17, AssignExpr target_18, AssignExpr target_19, IfStmt target_20, ExprStmt target_22, FunctionCall target_23, ExprStmt target_24, NotExpr target_25, NotExpr target_26
where
func_0(vfile_1915, target_0)
and func_1(vfile_1915, target_1)
and func_2(vfile_1915, target_2)
and not func_3(func)
and not func_6(func)
and not func_8(func)
and func_11(target_23, func, target_11)
and func_12(target_23, func, target_12)
and func_13(target_23, func, target_13)
and func_14(vfile_1915, vstack_private_1995, vhave_private_1997, target_23, target_14)
and func_17(vfile_1915, vprivate_1996, target_17)
and func_18(vprivate_1996, target_18)
and func_19(vprivate_1996, target_19)
and func_20(vfile_1915, vhave_private_1997, target_23, target_20)
and func_22(vfile_1915, target_22)
and func_23(func, target_23)
and func_24(vfile_1915, target_24)
and func_25(vhave_private_1997, target_25)
and func_26(vhave_private_1997, target_26)
and vfile_1915.getType().hasName("file *")
and vstack_private_1995.getType().hasName("btrfs_file_private")
and vprivate_1996.getType().hasName("btrfs_file_private *")
and vhave_private_1997.getType().hasName("const bool")
and vfile_1915.(LocalVariable).getFunction() = func
and vstack_private_1995.(LocalVariable).getFunction() = func
and vprivate_1996.(LocalVariable).getFunction() = func
and vhave_private_1997.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
