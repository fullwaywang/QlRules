/**
 * @name linux-520778042ccca019f3ffa136dd0ca565c486cedd-nft_expr_init
 * @id cpp/linux/520778042ccca019f3ffa136dd0ca565c486cedd/nft-expr-init
 * @description linux-520778042ccca019f3ffa136dd0ca565c486cedd-net/netfilter/nf_tables_api.c-nft_expr_init CVE-2022-32250
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_2872, ExprStmt target_2, RelationalOperation target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_2872
	and target_0.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-95"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_1(Variable vexpr_info_2869, ExprStmt target_2, AddressOfExpr target_4, PointerFieldAccess target_5, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="type"
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="ops"
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpr_info_2869
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="1"
	and target_1.getThen().(GotoStmt).getName() ="err_expr_stateful"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable verr_2872, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_2872
	and target_2.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
}

predicate func_3(Variable verr_2872, RelationalOperation target_3) {
	 (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(VariableAccess).getTarget()=verr_2872
	and target_3.getGreaterOperand().(Literal).getValue()="0"
	and target_3.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_4(Variable vexpr_info_2869, AddressOfExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vexpr_info_2869
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nf_tables_expr_parse")
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("const nft_ctx *")
	and target_4.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("const nlattr *")
}

predicate func_5(Variable vexpr_info_2869, PointerFieldAccess target_5) {
	target_5.getTarget().getName()="size"
	and target_5.getQualifier().(ValueFieldAccess).getTarget().getName()="ops"
	and target_5.getQualifier().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vexpr_info_2869
}

from Function func, Variable vexpr_info_2869, Variable verr_2872, ExprStmt target_2, RelationalOperation target_3, AddressOfExpr target_4, PointerFieldAccess target_5
where
not func_0(verr_2872, target_2, target_3, func)
and not func_1(vexpr_info_2869, target_2, target_4, target_5, func)
and func_2(verr_2872, target_2)
and func_3(verr_2872, target_3)
and func_4(vexpr_info_2869, target_4)
and func_5(vexpr_info_2869, target_5)
and vexpr_info_2869.getType().hasName("nft_expr_info")
and verr_2872.getType().hasName("int")
and vexpr_info_2869.(LocalVariable).getFunction() = func
and verr_2872.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
