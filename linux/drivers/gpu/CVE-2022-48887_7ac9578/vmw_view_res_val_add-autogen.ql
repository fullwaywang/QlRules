/**
 * @name linux-7ac9578e45b20e3f3c0c8eb71f5417a499a7226a-vmw_view_res_val_add
 * @id cpp/linux/7ac9578e45b20e3f3c0c8eb71f5417a499a7226a/vmw-view-res-val-add
 * @description linux-7ac9578e45b20e3f3c0c8eb71f5417a499a7226a-drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c-vmw_view_res_val_add CVE-2022-48887
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vview_393, Parameter vsw_context_392, FunctionCall target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getArgument(1) |
		obj_0.getTarget().hasName("vmw_view_srf")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vview_393
	)
	and exists(FunctionCall obj_1 | obj_1=target_0.getArgument(2) |
		obj_1.getTarget().hasName("vmw_view_dirtying")
		and obj_1.getArgument(0).(VariableAccess).getTarget()=vview_393
	)
	and exists(AssignExpr obj_2 | obj_2=target_0.getParent() |
		obj_2.getRValue() = target_0
		and obj_2.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_0.getTarget().hasName("vmw_execbuf_res_noctx_val_add")
	and not target_0.getTarget().hasName("vmw_execbuf_res_val_add")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsw_context_392
}

predicate func_1(Parameter vview_393, Parameter vsw_context_392, FunctionCall target_1) {
	target_1.getTarget().hasName("vmw_execbuf_res_noctx_val_add")
	and not target_1.getTarget().hasName("vmw_execbuf_res_val_add")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vsw_context_392
	and target_1.getArgument(1).(VariableAccess).getTarget()=vview_393
	and target_1.getArgument(2).(Literal).getValue()="0"
}

from Function func, Parameter vview_393, Parameter vsw_context_392, FunctionCall target_0, FunctionCall target_1
where
func_0(vview_393, vsw_context_392, target_0)
and func_1(vview_393, vsw_context_392, target_1)
and vview_393.getType().hasName("vmw_resource *")
and vsw_context_392.getType().hasName("vmw_sw_context *")
and vview_393.getFunction() = func
and vsw_context_392.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
