/**
 * @name linux-c9b92530a723ac5ef8e352885a1862b18f31b2f5-ext4_orphan_add
 * @id cpp/linux/c9b92530a723ac5ef8e352885a1862b18f31b2f5/ext4-orphan-add
 * @description linux-c9b92530a723ac5ef8e352885a1862b18f31b2f5-fs/ext4/namei.c-ext4_orphan_add CVE-2015-7509
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsb_2368, AddressOfExpr target_3) {
exists(PointerFieldAccess target_0 |
	target_0.getTarget().getName()="s_journal"
	and target_0.getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
	and target_0.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2368
	and target_0.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vhandle_2366, ReturnStmt target_4, FunctionCall target_1) {
	target_1.getTarget().hasName("ext4_handle_valid")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vhandle_2366
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Variable vsb_2368, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="s_orphan_lock"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("EXT4_SB")
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2368
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_4(Function func, ReturnStmt target_4) {
	target_4.getExpr().(Literal).getValue()="0"
	and target_4.getEnclosingFunction() = func
}

from Function func, Variable vsb_2368, Parameter vhandle_2366, FunctionCall target_1, AddressOfExpr target_3, ReturnStmt target_4
where
not func_0(vsb_2368, target_3)
and func_1(vhandle_2366, target_4, target_1)
and func_3(vsb_2368, target_3)
and func_4(func, target_4)
and vsb_2368.getType().hasName("super_block *")
and vhandle_2366.getType().hasName("handle_t *")
and vsb_2368.(LocalVariable).getFunction() = func
and vhandle_2366.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
