/**
 * @name linux-2770b795294ed312375c11ef1d0b810499c66b83-bcm_sf2_mdio_register
 * @id cpp/linux/2770b795294ed312375c11ef1d0b810499c66b83/bcm-sf2-mdio-register
 * @description linux-2770b795294ed312375c11ef1d0b810499c66b83-drivers/net/dsa/bcm_sf2.c-bcm_sf2_mdio_register CVE-2022-48815
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpriv_489, Parameter vds_487, FunctionCall target_0) {
	exists(PointerFieldAccess obj_0 | obj_0=target_0.getArgument(0) |
		obj_0.getTarget().getName()="dev"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vds_487
	)
	and exists(AssignExpr obj_1 | obj_1=target_0.getParent() |
		exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLValue() |
			obj_2.getTarget().getName()="slave_mii_bus"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vpriv_489
		)
		and obj_1.getRValue() = target_0
	)
	and target_0.getTarget().hasName("devm_mdiobus_alloc")
	and not target_0.getTarget().hasName("mdiobus_alloc")
}

predicate func_1(Variable vpriv_489, LogicalAndExpr target_4, ExprStmt target_5) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="slave_mii_bus"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpriv_489
		)
		and obj_0.getTarget().hasName("mdiobus_free")
	)
	and exists(BlockStmt obj_2 | obj_2=target_1.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(0)=target_1
			and obj_3.getCondition()=target_4
		)
	)
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vdn_490, LogicalAndExpr target_4, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("of_node_put")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdn_490
	)
	and target_2.getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Parameter vds_487, FunctionCall target_6, ExprStmt target_7, VariableAccess target_3) {
	target_3.getTarget()=vds_487
	and target_3.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_6.getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getLocation())
	and target_3.getLocation().isBefore(target_7.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_4(Variable vdn_490, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_4.getRightOperand().(VariableAccess).getTarget()=vdn_490
}

predicate func_5(Variable vpriv_489, ExprStmt target_5) {
	exists(AssignExpr obj_0 | obj_0=target_5.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().getName()="slave_mii_bus"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpriv_489
			)
			and obj_1.getTarget().hasName("__mdiobus_register")
			and obj_1.getArgument(1).(Literal).getValue()="0"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_6(Parameter vds_487, FunctionCall target_6) {
	target_6.getTarget().hasName("bcm_sf2_to_priv")
	and target_6.getArgument(0).(VariableAccess).getTarget()=vds_487
}

predicate func_7(Variable vpriv_489, Parameter vds_487, ExprStmt target_7) {
	exists(AssignExpr obj_0 | obj_0=target_7.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="phys_mii_mask"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vds_487
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().getName()="indir_phy_mask"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vpriv_489
		)
	)
}

from Function func, Variable vpriv_489, Variable vdn_490, Parameter vds_487, FunctionCall target_0, ExprStmt target_2, VariableAccess target_3, LogicalAndExpr target_4, ExprStmt target_5, FunctionCall target_6, ExprStmt target_7
where
func_0(vpriv_489, vds_487, target_0)
and not func_1(vpriv_489, target_4, target_5)
and func_2(vdn_490, target_4, target_2)
and func_3(vds_487, target_6, target_7, target_3)
and func_4(vdn_490, target_4)
and func_5(vpriv_489, target_5)
and func_6(vds_487, target_6)
and func_7(vpriv_489, vds_487, target_7)
and vpriv_489.getType().hasName("bcm_sf2_priv *")
and vdn_490.getType().hasName("device_node *")
and vds_487.getType().hasName("dsa_switch *")
and vpriv_489.(LocalVariable).getFunction() = func
and vdn_490.(LocalVariable).getFunction() = func
and vds_487.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
