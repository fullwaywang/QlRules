/**
 * @name linux-a5594c1e03b0df3908b1e1202a1ba34422eed0f6-ieee80211_start_tx_ba_session
 * @id cpp/linux/a5594c1e03b0df3908b1e1202a1ba34422eed0f6/ieee80211-start-tx-ba-session
 * @description linux-a5594c1e03b0df3908b1e1202a1ba34422eed0f6-net/mac80211/agg-tx.c-ieee80211_start_tx_ba_session CVE-2024-43911
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpubsta_603, ReturnStmt target_5, ExprStmt target_6) {
exists(LogicalAndExpr target_0 |
	exists(LogicalAndExpr obj_0 | obj_0=target_0.getLeftOperand() |
		exists(NotExpr obj_1 | obj_1=obj_0.getRightOperand() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					exists(PointerFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="deflink"
						and obj_4.getQualifier().(VariableAccess).getTarget()=vpubsta_603
					)
					and obj_3.getTarget().getName()="vht_cap"
				)
				and obj_2.getTarget().getName()="vht_supported"
			)
		)
		and obj_0.getLeftOperand() instanceof NotExpr
	)
	and exists(NotExpr obj_5 | obj_5=target_0.getRightOperand() |
		exists(ValueFieldAccess obj_6 | obj_6=obj_5.getOperand() |
			exists(ValueFieldAccess obj_7 | obj_7=obj_6.getQualifier() |
				exists(PointerFieldAccess obj_8 | obj_8=obj_7.getQualifier() |
					obj_8.getTarget().getName()="deflink"
					and obj_8.getQualifier().(VariableAccess).getTarget()=vpubsta_603
				)
				and obj_7.getTarget().getName()="he_cap"
			)
			and obj_6.getTarget().getName()="has_he"
		)
	)
	and exists(LogicalAndExpr obj_9 | obj_9=target_0.getParent() |
		obj_9.getLeftOperand() instanceof NotExpr
		and obj_9.getRightOperand() instanceof EqualityOperation
		and obj_9.getParent().(IfStmt).getThen()=target_5
	)
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vpubsta_603, ReturnStmt target_5) {
exists(NotExpr target_1 |
	exists(ValueFieldAccess obj_0 | obj_0=target_1.getOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="deflink"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpubsta_603
			)
			and obj_1.getTarget().getName()="eht_cap"
		)
		and obj_0.getTarget().getName()="has_eht"
	)
	and exists(LogicalAndExpr obj_3 | obj_3=target_1.getParent() |
		obj_3.getLeftOperand() instanceof NotExpr
		and obj_3.getRightOperand() instanceof EqualityOperation
		and obj_3.getParent().(IfStmt).getThen()=target_5
	)
)
}

predicate func_2(Variable vsta_606, PointerFieldAccess target_2) {
	target_2.getTarget().getName()="sdata"
	and target_2.getQualifier().(VariableAccess).getTarget()=vsta_606
}

predicate func_3(Parameter vpubsta_603, ReturnStmt target_5, NotExpr target_3) {
	exists(ValueFieldAccess obj_0 | obj_0=target_3.getOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="deflink"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpubsta_603
			)
			and obj_1.getTarget().getName()="ht_cap"
		)
		and obj_0.getTarget().getName()="ht_supported"
	)
	and exists(LogicalAndExpr obj_3 | obj_3=target_3.getParent() |
		obj_3.getRightOperand() instanceof EqualityOperation
		and obj_3.getParent().(IfStmt).getThen()=target_5
	)
}

predicate func_4(ReturnStmt target_5, Function func, EqualityOperation target_4) {
	exists(PointerFieldAccess obj_0 | obj_0=target_4.getLeftOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(ValueFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				exists(ValueFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					exists(ValueFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().getName()="bss_conf"
						and obj_4.getQualifier().(PointerFieldAccess).getTarget().getName()="vif"
					)
					and obj_3.getTarget().getName()="chanreq"
				)
				and obj_2.getTarget().getName()="oper"
			)
			and obj_1.getTarget().getName()="chan"
		)
		and obj_0.getTarget().getName()="band"
	)
	and exists(LogicalAndExpr obj_5 | obj_5=target_4.getParent() |
		obj_5.getLeftOperand() instanceof NotExpr
		and obj_5.getParent().(IfStmt).getThen()=target_5
	)
	and target_4.getEnclosingFunction() = func
}

predicate func_5(LogicalAndExpr target_8, Function func, ReturnStmt target_5) {
	target_5.getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_5.getParent().(IfStmt).getCondition()=target_8
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Parameter vpubsta_603, ExprStmt target_6) {
	exists(FunctionCall obj_0 | obj_0=target_6.getExpr() |
		obj_0.getTarget().hasName("trace_api_start_tx_ba_session")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpubsta_603
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("u16")
	)
}

predicate func_8(Function func, LogicalAndExpr target_8) {
	target_8.getLeftOperand() instanceof NotExpr
	and target_8.getRightOperand() instanceof EqualityOperation
	and target_8.getEnclosingFunction() = func
}

from Function func, Parameter vpubsta_603, Variable vsta_606, PointerFieldAccess target_2, NotExpr target_3, EqualityOperation target_4, ReturnStmt target_5, ExprStmt target_6, LogicalAndExpr target_8
where
not func_0(vpubsta_603, target_5, target_6)
and not func_1(vpubsta_603, target_5)
and func_2(vsta_606, target_2)
and func_3(vpubsta_603, target_5, target_3)
and func_4(target_5, func, target_4)
and func_5(target_8, func, target_5)
and func_6(vpubsta_603, target_6)
and func_8(func, target_8)
and vpubsta_603.getType().hasName("ieee80211_sta *")
and vsta_606.getType().hasName("sta_info *")
and vpubsta_603.getFunction() = func
and vsta_606.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
