/**
 * @name openssl-9febee02720902c195fe929ecfe06362c551422c-EVP_DecodeUpdate
 * @id cpp/openssl/9febee02720902c195fe929ecfe06362c551422c/evp-decodeupdate
 * @description openssl-9febee02720902c195fe929ecfe06362c551422c-crypto/evp/encode.c-EVP_DecodeUpdate CVE-2015-0292
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable veof_238, Variable vrv_238, Variable vv_238, RelationalOperation target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, RelationalOperation target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=veof_238
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vv_238
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrv_238
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignAddExpr).getRValue().(SubExpr).getRightOperand().(VariableAccess).getLocation())
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation())
		and target_5.getLesserOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, RelationalOperation target_1) {
		 (target_1 instanceof GTExpr or target_1 instanceof LTExpr)
		and target_1.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_1.getLesserOperand().(Literal).getValue()="0"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable veof_238, EqualityOperation target_6, ExprStmt target_2) {
		target_2.getExpr().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget()=veof_238
		and target_2.getParent().(IfStmt).getCondition()=target_6
}

predicate func_3(Variable veof_238, Variable vv_238, ExprStmt target_3) {
		target_3.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getExpr().(AssignAddExpr).getRValue().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vv_238
		and target_3.getExpr().(AssignAddExpr).getRValue().(SubExpr).getRightOperand().(VariableAccess).getTarget()=veof_238
}

predicate func_4(Variable vrv_238, RelationalOperation target_5, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrv_238
		and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_5(Variable vv_238, RelationalOperation target_5) {
		 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
		and target_5.getLesserOperand().(VariableAccess).getTarget()=vv_238
		and target_5.getGreaterOperand().(Literal).getValue()="0"
}

predicate func_6(Function func, EqualityOperation target_6) {
		target_6.getAnOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("unsigned char *")
		and target_6.getAnOperand().(ArrayExpr).getArrayOffset().(SubExpr).getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getAnOperand().(ArrayExpr).getArrayOffset().(SubExpr).getRightOperand().(Literal).getValue()="2"
		and target_6.getAnOperand().(CharLiteral).getValue()="61"
		and target_6.getEnclosingFunction() = func
}

from Function func, Variable veof_238, Variable vrv_238, Variable vv_238, RelationalOperation target_1, ExprStmt target_2, ExprStmt target_3, ExprStmt target_4, RelationalOperation target_5, EqualityOperation target_6
where
not func_0(veof_238, vrv_238, vv_238, target_1, target_2, target_3, target_4, target_5)
and func_1(func, target_1)
and func_2(veof_238, target_6, target_2)
and func_3(veof_238, vv_238, target_3)
and func_4(vrv_238, target_5, target_4)
and func_5(vv_238, target_5)
and func_6(func, target_6)
and veof_238.getType().hasName("int")
and vrv_238.getType().hasName("int")
and vv_238.getType().hasName("int")
and veof_238.(LocalVariable).getFunction() = func
and vrv_238.(LocalVariable).getFunction() = func
and vv_238.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
