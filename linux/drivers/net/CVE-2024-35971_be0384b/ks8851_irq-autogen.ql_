/**
 * @name linux-be0384bf599cf1eb8d337517feeb732d71f75a6f-ks8851_irq
 * @id cpp/linux/be0384bf599cf1eb8d337517feeb732d71f75a6f/ks8851-irq
 * @description linux-be0384bf599cf1eb8d337517feeb732d71f75a6f-drivers/net/ethernet/micrel/ks8851_common.c-ks8851_irq CVE-2024-35971
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("local_bh_disable")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("local_bh_enable")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("ks8851_lock")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ks8851_net *")
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("unsigned long")
	and target_2.getEnclosingFunction() = func
}

from Function func, ExprStmt target_2
where
not func_0(target_2, func)
and not func_1(func)
and func_2(func, target_2)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
