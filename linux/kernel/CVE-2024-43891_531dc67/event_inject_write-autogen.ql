/**
 * @name linux-531dc6780d94245af037c25c2371c8caf652f0f9-event_inject_write
 * @id cpp/linux/531dc6780d94245af037c25c2371c8caf652f0f9/event-inject-write
 * @description linux-531dc6780d94245af037c25c2371c8caf652f0f9-kernel/trace/trace_events_inject.c-event_inject_write CVE-2024-43891
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfilp_284) {
exists(FunctionCall target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("trace_event_file *")
	)
	and target_0.getTarget().hasName("event_file_file")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vfilp_284
)
}

predicate func_1(Parameter vfilp_284, VariableAccess target_1) {
	target_1.getTarget()=vfilp_284
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_2(Parameter vfilp_284, FunctionCall target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getParent() |
		obj_0.getRValue() = target_2
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("trace_event_file *")
	)
	and target_2.getTarget().hasName("event_file_data")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vfilp_284
}

from Function func, Parameter vfilp_284, VariableAccess target_1, FunctionCall target_2
where
not func_0(vfilp_284)
and func_1(vfilp_284, target_1)
and func_2(vfilp_284, target_2)
and vfilp_284.getType().hasName("file *")
and vfilp_284.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
