commit 8b1bd7726a1394e2fe287f6a882822d8ee9d4e96	8b1bd7726a1394e2fe287f6a882822d8ee9d4e96
Author: Nidhi Jaju <nidhijaju@chromium.org>
Date:   Thu Nov 2 08:16:57 2023 +0000

    Make URLSearchParams persistent to avoid UaF
    
    The URLSearchParams::Create() function returns an on-heap object, but it
    can be garbage collected, so making it a persistent variable in
    DidFetchDataLoadedString() mitigates the issue.
    
    Bug: 1497997
    Change-Id: I229efec33451792a10a185cb2f9aa37dd0579823
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4996929
    Reviewed-by: Adam Rice <ricea@chromium.org>
    Commit-Queue: Nidhi Jaju <nidhijaju@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1218682}

diff --git a/third_party/blink/renderer/core/fetch/body.cc b/third_party/blink/renderer/core/fetch/body.cc
index 138692289dc6d..db164b798fcf4 100644
--- a/third_party/blink/renderer/core/fetch/body.cc
+++ b/third_party/blink/renderer/core/fetch/body.cc
@@ -135,8 +135,13 @@ class BodyFormDataConsumer final : public BodyConsumerBase {
 
   void DidFetchDataLoadedString(const String& string) override {
     auto* formData = MakeGarbageCollected<FormData>();
-    for (const auto& pair : URLSearchParams::Create(string)->Params())
+    // URLSearchParams::Create() returns an on-heap object, but it can be
+    // garbage collected, so making it a persistent variable on the stack
+    // mitigates use-after-free scenarios. See crbug.com/1497997.
+    Persistent<URLSearchParams> search_params = URLSearchParams::Create(string);
+    for (const auto& pair : search_params->Params()) {
       formData->append(pair.first, pair.second);
+    }
     DidFetchDataLoadedFormData(formData);
   }
 };
