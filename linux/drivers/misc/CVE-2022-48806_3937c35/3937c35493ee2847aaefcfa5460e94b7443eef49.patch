commit 3937c35493ee2847aaefcfa5460e94b7443eef49
Author: Jonas Malaco <jonas@protocubo.io>
Date:   Thu Feb 3 13:49:52 2022 -0300

    eeprom: ee1004: limit i2c reads to I2C_SMBUS_BLOCK_MAX
    
    commit c0689e46be23160d925dca95dfc411f1a0462708 upstream.
    
    Commit effa453168a7 ("i2c: i801: Don't silently correct invalid transfer
    size") revealed that ee1004_eeprom_read() did not properly limit how
    many bytes to read at once.
    
    In particular, i2c_smbus_read_i2c_block_data_or_emulated() takes the
    length to read as an u8.  If count == 256 after taking into account the
    offset and page boundary, the cast to u8 overflows.  And this is common
    when user space tries to read the entire EEPROM at once.
    
    To fix it, limit each read to I2C_SMBUS_BLOCK_MAX (32) bytes, already
    the maximum length i2c_smbus_read_i2c_block_data_or_emulated() allows.
    
    Fixes: effa453168a7 ("i2c: i801: Don't silently correct invalid transfer size")
    Cc: stable@vger.kernel.org
    Reviewed-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Jonas Malaco <jonas@protocubo.io>
    Link: https://lore.kernel.org/r/20220203165024.47767-1-jonas@protocubo.io
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/misc/eeprom/ee1004.c b/drivers/misc/eeprom/ee1004.c
index b081c67416d7..6b313997085e 100644
--- a/drivers/misc/eeprom/ee1004.c
+++ b/drivers/misc/eeprom/ee1004.c
@@ -82,6 +82,9 @@ static ssize_t ee1004_eeprom_read(struct i2c_client *client, char *buf,
 	if (unlikely(offset + count > EE1004_PAGE_SIZE))
 		count = EE1004_PAGE_SIZE - offset;
 
+	if (count > I2C_SMBUS_BLOCK_MAX)
+		count = I2C_SMBUS_BLOCK_MAX;
+
 	status = i2c_smbus_read_i2c_block_data_or_emulated(client, offset,
 							   count, buf);
 	dev_dbg(&client->dev, "read %zu@%d --> %d\n", count, offset, status);
