/**
 * @name linux-3c6d5189246f590e4e1f167991558bdb72a4738b-arfs_create_groups
 * @id cpp/linux/3c6d5189246f590e4e1f167991558bdb72a4738b/arfs-create-groups
 * @description linux-3c6d5189246f590e4e1f167991558bdb72a4738b-drivers/net/ethernet/mellanox/mlx5/core/en_arfs.c-arfs_create_groups CVE-2024-35835
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_11, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition() instanceof NotExpr
	and target_0.getThen() instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_11.getLocation()))
}

predicate func_1(Variable verr_252, LogicalOrExpr target_9) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_252
	and target_1.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9)
}

predicate func_2(LogicalOrExpr target_9, Function func) {
exists(GotoStmt target_2 |
	target_2.getName() ="err_free_g"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Parameter vft_245, ExprStmt target_13) {
exists(AssignExpr target_3 |
	target_3.getLValue().(PointerFieldAccess).getTarget().getName()="g"
	and target_3.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_245
	and target_3.getRValue().(Literal).getValue()="0"
	and target_13.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vin_251, Parameter vft_245, BlockStmt target_14, NotExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vin_251
	and target_4.getParent().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="g"
	and target_4.getParent().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_245
	and target_4.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_14
}

/*predicate func_5(Variable vin_251, Parameter vft_245, BlockStmt target_14, NotExpr target_5) {
	target_5.getOperand().(PointerFieldAccess).getTarget().getName()="g"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_245
	and target_5.getParent().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vin_251
	and target_5.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_14
}

*/
predicate func_6(Parameter vft_245, LogicalOrExpr target_9, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="g"
	and target_6.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_245
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_7(Variable vin_251, LogicalOrExpr target_9, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("kvfree")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vin_251
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_8(LogicalOrExpr target_9, Function func, ReturnStmt target_8) {
	target_8.getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_8.getEnclosingFunction() = func
}

predicate func_9(BlockStmt target_14, Function func, LogicalOrExpr target_9) {
	target_9.getLeftOperand() instanceof NotExpr
	and target_9.getRightOperand() instanceof NotExpr
	and target_9.getParent().(IfStmt).getThen()=target_14
	and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable vin_251, ExprStmt target_15, FunctionCall target_10) {
	target_10.getTarget().hasName("kvfree")
	and target_10.getArgument(0).(VariableAccess).getTarget()=vin_251
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_10.getArgument(0).(VariableAccess).getLocation())
}

predicate func_11(Variable vin_251, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vin_251
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kvzalloc")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="3264"
}

predicate func_13(Parameter vft_245, ExprStmt target_13) {
	target_13.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="g"
	and target_13.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_245
	and target_13.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getTarget().getName()="num_groups"
	and target_13.getExpr().(AssignExpr).getLValue().(ArrayExpr).getArrayOffset().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vft_245
	and target_13.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

predicate func_14(Function func, BlockStmt target_14) {
	target_14.getStmt(0) instanceof ExprStmt
	and target_14.getStmt(1) instanceof ExprStmt
	and target_14.getStmt(2) instanceof ReturnStmt
	and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vin_251, ExprStmt target_15) {
	target_15.getExpr().(FunctionCall).getTarget().hasName("kvfree")
	and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vin_251
}

from Function func, Variable vin_251, Variable verr_252, Parameter vft_245, NotExpr target_4, ExprStmt target_6, ExprStmt target_7, ReturnStmt target_8, LogicalOrExpr target_9, FunctionCall target_10, ExprStmt target_11, ExprStmt target_13, BlockStmt target_14, ExprStmt target_15
where
not func_0(target_11, func)
and not func_1(verr_252, target_9)
and not func_2(target_9, func)
and not func_3(vft_245, target_13)
and func_4(vin_251, vft_245, target_14, target_4)
and func_6(vft_245, target_9, target_6)
and func_7(vin_251, target_9, target_7)
and func_8(target_9, func, target_8)
and func_9(target_14, func, target_9)
and func_10(vin_251, target_15, target_10)
and func_11(vin_251, target_11)
and func_13(vft_245, target_13)
and func_14(func, target_14)
and func_15(vin_251, target_15)
and vin_251.getType().hasName("u32 *")
and verr_252.getType().hasName("int")
and vft_245.getType().hasName("mlx5e_flow_table *")
and vin_251.(LocalVariable).getFunction() = func
and verr_252.(LocalVariable).getFunction() = func
and vft_245.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
