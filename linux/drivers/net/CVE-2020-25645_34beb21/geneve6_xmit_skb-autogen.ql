/**
 * @name linux-34beb21594519ce64a55a498c2fe7d567bc1ca20-geneve6_xmit_skb
 * @id cpp/linux/34beb21594519ce64a55a498c2fe7d567bc1ca20/geneve6-xmit-skb
 * @description linux-34beb21594519ce64a55a498c2fe7d567bc1ca20-drivers/net/geneve.c-geneve6_xmit_skb CVE-2020-25645
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vgeneve_965, Variable vsport_974, Parameter vskb_964, IfStmt target_3, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsport_974
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("udp_flow_src_port")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="net"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgeneve_965
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vskb_964
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="1"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(ComplementExpr).getValue()="65535"
	and target_3.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Parameter vgeneve_965, ExprStmt target_4, ExprStmt target_5) {
exists(ValueFieldAccess target_1 |
	target_1.getTarget().getName()="tp_dst"
	and target_1.getQualifier().(ValueFieldAccess).getTarget().getName()="key"
	and target_1.getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="info"
	and target_1.getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cfg"
	and target_1.getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgeneve_965
	and target_4.getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vskb_964, IfStmt target_3) {
	target_3.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dst_release")
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("dst_entry *")
	and target_3.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getElse().(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getElse().(IfStmt).getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(VariableAccess).getTarget().getType().hasName("ip_tunnel_info *")
	and target_3.getElse().(IfStmt).getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("pskb_may_pull")
	and target_3.getElse().(IfStmt).getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_964
	and target_3.getElse().(IfStmt).getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(Literal).getValue()="14"
	and target_3.getElse().(IfStmt).getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dst_release")
}

predicate func_4(Parameter vgeneve_965, ExprStmt target_4) {
	target_4.getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="sock6"
	and target_4.getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgeneve_965
}

predicate func_5(Parameter vgeneve_965, Parameter vskb_964, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="protocol"
	and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_964
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("eth_type_trans")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_964
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="dev"
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgeneve_965
}

from Function func, Parameter vgeneve_965, Variable vsport_974, Parameter vskb_964, ExprStmt target_0, IfStmt target_3, ExprStmt target_4, ExprStmt target_5
where
func_0(vgeneve_965, vsport_974, vskb_964, target_3, target_0)
and not func_1(vgeneve_965, target_4, target_5)
and func_3(vskb_964, target_3)
and func_4(vgeneve_965, target_4)
and func_5(vgeneve_965, vskb_964, target_5)
and vgeneve_965.getType().hasName("geneve_dev *")
and vsport_974.getType().hasName("__be16")
and vskb_964.getType().hasName("sk_buff *")
and vgeneve_965.getFunction() = func
and vsport_974.(LocalVariable).getFunction() = func
and vskb_964.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
