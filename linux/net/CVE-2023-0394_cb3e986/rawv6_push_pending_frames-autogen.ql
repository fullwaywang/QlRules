/**
 * @name linux-cb3e9864cdbe35ff6378966660edbcbac955fe17-rawv6_push_pending_frames
 * @id cpp/linux/cb3e9864cdbe35ff6378966660edbcbac955fe17/rawv6-push-pending-frames
 * @description linux-cb3e9864cdbe35ff6378966660edbcbac955fe17-rawv6_push_pending_frames CVE-2023-0394
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_505, FunctionCall target_2, ExprStmt target_3, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ipv6_txoptions *")
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="opt"
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cork"
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("inet6_sk")
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_505
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vtotal_len_512, ExprStmt target_4, RelationalOperation target_5, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getTarget()=vtotal_len_512
		and target_1.getExpr().(AssignSubExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getType().hasName("ipv6_txoptions *")
		and target_1.getExpr().(AssignSubExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getTarget().getName()="opt_flen"
		and target_1.getExpr().(AssignSubExpr).getRValue().(ConditionalExpr).getThen().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("ipv6_txoptions *")
		and target_1.getExpr().(AssignSubExpr).getRValue().(ConditionalExpr).getElse().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation())
		and target_1.getExpr().(AssignSubExpr).getLValue().(VariableAccess).getLocation().isBefore(target_5.getLesserOperand().(SubExpr).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vsk_505, FunctionCall target_2) {
		target_2.getTarget().hasName("inet_sk")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vsk_505
}

predicate func_3(Parameter vsk_505, RelationalOperation target_5, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("ip6_flush_pending_frames")
		and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_505
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vtotal_len_512, Parameter vsk_505, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vtotal_len_512
		and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="length"
		and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="base"
		and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cork"
		and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("inet_sk")
		and target_4.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_505
}

predicate func_5(Variable vtotal_len_512, RelationalOperation target_5) {
		 (target_5 instanceof GEExpr or target_5 instanceof LEExpr)
		and target_5.getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_5.getLesserOperand().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vtotal_len_512
		and target_5.getLesserOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
}

from Function func, Variable vtotal_len_512, Parameter vsk_505, FunctionCall target_2, ExprStmt target_3, ExprStmt target_4, RelationalOperation target_5
where
not func_0(vsk_505, target_2, target_3, func)
and not func_1(vtotal_len_512, target_4, target_5, func)
and func_2(vsk_505, target_2)
and func_3(vsk_505, target_5, target_3)
and func_4(vtotal_len_512, vsk_505, target_4)
and func_5(vtotal_len_512, target_5)
and vtotal_len_512.getType().hasName("int")
and vsk_505.getType().hasName("sock *")
and vtotal_len_512.(LocalVariable).getFunction() = func
and vsk_505.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
