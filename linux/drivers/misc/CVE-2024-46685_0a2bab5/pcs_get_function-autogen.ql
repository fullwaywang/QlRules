/**
 * @name linux-0a2bab5ed161318f57134716accba0a30f3af191-pcs_get_function
 * @id cpp/linux/0a2bab5ed161318f57134716accba0a30f3af191/pcs-get-function
 * @description linux-0a2bab5ed161318f57134716accba0a30f3af191-drivers/pinctrl/pinctrl-single.c-pcs_get_function CVE-2024-46685
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfunction_317, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vfunction_317
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vfunction_317, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="data"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vfunction_317
		)
		and obj_0.getLValue().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("pcs_function **")
	)
}

predicate func_2(Variable vfunction_317, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("pinmux_generic_get_function")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("pinctrl_dev *")
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vfunction_317
	)
}

from Function func, Variable vfunction_317, ExprStmt target_1, ExprStmt target_2
where
not func_0(vfunction_317, target_1, target_2, func)
and func_1(vfunction_317, target_1)
and func_2(vfunction_317, target_2)
and vfunction_317.getType().hasName("function_desc *")
and vfunction_317.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
