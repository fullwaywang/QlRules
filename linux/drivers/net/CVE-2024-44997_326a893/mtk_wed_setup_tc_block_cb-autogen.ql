/**
 * @name linux-326a89321f9d5fe399fe6f9ff7c0fc766582a6a0-mtk_wed_setup_tc_block_cb
 * @id cpp/linux/326a89321f9d5fe399fe6f9ff7c0fc766582a6a0/mtk-wed-setup-tc-block-cb
 * @description linux-326a89321f9d5fe399fe6f9ff7c0fc766582a6a0-drivers/net/ethernet/mediatek/mtk_wed.c-mtk_wed_setup_tc_block_cb CVE-2024-44997
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable vpriv_1763, ReturnStmt target_5, NotExpr target_4) {
exists(LogicalOrExpr target_1 |
	target_1.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vpriv_1763
	and target_1.getRightOperand() instanceof NotExpr
	and target_1.getParent().(IfStmt).getThen()=target_5
	and target_1.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_4.getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vpriv_1763, Variable vhw_1765, FunctionCall target_7, Function func) {
exists(ExprStmt target_2 |
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().getName()="hw"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpriv_1763
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vhw_1765
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_7.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_3(Variable vpriv_1763, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="hw"
	and target_3.getQualifier().(VariableAccess).getTarget()=vpriv_1763
}

predicate func_4(Variable vpriv_1763, ReturnStmt target_5, NotExpr target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="dev"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vpriv_1763
		)
		and obj_0.getTarget().hasName("tc_can_offload")
	)
	and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(NotExpr target_4, Function func, ReturnStmt target_5) {
	target_5.getExpr().(UnaryMinusExpr).getValue()="-95"
	and target_5.getParent().(IfStmt).getCondition()=target_4
	and target_5.getEnclosingFunction() = func
}

predicate func_7(Variable vhw_1765, FunctionCall target_7) {
	exists(PointerFieldAccess obj_0 | obj_0=target_7.getArgument(0) |
		obj_0.getTarget().getName()="eth"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vhw_1765
	)
	and exists(PointerFieldAccess obj_1 | obj_1=target_7.getArgument(2) |
		obj_1.getTarget().getName()="index"
		and obj_1.getQualifier().(VariableAccess).getTarget()=vhw_1765
	)
	and target_7.getTarget().hasName("mtk_flow_offload_cmd")
	and target_7.getArgument(1).(VariableAccess).getTarget().getType().hasName("flow_cls_offload *")
}

from Function func, Variable vpriv_1763, Variable vhw_1765, PointerFieldAccess target_3, NotExpr target_4, ReturnStmt target_5, FunctionCall target_7
where
not func_1(vpriv_1763, target_5, target_4)
and not func_2(vpriv_1763, vhw_1765, target_7, func)
and func_3(vpriv_1763, target_3)
and func_4(vpriv_1763, target_5, target_4)
and func_5(target_4, func, target_5)
and func_7(vhw_1765, target_7)
and vpriv_1763.getType().hasName("mtk_wed_flow_block_priv *")
and vhw_1765.getType().hasName("mtk_wed_hw *")
and vpriv_1763.(LocalVariable).getFunction() = func
and vhw_1765.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
