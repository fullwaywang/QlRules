/**
 * @name linux-a06247c6804f1a7c86a2e5398a4c1f1db1471848-psi_write
 * @id cpp/linux/a06247c6804f1a7c86a2e5398a4c1f1db1471848/psi-write
 * @description linux-a06247c6804f1a7c86a2e5398a4c1f1db1471848-kernel/sched/psi.c-psi_write CVE-2022-2938
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vnbytes_1300, Initializer target_0) {
	target_0.getExpr().(VariableAccess).getTarget()=vnbytes_1300
}

predicate func_1(Function func, Initializer target_1) {
	target_1.getExpr().(SizeofExprOperator).getValue()="32"
	and target_1.getExpr().getEnclosingFunction() = func
}

predicate func_2(Variable v__UNIQUE_ID___x2190_1313, Variable v__UNIQUE_ID___y2191_1313, VariableAccess target_2) {
	target_2.getTarget()=v__UNIQUE_ID___x2190_1313
	and target_2.getParent().(LTExpr).getGreaterOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___y2191_1313
}

/*predicate func_3(Variable v__UNIQUE_ID___x2190_1313, Variable v__UNIQUE_ID___y2191_1313, VariableAccess target_3) {
	target_3.getTarget()=v__UNIQUE_ID___y2191_1313
	and target_3.getParent().(LTExpr).getLesserOperand().(VariableAccess).getTarget()=v__UNIQUE_ID___x2190_1313
}

*/
predicate func_4(Variable v__UNIQUE_ID___x2190_1313, VariableAccess target_4) {
	target_4.getTarget()=v__UNIQUE_ID___x2190_1313
}

predicate func_5(Variable v__UNIQUE_ID___y2191_1313, VariableAccess target_5) {
	target_5.getTarget()=v__UNIQUE_ID___y2191_1313
}

predicate func_6(Variable vnew_1305, FunctionCall target_6) {
	target_6.getTarget().hasName("psi_trigger_replace")
	and not target_6.getTarget().hasName("mutex_unlock")
	and target_6.getArgument(0) instanceof AddressOfExpr
	and target_6.getArgument(1).(VariableAccess).getTarget()=vnew_1305
}

predicate func_7(Parameter vfile_1299, Variable vseq_1304, IfStmt target_16, ExprStmt target_7) {
	target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vseq_1304
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="private_data"
	and target_7.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_1299
	and target_16.getLocation().isBefore(target_7.getLocation())
}

predicate func_8(Variable vseq_1304, IfStmt target_16, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
	and target_8.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_16.getLocation().isBefore(target_8.getLocation())
}

predicate func_9(Variable vseq_1304, ExprStmt target_17, AddressOfExpr target_14, Function func) {
exists(IfStmt target_9 |
	target_9.getCondition().(PointerFieldAccess).getTarget().getName()="private"
	and target_9.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_9.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
	and target_9.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
	and target_9.getLocation().isBefore(target_17.getLocation())
	and target_9.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_10(Variable vseq_1304, AddressOfExpr target_14) {
exists(AddressOfExpr target_10 |
	target_10.getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_10.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

*/
predicate func_11(Variable vseq_1304, FunctionCall target_18) {
exists(ExprStmt target_11 |
	target_11.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_11
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18)
}

predicate func_12(ExprStmt target_17, Function func) {
exists(DoStmt target_12 |
	target_12.getCondition().(Literal).getValue()="0"
	and target_12.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_12.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_12.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_12.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(2).(DoStmt).getCondition().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
	and target_12.getLocation().isBefore(target_17.getLocation()))
}

predicate func_13(Variable vnew_1305, FunctionCall target_18, ReturnStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_1305
	and target_13.getParent().(IfStmt).getCondition()=target_18
}

predicate func_14(Variable vseq_1304, AddressOfExpr target_14) {
	target_14.getOperand().(PointerFieldAccess).getTarget().getName()="private"
	and target_14.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vseq_1304
	and target_14.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_15(Variable vnew_1305, VariableAccess target_15) {
	target_15.getTarget()=vnew_1305
	and target_15.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_16(Variable vnew_1305, IfStmt target_16) {
	target_16.getCondition().(FunctionCall).getTarget().hasName("IS_ERR")
	and target_16.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnew_1305
	and target_16.getThen() instanceof ReturnStmt
}

predicate func_17(Function func, ExprStmt target_17) {
	target_17.getExpr() instanceof FunctionCall
	and target_17.getEnclosingFunction() = func
}

predicate func_18(Variable vnew_1305, FunctionCall target_18) {
	target_18.getTarget().hasName("IS_ERR")
	and target_18.getArgument(0).(VariableAccess).getTarget()=vnew_1305
}

from Function func, Parameter vfile_1299, Parameter vnbytes_1300, Variable vseq_1304, Variable vnew_1305, Variable v__UNIQUE_ID___x2190_1313, Variable v__UNIQUE_ID___y2191_1313, Initializer target_0, Initializer target_1, VariableAccess target_2, VariableAccess target_4, VariableAccess target_5, FunctionCall target_6, ExprStmt target_7, ExprStmt target_8, ReturnStmt target_13, AddressOfExpr target_14, VariableAccess target_15, IfStmt target_16, ExprStmt target_17, FunctionCall target_18
where
func_0(vnbytes_1300, target_0)
and func_1(func, target_1)
and func_2(v__UNIQUE_ID___x2190_1313, v__UNIQUE_ID___y2191_1313, target_2)
and func_4(v__UNIQUE_ID___x2190_1313, target_4)
and func_5(v__UNIQUE_ID___y2191_1313, target_5)
and func_6(vnew_1305, target_6)
and func_7(vfile_1299, vseq_1304, target_16, target_7)
and func_8(vseq_1304, target_16, target_8)
and not func_9(vseq_1304, target_17, target_14, func)
and not func_11(vseq_1304, target_18)
and not func_12(target_17, func)
and func_13(vnew_1305, target_18, target_13)
and func_14(vseq_1304, target_14)
and func_15(vnew_1305, target_15)
and func_16(vnew_1305, target_16)
and func_17(func, target_17)
and func_18(vnew_1305, target_18)
and vfile_1299.getType().hasName("file *")
and vnbytes_1300.getType().hasName("size_t")
and vseq_1304.getType().hasName("seq_file *")
and vnew_1305.getType().hasName("psi_trigger *")
and v__UNIQUE_ID___x2190_1313.getType().hasName("size_t")
and v__UNIQUE_ID___y2191_1313.getType().hasName("unsigned long")
and vfile_1299.getFunction() = func
and vnbytes_1300.getFunction() = func
and vseq_1304.(LocalVariable).getFunction() = func
and vnew_1305.(LocalVariable).getFunction() = func
and v__UNIQUE_ID___x2190_1313.(LocalVariable).getFunction() = func
and v__UNIQUE_ID___y2191_1313.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
