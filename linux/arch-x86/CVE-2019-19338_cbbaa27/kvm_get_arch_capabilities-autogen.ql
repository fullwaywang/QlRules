/**
 * @name linux-cbbaa2727aa3ae9e0a844803da7cef7fd3b94f2b-kvm_get_arch_capabilities
 * @id cpp/linux/cbbaa2727aa3ae9e0a844803da7cef7fd3b94f2b/kvm-get-arch-capabilities
 * @description linux-cbbaa2727aa3ae9e0a844803da7cef7fd3b94f2b-arch/x86/kvm/x86.c-kvm_get_arch_capabilities CVE-2019-19338
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_8, Function func) {
exists(NotExpr target_0 |
	target_0.getOperand() instanceof ConditionalExpr
	and target_0.getParent().(IfStmt).getThen()=target_8
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vdata_1283, LogicalAndExpr target_7, ExprStmt target_9) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vdata_1283
	and target_1.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="18446744073709551359"
	and target_1.getParent().(IfStmt).getCondition()=target_7
	and target_9.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable vdata_1283, LogicalAndExpr target_7) {
exists(IfStmt target_2 |
	target_2.getCondition().(NotExpr).getOperand() instanceof ConditionalExpr
	and target_2.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vdata_1283
	and target_2.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="256"
	and target_2.getElse().(IfStmt).getCondition() instanceof BitwiseAndExpr
	and target_2.getElse().(IfStmt).getThen().(ExprStmt).getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vdata_1283
	and target_2.getElse().(IfStmt).getThen().(ExprStmt).getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="18446744073709551583"
	and target_2.getParent().(IfStmt).getCondition()=target_7)
}

predicate func_3(Variable vdata_1283, ExprStmt target_8, ReturnStmt target_10, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vdata_1283
	and target_3.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="18446744073709551487"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof ReturnStmt
	and target_8.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation())
	and target_3.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getLocation().isBefore(target_10.getExpr().(VariableAccess).getLocation()))
}

predicate func_4(Variable vboot_cpu_data, ConditionalExpr target_4) {
	target_4.getCondition().(LogicalAndExpr).getValue()="0"
	and target_4.getThen().(Literal).getValue()="1"
	and target_4.getElse().(FunctionCall).getTarget().hasName("test_bit")
	and target_4.getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="630"
	and target_4.getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_4.getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
}

predicate func_5(Variable vboot_cpu_data, ConditionalExpr target_5) {
	target_5.getCondition().(LogicalAndExpr).getValue()="0"
	and target_5.getThen().(Literal).getValue()="1"
	and target_5.getElse().(FunctionCall).getTarget().hasName("test_bit")
	and target_5.getElse().(FunctionCall).getArgument(0).(AddExpr).getValue()="299"
	and target_5.getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="x86_capability"
	and target_5.getElse().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vboot_cpu_data
}

predicate func_6(Variable vdata_1283, ExprStmt target_8, BitwiseAndExpr target_6) {
	target_6.getLeftOperand().(VariableAccess).getTarget()=vdata_1283
	and target_6.getRightOperand().(BinaryBitwiseOperation).getValue()="128"
	and target_6.getParent().(LogicalAndExpr).getLeftOperand() instanceof LogicalAndExpr
	and target_6.getParent().(LogicalAndExpr).getParent().(IfStmt).getThen()=target_8
}

predicate func_7(ExprStmt target_8, Function func, LogicalAndExpr target_7) {
	target_7.getLeftOperand().(LogicalAndExpr).getLeftOperand() instanceof ConditionalExpr
	and target_7.getLeftOperand().(LogicalAndExpr).getRightOperand() instanceof ConditionalExpr
	and target_7.getRightOperand() instanceof BitwiseAndExpr
	and target_7.getParent().(IfStmt).getThen()=target_8
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vdata_1283, ExprStmt target_8) {
	target_8.getExpr().(AssignAndExpr).getLValue().(VariableAccess).getTarget()=vdata_1283
	and target_8.getExpr().(AssignAndExpr).getRValue().(ComplementExpr).getValue()="18446744073709551583"
}

predicate func_9(Variable vdata_1283, ExprStmt target_9) {
	target_9.getExpr().(AssignOrExpr).getLValue().(VariableAccess).getTarget()=vdata_1283
	and target_9.getExpr().(AssignOrExpr).getRValue().(BinaryBitwiseOperation).getValue()="32"
}

predicate func_10(Variable vdata_1283, ReturnStmt target_10) {
	target_10.getExpr().(VariableAccess).getTarget()=vdata_1283
}

from Function func, Variable vboot_cpu_data, Variable vdata_1283, ConditionalExpr target_4, ConditionalExpr target_5, BitwiseAndExpr target_6, LogicalAndExpr target_7, ExprStmt target_8, ExprStmt target_9, ReturnStmt target_10
where
not func_0(target_8, func)
and not func_1(vdata_1283, target_7, target_9)
and not func_2(vdata_1283, target_7)
and not func_3(vdata_1283, target_8, target_10, func)
and func_4(vboot_cpu_data, target_4)
and func_5(vboot_cpu_data, target_5)
and func_6(vdata_1283, target_8, target_6)
and func_7(target_8, func, target_7)
and func_8(vdata_1283, target_8)
and func_9(vdata_1283, target_9)
and func_10(vdata_1283, target_10)
and vboot_cpu_data.getType().hasName("cpuinfo_x86")
and vdata_1283.getType().hasName("u64")
and not vboot_cpu_data.getParentScope+() = func
and vdata_1283.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
