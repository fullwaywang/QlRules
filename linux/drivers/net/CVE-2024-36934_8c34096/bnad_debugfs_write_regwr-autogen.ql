/**
 * @name linux-8c34096c7fdf272fd4c0c37fe411cd2e3ed0ee9f-bnad_debugfs_write_regwr
 * @id cpp/linux/8c34096c7fdf272fd4c0c37fe411cd2e3ed0ee9f/bnad-debugfs-write-regwr
 * @description linux-8c34096c7fdf272fd4c0c37fe411cd2e3ed0ee9f-drivers/net/ethernet/brocade/bna/bnad_debugfs.c-bnad_debugfs_write_regwr CVE-2024-36934
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_362, Parameter vnbytes_363, FunctionCall target_0) {
	target_0.getTarget().hasName("memdup_user")
	and not target_0.getTarget().hasName("memdup_user_nul")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_362
	and target_0.getArgument(1).(VariableAccess).getTarget()=vnbytes_363
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("void *")
}

from Function func, Parameter vbuf_362, Parameter vnbytes_363, FunctionCall target_0
where
func_0(vbuf_362, vnbytes_363, target_0)
and vbuf_362.getType().hasName("const char *")
and vnbytes_363.getType().hasName("size_t")
and vbuf_362.getFunction() = func
and vnbytes_363.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
