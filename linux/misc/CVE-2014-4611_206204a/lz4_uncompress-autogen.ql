/**
 * @name linux-206204a1162b995e2185275167b22468c00d6b36-lz4_uncompress
 * @id cpp/linux/206204a1162b995e2185275167b22468c00d6b36/lz4-uncompress
 * @description linux-206204a1162b995e2185275167b22468c00d6b36-lib/lz4/lz4_decompress.c-lz4_uncompress CVE-2014-4611
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlength_58, Variable vlen_70, EqualityOperation target_1, AssignAddExpr target_2, ExprStmt target_3, ExprStmt target_4) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vlength_58
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(AddExpr).getLeftOperand().(VariableAccess).getTarget()=vlength_58
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(AddExpr).getRightOperand().(VariableAccess).getTarget()=vlen_70
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(GotoStmt).getName() ="_output_error"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getLocation())
	and target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(AddExpr).getRightOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vlength_58, EqualityOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vlength_58
	and target_1.getRightOperand().(SubExpr).getValue()="15"
}

predicate func_2(Variable vlength_58, AssignAddExpr target_2) {
	target_2.getLValue().(VariableAccess).getTarget()=vlength_58
	and target_2.getRValue().(Literal).getValue()="255"
}

predicate func_3(Variable vlength_58, Variable vlen_70, ExprStmt target_3) {
	target_3.getExpr().(AssignAddExpr).getLValue().(VariableAccess).getTarget()=vlength_58
	and target_3.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getTarget()=vlen_70
}

predicate func_4(Variable vlen_70, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vlen_70
	and target_4.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const u8 *")
}

from Function func, Variable vlength_58, Variable vlen_70, EqualityOperation target_1, AssignAddExpr target_2, ExprStmt target_3, ExprStmt target_4
where
not func_0(vlength_58, vlen_70, target_1, target_2, target_3, target_4)
and func_1(vlength_58, target_1)
and func_2(vlength_58, target_2)
and func_3(vlength_58, vlen_70, target_3)
and func_4(vlen_70, target_4)
and vlength_58.getType().hasName("size_t")
and vlen_70.getType().hasName("size_t")
and vlength_58.(LocalVariable).getFunction() = func
and vlen_70.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
