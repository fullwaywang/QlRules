/**
 * @name linux-7c6782ad4911cbee874e85630226ed389ff2e453-add_rule_fg
 * @id cpp/linux/7c6782ad4911cbee874e85630226ed389ff2e453/add-rule-fg
 * @description linux-7c6782ad4911cbee874e85630226ed389ff2e453-drivers/net/ethernet/mellanox/mlx5/core/fs_core.c-add_rule_fg CVE-2024-35960
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vhandle_1792, Variable vi_1794, BlockStmt target_3, RelationalOperation target_4, AddressOfExpr target_5, PostfixIncrExpr target_6) {
exists(NotExpr target_0 |
	target_0.getOperand().(ValueFieldAccess).getTarget().getName()="parent"
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="node"
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rule"
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandle_1792
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1794
	and target_0.getParent().(IfStmt).getThen()=target_3
	and target_4.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getOperand().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_6.getOperand().(VariableAccess).getLocation().isBefore(target_0.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getLocation()))
}

predicate func_1(Variable vhandle_1792, Variable vi_1794, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="node"
	and target_1.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rule"
	and target_1.getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandle_1792
	and target_1.getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1794
	and target_1.getParent().(ValueFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(EQExpr).getLeftOperand() instanceof FunctionCall
}

predicate func_2(Variable vi_1794, BlockStmt target_3, EqualityOperation target_2) {
	target_2.getLeftOperand().(FunctionCall).getTarget().hasName("refcount_read")
	and target_2.getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="refcount"
	and target_2.getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="node"
	and target_2.getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rule"
	and target_2.getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1794
	and target_2.getRightOperand().(Literal).getValue()="1"
	and target_2.getParent().(IfStmt).getThen()=target_3
}

predicate func_3(Variable vi_1794, BlockStmt target_3) {
	target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("tree_add_node")
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="node"
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rule"
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1794
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="node"
	and target_3.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("fs_fte *")
}

predicate func_4(Variable vhandle_1792, Variable vi_1794, RelationalOperation target_4) {
	 (target_4 instanceof GTExpr or target_4 instanceof LTExpr)
	and target_4.getLesserOperand().(VariableAccess).getTarget()=vi_1794
	and target_4.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="num_rules"
	and target_4.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandle_1792
}

predicate func_5(Variable vhandle_1792, Variable vi_1794, AddressOfExpr target_5) {
	target_5.getOperand().(PointerFieldAccess).getTarget().getName()="node"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="rule"
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vhandle_1792
	and target_5.getOperand().(PointerFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget()=vi_1794
}

predicate func_6(Variable vi_1794, PostfixIncrExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget()=vi_1794
}

from Function func, Variable vhandle_1792, Variable vi_1794, PointerFieldAccess target_1, EqualityOperation target_2, BlockStmt target_3, RelationalOperation target_4, AddressOfExpr target_5, PostfixIncrExpr target_6
where
not func_0(vhandle_1792, vi_1794, target_3, target_4, target_5, target_6)
and func_1(vhandle_1792, vi_1794, target_1)
and func_2(vi_1794, target_3, target_2)
and func_3(vi_1794, target_3)
and func_4(vhandle_1792, vi_1794, target_4)
and func_5(vhandle_1792, vi_1794, target_5)
and func_6(vi_1794, target_6)
and vhandle_1792.getType().hasName("mlx5_flow_handle *")
and vi_1794.getType().hasName("int")
and vhandle_1792.(LocalVariable).getFunction() = func
and vi_1794.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
