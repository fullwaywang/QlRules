/**
 * @name linux-9f13aacdd4ee9a7644b2a3c96d67113cd083c9c7-cachefiles_flush_reqs
 * @id cpp/linux/9f13aacdd4ee9a7644b2a3c96d67113cd083c9c7/cachefiles-flush-reqs
 * @description linux-9f13aacdd4ee9a7644b2a3c96d67113cd083c9c7-fs/cachefiles/daemon.c-cachefiles_flush_reqs CVE-2024-40900
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vxa_137, Variable vindex_139, AssignExpr target_1, AddressOfExpr target_2, AddressOfExpr target_3) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("__xa_erase")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vxa_137
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vindex_139
	)
	and target_1.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
)
}

predicate func_1(Variable vxa_137, Variable vindex_139, AssignExpr target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getRValue() |
		obj_0.getTarget().hasName("xa_find_after")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vxa_137
		and obj_0.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vindex_139
		and obj_0.getArgument(2).(ComplementExpr).getValue()="18446744073709551615"
		and obj_0.getArgument(3).(Literal).getValue()="8"
	)
	and target_1.getLValue().(VariableAccess).getTarget().getType().hasName("cachefiles_req *")
}

predicate func_2(Variable vxa_137, AddressOfExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="xa_lock"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vxa_137
	)
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
}

predicate func_3(Variable vxa_137, Variable vindex_139, AddressOfExpr target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getParent() |
		exists(AssignExpr obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getRValue() |
				obj_2.getTarget().hasName("xa_find_after")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=vxa_137
				and obj_2.getArgument(2).(ComplementExpr).getValue()="18446744073709551615"
				and obj_2.getArgument(3).(Literal).getValue()="8"
			)
		)
	)
	and target_3.getOperand().(VariableAccess).getTarget()=vindex_139
}

from Function func, Variable vxa_137, Variable vindex_139, AssignExpr target_1, AddressOfExpr target_2, AddressOfExpr target_3
where
not func_0(vxa_137, vindex_139, target_1, target_2, target_3)
and func_1(vxa_137, vindex_139, target_1)
and func_2(vxa_137, target_2)
and func_3(vxa_137, vindex_139, target_3)
and vxa_137.getType().hasName("xarray *")
and vindex_139.getType().hasName("unsigned long")
and vxa_137.(LocalVariable).getFunction() = func
and vindex_139.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
