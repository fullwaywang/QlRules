/**
 * @name curl-3ee79c1674fd6f9-Curl_http_readwrite_headers
 * @id cpp/curl/3ee79c1674fd6f9/curl-http-readwrite-headers
 * @description curl-3ee79c1674fd6f9-lib/http.c-Curl_http_readwrite_headers CVE-2023-38039
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vresult_3931, Variable vheaderlen_4028, Parameter vdata_3926, ReturnStmt target_15, ExprStmt target_16, ExprStmt target_12, AddressOfExpr target_17) {
	exists(AssignExpr target_0 |
		target_0.getLValue().(VariableAccess).getTarget()=vresult_3931
		and target_0.getRValue().(FunctionCall).getTarget().hasName("Curl_bump_headersize")
		and target_0.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_3926
		and target_0.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vheaderlen_4028
		and target_0.getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and target_15.getExpr().(VariableAccess).getLocation().isBefore(target_0.getLValue().(VariableAccess).getLocation())
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getLocation().isBefore(target_0.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
		and target_0.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_12.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getLocation())
		and target_17.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vresult_3931, LogicalOrExpr target_18, ExprStmt target_19, IfStmt target_20) {
	exists(IfStmt target_1 |
		target_1.getCondition().(VariableAccess).getTarget()=vresult_3931
		and target_1.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=vresult_3931
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(15)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
		and target_19.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getCondition().(VariableAccess).getLocation())
		and target_1.getCondition().(VariableAccess).getLocation().isBefore(target_20.getCondition().(VariableAccess).getLocation()))
}

predicate func_2(Variable vresult_3931, Parameter vdata_3926, ReturnStmt target_21, AddressOfExpr target_22) {
	exists(AssignExpr target_2 |
		target_2.getLValue().(VariableAccess).getTarget()=vresult_3931
		and target_2.getRValue().(FunctionCall).getTarget().hasName("Curl_bump_headersize")
		and target_2.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_3926
		and target_2.getRValue().(FunctionCall).getArgument(1) instanceof FunctionCall
		and target_2.getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="0"
		and target_21.getExpr().(VariableAccess).getLocation().isBefore(target_2.getLValue().(VariableAccess).getLocation())
		and target_22.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Parameter vdata_3926, ValueFieldAccess target_4) {
		target_4.getTarget().getName()="headerb"
		and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
}

predicate func_5(Parameter vdata_3926, PointerFieldAccess target_5) {
		target_5.getTarget().getName()="req"
		and target_5.getQualifier().(VariableAccess).getTarget()=vdata_3926
}

predicate func_6(Parameter vdata_3926, PointerFieldAccess target_6) {
		target_6.getTarget().getName()="req"
		and target_6.getQualifier().(VariableAccess).getTarget()=vdata_3926
}

predicate func_7(Parameter vdata_3926, FunctionCall target_7) {
		target_7.getTarget().hasName("Curl_dyn_len")
		and target_7.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="headerb"
		and target_7.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_7.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
		and target_7.getParent().(AssignAddExpr).getRValue() = target_7
		and target_7.getParent().(AssignAddExpr).getLValue() instanceof ValueFieldAccess
}

predicate func_8(Parameter vdata_3926, VariableAccess target_8) {
		target_8.getTarget()=vdata_3926
}

predicate func_9(Variable vheaderlen_4028, VariableAccess target_9) {
		target_9.getTarget()=vheaderlen_4028
		and target_9.getParent().(AssignAddExpr).getRValue() = target_9
		and target_9.getParent().(AssignAddExpr).getLValue() instanceof ValueFieldAccess
}

predicate func_10(Parameter vdata_3926, VariableAccess target_10) {
		target_10.getTarget()=vdata_3926
}

predicate func_11(Variable vheaderlen_4028, Parameter vdata_3926, AssignAddExpr target_11) {
		target_11.getLValue().(ValueFieldAccess).getTarget().getName()="header_size"
		and target_11.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="info"
		and target_11.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
		and target_11.getRValue().(VariableAccess).getTarget()=vheaderlen_4028
}

predicate func_12(Variable vheaderlen_4028, Parameter vdata_3926, LogicalOrExpr target_18, ExprStmt target_12) {
		target_12.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getTarget().getName()="headerbytecount"
		and target_12.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="req"
		and target_12.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
		and target_12.getExpr().(AssignAddExpr).getRValue().(VariableAccess).getTarget()=vheaderlen_4028
		and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
}

predicate func_13(Parameter vdata_3926, AssignAddExpr target_13) {
		target_13.getLValue().(ValueFieldAccess).getTarget().getName()="header_size"
		and target_13.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="info"
		and target_13.getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
		and target_13.getRValue() instanceof FunctionCall
}

predicate func_14(Parameter vdata_3926, ExprStmt target_14) {
		target_14.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getTarget().getName()="headerbytecount"
		and target_14.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="req"
		and target_14.getExpr().(AssignAddExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
		and target_14.getExpr().(AssignAddExpr).getRValue().(FunctionCall).getTarget().hasName("Curl_dyn_len")
		and target_14.getExpr().(AssignAddExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand() instanceof ValueFieldAccess
}

predicate func_15(Variable vresult_3931, ReturnStmt target_15) {
		target_15.getExpr().(VariableAccess).getTarget()=vresult_3931
}

predicate func_16(Variable vresult_3931, Variable vheaderlen_4028, Parameter vdata_3926, ExprStmt target_16) {
		target_16.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_3931
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("Curl_client_write")
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_3926
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("Curl_dyn_ptr")
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="headerb"
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_16.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vheaderlen_4028
}

predicate func_17(Parameter vdata_3926, AddressOfExpr target_17) {
		target_17.getOperand().(ValueFieldAccess).getTarget().getName()="headerb"
		and target_17.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_17.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
}

predicate func_18(LogicalOrExpr target_18) {
		target_18.getAnOperand().(EqualityOperation).getAnOperand().(HexLiteral).getValue()="10"
		and target_18.getAnOperand().(EqualityOperation).getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("char *")
		and target_18.getAnOperand().(EqualityOperation).getAnOperand().(HexLiteral).getValue()="13"
		and target_18.getAnOperand().(EqualityOperation).getAnOperand().(PointerDereferenceExpr).getOperand().(VariableAccess).getTarget().getType().hasName("char *")
}

predicate func_19(Variable vresult_3931, Parameter vdata_3926, ExprStmt target_19) {
		target_19.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_3931
		and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("Curl_http_auth_act")
		and target_19.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdata_3926
}

predicate func_20(Variable vresult_3931, IfStmt target_20) {
		target_20.getCondition().(VariableAccess).getTarget()=vresult_3931
		and target_20.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=vresult_3931
}

predicate func_21(Variable vresult_3931, ReturnStmt target_21) {
		target_21.getExpr().(VariableAccess).getTarget()=vresult_3931
}

predicate func_22(Parameter vdata_3926, AddressOfExpr target_22) {
		target_22.getOperand().(ValueFieldAccess).getTarget().getName()="headerb"
		and target_22.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="state"
		and target_22.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdata_3926
}

from Function func, Variable vresult_3931, Variable vheaderlen_4028, Parameter vdata_3926, ValueFieldAccess target_4, PointerFieldAccess target_5, PointerFieldAccess target_6, FunctionCall target_7, VariableAccess target_8, VariableAccess target_9, VariableAccess target_10, AssignAddExpr target_11, ExprStmt target_12, AssignAddExpr target_13, ExprStmt target_14, ReturnStmt target_15, ExprStmt target_16, AddressOfExpr target_17, LogicalOrExpr target_18, ExprStmt target_19, IfStmt target_20, ReturnStmt target_21, AddressOfExpr target_22
where
not func_0(vresult_3931, vheaderlen_4028, vdata_3926, target_15, target_16, target_12, target_17)
and not func_1(vresult_3931, target_18, target_19, target_20)
and not func_2(vresult_3931, vdata_3926, target_21, target_22)
and func_4(vdata_3926, target_4)
and func_5(vdata_3926, target_5)
and func_6(vdata_3926, target_6)
and func_7(vdata_3926, target_7)
and func_8(vdata_3926, target_8)
and func_9(vheaderlen_4028, target_9)
and func_10(vdata_3926, target_10)
and func_11(vheaderlen_4028, vdata_3926, target_11)
and func_12(vheaderlen_4028, vdata_3926, target_18, target_12)
and func_13(vdata_3926, target_13)
and func_14(vdata_3926, target_14)
and func_15(vresult_3931, target_15)
and func_16(vresult_3931, vheaderlen_4028, vdata_3926, target_16)
and func_17(vdata_3926, target_17)
and func_18(target_18)
and func_19(vresult_3931, vdata_3926, target_19)
and func_20(vresult_3931, target_20)
and func_21(vresult_3931, target_21)
and func_22(vdata_3926, target_22)
and vresult_3931.getType().hasName("CURLcode")
and vheaderlen_4028.getType().hasName("size_t")
and vdata_3926.getType().hasName("Curl_easy *")
and vresult_3931.(LocalVariable).getFunction() = func
and vheaderlen_4028.(LocalVariable).getFunction() = func
and vdata_3926.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
