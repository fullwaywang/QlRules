/**
 * @name cpython-71a9c65e74a70b6ed39adc4ba81d311ac1aa2acc-PyMemoTable_Set
 * @id cpp/cpython/71a9c65e74a70b6ed39adc4ba81d311ac1aa2acc/pymemotable-set
 * @description cpython-71a9c65e74a70b6ed39adc4ba81d311ac1aa2acc-Modules/_pickle.c-PyMemoTable_Set CVE-2018-20406
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="1"
		and not target_0.getValue()="3"
		and target_0.getParent().(AddExpr).getParent().(MulExpr).getLeftOperand() instanceof AddExpr
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vself_881, ReturnStmt target_5, NotExpr target_10) {
	exists(LogicalAndExpr target_1 |
		target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(DivExpr).getValue()="6148914691236517205"
		and target_1.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_1.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_881
		and target_1.getAnOperand().(RelationalOperation).getLesserOperand() instanceof MulExpr
		and target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(MulExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="mt_allocated"
		and target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(MulExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_881
		and target_1.getAnOperand().(RelationalOperation).getGreaterOperand().(MulExpr).getRightOperand() instanceof Literal
		and target_1.getParent().(IfStmt).getThen()=target_5
		and target_10.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_2(Function func) {
	exists(DivExpr target_2 |
		target_2.getValue()="6148914691236517205"
		and target_2.getEnclosingFunction() = func)
}

*/
/*predicate func_3(Parameter vself_881, NotExpr target_10, FunctionCall target_12) {
	exists(PointerFieldAccess target_3 |
		target_3.getTarget().getName()="mt_used"
		and target_3.getQualifier().(VariableAccess).getTarget()=vself_881
		and target_10.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getQualifier().(VariableAccess).getLocation())
		and target_3.getQualifier().(VariableAccess).getLocation().isBefore(target_12.getArgument(0).(VariableAccess).getLocation()))
}

*/
predicate func_5(NotExpr target_10, Function func, ReturnStmt target_5) {
		target_5.getExpr().(Literal).getValue()="0"
		and target_5.getParent().(IfStmt).getCondition()=target_10
		and target_5.getEnclosingFunction() = func
}

predicate func_6(Parameter vself_881, MulExpr target_6) {
		target_6.getLeftOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_6.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_881
		and target_6.getRightOperand().(Literal).getValue()="3"
}

predicate func_7(Parameter vself_881, MulExpr target_7) {
		target_7.getLeftOperand().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_7.getLeftOperand().(ConditionalExpr).getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_881
		and target_7.getLeftOperand().(ConditionalExpr).getCondition().(RelationalOperation).getLesserOperand().(Literal).getValue()="50000"
		and target_7.getLeftOperand().(ConditionalExpr).getThen().(Literal).getValue()="2"
		and target_7.getLeftOperand().(ConditionalExpr).getElse().(Literal).getValue()="4"
		and target_7.getRightOperand().(PointerFieldAccess).getTarget().getName()="mt_used"
		and target_7.getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_881
		and target_7.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("_PyMemoTable_ResizeTable")
		and target_7.getParent().(FunctionCall).getParent().(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vself_881
}

predicate func_8(Parameter vself_881, VariableAccess target_8) {
		target_8.getTarget()=vself_881
}

predicate func_10(Parameter vself_881, ReturnStmt target_5, NotExpr target_10) {
		target_10.getOperand().(RelationalOperation).getGreaterOperand() instanceof MulExpr
		and target_10.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="mt_mask"
		and target_10.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_881
		and target_10.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getLeftOperand().(AddExpr).getAnOperand() instanceof Literal
		and target_10.getOperand().(RelationalOperation).getLesserOperand().(MulExpr).getRightOperand() instanceof Literal
		and target_10.getParent().(IfStmt).getThen()=target_5
}

/*predicate func_11(Parameter vself_881, MulExpr target_11) {
		target_11.getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="mt_mask"
		and target_11.getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vself_881
		and target_11.getLeftOperand().(AddExpr).getAnOperand() instanceof Literal
		and target_11.getRightOperand() instanceof Literal
}

*/
predicate func_12(Parameter vself_881, FunctionCall target_12) {
		target_12.getTarget().hasName("_PyMemoTable_ResizeTable")
		and target_12.getArgument(0).(VariableAccess).getTarget()=vself_881
		and target_12.getArgument(1) instanceof MulExpr
}

from Function func, Parameter vself_881, Literal target_0, ReturnStmt target_5, MulExpr target_6, MulExpr target_7, VariableAccess target_8, NotExpr target_10, FunctionCall target_12
where
func_0(func, target_0)
and not func_1(vself_881, target_5, target_10)
and func_5(target_10, func, target_5)
and func_6(vself_881, target_6)
and func_7(vself_881, target_7)
and func_8(vself_881, target_8)
and func_10(vself_881, target_5, target_10)
and func_12(vself_881, target_12)
and vself_881.getType().hasName("PyMemoTable *")
and vself_881.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
