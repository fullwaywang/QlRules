/**
 * @name linux-531dc6780d94245af037c25c2371c8caf652f0f9-event_enable_write
 * @id cpp/linux/531dc6780d94245af037c25c2371c8caf652f0f9/event-enable-write
 * @description linux-531dc6780d94245af037c25c2371c8caf652f0f9-kernel/trace/trace_events.c-event_enable_write CVE-2024-43891
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfilp_1411, Variable vfile_1414) {
exists(FunctionCall target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget()=vfile_1414
	)
	and target_0.getTarget().hasName("event_file_file")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vfilp_1411
)
}

predicate func_1(Parameter vfilp_1411, VariableAccess target_1) {
	target_1.getTarget()=vfilp_1411
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_2(Variable vfile_1414, VariableAccess target_2) {
	exists(LogicalAndExpr obj_0 | obj_0=target_2.getParent() |
		exists(NotExpr obj_1 | obj_1=obj_0.getParent() |
			exists(NotExpr obj_2 | obj_2=obj_1.getParent() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getParent() |
					exists(IfStmt obj_4 | obj_4=obj_3.getParent() |
						exists(FunctionCall obj_5 | obj_5=obj_4.getCondition() |
							obj_5.getTarget().hasName("__builtin_expect")
							and obj_5.getArgument(1).(Literal).getValue()="1"
						)
					)
				)
			)
		)
	)
	and target_2.getTarget()=vfile_1414
}

predicate func_3(Parameter vfilp_1411, Variable vfile_1414, FunctionCall target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getParent() |
		obj_0.getRValue() = target_3
		and obj_0.getLValue().(VariableAccess).getTarget()=vfile_1414
	)
	and target_3.getTarget().hasName("event_file_data")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vfilp_1411
}

predicate func_4(Variable vfile_1414, LogicalAndExpr target_4) {
	exists(NotExpr obj_0 | obj_0=target_4.getRightOperand() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().getName()="flags"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfile_1414
			)
		)
	)
	and exists(NotExpr obj_3 | obj_3=target_4.getParent() |
		exists(NotExpr obj_4 | obj_4=obj_3.getParent() |
			exists(FunctionCall obj_5 | obj_5=obj_4.getParent() |
				exists(IfStmt obj_6 | obj_6=obj_5.getParent() |
					exists(FunctionCall obj_7 | obj_7=obj_6.getCondition() |
						obj_7.getTarget().hasName("__builtin_expect")
						and obj_7.getArgument(1).(Literal).getValue()="1"
					)
				)
			)
		)
	)
	and target_4.getLeftOperand().(VariableAccess).getTarget()=vfile_1414
}

from Function func, Parameter vfilp_1411, Variable vfile_1414, VariableAccess target_1, VariableAccess target_2, FunctionCall target_3, LogicalAndExpr target_4
where
not func_0(vfilp_1411, vfile_1414)
and func_1(vfilp_1411, target_1)
and func_2(vfile_1414, target_2)
and func_3(vfilp_1411, vfile_1414, target_3)
and func_4(vfile_1414, target_4)
and vfilp_1411.getType().hasName("file *")
and vfile_1414.getType().hasName("trace_event_file *")
and vfilp_1411.getFunction() = func
and vfile_1414.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
