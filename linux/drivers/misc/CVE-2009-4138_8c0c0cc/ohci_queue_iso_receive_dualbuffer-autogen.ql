/**
 * @name linux-8c0c0cc2d9f4c523fde04bdfe41e4380dec8ee54-ohci_queue_iso_receive_dualbuffer
 * @id cpp/linux/8c0c0cc2d9f4c523fde04bdfe41e4380dec8ee54/ohci-queue-iso-receive-dualbuffer
 * @description linux-8c0c0cc2d9f4c523fde04bdfe41e4380dec8ee54-drivers/firewire/ohci.c-ohci_queue_iso_receive_dualbuffer CVE-2009-4138
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrest_2169, ExprStmt target_1, RelationalOperation target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vrest_2169
		and target_0.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_2.getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_1(Variable vrest_2169, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrest_2169
		and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="payload_length"
		and target_1.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("fw_iso_packet *")
}

predicate func_2(Variable vrest_2169, RelationalOperation target_2) {
		 (target_2 instanceof GTExpr or target_2 instanceof LTExpr)
		and target_2.getGreaterOperand().(VariableAccess).getTarget()=vrest_2169
		and target_2.getLesserOperand().(Literal).getValue()="0"
}

from Function func, Variable vrest_2169, ExprStmt target_1, RelationalOperation target_2
where
not func_0(vrest_2169, target_1, target_2, func)
and func_1(vrest_2169, target_1)
and func_2(vrest_2169, target_2)
and vrest_2169.getType().hasName("u32")
and vrest_2169.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
