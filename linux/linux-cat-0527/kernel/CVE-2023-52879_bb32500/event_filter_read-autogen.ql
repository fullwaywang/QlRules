/**
 * @name linux-bb32500fb9b78215e4ef6ee8b4345c5f5d7eafb4-event_filter_read
 * @id cpp/linux/bb32500fb9b78215e4ef6ee8b4345c5f5d7eafb4/event-filter-read
 * @description linux-bb32500fb9b78215e4ef6ee8b4345c5f5d7eafb4-kernel/trace/trace_events.c-event_filter_read CVE-2023-52879
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfile_1670, ExprStmt target_2, IfStmt target_3) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand().(VariableAccess).getTarget()=vfile_1670
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getRightOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_1670
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getLeftOperand().(VariableAccess).getLocation().isBefore(target_3.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Variable vfile_1670, ExprStmt target_2, VariableAccess target_1) {
	target_1.getTarget()=vfile_1670
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vfile_1670, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("print_event_filter")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_1670
	and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("trace_seq *")
}

predicate func_3(Variable vfile_1670, IfStmt target_3) {
	target_3.getCondition().(VariableAccess).getTarget()=vfile_1670
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("print_event_filter")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_1670
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("trace_seq *")
}

from Function func, Variable vfile_1670, VariableAccess target_1, ExprStmt target_2, IfStmt target_3
where
not func_0(vfile_1670, target_2, target_3)
and func_1(vfile_1670, target_2, target_1)
and func_2(vfile_1670, target_2)
and func_3(vfile_1670, target_3)
and vfile_1670.getType().hasName("trace_event_file *")
and vfile_1670.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
