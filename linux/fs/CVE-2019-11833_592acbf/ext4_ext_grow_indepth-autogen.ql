/**
 * @name linux-592acbf16821288ecdc4192c47e3774a4c48bb64-ext4_ext_grow_indepth
 * @id cpp/linux/592acbf16821288ecdc4192c47e3774a4c48bb64/ext4-ext-grow-indepth
 * @description linux-592acbf16821288ecdc4192c47e3774a4c48bb64-fs/ext4/extents.c-ext4_ext_grow_indepth CVE-2019-11833
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getType().hasName("size_t")
	and target_0.getRValue() instanceof SizeofExprOperator
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vbh_1269, ExprStmt target_5, ExprStmt target_6, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("__memmove")
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="b_data"
	and target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbh_1269
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="i_data"
	and target_1.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getType().hasName("size_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_5.getLocation())
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vinode_1265, Variable vbh_1269, ExprStmt target_5, FunctionCall target_7, ExprStmt target_8, Function func) {
exists(ExprStmt target_3 |
	target_3.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="b_data"
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbh_1269
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getRightOperand().(VariableAccess).getType().hasName("size_t")
	and target_3.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getExpr().(FunctionCall).getArgument(2).(SubExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="s_blocksize"
	and target_3.getExpr().(FunctionCall).getArgument(2).(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_3.getExpr().(FunctionCall).getArgument(2).(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_1265
	and target_3.getExpr().(FunctionCall).getArgument(2).(SubExpr).getRightOperand().(VariableAccess).getType().hasName("size_t")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getLocation().isBefore(target_5.getLocation())
	and target_3.getExpr().(FunctionCall).getArgument(2).(SubExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_7.getArgument(0).(VariableAccess).getLocation())
	and target_8.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(0).(PointerArithmeticOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Function func, SizeofExprOperator target_4) {
	target_4.getValue()="60"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vbh_1269, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ext4_extent_header *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext_block_hdr")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbh_1269
}

predicate func_6(Variable vbh_1269, VariableAccess target_9, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("unlock_buffer")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbh_1269
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_7(Parameter vinode_1265, ExprStmt target_10, FunctionCall target_7) {
	target_7.getTarget().hasName("ext_depth")
	and target_7.getArgument(0).(VariableAccess).getTarget()=vinode_1265
	and target_7.getParent().(IfStmt).getThen()=target_10
}

predicate func_8(Variable vbh_1269, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("__memmove")
	and target_8.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="b_data"
	and target_8.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vbh_1269
	and target_8.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="i_data"
	and target_8.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_8.getExpr().(FunctionCall).getArgument(2) instanceof SizeofExprOperator
}

predicate func_9(Variable verr_1272, BlockStmt target_11, VariableAccess target_9) {
	target_9.getTarget()=verr_1272
	and target_9.getParent().(IfStmt).getThen()=target_11
}

predicate func_10(Parameter vinode_1265, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="eh_max"
	and target_10.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_extent_header *")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ext4_ext_space_block_idx")
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_1265
	and target_10.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_11(Variable vbh_1269, BlockStmt target_11) {
	target_11.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("unlock_buffer")
	and target_11.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbh_1269
	and target_11.getStmt(1).(GotoStmt).getName() ="out"
}

from Function func, Parameter vinode_1265, Variable vbh_1269, Variable verr_1272, SizeofExprOperator target_4, ExprStmt target_5, ExprStmt target_6, FunctionCall target_7, ExprStmt target_8, VariableAccess target_9, ExprStmt target_10, BlockStmt target_11
where
not func_0(func)
and not func_1(vbh_1269, target_5, target_6, func)
and not func_3(vinode_1265, vbh_1269, target_5, target_7, target_8, func)
and func_4(func, target_4)
and func_5(vbh_1269, target_5)
and func_6(vbh_1269, target_9, target_6)
and func_7(vinode_1265, target_10, target_7)
and func_8(vbh_1269, target_8)
and func_9(verr_1272, target_11, target_9)
and func_10(vinode_1265, target_10)
and func_11(vbh_1269, target_11)
and vinode_1265.getType().hasName("inode *")
and vbh_1269.getType().hasName("buffer_head *")
and verr_1272.getType().hasName("int")
and vinode_1265.getFunction() = func
and vbh_1269.(LocalVariable).getFunction() = func
and verr_1272.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
