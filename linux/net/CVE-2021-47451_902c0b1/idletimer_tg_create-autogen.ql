/**
 * @name linux-902c0b1887522a099aa4e1e6b4b476c2fe5dd13e-idletimer_tg_create
 * @id cpp/linux/902c0b1887522a099aa4e1e6b4b476c2fe5dd13e/idletimer-tg-create
 * @description linux-902c0b1887522a099aa4e1e6b4b476c2fe5dd13e-net/netfilter/xt_IDLETIMER.c-idletimer_tg_create CVE-2021-47451
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("kmalloc")
	and not target_0.getTarget().hasName("kzalloc")
	and target_0.getArgument(0).(SizeofExprOperator).getValue()="376"
	and target_0.getArgument(1).(BitwiseOrExpr).getValue()="3264"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="timer"
	and target_0.getParent().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("idletimer_tg_info *")
	and target_0.getEnclosingFunction() = func
}

from Function func, FunctionCall target_0
where
func_0(func, target_0)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
