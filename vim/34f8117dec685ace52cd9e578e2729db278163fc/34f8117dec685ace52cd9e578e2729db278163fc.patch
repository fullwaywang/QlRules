commit 34f8117dec685ace52cd9e578e2729db278163fc
Author: Bram Moolenaar <Bram@vim.org>
Date:   Wed Feb 16 12:16:19 2022 +0000

    patch 8.2.4397: crash when using many composing characters in error message
    
    Problem:    Crash when using many composing characters in error message.
    Solution:   Use mb_cptr2char_adv() instead of mb_ptr2char_adv().

diff --git a/src/testdir/test_assert.vim b/src/testdir/test_assert.vim
index 8987f3f8d..27b2d73fb 100644
--- a/src/testdir/test_assert.vim
+++ b/src/testdir/test_assert.vim
@@ -53,6 +53,14 @@ func Test_assert_equal()
   call assert_equal("\b\e\f\n\t\r\\\x01\x7f", 'x')
   call assert_match('Expected ''\\b\\e\\f\\n\\t\\r\\\\\\x01\\x7f'' but got ''x''', v:errors[0])
   call remove(v:errors, 0)
+
+  " many composing characters are handled properly
+  call setline(1, ' ')
+  norm 100gr›Ä
+  call assert_equal(1, getline(1))
+  call assert_match("Expected 1 but got '.* occurs 100 times]'", v:errors[0])
+  call remove(v:errors, 0)
+  bwipe!
 endfunc
 
 func Test_assert_equal_dict()
diff --git a/src/testing.c b/src/testing.c
index 448c01c1e..48ba14d2c 100644
--- a/src/testing.c
+++ b/src/testing.c
@@ -101,7 +101,7 @@ ga_concat_shorten_esc(garray_T *gap, char_u *str)
     {
 	same_len = 1;
 	s = p;
-	c = mb_ptr2char_adv(&s);
+	c = mb_cptr2char_adv(&s);
 	clen = s - p;
 	while (*s != NUL && c == mb_ptr2char(s))
 	{
diff --git a/src/version.c b/src/version.c
index fb1b8476e..b4983661c 100644
--- a/src/version.c
+++ b/src/version.c
@@ -750,6 +750,8 @@ static char *(features[]) =
 
 static int included_patches[] =
 {   /* Add new patch number below this line */
+/**/
+    4397,
 /**/
     4396,
 /**/
