/**
 * @name linux-4fa4302d6dc7de7e8e74dc7405611a2efb4bf54b-cxl_region_decode_commit
 * @id cpp/linux/4fa4302d6dc7de7e8e74dc7405611a2efb4bf54b/cxl-region-decode-commit
 * @description linux-4fa4302d6dc7de7e8e74dc7405611a2efb4bf54b-drivers/cxl/core/region.c-cxl_region_decode_commit CVE-2022-48707
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vcxld_168, ExprStmt target_1, ExprStmt target_2) {
exists(IfStmt target_0 |
	target_0.getCondition().(PointerFieldAccess).getTarget().getName()="reset"
	and target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcxld_168
	and target_0.getThen() instanceof ExprStmt
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vcxld_168, ExprStmt target_1) {
	target_1.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="reset"
	and target_1.getExpr().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcxld_168
	and target_1.getExpr().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vcxld_168
}

predicate func_2(Variable vcxld_168, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcxld_168
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="decoder"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("cxl_region_ref *")
}

from Function func, Variable vcxld_168, ExprStmt target_1, ExprStmt target_2
where
not func_0(vcxld_168, target_1, target_2)
and func_1(vcxld_168, target_1)
and func_2(vcxld_168, target_2)
and vcxld_168.getType().hasName("cxl_decoder *")
and vcxld_168.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
