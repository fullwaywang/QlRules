/**
 * @name v8-d125c7329f6e22af4523de3c55de3a22f168acc9-v8__internal__JSObject__DefineOwnPropertyIgnoreAttributes_
 * @id cpp/v8/d125c7329f6e22af4523de3c55de3a22f168acc9/v8internaljsobjectdefineownpropertyignoreattributes
 * @description v8-d125c7329f6e22af4523de3c55de3a22f168acc9-src/objects/objects.cc-v8__internal__JSObject__DefineOwnPropertyIgnoreAttributes_ CVE-2023-2935
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="3758"
	and not target_0.getValue()="3756"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="../../src/objects/js-objects.cc"
	and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="!it->IsElement() || !Handle<JSObject>::cast(it->GetReceiver()) ->HasTypedArrayOrRabGsabTypedArrayElements()"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable visolate_3711, Variable vreceiver_3712, Variable vc_3713, Parameter vit_3652) {
exists(FunctionCall target_1 |
	target_1.getTarget().hasName("GetKey")
	and target_1.getQualifier().(VariableAccess).getTarget()=vit_3652
	and target_1.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_3711
	and target_1.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(1).(VariableAccess).getTarget()=vreceiver_3712
	and target_1.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(2) instanceof FunctionCall
	and target_1.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(3).(VariableAccess).getTarget()=vc_3713)
}

predicate func_2(Parameter vit_3652, VariableAccess target_2) {
	target_2.getTarget()=vit_3652
}

predicate func_6(Variable visolate_3711, Variable vreceiver_3712, Variable vc_3713, Parameter vit_3652, ConditionalExpr target_6) {
	target_6.getCondition().(FunctionCall).getTarget().hasName("IsElement")
	and target_6.getCondition().(FunctionCall).getQualifier().(VariableAccess).getTarget()=vit_3652
	and target_6.getThen().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_3711
	and target_6.getThen().(ConstructorCall).getArgument(1).(VariableAccess).getTarget()=vreceiver_3712
	and target_6.getThen().(ConstructorCall).getArgument(2).(FunctionCall).getTarget().hasName("index")
	and target_6.getThen().(ConstructorCall).getArgument(2).(FunctionCall).getQualifier().(VariableAccess).getTarget()=vit_3652
	and target_6.getThen().(ConstructorCall).getArgument(3).(VariableAccess).getTarget()=vc_3713
	and target_6.getElse().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_3711
	and target_6.getElse().(ConstructorCall).getArgument(1).(VariableAccess).getTarget()=vreceiver_3712
	and target_6.getElse().(ConstructorCall).getArgument(2).(FunctionCall).getTarget().hasName("name")
	and target_6.getElse().(ConstructorCall).getArgument(2).(FunctionCall).getQualifier().(VariableAccess).getTarget()=vit_3652
	and target_6.getElse().(ConstructorCall).getArgument(3).(VariableAccess).getTarget()=vc_3713
}

/*predicate func_7(Variable visolate_3711, Variable vreceiver_3712, Variable vc_3713, Parameter vit_3652, FunctionCall target_7) {
	target_7.getTarget().hasName("index")
	and target_7.getQualifier().(VariableAccess).getTarget()=vit_3652
	and target_7.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_3711
	and target_7.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(1).(VariableAccess).getTarget()=vreceiver_3712
	and target_7.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(3).(VariableAccess).getTarget()=vc_3713
}

*/
/*predicate func_8(Variable visolate_3711, Variable vreceiver_3712, Variable vc_3713, Parameter vit_3652, ConditionalExpr target_6, FunctionCall target_12, VariableAccess target_8) {
	target_8.getTarget()=vc_3713
	and target_8.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(0).(VariableAccess).getTarget()=visolate_3711
	and target_8.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(1).(VariableAccess).getTarget()=vreceiver_3712
	and target_8.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(2).(FunctionCall).getTarget().hasName("index")
	and target_8.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(2).(FunctionCall).getQualifier().(VariableAccess).getTarget()=vit_3652
	and target_8.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getThen().(ConstructorCall).getArgument(0).(VariableAccess).getLocation())
	and target_8.getParent().(ConstructorCall).getParent().(ConditionalExpr).getThen().(ConstructorCall).getArgument(2).(FunctionCall).getQualifier().(VariableAccess).getLocation().isBefore(target_12.getQualifier().(VariableAccess).getLocation())
}

*/
predicate func_12(Parameter vit_3652, FunctionCall target_12) {
	target_12.getTarget().hasName("name")
	and target_12.getQualifier().(VariableAccess).getTarget()=vit_3652
}

from Function func, Variable visolate_3711, Variable vreceiver_3712, Variable vc_3713, Parameter vit_3652, Literal target_0, VariableAccess target_2, ConditionalExpr target_6, FunctionCall target_12
where
func_0(func, target_0)
and not func_1(visolate_3711, vreceiver_3712, vc_3713, vit_3652)
and func_2(vit_3652, target_2)
and func_6(visolate_3711, vreceiver_3712, vc_3713, vit_3652, target_6)
and func_12(vit_3652, target_12)
and visolate_3711.getType().hasName("Isolate *")
and vreceiver_3712.getType().hasName("Handle<Object>")
and vc_3713.getType().hasName("Configuration")
and vit_3652.getType().hasName("LookupIterator *")
and visolate_3711.(LocalVariable).getFunction() = func
and vreceiver_3712.(LocalVariable).getFunction() = func
and vc_3713.(LocalVariable).getFunction() = func
and vit_3652.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
