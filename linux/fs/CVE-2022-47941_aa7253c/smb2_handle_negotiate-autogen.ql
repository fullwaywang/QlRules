/**
 * @name linux-aa7253c2393f6dcd6a1468b0792f6da76edad917-smb2_handle_negotiate
 * @id cpp/linux/aa7253c2393f6dcd6a1468b0792f6da76edad917/smb2-handle-negotiate
 * @description linux-aa7253c2393f6dcd6a1468b0792f6da76edad917-fs/ksmbd/smb2pdu.c-smb2_handle_negotiate CVE-2022-47941
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vconn_1066, EqualityOperation target_4, ExprStmt target_5) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="preauth_info"
	and target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_1066
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(3)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vconn_1066, EqualityOperation target_4, ExprStmt target_6) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="preauth_info"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_1066
	and target_1.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vconn_1066, RelationalOperation target_7, ExprStmt target_6) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="preauth_info"
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_1066
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vconn_1066, RelationalOperation target_7, ExprStmt target_8) {
exists(ExprStmt target_3 |
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="preauth_info"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_1066
	and target_3.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Function func, EqualityOperation target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget().getType().hasName("__le32")
	and target_4.getRightOperand().(Literal).getValue()="0"
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vconn_1066, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("__le32")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("deassemble_neg_contexts")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vconn_1066
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("smb2_negotiate_req *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getTarget().hasName("get_rfc1002_len")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="request_buf"
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ksmbd_work *")
}

predicate func_6(Variable vconn_1066, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("init_smb3_11_server")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vconn_1066
}

predicate func_7(BlockStmt target_9, Function func, RelationalOperation target_7) {
	 (target_7 instanceof GTExpr or target_7 instanceof LTExpr)
	and target_7.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_7.getGreaterOperand().(Literal).getValue()="0"
	and target_7.getParent().(IfStmt).getThen()=target_9
	and target_7.getEnclosingFunction() = func
}

predicate func_8(Variable vconn_1066, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("ksmbd_gen_preauth_integrity_hash")
	and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vconn_1066
	and target_8.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="request_buf"
	and target_8.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ksmbd_work *")
	and target_8.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="Preauth_HashValue"
	and target_8.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="preauth_info"
	and target_8.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_1066
}

predicate func_9(Function func, BlockStmt target_9) {
	target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="Status"
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="hdr"
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("smb2_negotiate_rsp *")
	and target_9.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="3221225485"
	and target_9.getStmt(1).(GotoStmt).getName() ="err_out"
	and target_9.getEnclosingFunction() = func
}

from Function func, Variable vconn_1066, EqualityOperation target_4, ExprStmt target_5, ExprStmt target_6, RelationalOperation target_7, ExprStmt target_8, BlockStmt target_9
where
not func_0(vconn_1066, target_4, target_5)
and not func_1(vconn_1066, target_4, target_6)
and not func_2(vconn_1066, target_7, target_6)
and not func_3(vconn_1066, target_7, target_8)
and func_4(func, target_4)
and func_5(vconn_1066, target_5)
and func_6(vconn_1066, target_6)
and func_7(target_9, func, target_7)
and func_8(vconn_1066, target_8)
and func_9(func, target_9)
and vconn_1066.getType().hasName("ksmbd_conn *")
and vconn_1066.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
