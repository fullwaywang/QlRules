/**
 * @name linux-ad5d07f4a9cd671233ae20983848874731102c08-calipso_doi_remove
 * @id cpp/linux/ad5d07f4a9cd671233ae20983848874731102c08/calipso-doi-remove
 * @description linux-ad5d07f4a9cd671233ae20983848874731102c08-net/ipv6/calipso.c-calipso_doi_remove CVE-2021-33033
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("spin_unlock")
	and not target_0.getTarget().hasName("calipso_doi_putdef")
	and target_0.getArgument(0) instanceof AddressOfExpr
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vcalipso_doi_list_lock, AddressOfExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=vcalipso_doi_list_lock
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vdoi_def_437, VariableAccess target_2) {
	target_2.getTarget()=vdoi_def_437
	and target_2.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_3(Variable vret_val_436, Variable vdoi_def_437, Function func, IfStmt target_3) {
	target_3.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("refcount_dec_and_test")
	and target_3.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="refcount"
	and target_3.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdoi_def_437
	and target_3.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_val_436
	and target_3.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-16"
	and target_3.getThen().(BlockStmt).getStmt(2).(GotoStmt).getName() ="doi_remove_return"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

/*predicate func_4(NotExpr target_8, Function func, ExprStmt target_4) {
	target_4.getExpr() instanceof FunctionCall
	and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_4.getEnclosingFunction() = func
}

*/
/*predicate func_5(Variable vret_val_436, AssignExpr target_5) {
	target_5.getLValue().(VariableAccess).getTarget()=vret_val_436
	and target_5.getRValue().(UnaryMinusExpr).getValue()="-16"
}

*/
/*predicate func_6(NotExpr target_8, Function func, GotoStmt target_6) {
	target_6.getName() ="doi_remove_return"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8
	and target_6.getEnclosingFunction() = func
}

*/
predicate func_7(Variable vdoi_def_437, Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("call_rcu")
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rcu"
	and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdoi_def_437
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Function func, NotExpr target_8) {
	target_8.getOperand() instanceof FunctionCall
	and target_8.getEnclosingFunction() = func
}

from Function func, Variable vret_val_436, Variable vdoi_def_437, Variable vcalipso_doi_list_lock, FunctionCall target_0, AddressOfExpr target_1, VariableAccess target_2, IfStmt target_3, ExprStmt target_7, NotExpr target_8
where
func_0(func, target_0)
and func_1(vcalipso_doi_list_lock, target_1)
and func_2(vdoi_def_437, target_2)
and func_3(vret_val_436, vdoi_def_437, func, target_3)
and func_7(vdoi_def_437, func, target_7)
and func_8(func, target_8)
and vret_val_436.getType().hasName("int")
and vdoi_def_437.getType().hasName("calipso_doi *")
and vcalipso_doi_list_lock.getType().hasName("spinlock_t")
and vret_val_436.(LocalVariable).getFunction() = func
and vdoi_def_437.(LocalVariable).getFunction() = func
and not vcalipso_doi_list_lock.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
