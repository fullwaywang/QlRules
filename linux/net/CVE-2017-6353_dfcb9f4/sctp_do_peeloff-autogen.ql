/**
 * @name linux-dfcb9f4f99f1e9a49e43398a7bfbf56927544af1-sctp_do_peeloff
 * @id cpp/linux/dfcb9f4f99f1e9a49e43398a7bfbf56927544af1/sctp-do-peeloff
 * @description linux-dfcb9f4f99f1e9a49e43398a7bfbf56927544af1-net/sctp/socket.c-sctp_do_peeloff CVE-2017-6353
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vasoc_4857, IfStmt target_1, NotExpr target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(FunctionCall).getTarget().hasName("waitqueue_active")
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="wait"
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vasoc_4857
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("__sctp_style")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vasoc_4857, NotExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vasoc_4857
}

predicate func_3(Variable vasoc_4857, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("sctp_copy_sock")
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="sk"
	and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("socket *")
	and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sock *")
	and target_3.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vasoc_4857
}

from Function func, Variable vasoc_4857, IfStmt target_1, NotExpr target_2, ExprStmt target_3
where
not func_0(vasoc_4857, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vasoc_4857, target_2)
and func_3(vasoc_4857, target_3)
and vasoc_4857.getType().hasName("sctp_association *")
and vasoc_4857.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
