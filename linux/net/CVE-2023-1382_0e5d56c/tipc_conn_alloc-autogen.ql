/**
 * @name linux-0e5d56c64afcd6fd2d132ea972605b66f8a7d3c4-tipc_conn_alloc
 * @id cpp/linux/0e5d56c64afcd6fd2d132ea972605b66f8a7d3c4/tipc-conn-alloc
 * @description linux-0e5d56c64afcd6fd2d132ea972605b66f8a7d3c4-net/tipc/topsrv.c-tipc_conn_alloc CVE-2023-1382
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vs_179, ExprStmt target_2, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("spin_unlock_bh")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="idr_lock"
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vs_179
	and target_0.getLocation().isBefore(target_2.getLocation())
}

predicate func_1(Variable vcon_181, ExprStmt target_3, AddressOfExpr target_4, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sock"
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcon_181
	and target_1.getExpr().(AssignExpr).getRValue().(VariableAccess).getType().hasName("socket *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vcon_181, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_2.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="1"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcon_181
}

predicate func_3(Parameter vs_179, Variable vcon_181, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="server"
	and target_3.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcon_181
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vs_179
}

predicate func_4(Variable vcon_181, AddressOfExpr target_4) {
	target_4.getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcon_181
}

from Function func, Parameter vs_179, Variable vcon_181, ExprStmt target_0, ExprStmt target_2, ExprStmt target_3, AddressOfExpr target_4
where
func_0(vs_179, target_2, target_0)
and not func_1(vcon_181, target_3, target_4, func)
and func_2(vcon_181, target_2)
and func_3(vs_179, vcon_181, target_3)
and func_4(vcon_181, target_4)
and vs_179.getType().hasName("tipc_topsrv *")
and vcon_181.getType().hasName("tipc_conn *")
and vs_179.getFunction() = func
and vcon_181.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
