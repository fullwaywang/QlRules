/**
 * @name linux-50b1a782f845140f4138f14a1ce8a4a6dd0cc82f-sctp_init_sock
 * @id cpp/linux/50b1a782f845140f4138f14a1ce8a4a6dd0cc82f/sctp-init-sock
 * @description linux-50b1a782f845140f4138f14a1ce8a4a6dd0cc82f-net/sctp/socket.c-sctp_init_sock CVE-2010-4251
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsk_3604, ExprStmt target_1, FunctionCall target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="limit"
		and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_3604
		and target_0.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayBase().(VariableAccess).getType().hasName("int[3]")
		and target_0.getExpr().(AssignExpr).getRValue().(ArrayExpr).getArrayOffset().(Literal).getValue()="1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsk_3604, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sctp_endpoint *")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sctp_endpoint_new")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_3604
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getValue()="208"
}

predicate func_2(Parameter vsk_3604, FunctionCall target_2) {
		target_2.getTarget().hasName("sock_net")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vsk_3604
}

from Function func, Parameter vsk_3604, ExprStmt target_1, FunctionCall target_2
where
not func_0(vsk_3604, target_1, target_2, func)
and func_1(vsk_3604, target_1)
and func_2(vsk_3604, target_2)
and vsk_3604.getType().hasName("sock *")
and vsk_3604.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
