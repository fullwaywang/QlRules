/**
 * @name linux-24b9bf43e93e0edd89072da51cf1fab95fc69dec-inet_frag_intern
 * @id cpp/linux/24b9bf43e93e0edd89072da51cf1fab95fc69dec/inet-frag-intern
 * @description linux-24b9bf43e93e0edd89072da51cf1fab95fc69dec-net/ipv4/inet_fragment.c-inet_frag_intern CVE-2014-0100
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vqp_246, Parameter vnf_241, ExprStmt target_1, ExprStmt target_0) {
	target_0.getExpr().(FunctionCall).getTarget().hasName("inet_frag_lru_add")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnf_241
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vqp_246
	and target_1.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("_raw_read_unlock")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("inet_frags *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

from Function func, Variable vqp_246, Parameter vnf_241, ExprStmt target_0, ExprStmt target_1
where
func_0(vqp_246, vnf_241, target_1, target_0)
and func_1(func, target_1)
and vqp_246.getType().hasName("inet_frag_queue *")
and vnf_241.getType().hasName("netns_frags *")
and vqp_246.(LocalVariable).getFunction() = func
and vnf_241.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
