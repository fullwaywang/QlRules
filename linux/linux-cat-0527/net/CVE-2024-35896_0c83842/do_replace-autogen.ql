/**
 * @name linux-0c83842df40f86e529db6842231154772c20edcc-do_replace
 * @id cpp/linux/0c83842df40f86e529db6842231154772c20edcc/do-replace
 * @description linux-0c83842df40f86e529db6842231154772c20edcc-net/bridge/netfilter/ebtables.c-do_replace CVE-2024-35896
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vlen_1108, IfStmt target_1, EqualityOperation target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_1108
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(SizeofExprOperator).getValue()="120"
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, IfStmt target_1) {
	target_1.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getTarget().hasName("copy_from_sockptr")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("ebt_replace")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("sockptr_t")
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="120"
	and target_1.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vlen_1108, EqualityOperation target_2) {
	target_2.getLeftOperand().(VariableAccess).getTarget()=vlen_1108
	and target_2.getRightOperand().(AddExpr).getLeftOperand().(SizeofExprOperator).getValue()="120"
	and target_2.getRightOperand().(AddExpr).getRightOperand().(ValueFieldAccess).getTarget().getName()="entries_size"
	and target_2.getRightOperand().(AddExpr).getRightOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ebt_replace")
}

from Function func, Parameter vlen_1108, IfStmt target_1, EqualityOperation target_2
where
not func_0(vlen_1108, target_1, target_2, func)
and func_1(func, target_1)
and func_2(vlen_1108, target_2)
and vlen_1108.getType().hasName("unsigned int")
and vlen_1108.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
