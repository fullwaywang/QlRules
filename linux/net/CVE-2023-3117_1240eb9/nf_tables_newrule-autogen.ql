/**
 * @name linux-1240eb93f0616b21c675416516ff3d74798fdc97-nf_tables_newrule
 * @id cpp/linux/1240eb93f0616b21c675416516ff3d74798fdc97/nf-tables-newrule
 * @description linux-1240eb93f0616b21c675416516ff3d74798fdc97-net/netfilter/nf_tables_api.c-nf_tables_newrule CVE-2023-3117
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrule_3640, FunctionCall target_0) {
		target_0.getTarget().hasName("nf_tables_rule_release")
		and not target_0.getTarget().hasName("nf_tables_rule_destroy")
		and target_0.getArgument(0) instanceof AddressOfExpr
		and target_0.getArgument(1).(VariableAccess).getTarget()=vrule_3640
}

predicate func_1(Variable vrule_3640, AddressOfExpr target_4, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("nft_rule_expr_deactivate")
		and target_1.getExpr().(FunctionCall).getArgument(0) instanceof AddressOfExpr
		and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrule_3640
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_3(Variable vctx_3651, AddressOfExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget()=vctx_3651
		and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_4(Variable vrule_3640, AddressOfExpr target_4) {
		target_4.getOperand().(PointerFieldAccess).getTarget().getName()="list"
		and target_4.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrule_3640
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_add_rcu")
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="rules"
		and target_4.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("nft_chain *")
}

from Function func, Variable vrule_3640, Variable vctx_3651, FunctionCall target_0, AddressOfExpr target_3, AddressOfExpr target_4
where
func_0(vrule_3640, target_0)
and not func_1(vrule_3640, target_4, func)
and func_3(vctx_3651, target_3)
and func_4(vrule_3640, target_4)
and vrule_3640.getType().hasName("nft_rule *")
and vctx_3651.getType().hasName("nft_ctx")
and vrule_3640.(LocalVariable).getFunction() = func
and vctx_3651.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
