/**
 * @name linux-1cb7fdb1dfde1aab66780b4ba44dba6402172111-ice_vsi_rebuild
 * @id cpp/linux/1cb7fdb1dfde1aab66780b4ba44dba6402172111/ice-vsi-rebuild
 * @description linux-1cb7fdb1dfde1aab66780b4ba44dba6402172111-drivers/net/ethernet/intel/ice/ice_lib.c-ice_vsi_rebuild CVE-2024-35911
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvsi_3090, Variable vcoalesce_3093, ExprStmt target_5, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcoalesce_3093
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("kcalloc")
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="num_q_vectors"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvsi_3090
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(SizeofTypeOperator).getValue()="8"
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(BitwiseOrExpr).getValue()="3264"
	and target_0.getLocation().isBefore(target_5.getLocation())
}

predicate func_1(Variable vcoalesce_3093, ExprStmt target_5, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vcoalesce_3093
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-12"
	and target_1.getLocation().isBefore(target_5.getLocation())
}

predicate func_2(Parameter vvsi_3090, Variable vcoalesce_3093, Variable vprev_num_q_vectors_3094, ExprStmt target_5, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vprev_num_q_vectors_3094
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ice_vsi_rebuild_get_coalesce")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvsi_3090
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vcoalesce_3093
	and target_2.getLocation().isBefore(target_5.getLocation())
}

predicate func_3(Variable vcoalesce_3093, LabelStmt target_6, ExprStmt target_3) {
	target_3.getExpr().(FunctionCall).getTarget().hasName("kfree")
	and target_3.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcoalesce_3093
	and target_6.getLocation().isBefore(target_3.getLocation())
}

predicate func_4(Function func, Initializer target_4) {
	target_4.getExpr().(Literal).getValue()="0"
	and target_4.getExpr().getEnclosingFunction() = func
}

predicate func_5(Parameter vvsi_3090, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ice_vsi_realloc_stat_arrays")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvsi_3090
}

predicate func_6(Function func, LabelStmt target_6) {
	target_6.getName() ="err_vsi_cfg"
	and target_6.getEnclosingFunction() = func
}

from Function func, Parameter vvsi_3090, Variable vcoalesce_3093, Variable vprev_num_q_vectors_3094, ExprStmt target_0, IfStmt target_1, ExprStmt target_2, ExprStmt target_3, Initializer target_4, ExprStmt target_5, LabelStmt target_6
where
func_0(vvsi_3090, vcoalesce_3093, target_5, target_0)
and func_1(vcoalesce_3093, target_5, target_1)
and func_2(vvsi_3090, vcoalesce_3093, vprev_num_q_vectors_3094, target_5, target_2)
and func_3(vcoalesce_3093, target_6, target_3)
and func_4(func, target_4)
and func_5(vvsi_3090, target_5)
and func_6(func, target_6)
and vvsi_3090.getType().hasName("ice_vsi *")
and vcoalesce_3093.getType().hasName("ice_coalesce_stored *")
and vprev_num_q_vectors_3094.getType().hasName("int")
and vvsi_3090.getFunction() = func
and vcoalesce_3093.(LocalVariable).getFunction() = func
and vprev_num_q_vectors_3094.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
