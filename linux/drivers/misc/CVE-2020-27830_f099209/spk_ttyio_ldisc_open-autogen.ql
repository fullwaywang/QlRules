/**
 * @name linux-f0992098cadb4c9c6a00703b66cafe604e178fea-spk_ttyio_ldisc_open
 * @id cpp/linux/f0992098cadb4c9c6a00703b66cafe604e178fea/spk-ttyio-ldisc-open
 * @description linux-f0992098cadb4c9c6a00703b66cafe604e178fea-spk_ttyio_ldisc_open CVE-2020-27830
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, UnaryMinusExpr target_0) {
		target_0.getValue()="-16"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vspeakup_tty, ExprStmt target_9, VariableAccess target_1) {
		target_1.getTarget()=vspeakup_tty
		and target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Parameter vtty_46, Variable vspeakup_tty, BlockStmt target_12, NotExpr target_13) {
	exists(EqualityOperation target_2 |
		target_2.getAnOperand().(VariableAccess).getTarget()=vtty_46
		and target_2.getAnOperand().(VariableAccess).getTarget()=vspeakup_tty
		and target_2.getParent().(IfStmt).getThen()=target_12
		and target_13.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_3(NotExpr target_14, Function func, ReturnStmt target_3) {
		target_3.getExpr().(UnaryMinusExpr).getValue()="-12"
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vspeakup_tty, BlockStmt target_12, VariableAccess target_4) {
		target_4.getTarget()=vspeakup_tty
		and target_4.getParent().(IfStmt).getThen()=target_12
}

predicate func_5(Parameter vtty_46, Variable vspeakup_tty, VariableAccess target_5) {
		target_5.getTarget()=vtty_46
		and target_5.getParent().(AssignExpr).getRValue() = target_5
		and target_5.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vspeakup_tty
}

predicate func_6(Variable vspeakup_tty_mutex, Function func, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
		and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and target_6.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable vspeakup_tty_mutex, VariableAccess target_4, AddressOfExpr target_15, AddressOfExpr target_16, ExprStmt target_7) {
		target_7.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_15.getOperand().(VariableAccess).getLocation().isBefore(target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
		and target_7.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_16.getOperand().(VariableAccess).getLocation())
}

predicate func_8(Parameter vtty_46, Variable vspeakup_tty, Function func, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vspeakup_tty
		and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vtty_46
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Variable vspeakup_tty, NotExpr target_14, ExprStmt target_9) {
		target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vspeakup_tty
		and target_9.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
		and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
}

predicate func_10(Variable vspeakup_tty_mutex, NotExpr target_14, AddressOfExpr target_17, AddressOfExpr target_18, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_14
		and target_17.getOperand().(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
		and target_10.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_18.getOperand().(VariableAccess).getLocation())
}

predicate func_11(Variable vspeakup_tty_mutex, AddressOfExpr target_16, Function func, ExprStmt target_11) {
		target_11.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
		and target_16.getOperand().(VariableAccess).getLocation().isBefore(target_11.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation())
}

predicate func_12(Function func, BlockStmt target_12) {
		target_12.getStmt(0) instanceof ExprStmt
		and target_12.getStmt(1).(ReturnStmt).getExpr() instanceof UnaryMinusExpr
		and target_12.getEnclosingFunction() = func
}

predicate func_13(Parameter vtty_46, NotExpr target_13) {
		target_13.getOperand().(PointerFieldAccess).getTarget().getName()="write"
		and target_13.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
		and target_13.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_46
}

predicate func_14(Function func, NotExpr target_14) {
		target_14.getOperand().(VariableAccess).getTarget().getType().hasName("spk_ldisc_data *")
		and target_14.getEnclosingFunction() = func
}

predicate func_15(Variable vspeakup_tty_mutex, AddressOfExpr target_15) {
		target_15.getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and target_15.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_16(Variable vspeakup_tty_mutex, AddressOfExpr target_16) {
		target_16.getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and target_16.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_17(Variable vspeakup_tty_mutex, AddressOfExpr target_17) {
		target_17.getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and target_17.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_18(Variable vspeakup_tty_mutex, AddressOfExpr target_18) {
		target_18.getOperand().(VariableAccess).getTarget()=vspeakup_tty_mutex
		and target_18.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

from Function func, Parameter vtty_46, Variable vspeakup_tty_mutex, Variable vspeakup_tty, UnaryMinusExpr target_0, VariableAccess target_1, ReturnStmt target_3, VariableAccess target_4, VariableAccess target_5, ExprStmt target_6, ExprStmt target_7, ExprStmt target_8, ExprStmt target_9, ExprStmt target_10, ExprStmt target_11, BlockStmt target_12, NotExpr target_13, NotExpr target_14, AddressOfExpr target_15, AddressOfExpr target_16, AddressOfExpr target_17, AddressOfExpr target_18
where
func_0(func, target_0)
and func_1(vspeakup_tty, target_9, target_1)
and not func_2(vtty_46, vspeakup_tty, target_12, target_13)
and func_3(target_14, func, target_3)
and func_4(vspeakup_tty, target_12, target_4)
and func_5(vtty_46, vspeakup_tty, target_5)
and func_6(vspeakup_tty_mutex, func, target_6)
and func_7(vspeakup_tty_mutex, target_4, target_15, target_16, target_7)
and func_8(vtty_46, vspeakup_tty, func, target_8)
and func_9(vspeakup_tty, target_14, target_9)
and func_10(vspeakup_tty_mutex, target_14, target_17, target_18, target_10)
and func_11(vspeakup_tty_mutex, target_16, func, target_11)
and func_12(func, target_12)
and func_13(vtty_46, target_13)
and func_14(func, target_14)
and func_15(vspeakup_tty_mutex, target_15)
and func_16(vspeakup_tty_mutex, target_16)
and func_17(vspeakup_tty_mutex, target_17)
and func_18(vspeakup_tty_mutex, target_18)
and vtty_46.getType().hasName("tty_struct *")
and vspeakup_tty_mutex.getType().hasName("mutex")
and vspeakup_tty.getType().hasName("tty_struct *")
and vtty_46.getFunction() = func
and not vspeakup_tty_mutex.getParentScope+() = func
and not vspeakup_tty.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
