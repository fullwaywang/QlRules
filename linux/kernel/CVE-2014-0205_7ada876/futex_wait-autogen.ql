/**
 * @name linux-7ada876a8703f23befbb20a7465a702ee39b1704-futex_wait
 * @id cpp/linux/7ada876a8703f23befbb20a7465a702ee39b1704/futex-wait
 * @description linux-7ada876a8703f23befbb20a7465a702ee39b1704-kernel/futex.c-futex_wait CVE-2014-0205
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(NotExpr target_3, Function func, GotoStmt target_0) {
		target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vq_1793, Parameter vfshared_1787, NotExpr target_3, AddressOfExpr target_4, ExprStmt target_6, IfStmt target_7, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("put_futex_key")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfshared_1787
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="key"
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vq_1793
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
		and target_4.getOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getCondition().(VariableAccess).getLocation())
}

predicate func_2(Variable vq_1793, Parameter vfshared_1787, IfStmt target_7, Function func, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("put_futex_key")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfshared_1787
		and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="key"
		and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vq_1793
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_7.getCondition().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_3(Function func, NotExpr target_3) {
		target_3.getOperand().(FunctionCall).getTarget().hasName("signal_pending")
		and target_3.getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("get_current")
		and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vq_1793, AddressOfExpr target_4) {
		target_4.getOperand().(VariableAccess).getTarget()=vq_1793
		and target_4.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("unqueue_me")
}

predicate func_6(Variable vq_1793, Parameter vfshared_1787, ExprStmt target_6) {
		target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("futex_wait_setup")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("u32 *")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u32")
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vfshared_1787
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vq_1793
		and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("futex_hash_bucket *")
}

predicate func_7(Parameter vfshared_1787, IfStmt target_7) {
		target_7.getCondition().(VariableAccess).getTarget()=vfshared_1787
		and target_7.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getTarget().getName()="flags"
		and target_7.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="futex"
		and target_7.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
		and target_7.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("restart_block *")
		and target_7.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="1"
}

from Function func, Variable vq_1793, Parameter vfshared_1787, GotoStmt target_0, ExprStmt target_1, ExprStmt target_2, NotExpr target_3, AddressOfExpr target_4, ExprStmt target_6, IfStmt target_7
where
func_0(target_3, func, target_0)
and func_1(vq_1793, vfshared_1787, target_3, target_4, target_6, target_7, target_1)
and func_2(vq_1793, vfshared_1787, target_7, func, target_2)
and func_3(func, target_3)
and func_4(vq_1793, target_4)
and func_6(vq_1793, vfshared_1787, target_6)
and func_7(vfshared_1787, target_7)
and vq_1793.getType().hasName("futex_q")
and vfshared_1787.getType().hasName("int")
and vq_1793.(LocalVariable).getFunction() = func
and vfshared_1787.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
