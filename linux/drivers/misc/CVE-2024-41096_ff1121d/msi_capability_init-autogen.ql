/**
 * @name linux-ff1121d2214b794dc1772081f27bdd90721a84bc-msi_capability_init
 * @id cpp/linux/ff1121d2214b794dc1772081f27bdd90721a84bc/msi-capability-init
 * @description linux-ff1121d2214b794dc1772081f27bdd90721a84bc-drivers/pci/msi/msi.c-msi_capability_init CVE-2024-41096
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable ventry_351, ExprStmt target_6, FunctionCall target_7, ExprStmt target_8, Function func) {
exists(ExprStmt target_1 |
	exists(StmtExpr obj_0 | obj_0=target_1.getExpr() |
		exists(BlockStmt obj_1 | obj_1=obj_0.getStmt() |
			exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(6) |
				exists(FunctionCall obj_3 | obj_3=obj_2.getExpr() |
					obj_3.getTarget().hasName("__builtin_memcpy")
					and obj_3.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("msi_desc")
					and obj_3.getArgument(1).(VariableAccess).getTarget()=ventry_351
					and obj_3.getArgument(2).(VariableAccess).getType().hasName("size_t")
				)
			)
		)
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_6.getLocation())
	and target_7.getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation())
	and target_1.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable ventry_351) {
exists(AddressOfExpr target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(1) |
					obj_3.getTarget().hasName("msi_multi_mask")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=ventry_351
				)
				and obj_2.getTarget().hasName("pci_msi_unmask")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=ventry_351
			)
		)
	)
	and target_2.getOperand().(VariableAccess).getType().hasName("msi_desc")
)
}

predicate func_3(Variable ventry_351) {
exists(AddressOfExpr target_3 |
	exists(FunctionCall obj_0 | obj_0=target_3.getParent() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getArgument(1) |
				obj_2.getTarget().hasName("msi_multi_mask")
				and obj_2.getArgument(0).(VariableAccess).getTarget()=ventry_351
			)
		)
	)
	and target_3.getOperand().(VariableAccess).getType().hasName("msi_desc")
)
}

predicate func_4(Variable ventry_351, VariableAccess target_4) {
	exists(FunctionCall obj_0 | obj_0=target_4.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getArgument(1) |
					obj_3.getTarget().hasName("msi_multi_mask")
					and obj_3.getArgument(0).(VariableAccess).getTarget()=ventry_351
				)
				and obj_2.getTarget().hasName("pci_msi_unmask")
			)
		)
	)
	and target_4.getTarget()=ventry_351
}

/*predicate func_5(Variable ventry_351, VariableAccess target_5) {
	target_5.getTarget()=ventry_351
	and target_5.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(1).(FunctionCall).getTarget().hasName("msi_multi_mask")
}

*/
predicate func_6(Function func, ExprStmt target_6) {
	exists(AssignExpr obj_0 | obj_0=target_6.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("pci_msi_setup_msi_irqs")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("pci_dev *")
			and obj_1.getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
			and obj_1.getArgument(2).(Literal).getValue()="5"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_6.getEnclosingFunction() = func
}

predicate func_7(Variable ventry_351, FunctionCall target_7) {
	target_7.getTarget().hasName("msi_multi_mask")
	and target_7.getArgument(0).(VariableAccess).getTarget()=ventry_351
}

predicate func_8(Variable ventry_351, ExprStmt target_8) {
	exists(AssignExpr obj_0 | obj_0=target_8.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="irq"
			and obj_1.getQualifier().(VariableAccess).getTarget().getType().hasName("pci_dev *")
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRValue() |
			obj_2.getTarget().getName()="irq"
			and obj_2.getQualifier().(VariableAccess).getTarget()=ventry_351
		)
	)
}

from Function func, Variable ventry_351, VariableAccess target_4, ExprStmt target_6, FunctionCall target_7, ExprStmt target_8
where
not func_1(ventry_351, target_6, target_7, target_8, func)
and not func_2(ventry_351)
and not func_3(ventry_351)
and func_4(ventry_351, target_4)
and func_6(func, target_6)
and func_7(ventry_351, target_7)
and func_8(ventry_351, target_8)
and ventry_351.getType().hasName("msi_desc *")
and ventry_351.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
