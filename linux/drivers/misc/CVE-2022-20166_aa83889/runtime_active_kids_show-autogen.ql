/**
 * @name linux-aa838896d87af561a33ecefea1caa4c15a68bc47-runtime_active_kids_show
 * @id cpp/linux/aa838896d87af561a33ecefea1caa4c15a68bc47/runtime-active-kids-show
 * @description linux-aa838896d87af561a33ecefea1caa4c15a68bc47-drivers/base/power/sysfs.c-runtime_active_kids_show CVE-2022-20166
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_529, Parameter vbuf_531, FunctionCall target_0) {
	target_0.getTarget().hasName("sprintf")
	and not target_0.getTarget().hasName("sysfs_emit")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vbuf_531
	and target_0.getArgument(1).(StringLiteral).getValue()="%d\n"
	and target_0.getArgument(2).(ConditionalExpr).getCondition().(ValueFieldAccess).getTarget().getName()="ignore_children"
	and target_0.getArgument(2).(ConditionalExpr).getCondition().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="power"
	and target_0.getArgument(2).(ConditionalExpr).getCondition().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_529
	and target_0.getArgument(2).(ConditionalExpr).getThen().(Literal).getValue()="0"
	and target_0.getArgument(2).(ConditionalExpr).getElse().(FunctionCall).getTarget().hasName("atomic_read")
	and target_0.getArgument(2).(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="child_count"
	and target_0.getArgument(2).(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="power"
	and target_0.getArgument(2).(ConditionalExpr).getElse().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_529
}

from Function func, Parameter vdev_529, Parameter vbuf_531, FunctionCall target_0
where
func_0(vdev_529, vbuf_531, target_0)
and vdev_529.getType().hasName("device *")
and vbuf_531.getType().hasName("char *")
and vdev_529.getFunction() = func
and vbuf_531.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
