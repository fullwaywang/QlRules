/**
 * @name linux-bb8a4fcb2136508224c596a7e665bdba1d7c3c27-ipoctal_open
 * @id cpp/linux/bb8a4fcb2136508224c596a7e665bdba1d7c3c27/ipoctal-open
 * @description linux-bb8a4fcb2136508224c596a7e665bdba1d7c3c27-drivers/ipack/devices/ipoctal.c-ipoctal_open CVE-2021-47403
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtty_85, FunctionCall target_12) {
exists(PointerFieldAccess target_0 |
	target_0.getTarget().getName()="driver_data"
	and target_0.getQualifier().(VariableAccess).getTarget()=vtty_85
	and target_0.getQualifier().(VariableAccess).getLocation().isBefore(target_12.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vtty_85, Parameter vfile_85, Variable vchannel_87, Variable verr_89, FunctionCall target_1) {
	target_1.getTarget().hasName("tty_port_open")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tty_port"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vchannel_87
	and target_1.getArgument(1).(VariableAccess).getTarget()=vtty_85
	and target_1.getArgument(2).(VariableAccess).getTarget()=vfile_85
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_89
}

predicate func_2(Parameter vtty_85, VariableAccess target_2) {
	target_2.getTarget()=vtty_85
	and target_2.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(Initializer).getExpr() instanceof FunctionCall
}

predicate func_3(Parameter vtty_85, FunctionCall target_3) {
	target_3.getTarget().hasName("dev_get_drvdata")
	and target_3.getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_3.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_85
}

predicate func_4(Function func, DeclStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Function func, DeclStmt target_5) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Parameter vtty_85, Variable vchannel_87, Function func, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="driver_data"
	and target_6.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_85
	and target_6.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vchannel_87
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable vipoctal_88, Function func, IfStmt target_7) {
	target_7.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ipack_get_carrier")
	and target_7.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_7.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipoctal_88
	and target_7.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-16"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

/*predicate func_8(Function func, UnaryMinusExpr target_8) {
	target_8.getValue()="-16"
	and target_8.getEnclosingFunction() = func
}

*/
predicate func_9(Variable verr_89, Function func, ExprStmt target_9) {
	target_9.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_89
	and target_9.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Variable vipoctal_88, Variable verr_89, Function func, IfStmt target_10) {
	target_10.getCondition().(VariableAccess).getTarget()=verr_89
	and target_10.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ipack_put_carrier")
	and target_10.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
	and target_10.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vipoctal_88
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_10
}

predicate func_11(Variable verr_89, Function func, ReturnStmt target_11) {
	target_11.getExpr().(VariableAccess).getTarget()=verr_89
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Parameter vtty_85, Variable vchannel_87, FunctionCall target_12) {
	target_12.getTarget().hasName("chan_to_ipoctal")
	and target_12.getArgument(0).(VariableAccess).getTarget()=vchannel_87
	and target_12.getArgument(1).(PointerFieldAccess).getTarget().getName()="index"
	and target_12.getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vtty_85
}

from Function func, Parameter vtty_85, Parameter vfile_85, Variable vchannel_87, Variable vipoctal_88, Variable verr_89, FunctionCall target_1, VariableAccess target_2, FunctionCall target_3, DeclStmt target_4, DeclStmt target_5, ExprStmt target_6, IfStmt target_7, ExprStmt target_9, IfStmt target_10, ReturnStmt target_11, FunctionCall target_12
where
not func_0(vtty_85, target_12)
and func_1(vtty_85, vfile_85, vchannel_87, verr_89, target_1)
and func_2(vtty_85, target_2)
and func_3(vtty_85, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(vtty_85, vchannel_87, func, target_6)
and func_7(vipoctal_88, func, target_7)
and func_9(verr_89, func, target_9)
and func_10(vipoctal_88, verr_89, func, target_10)
and func_11(verr_89, func, target_11)
and func_12(vtty_85, vchannel_87, target_12)
and vtty_85.getType().hasName("tty_struct *")
and vfile_85.getType().hasName("file *")
and vchannel_87.getType().hasName("ipoctal_channel *")
and vipoctal_88.getType().hasName("ipoctal *")
and verr_89.getType().hasName("int")
and vtty_85.getFunction() = func
and vfile_85.getFunction() = func
and vchannel_87.(LocalVariable).getFunction() = func
and vipoctal_88.(LocalVariable).getFunction() = func
and verr_89.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
