/**
 * @name linux-b3b7c4795ccab5be71f080774c45bbbcc75c2aaf-store_int_with_restart
 * @id cpp/linux/b3b7c4795ccab5be71f080774c45bbbcc75c2aaf/store-int-with-restart
 * @description linux-b3b7c4795ccab5be71f080774c45bbbcc75c2aaf-arch/x86/kernel/cpu/mcheck/mce.c-store_int_with_restart CVE-2018-7995
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbuf_2131, Parameter vsize_2131, Parameter vattr_2130, Parameter vs_2129, FunctionCall target_0) {
		target_0.getTarget().hasName("device_store_int")
		and not target_0.getTarget().hasName("device_store_ulong")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vs_2129
		and target_0.getArgument(1).(VariableAccess).getTarget()=vattr_2130
		and target_0.getArgument(2).(VariableAccess).getTarget()=vbuf_2131
		and target_0.getArgument(3).(VariableAccess).getTarget()=vsize_2131
}

predicate func_1(Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getType().hasName("unsigned long")
		and target_1.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getType().hasName("unsigned long")
		and target_1.getThen() instanceof ReturnStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1)
}

predicate func_2(Function func) {
	exists(IfStmt target_2 |
		target_2.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getType().hasName("unsigned long")
		and target_2.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="1"
		and target_2.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("unsigned long")
		and target_2.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2)
}

predicate func_3(Function func) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
		and target_3.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
		and target_3.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_3)
}

predicate func_4(Function func) {
	exists(ExprStmt target_4 |
		target_4.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
		and target_4.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("mutex")
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_4)
}

predicate func_5(Variable vret_2133, ReturnStmt target_6, Function func) {
	exists(ReturnStmt target_5 |
		target_5.getExpr().(VariableAccess).getTarget()=vret_2133
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
		and target_5.getExpr().(VariableAccess).getLocation().isBefore(target_6.getExpr().(VariableAccess).getLocation()))
}

predicate func_6(Variable vret_2133, Function func, ReturnStmt target_6) {
		target_6.getExpr().(VariableAccess).getTarget()=vret_2133
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

from Function func, Parameter vbuf_2131, Parameter vsize_2131, Variable vret_2133, Parameter vattr_2130, Parameter vs_2129, FunctionCall target_0, ReturnStmt target_6
where
func_0(vbuf_2131, vsize_2131, vattr_2130, vs_2129, target_0)
and not func_1(func)
and not func_2(func)
and not func_3(func)
and not func_4(func)
and not func_5(vret_2133, target_6, func)
and func_6(vret_2133, func, target_6)
and vbuf_2131.getType().hasName("const char *")
and vsize_2131.getType().hasName("size_t")
and vret_2133.getType().hasName("ssize_t")
and vattr_2130.getType().hasName("device_attribute *")
and vs_2129.getType().hasName("device *")
and vbuf_2131.getFunction() = func
and vsize_2131.getFunction() = func
and vret_2133.(LocalVariable).getFunction() = func
and vattr_2130.getFunction() = func
and vs_2129.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
