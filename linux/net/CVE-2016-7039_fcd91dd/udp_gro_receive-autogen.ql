/**
 * @name linux-fcd91dd449867c6bfe56a81cabba76b829fd05cd-udp_gro_receive
 * @id cpp/linux/fcd91dd449867c6bfe56a81cabba76b829fd05cd/udp-gro-receive
 * @description linux-fcd91dd449867c6bfe56a81cabba76b829fd05cd-net/ipv4/udp_offload.c-udp_gro_receive CVE-2016-7039
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_252, Variable vsk_259, Parameter vhead_252, ExprStmt target_6, LogicalAndExpr target_7) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("call_gro_receive_sk")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="gro_receive"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("udp_sk")
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_259
	and target_0.getArgument(1).(VariableAccess).getTarget()=vsk_259
	and target_0.getArgument(2).(VariableAccess).getTarget()=vhead_252
	and target_0.getArgument(3).(VariableAccess).getTarget()=vskb_252
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sk_buff **")
	and target_0.getArgument(3).(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_7.getLeftOperand().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vsk_259, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="gro_receive"
	and target_1.getQualifier().(FunctionCall).getTarget().hasName("udp_sk")
	and target_1.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_259
}

predicate func_2(Variable vsk_259, VariableAccess target_2) {
	target_2.getTarget()=vsk_259
	and target_2.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_3(Parameter vhead_252, VariableAccess target_3) {
	target_3.getTarget()=vhead_252
	and target_3.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_4(Parameter vskb_252, VariableAccess target_4) {
	target_4.getTarget()=vskb_252
	and target_4.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_5(Parameter vskb_252, Variable vsk_259, Parameter vhead_252, VariableCall target_5) {
	target_5.getExpr().(PointerFieldAccess).getTarget().getName()="gro_receive"
	and target_5.getExpr().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("udp_sk")
	and target_5.getExpr().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_259
	and target_5.getArgument(0).(VariableAccess).getTarget()=vsk_259
	and target_5.getArgument(1).(VariableAccess).getTarget()=vhead_252
	and target_5.getArgument(2).(VariableAccess).getTarget()=vskb_252
}

predicate func_6(Parameter vskb_252, ExprStmt target_6) {
	target_6.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="flush"
	and target_6.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cb"
	and target_6.getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_252
	and target_6.getExpr().(AssignOrExpr).getRValue().(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_7(Variable vsk_259, LogicalAndExpr target_7) {
	target_7.getLeftOperand().(VariableAccess).getTarget()=vsk_259
	and target_7.getRightOperand().(PointerFieldAccess).getTarget().getName()="gro_receive"
	and target_7.getRightOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("udp_sk")
	and target_7.getRightOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_259
}

from Function func, Parameter vskb_252, Variable vsk_259, Parameter vhead_252, PointerFieldAccess target_1, VariableAccess target_2, VariableAccess target_3, VariableAccess target_4, VariableCall target_5, ExprStmt target_6, LogicalAndExpr target_7
where
not func_0(vskb_252, vsk_259, vhead_252, target_6, target_7)
and func_1(vsk_259, target_1)
and func_2(vsk_259, target_2)
and func_3(vhead_252, target_3)
and func_4(vskb_252, target_4)
and func_5(vskb_252, vsk_259, vhead_252, target_5)
and func_6(vskb_252, target_6)
and func_7(vsk_259, target_7)
and vskb_252.getType().hasName("sk_buff *")
and vsk_259.getType().hasName("sock *")
and vhead_252.getType().hasName("sk_buff **")
and vskb_252.getFunction() = func
and vsk_259.(LocalVariable).getFunction() = func
and vhead_252.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
