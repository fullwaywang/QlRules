/**
 * @name linux-1f86840f897717f86d523a13e99a447e6a5d2fa5-copy_to_user_tmpl
 * @id cpp/linux/1f86840f897717f86d523a13e99a447e6a5d2fa5/copy-to-user-tmpl
 * @description linux-1f86840f897717f86d523a13e99a447e6a5d2fa5-net/xfrm/xfrm_user.c-copy_to_user_tmpl CVE-2012-6537
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vup_1425, ExprStmt target_1) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vup_1425
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="64"
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vup_1425, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("memcpy")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="id"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vup_1425
	and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="id"
	and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("xfrm_tmpl *")
	and target_1.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="24"
}

from Function func, Variable vup_1425, ExprStmt target_1
where
not func_0(vup_1425, target_1)
and func_1(vup_1425, target_1)
and vup_1425.getType().hasName("xfrm_user_tmpl *")
and vup_1425.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
