/**
 * @name linux-073931017b49d9458aa351605b43a7e34598caef-__f2fs_set_acl
 * @id cpp/linux/073931017b49d9458aa351605b43a7e34598caef/--f2fs-set-acl
 * @description linux-073931017b49d9458aa351605b43a7e34598caef-fs/f2fs/acl.c-__f2fs_set_acl CVE-2016-7097
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vinode_201, Parameter vacl_202, Variable verror_207, FunctionCall target_0) {
	target_0.getTarget().hasName("posix_acl_equiv_mode")
	and not target_0.getTarget().hasName("posix_acl_update_mode")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vacl_202
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_201
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_207
}

predicate func_2(Parameter vacl_202, ConditionalExpr target_7) {
exists(AddressOfExpr target_2 |
	target_2.getOperand().(VariableAccess).getTarget()=vacl_202
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_7.getCondition().(VariableAccess).getLocation()))
}

predicate func_3(Variable verror_207, ReturnStmt target_8, VariableAccess target_3) {
	target_3.getTarget()=verror_207
	and target_3.getParent().(LTExpr).getGreaterOperand() instanceof Literal
	and target_3.getParent().(LTExpr).getParent().(IfStmt).getThen()=target_8
}

predicate func_4(Parameter vacl_202, VariableAccess target_4) {
	target_4.getTarget()=vacl_202
	and target_4.getParent().(AssignExpr).getLValue() = target_4
	and target_4.getParent().(AssignExpr).getRValue() instanceof Literal
}

predicate func_5(Variable verror_207, ReturnStmt target_8, RelationalOperation target_5) {
	 (target_5 instanceof GTExpr or target_5 instanceof LTExpr)
	and target_5.getLesserOperand().(VariableAccess).getTarget()=verror_207
	and target_5.getGreaterOperand().(Literal).getValue()="0"
	and target_5.getParent().(IfStmt).getThen()=target_8
}

predicate func_6(Parameter vacl_202, Variable verror_207, VariableAccess target_9, IfStmt target_6) {
	target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=verror_207
	and target_6.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="0"
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vacl_202
	and target_6.getThen().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
}

predicate func_7(Parameter vacl_202, ConditionalExpr target_7) {
	target_7.getCondition().(VariableAccess).getTarget()=vacl_202
	and target_7.getThen().(UnaryMinusExpr).getValue()="-13"
	and target_7.getElse().(Literal).getValue()="0"
}

predicate func_8(Variable verror_207, RelationalOperation target_5, ReturnStmt target_8) {
	target_8.getExpr().(VariableAccess).getTarget()=verror_207
	and target_8.getParent().(IfStmt).getCondition()=target_5
}

predicate func_9(Parameter vacl_202, BlockStmt target_10, VariableAccess target_9) {
	target_9.getTarget()=vacl_202
	and target_9.getParent().(IfStmt).getThen()=target_10
}

predicate func_10(Parameter vinode_201, Variable verror_207, BlockStmt target_10) {
	target_10.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verror_207
	and target_10.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_10.getStmt(1).(IfStmt).getCondition() instanceof RelationalOperation
	and target_10.getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget()=verror_207
	and target_10.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("set_acl_inode")
	and target_10.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_201
	and target_10.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="i_mode"
	and target_10.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_201
}

from Function func, Parameter vinode_201, Parameter vacl_202, Variable verror_207, FunctionCall target_0, VariableAccess target_3, VariableAccess target_4, RelationalOperation target_5, IfStmt target_6, ConditionalExpr target_7, ReturnStmt target_8, VariableAccess target_9, BlockStmt target_10
where
func_0(vinode_201, vacl_202, verror_207, target_0)
and not func_2(vacl_202, target_7)
and func_3(verror_207, target_8, target_3)
and func_4(vacl_202, target_4)
and func_5(verror_207, target_8, target_5)
and func_6(vacl_202, verror_207, target_9, target_6)
and func_7(vacl_202, target_7)
and func_8(verror_207, target_5, target_8)
and func_9(vacl_202, target_10, target_9)
and func_10(vinode_201, verror_207, target_10)
and vinode_201.getType().hasName("inode *")
and vacl_202.getType().hasName("posix_acl *")
and verror_207.getType().hasName("int")
and vinode_201.getFunction() = func
and vacl_202.getFunction() = func
and verror_207.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
