/**
 * @name linux-384632e67e0829deb8015ee6ad916b180049d252-userfaultfd_ctx_read
 * @id cpp/linux/384632e67e0829deb8015ee6ad916b180049d252/userfaultfd-ctx-read
 * @description linux-384632e67e0829deb8015ee6ad916b180049d252-fs/userfaultfd.c-userfaultfd_ctx_read CVE-2017-15126
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfork_nctx_1001, EqualityOperation target_9, ExprStmt target_10, ExprStmt target_11) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("userfaultfd_ctx_get")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfork_nctx_1001
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
	and target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vfork_nctx_1001, NotExpr target_4) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("userfaultfd_ctx_put")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfork_nctx_1001
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4)
}

predicate func_2(BlockStmt target_12, Function func) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("__builtin_expect")
	and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand() instanceof NotExpr
	and target_2.getArgument(1).(Literal).getValue()="1"
	and target_2.getParent().(IfStmt).getThen()=target_12
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vret_990, Variable vfork_nctx_1001, NotExpr target_5, ReturnStmt target_13, ExprStmt target_11) {
exists(IfStmt target_3 |
	target_3.getCondition().(VariableAccess).getTarget()=vret_990
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("userfaultfd_ctx_put")
	and target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfork_nctx_1001
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
	and target_3.getCondition().(VariableAccess).getLocation().isBefore(target_13.getExpr().(VariableAccess).getLocation())
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_3.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(Variable vfork_event_1000, BlockStmt target_12, NotExpr target_4) {
	target_4.getOperand().(FunctionCall).getTarget().hasName("list_empty")
	and target_4.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vfork_event_1000
	and target_4.getParent().(IfStmt).getThen()=target_12
}

predicate func_5(Variable vret_990, BlockStmt target_14, NotExpr target_5) {
	target_5.getOperand().(VariableAccess).getTarget()=vret_990
	and target_5.getParent().(IfStmt).getThen()=target_14
}

predicate func_6(Parameter vctx_987, NotExpr target_5, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("spin_lock")
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="lock"
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="event_wqh"
	and target_6.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_987
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_7(Variable vuwq_992, Parameter vctx_987, NotExpr target_4, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("userfaultfd_event_complete")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctx_987
	and target_7.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vuwq_992
	and target_7.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_8(Parameter vctx_987, NotExpr target_5, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("spin_unlock")
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="lock"
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="event_wqh"
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_987
	and target_8.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_9(Variable vuwq_992, EqualityOperation target_9) {
	target_9.getLeftOperand().(ValueFieldAccess).getTarget().getName()="event"
	and target_9.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="msg"
	and target_9.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vuwq_992
	and target_9.getRightOperand().(Literal).getValue()="19"
}

predicate func_10(Variable vuwq_992, Variable vfork_nctx_1001, ExprStmt target_10) {
	target_10.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vfork_nctx_1001
	and target_10.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="reserved1"
	and target_10.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="reserved"
	and target_10.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="arg"
	and target_10.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="msg"
	and target_10.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vuwq_992
}

predicate func_11(Variable vret_990, Variable vfork_nctx_1001, Parameter vctx_987, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_990
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("resolve_userfault_fork")
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctx_987
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfork_nctx_1001
	and target_11.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("uffd_msg *")
}

predicate func_12(Variable vuwq_992, BlockStmt target_12) {
	target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vuwq_992
	and target_12.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_12.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del")
	and target_12.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="entry"
	and target_12.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="wq"
	and target_12.getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vuwq_992
}

predicate func_13(Variable vret_990, ReturnStmt target_13) {
	target_13.getExpr().(VariableAccess).getTarget()=vret_990
}

predicate func_14(Variable vuwq_992, BlockStmt target_14) {
	target_14.getStmt(0) instanceof ExprStmt
	and target_14.getStmt(1).(IfStmt).getCondition() instanceof NotExpr
	and target_14.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vuwq_992
	and target_14.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("list_del")
	and target_14.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="entry"
	and target_14.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__add_wait_queue")
	and target_14.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="event_wqh"
	and target_14.getStmt(1).(IfStmt).getThen().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="wq"
}

from Function func, Variable vret_990, Variable vuwq_992, Variable vfork_event_1000, Variable vfork_nctx_1001, Parameter vctx_987, NotExpr target_4, NotExpr target_5, ExprStmt target_6, ExprStmt target_7, ExprStmt target_8, EqualityOperation target_9, ExprStmt target_10, ExprStmt target_11, BlockStmt target_12, ReturnStmt target_13, BlockStmt target_14
where
not func_0(vfork_nctx_1001, target_9, target_10, target_11)
and not func_1(vfork_nctx_1001, target_4)
and not func_2(target_12, func)
and not func_3(vret_990, vfork_nctx_1001, target_5, target_13, target_11)
and func_4(vfork_event_1000, target_12, target_4)
and func_5(vret_990, target_14, target_5)
and func_6(vctx_987, target_5, target_6)
and func_7(vuwq_992, vctx_987, target_4, target_7)
and func_8(vctx_987, target_5, target_8)
and func_9(vuwq_992, target_9)
and func_10(vuwq_992, vfork_nctx_1001, target_10)
and func_11(vret_990, vfork_nctx_1001, vctx_987, target_11)
and func_12(vuwq_992, target_12)
and func_13(vret_990, target_13)
and func_14(vuwq_992, target_14)
and vret_990.getType().hasName("ssize_t")
and vuwq_992.getType().hasName("userfaultfd_wait_queue *")
and vfork_event_1000.getType().hasName("list_head")
and vfork_nctx_1001.getType().hasName("userfaultfd_ctx *")
and vctx_987.getType().hasName("userfaultfd_ctx *")
and vret_990.(LocalVariable).getFunction() = func
and vuwq_992.(LocalVariable).getFunction() = func
and vfork_event_1000.(LocalVariable).getFunction() = func
and vfork_nctx_1001.(LocalVariable).getFunction() = func
and vctx_987.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
