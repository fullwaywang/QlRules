/**
 * @name linux-531dc6780d94245af037c25c2371c8caf652f0f9-event_filter_read
 * @id cpp/linux/531dc6780d94245af037c25c2371c8caf652f0f9/event-filter-read
 * @description linux-531dc6780d94245af037c25c2371c8caf652f0f9-kernel/trace/trace_events.c-event_filter_read CVE-2024-43891
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfilp_1691, Variable vfile_1694) {
exists(FunctionCall target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getParent() |
		obj_0.getRValue() = target_0
		and obj_0.getLValue().(VariableAccess).getTarget()=vfile_1694
	)
	and target_0.getTarget().hasName("event_file_file")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vfilp_1691
)
}

predicate func_1(Parameter vfilp_1691, VariableAccess target_1) {
	target_1.getTarget()=vfilp_1691
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_2(Variable vfile_1694, ExprStmt target_5, VariableAccess target_2) {
	exists(LogicalAndExpr obj_0 | obj_0=target_2.getParent() |
		obj_0.getRightOperand() instanceof NotExpr
		and obj_0.getParent().(IfStmt).getThen()=target_5
	)
	and target_2.getTarget()=vfile_1694
}

predicate func_3(Parameter vfilp_1691, Variable vfile_1694, FunctionCall target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getParent() |
		obj_0.getRValue() = target_3
		and obj_0.getLValue().(VariableAccess).getTarget()=vfile_1694
	)
	and target_3.getTarget().hasName("event_file_data")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vfilp_1691
}

predicate func_4(Variable vfile_1694, ExprStmt target_5, LogicalAndExpr target_4) {
	exists(NotExpr obj_0 | obj_0=target_4.getRightOperand() |
		exists(BitwiseAndExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().getName()="flags"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vfile_1694
			)
		)
	)
	and target_4.getLeftOperand().(VariableAccess).getTarget()=vfile_1694
	and target_4.getParent().(IfStmt).getThen()=target_5
}

predicate func_5(Variable vfile_1694, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		obj_0.getTarget().hasName("print_event_filter")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vfile_1694
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType().hasName("trace_seq *")
	)
}

from Function func, Parameter vfilp_1691, Variable vfile_1694, VariableAccess target_1, VariableAccess target_2, FunctionCall target_3, LogicalAndExpr target_4, ExprStmt target_5
where
not func_0(vfilp_1691, vfile_1694)
and func_1(vfilp_1691, target_1)
and func_2(vfile_1694, target_5, target_2)
and func_3(vfilp_1691, vfile_1694, target_3)
and func_4(vfile_1694, target_5, target_4)
and func_5(vfile_1694, target_5)
and vfilp_1691.getType().hasName("file *")
and vfile_1694.getType().hasName("trace_event_file *")
and vfilp_1691.getFunction() = func
and vfile_1694.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
