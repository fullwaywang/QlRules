commit fd19d3b45164466a4adce7cbff448ba9189e1427
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Thu Oct 5 11:10:22 2017 +0200

    KVM: nVMX: update last_nonleaf_level when initializing nested EPT
    
    The function updates context->root_level but didn't call
    update_last_nonleaf_level so the previous and potentially wrong value
    was used for page walks.  For example, a zero value of last_nonleaf_level
    would allow a potential out-of-bounds access in arch/x86/mmu/paging_tmpl.h's
    walk_addr_generic function (CVE-2017-12188).
    
    Fixes: 155a97a3d7c78b46cef6f1a973c831bc5a4f82bb
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/mmu.c b/arch/x86/kvm/mmu.c
index 106d4a0..3c25f20 100644
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@ -4555,6 +4555,7 @@ void kvm_init_shadow_ept_mmu(struct kvm_vcpu *vcpu, bool execonly,
 
 	update_permission_bitmask(vcpu, context, true);
 	update_pkru_bitmask(vcpu, context, true);
+	update_last_nonleaf_level(vcpu, context);
 	reset_rsvds_bits_mask_ept(vcpu, context, execonly);
 	reset_ept_shadow_zero_bits_mask(vcpu, context, execonly);
 }
