/**
 * @name openssl-28a00bcd8e318da18031b2ac8778c64147cd54f9-X509_to_X509_REQ
 * @id cpp/openssl/28a00bcd8e318da18031b2ac8778c64147cd54f9/x509-to-x509-req
 * @description openssl-28a00bcd8e318da18031b2ac8778c64147cd54f9-crypto/x509/x509_req.c-X509_to_X509_REQ CVE-2015-0288
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpktmp_75, ExprStmt target_1, ExprStmt target_2, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vpktmp_75
		and target_0.getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation()))
}

predicate func_1(Variable vpktmp_75, ExprStmt target_1) {
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vpktmp_75
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("X509_get_pubkey")
		and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("X509 *")
}

predicate func_2(Variable vpktmp_75, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("X509_REQ_set_pubkey")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("X509_REQ *")
		and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpktmp_75
}

from Function func, Variable vpktmp_75, ExprStmt target_1, ExprStmt target_2
where
not func_0(vpktmp_75, target_1, target_2, func)
and func_1(vpktmp_75, target_1)
and func_2(vpktmp_75, target_2)
and vpktmp_75.getType().hasName("EVP_PKEY *")
and vpktmp_75.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
