/**
 * @name linux-f26f9aff6aaf67e9a430d16c266f91b13a5bff64-check_preempt_curr
 * @id cpp/linux/f26f9aff6aaf67e9a430d16c266f91b13a5bff64/check-preempt-curr
 * @description linux-f26f9aff6aaf67e9a430d16c266f91b13a5bff64-kernel/sched.c-check_preempt_curr CVE-2011-4621
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrq_2111, ExprStmt target_2, ExprStmt target_3, FunctionCall target_1) {
	exists(LogicalAndExpr target_0 |
		target_0.getAnOperand().(ValueFieldAccess).getTarget().getName()="on_rq"
		and target_0.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="se"
		and target_0.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="curr"
		and target_0.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrq_2111
		and target_0.getAnOperand() instanceof FunctionCall
		and target_0.getParent().(IfStmt).getThen()=target_2
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getAnOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vrq_2111, ExprStmt target_2, FunctionCall target_1) {
		target_1.getTarget().hasName("test_tsk_need_resched")
		and target_1.getArgument(0).(PointerFieldAccess).getTarget().getName()="curr"
		and target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrq_2111
		and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Parameter vrq_2111, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="skip_clock_update"
		and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrq_2111
		and target_2.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
}

predicate func_3(Parameter vrq_2111, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("resched_task")
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="curr"
		and target_3.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrq_2111
}

from Function func, Parameter vrq_2111, FunctionCall target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vrq_2111, target_2, target_3, target_1)
and func_1(vrq_2111, target_2, target_1)
and func_2(vrq_2111, target_2)
and func_3(vrq_2111, target_3)
and vrq_2111.getType().hasName("rq *")
and vrq_2111.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
