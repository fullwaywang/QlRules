commit 2150d3777153eb71d8b227bb1dc8d00fd51a12e3	2150d3777153eb71d8b227bb1dc8d00fd51a12e3
Author: Frank Liberato <liberato@chromium.org>
Date:   Tue Mar 21 16:34:21 2023 +0000

    Dont allow move / resize of Document PiP in browser
    
    Browser-side equivalent of:
    https://chromium-review.googlesource.com/c/chromium/src/+/3840849
    
    Bug: 1416380
    Change-Id: Iceba6b9852381b6a902b44f74778845f3493403f
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4354952
    Reviewed-by: Fr <beaufort.francois@gmail.com>
    Reviewed-by: Scott Violet <sky@chromium.org>
    Commit-Queue: Frank Liberato <liberato@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1119986}

diff --git a/chrome/browser/picture_in_picture/document_picture_in_picture_window_controller_browsertest.cc b/chrome/browser/picture_in_picture/document_picture_in_picture_window_controller_browsertest.cc
index 61b94c28017dd..2096b5da29a23 100644
--- a/chrome/browser/picture_in_picture/document_picture_in_picture_window_controller_browsertest.cc
+++ b/chrome/browser/picture_in_picture/document_picture_in_picture_window_controller_browsertest.cc
@@ -386,3 +386,21 @@ IN_PROC_BROWSER_TEST_F(DocumentPictureInPictureWindowControllerBrowserTest,
   EXPECT_EQ(false, EvalJs(active_web_contents,
                           "'documentPictureInPicture' in window"));
 }
+
+// Make sure that we cannot set window bounds on the PiP window.
+IN_PROC_BROWSER_TEST_F(DocumentPictureInPictureWindowControllerBrowserTest,
+                       CannotSetWindowRect) {
+  LoadTabAndEnterPictureInPicture(browser());
+  auto* pip_web_contents = window_controller()->GetChildWebContents();
+  ASSERT_NE(nullptr, pip_web_contents);
+
+  auto* browser_view = static_cast<BrowserView*>(
+      BrowserWindow::FindBrowserWindowWithWebContents(pip_web_contents));
+  const gfx::Rect bounds = browser_view->GetBounds();
+  gfx::Rect different_bounds(bounds.x() + 10, bounds.y() + 10,
+                             bounds.width() / 2, bounds.height() / 2);
+  ASSERT_NE(bounds, different_bounds);
+  static_cast<content::WebContentsDelegate*>(browser_view->browser())
+      ->SetContentsBounds(pip_web_contents, different_bounds);
+  EXPECT_EQ(bounds, browser_view->GetBounds());
+}
diff --git a/chrome/browser/ui/browser.cc b/chrome/browser/ui/browser.cc
index 2d196c0c5eee7..f1e679d2db0f0 100644
--- a/chrome/browser/ui/browser.cc
+++ b/chrome/browser/ui/browser.cc
@@ -1734,8 +1734,9 @@ void Browser::CloseContents(WebContents* source) {
 }
 
 void Browser::SetContentsBounds(WebContents* source, const gfx::Rect& bounds) {
-  if (is_type_normal())
+  if (is_type_normal() || is_type_picture_in_picture()) {
     return;
+  }
 
   std::vector<blink::mojom::WebFeature> features = {
       blink::mojom::WebFeature::kMovedOrResizedPopup};
