/**
 * @name linux-3450121997ce872eb7f1248417225827ea249710-line6_init_pcm
 * @id cpp/linux/3450121997ce872eb7f1248417225827ea249710/line6-init-pcm
 * @description linux-3450121997ce872eb7f1248417225827ea249710-sound/usb/line6/pcm.c-line6_init_pcm CVE-2019-15221
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vline6pcm_537, DoStmt target_1, ExprStmt target_2, AddressOfExpr target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="max_packet_size_in"
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6pcm_537
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="max_packet_size_out"
	and target_0.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6pcm_537
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("_dev_err")
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="ifcdev"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="line6"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6pcm_537
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="cannot get proper max packet size\n"
	and target_0.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Function func, DoStmt target_1) {
	target_1.getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spinlock_check")
	and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="lock"
	and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="out"
	and target_1.getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__raw_spin_lock_init")
	and target_1.getStmt().(BlockStmt).getStmt(1).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="&(&line6pcm->out.lock)->rlock"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vline6pcm_537, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="max_packet_size_out"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6pcm_537
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("usb_maxpacket")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="usbdev"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("usb_line6 *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getLeftOperand().(BinaryBitwiseOperation).getValue()="0"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getRightOperand().(FunctionCall).getTarget().hasName("__create_pipe")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="usbdev"
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getRightOperand().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("usb_line6 *")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(BitwiseOrExpr).getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(Literal).getValue()="1"
}

predicate func_3(Variable vline6pcm_537, AddressOfExpr target_3) {
	target_3.getOperand().(ValueFieldAccess).getTarget().getName()="lock"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="out"
	and target_3.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vline6pcm_537
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("spinlock_check")
}

from Function func, Variable vline6pcm_537, DoStmt target_1, ExprStmt target_2, AddressOfExpr target_3
where
not func_0(vline6pcm_537, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vline6pcm_537, target_2)
and func_3(vline6pcm_537, target_3)
and vline6pcm_537.getType().hasName("snd_line6_pcm *")
and vline6pcm_537.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
