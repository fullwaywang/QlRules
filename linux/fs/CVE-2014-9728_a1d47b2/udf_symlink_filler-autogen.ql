/**
 * @name linux-a1d47b262952a45aae62bd49cfaf33dd76c11a2c-udf_symlink_filler
 * @id cpp/linux/a1d47b262952a45aae62bd49cfaf33dd76c11a2c/udf-symlink-filler
 * @description linux-a1d47b262952a45aae62bd49cfaf33dd76c11a2c-fs/udf/symlink.c-udf_symlink_filler CVE-2014-9728
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_83, Variable vinode_80, ExprStmt target_8, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="i_size"
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_80
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="s_blocksize"
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="i_sb"
		and target_0.getCondition().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_80
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_83
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-36"
		and target_0.getThen().(BlockStmt).getStmt(1) instanceof GotoStmt
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_0.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable verr_83, NotExpr target_9, ReturnStmt target_10) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_83
		and target_1.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_1
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_10.getExpr().(VariableAccess).getLocation()))
}

predicate func_2(NotExpr target_9, Function func) {
	exists(GotoStmt target_2 |
		target_2.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_2
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_9
		and target_2.getEnclosingFunction() = func)
}

predicate func_3(Function func, UnaryMinusExpr target_3) {
		target_3.getValue()="-5"
		and target_3.getEnclosingFunction() = func
}

predicate func_4(NotExpr target_9, Function func, GotoStmt target_4) {
		target_4.getParent().(IfStmt).getCondition()=target_9
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Function func, Initializer target_5) {
		target_5.getExpr() instanceof UnaryMinusExpr
		and target_5.getExpr().getEnclosingFunction() = func
}

predicate func_8(Variable vinode_80, ExprStmt target_8) {
		target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("udf_inode_info *")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("UDF_I")
		and target_8.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinode_80
}

predicate func_9(Function func, NotExpr target_9) {
		target_9.getOperand().(VariableAccess).getTarget().getType().hasName("buffer_head *")
		and target_9.getEnclosingFunction() = func
}

predicate func_10(Variable verr_83, ReturnStmt target_10) {
		target_10.getExpr().(VariableAccess).getTarget()=verr_83
}

from Function func, Variable verr_83, Variable vinode_80, UnaryMinusExpr target_3, GotoStmt target_4, Initializer target_5, ExprStmt target_8, NotExpr target_9, ReturnStmt target_10
where
not func_0(verr_83, vinode_80, target_8, func)
and not func_1(verr_83, target_9, target_10)
and not func_2(target_9, func)
and func_3(func, target_3)
and func_4(target_9, func, target_4)
and func_5(func, target_5)
and func_8(vinode_80, target_8)
and func_9(func, target_9)
and func_10(verr_83, target_10)
and verr_83.getType().hasName("int")
and vinode_80.getType().hasName("inode *")
and verr_83.(LocalVariable).getFunction() = func
and vinode_80.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
