/**
 * @name linux-b6a7719aedd7e5c0f2df7641aa47386111682df4-pptp_xmit
 * @id cpp/linux/b6a7719aedd7e5c0f2df7641aa47386111682df4/pptp-xmit
 * @description linux-b6a7719aedd7e5c0f2df7641aa47386111682df4-drivers/net/ppp/pptp.c-pptp_xmit CVE-2019-10638
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_172, FunctionCall target_1) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("sock_net")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vsk_172
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("ip_select_ident")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("sk_buff *")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vsk_172, FunctionCall target_1) {
		target_1.getTarget().hasName("ip_dont_fragment")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vsk_172
		and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="dst"
		and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("rtable *")
}

from Function func, Variable vsk_172, FunctionCall target_1
where
not func_0(vsk_172, target_1)
and func_1(vsk_172, target_1)
and vsk_172.getType().hasName("sock *")
and vsk_172.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
