/**
 * @name linux-1c811d403afd73f04bde82b83b24c754011bd0e8-snp_cpuid
 * @id cpp/linux/1c811d403afd73f04bde82b83b24c754011bd0e8/snp-cpuid
 * @description linux-1c811d403afd73f04bde82b83b24c754011bd0e8-arch/x86/kernel/sev-shared.c-snp_cpuid CVE-2024-35802
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(PointerDereferenceExpr target_0 |
	target_0.getOperand().(FunctionCall).getTarget().hasName("rip_rel_ptr")
	and target_0.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("u32")
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func) {
exists(PointerDereferenceExpr target_1 |
	target_1.getOperand().(FunctionCall).getTarget().hasName("rip_rel_ptr")
	and target_1.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("u32")
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func) {
exists(PointerDereferenceExpr target_2 |
	target_2.getOperand().(FunctionCall).getTarget().hasName("rip_rel_ptr")
	and target_2.getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("u32")
	and target_2.getEnclosingFunction() = func)
}

predicate func_3(Variable vcpuid_std_range_max, VariableAccess target_3) {
	target_3.getTarget()=vcpuid_std_range_max
}

predicate func_4(Variable vcpuid_hyp_range_max, VariableAccess target_4) {
	target_4.getTarget()=vcpuid_hyp_range_max
}

predicate func_5(Variable vcpuid_ext_range_max, VariableAccess target_5) {
	target_5.getTarget()=vcpuid_ext_range_max
}

from Function func, Variable vcpuid_std_range_max, Variable vcpuid_hyp_range_max, Variable vcpuid_ext_range_max, VariableAccess target_3, VariableAccess target_4, VariableAccess target_5
where
not func_0(func)
and not func_1(func)
and not func_2(func)
and func_3(vcpuid_std_range_max, target_3)
and func_4(vcpuid_hyp_range_max, target_4)
and func_5(vcpuid_ext_range_max, target_5)
and vcpuid_std_range_max.getType().hasName("u32")
and vcpuid_hyp_range_max.getType().hasName("u32")
and vcpuid_ext_range_max.getType().hasName("u32")
and not vcpuid_std_range_max.getParentScope+() = func
and not vcpuid_hyp_range_max.getParentScope+() = func
and not vcpuid_ext_range_max.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
