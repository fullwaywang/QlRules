/**
 * @name linux-77260807d1170a8cf35dbb06e07461a655f67eee-ext4_check_descriptors
 * @id cpp/linux/77260807d1170a8cf35dbb06e07461a655f67eee/ext4-check-descriptors
 * @description linux-77260807d1170a8cf35dbb06e07461a655f67eee-fs/ext4/super.c-ext4_check_descriptors CVE-2018-10878
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsb_2344, Parameter vsb_block_2345, Variable vblock_bitmap_2351, Variable vi_2355, NotExpr target_3, ExprStmt target_4, EqualityOperation target_5, EqualityOperation target_6, LogicalOrExpr target_7, ExprStmt target_8) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vblock_bitmap_2351
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vsb_block_2345
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vblock_bitmap_2351
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("ext4_fsblk_t")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Block bitmap for group %u overlaps block group descriptors"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
		and target_0.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sb_rdonly")
		and target_0.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_0.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_5.getAnOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_8.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation().isBefore(target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsb_2344, Parameter vsb_block_2345, Variable vinode_bitmap_2352, Variable vi_2355, NotExpr target_9, ExprStmt target_10, EqualityOperation target_6, EqualityOperation target_11, LogicalOrExpr target_12, ExprStmt target_13) {
	exists(IfStmt target_1 |
		target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vinode_bitmap_2352
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vsb_block_2345
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vinode_bitmap_2352
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("ext4_fsblk_t")
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Inode bitmap for group %u overlaps block group descriptors"
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
		and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sb_rdonly")
		and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_1.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and target_9.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_6.getAnOperand().(VariableAccess).getLocation().isBefore(target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation())
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation().isBefore(target_11.getAnOperand().(VariableAccess).getLocation())
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_12.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_13.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation().isBefore(target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation()))
}

predicate func_2(Parameter vsb_2344, Parameter vsb_block_2345, Variable vinode_table_2353, Variable vi_2355, NotExpr target_14, ExprStmt target_15, EqualityOperation target_11, LogicalOrExpr target_16, ExprStmt target_17) {
	exists(IfStmt target_2 |
		target_2.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vinode_table_2353
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vsb_block_2345
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(Literal).getValue()="1"
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vinode_table_2353
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("ext4_fsblk_t")
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Inode table for group %u overlaps block group descriptors"
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
		and target_2.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("sb_rdonly")
		and target_2.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_2.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr().(Literal).getValue()="0"
		and target_14.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_11.getAnOperand().(VariableAccess).getLocation().isBefore(target_2.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getAnOperand().(VariableAccess).getLocation())
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_16.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
		and target_17.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vsb_2344, ReturnStmt target_18, NotExpr target_3) {
		target_3.getOperand().(FunctionCall).getTarget().hasName("sb_rdonly")
		and target_3.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_3.getParent().(IfStmt).getThen()=target_18
}

predicate func_4(Parameter vsb_2344, Variable vblock_bitmap_2351, Variable vi_2355, ExprStmt target_4) {
		target_4.getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_4.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_4.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Block bitmap for group %u not in group (block %llu)!"
		and target_4.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
		and target_4.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vblock_bitmap_2351
}

predicate func_5(Parameter vsb_block_2345, Variable vblock_bitmap_2351, EqualityOperation target_5) {
		target_5.getAnOperand().(VariableAccess).getTarget()=vblock_bitmap_2351
		and target_5.getAnOperand().(VariableAccess).getTarget()=vsb_block_2345
}

predicate func_6(Parameter vsb_block_2345, Variable vinode_bitmap_2352, EqualityOperation target_6) {
		target_6.getAnOperand().(VariableAccess).getTarget()=vinode_bitmap_2352
		and target_6.getAnOperand().(VariableAccess).getTarget()=vsb_block_2345
}

predicate func_7(Variable vblock_bitmap_2351, LogicalOrExpr target_7) {
		target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vblock_bitmap_2351
		and target_7.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("ext4_fsblk_t")
		and target_7.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vblock_bitmap_2351
		and target_7.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("ext4_fsblk_t")
}

predicate func_8(Parameter vsb_2344, Variable vi_2355, ExprStmt target_8) {
		target_8.getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_8.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_8.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_8.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Block bitmap for group %u overlaps superblock"
		and target_8.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
}

predicate func_9(Parameter vsb_2344, ReturnStmt target_19, NotExpr target_9) {
		target_9.getOperand().(FunctionCall).getTarget().hasName("sb_rdonly")
		and target_9.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_9.getParent().(IfStmt).getThen()=target_19
}

predicate func_10(Parameter vsb_2344, Variable vinode_bitmap_2352, Variable vi_2355, ExprStmt target_10) {
		target_10.getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_10.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_10.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Inode bitmap for group %u not in group (block %llu)!"
		and target_10.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
		and target_10.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vinode_bitmap_2352
}

predicate func_11(Parameter vsb_block_2345, Variable vinode_table_2353, EqualityOperation target_11) {
		target_11.getAnOperand().(VariableAccess).getTarget()=vinode_table_2353
		and target_11.getAnOperand().(VariableAccess).getTarget()=vsb_block_2345
}

predicate func_12(Variable vinode_bitmap_2352, LogicalOrExpr target_12) {
		target_12.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vinode_bitmap_2352
		and target_12.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("ext4_fsblk_t")
		and target_12.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vinode_bitmap_2352
		and target_12.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("ext4_fsblk_t")
}

predicate func_13(Parameter vsb_2344, Variable vi_2355, ExprStmt target_13) {
		target_13.getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_13.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_13.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_13.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Inode bitmap for group %u overlaps superblock"
		and target_13.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
}

predicate func_14(Parameter vsb_2344, ReturnStmt target_20, NotExpr target_14) {
		target_14.getOperand().(FunctionCall).getTarget().hasName("sb_rdonly")
		and target_14.getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_14.getParent().(IfStmt).getThen()=target_20
}

predicate func_15(Parameter vsb_2344, Variable vinode_table_2353, Variable vi_2355, ExprStmt target_15) {
		target_15.getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_15.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_15.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_15.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Inode table for group %u not in group (block %llu)!"
		and target_15.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
		and target_15.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vinode_table_2353
}

predicate func_16(Variable vinode_table_2353, LogicalOrExpr target_16) {
		target_16.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vinode_table_2353
		and target_16.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("ext4_fsblk_t")
		and target_16.getAnOperand().(RelationalOperation).getGreaterOperand().(SubExpr).getLeftOperand().(AddExpr).getAnOperand().(VariableAccess).getTarget()=vinode_table_2353
		and target_16.getAnOperand().(RelationalOperation).getGreaterOperand().(SubExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getTarget().getName()="s_itb_per_group"
		and target_16.getAnOperand().(RelationalOperation).getGreaterOperand().(SubExpr).getLeftOperand().(AddExpr).getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("ext4_sb_info *")
		and target_16.getAnOperand().(RelationalOperation).getGreaterOperand().(SubExpr).getRightOperand().(Literal).getValue()="1"
		and target_16.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("ext4_fsblk_t")
}

predicate func_17(Parameter vsb_2344, Variable vi_2355, ExprStmt target_17) {
		target_17.getExpr().(FunctionCall).getTarget().hasName("__ext4_msg")
		and target_17.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsb_2344
		and target_17.getExpr().(FunctionCall).getArgument(1).(StringLiteral).getValue()="3"
		and target_17.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="ext4_check_descriptors: Inode table for group %u overlaps superblock"
		and target_17.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vi_2355
}

predicate func_18(NotExpr target_3, Function func, ReturnStmt target_18) {
		target_18.getExpr().(Literal).getValue()="0"
		and target_18.getParent().(IfStmt).getCondition()=target_3
		and target_18.getEnclosingFunction() = func
}

predicate func_19(NotExpr target_9, Function func, ReturnStmt target_19) {
		target_19.getExpr().(Literal).getValue()="0"
		and target_19.getParent().(IfStmt).getCondition()=target_9
		and target_19.getEnclosingFunction() = func
}

predicate func_20(NotExpr target_14, Function func, ReturnStmt target_20) {
		target_20.getExpr().(Literal).getValue()="0"
		and target_20.getParent().(IfStmt).getCondition()=target_14
		and target_20.getEnclosingFunction() = func
}

from Function func, Parameter vsb_2344, Parameter vsb_block_2345, Variable vblock_bitmap_2351, Variable vinode_bitmap_2352, Variable vinode_table_2353, Variable vi_2355, NotExpr target_3, ExprStmt target_4, EqualityOperation target_5, EqualityOperation target_6, LogicalOrExpr target_7, ExprStmt target_8, NotExpr target_9, ExprStmt target_10, EqualityOperation target_11, LogicalOrExpr target_12, ExprStmt target_13, NotExpr target_14, ExprStmt target_15, LogicalOrExpr target_16, ExprStmt target_17, ReturnStmt target_18, ReturnStmt target_19, ReturnStmt target_20
where
not func_0(vsb_2344, vsb_block_2345, vblock_bitmap_2351, vi_2355, target_3, target_4, target_5, target_6, target_7, target_8)
and not func_1(vsb_2344, vsb_block_2345, vinode_bitmap_2352, vi_2355, target_9, target_10, target_6, target_11, target_12, target_13)
and not func_2(vsb_2344, vsb_block_2345, vinode_table_2353, vi_2355, target_14, target_15, target_11, target_16, target_17)
and func_3(vsb_2344, target_18, target_3)
and func_4(vsb_2344, vblock_bitmap_2351, vi_2355, target_4)
and func_5(vsb_block_2345, vblock_bitmap_2351, target_5)
and func_6(vsb_block_2345, vinode_bitmap_2352, target_6)
and func_7(vblock_bitmap_2351, target_7)
and func_8(vsb_2344, vi_2355, target_8)
and func_9(vsb_2344, target_19, target_9)
and func_10(vsb_2344, vinode_bitmap_2352, vi_2355, target_10)
and func_11(vsb_block_2345, vinode_table_2353, target_11)
and func_12(vinode_bitmap_2352, target_12)
and func_13(vsb_2344, vi_2355, target_13)
and func_14(vsb_2344, target_20, target_14)
and func_15(vsb_2344, vinode_table_2353, vi_2355, target_15)
and func_16(vinode_table_2353, target_16)
and func_17(vsb_2344, vi_2355, target_17)
and func_18(target_3, func, target_18)
and func_19(target_9, func, target_19)
and func_20(target_14, func, target_20)
and vsb_2344.getType().hasName("super_block *")
and vsb_block_2345.getType().hasName("ext4_fsblk_t")
and vblock_bitmap_2351.getType().hasName("ext4_fsblk_t")
and vinode_bitmap_2352.getType().hasName("ext4_fsblk_t")
and vinode_table_2353.getType().hasName("ext4_fsblk_t")
and vi_2355.getType().hasName("ext4_group_t")
and vsb_2344.getFunction() = func
and vsb_block_2345.getFunction() = func
and vblock_bitmap_2351.(LocalVariable).getFunction() = func
and vinode_bitmap_2352.(LocalVariable).getFunction() = func
and vinode_table_2353.(LocalVariable).getFunction() = func
and vi_2355.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
