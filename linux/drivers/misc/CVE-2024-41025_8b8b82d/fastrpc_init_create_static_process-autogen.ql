/**
 * @name linux-8b8b82dcf393ceaca8c88939338fd4c30b5b11b2-fastrpc_init_create_static_process
 * @id cpp/linux/8b8b82dcf393ceaca8c88939338fd4c30b5b11b2/fastrpc-init-create-static-process
 * @description linux-8b8b82dcf393ceaca8c88939338fd4c30b5b11b2-drivers/misc/fastrpc.c-fastrpc_init_create_static_process CVE-2024-41025
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vname_1239, LabelStmt target_2, ExprStmt target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vname_1239
	)
	and target_2.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vname_1239, ExprStmt target_3, ExprStmt target_0, Function func) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vname_1239
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_3.getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
)
}

predicate func_2(Function func, LabelStmt target_2) {
	target_2.getName() ="err_name"
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("kfree")
		and obj_0.getArgument(0).(VariableAccess).getTarget().getType().hasName("fastrpc_invoke_args *")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

from Function func, Variable vname_1239, ExprStmt target_0, LabelStmt target_2, ExprStmt target_3
where
func_0(vname_1239, target_2, target_0)
and not func_1(vname_1239, target_3, target_0, func)
and func_2(func, target_2)
and func_3(func, target_3)
and vname_1239.getType().hasName("char *")
and vname_1239.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
