/**
 * @name linux-adf0398cee86643b8eacde95f17d073d022f782c-l2cap_chan_timeout
 * @id cpp/linux/adf0398cee86643b8eacde95f17d073d022f782c/l2cap-chan-timeout
 * @description linux-adf0398cee86643b8eacde95f17d073d022f782c-net/bluetooth/l2cap_core.c-l2cap_chan_timeout CVE-2024-27399
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vconn_413, ExprStmt target_1, AddressOfExpr target_3, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget()=vconn_413
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vconn_413, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="chan_lock"
	and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_413
	and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_3(Variable vconn_413, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="chan_lock"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vconn_413
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mutex_lock_nested")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

from Function func, Variable vconn_413, ExprStmt target_1, AddressOfExpr target_3
where
not func_0(vconn_413, target_1, target_3, func)
and func_1(vconn_413, target_1)
and func_3(vconn_413, target_3)
and vconn_413.getType().hasName("l2cap_conn *")
and vconn_413.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
