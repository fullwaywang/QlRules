/**
 * @name linux-3a23b384e7e3d64d5587ad10729a34d4f761517e-stm32_adc_probe
 * @id cpp/linux/3a23b384e7e3d64d5587ad10729a34d4f761517e/stm32-adc-probe
 * @description linux-3a23b384e7e3d64d5587ad10729a34d4f761517e-drivers/iio/adc/stm32-adc-core.c-stm32_adc_probe CVE-2023-52802
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getType().hasName("const of_device_id *")
	and target_0.getRValue() instanceof FunctionCall
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(ExprStmt target_5, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(NotExpr).getOperand().(VariableAccess).getType().hasName("const of_device_id *")
	and target_1.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_5.getLocation()))
}

predicate func_2(Variable vpriv_708, ExprStmt target_5, AddressOfExpr target_6, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="cfg"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_708
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="data"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("const of_device_id *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_5.getLocation())
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_4(Variable vdev_709, FunctionCall target_4) {
	target_4.getTarget().hasName("of_match_device")
	and target_4.getArgument(0).(PointerFieldAccess).getTarget().getName()="of_match_table"
	and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="driver"
	and target_4.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_709
	and target_4.getArgument(1).(VariableAccess).getTarget()=vdev_709
}

predicate func_5(Variable vpriv_708, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="nb_adc_max"
	and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_708
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="num_adcs"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="cfg"
	and target_5.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_708
}

predicate func_6(Variable vpriv_708, AddressOfExpr target_6) {
	target_6.getOperand().(PointerFieldAccess).getTarget().getName()="common"
	and target_6.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpriv_708
}

from Function func, Variable vpriv_708, Variable vdev_709, FunctionCall target_4, ExprStmt target_5, AddressOfExpr target_6
where
not func_0(func)
and not func_1(target_5, func)
and not func_2(vpriv_708, target_5, target_6, func)
and func_4(vdev_709, target_4)
and func_5(vpriv_708, target_5)
and func_6(vpriv_708, target_6)
and vpriv_708.getType().hasName("stm32_adc_priv *")
and vdev_709.getType().hasName("device *")
and vpriv_708.(LocalVariable).getFunction() = func
and vdev_709.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
