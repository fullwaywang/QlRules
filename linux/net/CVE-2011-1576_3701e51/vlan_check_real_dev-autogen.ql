/**
 * @name linux-3701e51382a026cba10c60b03efabe534fba4ca4-vlan_check_real_dev
 * @id cpp/linux/3701e51382a026cba10c60b03efabe534fba4ca4/vlan-check-real-dev
 * @description linux-3701e51382a026cba10c60b03efabe534fba4ca4-net/8021q/vlan.c-vlan_check_real_dev CVE-2011-1576
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreal_dev_149, PointerFieldAccess target_0) {
		target_0.getTarget().getName()="features"
		and target_0.getQualifier().(VariableAccess).getTarget()=vreal_dev_149
}

predicate func_1(Function func, UnaryMinusExpr target_1) {
		target_1.getValue()="-95"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vops_152, Variable vname_151, Parameter vreal_dev_149, Function func, IfStmt target_2) {
		target_2.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="features"
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreal_dev_149
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="256"
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="ndo_vlan_rx_register"
		and target_2.getCondition().(LogicalAndExpr).getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vops_152
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="<6>8021q: device %s has buggy VLAN hw accel\n"
		and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vname_151
		and target_2.getThen().(BlockStmt).getStmt(1).(ReturnStmt).getExpr() instanceof UnaryMinusExpr
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
}

/*predicate func_3(Variable vname_151, LogicalAndExpr target_5, ExprStmt target_3) {
		target_3.getExpr().(FunctionCall).getTarget().hasName("printk")
		and target_3.getExpr().(FunctionCall).getArgument(0).(StringLiteral).getValue()="<6>8021q: device %s has buggy VLAN hw accel\n"
		and target_3.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vname_151
		and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
}

*/
/*predicate func_4(LogicalAndExpr target_5, Function func, ReturnStmt target_4) {
		target_4.getExpr() instanceof UnaryMinusExpr
		and target_4.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_5
		and target_4.getEnclosingFunction() = func
}

*/
predicate func_5(Function func, LogicalAndExpr target_5) {
		target_5.getAnOperand() instanceof BitwiseAndExpr
		and target_5.getAnOperand() instanceof NotExpr
		and target_5.getEnclosingFunction() = func
}

from Function func, Variable vops_152, Variable vname_151, Parameter vreal_dev_149, PointerFieldAccess target_0, UnaryMinusExpr target_1, IfStmt target_2, LogicalAndExpr target_5
where
func_0(vreal_dev_149, target_0)
and func_1(func, target_1)
and func_2(vops_152, vname_151, vreal_dev_149, func, target_2)
and func_5(func, target_5)
and vops_152.getType().hasName("const net_device_ops *")
and vname_151.getType().hasName("const char *")
and vreal_dev_149.getType().hasName("net_device *")
and vops_152.(LocalVariable).getFunction() = func
and vname_151.(LocalVariable).getFunction() = func
and vreal_dev_149.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
