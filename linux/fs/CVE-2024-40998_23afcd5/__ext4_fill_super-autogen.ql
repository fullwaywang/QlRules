/**
 * @name linux-23afcd52af06880c6c913a0ad99022b8937b575c-__ext4_fill_super
 * @id cpp/linux/23afcd52af06880c6c913a0ad99022b8937b575c/--ext4-fill-super
 * @description linux-23afcd52af06880c6c913a0ad99022b8937b575c-fs/ext4/super.c-__ext4_fill_super CVE-2024-40998
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_5215, Parameter vsb_5208, IfStmt target_9, ExprStmt target_0) {
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("ext4_register_sysfs")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vsb_5208
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_5215
	)
	and target_0.getLocation().isBefore(target_9.getLocation())
}

predicate func_1(Variable verr_5215, Parameter vsb_5208, IfStmt target_9, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("ext4_init_orphan_info")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vsb_5208
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=verr_5215
	)
	and target_9.getLocation().isBefore(target_1.getLocation())
}

predicate func_2(Parameter vsb_5208, LabelStmt target_10, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("ext4_unregister_li_request")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vsb_5208
	)
	and target_10.getLocation().isBefore(target_2.getLocation())
}

predicate func_3(Variable vsbi_5211, LabelStmt target_11, ExprStmt target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getExpr() |
		obj_0.getTarget().hasName("ext4_es_unregister_shrinker")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vsbi_5211
	)
	and target_11.getLocation().isBefore(target_3.getLocation())
}

predicate func_4(Variable verr_5215, ExprStmt target_12, IfStmt target_13, ReturnStmt target_14, Function func) {
exists(IfStmt target_4 |
	target_4.getCondition().(VariableAccess).getTarget()=verr_5215
	and target_4.getThen().(GotoStmt).getName() ="failed_mount9"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_12.getLocation())
	and target_13.getCondition().(VariableAccess).getLocation().isBefore(target_4.getCondition().(VariableAccess).getLocation())
	and target_4.getCondition().(VariableAccess).getLocation().isBefore(target_14.getExpr().(VariableAccess).getLocation())
)
}

predicate func_5(Variable verr_5215, Function func, IfStmt target_5) {
	target_5.getCondition().(VariableAccess).getTarget()=verr_5215
	and target_5.getThen().(GotoStmt).getName() ="failed_mount8"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable verr_5215, LogicalAndExpr target_15, IfStmt target_6) {
	target_6.getCondition().(VariableAccess).getTarget()=verr_5215
	and target_6.getThen().(GotoStmt).getName() ="failed_mount9"
	and target_6.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_15
}

predicate func_7(Parameter vsb_5208, Function func, ExprStmt target_7) {
	exists(FunctionCall obj_0 | obj_0=target_7.getExpr() |
		obj_0.getTarget().hasName("ext4_unregister_sysfs")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vsb_5208
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vsbi_5211, Function func, ExprStmt target_8) {
	exists(FunctionCall obj_0 | obj_0=target_8.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="s_kobj"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vsbi_5211
			)
		)
		and obj_0.getTarget().hasName("kobject_put")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Variable verr_5215, IfStmt target_9) {
	target_9.getCondition().(VariableAccess).getTarget()=verr_5215
	and target_9.getThen().(GotoStmt).getName() ="failed_mount7"
}

predicate func_10(Function func, LabelStmt target_10) {
	target_10.getName() ="failed_mount7"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Function func, LabelStmt target_11) {
	target_11.getName() ="failed_mount3a"
	and target_11.getEnclosingFunction() = func
}

predicate func_12(Variable vsbi_5211, ExprStmt target_12) {
	exists(FunctionCall obj_0 | obj_0=target_12.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="s_msg_count"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vsbi_5211
			)
		)
		and obj_0.getTarget().hasName("atomic_set")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
}

predicate func_13(Variable verr_5215, IfStmt target_13) {
	target_13.getCondition().(VariableAccess).getTarget()=verr_5215
	and target_13.getThen().(GotoStmt).getName() ="failed_mount10"
}

predicate func_14(Variable verr_5215, ReturnStmt target_14) {
	target_14.getExpr().(VariableAccess).getTarget()=verr_5215
}

predicate func_15(Parameter vsb_5208, LogicalAndExpr target_15) {
	exists(FunctionCall obj_0 | obj_0=target_15.getLeftOperand() |
		obj_0.getTarget().hasName("ext4_has_feature_quota")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vsb_5208
	)
	and exists(NotExpr obj_1 | obj_1=target_15.getRightOperand() |
		exists(FunctionCall obj_2 | obj_2=obj_1.getOperand() |
			obj_2.getTarget().hasName("sb_rdonly")
			and obj_2.getArgument(0).(VariableAccess).getTarget()=vsb_5208
		)
	)
}

from Function func, Variable vsbi_5211, Variable verr_5215, Parameter vsb_5208, ExprStmt target_0, ExprStmt target_1, ExprStmt target_2, ExprStmt target_3, IfStmt target_5, IfStmt target_6, ExprStmt target_7, ExprStmt target_8, IfStmt target_9, LabelStmt target_10, LabelStmt target_11, ExprStmt target_12, IfStmt target_13, ReturnStmt target_14, LogicalAndExpr target_15
where
func_0(verr_5215, vsb_5208, target_9, target_0)
and func_1(verr_5215, vsb_5208, target_9, target_1)
and func_2(vsb_5208, target_10, target_2)
and func_3(vsbi_5211, target_11, target_3)
and not func_4(verr_5215, target_12, target_13, target_14, func)
and func_5(verr_5215, func, target_5)
and func_6(verr_5215, target_15, target_6)
and func_7(vsb_5208, func, target_7)
and func_8(vsbi_5211, func, target_8)
and func_9(verr_5215, target_9)
and func_10(func, target_10)
and func_11(func, target_11)
and func_12(vsbi_5211, target_12)
and func_13(verr_5215, target_13)
and func_14(verr_5215, target_14)
and func_15(vsb_5208, target_15)
and vsbi_5211.getType().hasName("ext4_sb_info *")
and verr_5215.getType().hasName("int")
and vsb_5208.getType().hasName("super_block *")
and vsbi_5211.(LocalVariable).getFunction() = func
and verr_5215.(LocalVariable).getFunction() = func
and vsb_5208.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
