/**
 * @name linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-perf_event_set_filter
 * @id cpp/linux/f63a8daa5812afef4f06c962351687e1ff9ccb2b/perf-event-set-filter
 * @description linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-kernel/events/core.c-perf_event_set_filter CVE-2016-6786
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="12"
	and not target_0.getValue()="0"
	and target_0.getParent().(LShiftExpr).getParent().(FunctionCall).getArgument(1) instanceof BinaryBitwiseOperation
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vevent_6269, Variable vfilter_str_6271, Variable vret_6272, FunctionCall target_1) {
	target_1.getTarget().hasName("ftrace_profile_set_filter")
	and not target_1.getTarget().hasName("atomic_read")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vevent_6269
	and target_1.getArgument(1).(ValueFieldAccess).getTarget().getName()="config"
	and target_1.getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="attr"
	and target_1.getArgument(1).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
	and target_1.getArgument(2).(VariableAccess).getTarget()=vfilter_str_6271
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_6272
}

predicate func_2(Variable vfilter_str_6271, FunctionCall target_2) {
	target_2.getTarget().hasName("kfree")
	and not target_2.getTarget().hasName("mutex_lock_nested")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vfilter_str_6271
}

predicate func_3(ExprStmt target_35, Function func, IfStmt target_3) {
	target_3.getCondition() instanceof FunctionCall
	and target_3.getThen() instanceof ReturnStmt
	and target_3.getLocation().isBefore(target_35.getLocation())
	and target_3.getEnclosingFunction() = func
}

predicate func_5(Function func) {
exists(Initializer target_5 |
	target_5.getExpr() instanceof UnaryMinusExpr
	and target_5.getExpr().getEnclosingFunction() = func)
}

predicate func_6(ReturnStmt target_30, Function func) {
exists(NotExpr target_6 |
	target_6.getOperand().(VariableAccess).getType().hasName("perf_event *")
	and target_6.getParent().(IfStmt).getThen()=target_30
	and target_6.getEnclosingFunction() = func)
}

predicate func_7(EqualityOperation target_36, Function func) {
exists(GotoStmt target_7 |
	target_7.getName() ="set"
	and target_7.getParent().(IfStmt).getCondition()=target_36
	and target_7.getEnclosingFunction() = func)
}

predicate func_8(Parameter vevent_6269, ExprStmt target_37, EqualityOperation target_36, Function func) {
exists(IfStmt target_8 |
	target_8.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vevent_6269
	and target_8.getCondition().(EqualityOperation).getRightOperand().(VariableAccess).getType().hasName("perf_event *")
	and target_8.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
	and target_8.getLocation().isBefore(target_37.getLocation()))
}

predicate func_9(Function func) {
exists(PointerFieldAccess target_9 |
	target_9.getTarget().getName()="cpu"
	and target_9.getQualifier().(VariableAccess).getType().hasName("perf_event *")
	and target_9.getEnclosingFunction() = func)
}

predicate func_10(Parameter vevent_6269) {
exists(PointerFieldAccess target_10 |
	target_10.getTarget().getName()="cpu"
	and target_10.getQualifier().(VariableAccess).getTarget()=vevent_6269)
}

predicate func_11(FunctionCall target_32, Function func) {
exists(GotoStmt target_11 |
	target_11.getName() ="out"
	and target_11.getParent().(IfStmt).getCondition()=target_32
	and target_11.getEnclosingFunction() = func)
}

predicate func_12(Parameter vevent_6269, ExprStmt target_35, Function func) {
exists(IfStmt target_12 |
	target_12.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="cpu"
	and target_12.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("perf_event *")
	and target_12.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(UnaryMinusExpr).getValue()="-1"
	and target_12.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ctx"
	and target_12.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("perf_event *")
	and target_12.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getTarget().getName()="ctx"
	and target_12.getCondition().(LogicalAndExpr).getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
	and target_12.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_12
	and target_12.getLocation().isBefore(target_35.getLocation()))
}

predicate func_13(Parameter vevent_6269) {
exists(AddressOfExpr target_13 |
	target_13.getOperand().(PointerFieldAccess).getTarget().getName()="mmap_mutex"
	and target_13.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
	and target_13.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall)
}

predicate func_15(Parameter vevent_6269, ExprStmt target_35, Function func) {
exists(IfStmt target_15 |
	target_15.getCondition().(FunctionCall).getTarget().hasName("atomic_read")
	and target_15.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mmap_count"
	and target_15.getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
	and target_15.getThen().(GotoStmt).getName() ="unlock"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
	and target_15.getLocation().isBefore(target_35.getLocation()))
}

/*predicate func_16(Parameter vevent_6269, ExprStmt target_35) {
exists(AddressOfExpr target_16 |
	target_16.getOperand().(PointerFieldAccess).getTarget().getName()="mmap_count"
	and target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
	and target_16.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall)
}

*/
predicate func_17(ExprStmt target_35, Function func) {
exists(IfStmt target_17 |
	target_17.getCondition().(VariableAccess).getType().hasName("perf_event *")
	and target_17.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ring_buffer *")
	and target_17.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ring_buffer_get")
	and target_17.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("perf_event *")
	and target_17.getThen().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(VariableAccess).getType().hasName("ring_buffer *")
	and target_17.getThen().(BlockStmt).getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="unlock"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_17
	and target_17.getLocation().isBefore(target_35.getLocation()))
}

/*predicate func_18(Function func) {
exists(AssignExpr target_18 |
	target_18.getLValue().(VariableAccess).getType().hasName("ring_buffer *")
	and target_18.getRValue().(FunctionCall).getTarget().hasName("ring_buffer_get")
	and target_18.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("perf_event *")
	and target_18.getEnclosingFunction() = func)
}

*/
predicate func_19(Parameter vevent_6269) {
exists(FunctionCall target_19 |
	target_19.getTarget().hasName("ring_buffer_attach")
	and target_19.getArgument(0).(VariableAccess).getTarget()=vevent_6269
	and target_19.getArgument(1).(VariableAccess).getType().hasName("ring_buffer *"))
}

predicate func_20(Variable vret_6272, ExprStmt target_38, ReturnStmt target_40, Function func) {
exists(ExprStmt target_20 |
	target_20.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_6272
	and target_20.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
	and target_20.getLocation().isBefore(target_38.getLocation())
	and target_20.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_40.getExpr().(VariableAccess).getLocation()))
}

predicate func_22(Parameter vevent_6269, ExprStmt target_38, ValueFieldAccess target_41, Function func) {
exists(ExprStmt target_22 |
	target_22.getExpr().(FunctionCall).getTarget().hasName("mutex_unlock")
	and target_22.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mmap_mutex"
	and target_22.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_22
	and target_22.getLocation().isBefore(target_38.getLocation())
	and target_41.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_22.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_23(Function func, UnaryMinusExpr target_23) {
	target_23.getValue()="-22"
	and target_23.getEnclosingFunction() = func
}

predicate func_24(Parameter vevent_6269, VariableAccess target_24) {
	target_24.getTarget()=vevent_6269
}

predicate func_25(Parameter vevent_6269, VariableAccess target_25) {
	target_25.getTarget()=vevent_6269
	and target_25.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_26(Parameter vevent_6269, VariableAccess target_26) {
	target_26.getTarget()=vevent_6269
	and target_26.getParent().(PointerFieldAccess).getParent().(ValueFieldAccess).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_28(Parameter vevent_6269, ReturnStmt target_30, ValueFieldAccess target_28) {
	target_28.getTarget().getName()="type"
	and target_28.getQualifier().(PointerFieldAccess).getTarget().getName()="attr"
	and target_28.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
	and target_28.getParent().(NEExpr).getParent().(IfStmt).getThen()=target_30
}

predicate func_30(EqualityOperation target_36, Function func, ReturnStmt target_30) {
	target_30.getExpr() instanceof UnaryMinusExpr
	and target_30.getParent().(IfStmt).getCondition()=target_36
	and target_30.getEnclosingFunction() = func
}

predicate func_31(Parameter varg_6269, Variable vfilter_str_6271, AssignExpr target_31) {
	target_31.getLValue().(VariableAccess).getTarget()=vfilter_str_6271
	and target_31.getRValue().(FunctionCall).getTarget().hasName("strndup_user")
	and target_31.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=varg_6269
	and target_31.getRValue().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="4096"
}

predicate func_32(Variable vfilter_str_6271, ReturnStmt target_33, FunctionCall target_32) {
	target_32.getTarget().hasName("IS_ERR")
	and target_32.getArgument(0).(VariableAccess).getTarget()=vfilter_str_6271
	and target_32.getParent().(IfStmt).getThen()=target_33
}

predicate func_33(Variable vfilter_str_6271, FunctionCall target_32, ReturnStmt target_33) {
	target_33.getExpr().(FunctionCall).getTarget().hasName("PTR_ERR")
	and target_33.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfilter_str_6271
	and target_33.getParent().(IfStmt).getCondition()=target_32
}

predicate func_34(Parameter vevent_6269, PointerFieldAccess target_34) {
	target_34.getTarget().getName()="attr"
	and target_34.getQualifier().(VariableAccess).getTarget()=vevent_6269
}

predicate func_35(Variable vret_6272, ExprStmt target_35) {
	target_35.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_6272
	and target_35.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_36(Function func, EqualityOperation target_36) {
	target_36.getLeftOperand() instanceof ValueFieldAccess
	and target_36.getRightOperand() instanceof EnumConstantAccess
	and target_36.getEnclosingFunction() = func
}

predicate func_37(Function func, ExprStmt target_37) {
	target_37.getExpr() instanceof AssignExpr
	and target_37.getEnclosingFunction() = func
}

predicate func_38(Function func, ExprStmt target_38) {
	target_38.getExpr() instanceof FunctionCall
	and target_38.getEnclosingFunction() = func
}

predicate func_40(Variable vret_6272, ReturnStmt target_40) {
	target_40.getExpr().(VariableAccess).getTarget()=vret_6272
}

predicate func_41(Parameter vevent_6269, ValueFieldAccess target_41) {
	target_41.getTarget().getName()="config"
	and target_41.getQualifier().(PointerFieldAccess).getTarget().getName()="attr"
	and target_41.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_6269
}

from Function func, Parameter vevent_6269, Parameter varg_6269, Variable vfilter_str_6271, Variable vret_6272, Literal target_0, FunctionCall target_1, FunctionCall target_2, IfStmt target_3, UnaryMinusExpr target_23, VariableAccess target_24, VariableAccess target_25, VariableAccess target_26, ValueFieldAccess target_28, ReturnStmt target_30, AssignExpr target_31, FunctionCall target_32, ReturnStmt target_33, PointerFieldAccess target_34, ExprStmt target_35, EqualityOperation target_36, ExprStmt target_37, ExprStmt target_38, ReturnStmt target_40, ValueFieldAccess target_41
where
func_0(func, target_0)
and func_1(vevent_6269, vfilter_str_6271, vret_6272, target_1)
and func_2(vfilter_str_6271, target_2)
and func_3(target_35, func, target_3)
and not func_5(func)
and not func_6(target_30, func)
and not func_7(target_36, func)
and not func_8(vevent_6269, target_37, target_36, func)
and not func_9(func)
and not func_10(vevent_6269)
and not func_11(target_32, func)
and not func_12(vevent_6269, target_35, func)
and not func_13(vevent_6269)
and not func_15(vevent_6269, target_35, func)
and not func_17(target_35, func)
and not func_19(vevent_6269)
and not func_20(vret_6272, target_38, target_40, func)
and not func_22(vevent_6269, target_38, target_41, func)
and func_23(func, target_23)
and func_24(vevent_6269, target_24)
and func_25(vevent_6269, target_25)
and func_26(vevent_6269, target_26)
and func_28(vevent_6269, target_30, target_28)
and func_30(target_36, func, target_30)
and func_31(varg_6269, vfilter_str_6271, target_31)
and func_32(vfilter_str_6271, target_33, target_32)
and func_33(vfilter_str_6271, target_32, target_33)
and func_34(vevent_6269, target_34)
and func_35(vret_6272, target_35)
and func_36(func, target_36)
and func_37(func, target_37)
and func_38(func, target_38)
and func_40(vret_6272, target_40)
and func_41(vevent_6269, target_41)
and vevent_6269.getType().hasName("perf_event *")
and varg_6269.getType().hasName("void *")
and vfilter_str_6271.getType().hasName("char *")
and vret_6272.getType().hasName("int")
and vevent_6269.getFunction() = func
and varg_6269.getFunction() = func
and vfilter_str_6271.(LocalVariable).getFunction() = func
and vret_6272.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
