/**
 * @name linux-3c2a2ff67d46106715c2132021b98bd057c27545-__nilfs_btree_get_block
 * @id cpp/linux/3c2a2ff67d46106715c2132021b98bd057c27545/--nilfs-btree-get-block
 * @description linux-3c2a2ff67d46106715c2132021b98bd057c27545-fs/nilfs2/btree.c-__nilfs_btree_get_block CVE-2023-52900
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_487, ReturnStmt target_3) {
exists(FunctionCall target_0 |
	exists(NotExpr obj_0 | obj_0=target_0.getArgument(0) |
		exists(NotExpr obj_1 | obj_1=obj_0.getOperand() |
			exists(EqualityOperation obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getLeftOperand().(VariableAccess).getTarget()=vret_487
				and obj_2.getRightOperand() instanceof UnaryMinusExpr
			)
		)
	)
	and target_0.getTarget().hasName("__builtin_expect")
	and target_0.getArgument(1).(Literal).getValue()="1"
	and target_0.getParent().(IfStmt).getThen()=target_3
)
}

predicate func_1(Variable vret_487, VariableAccess target_7, ReturnStmt target_3) {
exists(IfStmt target_1 |
	exists(EqualityOperation obj_0 | obj_0=target_1.getCondition() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vret_487
		and obj_0.getRightOperand().(UnaryMinusExpr).getValue()="-2"
	)
	and exists(BlockStmt obj_1 | obj_1=target_1.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(0) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLValue().(VariableAccess).getTarget()=vret_487
				and obj_3.getRValue().(UnaryMinusExpr).getValue()="-22"
			)
		)
	)
	and exists(BlockStmt obj_4 | obj_4=target_1.getParent() |
		exists(IfStmt obj_5 | obj_5=obj_4.getParent() |
			obj_5.getThen().(BlockStmt).getStmt(1)=target_1
			and obj_5.getCondition()=target_7
		)
	)
	and target_3.getExpr().(VariableAccess).getLocation().isBefore(target_1.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vret_487, ReturnStmt target_3, UnaryMinusExpr target_2) {
	exists(NEExpr obj_0 | obj_0=target_2.getParent() |
		obj_0.getLeftOperand().(VariableAccess).getTarget()=vret_487
		and obj_0.getParent().(IfStmt).getThen()=target_3
	)
	and target_2.getValue()="-17"
}

predicate func_3(Variable vret_487, EqualityOperation target_6, ReturnStmt target_3) {
	target_3.getExpr().(VariableAccess).getTarget()=vret_487
	and target_3.getParent().(IfStmt).getCondition()=target_6
}

/*predicate func_4(Variable vret_487, ReturnStmt target_3, VariableAccess target_4) {
	exists(NEExpr obj_0 | obj_0=target_4.getParent() |
		obj_0.getRightOperand().(UnaryMinusExpr).getValue()="-17"
		and obj_0.getParent().(IfStmt).getThen()=target_3
	)
	and target_4.getTarget()=vret_487
}

*/
predicate func_5(VariableAccess target_7, Function func, GotoStmt target_5) {
	target_5.getName() ="out_check"
	and target_5.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_7
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vret_487, ReturnStmt target_3, EqualityOperation target_6) {
	target_6.getLeftOperand().(VariableAccess).getTarget()=vret_487
	and target_6.getRightOperand() instanceof UnaryMinusExpr
	and target_6.getParent().(IfStmt).getThen()=target_3
}

predicate func_7(Variable vret_487, BlockStmt target_8, VariableAccess target_7) {
	target_7.getTarget()=vret_487
	and target_7.getParent().(IfStmt).getThen()=target_8
}

predicate func_8(Function func, BlockStmt target_8) {
	exists(IfStmt obj_0 | obj_0=target_8.getStmt(0) |
		obj_0.getCondition() instanceof EqualityOperation
		and obj_0.getThen() instanceof ReturnStmt
	)
	and target_8.getStmt(1) instanceof GotoStmt
	and target_8.getEnclosingFunction() = func
}

from Function func, Variable vret_487, UnaryMinusExpr target_2, ReturnStmt target_3, GotoStmt target_5, EqualityOperation target_6, VariableAccess target_7, BlockStmt target_8
where
not func_0(vret_487, target_3)
and not func_1(vret_487, target_7, target_3)
and func_2(vret_487, target_3, target_2)
and func_3(vret_487, target_6, target_3)
and func_5(target_7, func, target_5)
and func_6(vret_487, target_3, target_6)
and func_7(vret_487, target_8, target_7)
and func_8(func, target_8)
and vret_487.getType().hasName("int")
and vret_487.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
