/**
 * @name linux-fefac8c4686fd81fde6830c6dae32f9001d2ac28-amdgpu_vm_bo_update
 * @id cpp/linux/fefac8c4686fd81fde6830c6dae32f9001d2ac28/amdgpu-vm-bo-update
 * @description linux-fefac8c4686fd81fde6830c6dae32f9001d2ac28-drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c-amdgpu_vm_bo_update CVE-2023-52883
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vabo_1095, ExprStmt target_2, EqualityOperation target_1) {
exists(LogicalAndExpr target_0 |
	exists(ValueFieldAccess obj_0 | obj_0=target_0.getLeftOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="tbo"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vabo_1095
		)
		and obj_0.getTarget().getName()="resource"
	)
	and target_0.getRightOperand() instanceof EqualityOperation
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vabo_1095, ExprStmt target_2, EqualityOperation target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getLeftOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="tbo"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vabo_1095
			)
			and obj_1.getTarget().getName()="resource"
		)
		and obj_0.getTarget().getName()="mem_type"
	)
	and target_1.getRightOperand().(Literal).getValue()="2"
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("amdgpu_bo *")
		and obj_0.getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("void *")
	)
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable vabo_1095, EqualityOperation target_1, ExprStmt target_2
where
not func_0(vabo_1095, target_2, target_1)
and func_1(vabo_1095, target_2, target_1)
and func_2(func, target_2)
and vabo_1095.getType().hasName("amdgpu_bo *")
and vabo_1095.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
