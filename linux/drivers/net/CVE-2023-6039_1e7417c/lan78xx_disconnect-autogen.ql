/**
 * @name linux-1e7417c188d0a83fb385ba2dbe35fd2563f2b6f3-lan78xx_disconnect
 * @id cpp/linux/1e7417c188d0a83fb385ba2dbe35fd2563f2b6f3/lan78xx-disconnect
 * @description linux-1e7417c188d0a83fb385ba2dbe35fd2563f2b6f3-drivers/net/usb/lan78xx.c-lan78xx_disconnect CVE-2023-6039
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdev_4217, ExprStmt target_4, FunctionCall target_0) {
	target_0.getTarget().hasName("timer_pending")
	and not target_0.getTarget().hasName("timer_shutdown_sync")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="stat_monitor"
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_4217
	and target_0.getParent().(IfStmt).getThen()=target_4
}

predicate func_1(Variable vdev_4217, FunctionCall target_1) {
	target_1.getTarget().hasName("del_timer_sync")
	and not target_1.getTarget().hasName("timer_shutdown_sync")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="stat_monitor"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_4217
}

predicate func_2(Variable vdev_4217, ExprStmt target_5, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("set_bit")
	and target_2.getExpr().(FunctionCall).getArgument(0).(Literal).getValue()="10"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_2.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_4217
	and target_2.getLocation().isBefore(target_5.getLocation())
}

predicate func_3(Function func, IfStmt target_3) {
	target_3.getCondition() instanceof FunctionCall
	and target_3.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Function func, ExprStmt target_4) {
	target_4.getExpr() instanceof FunctionCall
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable vdev_4217, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("netif_napi_del")
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="napi"
	and target_5.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_4217
}

from Function func, Variable vdev_4217, FunctionCall target_0, FunctionCall target_1, ExprStmt target_2, IfStmt target_3, ExprStmt target_4, ExprStmt target_5
where
func_0(vdev_4217, target_4, target_0)
and func_1(vdev_4217, target_1)
and func_2(vdev_4217, target_5, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(vdev_4217, target_5)
and vdev_4217.getType().hasName("lan78xx_net *")
and vdev_4217.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
