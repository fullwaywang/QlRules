/**
 * @name linux-af3d5d1c87664a4f150fcf3534c6567cb19909b0-l2cap_parse_conf_req
 * @id cpp/linux/af3d5d1c87664a4f150fcf3534c6567cb19909b0/l2cap-parse-conf-req
 * @description linux-af3d5d1c87664a4f150fcf3534c6567cb19909b0-net/bluetooth/l2cap_core.c-l2cap_parse_conf_req CVE-2019-3460
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(SwitchCase target_19, Function func, IfStmt target_0) {
	target_0.getCondition() instanceof EqualityOperation
	and target_0.getThen() instanceof ExprStmt
	and target_19.getLocation().isBefore(target_0.getLocation())
	and target_0.getEnclosingFunction() = func
}

predicate func_1(SwitchCase target_20, Function func, IfStmt target_1) {
	target_1.getCondition() instanceof EqualityOperation
	and target_1.getThen() instanceof BlockStmt
	and target_20.getLocation().isBefore(target_1.getLocation())
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable volen_3327, ExprStmt target_14) {
exists(EqualityOperation target_2 |
	target_2.getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_2.getRightOperand().(Literal).getValue()="2"
	and target_2.getParent().(IfStmt).getThen()=target_14)
}

predicate func_3(EqualityOperation target_17, Function func) {
exists(BreakStmt target_3 |
	target_3.getParent().(IfStmt).getCondition()=target_17
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Variable volen_3327, BlockStmt target_21, ExprStmt target_13) {
exists(EqualityOperation target_4 |
	target_4.getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_4.getRightOperand().(Literal).getValue()="2"
	and target_4.getParent().(IfStmt).getThen()=target_21
	and target_4.getLeftOperand().(VariableAccess).getLocation().isBefore(target_13.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation()))
}

predicate func_5(EqualityOperation target_18, Function func) {
exists(BreakStmt target_5 |
	target_5.getParent().(IfStmt).getCondition()=target_18
	and target_5.getEnclosingFunction() = func)
}

predicate func_6(Variable volen_3327, VariableAccess target_22, ExprStmt target_14) {
exists(IfStmt target_6 |
	target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_6.getCondition().(EqualityOperation).getRightOperand() instanceof SizeofExprOperator
	and target_6.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_22
	and target_14.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_6.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_7(Variable volen_3327, VariableAccess target_22, EqualityOperation target_18) {
exists(IfStmt target_7 |
	target_7.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_7.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="1"
	and target_7.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_22
	and target_7.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation().isBefore(target_18.getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_8(Variable volen_3327, VariableAccess target_22, ExprStmt target_13) {
exists(IfStmt target_8 |
	target_8.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_8.getCondition().(EqualityOperation).getRightOperand() instanceof SizeofExprOperator
	and target_8.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_22
	and target_13.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getLocation().isBefore(target_8.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getLocation()))
}

predicate func_9(Variable volen_3327, VariableAccess target_22) {
exists(IfStmt target_9 |
	target_9.getCondition().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_9.getCondition().(EqualityOperation).getRightOperand().(Literal).getValue()="2"
	and target_9.getParent().(BlockStmt).getParent().(SwitchStmt).getExpr()=target_22)
}

/*predicate func_10(Function func, SizeofExprOperator target_10) {
	target_10.getValue()="9"
	and target_10.getEnclosingFunction() = func
}

*/
/*predicate func_11(Function func, SizeofExprOperator target_11) {
	target_11.getValue()="16"
	and target_11.getEnclosingFunction() = func
}

*/
predicate func_12(Variable vremote_efs_3331, EqualityOperation target_18, ExprStmt target_12) {
	target_12.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vremote_efs_3331
	and target_12.getExpr().(AssignExpr).getRValue().(Literal).getValue()="1"
	and target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
}

predicate func_13(Variable volen_3327, Variable vval_3328, Variable vefs_3330, EqualityOperation target_18, ExprStmt target_13) {
	target_13.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_13.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vefs_3330
	and target_13.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vval_3328
	and target_13.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=volen_3327
	and target_13.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_18
}

predicate func_14(Variable volen_3327, Variable vval_3328, Variable vrfc_3329, EqualityOperation target_17, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("__memcpy")
	and target_14.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vrfc_3329
	and target_14.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vval_3328
	and target_14.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=volen_3327
	and target_14.getParent().(IfStmt).getCondition()=target_17
}

predicate func_15(Variable volen_3327, ExprStmt target_14, VariableAccess target_15) {
	target_15.getTarget()=volen_3327
	and target_15.getParent().(EQExpr).getRightOperand().(SizeofExprOperator).getValue()="9"
	and target_15.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_14
}

predicate func_16(Variable volen_3327, BlockStmt target_21, VariableAccess target_16) {
	target_16.getTarget()=volen_3327
	and target_16.getParent().(EQExpr).getRightOperand().(SizeofExprOperator).getValue()="16"
	and target_16.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_21
}

predicate func_17(Variable volen_3327, ExprStmt target_14, EqualityOperation target_17) {
	target_17.getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_17.getRightOperand() instanceof SizeofExprOperator
	and target_17.getParent().(IfStmt).getThen()=target_14
}

predicate func_18(Variable volen_3327, BlockStmt target_21, EqualityOperation target_18) {
	target_18.getLeftOperand().(VariableAccess).getTarget()=volen_3327
	and target_18.getRightOperand() instanceof SizeofExprOperator
	and target_18.getParent().(IfStmt).getThen()=target_21
}

predicate func_19(Function func, SwitchCase target_19) {
	target_19.getExpr().(Literal).getValue()="4"
	and target_19.getEnclosingFunction() = func
}

predicate func_20(Function func, SwitchCase target_20) {
	target_20.getExpr().(Literal).getValue()="6"
	and target_20.getEnclosingFunction() = func
}

predicate func_21(Function func, BlockStmt target_21) {
	target_21.getStmt(0) instanceof ExprStmt
	and target_21.getStmt(1) instanceof ExprStmt
	and target_21.getEnclosingFunction() = func
}

predicate func_22(Variable vtype_3327, VariableAccess target_22) {
	target_22.getTarget()=vtype_3327
}

from Function func, Variable vtype_3327, Variable volen_3327, Variable vval_3328, Variable vrfc_3329, Variable vefs_3330, Variable vremote_efs_3331, IfStmt target_0, IfStmt target_1, ExprStmt target_12, ExprStmt target_13, ExprStmt target_14, VariableAccess target_15, VariableAccess target_16, EqualityOperation target_17, EqualityOperation target_18, SwitchCase target_19, SwitchCase target_20, BlockStmt target_21, VariableAccess target_22
where
func_0(target_19, func, target_0)
and func_1(target_20, func, target_1)
and not func_2(volen_3327, target_14)
and not func_3(target_17, func)
and not func_4(volen_3327, target_21, target_13)
and not func_5(target_18, func)
and not func_6(volen_3327, target_22, target_14)
and not func_7(volen_3327, target_22, target_18)
and not func_8(volen_3327, target_22, target_13)
and not func_9(volen_3327, target_22)
and func_12(vremote_efs_3331, target_18, target_12)
and func_13(volen_3327, vval_3328, vefs_3330, target_18, target_13)
and func_14(volen_3327, vval_3328, vrfc_3329, target_17, target_14)
and func_15(volen_3327, target_14, target_15)
and func_16(volen_3327, target_21, target_16)
and func_17(volen_3327, target_14, target_17)
and func_18(volen_3327, target_21, target_18)
and func_19(func, target_19)
and func_20(func, target_20)
and func_21(func, target_21)
and func_22(vtype_3327, target_22)
and vtype_3327.getType().hasName("int")
and volen_3327.getType().hasName("int")
and vval_3328.getType().hasName("unsigned long")
and vrfc_3329.getType().hasName("l2cap_conf_rfc")
and vefs_3330.getType().hasName("l2cap_conf_efs")
and vremote_efs_3331.getType().hasName("u8")
and vtype_3327.(LocalVariable).getFunction() = func
and volen_3327.(LocalVariable).getFunction() = func
and vval_3328.(LocalVariable).getFunction() = func
and vrfc_3329.(LocalVariable).getFunction() = func
and vefs_3330.(LocalVariable).getFunction() = func
and vremote_efs_3331.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
