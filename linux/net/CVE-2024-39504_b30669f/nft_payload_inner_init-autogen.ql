/**
 * @name linux-b30669fdea0ca03aa22995e6c99f7e7d9dee89ff-nft_payload_inner_init
 * @id cpp/linux/b30669fdea0ca03aa22995e6c99f7e7d9dee89ff/nft-payload-inner-init
 * @description linux-b30669fdea0ca03aa22995e6c99f7e7d9dee89ff-net/netfilter/nft_payload.c-nft_payload_inner_init CVE-2024-39504
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vtb_648, ExprStmt target_1, ArrayExpr target_2, Function func) {
exists(IfStmt target_0 |
	exists(LogicalOrExpr obj_0 | obj_0=target_0.getCondition() |
		exists(LogicalOrExpr obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(LogicalOrExpr obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getLeftOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_648
				and obj_2.getRightOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_648
			)
			and obj_1.getRightOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_648
		)
		and obj_0.getRightOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_648
	)
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(LogicalOrExpr).getLeftOperand().(NotExpr).getOperand().(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_2.getArrayBase().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vtb_648, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getArgument(0) |
				obj_2.getTarget().hasName("nla_get_be32")
				and obj_2.getArgument(0).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vtb_648
			)
			and obj_1.getTarget().hasName("__builtin_bswap32")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("u32")
	)
}

predicate func_2(Parameter vtb_648, ArrayExpr target_2) {
	target_2.getArrayBase().(VariableAccess).getTarget()=vtb_648
}

from Function func, Parameter vtb_648, ExprStmt target_1, ArrayExpr target_2
where
not func_0(vtb_648, target_1, target_2, func)
and func_1(vtb_648, target_1)
and func_2(vtb_648, target_2)
and vtb_648.getType().hasName("const nlattr *const[]")
and vtb_648.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
