/**
 * @name linux-32927393dc1ccd60fb2bdc05b9e8e88753761469-do_proc_douintvec_r
 * @id cpp/linux/32927393dc1ccd60fb2bdc05b9e8e88753761469/do-proc-douintvec-r
 * @description linux-32927393dc1ccd60fb2bdc05b9e8e88753761469-kernel/sysctl.c-do_proc_douintvec_r CVE-2021-4218
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable verr_705, Variable vleft_706, NotExpr target_0) {
	target_0.getOperand().(VariableAccess).getTarget()=vleft_706
	and target_0.getParent().(LogicalOrExpr).getLeftOperand().(VariableAccess).getTarget()=verr_705
	and target_0.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_1(Parameter vbuffer_697, Variable vlval_704, Variable verr_705, Variable vleft_706, FunctionCall target_1) {
	target_1.getTarget().hasName("proc_put_long")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vbuffer_697
	and target_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vleft_706
	and target_1.getArgument(2).(VariableAccess).getTarget()=vlval_704
	and target_1.getParent().(AssignExpr).getRValue() = target_1
	and target_1.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_705
}

predicate func_2(Parameter vbuffer_697, Variable verr_705, Variable vleft_706, FunctionCall target_2) {
	target_2.getTarget().hasName("proc_put_char")
	and target_2.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vbuffer_697
	and target_2.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vleft_706
	and target_2.getArgument(2).(CharLiteral).getValue()="10"
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=verr_705
}

predicate func_3(Variable verr_705, AssignExpr target_3) {
	target_3.getLValue().(VariableAccess).getTarget()=verr_705
	and target_3.getRValue() instanceof FunctionCall
}

predicate func_4(Variable verr_705, LogicalOrExpr target_4) {
	target_4.getLeftOperand().(VariableAccess).getTarget()=verr_705
	and target_4.getRightOperand() instanceof NotExpr
	and target_4.getParent().(IfStmt).getThen() instanceof GotoStmt
}

predicate func_5(Variable verr_705, AssignExpr target_5) {
	target_5.getLValue().(VariableAccess).getTarget()=verr_705
	and target_5.getRValue() instanceof FunctionCall
}

from Function func, Parameter vbuffer_697, Variable vlval_704, Variable verr_705, Variable vleft_706, NotExpr target_0, FunctionCall target_1, FunctionCall target_2, AssignExpr target_3, LogicalOrExpr target_4, AssignExpr target_5
where
func_0(verr_705, vleft_706, target_0)
and func_1(vbuffer_697, vlval_704, verr_705, vleft_706, target_1)
and func_2(vbuffer_697, verr_705, vleft_706, target_2)
and func_3(verr_705, target_3)
and func_4(verr_705, target_4)
and func_5(verr_705, target_5)
and vbuffer_697.getType().hasName("void *")
and vlval_704.getType().hasName("unsigned long")
and verr_705.getType().hasName("int")
and vleft_706.getType().hasName("size_t")
and vbuffer_697.getFunction() = func
and vlval_704.(LocalVariable).getFunction() = func
and verr_705.(LocalVariable).getFunction() = func
and vleft_706.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
