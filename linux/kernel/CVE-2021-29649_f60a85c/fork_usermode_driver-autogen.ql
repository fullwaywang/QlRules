/**
 * @name linux-f60a85cad677c4f9bb4cadd764f1d106c38c7cf8-fork_usermode_driver
 * @id cpp/linux/f60a85cad677c4f9bb4cadd764f1d106c38c7cf8/fork-usermode-driver
 * @description linux-f60a85cad677c4f9bb4cadd764f1d106c38c7cf8-fork_usermode_driver CVE-2021-29649
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
		target_0.getValue()="1242"
		and not target_0.getValue()="1243"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
		target_1.getValue()="1243"
		and not target_1.getValue()="1244"
		and target_1.getEnclosingFunction() = func
}

predicate func_2(Function func, Literal target_2) {
		target_2.getValue()="1244"
		and not target_2.getValue()="1245"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func) {
	exists(ExprStmt target_3 |
		target_3.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="1245"
		and target_3.getEnclosingFunction() = func)
}

from Function func, Literal target_0, Literal target_1, Literal target_2
where
func_0(func, target_0)
and func_1(func, target_1)
and func_2(func, target_2)
and not func_3(func)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
