/**
 * @name linux-1871c6020d7308afb99127bba51f04548e7ca84e-kvm_emulate_pio_string
 * @id cpp/linux/1871c6020d7308afb99127bba51f04548e7ca84e/kvm-emulate-pio-string
 * @description linux-1871c6020d7308afb99127bba51f04548e7ca84e-arch/x86/kvm/x86.c-kvm_emulate_pio_string CVE-2010-0298
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(EqualityOperation target_2, Function func, ReturnStmt target_0) {
		target_0.getExpr().(Literal).getValue()="1"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Parameter vvcpu_3568, EqualityOperation target_2, ExprStmt target_3, LogicalAndExpr target_4, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("kvm_inject_gp")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3568
		and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
}

predicate func_2(Function func, EqualityOperation target_2) {
		target_2.getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_2.getAnOperand().(Literal).getValue()="2"
		and target_2.getEnclosingFunction() = func
}

predicate func_3(Parameter vvcpu_3568, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("pio_copy_data")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3568
}

predicate func_4(Parameter vvcpu_3568, LogicalAndExpr target_4) {
		target_4.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_4.getAnOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("pio_string_write")
		and target_4.getAnOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vvcpu_3568
}

from Function func, Parameter vvcpu_3568, ReturnStmt target_0, ExprStmt target_1, EqualityOperation target_2, ExprStmt target_3, LogicalAndExpr target_4
where
func_0(target_2, func, target_0)
and func_1(vvcpu_3568, target_2, target_3, target_4, target_1)
and func_2(func, target_2)
and func_3(vvcpu_3568, target_3)
and func_4(vvcpu_3568, target_4)
and vvcpu_3568.getType().hasName("kvm_vcpu *")
and vvcpu_3568.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
