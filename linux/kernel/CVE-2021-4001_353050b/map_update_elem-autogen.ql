/**
 * @name linux-353050be4c19e102178ccc05988101887c25ae53-map_update_elem
 * @id cpp/linux/353050be4c19e102178ccc05988101887c25ae53/map-update-elem
 * @description linux-353050be4c19e102178ccc05988101887c25ae53-kernel/bpf/syscall.c-map_update_elem CVE-2021-4001
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmap_1129, IfStmt target_2, FunctionCall target_3, NotExpr target_4, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("bpf_map_write_active_inc")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmap_1129
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation())
	and target_3.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vmap_1129, ExprStmt target_5, ExprStmt target_6, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(FunctionCall).getTarget().hasName("bpf_map_write_active_dec")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmap_1129
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_5.getLocation())
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vmap_1129, IfStmt target_2) {
	target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("map_get_sys_perms")
	and target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmap_1129
	and target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("fd")
	and target_2.getCondition().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="262144"
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and target_2.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="err_put"
}

predicate func_3(Variable vmap_1129, FunctionCall target_3) {
	target_3.getTarget().hasName("PTR_ERR")
	and target_3.getArgument(0).(VariableAccess).getTarget()=vmap_1129
}

predicate func_4(Variable vmap_1129, NotExpr target_4) {
	target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("map_get_sys_perms")
	and target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmap_1129
	and target_4.getOperand().(BitwiseAndExpr).getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("fd")
	and target_4.getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="262144"
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("fdput")
	and target_5.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("fd")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Variable vmap_1129, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("bpf_map_update_value")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vmap_1129
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("fd")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("void *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("void *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(ValueFieldAccess).getTarget().getName()="flags"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("bpf_attr *")
}

from Function func, Variable vmap_1129, IfStmt target_2, FunctionCall target_3, NotExpr target_4, ExprStmt target_5, ExprStmt target_6
where
not func_0(vmap_1129, target_2, target_3, target_4, func)
and not func_1(vmap_1129, target_5, target_6, func)
and func_2(vmap_1129, target_2)
and func_3(vmap_1129, target_3)
and func_4(vmap_1129, target_4)
and func_5(func, target_5)
and func_6(vmap_1129, target_6)
and vmap_1129.getType().hasName("bpf_map *")
and vmap_1129.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
