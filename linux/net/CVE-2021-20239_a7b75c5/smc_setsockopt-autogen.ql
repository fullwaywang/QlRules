/**
 * @name linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-smc_setsockopt
 * @id cpp/linux/a7b75c5a8c41445f33efb663887ff5f5c3b4454b/smc-setsockopt
 * @description linux-a7b75c5a8c41445f33efb663887ff5f5c3b4454b-net/smc/af_smc.c-smc_setsockopt CVE-2021-20239
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter voptval_1734, Variable vval_1738, ReturnStmt target_10, ExprStmt target_11, AsmStmt target_7, IfStmt target_12) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("copy_from_sockptr")
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vval_1738
	and target_0.getArgument(1).(VariableAccess).getTarget()=voptval_1734
	and target_0.getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_0.getArgument(2).(SizeofTypeOperator).getValue()="4"
	and target_0.getParent().(IfStmt).getThen()=target_10
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(3).(VariableAccess).getLocation().isBefore(target_0.getArgument(1).(VariableAccess).getLocation())
	and target_0.getArgument(1).(VariableAccess).getLocation().isBefore(target_7.getChild(3).(VariableAccess).getLocation())
	and target_0.getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getLocation().isBefore(target_12.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Variable vval_1738, Variable v__val_gu_1757, VariableAccess target_1) {
	target_1.getTarget()=vval_1738
	and target_1.getParent().(AssignExpr).getLValue() = target_1
	and target_1.getParent().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1757
}

predicate func_2(Parameter voptval_1734, Variable vval_1738, Variable v__ret_gu_1757, Variable v__val_gu_1757, Variable vcurrent_stack_pointer, ReturnStmt target_10, StmtExpr target_2) {
	target_2.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(Literal).getValue()="0"
	and target_2.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_2.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_2.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(0).(VariableAccess).getTarget()=v__ret_gu_1757
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(1).(VariableAccess).getTarget()=v__val_gu_1757
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(3).(VariableAccess).getTarget()=voptval_1734
	and target_2.getStmt().(BlockStmt).getStmt(4).(AsmStmt).getChild(4).(SizeofExprOperator).getValue()="4"
	and target_2.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vval_1738
	and target_2.getStmt().(BlockStmt).getStmt(5).(ExprStmt).getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1757
	and target_2.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_1757
	and target_2.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_10
}

/*predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(Literal).getValue()="0"
	and target_5.getEnclosingFunction() = func
}

*/
/*predicate func_6(Function func, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("__might_fault")
	and target_6.getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_6.getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_6.getEnclosingFunction() = func
}

*/
predicate func_7(Parameter voptval_1734, Variable v__ret_gu_1757, Variable v__val_gu_1757, Variable vcurrent_stack_pointer, AsmStmt target_7) {
	target_7.getChild(0).(VariableAccess).getTarget()=v__ret_gu_1757
	and target_7.getChild(1).(VariableAccess).getTarget()=v__val_gu_1757
	and target_7.getChild(2).(VariableAccess).getTarget()=vcurrent_stack_pointer
	and target_7.getChild(3).(VariableAccess).getTarget()=voptval_1734
	and target_7.getChild(4).(SizeofExprOperator).getValue()="4"
}

/*predicate func_8(Variable vval_1738, Variable v__val_gu_1757, ExprStmt target_8) {
	target_8.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vval_1738
	and target_8.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=v__val_gu_1757
}

*/
/*predicate func_9(Variable v__ret_gu_1757, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_9.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=v__ret_gu_1757
	and target_9.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

*/
predicate func_10(Function func, ReturnStmt target_10) {
	target_10.getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_10.getEnclosingFunction() = func
}

predicate func_11(Parameter voptval_1734, ExprStmt target_11) {
	target_11.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="setsockopt"
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="ops"
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="clcsock"
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("smc_sock *")
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="clcsock"
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("smc_sock *")
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("int")
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(3).(VariableAccess).getTarget()=voptval_1734
	and target_11.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(4).(VariableAccess).getTarget().getType().hasName("unsigned int")
}

predicate func_12(Variable vval_1738, IfStmt target_12) {
	target_12.getCondition().(VariableAccess).getTarget()=vval_1738
	and target_12.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("mod_delayed_work")
	and target_12.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("workqueue_struct *")
	and target_12.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="tx_work"
	and target_12.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="conn"
	and target_12.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("smc_sock *")
	and target_12.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(Literal).getValue()="0"
}

from Function func, Parameter voptval_1734, Variable vval_1738, Variable v__ret_gu_1757, Variable v__val_gu_1757, Variable vcurrent_stack_pointer, VariableAccess target_1, StmtExpr target_2, AsmStmt target_7, ReturnStmt target_10, ExprStmt target_11, IfStmt target_12
where
not func_0(voptval_1734, vval_1738, target_10, target_11, target_7, target_12)
and func_1(vval_1738, v__val_gu_1757, target_1)
and func_2(voptval_1734, vval_1738, v__ret_gu_1757, v__val_gu_1757, vcurrent_stack_pointer, target_10, target_2)
and func_7(voptval_1734, v__ret_gu_1757, v__val_gu_1757, vcurrent_stack_pointer, target_7)
and func_10(func, target_10)
and func_11(voptval_1734, target_11)
and func_12(vval_1738, target_12)
and voptval_1734.getType().hasName("char *")
and vval_1738.getType().hasName("int")
and v__ret_gu_1757.getType().hasName("int")
and v__val_gu_1757.getType().hasName("unsigned int")
and vcurrent_stack_pointer.getType().hasName("unsigned long")
and voptval_1734.getFunction() = func
and vval_1738.(LocalVariable).getFunction() = func
and v__ret_gu_1757.(LocalVariable).getFunction() = func
and v__val_gu_1757.(LocalVariable).getFunction() = func
and not vcurrent_stack_pointer.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
