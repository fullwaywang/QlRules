/**
 * @name linux-f3d3342602f8bcbf37d7c46641cb9bca7618eb1c-rfcomm_sock_recvmsg
 * @id cpp/linux/f3d3342602f8bcbf37d7c46641cb9bca7618eb1c/rfcomm-sock-recvmsg
 * @description linux-f3d3342602f8bcbf37d7c46641cb9bca7618eb1c-net/bluetooth/rfcomm/sock.c-rfcomm_sock_recvmsg CVE-2013-7270
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsk_612, Initializer target_0) {
		target_0.getExpr().(PointerFieldAccess).getTarget().getName()="dlc"
		and target_0.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_612
}

predicate func_1(Variable vd_613, BlockStmt target_43, FunctionCall target_1) {
		target_1.getTarget().hasName("test_and_clear_bit")
		and not target_1.getTarget().hasName("af_alg_wait_for_completion")
		and target_1.getArgument(0).(Literal).getValue()="8"
		and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_1.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vd_613
		and target_1.getParent().(IfStmt).getThen()=target_43
}

predicate func_2(Variable vd_613, FunctionCall target_2) {
		target_2.getTarget().hasName("rfcomm_dlc_accept")
		and not target_2.getTarget().hasName("ahash_request_set_crypt")
		and target_2.getArgument(0).(VariableAccess).getTarget()=vd_613
}

predicate func_3(Parameter viocb_609, Parameter vsock_609, Parameter vmsg_610, Parameter vsize_610, Parameter vflags_610, Variable vlen_614, VariableAccess target_3) {
		target_3.getTarget()=vlen_614
		and target_3.getParent().(AssignExpr).getLValue() = target_3
		and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("bt_sock_stream_recvmsg")
		and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=viocb_609
		and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsock_609
		and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vmsg_610
		and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(VariableAccess).getTarget()=vsize_610
		and target_3.getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vflags_610
}

/*predicate func_4(Parameter viocb_609, Parameter vsock_609, Parameter vmsg_610, Parameter vsize_610, Parameter vflags_610, Variable vlen_614, FunctionCall target_4) {
		target_4.getTarget().hasName("bt_sock_stream_recvmsg")
		and not target_4.getTarget().hasName("crypto_ahash_final")
		and target_4.getArgument(0).(VariableAccess).getTarget()=viocb_609
		and target_4.getArgument(1).(VariableAccess).getTarget()=vsock_609
		and target_4.getArgument(2).(VariableAccess).getTarget()=vmsg_610
		and target_4.getArgument(3).(VariableAccess).getTarget()=vsize_610
		and target_4.getArgument(4).(VariableAccess).getTarget()=vflags_610
		and target_4.getParent().(AssignExpr).getRValue() = target_4
		and target_4.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vlen_614
}

*/
predicate func_5(Parameter vflags_610, VariableAccess target_5) {
		target_5.getTarget()=vflags_610
		and vflags_610.getIndex() = 4
}

predicate func_6(ExprStmt target_44, Function func, FunctionCall target_6) {
		target_6.getTarget().hasName("atomic_read")
		and not target_6.getTarget().hasName("memcpy_toiovec")
		and target_6.getArgument(0).(AddressOfExpr).getOperand() instanceof ValueFieldAccess
		and target_6.getParent().(LEExpr).getGreaterOperand() instanceof BinaryBitwiseOperation
		and target_6.getParent().(LEExpr).getParent().(IfStmt).getThen()=target_44
		and target_6.getEnclosingFunction() = func
}

predicate func_8(Variable vsk_612, ExprStmt target_46) {
	exists(FunctionCall target_8 |
		target_8.getTarget().hasName("alg_sk")
		and target_8.getArgument(0).(VariableAccess).getTarget()=vsk_612
		and target_8.getArgument(0).(VariableAccess).getLocation().isBefore(target_46.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_10(Variable vlen_614, LogicalAndExpr target_36) {
	exists(AssignExpr target_10 |
		target_10.getLValue().(VariableAccess).getTarget()=vlen_614
		and target_10.getRValue().(VariableAccess).getType().hasName("unsigned int")
		and target_36.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation().isBefore(target_10.getLValue().(VariableAccess).getLocation()))
}

predicate func_11(Parameter vmsg_610, Variable vlen_614, RelationalOperation target_39) {
	exists(IfStmt target_11 |
		target_11.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlen_614
		and target_11.getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getType().hasName("unsigned int")
		and target_11.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getTarget().getName()="msg_flags"
		and target_11.getThen().(ExprStmt).getExpr().(AssignOrExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_610
		and target_11.getThen().(ExprStmt).getExpr().(AssignOrExpr).getRValue().(Literal).getValue()="32"
		and target_11.getParent().(IfStmt).getCondition()=target_39)
}

/*predicate func_12(Parameter vmsg_610) {
	exists(AssignOrExpr target_12 |
		target_12.getLValue().(PointerFieldAccess).getTarget().getName()="msg_flags"
		and target_12.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_610
		and target_12.getRValue().(Literal).getValue()="32")
}

*/
predicate func_13(Function func) {
	exists(PointerFieldAccess target_13 |
		target_13.getTarget().getName()="more"
		and target_13.getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_13.getEnclosingFunction() = func)
}

predicate func_14(Function func) {
	exists(AssignExpr target_14 |
		target_14.getLValue().(PointerFieldAccess).getTarget().getName()="more"
		and target_14.getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_14.getRValue() instanceof Literal
		and target_14.getEnclosingFunction() = func)
}

predicate func_15(Function func) {
	exists(AddressOfExpr target_15 |
		target_15.getOperand().(PointerFieldAccess).getTarget().getName()="req"
		and target_15.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_15.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
		and target_15.getEnclosingFunction() = func)
}

predicate func_16(Function func) {
	exists(PointerFieldAccess target_16 |
		target_16.getTarget().getName()="result"
		and target_16.getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_16.getEnclosingFunction() = func)
}

predicate func_17(Function func) {
	exists(AddressOfExpr target_17 |
		target_17.getOperand().(PointerFieldAccess).getTarget().getName()="req"
		and target_17.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_17.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
		and target_17.getEnclosingFunction() = func)
}

predicate func_18(Variable vd_613, BlockStmt target_43) {
	exists(AddressOfExpr target_18 |
		target_18.getOperand().(PointerFieldAccess).getTarget().getName()="completion"
		and target_18.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_18.getParent().(FunctionCall).getArgument(0) instanceof Literal
		and target_18.getParent().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_18.getParent().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vd_613
		and target_18.getParent().(FunctionCall).getParent().(IfStmt).getThen()=target_43)
}

predicate func_19(FunctionCall target_1, Function func) {
	exists(GotoStmt target_19 |
		target_19.getParent().(IfStmt).getCondition()=target_1
		and target_19.getEnclosingFunction() = func)
}

predicate func_20(Parameter vmsg_610, Variable vlen_614, ExprStmt target_50, Function func) {
	exists(ExprStmt target_20 |
		target_20.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
		and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("memcpy_toiovec")
		and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="msg_iov"
		and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_610
		and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="result"
		and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vlen_614
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_20
		and target_50.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_20.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

/*predicate func_22(Parameter vmsg_610, ExprStmt target_50) {
	exists(PointerFieldAccess target_22 |
		target_22.getTarget().getName()="msg_iov"
		and target_22.getQualifier().(VariableAccess).getTarget()=vmsg_610
		and target_50.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_22.getQualifier().(VariableAccess).getLocation()))
}

*/
/*predicate func_23(Function func) {
	exists(PointerFieldAccess target_23 |
		target_23.getTarget().getName()="result"
		and target_23.getQualifier().(VariableAccess).getType().hasName("hash_ctx *")
		and target_23.getEnclosingFunction() = func)
}

*/
predicate func_25(Variable vlen_614, ReturnStmt target_52) {
	exists(ConditionalExpr target_25 |
		target_25.getCondition().(VariableAccess).getType().hasName("int")
		and target_25.getElse().(VariableAccess).getTarget()=vlen_614
		and target_25.getElse().(VariableAccess).getLocation().isBefore(target_52.getExpr().(VariableAccess).getLocation()))
}

predicate func_26(Parameter vmsg_610, VariableAccess target_26) {
		target_26.getTarget()=vmsg_610
}

predicate func_28(Variable vsk_612, VariableAccess target_28) {
		target_28.getTarget()=vsk_612
}

predicate func_30(Parameter vmsg_610, VariableAccess target_30) {
		target_30.getTarget()=vmsg_610
		and target_30.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_33(Variable vd_613, PointerFieldAccess target_33) {
		target_33.getTarget().getName()="flags"
		and target_33.getQualifier().(VariableAccess).getTarget()=vd_613
}

predicate func_34(Parameter vmsg_610, PointerFieldAccess target_34) {
		target_34.getTarget().getName()="msg_namelen"
		and target_34.getQualifier().(VariableAccess).getTarget()=vmsg_610
}

predicate func_35(FunctionCall target_1, Function func, ReturnStmt target_35) {
		target_35.getExpr() instanceof Literal
		and target_35.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_35.getEnclosingFunction() = func
}

predicate func_36(Parameter vflags_610, Variable vlen_614, ExprStmt target_53, LogicalAndExpr target_36) {
		target_36.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=vflags_610
		and target_36.getAnOperand().(NotExpr).getOperand().(BitwiseAndExpr).getRightOperand().(Literal).getValue()="2"
		and target_36.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vlen_614
		and target_36.getAnOperand().(RelationalOperation).getLesserOperand() instanceof Literal
		and target_36.getParent().(IfStmt).getThen()=target_53
}

/*predicate func_37(Variable vlen_614, ExprStmt target_54, VariableAccess target_37) {
		target_37.getTarget()=vlen_614
		and target_54.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_37.getLocation())
}

*/
predicate func_38(Variable vsk_612, Variable vlen_614, FunctionCall target_38) {
		target_38.getTarget().hasName("atomic_sub")
		and target_38.getArgument(0).(VariableAccess).getTarget()=vlen_614
		and target_38.getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="rmem_alloc"
		and target_38.getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_38.getArgument(1).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_612
}

predicate func_39(Variable vsk_612, ExprStmt target_44, RelationalOperation target_39) {
		 (target_39 instanceof GEExpr or target_39 instanceof LEExpr)
		and target_39.getLesserOperand() instanceof FunctionCall
		and target_39.getGreaterOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sk_rcvbuf"
		and target_39.getGreaterOperand().(BinaryBitwiseOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_612
		and target_39.getGreaterOperand().(BinaryBitwiseOperation).getRightOperand().(Literal).getValue()="2"
		and target_39.getParent().(IfStmt).getThen()=target_44
}

predicate func_40(Variable vsk_612, ValueFieldAccess target_40) {
		target_40.getTarget().getName()="rmem_alloc"
		and target_40.getQualifier().(PointerFieldAccess).getTarget().getName()="sk_backlog"
		and target_40.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_612
		and target_40.getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(LEExpr).getLesserOperand() instanceof FunctionCall
}

predicate func_41(Variable vsk_612, FunctionCall target_41) {
		target_41.getTarget().hasName("rfcomm_dlc_unthrottle")
		and target_41.getArgument(0).(PointerFieldAccess).getTarget().getName()="dlc"
		and target_41.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_612
}

predicate func_42(Variable vlen_614, VariableAccess target_42) {
		target_42.getTarget()=vlen_614
}

predicate func_43(Parameter vmsg_610, BlockStmt target_43) {
		target_43.getStmt(0).(ExprStmt).getExpr() instanceof FunctionCall
		and target_43.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="msg_namelen"
		and target_43.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_610
		and target_43.getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof Literal
		and target_43.getStmt(2) instanceof ReturnStmt
}

predicate func_44(Function func, ExprStmt target_44) {
		target_44.getExpr() instanceof FunctionCall
		and target_44.getEnclosingFunction() = func
}

predicate func_46(Variable vsk_612, ExprStmt target_46) {
		target_46.getExpr().(FunctionCall).getTarget().hasName("lock_sock")
		and target_46.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_612
}

predicate func_50(Parameter vmsg_610, ExprStmt target_50) {
		target_50.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="msg_namelen"
		and target_50.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_610
		and target_50.getExpr().(AssignExpr).getRValue() instanceof Literal
}

predicate func_52(Variable vlen_614, ReturnStmt target_52) {
		target_52.getExpr().(VariableAccess).getTarget()=vlen_614
}

predicate func_53(Function func, ExprStmt target_53) {
		target_53.getExpr() instanceof FunctionCall
		and target_53.getEnclosingFunction() = func
}

predicate func_54(Variable vlen_614, ExprStmt target_54) {
		target_54.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vlen_614
		and target_54.getExpr().(AssignExpr).getRValue() instanceof FunctionCall
}

from Function func, Parameter viocb_609, Parameter vsock_609, Parameter vmsg_610, Parameter vsize_610, Parameter vflags_610, Variable vsk_612, Variable vd_613, Variable vlen_614, Initializer target_0, FunctionCall target_1, FunctionCall target_2, VariableAccess target_3, VariableAccess target_5, FunctionCall target_6, VariableAccess target_26, VariableAccess target_28, VariableAccess target_30, PointerFieldAccess target_33, PointerFieldAccess target_34, ReturnStmt target_35, LogicalAndExpr target_36, FunctionCall target_38, RelationalOperation target_39, ValueFieldAccess target_40, FunctionCall target_41, VariableAccess target_42, BlockStmt target_43, ExprStmt target_44, ExprStmt target_46, ExprStmt target_50, ReturnStmt target_52, ExprStmt target_53, ExprStmt target_54
where
func_0(vsk_612, target_0)
and func_1(vd_613, target_43, target_1)
and func_2(vd_613, target_2)
and func_3(viocb_609, vsock_609, vmsg_610, vsize_610, vflags_610, vlen_614, target_3)
and func_5(vflags_610, target_5)
and func_6(target_44, func, target_6)
and not func_8(vsk_612, target_46)
and not func_10(vlen_614, target_36)
and not func_11(vmsg_610, vlen_614, target_39)
and not func_13(func)
and not func_14(func)
and not func_15(func)
and not func_16(func)
and not func_17(func)
and not func_18(vd_613, target_43)
and not func_19(target_1, func)
and not func_20(vmsg_610, vlen_614, target_50, func)
and not func_25(vlen_614, target_52)
and func_26(vmsg_610, target_26)
and func_28(vsk_612, target_28)
and func_30(vmsg_610, target_30)
and func_33(vd_613, target_33)
and func_34(vmsg_610, target_34)
and func_35(target_1, func, target_35)
and func_36(vflags_610, vlen_614, target_53, target_36)
and func_38(vsk_612, vlen_614, target_38)
and func_39(vsk_612, target_44, target_39)
and func_40(vsk_612, target_40)
and func_41(vsk_612, target_41)
and func_42(vlen_614, target_42)
and func_43(vmsg_610, target_43)
and func_44(func, target_44)
and func_46(vsk_612, target_46)
and func_50(vmsg_610, target_50)
and func_52(vlen_614, target_52)
and func_53(func, target_53)
and func_54(vlen_614, target_54)
and viocb_609.getType().hasName("kiocb *")
and vsock_609.getType().hasName("socket *")
and vmsg_610.getType().hasName("msghdr *")
and vsize_610.getType().hasName("size_t")
and vflags_610.getType().hasName("int")
and vsk_612.getType().hasName("sock *")
and vd_613.getType().hasName("rfcomm_dlc *")
and vlen_614.getType().hasName("int")
and viocb_609.getFunction() = func
and vsock_609.getFunction() = func
and vmsg_610.getFunction() = func
and vsize_610.getFunction() = func
and vflags_610.getFunction() = func
and vsk_612.(LocalVariable).getFunction() = func
and vd_613.(LocalVariable).getFunction() = func
and vlen_614.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
