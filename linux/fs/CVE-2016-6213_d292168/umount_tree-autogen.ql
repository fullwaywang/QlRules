/**
 * @name linux-d29216842a85c7970c536108e093963f02714498-umount_tree
 * @id cpp/linux/d29216842a85c7970c536108e093963f02714498/umount-tree
 * @description linux-d29216842a85c7970c536108e093963f02714498-fs/namespace.c-umount_tree CVE-2016-6213
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vp_1401, ExprStmt target_4) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getType().hasName("mnt_namespace *")
	and target_0.getRValue().(PointerFieldAccess).getTarget().getName()="mnt_ns"
	and target_0.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1401
	and target_0.getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(ExprStmt target_4, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(VariableAccess).getType().hasName("mnt_namespace *")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getTarget().getName()="mounts"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(PostfixDecrExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getType().hasName("mnt_namespace *")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__touch_mnt_namespace")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("mnt_namespace *")
	and target_1.getLocation().isBefore(target_4.getLocation())
	and target_1.getEnclosingFunction() = func)
}

predicate func_3(Variable vp_1401, PointerFieldAccess target_3) {
	target_3.getTarget().getName()="mnt_ns"
	and target_3.getQualifier().(VariableAccess).getTarget()=vp_1401
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__touch_mnt_namespace")
}

predicate func_4(Variable vp_1401, ExprStmt target_4) {
	target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="mnt_ns"
	and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vp_1401
	and target_4.getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
}

from Function func, Variable vp_1401, PointerFieldAccess target_3, ExprStmt target_4
where
not func_0(vp_1401, target_4)
and not func_1(target_4, func)
and func_3(vp_1401, target_3)
and func_4(vp_1401, target_4)
and vp_1401.getType().hasName("mount *")
and vp_1401.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
