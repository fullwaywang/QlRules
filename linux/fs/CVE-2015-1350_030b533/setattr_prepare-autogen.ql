/**
 * @name linux-030b533c4fd4d2ec3402363323de4bb2983c9cee-setattr_prepare
 * @id cpp/linux/030b533c4fd4d2ec3402363323de4bb2983c9cee/setattr-prepare
 * @description linux-030b533c4fd4d2ec3402363323de4bb2983c9cee-fs/attr.c-setattr_prepare CVE-2015-1350
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="0"
	and not target_0.getValue()="1"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(BitwiseAndExpr target_5, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="kill_priv"
	and target_1.getParent().(IfStmt).getCondition()=target_5
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Variable via_valid_36, Parameter vdentry_33, BitwiseAndExpr target_6, FunctionCall target_7, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getTarget()=via_valid_36
	and target_2.getCondition().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="16384"
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("security_inode_killpriv")
	and target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdentry_33
	and target_2.getThen().(BlockStmt).getStmt(2).(IfStmt).getCondition().(VariableAccess).getType().hasName("int")
	and target_2.getThen().(BlockStmt).getStmt(2).(IfStmt).getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt
	and target_6.getLeftOperand().(VariableAccess).getLocation().isBefore(target_2.getCondition().(BitwiseAndExpr).getLeftOperand().(VariableAccess).getLocation())
	and target_7.getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_4(BitwiseAndExpr target_5, Function func, ReturnStmt target_4) {
	target_4.getExpr().(Literal).getValue()="0"
	and target_4.getParent().(IfStmt).getCondition()=target_5
	and target_4.getEnclosingFunction() = func
}

predicate func_5(Variable via_valid_36, BitwiseAndExpr target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=via_valid_36
	and target_5.getRightOperand().(BinaryBitwiseOperation).getValue()="512"
}

predicate func_6(Variable via_valid_36, BitwiseAndExpr target_6) {
	target_6.getLeftOperand().(VariableAccess).getTarget()=via_valid_36
	and target_6.getRightOperand().(BitwiseOrExpr).getValue()="65920"
}

predicate func_7(Parameter vdentry_33, FunctionCall target_7) {
	target_7.getTarget().hasName("d_inode")
	and target_7.getArgument(0).(VariableAccess).getTarget()=vdentry_33
}

from Function func, Variable via_valid_36, Parameter vdentry_33, Literal target_0, ReturnStmt target_4, BitwiseAndExpr target_5, BitwiseAndExpr target_6, FunctionCall target_7
where
func_0(func, target_0)
and not func_1(target_5, func)
and not func_2(via_valid_36, vdentry_33, target_6, target_7, func)
and func_4(target_5, func, target_4)
and func_5(via_valid_36, target_5)
and func_6(via_valid_36, target_6)
and func_7(vdentry_33, target_7)
and via_valid_36.getType().hasName("unsigned int")
and vdentry_33.getType().hasName("dentry *")
and via_valid_36.(LocalVariable).getFunction() = func
and vdentry_33.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
