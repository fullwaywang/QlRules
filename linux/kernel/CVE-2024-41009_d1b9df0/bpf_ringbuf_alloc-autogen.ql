/**
 * @name linux-d1b9df0435bc61e0b44f578846516df8ef476686-bpf_ringbuf_alloc
 * @id cpp/linux/d1b9df0435bc61e0b44f578846516df8ef476686/bpf-ringbuf-alloc
 * @description linux-d1b9df0435bc61e0b44f578846516df8ef476686-kernel/bpf/ringbuf.c-bpf_ringbuf_alloc CVE-2024-41009
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrb_165, ExprStmt target_1, ReturnStmt target_2, Function func) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="pending_pos"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vrb_165
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_1.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vrb_165, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="producer_pos"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vrb_165
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
}

predicate func_2(Variable vrb_165, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=vrb_165
}

from Function func, Variable vrb_165, ExprStmt target_1, ReturnStmt target_2
where
not func_0(vrb_165, target_1, target_2, func)
and func_1(vrb_165, target_1)
and func_2(vrb_165, target_2)
and vrb_165.getType().hasName("bpf_ringbuf *")
and vrb_165.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
