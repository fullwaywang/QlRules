/**
 * @name linux-9d538fa60bad4f7b23193c89e843797a1cf71ef3-sk_clone_lock
 * @id cpp/linux/9d538fa60bad4f7b23193c89e843797a1cf71ef3/sk-clone-lock
 * @description linux-9d538fa60bad4f7b23193c89e843797a1cf71ef3-net/core/sock.c-sk_clone_lock CVE-2018-9568
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vnewsk_1648, Parameter vsk_1646, EqualityOperation target_1, ExprStmt target_2, NotExpr target_3, ExprStmt target_4) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sk_prot_creator"
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewsk_1648
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getTarget().getName()="skc_prot"
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1646
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(2)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignExpr).getRValue().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vnewsk_1648, EqualityOperation target_1) {
		target_1.getAnOperand().(VariableAccess).getTarget()=vnewsk_1648
		and target_1.getAnOperand().(Literal).getValue()="0"
}

predicate func_2(Variable vnewsk_1648, Parameter vsk_1646, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("sock_copy")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnewsk_1648
		and target_2.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vsk_1646
}

predicate func_3(Variable vnewsk_1648, NotExpr target_3) {
		target_3.getOperand().(NotExpr).getOperand().(ValueFieldAccess).getTarget().getName()="skc_net_refcnt"
		and target_3.getOperand().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
		and target_3.getOperand().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewsk_1648
}

predicate func_4(Variable vnewsk_1648, Parameter vsk_1646, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="sk_userlocks"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnewsk_1648
		and target_4.getExpr().(AssignExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="sk_userlocks"
		and target_4.getExpr().(AssignExpr).getRValue().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1646
		and target_4.getExpr().(AssignExpr).getRValue().(BitwiseAndExpr).getRightOperand().(ComplementExpr).getValue()="-9"
}

from Function func, Variable vnewsk_1648, Parameter vsk_1646, EqualityOperation target_1, ExprStmt target_2, NotExpr target_3, ExprStmt target_4
where
not func_0(vnewsk_1648, vsk_1646, target_1, target_2, target_3, target_4)
and func_1(vnewsk_1648, target_1)
and func_2(vnewsk_1648, vsk_1646, target_2)
and func_3(vnewsk_1648, target_3)
and func_4(vnewsk_1648, vsk_1646, target_4)
and vnewsk_1648.getType().hasName("sock *")
and vsk_1646.getType().hasName("const sock *")
and vnewsk_1648.(LocalVariable).getFunction() = func
and vsk_1646.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
