/**
 * @name linux-227349998e5740f14d531b0f0d704e66b1ed3c2f-nouveau_display_create
 * @id cpp/linux/227349998e5740f14d531b0f0d704e66b1ed3c2f/nouveau-display-create
 * @description linux-227349998e5740f14d531b0f0d704e66b1ed3c2f-drivers/gpu/drm/nouveau/nouveau_display.c-nouveau_display_create CVE-2024-40926
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vdrm_684, EqualityOperation target_1, AddressOfExpr target_2, LogicalAndExpr target_3) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="headless"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdrm_684
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_3.getCondition()=target_1
		)
	)
	and target_2.getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getRightOperand().(LogicalOrExpr).getRightOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, EqualityOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getRightOperand().(UnaryMinusExpr).getValue()="-19"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vdrm_684, AddressOfExpr target_2) {
	exists(ValueFieldAccess obj_0 | obj_0=target_2.getOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getQualifier() |
			obj_1.getTarget().getName()="client"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vdrm_684
		)
		and obj_0.getTarget().getName()="device"
	)
}

predicate func_3(Variable vdrm_684, LogicalAndExpr target_3) {
	exists(LogicalOrExpr obj_0 | obj_0=target_3.getRightOperand() |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getQualifier() |
				obj_2.getTarget().getName()="disp"
				and obj_2.getQualifier().(VariableAccess).getTarget().getType().hasName("nouveau_display *")
			)
			and obj_1.getTarget().getName()="outp_mask"
		)
		and exists(ValueFieldAccess obj_3 | obj_3=obj_0.getRightOperand() |
			exists(ValueFieldAccess obj_4 | obj_4=obj_3.getQualifier() |
				exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
					obj_5.getTarget().getName()="vbios"
					and obj_5.getQualifier().(VariableAccess).getTarget()=vdrm_684
				)
				and obj_4.getTarget().getName()="dcb"
			)
			and obj_3.getTarget().getName()="entries"
		)
	)
	and target_3.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vdrm_684, EqualityOperation target_1, AddressOfExpr target_2, LogicalAndExpr target_3
where
not func_0(vdrm_684, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vdrm_684, target_2)
and func_3(vdrm_684, target_3)
and vdrm_684.getType().hasName("nouveau_drm *")
and vdrm_684.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
