/**
 * @name linux-5b4a79ba65a1ab479903fff2e604865d229b70a9-sock_map_close
 * @id cpp/linux/5b4a79ba65a1ab479903fff2e604865d229b70a9/sock-map-close
 * @description linux-5b4a79ba65a1ab479903fff2e604865d229b70a9-net/core/sock_map.c-sock_map_close CVE-2023-52735
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsaved_close_1609) {
exists(AssignExpr target_0 |
	target_0.getLValue().(VariableAccess).getTarget()=vsaved_close_1609
	and target_0.getRValue().(PointerFieldAccess).getTarget().getName()="close"
	and target_0.getRValue().(PointerFieldAccess).getQualifier().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0")
}

/*predicate func_1(Function func) {
exists(StmtExpr target_1 |
	target_1.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(NotExpr).getValue()="0"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="skc_prot"
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(PointerDereferenceExpr).getOperand().(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_1.getEnclosingFunction() = func)
}

*/
predicate func_2(ExprStmt target_3, Function func) {
exists(IfStmt target_2 |
	target_2.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(DoStmt).getCondition() instanceof Literal
	and target_2.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getCondition().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getThen() instanceof ReturnStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_3.getLocation()))
}

predicate func_3(Variable vsaved_close_1609, Variable vpsock_1610, Function func, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vsaved_close_1609
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="saved_close"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpsock_1610
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Parameter vsk_1607, Variable vpsock_1610, Function func, ExprStmt target_4) {
	target_4.getExpr().(FunctionCall).getTarget().hasName("sock_map_remove_links")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1607
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpsock_1610
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

predicate func_6(Variable vpsock_1610, Function func, ExprStmt target_6) {
	target_6.getExpr().(FunctionCall).getTarget().hasName("sk_psock_stop")
	and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vpsock_1610
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Parameter vsk_1607, Function func, ExprStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("release_sock")
	and target_7.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1607
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_7
}

predicate func_8(Variable vpsock_1610, Function func, ExprStmt target_8) {
	target_8.getExpr().(FunctionCall).getTarget().hasName("cancel_work_sync")
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="work"
	and target_8.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vpsock_1610
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_8
}

predicate func_9(Parameter vsk_1607, Variable vpsock_1610, Function func, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("sk_psock_put")
	and target_9.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsk_1607
	and target_9.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vpsock_1610
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_9
}

predicate func_10(Parameter vsk_1607, PointerFieldAccess target_10) {
	target_10.getTarget().getName()="__sk_common"
	and target_10.getQualifier().(VariableAccess).getTarget()=vsk_1607
}

predicate func_11(Parameter vsk_1607, VariableAccess target_11) {
	target_11.getTarget()=vsk_1607
	and target_11.getParent().(VariableCall).getParent().(ExprStmt).getExpr() instanceof VariableCall
}

predicate func_12(FunctionCall target_16, Function func, ReturnStmt target_12) {
	target_12.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
	and target_12.getEnclosingFunction() = func
}

predicate func_13(Parameter vsk_1607, Parameter vtimeout_1607, VariableCall target_13) {
	target_13.getExpr().(PointerFieldAccess).getTarget().getName()="close"
	and target_13.getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="skc_prot"
	and target_13.getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_13.getExpr().(PointerFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1607
	and target_13.getArgument(0).(VariableAccess).getTarget()=vsk_1607
	and target_13.getArgument(1).(VariableAccess).getTarget()=vtimeout_1607
}

/*predicate func_14(Parameter vsk_1607, ValueFieldAccess target_14) {
	target_14.getTarget().getName()="skc_prot"
	and target_14.getQualifier().(PointerFieldAccess).getTarget().getName()="__sk_common"
	and target_14.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsk_1607
}

*/
predicate func_16(Variable vpsock_1610, FunctionCall target_16) {
	target_16.getTarget().hasName("__builtin_expect")
	and target_16.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vpsock_1610
	and target_16.getArgument(1).(Literal).getValue()="0"
}

from Function func, Parameter vsk_1607, Parameter vtimeout_1607, Variable vsaved_close_1609, Variable vpsock_1610, ExprStmt target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6, ExprStmt target_7, ExprStmt target_8, ExprStmt target_9, PointerFieldAccess target_10, VariableAccess target_11, ReturnStmt target_12, VariableCall target_13, FunctionCall target_16
where
not func_0(vsaved_close_1609)
and not func_2(target_3, func)
and func_3(vsaved_close_1609, vpsock_1610, func, target_3)
and func_4(vsk_1607, vpsock_1610, func, target_4)
and func_5(func, target_5)
and func_6(vpsock_1610, func, target_6)
and func_7(vsk_1607, func, target_7)
and func_8(vpsock_1610, func, target_8)
and func_9(vsk_1607, vpsock_1610, func, target_9)
and func_10(vsk_1607, target_10)
and func_11(vsk_1607, target_11)
and func_12(target_16, func, target_12)
and func_13(vsk_1607, vtimeout_1607, target_13)
and func_16(vpsock_1610, target_16)
and vsk_1607.getType().hasName("sock *")
and vtimeout_1607.getType().hasName("long")
and vsaved_close_1609.getType().hasName("..(*)(..)")
and vpsock_1610.getType().hasName("sk_psock *")
and vsk_1607.getFunction() = func
and vtimeout_1607.getFunction() = func
and vsaved_close_1609.(LocalVariable).getFunction() = func
and vpsock_1610.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
