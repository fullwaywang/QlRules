/**
 * @name linux-6cc03e8aa36c51f3b26a0d21a3c4ce2809c842ac-atalk_create
 * @id cpp/linux/6cc03e8aa36c51f3b26a0d21a3c4ce2809c842ac/atalk-create
 * @description linux-6cc03e8aa36c51f3b26a0d21a3c4ce2809c842ac-net/appletalk/ddp.c-atalk_create CVE-2019-17054
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vrc_1015, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1015
	and target_0.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_2.getLocation()))
}

predicate func_1(Parameter vsock_1011, Parameter vkern_1012, ExprStmt target_2, LogicalAndExpr target_4, ExprStmt target_5, ExprStmt target_6, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_1.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_1011
	and target_1.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vkern_1012
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("capable")
	and target_1.getCondition().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(Literal).getValue()="13"
	and target_1.getThen().(GotoStmt).getName() ="out"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_4.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_1.getCondition().(LogicalAndExpr).getLeftOperand().(LogicalAndExpr).getRightOperand().(NotExpr).getOperand().(VariableAccess).getLocation().isBefore(target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getLocation()))
}

predicate func_2(Variable vrc_1015, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_1015
	and target_2.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-12"
}

predicate func_4(Parameter vsock_1011, LogicalAndExpr target_4) {
	target_4.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_4.getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_1011
	and target_4.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="type"
	and target_4.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_1011
}

predicate func_5(Parameter vsock_1011, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ops"
	and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsock_1011
	and target_5.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const proto_ops")
}

predicate func_6(Parameter vkern_1012, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sock *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("sk_alloc")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("net *")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="5"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(BitwiseOrExpr).getValue()="3264"
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("proto")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vkern_1012
}

from Function func, Parameter vsock_1011, Parameter vkern_1012, Variable vrc_1015, ExprStmt target_2, LogicalAndExpr target_4, ExprStmt target_5, ExprStmt target_6
where
not func_0(vrc_1015, target_2, func)
and not func_1(vsock_1011, vkern_1012, target_2, target_4, target_5, target_6, func)
and func_2(vrc_1015, target_2)
and func_4(vsock_1011, target_4)
and func_5(vsock_1011, target_5)
and func_6(vkern_1012, target_6)
and vsock_1011.getType().hasName("socket *")
and vkern_1012.getType().hasName("int")
and vrc_1015.getType().hasName("int")
and vsock_1011.getFunction() = func
and vkern_1012.getFunction() = func
and vrc_1015.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
