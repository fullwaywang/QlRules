commit f1c4fd392355cbdbf9b42589beb24653839fd4e0	f1c4fd392355cbdbf9b42589beb24653839fd4e0
Author: Camillo Bruni <cbruni@chromium.org>
Date:   Wed Jun 1 20:19:39 2022 +0200

    [profiling] Create process-unique CPU profile ids
    
    In https://crrev.com/c/3522896 we changed the last_id_ to be a member
    variable. This subtly changed how profile id's were generated.
    
    This CL changes this part back to a static variable that guarantees
    process-wide unique profile ids.
    
    Bug: chromium:1330726, chromium:1297283
    Change-Id: I5f3dddcbbc156d0dee7d1eedde8a731c53d080dc
    Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3684289
    Auto-Submit: Camillo Bruni <cbruni@chromium.org>
    Commit-Queue: Camillo Bruni <cbruni@chromium.org>
    Reviewed-by: Shu-yu Guo <syg@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#80902}

diff --git a/src/profiler/profile-generator.cc b/src/profiler/profile-generator.cc
index d6dcb770a10..bb20eefbe35 100644
--- a/src/profiler/profile-generator.cc
+++ b/src/profiler/profile-generator.cc
@@ -570,6 +570,8 @@ void ContextFilter::OnMoveEvent(Address from_address, Address to_address) {
 
 using v8::tracing::TracedValue;
 
+std::atomic<ProfilerId> CpuProfilesCollection::last_id_{0};
+
 CpuProfile::CpuProfile(CpuProfiler* profiler, ProfilerId id, const char* title,
                        CpuProfilingOptions options,
                        std::unique_ptr<DiscardedSamplesDelegate> delegate)
@@ -892,10 +894,7 @@ size_t CodeMap::GetEstimatedMemoryUsage() const {
 }
 
 CpuProfilesCollection::CpuProfilesCollection(Isolate* isolate)
-    : profiler_(nullptr),
-      current_profiles_semaphore_(1),
-      last_id_(0),
-      isolate_(isolate) {
+    : profiler_(nullptr), current_profiles_semaphore_(1), isolate_(isolate) {
   USE(isolate_);
 }
 
diff --git a/src/profiler/profile-generator.h b/src/profiler/profile-generator.h
index ef7e2573456..af956f9ebd4 100644
--- a/src/profiler/profile-generator.h
+++ b/src/profiler/profile-generator.h
@@ -587,7 +587,7 @@ class V8_EXPORT_PRIVATE CpuProfilesCollection {
   // Accessed by VM thread and profile generator thread.
   std::vector<std::unique_ptr<CpuProfile>> current_profiles_;
   base::Semaphore current_profiles_semaphore_;
-  ProfilerId last_id_;
+  static std::atomic<ProfilerId> last_id_;
   Isolate* isolate_;
 };
 
