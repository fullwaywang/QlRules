/**
 * @name linux-0c461cb727d146c9ef2d3e86214f498b78b7d125-selinux_setprocattr
 * @id cpp/linux/0c461cb727d146c9ef2d3e86214f498b78b7d125/selinux-setprocattr
 * @description linux-0c461cb727d146c9ef2d3e86214f498b78b7d125-security/selinux/hooks.c-selinux_setprocattr CVE-2017-2618
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	target_0.getValue()="1"
	and not target_0.getValue()="0"
	and target_0.getParent().(ArrayExpr).getParent().(LogicalAndExpr).getRightOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("char *")
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, Literal target_1) {
	target_1.getValue()="1"
	and not target_1.getValue()="0"
	and target_1.getParent().(ArrayExpr).getParent().(NEExpr).getLeftOperand().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType().hasName("char *")
	and target_1.getEnclosingFunction() = func
}

from Function func, Literal target_0, Literal target_1
where
func_0(func, target_0)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
