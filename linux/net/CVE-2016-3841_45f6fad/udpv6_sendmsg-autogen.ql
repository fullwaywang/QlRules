/**
 * @name linux-45f6fad84cc305103b28d73482b344d7f5b76f39-udpv6_sendmsg
 * @id cpp/linux/45f6fad84cc305103b28d73482b344d7f5b76f39/udpv6-sendmsg
 * @description linux-45f6fad84cc305103b28d73482b344d7f5b76f39-net/ipv6/udp.c-udpv6_sendmsg CVE-2016-3841
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofTypeOperator target_0) {
	target_0.getType() instanceof LongType
	and target_0.getValue()="40"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, SizeofExprOperator target_1) {
	target_1.getValue()="40"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vnp_1109, Variable vopt_1112, AddressOfExpr target_7) {
exists(FunctionCall target_2 |
	target_2.getTarget().hasName("txopt_get")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vnp_1109
	and target_2.getParent().(AssignExpr).getRValue() = target_2
	and target_2.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget()=vopt_1112
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Variable vopt_1112, NotExpr target_8) {
exists(ExprStmt target_3 |
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("ipv6_txoptions *")
	and target_3.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vopt_1112
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_3
	and target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_8)
}

predicate func_4(IfStmt target_9, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(FunctionCall).getTarget().hasName("txopt_put")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getType().hasName("ipv6_txoptions *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getLocation().isBefore(target_9.getLocation()))
}

predicate func_5(Variable vnp_1109, VariableAccess target_5) {
	target_5.getTarget()=vnp_1109
}

predicate func_6(Variable vnp_1109, PointerFieldAccess target_6) {
	target_6.getTarget().getName()="opt"
	and target_6.getQualifier().(VariableAccess).getTarget()=vnp_1109
}

predicate func_7(Variable vnp_1109, AddressOfExpr target_7) {
	target_7.getOperand().(PointerFieldAccess).getTarget().getName()="saddr"
	and target_7.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnp_1109
	and target_7.getParent().(FunctionCall).getParent().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("ipv6_addr_any")
}

predicate func_8(Variable vopt_1112, NotExpr target_8) {
	target_8.getOperand().(VariableAccess).getTarget()=vopt_1112
}

predicate func_9(Function func, IfStmt target_9) {
	target_9.getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_9.getThen().(ReturnStmt).getExpr().(VariableAccess).getTarget().getType().hasName("size_t")
	and target_9.getEnclosingFunction() = func
}

from Function func, Variable vnp_1109, Variable vopt_1112, SizeofTypeOperator target_0, SizeofExprOperator target_1, VariableAccess target_5, PointerFieldAccess target_6, AddressOfExpr target_7, NotExpr target_8, IfStmt target_9
where
func_0(func, target_0)
and func_1(func, target_1)
and not func_2(vnp_1109, vopt_1112, target_7)
and not func_3(vopt_1112, target_8)
and not func_4(target_9, func)
and func_5(vnp_1109, target_5)
and func_6(vnp_1109, target_6)
and func_7(vnp_1109, target_7)
and func_8(vopt_1112, target_8)
and func_9(func, target_9)
and vnp_1109.getType().hasName("ipv6_pinfo *")
and vopt_1112.getType().hasName("ipv6_txoptions *")
and vnp_1109.(LocalVariable).getFunction() = func
and vopt_1112.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
