/**
 * @name linux-b04c46190219a4f845e46a459e3102137b7f6cac-ping_init_sock
 * @id cpp/linux/b04c46190219a4f845e46a459e3102137b7f6cac/ping-init-sock
 * @description linux-b04c46190219a4f845e46a459e3102137b7f6cac-net/ipv4/ping.c-ping_init_sock CVE-2014-2851
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable v__groups_255, Variable v__cred_255, Initializer target_0) {
	target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__cred_255
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__groups_255
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_group_info")
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="group_info"
	and target_0.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__groups_255
}

predicate func_1(Variable vgroup_info_255, Variable v__groups_255, Variable v__cred_255, ForStmt target_12, RelationalOperation target_13, Function func) {
exists(ExprStmt target_1 |
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vgroup_info_255
	and target_1.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__cred_255
	and target_1.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=v__groups_255
	and target_1.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("get_group_info")
	and target_1.getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(4).(ExprStmt).getExpr().(VariableAccess).getTarget()=v__groups_255
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_12.getLocation())
	and target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_13.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vgroup_info_255, Variable vcount_256, ForStmt target_12, Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vcount_256
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="ngroups"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_info_255
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_12.getLocation()))
}

predicate func_3(LogicalAndExpr target_17, Function func) {
exists(GotoStmt target_3 |
	target_3.getName() ="out_release_group"
	and target_3.getParent().(IfStmt).getCondition()=target_17
	and target_3.getEnclosingFunction() = func)
}

predicate func_4(Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("int")
	and target_4.getExpr().(AssignExpr).getRValue() instanceof UnaryMinusExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_5(Variable vgroup_info_255, ArrayExpr target_18, Function func) {
exists(DoStmt target_5 |
	target_5.getCondition().(Literal).getValue()="0"
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("atomic_dec_and_test")
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="usage"
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_info_255
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("groups_free")
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vgroup_info_255
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
	and target_5.getFollowingStmt() instanceof ReturnStmt
	and target_18.getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_7(Variable vgroup_info_255, PointerFieldAccess target_7) {
	target_7.getTarget().getName()="ngroups"
	and target_7.getQualifier().(VariableAccess).getTarget()=vgroup_info_255
}

predicate func_8(Function func, UnaryMinusExpr target_8) {
	target_8.getValue()="-13"
	and target_8.getEnclosingFunction() = func
}

predicate func_10(Variable vgroup_info_255, Initializer target_10) {
	target_10.getExpr().(PointerFieldAccess).getTarget().getName()="ngroups"
	and target_10.getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_info_255
}

predicate func_11(Function func, ReturnStmt target_11) {
	target_11.getExpr() instanceof UnaryMinusExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

predicate func_12(Variable vgroup_info_255, ForStmt target_12) {
	target_12.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_12.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="nblocks"
	and target_12.getCondition().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_info_255
	and target_12.getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(Literal).getValue()="0"
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getCondition().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getUpdate().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getLeftOperand().(FunctionCall).getTarget().hasName("gid_lte")
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("gid_lte")
	and target_12.getStmt().(BlockStmt).getStmt(1).(ForStmt).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(ReturnStmt).getExpr() instanceof Literal
}

predicate func_13(Variable vgroup_info_255, RelationalOperation target_13) {
	 (target_13 instanceof GTExpr or target_13 instanceof LTExpr)
	and target_13.getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_13.getGreaterOperand().(PointerFieldAccess).getTarget().getName()="nblocks"
	and target_13.getGreaterOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_info_255
}

predicate func_17(Function func, LogicalAndExpr target_17) {
	target_17.getLeftOperand().(FunctionCall).getTarget().hasName("gid_lte")
	and target_17.getLeftOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kgid_t")
	and target_17.getLeftOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("kgid_t")
	and target_17.getRightOperand().(FunctionCall).getTarget().hasName("gid_lte")
	and target_17.getRightOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("kgid_t")
	and target_17.getRightOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("kgid_t")
	and target_17.getEnclosingFunction() = func
}

predicate func_18(Variable vgroup_info_255, ArrayExpr target_18) {
	target_18.getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="blocks"
	and target_18.getArrayBase().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_info_255
	and target_18.getArrayBase().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
	and target_18.getArrayOffset().(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vgroup_info_255, Variable v__groups_255, Variable v__cred_255, Variable vcount_256, Initializer target_0, PointerFieldAccess target_7, UnaryMinusExpr target_8, Initializer target_10, ReturnStmt target_11, ForStmt target_12, RelationalOperation target_13, LogicalAndExpr target_17, ArrayExpr target_18
where
func_0(v__groups_255, v__cred_255, target_0)
and not func_1(vgroup_info_255, v__groups_255, v__cred_255, target_12, target_13, func)
and not func_2(vgroup_info_255, vcount_256, target_12, func)
and not func_3(target_17, func)
and not func_4(func)
and not func_5(vgroup_info_255, target_18, func)
and func_7(vgroup_info_255, target_7)
and func_8(func, target_8)
and func_10(vgroup_info_255, target_10)
and func_11(func, target_11)
and func_12(vgroup_info_255, target_12)
and func_13(vgroup_info_255, target_13)
and func_17(func, target_17)
and func_18(vgroup_info_255, target_18)
and vgroup_info_255.getType().hasName("group_info *")
and v__groups_255.getType().hasName("group_info *")
and v__cred_255.getType().hasName("const cred *")
and vcount_256.getType().hasName("int")
and vgroup_info_255.(LocalVariable).getFunction() = func
and v__groups_255.(LocalVariable).getFunction() = func
and v__cred_255.(LocalVariable).getFunction() = func
and vcount_256.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
