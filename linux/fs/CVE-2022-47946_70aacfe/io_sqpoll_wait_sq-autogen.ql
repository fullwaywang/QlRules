/**
 * @name linux-70aacfe66136809d7f080f89c492c278298719f4-io_sqpoll_wait_sq
 * @id cpp/linux/70aacfe66136809d7f080f89c492c278298719f4/io-sqpoll-wait-sq
 * @description linux-70aacfe66136809d7f080f89c492c278298719f4-fs/io_uring.c-io_sqpoll_wait_sq CVE-2022-47946
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vctx_8991, Variable vret_8993, IfStmt target_0) {
	target_0.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(ValueFieldAccess).getTarget().getName()="sqo_dead"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="(unknown field)"
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_8991
	and target_0.getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_8993
	and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-130"
	and target_0.getThen().(BlockStmt).getStmt(1).(GotoStmt).getName() ="out"
}

/*predicate func_1(Variable vret_8993, FunctionCall target_3, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_8993
	and target_1.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-130"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

*/
/*predicate func_2(FunctionCall target_3, Function func, GotoStmt target_2) {
	target_2.getName() ="out"
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
	and target_2.getEnclosingFunction() = func
}

*/
predicate func_3(Function func, FunctionCall target_3) {
	target_3.getTarget().hasName("__builtin_expect")
	and target_3.getArgument(0) instanceof NotExpr
	and target_3.getArgument(1) instanceof Literal
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vctx_8991, Variable vret_8993, IfStmt target_0, FunctionCall target_3
where
func_0(vctx_8991, vret_8993, target_0)
and func_3(func, target_3)
and vctx_8991.getType().hasName("io_ring_ctx *")
and vret_8993.getType().hasName("int")
and vctx_8991.getFunction() = func
and vret_8993.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
