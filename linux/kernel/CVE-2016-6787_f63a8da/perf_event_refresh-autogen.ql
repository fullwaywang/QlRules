/**
 * @name linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-perf_event_refresh
 * @id cpp/linux/f63a8daa5812afef4f06c962351687e1ff9ccb2b/perf-event-refresh
 * @description linux-f63a8daa5812afef4f06c962351687e1ff9ccb2b-kernel/events/core.c-perf_event_refresh CVE-2016-6787
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vevent_2231, Parameter vrefresh_2231, FunctionCall target_0) {
	target_0.getTarget().hasName("atomic_add")
	and not target_0.getTarget().hasName("perf_event_ctx_unlock")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vrefresh_2231
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="event_limit"
	and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_2231
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr() instanceof FunctionCall
	and target_1.getFollowingStmt() instanceof ReturnStmt
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vevent_2231, AddressOfExpr target_16) {
exists(AssignExpr target_2 |
	target_2.getLValue().(VariableAccess).getType().hasName("perf_event_context *")
	and target_2.getRValue().(FunctionCall).getTarget().hasName("perf_event_ctx_lock")
	and target_2.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vevent_2231
	and target_2.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_3(Parameter vevent_2231, Parameter vrefresh_2231) {
exists(AssignExpr target_3 |
	target_3.getLValue().(VariableAccess).getType().hasName("int")
	and target_3.getRValue().(FunctionCall).getTarget().hasName("_perf_event_refresh")
	and target_3.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vevent_2231
	and target_3.getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vrefresh_2231)
}

predicate func_4(Parameter vevent_2231, Function func) {
exists(ExprStmt target_4 |
	target_4.getExpr().(FunctionCall).getTarget().hasName("perf_event_ctx_unlock")
	and target_4.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vevent_2231
	and target_4.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("perf_event_context *")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_4
	and target_4.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_7(Parameter vevent_2231, VariableAccess target_7) {
	target_7.getTarget()=vevent_2231
	and target_7.getParent().(FunctionCall).getParent().(NotExpr).getOperand() instanceof FunctionCall
}

predicate func_8(Parameter vevent_2231, VariableAccess target_8) {
	target_8.getTarget()=vevent_2231
	and target_8.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_9(Parameter vevent_2231, VariableAccess target_9) {
	target_9.getTarget()=vevent_2231
}

predicate func_10(Parameter vrefresh_2231, VariableAccess target_10) {
	target_10.getTarget()=vrefresh_2231
	and target_10.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_11(Parameter vevent_2231, Function func, IfStmt target_11) {
	target_11.getCondition().(LogicalOrExpr).getLeftOperand().(ValueFieldAccess).getTarget().getName()="inherit"
	and target_11.getCondition().(LogicalOrExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="attr"
	and target_11.getCondition().(LogicalOrExpr).getLeftOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_2231
	and target_11.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("is_sampling_event")
	and target_11.getCondition().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vevent_2231
	and target_11.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-22"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_11
}

/*predicate func_12(Function func, UnaryMinusExpr target_12) {
	target_12.getValue()="-22"
	and target_12.getEnclosingFunction() = func
}

*/
predicate func_13(Parameter vevent_2231, PointerFieldAccess target_13) {
	target_13.getTarget().getName()="event_limit"
	and target_13.getQualifier().(VariableAccess).getTarget()=vevent_2231
}

predicate func_14(Parameter vevent_2231, FunctionCall target_14) {
	target_14.getTarget().hasName("perf_event_enable")
	and target_14.getArgument(0).(VariableAccess).getTarget()=vevent_2231
}

predicate func_15(Function func, ReturnStmt target_15) {
	target_15.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_15
}

predicate func_16(Parameter vevent_2231, AddressOfExpr target_16) {
	target_16.getOperand().(PointerFieldAccess).getTarget().getName()="event_limit"
	and target_16.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vevent_2231
}

from Function func, Parameter vevent_2231, Parameter vrefresh_2231, FunctionCall target_0, ExprStmt target_1, VariableAccess target_7, VariableAccess target_8, VariableAccess target_9, VariableAccess target_10, IfStmt target_11, PointerFieldAccess target_13, FunctionCall target_14, ReturnStmt target_15, AddressOfExpr target_16
where
func_0(vevent_2231, vrefresh_2231, target_0)
and func_1(func, target_1)
and not func_2(vevent_2231, target_16)
and not func_3(vevent_2231, vrefresh_2231)
and not func_4(vevent_2231, func)
and func_7(vevent_2231, target_7)
and func_8(vevent_2231, target_8)
and func_9(vevent_2231, target_9)
and func_10(vrefresh_2231, target_10)
and func_11(vevent_2231, func, target_11)
and func_13(vevent_2231, target_13)
and func_14(vevent_2231, target_14)
and func_15(func, target_15)
and func_16(vevent_2231, target_16)
and vevent_2231.getType().hasName("perf_event *")
and vrefresh_2231.getType().hasName("int")
and vevent_2231.getFunction() = func
and vrefresh_2231.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
