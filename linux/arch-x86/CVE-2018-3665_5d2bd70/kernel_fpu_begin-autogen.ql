/**
 * @name linux-5d2bd7009f306c82afddd1ca4d9763ad8473c216-kernel_fpu_begin
 * @id cpp/linux/5d2bd7009f306c82afddd1ca4d9763ad8473c216/kernel-fpu-begin
 * @description linux-5d2bd7009f306c82afddd1ca4d9763ad8473c216-arch/x86/kernel/i387.c-kernel_fpu_begin CVE-2018-3665
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(BlockStmt target_1, Function func, FunctionCall target_0) {
	target_0.getTarget().hasName("use_xsave")
	and not target_0.getTarget().hasName("use_eager_fpu")
	and target_0.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_1
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Function func, BlockStmt target_1) {
	target_1.getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(VariableAccess).getTarget().getType().hasName("const void *")
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getExpr().(SizeofExprOperator).getValue()="8"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="1"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(3).(SwitchCase).getExpr().(Literal).getValue()="2"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(4).(DoStmt).getCondition().(Literal).getValue()="0"
	and target_1.getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(1).(SwitchStmt).getStmt().(BlockStmt).getStmt(6).(SwitchCase).getExpr().(Literal).getValue()="4"
	and target_1.getEnclosingFunction() = func
}

from Function func, FunctionCall target_0, BlockStmt target_1
where
func_0(target_1, func, target_0)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
