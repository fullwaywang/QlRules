/**
 * @name linux-f6365931bf7c07b2b397dbb06a4f6573cc9fae73-vmci_resource_remove
 * @id cpp/linux/f6365931bf7c07b2b397dbb06a4f6573cc9fae73/vmci-resource-remove
 * @description linux-f6365931bf7c07b2b397dbb06a4f6573cc9fae73-drivers/misc/vmw_vmci/vmci_resource.c-vmci_resource_remove CVE-2024-46738
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vr_149, Parameter vresource_145, BlockStmt target_2, ValueFieldAccess target_3, FunctionCall target_1) {
exists(LogicalAndExpr target_0 |
	exists(EqualityOperation obj_0 | obj_0=target_0.getRightOperand() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLeftOperand() |
			obj_1.getTarget().getName()="type"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vresource_145
		)
		and exists(PointerFieldAccess obj_2 | obj_2=obj_0.getRightOperand() |
			obj_2.getTarget().getName()="type"
			and obj_2.getQualifier().(VariableAccess).getTarget()=vr_149
		)
	)
	and target_0.getLeftOperand() instanceof FunctionCall
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_3.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getRightOperand().(EqualityOperation).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vr_149, Parameter vresource_145, BlockStmt target_2, FunctionCall target_1) {
	exists(PointerFieldAccess obj_0 | obj_0=target_1.getArgument(0) |
		obj_0.getTarget().getName()="handle"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vr_149
	)
	and exists(PointerFieldAccess obj_1 | obj_1=target_1.getArgument(1) |
		obj_1.getTarget().getName()="handle"
		and obj_1.getQualifier().(VariableAccess).getTarget()=vresource_145
	)
	and target_1.getTarget().hasName("vmci_handle_is_equal")
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vr_149, BlockStmt target_2) {
	exists(ExprStmt obj_0 | obj_0=target_2.getStmt(0) |
		exists(FunctionCall obj_1 | obj_1=obj_0.getExpr() |
			exists(AddressOfExpr obj_2 | obj_2=obj_1.getArgument(0) |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getTarget().getName()="node"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vr_149
				)
			)
			and obj_1.getTarget().hasName("hlist_del_init_rcu")
		)
	)
}

predicate func_3(Variable vr_149, ValueFieldAccess target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getQualifier() |
		obj_0.getTarget().getName()="node"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vr_149
	)
	and target_3.getTarget().getName()="next"
}

from Function func, Variable vr_149, Parameter vresource_145, FunctionCall target_1, BlockStmt target_2, ValueFieldAccess target_3
where
not func_0(vr_149, vresource_145, target_2, target_3, target_1)
and func_1(vr_149, vresource_145, target_2, target_1)
and func_2(vr_149, target_2)
and func_3(vr_149, target_3)
and vr_149.getType().hasName("vmci_resource *")
and vresource_145.getType().hasName("vmci_resource *")
and vr_149.(LocalVariable).getFunction() = func
and vresource_145.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
