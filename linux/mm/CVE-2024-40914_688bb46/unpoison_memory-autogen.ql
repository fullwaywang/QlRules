/**
 * @name linux-688bb46ad339497b5b7f527b6636d2afe04b46af-unpoison_memory
 * @id cpp/linux/688bb46ad339497b5b7f527b6636d2afe04b46af/unpoison-memory
 * @description linux-688bb46ad339497b5b7f527b6636d2afe04b46af-mm/memory-failure.c-unpoison_memory CVE-2024-40914
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vpage_2038, Variable vret_2041, IfStmt target_1, ExprStmt target_2, RelationalOperation target_3, ReturnStmt target_5, Function func) {
exists(IfStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getCondition() |
		obj_0.getTarget().hasName("is_huge_zero_page")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpage_2038
	)
	and exists(BlockStmt obj_1 | obj_1=target_0.getThen() |
		exists(ExprStmt obj_2 | obj_2=obj_1.getStmt(1) |
			exists(AssignExpr obj_3 | obj_3=obj_2.getExpr() |
				obj_3.getLValue().(VariableAccess).getTarget()=vret_2041
				and obj_3.getRValue().(UnaryMinusExpr).getValue()="-95"
			)
		)
		and obj_1.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("___ratelimit")
		and obj_1.getStmt(2).(GotoStmt).getName() ="unlock_mutex"
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getGreaterOperand().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_5.getExpr().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, IfStmt target_1) {
	exists(NotExpr obj_0 | obj_0=target_1.getCondition() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getOperand() |
			obj_1.getTarget().hasName("PageHWPoison")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("page *")
		)
	)
	and exists(BlockStmt obj_2 | obj_2=target_1.getThen() |
		obj_2.getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("___ratelimit")
		and obj_2.getStmt(1).(GotoStmt).getName() ="unlock_mutex"
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vpage_2038, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("_compound_head")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("page *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vpage_2038
	)
}

predicate func_3(Variable vpage_2038, RelationalOperation target_3) {
	exists(FunctionCall obj_0 | obj_0=target_3.getGreaterOperand() |
		obj_0.getTarget().hasName("page_count")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vpage_2038
	)
	and  (target_3 instanceof GTExpr or target_3 instanceof LTExpr)
	and target_3.getLesserOperand().(Literal).getValue()="1"
}

predicate func_5(Variable vret_2041, ReturnStmt target_5) {
	target_5.getExpr().(VariableAccess).getTarget()=vret_2041
}

from Function func, Variable vpage_2038, Variable vret_2041, IfStmt target_1, ExprStmt target_2, RelationalOperation target_3, ReturnStmt target_5
where
not func_0(vpage_2038, vret_2041, target_1, target_2, target_3, target_5, func)
and func_1(func, target_1)
and func_2(vpage_2038, target_2)
and func_3(vpage_2038, target_3)
and func_5(vret_2041, target_5)
and vpage_2038.getType().hasName("page *")
and vret_2041.getType().hasName("int")
and vpage_2038.(LocalVariable).getFunction() = func
and vret_2041.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
