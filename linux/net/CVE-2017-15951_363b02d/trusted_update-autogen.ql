/**
 * @name linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-trusted_update
 * @id cpp/linux/363b02dab09b3226f3bd1420dad9c72b79a42a76/trusted-update
 * @description linux-363b02dab09b3226f3bd1420dad9c72b79a42a76-security/keys/trusted.c-trusted_update CVE-2017-15951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkey_1060, ReturnStmt target_4, FunctionCall target_0) {
		target_0.getTarget().hasName("constant_test_bit")
		and not target_0.getTarget().hasName("key_is_negative")
		and target_0.getArgument(0).(Literal).getValue()="5"
		and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_0.getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1060
		and target_0.getParent().(ConditionalExpr).getCondition() instanceof Literal
		and target_0.getParent().(ConditionalExpr).getElse() instanceof FunctionCall
		and target_0.getParent().(ConditionalExpr).getParent().(IfStmt).getThen()=target_4
}

predicate func_1(Parameter vkey_1060, VariableAccess target_1) {
		target_1.getTarget()=vkey_1060
		and target_1.getParent().(PointerFieldAccess).getParent().(AddressOfExpr).getParent().(FunctionCall).getParent().(ConditionalExpr).getThen() instanceof FunctionCall
}

predicate func_2(Parameter vkey_1060, ReturnStmt target_4, ConditionalExpr target_2) {
		target_2.getCondition().(Literal).getValue()="1"
		and target_2.getThen() instanceof FunctionCall
		and target_2.getElse().(FunctionCall).getTarget().hasName("variable_test_bit")
		and target_2.getElse().(FunctionCall).getArgument(0).(Literal).getValue()="5"
		and target_2.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="flags"
		and target_2.getElse().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vkey_1060
		and target_2.getParent().(IfStmt).getThen()=target_4
}

predicate func_3(Parameter vkey_1060, PointerFieldAccess target_3) {
		target_3.getTarget().getName()="flags"
		and target_3.getQualifier().(VariableAccess).getTarget()=vkey_1060
}

predicate func_4(Function func, ReturnStmt target_4) {
		target_4.getExpr().(UnaryMinusExpr).getValue()="-126"
		and target_4.getEnclosingFunction() = func
}

from Function func, Parameter vkey_1060, FunctionCall target_0, VariableAccess target_1, ConditionalExpr target_2, PointerFieldAccess target_3, ReturnStmt target_4
where
func_0(vkey_1060, target_4, target_0)
and func_1(vkey_1060, target_1)
and func_2(vkey_1060, target_4, target_2)
and func_3(vkey_1060, target_3)
and func_4(func, target_4)
and vkey_1060.getType().hasName("key *")
and vkey_1060.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
