/**
 * @name linux-21998a351512eba4ed5969006f0c55882d995ada-arch_seccomp_spec_mitigate
 * @id cpp/linux/21998a351512eba4ed5969006f0c55882d995ada/arch-seccomp-spec-mitigate
 * @description linux-21998a351512eba4ed5969006f0c55882d995ada-arch/x86/kernel/cpu/bugs.c-arch_seccomp_spec_mitigate CVE-2020-10767
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vspectre_v2_user, ExprStmt target_2, VariableAccess target_0) {
		target_0.getTarget()=vspectre_v2_user
		and target_0.getParent().(EQExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_1(ExprStmt target_2, Function func) {
	exists(LogicalOrExpr target_1 |
		target_1.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getType().hasName("spectre_v2_user_mitigation")
		and target_1.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getType().hasName("spectre_v2_user_mitigation")
		and target_1.getParent().(IfStmt).getThen()=target_2
		and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("ib_prctl_set")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("task_struct *")
		and target_2.getExpr().(FunctionCall).getArgument(1).(BinaryBitwiseOperation).getValue()="8"
		and target_2.getEnclosingFunction() = func
}

from Function func, Variable vspectre_v2_user, VariableAccess target_0, ExprStmt target_2
where
func_0(vspectre_v2_user, target_2, target_0)
and not func_1(target_2, func)
and func_2(func, target_2)
and vspectre_v2_user.getType().hasName("spectre_v2_user_mitigation")
and not vspectre_v2_user.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
