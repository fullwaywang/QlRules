/**
 * @name linux-f5bbbbe4d63577026f908a809f22f5fd5a90ea1f-__blk_mq_update_nr_hw_queues
 * @id cpp/linux/f5bbbbe4d63577026f908a809f22f5fd5a90ea1f/--blk-mq-update-nr-hw-queues
 * @description linux-f5bbbbe4d63577026f908a809f22f5fd5a90ea1f-block/blk-mq.c-__blk_mq_update_nr_hw_queues CVE-2020-0433
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ForStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("synchronize_rcu")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ForStmt target_1) {
	target_1.getInitialization().(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("request_queue *")
	and target_1.getInitialization().(ExprStmt).getExpr().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tag_set_list"
	and target_1.getCondition().(EqualityOperation).getLeftOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("request_queue *")
	and target_1.getCondition().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="tag_list"
	and target_1.getCondition().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("blk_mq_tag_set *")
	and target_1.getUpdate().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("request_queue *")
	and target_1.getUpdate().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(DoStmt).getCondition() instanceof Literal
	and target_1.getUpdate().(AssignExpr).getRValue().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerArithmeticOperation).getLeftOperand().(VariableAccess).getTarget().getType().hasName("void *")
	and target_1.getStmt().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("blk_mq_elv_switch_none")
	and target_1.getStmt().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("list_head")
	and target_1.getStmt().(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("request_queue *")
	and target_1.getStmt().(IfStmt).getThen().(GotoStmt).getName() ="switch_back"
	and target_1.getEnclosingFunction() = func
}

from Function func, ForStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
