/**
 * @name linux-6afc57ea315e0f660b1f870a681737bb7b71faef-ath12k_htt_mlo_offset_event_handler
 * @id cpp/linux/6afc57ea315e0f660b1f870a681737bb7b71faef/ath12k-htt-mlo-offset-event-handler
 * @description linux-6afc57ea315e0f660b1f870a681737bb7b71faef-drivers/net/wireless/ath/ath12k/dp_rx.c-ath12k_htt_mlo_offset_event_handler CVE-2023-52769
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_5, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("rcu_read_lock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_5.getLocation()))
}

predicate func_1(NotExpr target_6, Function func) {
exists(GotoStmt target_1 |
	target_1.getName() ="exit"
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(1)=target_1
	and target_1.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_1.getEnclosingFunction() = func)
}

predicate func_2(Function func) {
exists(ExprStmt target_2 |
	target_2.getExpr().(FunctionCall).getTarget().hasName("rcu_read_unlock")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getFollowingStmt() instanceof ReturnStmt)
}

predicate func_3(NotExpr target_6, Function func, ReturnStmt target_3) {
	target_3.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_6
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Function func, ReturnStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Function func, ExprStmt target_5) {
	target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ath12k *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ath12k_mac_get_ar_by_pdev_id")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("ath12k_base *")
	and target_5.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("u8")
	and target_5.getEnclosingFunction() = func
}

predicate func_6(Function func, NotExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget().getType().hasName("ath12k *")
	and target_6.getEnclosingFunction() = func
}

from Function func, ReturnStmt target_3, ReturnStmt target_4, ExprStmt target_5, NotExpr target_6
where
not func_0(target_5, func)
and not func_1(target_6, func)
and not func_2(func)
and func_3(target_6, func, target_3)
and func_4(func, target_4)
and func_5(func, target_5)
and func_6(func, target_6)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
