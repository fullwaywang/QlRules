/**
 * @name chromium-63530bf3e5b5592eaa64d55c8e21a3492ba00a7e-blink__DedicatedWorker__CreateGlobalScopeCreationParams_
 * @id cpp/chromium/63530bf3e5b5592eaa64d55c8e21a3492ba00a7e/blinkdedicatedworkercreateglobalscopecreationparams
 * @description chromium-63530bf3e5b5592eaa64d55c8e21a3492ba00a7e-third_party/blink/renderer/core/workers/global_scope_creation_params.cc-blink__DedicatedWorker__CreateGlobalScopeCreationParams_ CVE-2023-2462
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Literal target_0) {
	exists(FunctionCall obj_0 | obj_0=target_0.getParent() |
		exists(ExprStmt obj_1 | obj_1=obj_0.getParent() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getExpr() |
				obj_2.getTarget().hasName("DCheck")
				and obj_2.getArgument(0).(StringLiteral).getValue()="../../third_party/blink/renderer/core/workers/dedicated_worker.cc"
				and obj_2.getArgument(2).(StringLiteral).getValue()="agent_group_scheduler_compositor_task_runner"
			)
		)
	)
	and target_0.getValue()="481"
	and not target_0.getValue()="486"
	and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vwindow, ConditionDeclExpr target_5, FunctionCall target_6) {
exists(ExprStmt target_1 |
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getQualifier() |
				exists(FunctionCall obj_3 | obj_3=obj_2.getQualifier() |
					exists(FunctionCall obj_4 | obj_4=obj_3.getQualifier() |
						obj_4.getTarget().hasName("GetFrame")
						and obj_4.getQualifier().(VariableAccess).getTarget()=vwindow
					)
					and obj_3.getTarget().hasName("Top")
				)
				and obj_2.getTarget().hasName("GetSecurityContext")
			)
			and obj_1.getTarget().hasName("GetSecurityOrigin")
		)
		and obj_0.getLValue().(VariableAccess).getType().hasName("const SecurityOrigin *")
	)
	and exists(BlockStmt obj_5 | obj_5=target_1.getParent() |
		exists(IfStmt obj_6 | obj_6=obj_5.getParent() |
			obj_6.getThen().(BlockStmt).getStmt(4)=target_1
			and obj_6.getCondition()=target_5
		)
	)
	and target_6.getQualifier().(VariableAccess).getLocation().isBefore(target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_2(Variable vworker_global_scope_473, ConditionDeclExpr target_5, FunctionCall target_7) {
exists(ExprStmt target_2 |
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("top_level_frame_security_origin")
			and obj_1.getQualifier().(VariableAccess).getTarget()=vworker_global_scope_473
		)
		and obj_0.getLValue().(VariableAccess).getType().hasName("const SecurityOrigin *")
	)
	and exists(BlockStmt obj_2 | obj_2=target_2.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getElse().(BlockStmt).getStmt(4)=target_2
			and obj_3.getCondition()=target_5
		)
	)
	and target_7.getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_3(Function func) {
exists(SwitchStmt target_3 |
	exists(BlockStmt obj_0 | obj_0=target_3.getStmt() |
		exists(IfStmt obj_1 | obj_1=obj_0.getStmt(2) |
			exists(FunctionCall obj_2 | obj_2=obj_1.getCondition() |
				obj_2.getTarget().hasName("__builtin_expect")
				and obj_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getType().hasName("bool")
				and obj_2.getArgument(1).(Literal).getValue()="1"
			)
			and exists(ExprStmt obj_3 | obj_3=obj_1.getElse() |
				exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
					obj_4.getTarget().hasName("DCheck")
					and obj_4.getArgument(0).(StringLiteral).getValue()="../../third_party/blink/renderer/core/workers/dedicated_worker.cc"
					and obj_4.getArgument(1).(Literal).getValue()="487"
					and obj_4.getArgument(2).(StringLiteral).getValue()="top_level_frame_security_origin"
				)
			)
		)
		and obj_0.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="0"
		and obj_0.getStmt(1).(SwitchCase).toString() = "default: "
	)
	and target_3.getExpr().(Literal).getValue()="0"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_3
	and target_3.getFollowingStmt() instanceof DeclStmt
)
}

predicate func_5(Variable vwindow, ConditionDeclExpr target_5) {
	target_5.getVariableAccess().(VariableAccess).getTarget()=vwindow
}

predicate func_6(Variable vwindow, FunctionCall target_6) {
	target_6.getTarget().hasName("GetFrame")
	and target_6.getQualifier().(VariableAccess).getTarget()=vwindow
}

predicate func_7(Variable vworker_global_scope_473, FunctionCall target_7) {
	target_7.getTarget().hasName("GetAgentGroupSchedulerCompositorTaskRunner")
	and target_7.getQualifier().(VariableAccess).getTarget()=vworker_global_scope_473
}

from Function func, Variable vwindow, Variable vworker_global_scope_473, Literal target_0, ConditionDeclExpr target_5, FunctionCall target_6, FunctionCall target_7
where
func_0(func, target_0)
and not func_1(vwindow, target_5, target_6)
and not func_2(vworker_global_scope_473, target_5, target_7)
and not func_3(func)
and func_5(vwindow, target_5)
and func_6(vwindow, target_6)
and func_7(vworker_global_scope_473, target_7)
and vwindow.getType().hasName("LocalDOMWindow *")
and vworker_global_scope_473.getType().hasName("WorkerGlobalScope *")
and not vwindow.getParentScope+() = func
and vworker_global_scope_473.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
