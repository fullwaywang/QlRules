/**
 * @name linux-5e87ddbe3942e27e939bdc02deb8579b0cbd8ecc-bcm_rx_timeout_handler
 * @id cpp/linux/5e87ddbe3942e27e939bdc02deb8579b0cbd8ecc/bcm-rx-timeout-handler
 * @description linux-5e87ddbe3942e27e939bdc02deb8579b0cbd8ecc-net/can/bcm.c-bcm_rx_timeout_handler CVE-2021-34693
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vmsg_head_558, ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("__memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vmsg_head_558
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="56"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Variable vmsg_head_558, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getTarget().getName()="opcode"
	and target_1.getExpr().(AssignExpr).getLValue().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vmsg_head_558
}

from Function func, Variable vmsg_head_558, ExprStmt target_1
where
not func_0(vmsg_head_558, target_1, func)
and func_1(vmsg_head_558, target_1)
and vmsg_head_558.getType().hasName("bcm_msg_head")
and vmsg_head_558.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
