commit 67d760ab775dae4efe803b5944b0439aa3c0b04a	67d760ab775dae4efe803b5944b0439aa3c0b04a
Author: Ken Sharp <ken.sharp@artifex.com>
Date:   Wed Nov 14 09:25:13 2018 +0000

    Bug #700169 - unchecked type
    
    Bug #700169 "Type confusion in setcolorspace"
    
    In seticc() we extract "Name" from a dictionary, if it succeeds we then
    use it as a string, without checking the type to see if it is in fact
    a string.
    
    Add a check on the type, and add a couple to check that 'N' is an integer
    in a few places too.

diff --git a/psi/zicc.c b/psi/zicc.c
index 53bdf340d..dbd2562c7 100644
--- a/psi/zicc.c
+++ b/psi/zicc.c
@@ -76,7 +76,7 @@ int seticc(i_ctx_t * i_ctx_p, int ncomps, ref *ICCdict, float *range_buff)
         want to have this buffer. */
     /* Check if we have the /Name entry.  This is used to associate with
        specs that have enumerated types to indicate sRGB sGray etc */
-    if (dict_find_string(ICCdict, "Name", &pnameval) > 0){
+    if (dict_find_string(ICCdict, "Name", &pnameval) > 0 && r_has_type(pnameval, t_string)){
         uint size = r_size(pnameval);
         char *str = (char *)gs_alloc_bytes(gs_gstate_memory(igs), size+1, "seticc");
         memcpy(str, (const char *)pnameval->value.bytes, size);
@@ -263,6 +263,8 @@ zset_outputintent(i_ctx_t * i_ctx_p)
         return code;
     if (code == 0)
         return_error(gs_error_undefined);
+    if (r_type(pnval) != t_integer)
+        return gs_note_error(gs_error_typecheck);
     ncomps = pnval->value.intval;
 
     /* verify the DataSource entry. Creat profile from stream */
@@ -495,6 +497,8 @@ znumicc_components(i_ctx_t * i_ctx_p)
         return code;
     if (code == 0)
         return_error(gs_error_undefined);
+    if (r_type(pnval) != t_integer)
+        return gs_note_error(gs_error_typecheck);
     ncomps = pnval->value.intval;
     /* verify the DataSource entry. Create profile from stream */
     if (dict_find_string(op, "DataSource", &pstrmval) <= 0)
