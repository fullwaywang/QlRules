/**
 * @name linux-4c5d94990fa2fd609360ecd0f7e183212a7d115c-free_log_tree
 * @id cpp/linux/4c5d94990fa2fd609360ecd0f7e183212a7d115c/free-log-tree
 * @description linux-4c5d94990fa2fd609360ecd0f7e183212a7d115c-fs/btrfs/tree-log.c-free_log_tree CVE-2022-48833
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vlog_3415, VariableAccess target_3, ExprStmt target_4) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(1) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				exists(PointerFieldAccess obj_3 | obj_3=obj_2.getQualifier() |
					obj_3.getTarget().getName()="fs_info"
					and obj_3.getQualifier().(VariableAccess).getTarget()=vlog_3415
				)
				and obj_2.getTarget().getName()="fs_state"
			)
		)
		and obj_0.getTarget().hasName("set_bit")
	)
	and exists(BlockStmt obj_4 | obj_4=target_0.getParent() |
		exists(IfStmt obj_5 | obj_5=obj_4.getParent() |
			obj_5.getThen().(BlockStmt).getStmt(0)=target_0
			and obj_5.getCondition()=target_3
		)
	)
	and target_4.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Parameter vlog_3415, VariableAccess target_3) {
exists(ExprStmt target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="fs_info"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vlog_3415
		)
		and exists(AddressOfExpr obj_2 | obj_2=obj_0.getArgument(1) |
			exists(PointerFieldAccess obj_3 | obj_3=obj_2.getOperand() |
				obj_3.getTarget().getName()="dirty_log_pages"
				and obj_3.getQualifier().(VariableAccess).getTarget()=vlog_3415
			)
		)
		and obj_0.getTarget().hasName("btrfs_write_marked_extents")
		and obj_0.getArgument(2).(BitwiseOrExpr).getValue()="9"
	)
	and exists(BlockStmt obj_4 | obj_4=target_1.getParent() |
		exists(IfStmt obj_5 | obj_5=obj_4.getParent() |
			obj_5.getThen().(BlockStmt).getStmt(1)=target_1
			and obj_5.getCondition()=target_3
		)
	)
)
}

predicate func_2(Parameter vlog_3415, VariableAccess target_3, ExprStmt target_5) {
exists(ExprStmt target_2 |
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		obj_0.getTarget().hasName("btrfs_wait_tree_log_extents")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vlog_3415
		and obj_0.getArgument(1).(BitwiseOrExpr).getValue()="9"
	)
	and exists(BlockStmt obj_1 | obj_1=target_2.getParent() |
		exists(IfStmt obj_2 | obj_2=obj_1.getParent() |
			obj_2.getThen().(BlockStmt).getStmt(2)=target_2
			and obj_2.getCondition()=target_3
		)
	)
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_5.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_3(Variable vret_3417, BlockStmt target_6, VariableAccess target_3) {
	target_3.getTarget()=vret_3417
	and target_3.getParent().(IfStmt).getThen()=target_6
}

predicate func_4(Parameter vlog_3415, Variable vret_3417, ExprStmt target_4) {
	exists(AssignExpr obj_0 | obj_0=target_4.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("walk_log_tree")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("btrfs_trans_handle *")
			and obj_1.getArgument(1).(VariableAccess).getTarget()=vlog_3415
			and obj_1.getArgument(2).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("walk_control")
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vret_3417
	)
}

predicate func_5(Parameter vlog_3415, Variable vret_3417, ExprStmt target_5) {
	exists(FunctionCall obj_0 | obj_0=target_5.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="fs_info"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vlog_3415
		)
		and obj_0.getTarget().hasName("__btrfs_handle_fs_error")
		and obj_0.getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
		and obj_0.getArgument(2) instanceof Literal
		and obj_0.getArgument(3).(VariableAccess).getTarget()=vret_3417
		and obj_0.getArgument(4) instanceof Literal
	)
}

predicate func_6(Variable vret_3417, BlockStmt target_6) {
	exists(IfStmt obj_0 | obj_0=target_6.getStmt(0) |
		exists(DoStmt obj_1 | obj_1=obj_0.getThen() |
			exists(BlockStmt obj_2 | obj_2=obj_1.getStmt() |
				exists(ExprStmt obj_3 | obj_3=obj_2.getStmt(1) |
					exists(FunctionCall obj_4 | obj_4=obj_3.getExpr() |
						obj_4.getTarget().hasName("__btrfs_abort_transaction")
						and obj_4.getArgument(0).(VariableAccess).getTarget().getType().hasName("btrfs_trans_handle *")
						and obj_4.getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
						and obj_4.getArgument(2) instanceof Literal
						and obj_4.getArgument(3).(VariableAccess).getTarget()=vret_3417
					)
				)
				and obj_2.getStmt(0).(IfStmt).getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("test_and_set_bit")
			)
			and obj_1.getCondition() instanceof Literal
		)
		and exists(DoStmt obj_5 | obj_5=obj_0.getElse() |
			exists(BlockStmt obj_6 | obj_6=obj_5.getStmt() |
				exists(ExprStmt obj_7 | obj_7=obj_6.getStmt(0) |
					exists(FunctionCall obj_8 | obj_8=obj_7.getExpr() |
						obj_8.getTarget().hasName("__btrfs_handle_fs_error")
						and obj_8.getArgument(0).(PointerFieldAccess).getTarget().getName()="fs_info"
						and obj_8.getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
						and obj_8.getArgument(2) instanceof Literal
						and obj_8.getArgument(3).(VariableAccess).getTarget()=vret_3417
						and obj_8.getArgument(4) instanceof Literal
					)
				)
			)
			and obj_5.getCondition() instanceof Literal
		)
		and obj_0.getCondition().(VariableAccess).getTarget().getType().hasName("btrfs_trans_handle *")
	)
}

from Function func, Parameter vlog_3415, Variable vret_3417, VariableAccess target_3, ExprStmt target_4, ExprStmt target_5, BlockStmt target_6
where
not func_0(vlog_3415, target_3, target_4)
and not func_1(vlog_3415, target_3)
and not func_2(vlog_3415, target_3, target_5)
and func_3(vret_3417, target_6, target_3)
and func_4(vlog_3415, vret_3417, target_4)
and func_5(vlog_3415, vret_3417, target_5)
and func_6(vret_3417, target_6)
and vlog_3415.getType().hasName("btrfs_root *")
and vret_3417.getType().hasName("int")
and vlog_3415.getFunction() = func
and vret_3417.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
