/**
 * @name linux-67a2e213e7e937c41c52ab5bc46bf3f4de469f6e-cma_alloc
 * @id cpp/linux/67a2e213e7e937c41c52ab5bc46bf3f4de469f6e/cma-alloc
 * @description linux-67a2e213e7e937c41c52ab5bc46bf3f4de469f6e-mm/cma.c-cma_alloc CVE-2017-9725
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Function func, StringLiteral target_1) {
	target_1.getValue()="cma: %s(cma %p, count %d, align %d)\n"
	and not target_1.getValue()="cma: %s(cma %p, count %zu, align %d)\n"
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Parameter vcount_364, NotExpr target_4, VariableAccess target_3) {
	target_3.getTarget()=vcount_364
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__dynamic_pr_debug")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("_ddebug")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof StringLiteral
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("cma *")
	and target_3.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(5).(VariableAccess).getTarget().getType().hasName("unsigned int")
	and target_3.getLocation().isBefore(target_4.getOperand().(VariableAccess).getLocation())
}

predicate func_4(Parameter vcount_364, NotExpr target_4) {
	target_4.getOperand().(VariableAccess).getTarget()=vcount_364
}

from Function func, Parameter vcount_364, StringLiteral target_1, VariableAccess target_3, NotExpr target_4
where
func_1(func, target_1)
and func_3(vcount_364, target_4, target_3)
and func_4(vcount_364, target_4)
and vcount_364.getType().hasName("unsigned int")
and vcount_364.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
