/**
 * @name linux-dfd0743f1d9ea76931510ed150334d571fbab49d-tee_shm_get_from_id
 * @id cpp/linux/dfd0743f1d9ea76931510ed150334d571fbab49d/tee-shm-get-from-id
 * @description linux-dfd0743f1d9ea76931510ed150334d571fbab49d-drivers/tee/tee_shm.c-tee_shm_get_from_id CVE-2021-44733
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vshm_476, FunctionCall target_0) {
	target_0.getTarget().hasName("get_dma_buf")
	and not target_0.getTarget().hasName("refcount_inc")
	and target_0.getArgument(0).(PointerFieldAccess).getTarget().getName()="dmabuf"
	and target_0.getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshm_476
}

predicate func_1(Variable vshm_476) {
exists(AddressOfExpr target_1 |
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="refcount"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshm_476
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall)
}

predicate func_2(Variable vshm_476, VariableAccess target_2) {
	target_2.getTarget()=vshm_476
}

predicate func_3(Variable vshm_476, LogicalOrExpr target_6, IfStmt target_3) {
	target_3.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_3.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshm_476
	and target_3.getCondition().(BitwiseAndExpr).getRightOperand().(BinaryBitwiseOperation).getValue()="2"
	and target_3.getThen().(ExprStmt).getExpr() instanceof FunctionCall
	and target_3.getParent().(IfStmt).getCondition()=target_6
}

predicate func_4(Variable vshm_476, BitwiseAndExpr target_7, ReturnStmt target_8, VariableAccess target_4) {
	target_4.getTarget()=vshm_476
	and target_4.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_7.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getLocation())
	and target_4.getLocation().isBefore(target_8.getExpr().(VariableAccess).getLocation())
}

predicate func_6(Variable vshm_476, LogicalOrExpr target_6) {
	target_6.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=vshm_476
	and target_6.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="ctx"
	and target_6.getRightOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshm_476
	and target_6.getRightOperand().(EqualityOperation).getRightOperand().(VariableAccess).getTarget().getType().hasName("tee_context *")
}

predicate func_7(Variable vshm_476, BitwiseAndExpr target_7) {
	target_7.getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_7.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vshm_476
	and target_7.getRightOperand() instanceof BinaryBitwiseOperation
}

predicate func_8(Variable vshm_476, ReturnStmt target_8) {
	target_8.getExpr().(VariableAccess).getTarget()=vshm_476
}

from Function func, Variable vshm_476, FunctionCall target_0, VariableAccess target_2, IfStmt target_3, VariableAccess target_4, LogicalOrExpr target_6, BitwiseAndExpr target_7, ReturnStmt target_8
where
func_0(vshm_476, target_0)
and not func_1(vshm_476)
and func_2(vshm_476, target_2)
and func_3(vshm_476, target_6, target_3)
and func_4(vshm_476, target_7, target_8, target_4)
and func_6(vshm_476, target_6)
and func_7(vshm_476, target_7)
and func_8(vshm_476, target_8)
and vshm_476.getType().hasName("tee_shm *")
and vshm_476.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
