/**
 * @name linux-f71f01394f742fc4558b3f9f4c7ef4c4cf3b07c8-interpret_errors
 * @id cpp/linux/f71f01394f742fc4558b3f9f4c7ef4c4cf3b07c8/interpret-errors
 * @description linux-f71f01394f742fc4558b3f9f4c7ef4c4cf3b07c8-drivers/block/floppy.c-interpret_errors CVE-2022-1652
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Variable verrors, BlockStmt target_2, PointerDereferenceExpr target_1) {
	target_1.getOperand().(VariableAccess).getTarget()=verrors
	and target_1.getParent().(GEExpr).getLesserOperand().(ValueFieldAccess).getTarget().getName()="reporting"
	and target_1.getParent().(GEExpr).getLesserOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="max_errors"
	and target_1.getParent().(GEExpr).getLesserOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayBase().(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_1.getParent().(GEExpr).getLesserOperand().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("unsigned char")
	and target_1.getParent().(GEExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Function func, BlockStmt target_2) {
	target_2.getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("print_errors")
	and target_2.getEnclosingFunction() = func
}

from Function func, Variable verrors, PointerDereferenceExpr target_1, BlockStmt target_2
where
func_1(verrors, target_2, target_1)
and func_2(func, target_2)
and verrors.getType().hasName("int *")
and not verrors.getParentScope+() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
