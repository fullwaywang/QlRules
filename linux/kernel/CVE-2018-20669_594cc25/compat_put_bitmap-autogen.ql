/**
 * @name linux-594cc251fdd0d231d342d88b2fdff4bc42fb0690-compat_put_bitmap
 * @id cpp/linux/594cc251fdd0d231d342d88b2fdff4bc42fb0690/compat-put-bitmap
 * @description linux-594cc251fdd0d231d342d88b2fdff4bc42fb0690-kernel/compat.c-compat_put_bitmap CVE-2018-20669
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vbitmap_size_379, Parameter vumask_378, FunctionCall target_0) {
	target_0.getTarget().hasName("__chk_range_not_ok")
	and not target_0.getTarget().hasName("user_access_begin")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vumask_378
	and target_0.getArgument(1).(DivExpr).getLeftOperand().(VariableAccess).getTarget()=vbitmap_size_379
	and target_0.getArgument(1).(DivExpr).getRightOperand().(Literal).getValue()="8"
	and target_0.getArgument(2).(ValueFieldAccess).getTarget().getName()="seg"
	and target_0.getArgument(2).(ValueFieldAccess).getQualifier() instanceof ValueFieldAccess
	and target_0.getParent().(ExprStmt).getParent().(BlockStmt).getParent().(StmtExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_1(ReturnStmt target_15, Function func, StmtExpr target_1) {
	target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getStmt().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_1.getStmt().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_1.getParent().(NotExpr).getParent().(IfStmt).getThen()=target_15
	and target_1.getEnclosingFunction() = func
}

/*predicate func_2(Function func, ExprStmt target_2) {
	target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(1).(IfStmt).getThen().(DoStmt).getCondition() instanceof Literal
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_2.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_2.getEnclosingFunction() = func
}

*/
/*predicate func_4(Variable v__ret_warn_on_387, IfStmt target_4) {
	target_4.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_4.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_387
	and target_4.getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_4.getThen().(DoStmt).getCondition() instanceof Literal
	and target_4.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_4.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
	and target_4.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
	and target_4.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_4.getThen().(DoStmt).getStmt().(BlockStmt).getStmt(0).(DoStmt).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getValue()="12"
}

*/
/*predicate func_5(Function func, DoStmt target_5) {
	target_5.getCondition() instanceof Literal
	and target_5.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0) instanceof StringLiteral
	and target_5.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(1) instanceof Literal
	and target_5.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(2).(BitwiseOrExpr).getValue()="2307"
	and target_5.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_5.getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(3).(SizeofTypeOperator).getValue()="12"
	and target_5.getEnclosingFunction() = func
}

*/
/*predicate func_6(Function func, AsmStmt target_6) {
	target_6.getChild(0) instanceof StringLiteral
	and target_6.getChild(1) instanceof Literal
	and target_6.getChild(2).(BitwiseOrExpr).getValue()="2307"
	and target_6.getChild(3).(SizeofTypeOperator).getType() instanceof LongType
	and target_6.getChild(3).(SizeofTypeOperator).getValue()="12"
	and target_6.getEnclosingFunction() = func
}

*/
/*predicate func_7(Function func, ExprStmt target_7) {
	target_7.getExpr().(StmtExpr).getStmt().(BlockStmt).getStmt(0).(AsmStmt).getChild(0).(Literal).getValue()="414"
	and target_7.getEnclosingFunction() = func
}

*/
/*predicate func_8(Function func, AsmStmt target_8) {
	target_8.getChild(0).(Literal).getValue()="414"
	and target_8.getEnclosingFunction() = func
}

*/
/*predicate func_9(Variable v__ret_warn_on_387, ExprStmt target_9) {
	target_9.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_9.getExpr().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(VariableAccess).getTarget()=v__ret_warn_on_387
	and target_9.getExpr().(FunctionCall).getArgument(1) instanceof Literal
}

*/
/*predicate func_10(Function func, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_10.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
	and target_10.getEnclosingFunction() = func
}

*/
/*predicate func_11(Function func, ExprStmt target_11) {
	target_11.getExpr() instanceof Literal
	and target_11.getEnclosingFunction() = func
}

*/
/*predicate func_12(Function func, ExprStmt target_12) {
	target_12.getExpr() instanceof FunctionCall
	and target_12.getEnclosingFunction() = func
}

*/
/*predicate func_13(Function func, ValueFieldAccess target_13) {
	target_13.getTarget().getName()="addr_limit"
	and target_13.getQualifier().(PointerFieldAccess).getTarget().getName()="thread"
	and target_13.getQualifier().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_13.getParent().(ValueFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
	and target_13.getEnclosingFunction() = func
}

*/
predicate func_14(Function func, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("stac")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_14
}

predicate func_15(NotExpr target_16, Function func, ReturnStmt target_15) {
	target_15.getExpr().(UnaryMinusExpr).getValue()="-14"
	and target_15.getParent().(IfStmt).getCondition()=target_16
	and target_15.getEnclosingFunction() = func
}

predicate func_16(Function func, NotExpr target_16) {
	target_16.getOperand() instanceof StmtExpr
	and target_16.getEnclosingFunction() = func
}

from Function func, Parameter vbitmap_size_379, Variable v__ret_warn_on_387, Parameter vumask_378, FunctionCall target_0, StmtExpr target_1, ExprStmt target_14, ReturnStmt target_15, NotExpr target_16
where
func_0(vbitmap_size_379, vumask_378, target_0)
and func_1(target_15, func, target_1)
and func_14(func, target_14)
and func_15(target_16, func, target_15)
and func_16(func, target_16)
and vbitmap_size_379.getType().hasName("unsigned long")
and v__ret_warn_on_387.getType().hasName("int")
and vumask_378.getType().hasName("compat_ulong_t *")
and vbitmap_size_379.getFunction() = func
and v__ret_warn_on_387.(LocalVariable).getFunction() = func
and vumask_378.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
