/**
 * @name linux-9ca9fb24d5febccea354089c41f96a8ad0d853f8-__io_arm_poll_handler
 * @id cpp/linux/9ca9fb24d5febccea354089c41f96a8ad0d853f8/--io-arm-poll-handler
 * @description linux-9ca9fb24d5febccea354089c41f96a8ad0d853f8-io_uring/poll.c-__io_arm_poll_handler CVE-2023-3389
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vreq_407, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vreq_407
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("io_poll_req_insert_locked")
	and target_0.getThen().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_407
	and target_0.getElse() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vreq_407, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("io_poll_req_insert")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_407
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vreq_407, LogicalAndExpr target_3, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("io_poll_remove_entries")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vreq_407
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, LogicalAndExpr target_3) {
	target_3.getLeftOperand().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("__poll_t")
	and target_3.getRightOperand().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="error"
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("io_poll_table *")
	and target_3.getRightOperand().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(LogicalOrExpr).getRightOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="nr_entries"
	and target_3.getRightOperand().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vreq_407, ExprStmt target_1, ExprStmt target_2, LogicalAndExpr target_3
where
not func_0(vreq_407, target_1, target_2, func)
and func_1(vreq_407, func, target_1)
and func_2(vreq_407, target_3, target_2)
and func_3(func, target_3)
and vreq_407.getType().hasName("io_kiocb *")
and vreq_407.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
