/**
 * @name linux-b2d03cabe2b2e150ff5a381731ea0355459be09f-ieee80211_rx_h_decrypt
 * @id cpp/linux/b2d03cabe2b2e150ff5a381731ea0355459be09f/ieee80211-rx-h-decrypt
 * @description linux-b2d03cabe2b2e150ff5a381731ea0355459be09f-ieee80211_rx_h_decrypt CVE-2022-42722
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vrx_1900, LogicalOrExpr target_4, ExprStmt target_5, PointerFieldAccess target_6) {
	exists(IfStmt target_0 |
		target_0.getCondition().(PointerFieldAccess).getTarget().getName()="dev"
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sdata"
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrx_1900
		and target_0.getThen() instanceof ExprStmt
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getCondition().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vrx_1900, ExprStmt target_7, PointerFieldAccess target_8) {
	exists(LogicalAndExpr target_1 |
		target_1.getAnOperand() instanceof LogicalAndExpr
		and target_1.getAnOperand().(PointerFieldAccess).getTarget().getName()="dev"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sdata"
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrx_1900
		and target_1.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_1.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand() instanceof LogicalAndExpr
		and target_1.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_1.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable vskb_1902, Parameter vrx_1900, LogicalOrExpr target_4, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("cfg80211_rx_unprot_mlme_mgmt")
		and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="dev"
		and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="sdata"
		and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrx_1900
		and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getTarget().getName()="data"
		and target_2.getExpr().(FunctionCall).getArgument(1).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1902
		and target_2.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="len"
		and target_2.getExpr().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vskb_1902
		and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_4
}

predicate func_3(Variable vresult_1906, Variable vfc_1910, LogicalAndExpr target_3) {
		target_3.getAnOperand().(FunctionCall).getTarget().hasName("ieee80211_is_beacon")
		and target_3.getAnOperand().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfc_1910
		and target_3.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vresult_1906
		and target_3.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="1"
		and target_3.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
		and target_3.getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1).(Literal).getValue()="0"
}

predicate func_4(Function func, LogicalOrExpr target_4) {
		target_4.getAnOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_4.getAnOperand().(RelationalOperation).getGreaterOperand().(AddExpr).getValue()="6"
		and target_4.getAnOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
		and target_4.getAnOperand().(RelationalOperation).getLesserOperand().(AddExpr).getValue()="8"
		and target_4.getEnclosingFunction() = func
}

predicate func_5(Parameter vrx_1900, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="key"
		and target_5.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrx_1900
		and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getCondition().(VariableAccess).getTarget().getType().hasName("ieee80211_key *")
		and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getThen().(VariableAccess).getTarget().getType().hasName("ieee80211_key *")
		and target_5.getExpr().(AssignExpr).getRValue().(ConditionalExpr).getElse().(VariableAccess).getTarget().getType().hasName("ieee80211_key *")
}

predicate func_6(Parameter vrx_1900, PointerFieldAccess target_6) {
		target_6.getTarget().getName()="dev"
		and target_6.getQualifier().(PointerFieldAccess).getTarget().getName()="sdata"
		and target_6.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrx_1900
}

predicate func_7(Variable vresult_1906, Parameter vrx_1900, ExprStmt target_7) {
		target_7.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vresult_1906
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("ieee80211_crypto_gcmp_decrypt")
		and target_7.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vrx_1900
}

predicate func_8(Parameter vrx_1900, PointerFieldAccess target_8) {
		target_8.getTarget().getName()="dev"
		and target_8.getQualifier().(PointerFieldAccess).getTarget().getName()="sdata"
		and target_8.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vrx_1900
}

from Function func, Variable vskb_1902, Variable vresult_1906, Variable vfc_1910, Parameter vrx_1900, ExprStmt target_2, LogicalAndExpr target_3, LogicalOrExpr target_4, ExprStmt target_5, PointerFieldAccess target_6, ExprStmt target_7, PointerFieldAccess target_8
where
not func_0(vrx_1900, target_4, target_5, target_6)
and not func_1(vrx_1900, target_7, target_8)
and func_2(vskb_1902, vrx_1900, target_4, target_2)
and func_3(vresult_1906, vfc_1910, target_3)
and func_4(func, target_4)
and func_5(vrx_1900, target_5)
and func_6(vrx_1900, target_6)
and func_7(vresult_1906, vrx_1900, target_7)
and func_8(vrx_1900, target_8)
and vskb_1902.getType().hasName("sk_buff *")
and vresult_1906.getType().hasName("ieee80211_rx_result")
and vfc_1910.getType().hasName("__le16")
and vrx_1900.getType().hasName("ieee80211_rx_data *")
and vskb_1902.(LocalVariable).getFunction() = func
and vresult_1906.(LocalVariable).getFunction() = func
and vfc_1910.(LocalVariable).getFunction() = func
and vrx_1900.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
