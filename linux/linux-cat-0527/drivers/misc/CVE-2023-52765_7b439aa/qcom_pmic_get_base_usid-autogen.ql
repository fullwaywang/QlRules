/**
 * @name linux-7b439aaa62fee474a0d84d67a25f4984467e7b95-qcom_pmic_get_base_usid
 * @id cpp/linux/7b439aaa62fee474a0d84d67a25f4984467e7b95/qcom-pmic-get-base-usid
 * @description linux-7b439aaa62fee474a0d84d67a25f4984467e7b95-drivers/mfd/qcom-spmi-pmic.c-qcom_pmic_get_base_usid CVE-2023-52765
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("get_device")
	and target_0.getArgument(0) instanceof AddressOfExpr
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Variable vsdev_81, AddressOfExpr target_1) {
	target_1.getOperand().(PointerFieldAccess).getTarget().getName()="dev"
	and target_1.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsdev_81
	and target_1.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_2(Variable vsdev_81, EqualityOperation target_7, ReturnStmt target_2) {
	target_2.getExpr().(VariableAccess).getTarget()=vsdev_81
	and target_2.getParent().(IfStmt).getCondition()=target_7
}

predicate func_3(Function func, DeclStmt target_3) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_3
}

predicate func_4(Function func, DeclStmt target_4) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_4
}

predicate func_5(Parameter vdev_79, Variable vsdev_81, AssignExpr target_5) {
	target_5.getLValue().(VariableAccess).getTarget()=vsdev_81
	and target_5.getRValue().(FunctionCall).getTarget().hasName("to_spmi_device")
	and target_5.getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vdev_79
}

predicate func_6(Variable vctx_82, Function func, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vctx_82
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("dev_get_drvdata")
	and target_6.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0) instanceof AddressOfExpr
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_6
}

predicate func_7(Variable vsdev_81, Variable vctx_82, EqualityOperation target_7) {
	target_7.getLeftOperand().(RemExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="usid"
	and target_7.getLeftOperand().(RemExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsdev_81
	and target_7.getLeftOperand().(RemExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="num_usids"
	and target_7.getLeftOperand().(RemExpr).getRightOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_82
	and target_7.getRightOperand().(Literal).getValue()="0"
}

from Function func, Parameter vdev_79, Variable vsdev_81, Variable vctx_82, AddressOfExpr target_1, ReturnStmt target_2, DeclStmt target_3, DeclStmt target_4, AssignExpr target_5, ExprStmt target_6, EqualityOperation target_7
where
not func_0(func)
and func_1(vsdev_81, target_1)
and func_2(vsdev_81, target_7, target_2)
and func_3(func, target_3)
and func_4(func, target_4)
and func_5(vdev_79, vsdev_81, target_5)
and func_6(vctx_82, func, target_6)
and func_7(vsdev_81, vctx_82, target_7)
and vdev_79.getType().hasName("device *")
and vsdev_81.getType().hasName("spmi_device *")
and vctx_82.getType().hasName("qcom_spmi_dev *")
and vdev_79.getFunction() = func
and vsdev_81.(LocalVariable).getFunction() = func
and vctx_82.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
