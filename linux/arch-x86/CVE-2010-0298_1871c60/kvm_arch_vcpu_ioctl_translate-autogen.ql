/**
 * @name linux-1871c6020d7308afb99127bba51f04548e7ca84e-kvm_arch_vcpu_ioctl_translate
 * @id cpp/linux/1871c6020d7308afb99127bba51f04548e7ca84e/kvm-arch-vcpu-ioctl-translate
 * @description linux-1871c6020d7308afb99127bba51f04548e7ca84e-arch/x86/kvm/x86.c-kvm_arch_vcpu_ioctl_translate CVE-2010-0298
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vvaddr_5196, Parameter vvcpu_5193, ValueFieldAccess target_5, AddressOfExpr target_6) {
	exists(FunctionCall target_0 |
		target_0.getTarget().hasName("kvm_mmu_gva_to_gpa_system")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vvcpu_5193
		and target_0.getArgument(1).(VariableAccess).getTarget()=vvaddr_5196
		and target_0.getArgument(2).(Literal).getValue()="0"
		and target_0.getParent().(AssignExpr).getRValue() = target_0
		and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("gpa_t")
		and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation())
		and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_6.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vvcpu_5193, VariableAccess target_1) {
		target_1.getTarget()=vvcpu_5193
		and target_1.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_2(Variable vvaddr_5196, VariableAccess target_2) {
		target_2.getTarget()=vvaddr_5196
		and target_2.getParent().(VariableCall).getParent().(AssignExpr).getRValue() instanceof VariableCall
}

predicate func_3(Variable vvaddr_5196, Parameter vvcpu_5193, VariableCall target_3) {
		target_3.getExpr().(ValueFieldAccess).getTarget().getName()="gva_to_gpa"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getTarget().getName()="mmu"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_3.getExpr().(ValueFieldAccess).getQualifier().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_5193
		and target_3.getArgument(0).(VariableAccess).getTarget()=vvcpu_5193
		and target_3.getArgument(1).(VariableAccess).getTarget()=vvaddr_5196
}

predicate func_5(Parameter vvcpu_5193, ValueFieldAccess target_5) {
		target_5.getTarget().getName()="mmu"
		and target_5.getQualifier().(PointerFieldAccess).getTarget().getName()="arch"
		and target_5.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_5193
}

predicate func_6(Parameter vvcpu_5193, AddressOfExpr target_6) {
		target_6.getOperand().(PointerFieldAccess).getTarget().getName()="srcu"
		and target_6.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="kvm"
		and target_6.getOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vvcpu_5193
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("srcu_read_unlock")
		and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
}

from Function func, Variable vvaddr_5196, Parameter vvcpu_5193, VariableAccess target_1, VariableAccess target_2, VariableCall target_3, ValueFieldAccess target_5, AddressOfExpr target_6
where
not func_0(vvaddr_5196, vvcpu_5193, target_5, target_6)
and func_1(vvcpu_5193, target_1)
and func_2(vvaddr_5196, target_2)
and func_3(vvaddr_5196, vvcpu_5193, target_3)
and func_5(vvcpu_5193, target_5)
and func_6(vvcpu_5193, target_6)
and vvaddr_5196.getType().hasName("unsigned long")
and vvcpu_5193.getType().hasName("kvm_vcpu *")
and vvaddr_5196.(LocalVariable).getFunction() = func
and vvcpu_5193.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
