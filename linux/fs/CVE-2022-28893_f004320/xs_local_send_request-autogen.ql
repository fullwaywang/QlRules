/**
 * @name linux-f00432063db1a0db484e85193eccc6845435b80e-xs_local_send_request
 * @id cpp/linux/f00432063db1a0db484e85193eccc6845435b80e/xs-local-send-request
 * @description linux-f00432063db1a0db484e85193eccc6845435b80e-xs_local_send_request CVE-2022-28893
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vxprt_867, FunctionCall target_0) {
		target_0.getTarget().hasName("xs_close")
		and not target_0.getTarget().hasName("xprt_force_disconnect")
		and target_0.getArgument(0).(VariableAccess).getTarget()=vxprt_867
}

predicate func_1(Variable vxprt_867, FunctionCall target_1) {
		target_1.getTarget().hasName("xs_close")
		and not target_1.getTarget().hasName("xprt_force_disconnect")
		and target_1.getArgument(0).(VariableAccess).getTarget()=vxprt_867
}

from Function func, Variable vxprt_867, FunctionCall target_0, FunctionCall target_1
where
func_0(vxprt_867, target_0)
and func_1(vxprt_867, target_1)
and vxprt_867.getType().hasName("rpc_xprt *")
and vxprt_867.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
