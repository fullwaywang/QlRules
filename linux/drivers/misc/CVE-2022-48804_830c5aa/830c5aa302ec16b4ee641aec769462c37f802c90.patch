commit 830c5aa302ec16b4ee641aec769462c37f802c90
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Thu Jan 27 15:44:04 2022 +0100

    vt_ioctl: fix array_index_nospec in vt_setactivate
    
    commit 61cc70d9e8ef5b042d4ed87994d20100ec8896d9 upstream.
    
    array_index_nospec ensures that an out-of-bounds value is set to zero
    on the transient path. Decreasing the value by one afterwards causes
    a transient integer underflow. vsa.console should be decreased first
    and then sanitized with array_index_nospec.
    
    Kasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh
    Razavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU
    Amsterdam.
    
    Co-developed-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Link: https://lore.kernel.org/r/20220127144406.3589293-1-jakobkoschel@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/tty/vt/vt_ioctl.c b/drivers/tty/vt/vt_ioctl.c
index e1c1627a3356..954e5c40f473 100644
--- a/drivers/tty/vt/vt_ioctl.c
+++ b/drivers/tty/vt/vt_ioctl.c
@@ -718,9 +718,9 @@ int vt_ioctl(struct tty_struct *tty,
 		if (vsa.console == 0 || vsa.console > MAX_NR_CONSOLES)
 			ret = -ENXIO;
 		else {
-			vsa.console = array_index_nospec(vsa.console,
-							 MAX_NR_CONSOLES + 1);
 			vsa.console--;
+			vsa.console = array_index_nospec(vsa.console,
+							 MAX_NR_CONSOLES);
 			console_lock();
 			ret = vc_allocate(vsa.console);
 			if (ret == 0) {
