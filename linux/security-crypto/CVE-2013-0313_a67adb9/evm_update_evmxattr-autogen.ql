/**
 * @name linux-a67adb997419fb53540d4a4f79c6471c60bc69b6-evm_update_evmxattr
 * @id cpp/linux/a67adb997419fb53540d4a4f79c6471c60bc69b6/evm-update-evmxattr
 * @description linux-a67adb997419fb53540d4a4f79c6471c60bc69b6-security/integrity/evm/evm_crypto.c-evm_update_evmxattr CVE-2013-0313
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinode_197, ExprStmt target_2, PointerFieldAccess target_4) {
exists(LogicalAndExpr target_0 |
	target_0.getLeftOperand() instanceof EqualityOperation
	and target_0.getRightOperand().(PointerFieldAccess).getTarget().getName()="removexattr"
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="i_op"
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_197
	and target_0.getParent().(IfStmt).getThen()=target_2
	and target_0.getRightOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vrc_199, ExprStmt target_2, EqualityOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget()=vrc_199
	and target_1.getRightOperand().(UnaryMinusExpr).getValue()="-61"
	and target_1.getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Parameter vdentry_194, Variable vinode_197, Variable vrc_199, EqualityOperation target_5, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vrc_199
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getTarget().getName()="removexattr"
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="i_op"
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getExpr().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_197
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(0).(VariableAccess).getTarget()=vdentry_194
	and target_2.getExpr().(AssignExpr).getRValue().(VariableCall).getArgument(1).(StringLiteral).getValue()="security.evm"
	and target_2.getParent().(IfStmt).getParent().(IfStmt).getCondition()=target_5
}

predicate func_4(Variable vinode_197, PointerFieldAccess target_4) {
	target_4.getTarget().getName()="removexattr"
	and target_4.getQualifier().(PointerFieldAccess).getTarget().getName()="i_op"
	and target_4.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_197
}

predicate func_5(Variable vrc_199, EqualityOperation target_5) {
	target_5.getLeftOperand().(VariableAccess).getTarget()=vrc_199
	and target_5.getRightOperand().(Literal).getValue()="0"
}

from Function func, Parameter vdentry_194, Variable vinode_197, Variable vrc_199, EqualityOperation target_1, ExprStmt target_2, PointerFieldAccess target_4, EqualityOperation target_5
where
not func_0(vinode_197, target_2, target_4)
and func_1(vrc_199, target_2, target_1)
and func_2(vdentry_194, vinode_197, vrc_199, target_5, target_2)
and func_4(vinode_197, target_4)
and func_5(vrc_199, target_5)
and vdentry_194.getType().hasName("dentry *")
and vinode_197.getType().hasName("inode *")
and vrc_199.getType().hasName("int")
and vdentry_194.getFunction() = func
and vinode_197.(LocalVariable).getFunction() = func
and vrc_199.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
