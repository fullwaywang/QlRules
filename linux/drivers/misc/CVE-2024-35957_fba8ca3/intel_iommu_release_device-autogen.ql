/**
 * @name linux-fba8ca3e6f608b92e54271fdbd3ce569361939fc-intel_iommu_release_device
 * @id cpp/linux/fba8ca3e6f608b92e54271fdbd3ce569361939fc/intel-iommu-release-device
 * @description linux-fba8ca3e6f608b92e54271fdbd3ce569361939fc-drivers/iommu/intel/iommu.c-intel_iommu_release_device CVE-2024-35957
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vdev_4407, ExprStmt target_1, FunctionCall target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getTarget().getName()="bus"
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vdev_4407
	and target_0.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getRightOperand().(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("bus_type")
	and target_0.getCondition().(LogicalAndExpr).getRightOperand().(FunctionCall).getTarget().hasName("pci_ats_supported")
	and target_0.getThen() instanceof ExprStmt
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getArgument(0).(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalAndExpr).getLeftOperand().(EqualityOperation).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vinfo_4409, Function func, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("device_rbtree_remove")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vinfo_4409
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
}

predicate func_2(Parameter vdev_4407, FunctionCall target_2) {
	target_2.getTarget().hasName("dev_iommu_priv_get")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vdev_4407
}

from Function func, Parameter vdev_4407, Variable vinfo_4409, ExprStmt target_1, FunctionCall target_2
where
not func_0(vdev_4407, target_1, target_2, func)
and func_1(vinfo_4409, func, target_1)
and func_2(vdev_4407, target_2)
and vdev_4407.getType().hasName("device *")
and vinfo_4409.getType().hasName("device_domain_info *")
and vdev_4407.getFunction() = func
and vinfo_4409.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
