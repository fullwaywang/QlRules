/**
 * @name linux-f5c779b7ddbda30866cf2a27c63e34158f858c73-__session_create
 * @id cpp/linux/f5c779b7ddbda30866cf2a27c63e34158f858c73/--session-create
 * @description linux-f5c779b7ddbda30866cf2a27c63e34158f858c73-fs/ksmbd/mgmt/user_session.c-__session_create CVE-2023-32250
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vsess_305, ExprStmt target_1, AddressOfExpr target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="state"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_305
	and target_0.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getValue()="1"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vsess_305, ExprStmt target_1) {
	target_1.getExpr().(FunctionCall).getTarget().hasName("set_session_flag")
	and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsess_305
	and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("int")
}

predicate func_2(Variable vsess_305, AddressOfExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="file_table"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsess_305
}

from Function func, Variable vsess_305, ExprStmt target_1, AddressOfExpr target_2
where
not func_0(vsess_305, target_1, target_2, func)
and func_1(vsess_305, target_1)
and func_2(vsess_305, target_2)
and vsess_305.getType().hasName("ksmbd_session *")
and vsess_305.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
