/**
 * @name linux-9ef8d83e8e25d5f1811b3a38eb1484f85f64296c-vmw_surface_define_ioctl
 * @id cpp/linux/9ef8d83e8e25d5f1811b3a38eb1484f85f64296c/vmw-surface-define-ioctl
 * @description linux-9ef8d83e8e25d5f1811b3a38eb1484f85f64296c-drivers/gpu/drm/vmwgfx/vmwgfx_surface.c-vmw_surface_define_ioctl CVE-2023-33951
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbackup_handle_858, Parameter vfile_priv_722, AddressOfExpr target_2, ExprStmt target_3) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("drm_gem_handle_delete")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vfile_priv_722
	and target_0.getArgument(1).(VariableAccess).getTarget()=vbackup_handle_858
	and target_2.getOperand().(VariableAccess).getLocation().isBefore(target_0.getArgument(1).(VariableAccess).getLocation())
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Variable vres_728, FunctionCall target_1) {
	target_1.getTarget().hasName("drm_gem_object_get")
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getTarget().getName()="base"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="tbo"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="guest_memory_bo"
	and target_1.getArgument(0).(AddressOfExpr).getOperand().(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_728
}

predicate func_2(Variable vbackup_handle_858, AddressOfExpr target_2) {
	target_2.getOperand().(VariableAccess).getTarget()=vbackup_handle_858
}

predicate func_3(Variable vbackup_handle_858, Parameter vfile_priv_722, Variable vres_728, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("vmw_gem_object_create_with_handle")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("vmw_private *")
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfile_priv_722
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getTarget().getName()="guest_memory_size"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_728
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vbackup_handle_858
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="guest_memory_bo"
	and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(4).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vres_728
}

from Function func, Variable vbackup_handle_858, Parameter vfile_priv_722, Variable vres_728, FunctionCall target_1, AddressOfExpr target_2, ExprStmt target_3
where
not func_0(vbackup_handle_858, vfile_priv_722, target_2, target_3)
and func_1(vres_728, target_1)
and func_2(vbackup_handle_858, target_2)
and func_3(vbackup_handle_858, vfile_priv_722, vres_728, target_3)
and vbackup_handle_858.getType().hasName("uint32_t")
and vfile_priv_722.getType().hasName("drm_file *")
and vres_728.getType().hasName("vmw_resource *")
and vbackup_handle_858.(LocalVariable).getFunction() = func
and vfile_priv_722.getFunction() = func
and vres_728.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
