/**
 * @name linux-8b8ace080319a866f5dfe9da8e665ae51d971c54-blk_alloc_queue
 * @id cpp/linux/8b8ace080319a866f5dfe9da8e665ae51d971c54/blk-alloc-queue
 * @description linux-8b8ace080319a866f5dfe9da8e665ae51d971c54-block/blk-core.c-blk_alloc_queue CVE-2024-35974
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vq_399, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("blkg_init_queue")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vq_399
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vq_399, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("percpu_ref_init")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="q_usage_counter"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vq_399
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(BitwiseOrExpr).getValue()="3264"
}

predicate func_2(Variable vq_399, AddressOfExpr target_2) {
	target_2.getOperand().(PointerFieldAccess).getTarget().getName()="mq_freeze_lock"
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vq_399
}

predicate func_3(Variable vq_399, AddressOfExpr target_3) {
	target_3.getOperand().(PointerFieldAccess).getTarget().getName()="q_usage_counter"
	and target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vq_399
}

from Function func, Variable vq_399, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3
where
not func_0(vq_399, target_1, target_2, target_3, func)
and func_1(vq_399, target_1)
and func_2(vq_399, target_2)
and func_3(vq_399, target_3)
and vq_399.getType().hasName("request_queue *")
and vq_399.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
