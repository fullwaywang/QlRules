/**
 * @name openssl-aab7c770353b1dc4ba045938c8fb446dd1c4531e-ec_wNAF_mul
 * @id cpp/openssl/aab7c770353b1dc4ba045938c8fb446dd1c4531e/ec-wnaf-mul
 * @description openssl-aab7c770353b1dc4ba045938c8fb446dd1c4531e-crypto/ec/ec_mult.c-ec_wNAF_mul CVE-2018-5407
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vgroup_129, Parameter vr_129, Parameter vscalar_129, Parameter vnum_130, Parameter vctx_131, Function func) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vscalar_129
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vnum_130
		and target_0.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("ec_mul_consttime")
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vgroup_129
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vr_129
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget()=vscalar_129
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(3).(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vctx_131
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0)
}

predicate func_1(Parameter vgroup_129, Parameter vr_129, Parameter vscalar_129, Parameter vnum_130, Parameter vpoints_130, Parameter vscalars_130, Parameter vctx_131, EqualityOperation target_2, LogicalAndExpr target_3, ArrayExpr target_4, ArrayExpr target_5, EqualityOperation target_6, Function func) {
	exists(IfStmt target_1 |
		target_1.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vscalar_129
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vnum_130
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="1"
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("ec_mul_consttime")
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vgroup_129
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vr_129
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(2).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vscalars_130
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(2).(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayBase().(VariableAccess).getTarget()=vpoints_130
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayOffset().(Literal).getValue()="0"
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vctx_131
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getCondition().(LogicalAndExpr).getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation().isBefore(target_3.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getLocation())
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(3).(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_4.getArrayBase().(VariableAccess).getLocation())
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(2).(ArrayExpr).getArrayBase().(VariableAccess).getLocation().isBefore(target_5.getArrayBase().(VariableAccess).getLocation())
		and target_1.getThen().(BlockStmt).getStmt(0).(ReturnStmt).getExpr().(FunctionCall).getArgument(4).(VariableAccess).getLocation().isBefore(target_6.getAnOperand().(VariableAccess).getLocation()))
}

predicate func_2(Parameter vgroup_129, Parameter vr_129, EqualityOperation target_2) {
		target_2.getAnOperand().(PointerFieldAccess).getTarget().getName()="meth"
		and target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vgroup_129
		and target_2.getAnOperand().(PointerFieldAccess).getTarget().getName()="meth"
		and target_2.getAnOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vr_129
}

predicate func_3(Parameter vscalar_129, Parameter vnum_130, LogicalAndExpr target_3) {
		target_3.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vscalar_129
		and target_3.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
		and target_3.getAnOperand().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vnum_130
		and target_3.getAnOperand().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
}

predicate func_4(Parameter vpoints_130, ArrayExpr target_4) {
		target_4.getArrayBase().(VariableAccess).getTarget()=vpoints_130
		and target_4.getArrayOffset().(VariableAccess).getTarget().getType().hasName("size_t")
}

predicate func_5(Parameter vscalars_130, ArrayExpr target_5) {
		target_5.getArrayBase().(VariableAccess).getTarget()=vscalars_130
		and target_5.getArrayOffset().(VariableAccess).getTarget().getType().hasName("size_t")
		and target_5.getParent().(FunctionCall).getParent().(ConditionalExpr).getThen().(FunctionCall).getTarget().hasName("BN_num_bits")
}

predicate func_6(Parameter vctx_131, BlockStmt target_7, EqualityOperation target_6) {
		target_6.getAnOperand().(VariableAccess).getTarget()=vctx_131
		and target_6.getAnOperand().(Literal).getValue()="0"
		and target_6.getParent().(IfStmt).getThen()=target_7
}

predicate func_7(Parameter vctx_131, BlockStmt target_7) {
		target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vctx_131
		and target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("BN_CTX *")
		and target_7.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("BN_CTX_new")
		and target_7.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(VariableAccess).getTarget()=vctx_131
		and target_7.getStmt(1).(IfStmt).getCondition().(EqualityOperation).getAnOperand().(Literal).getValue()="0"
}

from Function func, Parameter vgroup_129, Parameter vr_129, Parameter vscalar_129, Parameter vnum_130, Parameter vpoints_130, Parameter vscalars_130, Parameter vctx_131, EqualityOperation target_2, LogicalAndExpr target_3, ArrayExpr target_4, ArrayExpr target_5, EqualityOperation target_6, BlockStmt target_7
where
not func_0(vgroup_129, vr_129, vscalar_129, vnum_130, vctx_131, func)
and not func_1(vgroup_129, vr_129, vscalar_129, vnum_130, vpoints_130, vscalars_130, vctx_131, target_2, target_3, target_4, target_5, target_6, func)
and func_2(vgroup_129, vr_129, target_2)
and func_3(vscalar_129, vnum_130, target_3)
and func_4(vpoints_130, target_4)
and func_5(vscalars_130, target_5)
and func_6(vctx_131, target_7, target_6)
and func_7(vctx_131, target_7)
and vgroup_129.getType().hasName("const EC_GROUP *")
and vr_129.getType().hasName("EC_POINT *")
and vscalar_129.getType().hasName("const BIGNUM *")
and vnum_130.getType().hasName("size_t")
and vpoints_130.getType().hasName("const EC_POINT *[]")
and vscalars_130.getType().hasName("const BIGNUM *[]")
and vctx_131.getType().hasName("BN_CTX *")
and vgroup_129.getFunction() = func
and vr_129.getFunction() = func
and vscalar_129.getFunction() = func
and vnum_130.getFunction() = func
and vpoints_130.getFunction() = func
and vscalars_130.getFunction() = func
and vctx_131.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
