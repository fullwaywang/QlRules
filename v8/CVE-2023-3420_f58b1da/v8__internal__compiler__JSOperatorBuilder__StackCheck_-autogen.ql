/**
 * @name v8-f58b1da35ee8ce5c7a4aebe270c9e00c09330f96-v8__internal__compiler__JSOperatorBuilder__StackCheck_
 * @id cpp/v8/f58b1da35ee8ce5c7a4aebe270c9e00c09330f96/v8internalcompilerjsoperatorbuilderstackcheck
 * @description v8-f58b1da35ee8ce5c7a4aebe270c9e00c09330f96-src/compiler/machine-operator.cc-v8__internal__compiler__JSOperatorBuilder__StackCheck_ CVE-2023-3420
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vkind_1403, FunctionCall target_3, Function func) {
exists(SwitchStmt target_0 |
	target_0.getExpr().(VariableAccess).getTarget()=vkind_1403
	and target_0.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("Properties")
	and target_0.getStmt().(BlockStmt).getStmt(3).(ExprStmt).getExpr().(AssignExpr).getRValue().(ConstructorCall).getArgument(0) instanceof EnumConstantAccess
	and target_0.getStmt().(BlockStmt).getStmt(6).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getType().hasName("Properties")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getFollowingStmt() instanceof ReturnStmt
	and target_0.getExpr().(VariableAccess).getLocation().isBefore(target_3.getArgument(9).(VariableAccess).getLocation()))
}

predicate func_3(Parameter vkind_1403, FunctionCall target_3) {
	target_3.getTarget().hasName("New")
	and target_3.getQualifier().(FunctionCall).getTarget().hasName("zone")
	and target_3.getQualifier().(FunctionCall).getQualifier().(ThisExpr).getType() instanceof PointerType
	and target_3.getArgument(1) instanceof EnumConstantAccess
	and target_3.getArgument(2).(StringLiteral).getValue()="JSStackCheck"
	and target_3.getArgument(3).(Literal).getValue()="0"
	and target_3.getArgument(4).(Literal).getValue()="1"
	and target_3.getArgument(5).(Literal).getValue()="1"
	and target_3.getArgument(6).(Literal).getValue()="0"
	and target_3.getArgument(7).(Literal).getValue()="1"
	and target_3.getArgument(8).(Literal).getValue()="2"
	and target_3.getArgument(9).(VariableAccess).getTarget()=vkind_1403
}

from Function func, Parameter vkind_1403, FunctionCall target_3
where
not func_0(vkind_1403, target_3, func)
and func_3(vkind_1403, target_3)
and vkind_1403.getType().hasName("StackCheckKind")
and vkind_1403.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
