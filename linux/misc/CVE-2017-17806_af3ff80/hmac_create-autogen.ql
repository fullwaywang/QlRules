/**
 * @name linux-af3ff8045bbf3e32f1a448542e73abb4c8ceb6f1-hmac_create
 * @id cpp/linux/af3ff8045bbf3e32f1a448542e73abb4c8ceb6f1/hmac-create
 * @description linux-af3ff8045bbf3e32f1a448542e73abb4c8ceb6f1-crypto/hmac.c-hmac_create CVE-2017-17806
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable valg_185, Variable vsalg_186, ExprStmt target_2, ExprStmt target_0) {
	target_0.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=valg_185
	and target_0.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="base"
	and target_0.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsalg_186
	and target_2.getLocation().isBefore(target_0.getLocation())
}

predicate func_1(Variable vsalg_186, ExprStmt target_2, ExprStmt target_3, Function func) {
exists(IfStmt target_1 |
	target_1.getCondition().(FunctionCall).getTarget().hasName("crypto_shash_alg_has_setkey")
	and target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vsalg_186
	and target_1.getThen().(GotoStmt).getName() ="out_put_alg"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
	and target_1.getLocation().isBefore(target_2.getLocation())
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getCondition().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_2(Variable vsalg_186, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="statesize"
	and target_2.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsalg_186
}

predicate func_3(Variable vsalg_186, ExprStmt target_3) {
	target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getTarget().getName()="digestsize"
	and target_3.getExpr().(AssignExpr).getRValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vsalg_186
}

from Function func, Variable valg_185, Variable vsalg_186, ExprStmt target_0, ExprStmt target_2, ExprStmt target_3
where
func_0(valg_185, vsalg_186, target_2, target_0)
and not func_1(vsalg_186, target_2, target_3, func)
and func_2(vsalg_186, target_2)
and func_3(vsalg_186, target_3)
and valg_185.getType().hasName("crypto_alg *")
and vsalg_186.getType().hasName("shash_alg *")
and valg_185.(LocalVariable).getFunction() = func
and vsalg_186.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
