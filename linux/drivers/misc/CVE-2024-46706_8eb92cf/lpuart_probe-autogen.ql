/**
 * @name linux-8eb92cfca6c2c5a15ab1773f3d18ab8d8f7dbb68-lpuart_probe
 * @id cpp/linux/8eb92cfca6c2c5a15ab1773f3d18ab8d8f7dbb68/lpuart-probe
 * @description linux-8eb92cfca6c2c5a15ab1773f3d18ab8d8f7dbb68-drivers/tty/serial/fsl_lpuart.c-lpuart_probe CVE-2024-46706
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vpdev_2841, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3, Function func) {
exists(ExprStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getExpr() |
		exists(AddressOfExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(PointerFieldAccess obj_2 | obj_2=obj_1.getOperand() |
				obj_2.getTarget().getName()="dev"
				and obj_2.getQualifier().(VariableAccess).getTarget()=vpdev_2841
			)
		)
		and obj_0.getTarget().hasName("pm_runtime_mark_last_busy")
	)
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_3.getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, ExprStmt target_1) {
	exists(AssignExpr obj_0 | obj_0=target_1.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("lpuart_global_reset")
			and obj_1.getArgument(0).(VariableAccess).getTarget().getType().hasName("lpuart_port *")
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Parameter vpdev_2841, AddressOfExpr target_2) {
	exists(PointerFieldAccess obj_0 | obj_0=target_2.getOperand() |
		obj_0.getTarget().getName()="dev"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpdev_2841
	)
	and target_2.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("pm_runtime_enable")
}

predicate func_3(Parameter vpdev_2841, AddressOfExpr target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getOperand() |
		obj_0.getTarget().getName()="dev"
		and obj_0.getQualifier().(VariableAccess).getTarget()=vpdev_2841
	)
	and exists(FunctionCall obj_1 | obj_1=target_3.getParent() |
		exists(AssignExpr obj_2 | obj_2=obj_1.getParent() |
			exists(FunctionCall obj_3 | obj_3=obj_2.getRValue() |
				exists(ValueFieldAccess obj_4 | obj_4=obj_3.getArgument(1) |
					exists(PointerFieldAccess obj_5 | obj_5=obj_4.getQualifier() |
						obj_5.getTarget().getName()="port"
						and obj_5.getQualifier().(VariableAccess).getTarget().getType().hasName("lpuart_port *")
					)
					and obj_4.getTarget().getName()="irq"
				)
				and obj_3.getTarget().hasName("devm_request_irq")
				and obj_3.getArgument(2).(VariableAccess).getTarget().getType().hasName("irq_handler_t")
				and obj_3.getArgument(3).(Literal).getValue()="0"
				and obj_3.getArgument(4).(StringLiteral).getValue()="fsl-lpuart"
				and obj_3.getArgument(5).(VariableAccess).getTarget().getType().hasName("lpuart_port *")
			)
		)
	)
}

from Function func, Parameter vpdev_2841, ExprStmt target_1, AddressOfExpr target_2, AddressOfExpr target_3
where
not func_0(vpdev_2841, target_1, target_2, target_3, func)
and func_1(func, target_1)
and func_2(vpdev_2841, target_2)
and func_3(vpdev_2841, target_3)
and vpdev_2841.getType().hasName("platform_device *")
and vpdev_2841.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
