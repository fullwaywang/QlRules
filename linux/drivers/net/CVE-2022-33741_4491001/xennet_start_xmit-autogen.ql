/**
 * @name linux-4491001c2e0fa69efbb748c96ec96b100a5cdb7e-xennet_start_xmit
 * @id cpp/linux/4491001c2e0fa69efbb748c96ec96b100a5cdb7e/xennet-start-xmit
 * @description linux-4491001c2e0fa69efbb748c96ec96b100a5cdb7e-drivers/net/xen-netfront.c-xennet_start_xmit CVE-2022-33741
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vskb_672, FunctionCall target_0) {
	target_0.getTarget().hasName("skb_copy")
	and not target_0.getTarget().hasName("bounce_skb")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vskb_672
	and target_0.getArgument(1).(BitwiseOrExpr).getValue()="2592"
	and target_0.getParent().(AssignExpr).getRValue() = target_0
	and target_0.getParent().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sk_buff *")
}

predicate func_1(Variable vnp_674, BlockStmt target_5, ExprStmt target_6) {
exists(LogicalOrExpr target_1 |
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="bounce"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnp_674
	and target_1.getRightOperand() instanceof FunctionCall
	and target_1.getParent().(IfStmt).getThen()=target_5
	and target_6.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_2(Variable voffset_681, BlockStmt target_5, FunctionCall target_2) {
	target_2.getTarget().hasName("__builtin_expect")
	and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(SubExpr).getLeftOperand().(BinaryBitwiseOperation).getValue()="4096"
	and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(SubExpr).getRightOperand().(VariableAccess).getTarget()=voffset_681
	and target_2.getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="14"
	and target_2.getArgument(1).(Literal).getValue()="0"
	and target_2.getParent().(IfStmt).getThen()=target_5
}

predicate func_3(Function func, BitwiseOrExpr target_3) {
	target_3.getValue()="544"
	and target_3.getParent().(BitwiseOrExpr).getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_3.getEnclosingFunction() = func
}

predicate func_5(Parameter vskb_672, BlockStmt target_5) {
	target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_5.getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue() instanceof FunctionCall
	and target_5.getStmt(1).(IfStmt).getCondition().(NotExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sk_buff *")
	and target_5.getStmt(1).(IfStmt).getThen().(GotoStmt).getName() ="drop"
	and target_5.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("dev_consume_skb_any")
	and target_5.getStmt(2).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vskb_672
}

predicate func_6(Variable vnp_674, ExprStmt target_6) {
	target_6.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("netfront_queue *")
	and target_6.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getTarget().getName()="queues"
	and target_6.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayBase().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vnp_674
	and target_6.getExpr().(AssignExpr).getRValue().(AddressOfExpr).getOperand().(ArrayExpr).getArrayOffset().(VariableAccess).getTarget().getType().hasName("u16")
}

from Function func, Variable vnp_674, Parameter vskb_672, Variable voffset_681, FunctionCall target_0, FunctionCall target_2, BitwiseOrExpr target_3, BlockStmt target_5, ExprStmt target_6
where
func_0(vskb_672, target_0)
and not func_1(vnp_674, target_5, target_6)
and func_2(voffset_681, target_5, target_2)
and func_3(func, target_3)
and func_5(vskb_672, target_5)
and func_6(vnp_674, target_6)
and vnp_674.getType().hasName("netfront_info *")
and vskb_672.getType().hasName("sk_buff *")
and voffset_681.getType().hasName("unsigned int")
and vnp_674.(LocalVariable).getFunction() = func
and vskb_672.getFunction() = func
and voffset_681.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
