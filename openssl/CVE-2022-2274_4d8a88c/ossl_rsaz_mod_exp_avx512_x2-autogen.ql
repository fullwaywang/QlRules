/**
 * @name openssl-4d8a88c134df634ba610ff8db1eb8478ac5fd345-ossl_rsaz_mod_exp_avx512_x2
 * @id cpp/openssl/4d8a88c134df634ba610ff8db1eb8478ac5fd345/ossl-rsaz-mod-exp-avx512-x2
 * @description openssl-4d8a88c134df634ba610ff8db1eb8478ac5fd345-crypto/bn/rsaz_exp_x2.c-ossl_rsaz_mod_exp_avx512_x2 CVE-2022-2274
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfactor_size_151, ExprStmt target_1, ExprStmt target_2, Function func) {
	exists(ExprStmt target_0 |
		target_0.getExpr().(AssignDivExpr).getLValue().(VariableAccess).getTarget()=vfactor_size_151
		and target_0.getExpr().(AssignDivExpr).getRValue().(MulExpr).getValue()="64"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
		and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignDivExpr).getLValue().(VariableAccess).getLocation())
		and target_0.getExpr().(AssignDivExpr).getLValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vfactor_size_151, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("from_words52")
		and target_1.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("unsigned long *")
		and target_1.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vfactor_size_151
		and target_1.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("unsigned long *")
}

predicate func_2(Parameter vfactor_size_151, ExprStmt target_2) {
		target_2.getExpr().(FunctionCall).getTarget().hasName("bn_reduce_once_in_place")
		and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("unsigned long *")
		and target_2.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
		and target_2.getExpr().(FunctionCall).getArgument(2).(VariableAccess).getTarget().getType().hasName("const unsigned long *")
		and target_2.getExpr().(FunctionCall).getArgument(3).(VariableAccess).getTarget().getType().hasName("unsigned long *")
		and target_2.getExpr().(FunctionCall).getArgument(4).(VariableAccess).getTarget()=vfactor_size_151
}

from Function func, Parameter vfactor_size_151, ExprStmt target_1, ExprStmt target_2
where
not func_0(vfactor_size_151, target_1, target_2, func)
and func_1(vfactor_size_151, target_1)
and func_2(vfactor_size_151, target_2)
and vfactor_size_151.getType().hasName("int")
and vfactor_size_151.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
