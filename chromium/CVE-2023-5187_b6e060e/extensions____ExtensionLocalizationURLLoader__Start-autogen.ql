/**
 * @name chromium-b6e060e17ed9e46b3043a3c369fc10cbbe2245d8-extensions____ExtensionLocalizationURLLoader__Start
 * @id cpp/chromium/b6e060e17ed9e46b3043a3c369fc10cbbe2245d8/extensionsextensionlocalizationurlloaderstart
 * @description chromium-b6e060e17ed9e46b3043a3c369fc10cbbe2245d8-extensions/renderer/extension_localization_throttle.cc-extensions____ExtensionLocalizationURLLoader__Start CVE-2023-5187
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func) {
exists(FunctionCall target_0 |
	exists(PointerFieldAccess obj_0 | obj_0=target_0.getQualifier() |
		obj_0.getTarget().getName()="producer_handle_"
		and obj_0.getQualifier() instanceof ThisExpr
	)
	and target_0.getTarget().hasName("operator=")
	and target_0.getArgument(0) instanceof FunctionCall
	and target_0.getEnclosingFunction() = func
)
}

predicate func_1(Parameter vproducer_handle_49, FunctionCall target_1) {
	target_1.getTarget().hasName("move")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vproducer_handle_49
	and target_1.getParent().(FunctionCall).getParent().(FunctionCall).getArgument(0) instanceof FunctionCall
}

predicate func_2(Function func, ThisExpr target_2) {
	target_2.getType() instanceof PointerType
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, FunctionCall target_3) {
	exists(PointerFieldAccess obj_0 | obj_0=target_3.getQualifier() |
		obj_0.getTarget().getName()="data_producer_"
		and obj_0.getQualifier() instanceof ThisExpr
	)
	and exists(FunctionCall obj_1 | obj_1=target_3.getArgument(0) |
		obj_1.getTarget().hasName("make_unique")
		and obj_1.getArgument(0) instanceof FunctionCall
	)
	and target_3.getTarget().hasName("operator=")
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vproducer_handle_49, FunctionCall target_1, ThisExpr target_2, FunctionCall target_3
where
not func_0(func)
and func_1(vproducer_handle_49, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and vproducer_handle_49.getType().hasName("ScopedDataPipeProducerHandle")
and vproducer_handle_49.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
