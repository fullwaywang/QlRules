/**
 * @name linux-326a89321f9d5fe399fe6f9ff7c0fc766582a6a0-mtk_wed_setup_tc_block
 * @id cpp/linux/326a89321f9d5fe399fe6f9ff7c0fc766582a6a0/mtk-wed-setup-tc-block
 * @description linux-326a89321f9d5fe399fe6f9ff7c0fc766582a6a0-drivers/net/ethernet/mediatek/mtk_wed.c-mtk_wed_setup_tc_block CVE-2024-44997
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vblock_cb_1782, NotExpr target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	exists(AssignExpr obj_0 | obj_0=target_0.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getLValue() |
			obj_1.getTarget().getName()="cb_priv"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vblock_cb_1782
		)
		and obj_0.getRValue().(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_2 | obj_2=target_0.getParent() |
		exists(IfStmt obj_3 | obj_3=obj_2.getParent() |
			obj_3.getThen().(BlockStmt).getStmt(3)=target_0
			and obj_3.getCondition()=target_1
		)
	)
	and target_2.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
)
}

predicate func_1(Variable vblock_cb_1782, NotExpr target_1) {
	exists(FunctionCall obj_0 | obj_0=target_1.getOperand() |
		obj_0.getTarget().hasName("flow_block_cb_decref")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vblock_cb_1782
	)
}

predicate func_2(Variable vblock_cb_1782, ExprStmt target_2) {
	exists(FunctionCall obj_0 | obj_0=target_2.getExpr() |
		exists(PointerFieldAccess obj_1 | obj_1=obj_0.getArgument(0) |
			obj_1.getTarget().getName()="cb_priv"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vblock_cb_1782
		)
		and obj_0.getTarget().hasName("kfree")
	)
}

from Function func, Variable vblock_cb_1782, NotExpr target_1, ExprStmt target_2
where
not func_0(vblock_cb_1782, target_1, target_2)
and func_1(vblock_cb_1782, target_1)
and func_2(vblock_cb_1782, target_2)
and vblock_cb_1782.getType().hasName("flow_block_cb *")
and vblock_cb_1782.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
