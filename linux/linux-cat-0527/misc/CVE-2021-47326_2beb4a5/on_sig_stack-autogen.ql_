/**
 * @name linux-2beb4a53fc3f1081cedc1c1a198c7f56cc4fc60c-on_sig_stack
 * @id cpp/linux/2beb4a53fc3f1081cedc1c1a198c7f56cc4fc60c/on-sig-stack
 * @description linux-2beb4a53fc3f1081cedc1c1a198c7f56cc4fc60c-include/linux/sched/signal.h-on_sig_stack CVE-2021-47326
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vsp_543, LogicalAndExpr target_2) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("__on_sig_stack")
	and target_0.getArgument(0).(VariableAccess).getTarget()=vsp_543
	and target_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_2.getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getLocation()))
}

predicate func_1(Parameter vsp_543, VariableAccess target_1) {
	target_1.getTarget()=vsp_543
}

predicate func_2(Parameter vsp_543, LogicalAndExpr target_2) {
	target_2.getLeftOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget()=vsp_543
	and target_2.getLeftOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getTarget().getName()="sas_ss_sp"
	and target_2.getLeftOperand().(RelationalOperation).getLesserOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_2.getRightOperand().(RelationalOperation).getLesserOperand().(SubExpr).getLeftOperand().(VariableAccess).getTarget()=vsp_543
	and target_2.getRightOperand().(RelationalOperation).getLesserOperand().(SubExpr).getRightOperand().(PointerFieldAccess).getTarget().getName()="sas_ss_sp"
	and target_2.getRightOperand().(RelationalOperation).getLesserOperand().(SubExpr).getRightOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
	and target_2.getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getTarget().getName()="sas_ss_size"
	and target_2.getRightOperand().(RelationalOperation).getGreaterOperand().(PointerFieldAccess).getQualifier().(FunctionCall).getTarget().hasName("get_current")
}

from Function func, Parameter vsp_543, VariableAccess target_1, LogicalAndExpr target_2
where
not func_0(vsp_543, target_2)
and func_1(vsp_543, target_1)
and func_2(vsp_543, target_2)
and vsp_543.getType().hasName("unsigned long")
and vsp_543.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
