/**
 * @name linux-ec81aecb29668ad71f699f4e7b96ec46691895b6-hfs_fill_super
 * @id cpp/linux/ec81aecb29668ad71f699f4e7b96ec46691895b6/hfs-fill-super
 * @description linux-ec81aecb29668ad71f699f4e7b96ec46691895b6-fs/hfs/super.c-hfs_fill_super CVE-2009-4020
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vfd_379, Variable vres_382, NotExpr target_2, AddressOfExpr target_3, ValueFieldAccess target_4, IfStmt target_5) {
	exists(IfStmt target_0 |
		target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getTarget().getName()="entrylength"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfd_379
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(SizeofExprOperator).getValue()="102"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getTarget().getName()="entrylength"
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getLesserOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfd_379
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="0"
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vres_382
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-5"
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
		and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_2
		and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_0.getCondition().(LogicalOrExpr).getAnOperand().(RelationalOperation).getGreaterOperand().(ValueFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getQualifier().(VariableAccess).getLocation())
		and target_0.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_5.getCondition().(VariableAccess).getLocation()))
}

predicate func_1(Variable vfd_379, Variable vrec_380, NotExpr target_2, ExprStmt target_1) {
		target_1.getExpr().(FunctionCall).getTarget().hasName("hfs_bnode_read")
		and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getTarget().getName()="bnode"
		and target_1.getExpr().(FunctionCall).getArgument(0).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfd_379
		and target_1.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vrec_380
		and target_1.getExpr().(FunctionCall).getArgument(2).(ValueFieldAccess).getTarget().getName()="entryoffset"
		and target_1.getExpr().(FunctionCall).getArgument(2).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfd_379
		and target_1.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getTarget().getName()="entrylength"
		and target_1.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(VariableAccess).getTarget()=vfd_379
		and target_1.getParent().(IfStmt).getCondition()=target_2
}

predicate func_2(Variable vres_382, NotExpr target_2) {
		target_2.getOperand().(VariableAccess).getTarget()=vres_382
}

predicate func_3(Variable vfd_379, AddressOfExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget()=vfd_379
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("hfs_cat_find_brec")
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("super_block *")
		and target_3.getParent().(FunctionCall).getParent().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="2"
}

predicate func_4(Variable vfd_379, ValueFieldAccess target_4) {
		target_4.getTarget().getName()="bnode"
		and target_4.getQualifier().(VariableAccess).getTarget()=vfd_379
}

predicate func_5(Variable vfd_379, Variable vres_382, IfStmt target_5) {
		target_5.getCondition().(VariableAccess).getTarget()=vres_382
		and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("hfs_find_exit")
		and target_5.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vfd_379
}

from Function func, Variable vfd_379, Variable vrec_380, Variable vres_382, ExprStmt target_1, NotExpr target_2, AddressOfExpr target_3, ValueFieldAccess target_4, IfStmt target_5
where
not func_0(vfd_379, vres_382, target_2, target_3, target_4, target_5)
and func_1(vfd_379, vrec_380, target_2, target_1)
and func_2(vres_382, target_2)
and func_3(vfd_379, target_3)
and func_4(vfd_379, target_4)
and func_5(vfd_379, vres_382, target_5)
and vfd_379.getType().hasName("hfs_find_data")
and vrec_380.getType().hasName("hfs_cat_rec")
and vres_382.getType().hasName("int")
and vfd_379.(LocalVariable).getFunction() = func
and vrec_380.(LocalVariable).getFunction() = func
and vres_382.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
