/**
 * @name linux-6619aa48a011364e9f29083cc76368e6acfe5b11-cs_dsp_parse_coeff
 * @id cpp/linux/6619aa48a011364e9f29083cc76368e6acfe5b11/cs-dsp-parse-coeff
 * @description linux-6619aa48a011364e9f29083cc76368e6acfe5b11-drivers/firmware/cirrus/cs_dsp.c-cs_dsp_parse_coeff CVE-2024-41038
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_1(Parameter vregion_1152, Parameter vdsp_1151) {
exists(AssignExpr target_1 |
	exists(FunctionCall obj_0 | obj_0=target_1.getRValue() |
		obj_0.getTarget().hasName("cs_dsp_coeff_parse_alg")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdsp_1151
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vregion_1152
		and obj_0.getArgument(2) instanceof AddressOfExpr
	)
	and target_1.getLValue().(VariableAccess).getType().hasName("int")
)
}

predicate func_2(ExprStmt target_17, Function func) {
exists(IfStmt target_2 |
	exists(RelationalOperation obj_0 | obj_0=target_2.getCondition() |
		obj_0.getLesserOperand().(VariableAccess).getType().hasName("int")
		and obj_0.getGreaterOperand().(Literal).getValue()="0"
	)
	and target_2.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
	and target_2.getLocation().isBefore(target_17.getLocation())
)
}

predicate func_3(Parameter vregion_1152, Parameter vdsp_1151, ExprStmt target_18) {
exists(AssignExpr target_3 |
	exists(FunctionCall obj_0 | obj_0=target_3.getRValue() |
		obj_0.getTarget().hasName("cs_dsp_coeff_parse_coeff")
		and obj_0.getArgument(0).(VariableAccess).getTarget()=vdsp_1151
		and obj_0.getArgument(1).(VariableAccess).getTarget()=vregion_1152
		and obj_0.getArgument(2).(VariableAccess).getType().hasName("int")
		and obj_0.getArgument(3) instanceof AddressOfExpr
		and obj_0.getArgument(0).(VariableAccess).getLocation().isBefore(target_18.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getLocation())
	)
	and target_3.getLValue().(VariableAccess).getType().hasName("int")
)
}

predicate func_4(BlockStmt target_19, Function func) {
exists(IfStmt target_4 |
	exists(RelationalOperation obj_0 | obj_0=target_4.getCondition() |
		obj_0.getLesserOperand().(VariableAccess).getType().hasName("int")
		and obj_0.getGreaterOperand().(Literal).getValue()="0"
	)
	and target_4.getThen().(ReturnStmt).getExpr().(VariableAccess).getType().hasName("int")
	and target_4.getLocation().isBefore(target_19.getLocation())
	and target_4.getEnclosingFunction() = func
)
}

predicate func_5(Variable valg_blk_1155, AddressOfExpr target_5) {
	target_5.getOperand().(VariableAccess).getTarget()=valg_blk_1155
	and target_5.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_6(Variable vcoeff_blk_1156, AddressOfExpr target_6) {
	target_6.getOperand().(VariableAccess).getTarget()=vcoeff_blk_1156
	and target_6.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_8(Parameter vdsp_1151, VariableAccess target_8) {
	target_8.getTarget()=vdsp_1151
	and target_8.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_9(Parameter vdsp_1151, VariableAccess target_9) {
	target_9.getTarget()=vdsp_1151
	and target_9.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_10(Parameter vregion_1152, VariableAccess target_10) {
	target_10.getTarget()=vregion_1152
}

predicate func_13(Function func, DeclStmt target_13) {
	func.getEntryPoint().(BlockStmt).getAStmt()=target_13
}

predicate func_14(Variable vdata_1157, Parameter vdsp_1151, FunctionCall target_14) {
	target_14.getTarget().hasName("cs_dsp_coeff_parse_alg")
	and target_14.getArgument(0).(VariableAccess).getTarget()=vdsp_1151
	and target_14.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdata_1157
	and target_14.getArgument(2) instanceof AddressOfExpr
}

predicate func_15(Variable vdata_1157, Parameter vdsp_1151, FunctionCall target_15) {
	target_15.getTarget().hasName("cs_dsp_coeff_parse_coeff")
	and target_15.getArgument(0).(VariableAccess).getTarget()=vdsp_1151
	and target_15.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vdata_1157
	and target_15.getArgument(2) instanceof AddressOfExpr
}

predicate func_17(Function func, ExprStmt target_17) {
	target_17.getExpr() instanceof FunctionCall
	and target_17.getEnclosingFunction() = func
}

predicate func_18(Variable vcoeff_blk_1156, Parameter vdsp_1151, ExprStmt target_18) {
	exists(AssignExpr obj_0 | obj_0=target_18.getExpr() |
		exists(FunctionCall obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getTarget().hasName("cs_dsp_check_coeff_flags")
			and obj_1.getArgument(0).(VariableAccess).getTarget()=vdsp_1151
			and obj_1.getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vcoeff_blk_1156
			and obj_1.getArgument(2).(BitwiseOrExpr).getValue()="7"
			and obj_1.getArgument(3).(Literal).getValue()="0"
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("int")
	)
}

predicate func_19(Variable vcoeff_blk_1156, BlockStmt target_19) {
	exists(SwitchStmt obj_0 | obj_0=target_19.getStmt(0) |
		exists(ValueFieldAccess obj_1 | obj_1=obj_0.getExpr() |
			obj_1.getTarget().getName()="ctl_type"
			and obj_1.getQualifier().(VariableAccess).getTarget()=vcoeff_blk_1156
		)
		and exists(BlockStmt obj_2 | obj_2=obj_0.getStmt() |
			exists(IfStmt obj_3 | obj_3=obj_2.getStmt(3) |
				exists(BitwiseAndExpr obj_4 | obj_4=obj_3.getCondition() |
					exists(ValueFieldAccess obj_5 | obj_5=obj_4.getLeftOperand() |
						obj_5.getTarget().getName()="flags"
						and obj_5.getQualifier().(VariableAccess).getTarget()=vcoeff_blk_1156
					)
					and obj_4.getRightOperand().(Literal).getValue()="32768"
				)
			)
			and obj_2.getStmt(0).(SwitchCase).getExpr().(Literal).getValue()="4"
			and obj_2.getStmt(2).(SwitchCase).getExpr().(Literal).getValue()="4096"
		)
	)
}

from Function func, Parameter vregion_1152, Variable valg_blk_1155, Variable vcoeff_blk_1156, Variable vdata_1157, Parameter vdsp_1151, AddressOfExpr target_5, AddressOfExpr target_6, VariableAccess target_8, VariableAccess target_9, VariableAccess target_10, DeclStmt target_13, FunctionCall target_14, FunctionCall target_15, ExprStmt target_17, ExprStmt target_18, BlockStmt target_19
where
not func_1(vregion_1152, vdsp_1151)
and not func_2(target_17, func)
and not func_3(vregion_1152, vdsp_1151, target_18)
and not func_4(target_19, func)
and func_5(valg_blk_1155, target_5)
and func_6(vcoeff_blk_1156, target_6)
and func_8(vdsp_1151, target_8)
and func_9(vdsp_1151, target_9)
and func_10(vregion_1152, target_10)
and func_13(func, target_13)
and func_14(vdata_1157, vdsp_1151, target_14)
and func_15(vdata_1157, vdsp_1151, target_15)
and func_17(func, target_17)
and func_18(vcoeff_blk_1156, vdsp_1151, target_18)
and func_19(vcoeff_blk_1156, target_19)
and vregion_1152.getType().hasName("const wmfw_region *")
and valg_blk_1155.getType().hasName("cs_dsp_coeff_parsed_alg")
and vcoeff_blk_1156.getType().hasName("cs_dsp_coeff_parsed_coeff")
and vdata_1157.getType().hasName("const u8 *")
and vdsp_1151.getType().hasName("cs_dsp *")
and vregion_1152.getFunction() = func
and valg_blk_1155.(LocalVariable).getFunction() = func
and vcoeff_blk_1156.(LocalVariable).getFunction() = func
and vdata_1157.(LocalVariable).getFunction() = func
and vdsp_1151.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
