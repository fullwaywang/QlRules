commit 4970e48f83dbd21d2a6a7cdaaafc2a71f7f45dc4
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Jun 20 22:27:47 2024 +0300

    bluetooth/hci: disallow setting handle bigger than HCI_CONN_HANDLE_MAX
    
    [ Upstream commit 1cc18c2ab2e8c54c355ea7c0423a636e415a0c23 ]
    
    Syzbot hit warning in hci_conn_del() caused by freeing handle that was
    not allocated using ida allocator.
    
    This is caused by handle bigger than HCI_CONN_HANDLE_MAX passed by
    hci_le_big_sync_established_evt(), which makes code think it's unset
    connection.
    
    Add same check for handle upper bound as in hci_conn_set_handle() to
    prevent warning.
    
    Link: https://syzkaller.appspot.com/bug?extid=b2545b087a01a7319474
    Reported-by: syzbot+b2545b087a01a7319474@syzkaller.appspotmail.com
    Fixes: 181a42edddf5 ("Bluetooth: Make handle of hci_conn be unique")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/net/bluetooth/hci_conn.c b/net/bluetooth/hci_conn.c
index 163b56a68bb0..9c670348fac4 100644
--- a/net/bluetooth/hci_conn.c
+++ b/net/bluetooth/hci_conn.c
@@ -935,8 +935,8 @@ static int hci_conn_hash_alloc_unset(struct hci_dev *hdev)
 			       U16_MAX, GFP_ATOMIC);
 }
 
-struct hci_conn *hci_conn_add(struct hci_dev *hdev, int type, bdaddr_t *dst,
-			      u8 role, u16 handle)
+static struct hci_conn *__hci_conn_add(struct hci_dev *hdev, int type, bdaddr_t *dst,
+				       u8 role, u16 handle)
 {
 	struct hci_conn *conn;
 
@@ -1077,7 +1077,16 @@ struct hci_conn *hci_conn_add_unset(struct hci_dev *hdev, int type,
 	if (unlikely(handle < 0))
 		return ERR_PTR(-ECONNREFUSED);
 
-	return hci_conn_add(hdev, type, dst, role, handle);
+	return __hci_conn_add(hdev, type, dst, role, handle);
+}
+
+struct hci_conn *hci_conn_add(struct hci_dev *hdev, int type, bdaddr_t *dst,
+			      u8 role, u16 handle)
+{
+	if (handle > HCI_CONN_HANDLE_MAX)
+		return ERR_PTR(-EINVAL);
+
+	return __hci_conn_add(hdev, type, dst, role, handle);
 }
 
 static void hci_conn_cleanup_child(struct hci_conn *conn, u8 reason)
