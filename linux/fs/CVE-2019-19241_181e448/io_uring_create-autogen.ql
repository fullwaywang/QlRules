/**
 * @name linux-181e448d8709e517c9c7b523fcd209f24eb38ca7-io_uring_create
 * @id cpp/linux/181e448d8709e517c9c7b523fcd209f24eb38ca7/io-uring-create
 * @description linux-181e448d8709e517c9c7b523fcd209f24eb38ca7-fs/io_uring.c-io_uring_create CVE-2019-19241
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vctx_4666, ExprStmt target_1, ExprStmt target_2, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="creds"
	and target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_4666
	and target_0.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("prepare_creds")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_0.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vctx_4666, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("io_allocate_scq_urings")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vctx_4666
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType().hasName("io_uring_params *")
}

predicate func_2(Variable vctx_4666, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="user"
	and target_2.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vctx_4666
	and target_2.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget().getType().hasName("user_struct *")
}

from Function func, Variable vctx_4666, ExprStmt target_1, ExprStmt target_2
where
not func_0(vctx_4666, target_1, target_2, func)
and func_1(vctx_4666, target_1)
and func_2(vctx_4666, target_2)
and vctx_4666.getType().hasName("io_ring_ctx *")
and vctx_4666.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
