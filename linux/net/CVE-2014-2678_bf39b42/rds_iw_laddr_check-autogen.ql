/**
 * @name linux-bf39b4247b8799935ea91d90db250ab608a58e50-rds_iw_laddr_check
 * @id cpp/linux/bf39b4247b8799935ea91d90db250ab608a58e50/rds-iw-laddr-check
 * @description linux-bf39b4247b8799935ea91d90db250ab608a58e50-net/rds/iw.c-rds_iw_laddr_check CVE-2014-2678
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vret_223, Variable vcm_id_224, ExprStmt target_2, ExprStmt target_3, LogicalOrExpr target_4) {
	exists(LogicalOrExpr target_0 |
		target_0.getAnOperand().(VariableAccess).getTarget()=vret_223
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getTarget().getName()="device"
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcm_id_224
		and target_0.getParent().(LogicalOrExpr).getAnOperand().(VariableAccess).getTarget()=vret_223
		and target_0.getParent().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="node_type"
		and target_0.getParent().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="device"
		and target_0.getParent().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcm_id_224
		and target_0.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_2
		and target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getAnOperand().(VariableAccess).getLocation())
		and target_0.getAnOperand().(NotExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation()))
}

predicate func_1(Variable vret_223, Variable vcm_id_224, ExprStmt target_2, VariableAccess target_1) {
		target_1.getTarget()=vret_223
		and target_1.getParent().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="node_type"
		and target_1.getParent().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="device"
		and target_1.getParent().(LogicalOrExpr).getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcm_id_224
		and target_1.getParent().(LogicalOrExpr).getParent().(IfStmt).getThen()=target_2
}

predicate func_2(Variable vret_223, ExprStmt target_2) {
		target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_223
		and target_2.getExpr().(AssignExpr).getRValue().(UnaryMinusExpr).getValue()="-99"
}

predicate func_3(Variable vret_223, Variable vcm_id_224, ExprStmt target_3) {
		target_3.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vret_223
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("rdma_bind_addr")
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vcm_id_224
		and target_3.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("sockaddr_in")
}

predicate func_4(Variable vret_223, Variable vcm_id_224, LogicalOrExpr target_4) {
		target_4.getAnOperand().(VariableAccess).getTarget()=vret_223
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getTarget().getName()="node_type"
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="device"
		and target_4.getAnOperand().(EqualityOperation).getAnOperand().(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vcm_id_224
}

from Function func, Variable vret_223, Variable vcm_id_224, VariableAccess target_1, ExprStmt target_2, ExprStmt target_3, LogicalOrExpr target_4
where
not func_0(vret_223, vcm_id_224, target_2, target_3, target_4)
and func_1(vret_223, vcm_id_224, target_2, target_1)
and func_2(vret_223, target_2)
and func_3(vret_223, vcm_id_224, target_3)
and func_4(vret_223, vcm_id_224, target_4)
and vret_223.getType().hasName("int")
and vcm_id_224.getType().hasName("rdma_cm_id *")
and vret_223.(LocalVariable).getFunction() = func
and vcm_id_224.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
