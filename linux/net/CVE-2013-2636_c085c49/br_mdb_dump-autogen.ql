/**
 * @name linux-c085c49920b2f900ba716b4ca1c1a55ece9872cc-br_mdb_dump
 * @id cpp/linux/c085c49920b2f900ba716b4ca1c1a55ece9872cc/br-mdb-dump
 * @description linux-c085c49920b2f900ba716b4ca1c1a55ece9872cc-net/bridge/br_mdb.c-br_mdb_dump CVE-2013-2636
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vbpm_127, BitwiseAndExpr target_1, ExprStmt target_2) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("memset")
	and target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbpm_127
	and target_0.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_0.getExpr().(FunctionCall).getArgument(2).(SizeofExprOperator).getValue()="8"
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(5)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Function func, BitwiseAndExpr target_1) {
	target_1.getLeftOperand().(PointerFieldAccess).getTarget().getName()="priv_flags"
	and target_1.getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
	and target_1.getRightOperand().(Literal).getValue()="2"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vbpm_127, ExprStmt target_2) {
	target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget()=vbpm_127
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("nlmsg_data")
	and target_2.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("nlmsghdr *")
}

from Function func, Variable vbpm_127, BitwiseAndExpr target_1, ExprStmt target_2
where
not func_0(vbpm_127, target_1, target_2)
and func_1(func, target_1)
and func_2(vbpm_127, target_2)
and vbpm_127.getType().hasName("br_port_msg *")
and vbpm_127.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
