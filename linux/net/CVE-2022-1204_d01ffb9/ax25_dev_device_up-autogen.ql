/**
 * @name linux-d01ffb9eee4af165d83b08dd73ebdf9fe94a519b-ax25_dev_device_up
 * @id cpp/linux/d01ffb9eee4af165d83b08dd73ebdf9fe94a519b/ax25-dev-device-up
 * @description linux-d01ffb9eee4af165d83b08dd73ebdf9fe94a519b-ax25_dev_device_up CVE-2022-1204
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, SizeofExprOperator target_0) {
		target_0.getValue()="200"
		and target_0.getEnclosingFunction() = func
}

predicate func_1(Variable vax25_dev_52, PointerDereferenceExpr target_3, ExprStmt target_4, Function func) {
	exists(ExprStmt target_1 |
		target_1.getExpr().(FunctionCall).getTarget().hasName("refcount_set")
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="refcount"
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_52
		and target_1.getExpr().(FunctionCall).getArgument(1).(Literal).getValue()="1"
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_1
		and target_3.getOperand().(VariableAccess).getLocation().isBefore(target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_1.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation()))
}

predicate func_2(Variable vax25_dev_52, ExprStmt target_5, ExprStmt target_6, Function func) {
	exists(ExprStmt target_2 |
		target_2.getExpr().(FunctionCall).getTarget().hasName("refcount_inc")
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="refcount"
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vax25_dev_52
		and func.getEntryPoint().(BlockStmt).getAStmt()=target_2
		and target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
		and target_2.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_3(Variable vax25_dev_52, PointerDereferenceExpr target_3) {
		target_3.getOperand().(VariableAccess).getTarget()=vax25_dev_52
}

predicate func_4(Variable vax25_dev_52, ExprStmt target_4) {
		target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getTarget().getName()="ax25_ptr"
		and target_4.getExpr().(AssignExpr).getLValue().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("net_device *")
		and target_4.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vax25_dev_52
}

predicate func_5(Variable vax25_dev_52, ExprStmt target_5) {
		target_5.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("ax25_dev *")
		and target_5.getExpr().(AssignExpr).getRValue().(VariableAccess).getTarget()=vax25_dev_52
}

predicate func_6(Variable vax25_dev_52, ExprStmt target_6) {
		target_6.getExpr().(FunctionCall).getTarget().hasName("ax25_register_dev_sysctl")
		and target_6.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vax25_dev_52
}

from Function func, Variable vax25_dev_52, SizeofExprOperator target_0, PointerDereferenceExpr target_3, ExprStmt target_4, ExprStmt target_5, ExprStmt target_6
where
func_0(func, target_0)
and not func_1(vax25_dev_52, target_3, target_4, func)
and not func_2(vax25_dev_52, target_5, target_6, func)
and func_3(vax25_dev_52, target_3)
and func_4(vax25_dev_52, target_4)
and func_5(vax25_dev_52, target_5)
and func_6(vax25_dev_52, target_6)
and vax25_dev_52.getType().hasName("ax25_dev *")
and vax25_dev_52.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
