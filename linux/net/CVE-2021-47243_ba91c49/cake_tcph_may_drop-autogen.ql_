/**
 * @name linux-ba91c49dedbde758ba0b72f57ac90b06ddf8e548-cake_tcph_may_drop
 * @id cpp/linux/ba91c49dedbde758ba0b72f57ac90b06ddf8e548/cake-tcph-may-drop
 * @description linux-ba91c49dedbde758ba0b72f57ac90b06ddf8e548-net/sched/sch_cake.c-cake_tcph_may_drop CVE-2021-47243
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vlength_1081, ExprStmt target_1, ExprStmt target_2, LogicalOrExpr target_3) {
exists(IfStmt target_0 |
	target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlength_1081
	and target_0.getCondition().(RelationalOperation).getGreaterOperand().(Literal).getValue()="2"
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_2.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getLocation().isBefore(target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_3.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(PointerDereferenceExpr).getOperand().(PostfixIncrExpr).getOperand().(VariableAccess).getTarget().getType().hasName("const u8 *")
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vlength_1081, ExprStmt target_2) {
	target_2.getExpr().(PostfixDecrExpr).getOperand().(VariableAccess).getTarget()=vlength_1081
}

predicate func_3(Variable vlength_1081, LogicalOrExpr target_3) {
	target_3.getLeftOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getLeftOperand().(RelationalOperation).getGreaterOperand().(Literal).getValue()="2"
	and target_3.getRightOperand().(RelationalOperation).getGreaterOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_3.getRightOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getTarget()=vlength_1081
}

from Function func, Variable vlength_1081, ExprStmt target_1, ExprStmt target_2, LogicalOrExpr target_3
where
not func_0(vlength_1081, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vlength_1081, target_2)
and func_3(vlength_1081, target_3)
and vlength_1081.getType().hasName("int")
and vlength_1081.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
