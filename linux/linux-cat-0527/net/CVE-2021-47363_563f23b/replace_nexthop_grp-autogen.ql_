/**
 * @name linux-563f23b002534176f49524b5ca0e1d94d8906c40-replace_nexthop_grp
 * @id cpp/linux/563f23b002534176f49524b5ca0e1d94d8906c40/replace-nexthop-grp
 * @description linux-563f23b002534176f49524b5ca0e1d94d8906c40-net/ipv4/nexthop.c-replace_nexthop_grp CVE-2021-47363
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(PointerFieldAccess target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("synchronize_net")
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(0)=target_0
	and target_0.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_1
	and target_0.getEnclosingFunction() = func)
}

predicate func_1(Function func, PointerFieldAccess target_1) {
	target_1.getTarget().getName()="resilient"
	and target_1.getQualifier().(VariableAccess).getTarget().getType().hasName("nh_group *")
	and target_1.getEnclosingFunction() = func
}

from Function func, PointerFieldAccess target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
