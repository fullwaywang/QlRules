/**
 * @name v8-e98baa3526426c0219bb0474028ca301b8bd0677-v8__internal__JSObject__CreateDataProperty
 * @id cpp/v8/e98baa3526426c0219bb0474028ca301b8bd0677/v8internaljsobjectcreatedataproperty
 * @description v8-e98baa3526426c0219bb0474028ca301b8bd0677-src/objects/js-objects.cc-v8__internal__JSObject__CreateDataProperty CVE-2023-2936
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vvalue_4143, Parameter vshould_throw_4144, Variable visolate_4147, Parameter vit_4142, FunctionCall target_0) {
	target_0.getTarget().hasName("CheckIfCanDefine")
	and not target_0.getTarget().hasName("CheckIfCanDefineAsConfigurable")
	and target_0.getArgument(0).(VariableAccess).getTarget()=visolate_4147
	and target_0.getArgument(1).(VariableAccess).getTarget()=vit_4142
	and target_0.getArgument(2).(VariableAccess).getTarget()=vvalue_4143
	and target_0.getArgument(3).(VariableAccess).getTarget()=vshould_throw_4144
}

predicate func_1(Function func, StringLiteral target_1) {
	target_1.getValue()="(it->isolate())->has_pending_exception()"
	and not target_1.getValue()="(isolate)->has_pending_exception()"
	and target_1.getEnclosingFunction() = func
}

predicate func_3(Parameter vvalue_4143, Parameter vit_4142, BlockStmt target_10, FunctionCall target_3) {
	target_3.getTarget().hasName("is_null")
	and target_3.getQualifier().(FunctionCall).getTarget().hasName("DefineOwnPropertyIgnoreAttributes")
	and target_3.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vit_4142
	and target_3.getQualifier().(FunctionCall).getArgument(1).(VariableAccess).getTarget()=vvalue_4143
	and target_3.getParent().(IfStmt).getThen()=target_10
}

predicate func_5(Parameter vit_4142, Function func, DoStmt target_5) {
	target_5.getCondition() instanceof Literal
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getTarget().hasName("IsNothing")
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("GetPropertyAttributes")
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getCondition().(FunctionCall).getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vit_4142
	and target_5.getStmt().(BlockStmt).getStmt(0).(IfStmt).getThen().(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("Nothing")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_5
}

/*predicate func_6(Parameter vit_4142, ReturnStmt target_7, FunctionCall target_6) {
	target_6.getTarget().hasName("IsNothing")
	and target_6.getQualifier().(FunctionCall).getTarget().hasName("GetPropertyAttributes")
	and target_6.getQualifier().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vit_4142
	and target_6.getParent().(IfStmt).getThen()=target_7
}

*/
/*predicate func_7(FunctionCall target_6, Function func, ReturnStmt target_7) {
	target_7.getExpr().(FunctionCall).getTarget().hasName("Nothing")
	and target_7.getParent().(IfStmt).getCondition()=target_6
	and target_7.getEnclosingFunction() = func
}

*/
predicate func_8(Function func, IfStmt target_8) {
	target_8.getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_8.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("has_pending_exception")
	and target_8.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(NotExpr).getOperand().(FunctionCall).getQualifier().(FunctionCall).getTarget().hasName("isolate")
	and target_8.getCondition().(FunctionCall).getArgument(1) instanceof Literal
	and target_8.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("V8_Dcheck")
	and target_8.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0) instanceof StringLiteral
	and target_8.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(1) instanceof Literal
	and target_8.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(2) instanceof StringLiteral
	and target_8.getEnclosingFunction() = func
}

/*predicate func_9(Parameter vit_4142, FunctionCall target_9) {
	target_9.getTarget().hasName("isolate")
	and target_9.getQualifier().(VariableAccess).getTarget()=vit_4142
	and target_9.getParent().(FunctionCall).getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getTarget().hasName("__builtin_expect")
	and target_9.getParent().(FunctionCall).getParent().(NotExpr).getParent().(NotExpr).getParent().(NotExpr).getParent().(FunctionCall).getParent().(IfStmt).getCondition().(FunctionCall).getArgument(1) instanceof Literal
}

*/
predicate func_10(Function func, BlockStmt target_10) {
	target_10.getStmt(0).(DoStmt).getCondition() instanceof Literal
	and target_10.getStmt(0).(DoStmt).getStmt() instanceof BlockStmt
	and target_10.getStmt(1).(ReturnStmt).getExpr().(FunctionCall).getTarget().hasName("Nothing")
	and target_10.getEnclosingFunction() = func
}

from Function func, Parameter vvalue_4143, Parameter vshould_throw_4144, Variable visolate_4147, Parameter vit_4142, FunctionCall target_0, StringLiteral target_1, FunctionCall target_3, DoStmt target_5, IfStmt target_8, BlockStmt target_10
where
func_0(vvalue_4143, vshould_throw_4144, visolate_4147, vit_4142, target_0)
and func_1(func, target_1)
and func_3(vvalue_4143, vit_4142, target_10, target_3)
and func_5(vit_4142, func, target_5)
and func_8(func, target_8)
and func_10(func, target_10)
and vvalue_4143.getType().hasName("Handle<Object>")
and vshould_throw_4144.getType().hasName("Maybe<ShouldThrow>")
and visolate_4147.getType().hasName("Isolate *")
and vit_4142.getType().hasName("LookupIterator *")
and vvalue_4143.getFunction() = func
and vshould_throw_4144.getFunction() = func
and visolate_4147.(LocalVariable).getFunction() = func
and vit_4142.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
