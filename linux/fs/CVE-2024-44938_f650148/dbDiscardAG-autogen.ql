/**
 * @name linux-f650148b43949ca9e37e820804bb6026fff404f3-dbDiscardAG
 * @id cpp/linux/f650148b43949ca9e37e820804bb6026fff404f3/dbdiscardag
 * @description linux-f650148b43949ca9e37e820804bb6026fff404f3-fs/jfs/jfs_dmap.c-dbDiscardAG CVE-2024-44938
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vl2nb_1582, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3) {
exists(IfStmt target_0 |
	exists(FunctionCall obj_0 | obj_0=target_0.getCondition() |
		exists(NotExpr obj_1 | obj_1=obj_0.getArgument(0) |
			exists(NotExpr obj_2 | obj_2=obj_1.getOperand() |
				exists(RelationalOperation obj_3 | obj_3=obj_2.getOperand() |
					obj_3.getLesserOperand().(VariableAccess).getTarget()=vl2nb_1582
					and obj_3.getGreaterOperand().(Literal).getValue()="0"
				)
			)
		)
		and obj_0.getTarget().hasName("__builtin_expect")
		and obj_0.getArgument(1).(Literal).getValue()="0"
	)
	and exists(BlockStmt obj_4 | obj_4=target_0.getParent() |
		exists(IfStmt obj_5 | obj_5=obj_4.getParent() |
			obj_5.getThen().(BlockStmt).getStmt(1)=target_0
			and obj_5.getCondition()=target_1
		)
	)
	and target_2.getExpr().(AssignExpr).getLValue().(VariableAccess).getLocation().isBefore(target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation())
	and target_0.getCondition().(FunctionCall).getArgument(0).(NotExpr).getOperand().(NotExpr).getOperand().(RelationalOperation).getLesserOperand().(VariableAccess).getLocation().isBefore(target_3.getExpr().(AssignExpr).getRValue().(BinaryBitwiseOperation).getRightOperand().(VariableAccess).getLocation())
)
}

predicate func_1(Function func, EqualityOperation target_1) {
	target_1.getLeftOperand().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getRightOperand().(UnaryMinusExpr).getValue()="-28"
	and target_1.getEnclosingFunction() = func
}

predicate func_2(Variable vl2nb_1582, ExprStmt target_2) {
	exists(AssignExpr obj_0 | obj_0=target_2.getExpr() |
		exists(SubExpr obj_1 | obj_1=obj_0.getRValue() |
			exists(FunctionCall obj_2 | obj_2=obj_1.getLeftOperand() |
				obj_2.getTarget().hasName("blkstol2")
				and obj_2.getArgument(0).(VariableAccess).getTarget().getType().hasName("s64")
			)
			and obj_1.getRightOperand().(Literal).getValue()="1"
		)
		and obj_0.getLValue().(VariableAccess).getTarget()=vl2nb_1582
	)
}

predicate func_3(Variable vl2nb_1582, ExprStmt target_3) {
	exists(AssignExpr obj_0 | obj_0=target_3.getExpr() |
		exists(BinaryBitwiseOperation obj_1 | obj_1=obj_0.getRValue() |
			obj_1.getLeftOperand().(Literal).getValue()="1"
			and obj_1.getRightOperand().(VariableAccess).getTarget()=vl2nb_1582
		)
		and obj_0.getLValue().(VariableAccess).getTarget().getType().hasName("s64")
	)
}

from Function func, Variable vl2nb_1582, EqualityOperation target_1, ExprStmt target_2, ExprStmt target_3
where
not func_0(vl2nb_1582, target_1, target_2, target_3)
and func_1(func, target_1)
and func_2(vl2nb_1582, target_2)
and func_3(vl2nb_1582, target_3)
and vl2nb_1582.getType().hasName("int")
and vl2nb_1582.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
