/**
 * @name linux-de5494af4815a4c9328536c72741229b7de88e7f-mbochs_dev_init
 * @id cpp/linux/de5494af4815a4c9328536c72741229b7de88e7f/mbochs-dev-init
 * @description linux-de5494af4815a4c9328536c72741229b7de88e7f-samples/vfio-mdev/mbochs.c-mbochs_dev_init CVE-2021-3736
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(ExprStmt target_1, Function func) {
exists(ExprStmt target_0 |
	target_0.getExpr().(FunctionCall).getTarget().hasName("atomic_set")
	and target_0.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getType().hasName("atomic_t")
	and target_0.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getType().hasName("int")
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation()))
}

predicate func_1(Function func, ExprStmt target_1) {
	target_1.getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("int")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("alloc_chrdev_region")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(VariableAccess).getTarget().getType().hasName("dev_t")
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(Literal).getValue()="0"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(2).(AddExpr).getValue()="1048576"
	and target_1.getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(StringLiteral).getValue()="mbochs"
	and target_1.getEnclosingFunction() = func
}

from Function func, ExprStmt target_1
where
not func_0(target_1, func)
and func_1(func, target_1)
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
