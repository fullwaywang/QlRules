/**
 * @name linux-c03aa9f6e1f938618e6db2e23afef0574efeeb65-__udf_read_inode
 * @id cpp/linux/c03aa9f6e1f938618e6db2e23afef0574efeeb65/--udf-read-inode
 * @description linux-c03aa9f6e1f938618e6db2e23afef0574efeeb65-fs/udf/inode.c-__udf_read_inode CVE-2014-6410
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Function func, Initializer target_0) {
	target_0.getExpr().(Literal).getValue()="0"
	and target_0.getExpr().getEnclosingFunction() = func
}

predicate func_1(Parameter vinode_1273, LogicalAndExpr target_16, ExprStmt target_19, FunctionCall target_1) {
	target_1.getTarget().hasName("__udf_read_inode")
	and not target_1.getTarget().hasName("make_bad_inode")
	and target_1.getArgument(0).(VariableAccess).getTarget()=vinode_1273
	and target_16.getRightOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_1.getArgument(0).(VariableAccess).getLocation())
	and target_1.getArgument(0).(VariableAccess).getLocation().isBefore(target_19.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getLocation())
}

predicate func_2(Function func, Literal target_2) {
	target_2.getValue()="0"
	and not target_2.getValue()="1024"
	and target_2.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
	and target_2.getEnclosingFunction() = func
}

predicate func_3(Function func, Literal target_3) {
	target_3.getValue()="261"
	and not target_3.getValue()="1024"
	and target_3.getParent().(EQExpr).getParent().(LogicalOrExpr).getLeftOperand() instanceof EqualityOperation
	and target_3.getEnclosingFunction() = func
}

predicate func_4(Variable vnbh_1320, FunctionCall target_4) {
	target_4.getTarget().hasName("brelse")
	and not target_4.getTarget().hasName("_udf_err")
	and target_4.getArgument(0).(VariableAccess).getTarget()=vnbh_1320
}

predicate func_6(BlockStmt target_20, Function func) {
exists(RelationalOperation target_6 |
	 (target_6 instanceof GTExpr or target_6 instanceof LTExpr)
	and target_6.getGreaterOperand().(PrefixIncrExpr).getOperand().(VariableAccess).getType().hasName("unsigned int")
	and target_6.getLesserOperand().(Literal).getValue()="1024"
	and target_6.getParent().(IfStmt).getThen()=target_20
	and target_6.getEnclosingFunction() = func)
}

predicate func_9(LogicalAndExpr target_16, Function func) {
exists(GotoStmt target_9 |
	target_9.getName() ="reread"
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getThen().(BlockStmt).getStmt(4)=target_9
	and target_9.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
	and target_9.getEnclosingFunction() = func)
}

predicate func_10(Variable vbh_1275, LogicalOrExpr target_17, ExprStmt target_10) {
	target_10.getExpr().(FunctionCall).getTarget().hasName("brelse")
	and target_10.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vbh_1275
	and target_10.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_11(Variable vibh_1315, LogicalOrExpr target_17, ExprStmt target_11) {
	target_11.getExpr().(FunctionCall).getTarget().hasName("brelse")
	and target_11.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vibh_1315
	and target_11.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_12(Variable vie_1322, ValueFieldAccess target_12) {
	target_12.getTarget().getName()="extLength"
	and target_12.getQualifier().(PointerFieldAccess).getTarget().getName()="indirectICB"
	and target_12.getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vie_1322
}

predicate func_13(Parameter vinode_1273, PointerFieldAccess target_13) {
	target_13.getTarget().getName()="i_sb"
	and target_13.getQualifier().(VariableAccess).getTarget()=vinode_1273
	and target_13.getParent().(FunctionCall).getParent().(AssignExpr).getRValue() instanceof FunctionCall
}

predicate func_14(Variable viinfo_1279, Variable vloc_1321, LogicalOrExpr target_17, ExprStmt target_14) {
	target_14.getExpr().(FunctionCall).getTarget().hasName("memcpy")
	and target_14.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getTarget().getName()="i_location"
	and target_14.getExpr().(FunctionCall).getArgument(0).(AddressOfExpr).getOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=viinfo_1279
	and target_14.getExpr().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vloc_1321
	and target_14.getExpr().(FunctionCall).getArgument(2).(SizeofTypeOperator).getType() instanceof LongType
	and target_14.getExpr().(FunctionCall).getArgument(2).(SizeofTypeOperator).getValue()="8"
	and target_14.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_17
}

predicate func_16(Parameter vinode_1273, Variable vident_1278, Variable vnbh_1320, Variable vloc_1321, BlockStmt target_21, LogicalAndExpr target_16) {
	target_16.getLeftOperand() instanceof ValueFieldAccess
	and target_16.getRightOperand().(AssignExpr).getLValue().(VariableAccess).getTarget()=vnbh_1320
	and target_16.getRightOperand().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("udf_read_ptagged")
	and target_16.getRightOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_16.getRightOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_1273
	and target_16.getRightOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(1).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vloc_1321
	and target_16.getRightOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(2) instanceof Literal
	and target_16.getRightOperand().(AssignExpr).getRValue().(FunctionCall).getArgument(3).(AddressOfExpr).getOperand().(VariableAccess).getTarget()=vident_1278
	and target_16.getParent().(IfStmt).getThen()=target_21
}

predicate func_17(Variable vident_1278, BlockStmt target_20, LogicalOrExpr target_17) {
	target_17.getLeftOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vident_1278
	and target_17.getLeftOperand().(EqualityOperation).getRightOperand() instanceof Literal
	and target_17.getRightOperand().(EqualityOperation).getLeftOperand().(VariableAccess).getTarget()=vident_1278
	and target_17.getRightOperand().(EqualityOperation).getRightOperand().(Literal).getValue()="266"
	and target_17.getParent().(IfStmt).getThen()=target_20
}

predicate func_18(Variable vnbh_1320, LogicalAndExpr target_16, ExprStmt target_18) {
	target_18.getExpr().(FunctionCall).getTarget().hasName("brelse")
	and target_18.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vnbh_1320
	and target_18.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_16
}

predicate func_19(Parameter vinode_1273, ExprStmt target_19) {
	target_19.getExpr().(FunctionCall).getTarget().hasName("_udf_err")
	and target_19.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="i_sb"
	and target_19.getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinode_1273
	and target_19.getExpr().(FunctionCall).getArgument(1).(VariableAccess).getTarget().getType() instanceof ArrayType
	and target_19.getExpr().(FunctionCall).getArgument(2).(StringLiteral).getValue()="unsupported strategy type: %d\n"
	and target_19.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getTarget().getName()="strategyType"
	and target_19.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getTarget().getName()="icbTag"
	and target_19.getExpr().(FunctionCall).getArgument(3).(ValueFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget().getType().hasName("fileEntry *")
}

predicate func_20(Function func, BlockStmt target_20) {
	target_20.getStmt(0) instanceof ExprStmt
	and target_20.getStmt(1) instanceof ExprStmt
	and target_20.getStmt(2) instanceof ExprStmt
	and target_20.getStmt(3).(ExprStmt).getExpr() instanceof FunctionCall
	and target_20.getStmt(4).(ExprStmt).getExpr() instanceof FunctionCall
	and target_20.getEnclosingFunction() = func
}

predicate func_21(Function func, BlockStmt target_21) {
	target_21.getStmt(0).(IfStmt).getCondition() instanceof LogicalOrExpr
	and target_21.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(0) instanceof ExprStmt
	and target_21.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(1) instanceof ExprStmt
	and target_21.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(2) instanceof ExprStmt
	and target_21.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(3).(ExprStmt).getExpr() instanceof FunctionCall
	and target_21.getStmt(0).(IfStmt).getThen().(BlockStmt).getStmt(4).(ExprStmt).getExpr() instanceof FunctionCall
	and target_21.getEnclosingFunction() = func
}

from Function func, Parameter vinode_1273, Variable vbh_1275, Variable vident_1278, Variable viinfo_1279, Variable vibh_1315, Variable vnbh_1320, Variable vloc_1321, Variable vie_1322, Initializer target_0, FunctionCall target_1, Literal target_2, Literal target_3, FunctionCall target_4, ExprStmt target_10, ExprStmt target_11, ValueFieldAccess target_12, PointerFieldAccess target_13, ExprStmt target_14, LogicalAndExpr target_16, LogicalOrExpr target_17, ExprStmt target_18, ExprStmt target_19, BlockStmt target_20, BlockStmt target_21
where
func_0(func, target_0)
and func_1(vinode_1273, target_16, target_19, target_1)
and func_2(func, target_2)
and func_3(func, target_3)
and func_4(vnbh_1320, target_4)
and not func_6(target_20, func)
and not func_9(target_16, func)
and func_10(vbh_1275, target_17, target_10)
and func_11(vibh_1315, target_17, target_11)
and func_12(vie_1322, target_12)
and func_13(vinode_1273, target_13)
and func_14(viinfo_1279, vloc_1321, target_17, target_14)
and func_16(vinode_1273, vident_1278, vnbh_1320, vloc_1321, target_21, target_16)
and func_17(vident_1278, target_20, target_17)
and func_18(vnbh_1320, target_16, target_18)
and func_19(vinode_1273, target_19)
and func_20(func, target_20)
and func_21(func, target_21)
and vinode_1273.getType().hasName("inode *")
and vbh_1275.getType().hasName("buffer_head *")
and vident_1278.getType().hasName("uint16_t")
and viinfo_1279.getType().hasName("udf_inode_info *")
and vibh_1315.getType().hasName("buffer_head *")
and vnbh_1320.getType().hasName("buffer_head *")
and vloc_1321.getType().hasName("kernel_lb_addr")
and vie_1322.getType().hasName("indirectEntry *")
and vinode_1273.getFunction() = func
and vbh_1275.(LocalVariable).getFunction() = func
and vident_1278.(LocalVariable).getFunction() = func
and viinfo_1279.(LocalVariable).getFunction() = func
and vibh_1315.(LocalVariable).getFunction() = func
and vnbh_1320.(LocalVariable).getFunction() = func
and vloc_1321.(LocalVariable).getFunction() = func
and vie_1322.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
