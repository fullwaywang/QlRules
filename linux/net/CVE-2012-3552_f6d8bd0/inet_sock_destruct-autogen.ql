/**
 * @name linux-f6d8bd051c391c1c0458a30b2a7abcd939329259-inet_sock_destruct
 * @id cpp/linux/f6d8bd051c391c1c0458a30b2a7abcd939329259/inet-sock-destruct
 * @description linux-f6d8bd051c391c1c0458a30b2a7abcd939329259-net/ipv4/af_inet.c-inet_sock_destruct CVE-2012-3552
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vinet_134) {
	exists(StmtExpr target_0 |
		target_0.getStmt().(BlockStmt).getStmt(0).(DoStmt).getCondition() instanceof Literal
		and target_0.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerFieldAccess).getTarget().getName()="inet_opt"
		and target_0.getStmt().(BlockStmt).getStmt(2).(ExprStmt).getExpr().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_134
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="opt"
		and target_0.getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vinet_134)
}

predicate func_1(Variable vinet_134, VariableAccess target_1) {
		target_1.getTarget()=vinet_134
		and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("kfree")
		and target_1.getParent().(PointerFieldAccess).getParent().(FunctionCall).getParent().(ExprStmt).getExpr().(FunctionCall).getArgument(0).(PointerFieldAccess).getTarget().getName()="opt"
}

predicate func_2(Variable vinet_134, PointerFieldAccess target_2) {
		target_2.getTarget().getName()="opt"
		and target_2.getQualifier().(VariableAccess).getTarget()=vinet_134
}

from Function func, Variable vinet_134, VariableAccess target_1, PointerFieldAccess target_2
where
not func_0(vinet_134)
and func_1(vinet_134, target_1)
and func_2(vinet_134, target_2)
and vinet_134.getType().hasName("inet_sock *")
and vinet_134.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
