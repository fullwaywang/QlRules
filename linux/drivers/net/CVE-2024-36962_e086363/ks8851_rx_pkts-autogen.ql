/**
 * @name linux-e0863634bf9f7cf36291ebb5bfa2d16632f79c49-ks8851_rx_pkts
 * @id cpp/linux/e0863634bf9f7cf36291ebb5bfa2d16632f79c49/ks8851-rx-pkts
 * @description linux-e0863634bf9f7cf36291ebb5bfa2d16632f79c49-drivers/net/ethernet/micrel/ks8851_common.c-ks8851_rx_pkts CVE-2024-36962
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Variable vskb_244) {
exists(FunctionCall target_0 |
	target_0.getTarget().hasName("__skb_queue_tail")
	and target_0.getArgument(0).(VariableAccess).getType().hasName("sk_buff_head *")
	and target_0.getArgument(1).(VariableAccess).getTarget()=vskb_244
)
}

predicate func_1(Variable vskb_244, VariableAccess target_1) {
	target_1.getTarget()=vskb_244
	and target_1.getParent().(FunctionCall).getParent().(ExprStmt).getExpr() instanceof FunctionCall
}

predicate func_2(Variable vskb_244, FunctionCall target_2) {
	target_2.getTarget().hasName("__netif_rx")
	and target_2.getArgument(0).(VariableAccess).getTarget()=vskb_244
}

from Function func, Variable vskb_244, VariableAccess target_1, FunctionCall target_2
where
not func_0(vskb_244)
and func_1(vskb_244, target_1)
and func_2(vskb_244, target_2)
and vskb_244.getType().hasName("sk_buff *")
and vskb_244.(LocalVariable).getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
