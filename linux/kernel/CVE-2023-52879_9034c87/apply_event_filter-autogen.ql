/**
 * @name linux-9034c87d61be8cff989017740a91701ac8195a1d-apply_event_filter
 * @id cpp/linux/9034c87d61be8cff989017740a91701ac8195a1d/apply-event-filter
 * @description linux-9034c87d61be8cff989017740a91701ac8195a1d-kernel/trace/trace_events_filter.c-apply_event_filter CVE-2023-52879
 * @kind problem
 * @problem.severity error
 * @tags security
 */

import cpp

predicate func_0(Parameter vfile_2346, IfStmt target_1, ExprStmt target_2, Function func) {
exists(IfStmt target_0 |
	target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getTarget().getName()="flags"
	and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getTarget()=vfile_2346
	and target_0.getThen().(ReturnStmt).getExpr().(UnaryMinusExpr).getValue()="-19"
	and func.getEntryPoint().(BlockStmt).getAStmt()=target_0
	and target_0.getLocation().isBefore(target_1.getLocation())
	and target_0.getCondition().(BitwiseAndExpr).getLeftOperand().(PointerFieldAccess).getQualifier().(VariableAccess).getLocation().isBefore(target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getLocation()))
}

predicate func_1(Parameter vfile_2346, IfStmt target_1) {
	target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getTarget().hasName("strcmp")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("strstrip")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("char *")
	and target_1.getCondition().(NotExpr).getOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()="0"
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getTarget().hasName("filter_disable")
	and target_1.getThen().(BlockStmt).getStmt(0).(ExprStmt).getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_2346
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getLValue().(VariableAccess).getTarget().getType().hasName("event_filter *")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getTarget().hasName("event_filter")
	and target_1.getThen().(BlockStmt).getStmt(1).(ExprStmt).getExpr().(AssignExpr).getRValue().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_2346
}

predicate func_2(Parameter vfile_2346, NotExpr target_3, ExprStmt target_2) {
	target_2.getExpr().(FunctionCall).getTarget().hasName("filter_disable")
	and target_2.getExpr().(FunctionCall).getArgument(0).(VariableAccess).getTarget()=vfile_2346
	and target_2.getParent().(BlockStmt).getParent().(IfStmt).getCondition()=target_3
}

predicate func_3(Function func, NotExpr target_3) {
	target_3.getOperand().(FunctionCall).getTarget().hasName("strcmp")
	and target_3.getOperand().(FunctionCall).getArgument(0).(FunctionCall).getTarget().hasName("strstrip")
	and target_3.getOperand().(FunctionCall).getArgument(0).(FunctionCall).getArgument(0).(VariableAccess).getTarget().getType().hasName("char *")
	and target_3.getOperand().(FunctionCall).getArgument(1).(StringLiteral).getValue()="0"
	and target_3.getEnclosingFunction() = func
}

from Function func, Parameter vfile_2346, IfStmt target_1, ExprStmt target_2, NotExpr target_3
where
not func_0(vfile_2346, target_1, target_2, func)
and func_1(vfile_2346, target_1)
and func_2(vfile_2346, target_3, target_2)
and func_3(func, target_3)
and vfile_2346.getType().hasName("trace_event_file *")
and vfile_2346.getFunction() = func
select func, func.getFile().toString() + ":" + func.getLocation().getStartLine().toString()
